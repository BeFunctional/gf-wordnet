concrete WordNetPor of WordNet = CatPor ** open ConstructionPor, GrammarPor, ParadigmsPor, Prelude in {

flags
  coding=utf8 ;

lin aa_2_N = variants {mkN "AA" ; mkN "Anonymous" ; } ; --*
lin aachen_PN = variants {mkPN "Aachen" ; mkPN "Aquisgrano" ; } ; --*
lin aardvark_N = variants {mkN "aardvark" ; mkN "Aard-vark" ; mkN "aardwark" ; mkN "afer" ; mkN "bear" ; mkN "porco-da-terra" ; mkN "timbo" ; } ; --*
lin aardwolf_N = variants {mkN "cristata" ; mkN "Lobo" ; } ; --*
lin aarhus_PN = variants {mkPN "Arhus" ; mkPN "Århus" ; } ; --*
lin abaca_1_N = variants {mkN "abaca" ; mkN "hemp" ; } ; --*
lin aback_Adv = variants {mkAdv "atraz" ; mkAdv "detrás" ; mkAdv "pelo" ; mkAdv "por" ; } ; --*
lin abacus_1_N = mkN "ábaco" ; --*
lin abacus_2_N = variants {mkN "Abaco" ; mkN "ábaco" ; } ; --*
lin abaft_Adv = variants {mkAdv "pela" ; mkAdv "popa" ; } ; --*
lin abalone_N = variants {mkN "abalone" ; mkN "molusco" ; } ; --*
lin abampere_N = mkN "abampère" ; --*
lin abandon_1_V2 = mkV2 (mkV "abandonar") ; --*
lin abandon_2_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "up") ; } ; --*
lin abandon_3_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desocupar") ; mkV2 (mkV "evacuar") ; } ; --*
lin abandon_4_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "largar") ; mkV2 (mkV "up") ; } ; --*
lin abandon_5_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desamparar") ; mkV2 (mkV "desertar") ; } ; --*
lin abandonment_1_N = variants {mkN "abandono" ; mkN "desamparo" ; mkN "deserção" ; } ; --*
lin abandonment_2_N = mkN "deserção" ; --*
lin abandonment_3_N = mkN "abandono" ; --*
lin abasement_1_N = variants {mkN "aviltamento" ; mkN "decadência" ; mkN "rebaixe" ; } ; --*
lin abasement_2_N = mkN "humilhação" ; --*
lin abase_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "humilhar") ; mkV2 (mkV "mortificar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin abashment_N = variants {mkN "confusão" ; mkN "estorvo" ; mkN "óbice" ; mkN "perplexidade" ; mkN "vergonha" ; } ; --*
lin abash_V2 = variants {mkV2 (mkV "constrangir") ; mkV2 (mkV "descompor") ; mkV2 (mkV "embaraçar") ; mkV2 (mkV "envergonhar") ; mkV2 (mkV "inferiorizar") ; } ; --*
lin abasia_N = mkN "abasia" ; --*
lin abatable_A = mkA "annullavel" ; --*
lin abate_1_V2 = variants {mkV2 (mkV "deprimir") ; mkV2 (mkV "deprivar") ; mkV2 (mkV "desprover") ; mkV2 (mkV "diminuir") ; mkV2 (mkV "embotar") ; mkV2 (mkV "minguar") ; mkV2 (mkV "reduzir") ; } ; --*
lin abate_1_V = variants {mkV "deprimir" ; mkV "deprivar" ; mkV "desprover" ; mkV "diminuir" ; mkV "embotar" ; mkV "minguar" ; mkV "reduzir" ; } ; --*
lin abate_2_V = variants {mkV "abater" ; mkV "amainar" ; mkV "away" ; mkV "enfraquecer" ; mkV "off" ; mkV "up" ; } ; --*
lin abatement_1_N = variants {mkN "hiato" ; mkN "suspensão" ; } ; --*
lin abatement_2_N = mkN "extenuação" ; --*
lin abattis_1_N = mkN "abatis" ; --*
lin abattoir_N = variants {mkN "abatedouro" ; mkN "matadouro" ; } ; --*
lin abaxial_A = mkA "dorsal" ; --*
lin abbacy_N = variants {mkN "abadia" ; mkN "abbadia" ; mkN "jurisdicção" ; mkN "privilegios" ; } ; --*
lin abbatial_A = variants {mkA "abacial" ; mkA "abbacial" ; } ; --*
lin abbe_N = mkN "abbade" ; --*
lin abbess_N = variants {mkN "abadessa" ; mkN "abbadessa" ; mkN "superior" ; } ; --*
lin abbey_1_N = mkN "abadia" ; --*
lin abbey_2_N = mkN "abadia" ; --*
lin abbey_3_N = mkN "abadia" ; --*
lin abbot_N = variants {mkN "abade" ; mkN "Arquimandrita" ; } ; --*
lin abbreviate_1_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin abbreviate_2_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "encurtar") ; } ; --*
lin abbreviation_1_N = variants {mkN "abreviação" ; mkN "abreviatura" ; } ; --*
lin abbreviation_2_N = variants {mkN "abreviação" ; mkN "abreviatura" ; } ; --*
lin abc_N = variants {mkN "abc" ; mkN "abecê" ; mkN "principle" ; mkN "rudiment" ; } ; --*
lin abdicable_A = variants {mkA "abdicável" ; mkA "renunciável" ; } ; --*
lin abdicate_V = variants {mkV "abdicar" ; mkV "abrir" ; mkV "renunciar" ; } ; --*
lin abdication_1_N = variants {mkN "abdicação" ; mkN "down" ; } ; --*
lin abdication_2_N = variants {mkN "abdicação" ; mkN "down" ; } ; --*
lin abdomen_1_N = variants {mkN "abdome" ; mkN "abdómen" ; mkN "abdômen" ; mkN "barriga" ; mkN "estômago" ; mkN "tronco" ; mkN "ventre" ; } ; --*
lin abdomen_2_N = variants {mkN "abdómen" ; mkN "cavity" ; } ; --*
lin abdominal_A = variants {mkA "abdominal" ; mkA "ventral" ; } ; --*
lin abdominocentesis_N = mkN "paracentese" ; --*
lin abdominoplasty_N = variants {mkN "Abdominoplastia" ; mkN "tuck" ; } ; --*
lin abdominous_A = variants {mkA "abdominal" ; mkA "pançudo" ; } ; --*
lin abducent_N = variants {mkN "abducens" ; mkN "cranial" ; mkN "nerve" ; mkN "Nervo" ; } ; --*
lin abduction_1_N = variants {mkN "abdução" ; mkN "abducção" ; mkN "rapto" ; mkN "seqüestro" ; } ; --*
lin abduction_2_N = variants {mkN "abdução" ; mkN "abducção" ; } ; --*
lin abductor_1_N = variants {mkN "raptor" ; mkN "sequestrador" ; mkN "seqüestrador" ; } ; --*
lin abductor_2_N = variants {mkN "abdutor" ; mkN "muscle" ; } ; --*
lin abduct_V2 = variants {mkV2 (mkV "abduzir") ; mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; mkV2 (mkV "seqüestrar") ; } ; --*
lin abecedarian_2_N = variants {mkN "Abecedarianismo" ; mkN "abecedarianos" ; } ; --*
lin abelmosk_N = variants {mkN "Abelmosco" ; mkN "mallow" ; mkN "moschatus" ; } ; --*
lin aberdare_PN = mkPN "Aberdare" ; --*
lin aberdeen_4_PN = mkPN "Aberdeen" ; --*
lin aberrance_1_N = mkN "aberração" ; --*
lin aberrant_A = mkA "aberrante" ; --*
lin aberrant_N = mkN "aberrante" ; --*
lin aberration_1_N = mkN "aberração" ; --*
lin aberration_3_N = variants {mkN "Aberração" ; mkN "aberration" ; } ; --*
lin abettor_1_N = mkN "cúmplice" ; --*
lin abet_V2 = variants {mkV2 (mkV "incitar") ; mkV2 (mkV "instigar") ; } ; --*
lin abet_V = variants {mkV "incitar" ; mkV "instigar" ; } ; --*
lin abeyance_N = variants {mkN "pendência" ; mkN "suspensão" ; } ; --*
lin abhorrence_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "detestação" ; mkN "execração" ; mkN "horror" ; mkN "ódio" ; mkN "repugnância" ; mkN "repulsa" ; mkN "repulsão" ; } ; --*
lin abhorrent_A = variants {mkA "abominoso" ; mkA "aborrecivel" ; mkA "repugnante" ; } ; --*
lin abhor_V2 = variants {mkV2 (mkV "abominar") ; mkV2 (mkV "detestar") ; mkV2 (mkV "execrar") ; mkV2 (mkV "odiar") ; } ; --*
lin abidance_1_N = mkN "conformidade" ; --*
lin abidance_2_N = mkN "habitação" ; --*
lin abide_2_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin abide_by_1_V2 = variants {mkV2 (mkV "acatar") ; mkV2 (mkV "by") ; mkV2 (mkV "seguir") ; } ; --*
lin abide_by_2_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "homenagear") ; mkV2 (mkV "honrar") ; mkV2 (mkV "prestigiar") ; mkV2 (mkV "respeitar") ; } ; --*
lin ability_1_N = variants {mkN "abilidade" ; mkN "capacidade" ; mkN "habilidade" ; } ; --*
lin ability_2_N = variants {mkN "capacidade" ; mkN "faculdade" ; mkN "habilidade" ; mkN "talento" ; } ; --*
lin ab_initio_Adv = variants {mkAdv "inicialmente" ; mkAdv "initio" ; mkAdv "primeiramente" ; } ; --*
lin abiogenesis_N = variants {mkN "abiogenêse" ; mkN "abiogênese" ; mkN "abiogenesia" ; mkN "generation" ; } ; --*
lin abject_1_A = variants {mkA "abjeto" ; mkA "miserável" ; } ; --*
lin abject_2_A = mkA "abjeto" ; --*
lin abjection_N = variants {mkN "aviltamento" ; mkN "decadência" ; mkN "rebaixe" ; } ; --*
lin abjuration_N = mkN "abjuração" ; --*
lin abjure_V2 = variants {mkV2 (mkV "abjurar") ; mkV2 (mkV "recantar") ; mkV2 (mkV "renunciar") ; } ; --*
lin ablation_1_N = variants {mkN "ablação" ; mkN "extirpação" ; mkN "out" ; } ; --*
lin ablation_2_N = mkN "Ablação" ; --*
lin ablative_1_A = mkA "ablativo" ; --*
lin ablative_2_A = mkA "ablativo" ; --*
lin ablative_N = variants {mkN "ablativo" ; mkN "case" ; } ; --*
lin ablaze_1_A = variants {mkA "em" ; mkA "flamejante" ; } ; --*
lin ablaze_4_A = variants {mkA "ardente" ; mkA "fire" ; } ; --*
lin able_2_A = mkA "capaz" ; --*
lin able_3_A = mkA "capaz" ; --*
lin able_4_A = mkA "são" ; --*
lin able_bodied_A = mkA "são" ; --*
lin ablution_N = mkN "ablução" ; --*
lin abnegation_1_N = mkN "desprendimento" ; --*
lin abnegation_2_N = mkN "abnegação" ; --*
lin abnormal_1_A = mkA "anormal" ; --*
lin abnormality_1_N = mkN "anormalidade" ; --*
lin abnormality_2_N = variants {mkN "anormalidade" ; mkN "defectiveness" ; } ; --*
lin abnormality_3_N = mkN "anormalidade" ; --*
lin abnormality_4_N = variants {mkN "anormalidade" ; mkN "Anormalidade" ; mkN "irregularidade" ; } ; --*
lin aboard_1_Adv = variants {mkAdv "a" ; mkAdv "board" ; } ; --*
lin aboard_3_Adv = variants {mkAdv "ao" ; mkAdv "aoladode" ; mkAdv "com" ; mkAdv "junto" ; } ; --*
lin abode_1_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "residência" ; } ; --*
lin abode_2_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "habitação" ; mkN "house" ; mkN "lar" ; mkN "morada" ; mkN "moradia" ; mkN "residência" ; } ; --*
lin abolish_V2 = variants {mkV2 (mkV "abolir") ; mkV2 (mkV "rid") ; } ; --*
lin abolitionism_N = variants {mkN "abolicionismo" ; mkN "Abolicionismo" ; } ; --*
lin abolitionist_N = mkN "abolicionista" ; --*
lin abolition_N = variants {mkN "abolição" ; mkN "abolimento" ; } ; --*
lin abomasum_N = variants {mkN "abomaso" ; mkN "stomach" ; } ; --*
lin a_bomb_N = variants {mkN "bomb" ; mkN "bomba" ; } ; --*
lin abominable_1_A = variants {mkA "abominável" ; mkA "detestável" ; mkA "Detestável" ; mkA "execrável" ; mkA "odioso" ; } ; --*
lin abominable_2_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin abominate_V2 = variants {mkV2 (mkV "abominar") ; mkV2 (mkV "detestar") ; mkV2 (mkV "execrar") ; mkV2 (mkV "odiar") ; } ; --*
lin abomination_1_N = mkN "algo" ; --*
lin abomination_2_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "detestação" ; mkN "execração" ; mkN "horror" ; mkN "ódio" ; mkN "repugnância" ; mkN "repulsa" ; mkN "repulsão" ; } ; --*
lin abomination_3_N = mkN "abominação" ; --*
lin aboriginal_1_A = variants {mkA "aborígene" ; mkA "indígena" ; mkA "nativo" ; } ; --*
lin aboriginal_2_A = variants {mkA "primitivo" ; mkA "primordial" ; } ; --*
lin aborigine_1_N = mkN "autóctone" ; --*
lin aborigine_2_N = variants {mkN "aborígene" ; mkN "Aborigine" ; mkN "aborígine" ; mkN "Australian" ; } ; --*
lin abort_1_V2 = variants {mkV2 (mkV "abortar") ; mkV2 (mkV "interromper") ; mkV2 (mkV "suspender") ; } ; --*
lin abort_3_V2 = mkV2 (mkV "abortar") ; --*
lin abort_3_V = mkV "abortar" ; --*
lin abortion_1_N = variants {mkN "abortação" ; mkN "abortamento" ; mkN "aborto" ; } ; --*
lin abortion_2_N = variants {mkN "abortamento" ; mkN "aborto" ; } ; --*
lin abortionistFem_N = mkN "aborteiro" ; --*
lin abortionistMasc_N = mkN "aborteiro" ; --*
lin abortive_A = variants {mkA "abortado" ; mkA "abortivo" ; mkA "fracassado" ; mkA "frustrado" ; } ; --*
lin abort_N = mkN "aborto" ; --*
lin abound_1_V = variants {mkV "abundar" ; mkV "ser" ; } ; --*
lin about_1_Adv = variants {mkAdv "about" ; mkAdv "aproximadamente" ; mkAdv "cerca" ; mkAdv "or" ; mkAdv "so" ; mkAdv "to" ; } ; --*
lin about_2_Adv = mkAdv "por" ; --*
lin about_3_Adv = mkAdv "por" ; --*
lin about_7_Adv = variants {mkAdv "perto" ; mkAdv "por" ; mkAdv "quase" ; mkAdv "virtualmente" ; } ; --*
lin about_AdN = variants {mkAdN "about" ; mkAdN "aproximadamente" ; mkAdN "cerca" ; mkAdN "or" ; mkAdN "so" ; mkAdN "to" ; } ; --*
lin about_face_2_N = variants {mkN "change" ; mkN "conversão" ; mkN "reviravolta" ; } ; --*
lin about_face_2_V = variants {mkV "mudar" ; mkV "virar" ; } ; --*
lin above_1_Adv = mkAdv "a" ; --*
lin above_2_Adv = variants {mkAdv "a" ; mkAdv "acima" ; mkAdv "up" ; } ; --*
lin above_mentioned_A = mkA "acima" ; --*
lin above_named_A = mkA "acima" ; --*
lin abracadabra_N = mkN "abracadabra" ; --*
lin abrachia_N = mkN "abraquia" ; --*
lin abrade_2_V2 = mkV2 (mkV "esfregar") ; --*
lin abraham_PN = variants {mkPN "Abraão" ; mkPN "Abrão" ; } ; --*
lin abrasion_1_N = mkN "abrasão" ; --*
lin abrasion_2_N = mkN "abrasão" ; --*
lin abrasion_3_N = mkN "abrasão" ; --*
lin abrasive_1_A = mkA "abrasivo" ; --*
lin abrasive_N = variants {mkN "abrasivo" ; mkN "material" ; } ; --*
lin abrasiveness_2_N = mkN "abrasividade" ; --*
lin abreast_Adv = variants {mkAdv "lado" ; mkAdv "ombro" ; } ; --*
lin abridge_1_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin abridge_2_V2 = mkV2 (mkV "restringir") ; --*
lin abridgement_1_N = variants {mkN "abreviação" ; mkN "abreviatura" ; mkN "compendio" ; mkN "compêndio" ; mkN "resumo" ; mkN "sumário" ; } ; --*
lin abridger_N = mkN "abreviador" ; --*
lin abroad_1_Adv = variants {mkAdv "além-mar" ; mkAdv "ao" ; mkAdv "de" ; mkAdv "estrangeiro" ; mkAdv "exterior" ; mkAdv "no" ; mkAdv "ultramar" ; } ; --*
lin abroad_3_Adv = mkAdv "no" ; --*
lin abrocome_N = variants {mkN "Abrocomidae" ; mkN "chinchilla" ; mkN "rat" ; } ; --*
lin abrogate_V2 = variants {mkV2 (mkV "abolir") ; mkV2 (mkV "ab-rogar") ; mkV2 (mkV "anular") ; mkV2 (mkV "declarar") ; mkV2 (mkV "revogar") ; } ; --*
lin abrogation_N = variants {mkN "ab-rogação" ; mkN "anulação" ; } ; --*
lin abrogator_N = mkN "abrogador" ; --*
lin abrupt_1_A = variants {mkA "chocante" ; mkA "inopinado" ; } ; --*
lin abrupt_2_A = variants {mkA "abrupto" ; mkA "brusco" ; mkA "escarpado" ; mkA "repentino" ; } ; --*
lin abrupt_3_A = variants {mkA "abrupto" ; mkA "brusco" ; mkA "repentino" ; } ; --*
lin abscess_N = variants {mkN "abcesso" ; mkN "abscesso" ; mkN "apostema" ; } ; --*
lin abscissa_N = mkN "abscissa" ; --*
lin abscission_1_N = mkN "Abscisão" ; --*
lin abscond_V = variants {mkV "desaparecer" ; mkV "escapar" ; mkV "esconder-se" ; mkV "off" ; mkV "sumir" ; } ; --*
lin absence_1_N = variants {mkN "ausência" ; mkN "carência" ; mkN "falta" ; } ; --*
lin absence_2_N = mkN "ausência" ; --*
lin absence_3_N = mkN "ausência" ; --*
lin absence_4_N = variants {mkN "ausência" ; mkN "seizure" ; } ; --*
lin absent_1_A = mkA "ausente" ; --*
lin absent_3_A = variants {mkA "abstraído" ; mkA "ausente" ; } ; --*
lin absenteeism_N = variants {mkN "absenteísmo" ; mkN "absentismo" ; } ; --*
lin absentee_N = variants {mkN "absentista" ; mkN "ausente" ; mkN "quem" ; } ; --*
lin absent_minded_A = variants {mkA "abstraído" ; mkA "ausente" ; } ; --*
lin absent_yourself_V = mkV "ausentar" ; --*
lin absinthe_1_N = variants {mkN "absinthium" ; mkN "absinto" ; mkN "love" ; mkN "man" ; mkN "wormwood" ; } ; --*
lin absinthe_2_N = variants {mkN "absíntio" ; mkN "absinto" ; mkN "Absinto" ; mkN "artemijem" ; mkN "erva-de-são-joão" ; mkN "losna" ; } ; --*
lin absolute_1_A = variants {mkA "absoluto" ; mkA "perfeito" ; } ; --*
lin absolute_2_A = variants {mkA "absoluto" ; mkA "completo" ; mkA "total" ; } ; --*
lin absolute_3_A = mkA "absoluto" ; --*
lin absolute_4_A = mkA "absoluto" ; --*
lin absolute_5_A = variants {mkA "absoluto" ; mkA "inviolável" ; } ; --*
lin absolute_N = mkN "absoluto" ; --*
lin absolution_2_N = variants {mkN "absolvição" ; mkN "of" ; } ; --*
lin absolutism_1_N = variants {mkN "despotismo" ; mkN "Despotismo" ; } ; --*
lin absolutism_2_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; mkN "rule" ; mkN "stalinismo" ; mkN "Stalinismo" ; } ; --*
lin absolutism_3_N = variants {mkN "absolutismo" ; mkN "totalitarismo" ; mkN "Totalitarismo" ; } ; --*
lin absolutism_4_N = mkN "autocracia" ; --*
lin absolutist_A = variants {mkA "absolutista" ; mkA "elitista" ; } ; --*
lin absolve_1_V2 = mkV2 (mkV "absolver") ; --*
lin absolve_2_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "deixar") ; mkV2 (mkV "eximir") ; mkV2 (mkV "exonerar") ; mkV2 (mkV "liberar") ; } ; --*
lin absorb_2_V2 = variants {mkV2 (mkV "assimilar") ; mkV2 (mkV "in") ; } ; --*
lin absorb_4_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin absorb_6_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; } ; --*
lin absorb_7_V2 = variants {mkV2 (mkV "focar") ; mkV2 (mkV "up") ; } ; --*
lin absorb_9_V2 = mkV2 (mkV "ocupar") ; --*
lin absorbency_N = mkN "absorbency" ; --*
lin absorbent_A = variants {mkA "absorvente" ; mkA "hidrófilo" ; } ; --*
lin absorbing_A = variants {mkA "absorvente" ; mkA "fascinante" ; } ; --*
lin absorption_1_N = variants {mkN "absorção" ; mkN "up" ; } ; --*
lin absorption_2_N = variants {mkN "absorção" ; mkN "Absorção" ; } ; --*
lin absorption_3_N = mkN "assimilação" ; --*
lin absorption_4_N = mkN "assimilação" ; --*
lin absorption_5_N = mkN "concentração" ; --*
lin absorption_6_N = mkN "preocupação" ; --*
lin absorptivity_N = variants {mkN "absortividade" ; mkN "factor" ; } ; --*
lin abstain_1_V = variants {mkV "abster" ; mkV "abster-se" ; } ; --*
lin abstain_2_V = variants {mkV "abster" ; mkV "abster-se" ; mkV "privar" ; mkV "privar-se" ; } ; --*
lin abstainer_1_N = mkN "asceta" ; --*
lin abstention_N = variants {mkN "abstenção" ; mkN "abstinência" ; } ; --*
lin abstinence_1_N = variants {mkN "abstenção" ; mkN "abstinência" ; } ; --*
lin abstinence_2_N = mkN "abstinência" ; --*
lin abstract_1_A = mkA "abstrato" ; --*
lin abstract_1_N = mkN "abstracção" ; --*
lin abstract_1_V2 = mkV2 (mkV "abstrair") ; --*
lin abstract_2_N = variants {mkN "resumo" ; mkN "sinopse" ; mkN "sumário" ; } ; --*
lin abstract_2_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin abstract_away_V = mkV "abstrair" ; --*
lin abstraction_1_N = mkN "abstracção" ; --*
lin abstraction_3_N = variants {mkN "generalização" ; mkN "Generalização" ; } ; --*
lin abstraction_6_N = variants {mkN "abstração" ; mkN "entity" ; mkN "idéia" ; } ; --*
lin abstractionism_1_N = variants {mkN "art" ; mkN "Arte" ; } ; --*
lin abstruse_A = variants {mkA "abstracto" ; mkA "abstrato" ; mkA "abstruso" ; mkA "recôndito" ; } ; --*
lin abstruseness_1_N = mkN "obscuridade" ; --*
lin absurd_1_A = mkA "absurda" ; --*
lin absurd_2_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin absurdity_1_N = variants {mkN "absurdez" ; mkN "absurdeza" ; mkN "absurdidade" ; mkN "absurdo" ; mkN "coisa" ; } ; --*
lin absurdity_2_N = mkN "absurdidade" ; --*
lin absurd_N = variants {mkN "absurd" ; mkN "absurdo" ; } ; --*
lin abulia_1_N = variants {mkN "abulia" ; mkN "Abulia" ; } ; --*
lin abundance_1_N = variants {mkN "abundância" ; mkN "fartura" ; } ; --*
lin abundant_A = variants {mkA "abundante" ; mkA "bastante" ; mkA "basto" ; mkA "copioso" ; mkA "farto" ; mkA "lauto" ; } ; --*
lin abuse_1_N = variants {mkN "abuso" ; mkN "injúria" ; } ; --*
lin abuse_1_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "destratar") ; mkV2 (mkV "maltratar") ; } ; --*
lin abuse_2_N = variants {mkN "injúria" ; mkN "insulto" ; } ; --*
lin abuse_2_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "desvirtuar") ; } ; --*
lin abuse_3_V2 = variants {mkV2 (mkV "injuriar") ; mkV2 (mkV "insultar") ; } ; --*
lin abuse_of_N2 = variants {mkN2 (mkN "abuso") noPrep ; mkN2 (mkN "uso") noPrep ; } ; --*
lin abuser_N = mkN "abusador" ; --*
lin abusive_1_A = mkA "injurioso" ; --*
lin abusive_2_A = variants {mkA "abusivo" ; mkA "fraudulento" ; } ; --*
lin abutment_2_N = mkN "contraforte" ; --*
lin abysmal_1_A = variants {mkA "abismal" ; mkA "abissal" ; } ; --*
lin abysm_N = mkN "abismo" ; --*
lin abyss_N = mkN "abismo" ; --*
lin acacia_N = mkN "acácia" ; --*
lin academic_1_A = variants {mkA "académico" ; mkA "acadêmico" ; } ; --*
lin academic_3_A = variants {mkA "pedante" ; mkA "petimetre" ; } ; --*
lin academicianFem_1_N = mkN "acadêmico" ; --*
lin academicianFem_3_N = variants {mkN "acadêmico" ; mkN "leitor" ; mkN "member" ; mkN "professor" ; } ; --*
lin academicianMasc_1_N = mkN "acadêmico" ; --*
lin academicianMasc_3_N = variants {mkN "acadêmico" ; mkN "leitor" ; mkN "member" ; mkN "professor" ; } ; --*
lin academic_N = variants {mkN "acadêmico" ; mkN "leitor" ; mkN "member" ; mkN "professor" ; } ; --*
lin academy_1_N = mkN "instituto" ; --*
lin academy_2_N = variants {mkN "academia" ; mkN "society" ; } ; --*
lin academy_3_N = variants {mkN "academia" ; mkN "escola" ; } ; --*
lin academy_4_N = mkN "academia" ; --*
lin acanthosis_N = mkN "acantose" ; --*
lin acanthus_N = variants {mkN "acanto" ; mkN "erva-gigante" ; } ; --*
lin acarid_N = mkN "ácaros" ; --*
lin acathexis_N = mkN "acatexia" ; --*
lin acaulescent_A = mkA "Acaule" ; --*
lin accede_1_V = variants {mkV "aceder" ; mkV "in" ; } ; --*
lin accede_3_V = variants {mkV "aquiescer" ; mkV "assentir" ; mkV "concordar" ; mkV "dizer" ; mkV "responder" ; } ; --*
lin accede_to_V2 = mkV2 (mkV "aceder") ; --*
lin accelerando_N = variants {mkN "accel" ; mkN "accelerando" ; } ; --*
lin accelerate_V2 = variants {mkV2 (mkV "acelerar") ; mkV2 (mkV "apressar") ; mkV2 (mkV "up") ; } ; --*
lin accelerate_V = variants {mkV "acelerar" ; mkV "agilizar" ; mkV "apressar" ; mkV "up" ; } ; --*
lin acceleration_1_N = mkN "aceleração" ; --*
lin acceleration_2_N = variants {mkN "aceleração" ; mkN "aumento" ; } ; --*
lin acceleration_3_N = mkN "aceleração" ; --*
lin accelerator_1_N = variants {mkN "acelerador" ; mkN "pedal" ; } ; --*
lin accelerator_3_N = mkN "catalisador" ; --*
lin accelerator_4_N = variants {mkN "accelerator" ; mkN "acelerador" ; mkN "Aceleradores" ; mkN "smasher" ; } ; --*
lin accelerometer_N = variants {mkN "Acelerómetro" ; mkN "Acelerômetro" ; } ; --*
lin accent_1_V2 = variants {mkV2 (mkV "acentuar") ; mkV2 (mkV "enfatizar") ; mkV2 (mkV "pontuar") ; } ; --*
lin accent_2_N = variants {mkN "acento" ; mkN "ênfase" ; mkN "tonicidade" ; } ; --*
lin accent_2_V2 = mkV2 (mkV "acentuar") ; --*
lin accent_3_N = variants {mkN "dialecto" ; mkN "dialeto" ; mkN "Dialetos" ; mkN "idioma" ; mkN "língua" ; } ; --*
lin accent_4_N = variants {mkN "acento" ; mkN "acentuação" ; mkN "ênfase" ; } ; --*
lin accent_5_N = variants {mkN "acento" ; mkN "mark" ; } ; --*
lin accentual_1_A = mkA "acentuado" ; --*
lin accentual_2_A = mkA "acentuado" ; --*
lin accentuate_1_V2 = variants {mkV2 (mkV "acentuar") ; mkV2 (mkV "enfatizar") ; mkV2 (mkV "pontuar") ; } ; --*
lin accentuate_2_V2 = mkV2 (mkV "acentuar") ; --*
lin accentuation_1_N = mkN "acentuação" ; --*
lin accept_11_V2 = mkV2 (mkV "aceitar") ; --*
lin accept_1_V2 = mkV2 (mkV "aceitar") ; --*
lin accept_2_V2 = mkV2 (mkV "aceitar") ; --*
lin accept_3_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "concordar") ; mkV2 (mkV "consentir") ; mkV2 (mkV "for") ; } ; --*
lin accept_4_V2 = mkV2 (mkV "aceitar") ; --*
lin accept_5_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "admitir") ; mkV2 (mkV "on") ; } ; --*
lin accept_7_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "engolir") ; mkV2 (mkV "with") ; } ; --*
lin accept_9_V2 = mkV2 (mkV "aceitar") ; --*
lin accept_9_V = mkV "aceitar" ; --*
lin acceptability_N = mkN "aceitabilidade" ; --*
lin acceptable_1_A = mkA "aceitável" ; --*
lin acceptable_2_A = mkA "aceitável" ; --*
lin acceptable_3_A = variants {mkA "aceitável" ; mkA "satisfatório" ; } ; --*
lin acceptable_4_A = mkA "aceitável" ; --*
lin acceptance_1_N = mkN "aceitação" ; --*
lin acceptance_2_N = variants {mkN "aceitação" ; mkN "adoção" ; mkN "adopção" ; } ; --*
lin acceptance_3_N = mkN "aceitação" ; --*
lin acceptance_6_N = mkN "tolerância" ; --*
lin acceptance_7_N = mkN "aceitação" ; --*
lin acceptation_1_N = mkN "aceitação" ; --*
lin acceptation_2_N = variants {mkN "acepção" ; mkN "meaning" ; mkN "sense" ; } ; --*
lin acceptation_3_N = variants {mkN "aceitação" ; mkN "adoção" ; mkN "adopção" ; } ; --*
lin accepted_A = variants {mkA "aceitado" ; mkA "aceito" ; mkA "reconhecido" ; } ; --*
lin access_1_N = variants {mkN "acesso" ; mkN "admitância" ; } ; --*
lin access_2_N = mkN "acesso" ; --*
lin access_2_V2 = variants {mkV2 (mkV "acessar") ; mkV2 (mkV "at") ; } ; --*
lin access_3_N = variants {mkN "abordagens" ; mkN "acesso" ; mkN "caminho" ; mkN "estrada" ; } ; --*
lin access_4_N = variants {mkN "code" ; mkN "código" ; } ; --*
lin access_6_N = mkN "acesso" ; --*
lin accessary_A = mkA "acessório" ; --*
lin accessary_N = mkN "cúmplice" ; --*
lin accessibility_1_N = variants {mkN "acessibilidade" ; mkN "disponibilidade" ; } ; --*
lin accessibility_2_N = variants {mkN "acessibilidade" ; mkN "Acessibilidade" ; } ; --*
lin accessible_1_A = mkA "acessível" ; --*
lin accessible_4_A = mkA "acessível" ; --*
lin accessible_to_A2 = variants {mkA2 (mkA "abordável") noPrep ; mkA2 (mkA "acessível") noPrep ; } ; --*
lin accession_3_N = mkN "aquisição" ; --*
lin accession_5_N = variants {mkN "acesso" ; mkN "admitância" ; } ; --*
lin accession_to_N2 = variants {mkN2 (mkN "aprovação") noPrep ; mkN2 (mkN "assentimento") noPrep ; } ; --*
lin accessory_1_N = mkN "acessório" ; --*
lin accessory_2_N = mkN "acessório" ; --*
lin accessory_3_N = mkN "cúmplice" ; --*
lin accessory_A = variants {mkA "auxiliar" ; mkA "secundário" ; mkA "subordinado" ; } ; --*
lin accessory_to_A2 = mkA2 (mkA "acessório") noPrep ; --*
lin accidence_N = variants {mkN "casualidade" ; mkN "morphology" ; } ; --*
lin accident_1_N = mkN "acidente" ; --*
lin accident_2_N = variants {mkN "acidente" ; mkN "event" ; } ; --*
lin accidental_N = mkN "acidente" ; --*
lin accidental_to_A2 = mkA2 (mkA "não") noPrep ; --*
lin accident_prone_A = variants {mkA "acidente-accident-prone" ; mkA "predisposto" ; } ; --*
lin acclaim_1_V2 = variants {mkV2 (mkV "aclamar") ; mkV2 (mkV "aplaudir") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "clamar") ; mkV2 (mkV "louvar") ; mkV2 (mkV "ovacionar") ; } ; --*
lin acclaim_2_V2 = variants {mkV2 (mkV "aclamar") ; mkV2 (mkV "aplaudir") ; mkV2 (mkV "bater") ; mkV2 (mkV "ovacionar") ; } ; --*
lin acclaim_N = variants {mkN "aclamação" ; mkN "aplauso" ; mkN "ovação" ; } ; --*
lin acclamation_N = variants {mkN "aclamação" ; mkN "aplauso" ; mkN "ovação" ; } ; --*
lin acclimate_V = variants {mkV "aclimar" ; mkV "aclimatar" ; } ; --*
lin acclimation_N = variants {mkN "aclimação" ; mkN "aclimatação" ; } ; --*
lin acclimatization_1_N = variants {mkN "aclimação" ; mkN "aclimatação" ; } ; --*
lin acclimatize_V = variants {mkV "aclimar" ; mkV "aclimatar" ; } ; --*
lin acclivity_N = variants {mkN "aclive" ; mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "subida" ; } ; --*
lin accolade_N = variants {mkN "galardão" ; mkN "prémio" ; mkN "Prémio" ; mkN "prêmio" ; mkN "Prêmios" ; } ; --*
lin accommodate_1_V2 = mkV2 (mkV "acomodar") ; --*
lin accommodate_2_V2 = variants {mkV2 (mkV "adaptar") ; mkV2 (mkV "adequar") ; mkV2 (mkV "ajustar") ; } ; --*
lin accommodate_3_V2 = variants {mkV2 (mkV "colmar") ; mkV2 (mkV "satisfazer") ; } ; --*
lin accommodate_4_V2 = mkV2 (mkV "acomodar") ; --*
lin accommodate_with_V3 = variants {mkV3 (mkV "ajustar") ; mkV3 (mkV "compatibilizar") ; mkV3 (mkV "conciliar") ; } ; --*
lin accommodation_1_N = mkN "ajustamento" ; --*
lin accommodation_3_N = mkN "acomodação" ; --*
lin accommodation_5_N = mkN "alojamento" ; --*
lin accommodation_6_N = mkN "Acomodação" ; --*
lin accommodative_1_A = mkA "prestável" ; --*
lin accompaniment_2_N = variants {mkN "accompaniment" ; mkN "acompanhamento" ; } ; --*
lin accompaniment_3_N = mkN "complemento" ; --*
lin accompaniment_4_N = mkN "acompanhamento" ; --*
lin accompanist_1_N = variants {mkN "acólito" ; mkN "acompanhador" ; mkN "acompanhante" ; } ; --*
lin accompany_1_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "to") ; mkV2 (mkV "with") ; } ; --*
lin accompany_2_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "seguir") ; } ; --*
lin accompany_3_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "along") ; } ; --*
lin accompany_4_V2 = variants {mkV2 (mkV "company") ; mkV2 (mkV "fazer") ; } ; --*
lin accomplice_N = mkN "cúmplice" ; --*
lin accomplish_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "cumprir") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "realizar") ; mkV2 (mkV "through") ; } ; --*
lin accomplish_2_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "chegar") ; mkV2 (mkV "efectuar") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "obter") ; mkV2 (mkV "realizar") ; } ; --*
lin accomplishable_A = variants {mkA "conquistável" ; mkA "realizável" ; } ; --*
lin accomplished_1_A = variants {mkA "cumplido" ; mkA "cumprido" ; mkA "realizado" ; } ; --*
lin accomplished_2_A = mkA "realizado" ; --*
lin accomplishment_1_N = variants {mkN "conquista" ; mkN "consumação" ; mkN "façanha" ; mkN "feito" ; mkN "realização" ; } ; --*
lin accomplishment_2_N = variants {mkN "habilidade" ; mkN "meta" ; mkN "talento" ; mkN "técnica" ; } ; --*
lin accord_1_N = variants {mkN "acordo" ; mkN "consenso" ; } ; --*
lin accord_1_V = variants {mkV "compatibilizar" ; mkV "concordar" ; mkV "estar" ; mkV "harmonizar" ; mkV "in" ; } ; --*
lin accord_2_N = variants {mkN "acordo" ; mkN "ajuste" ; mkN "concordância" ; mkN "conformidade" ; mkN "convenção" ; } ; --*
lin accord_2_V = variants {mkV "conceder" ; mkV "entregar" ; mkV "outorgar" ; } ; --*
lin accord_3_N = variants {mkN "acordo" ; mkN "convenção" ; mkN "convênio" ; mkN "pacto" ; mkN "tratado" ; } ; --*
lin accordance_1_N = variants {mkN "acordo" ; mkN "ajuste" ; mkN "concordância" ; mkN "conformidade" ; mkN "convenção" ; } ; --*
lin accordant_A = mkA "conforme" ; --*
lin accordingly_1_Adv = variants {mkAdv "conformemente" ; mkAdv "correspondentemente" ; } ; --*
lin accordionist_N = mkN "acordeonista" ; --*
lin accordion_N = variants {mkN "accordion" ; mkN "acordeão" ; mkN "box" ; mkN "gaita" ; } ; --*
lin accost_1_V2 = variants {mkV2 (mkV "cumprimentar") ; mkV2 (mkV "up") ; } ; --*
lin accost_2_V2 = mkV2 (mkV "abordar") ; --*
lin accouchement_N = variants {mkN "birth" ; mkN "parto" ; } ; --*
lin account_2_N = variants {mkN "artigo" ; mkN "história" ; mkN "relato" ; mkN "report" ; mkN "up" ; } ; --*
lin account_2_V2 = variants {mkV2 (mkV "computar") ; mkV2 (mkV "contar") ; } ; --*
lin account_2_V = variants {mkV "computar" ; mkV "contar" ; } ; --*
lin account_3_N = variants {mkN "contabilidade" ; mkN "relationship" ; } ; --*
lin account_3_V2 = variants {mkV2 (mkV "descrever") ; mkV2 (mkV "relatar") ; } ; --*
lin account_4_N = variants {mkN "explanação" ; mkN "explicação" ; } ; --*
lin account_5_N = variants {mkN "causa" ; mkN "conta" ; } ; --*
lin account_7_N = variants {mkN "conta" ; mkN "contabilidade" ; mkN "statement" ; } ; --*
lin account_8_N = variants {mkN "relato" ; mkN "relatório" ; } ; --*
lin account_9_N = variants {mkN "conta" ; mkN "contas" ; mkN "factura" ; mkN "facturas" ; mkN "fatura" ; } ; --*
lin accountability_N = variants {mkN "Accountability" ; mkN "questionabilidade" ; mkN "refutabilidade" ; mkN "responsabilidade" ; } ; --*
lin accountable_A = variants {mkA "responsable" ; mkA "responsável" ; } ; --*
lin accountancy_N = variants {mkN "contabilidade" ; mkN "Contabilidade" ; } ; --*
lin accountant_N = variants {mkN "contabilista" ; mkN "contador" ; mkN "controlador" ; } ; --*
lin account_for_1_V2 = mkV2 (mkV "for") ; --*
lin account_for_2_V2 = mkV2 (mkV "for") ; --*
lin accounting_2_N = mkN "contabilidade" ; --*
lin accounting_3_N = variants {mkN "contabilidade" ; mkN "Contabilidade" ; } ; --*
lin accounting_4_N = variants {mkN "contabilidade" ; mkN "of" ; mkN "system" ; } ; --*
lin accounting_5_N = variants {mkN "conta" ; mkN "contabilidade" ; mkN "statement" ; } ; --*
lin account_of_N2 = variants {mkN2 (mkN "crónica") noPrep ; mkN2 (mkN "crônica") noPrep ; } ; --*
lin accra_PN = variants {mkPN "Acra" ; mkPN "of" ; } ; --*
lin accredit_1_V2 = variants {mkV2 (mkV "credenciar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin accredit_3_V2 = variants {mkV2 (mkV "agradecer") ; mkV2 (mkV "atribuir") ; mkV2 (mkV "dar") ; } ; --*
lin accreditation_N = mkN "acreditação" ; --*
lin accretion_1_N = variants {mkN "acréscimo" ; mkN "acumulação" ; } ; --*
lin accrue_V = variants {mkV "altear" ; mkV "aumentar" ; mkV "crescer" ; mkV "elevar-se" ; mkV "subir" ; } ; --*
lin acculturation_2_N = variants {mkN "aculturação" ; mkN "cultura" ; } ; --*
lin acculturation_3_N = mkN "assimilação" ; --*
lin accumulate_1_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin accumulate_2_V = variants {mkV "acumular" ; mkV "aglomerar" ; mkV "amontoar" ; mkV "conglomerar" ; mkV "up" ; } ; --*
lin accumulation_1_N = variants {mkN "acréscimo" ; mkN "acumulação" ; } ; --*
lin accumulation_2_N = variants {mkN "acúmulo" ; mkN "aglomeração" ; mkN "chusma" ; mkN "coleção" ; mkN "colecção" ; mkN "grupo" ; mkN "montão" ; mkN "ruma" ; } ; --*
lin accumulation_3_N = variants {mkN "acumulação" ; mkN "acúmulo" ; } ; --*
lin accumulation_4_N = mkN "acumulação" ; --*
lin accumulative_1_A = mkA "cumulativo" ; --*
lin accumulative_2_A = variants {mkA "acumulativo" ; mkA "cumulativo" ; } ; --*
lin accumulator_1_N = variants {mkN "coletor" ; mkN "recolhedor" ; } ; --*
lin accumulator_2_N = variants {mkN "acumulador" ; mkN "battery" ; } ; --*
lin accumulator_3_N = variants {mkN "register" ; mkN "registo" ; } ; --*
lin accuracy_1_N = variants {mkN "acurácia" ; mkN "correção" ; mkN "exactidão" ; mkN "exatidão" ; mkN "precisão" ; mkN "rigor" ; } ; --*
lin accurate_1_A = variants {mkA "acurado" ; mkA "exacto" ; mkA "exato" ; mkA "justo" ; mkA "preciso" ; } ; --*
lin accurate_2_A = variants {mkA "afinado" ; mkA "certo" ; mkA "exacto" ; mkA "exato" ; mkA "perfeito" ; mkA "preciso" ; } ; --*
lin accursed_A = mkA "amaldiçoado" ; --*
lin accurst_A = mkA "amaldiçoado" ; --*
lin accusation_1_N = variants {mkN "acusação" ; mkN "arguição" ; mkN "denúncia" ; } ; --*
lin accusation_2_N = mkN "acusação" ; --*
lin accusative_1_A = variants {mkA "acusador" ; mkA "acusante" ; mkA "acusatório" ; } ; --*
lin accusative_2_A = mkA "acusativo" ; --*
lin accusative_N = variants {mkN "acusativo" ; mkN "case" ; } ; --*
lin accused_N = mkN "acusado" ; --*
lin accuse_of_V3 = variants {mkV3 (mkV "acusar") ; mkV3 (mkV "arguir") ; mkV3 (mkV "criminar") ; mkV3 (mkV "incriminar") ; mkV3 (mkV "inculpar") ; } ; --*
lin accuserFem_N = mkN "acusador" ; --*
lin accuserMasc_N = mkN "acusador" ; --*
lin accuse_V2 = variants {mkV2 (mkV "acusar") ; mkV2 (mkV "incriminar") ; } ; --*
lin accusingly_Adv = mkAdv "acusadoramente" ; --*
lin accustom_V2 = variants {mkV2 (mkV "acostumar-se") ; mkV2 (mkV "habituar") ; mkV2 (mkV "habituar-se") ; } ; --*
lin ace_1_N = variants {mkN "1" ; mkN "um" ; } ; --*
lin ace_2_N = variants {mkN "ás" ; mkN "Ás" ; } ; --*
lin ace_3_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin ace_4_N = variants {mkN "converting" ; mkN "enzima" ; mkN "enzyme" ; } ; --*
lin ace_6_N = mkN "ace" ; --*
lin acebutolol_N = mkN "Acebutolol" ; --*
lin acerb_1_A = variants {mkA "acerbo" ; mkA "adstringente" ; mkA "cortante" ; mkA "picante" ; } ; --*
lin acerb_2_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin acerbity_1_N = mkN "amargor" ; --*
lin acerbity_3_N = variants {mkN "acrimónia" ; mkN "acrimônia" ; mkN "acuidade" ; mkN "agrura" ; mkN "agudeza" ; } ; --*
lin acerola_1_N = variants {mkN "cherry" ; mkN "glabra" ; mkN "Indian" ; mkN "pitanga" ; } ; --*
lin acerola_2_N = variants {mkN "acerola" ; mkN "cherry" ; mkN "Indian" ; } ; --*
lin acetabular_A = mkA "acetabular" ; --*
lin acetabulum_N = variants {mkN "acetábulo" ; mkN "cavity" ; } ; --*
lin acetaldehyde_N = mkN "Etanal" ; --*
lin acetal_N = mkN "Acetal" ; --*
lin acetamide_N = mkN "Acetamida" ; --*
lin acetanilide_1_N = mkN "acetanilida" ; --*
lin acetate_1_N = mkN "acetato" ; --*
lin acetate_2_N = variants {mkN "acetato" ; mkN "rayon" ; } ; --*
lin acetic_A = mkA "acético" ; --*
lin acetone_N = variants {mkN "acetona" ; mkN "ketone" ; } ; --*
lin acetophenetidin_1_N = mkN "Fenacetina" ; --*
lin acetose_1_A = variants {mkA "ácido" ; mkA "azedo" ; } ; --*
lin acetum_2_N = mkN "vinagre" ; --*
lin acetylation_N = mkN "acetilação" ; --*
lin acetylcholine_N = mkN "acetilcolina" ; --*
lin acetylene_N = variants {mkN "acetilene" ; mkN "acetilênio" ; mkN "acetileno" ; mkN "Acetileno" ; mkN "alcino" ; } ; --*
lin acetylic_A = mkA "acetílico" ; --*
lin acetyl_N = variants {mkN "acetila" ; mkN "group" ; mkN "radical" ; } ; --*
lin ache_1_V = variants {mkV "causar" ; mkV "doer" ; } ; --*
lin ache_3_V = mkV "doer" ; --*
lin ache_for_V2 = variants {mkV2 (mkV "ansiar") ; mkV2 (mkV "desejar") ; } ; --*
lin ache_N = mkN "dor" ; --*
lin achene_N = variants {mkN "aquénio" ; mkN "Aquénio" ; mkN "aquênio" ; } ; --*
lin achievable_A = variants {mkA "conquistável" ; mkA "realizável" ; } ; --*
lin achievement_N = variants {mkN "conquista" ; mkN "consumação" ; mkN "façanha" ; mkN "feito" ; mkN "realização" ; } ; --*
lin achiever_N = variants {mkN "ganhador" ; mkN "vencedor" ; } ; --*
lin achieve_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "chegar") ; mkV2 (mkV "efectuar") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "obter") ; mkV2 (mkV "realizar") ; } ; --*
lin achilles_PN = mkPN "Aquiles" ; --*
lin achlorhydria_N = mkN "acloridria" ; --*
lin achlorhydric_A = mkA "aclorídrico" ; --*
lin acholia_N = variants {mkN "colestase" ; mkN "Colestase" ; } ; --*
lin achondroplasia_1_N = variants {mkN "acondroplasia" ; mkN "congenita" ; } ; --*
lin achromatic_A = mkA "acromático" ; --*
lin acid_1_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin acid_1_N = variants {mkN "ácido" ; mkN "ácidos" ; mkN "Ácidos" ; } ; --*
lin acid_2_N = variants {mkN "breaker" ; mkN "in" ; mkN "Lucy" ; mkN "pane" ; mkN "toons" ; } ; --*
lin acid_3_A = variants {mkA "ácido" ; mkA "azeda" ; } ; --*
lin acidic_1_A = mkA "ácida" ; --*
lin acidification_N = mkN "acidificação" ; --*
lin acidify_1_V2 = variants {mkV2 (mkV "acidar") ; mkV2 (mkV "acidificar") ; mkV2 (mkV "azedar") ; mkV2 (mkV "azedar-se") ; } ; --*
lin acidify_2_V = mkV "acidificar" ; --*
lin acidity_1_N = variants {mkN "acidez" ; mkN "acididade" ; mkN "azedume" ; } ; --*
lin acidophilus_N = variants {mkN "acidophilus" ; mkN "Lactobacillus" ; } ; --*
lin acidosis_N = variants {mkN "acidose" ; mkN "Acidose" ; mkN "acidosis" ; } ; --*
lin acidotic_A = mkA "acidótico" ; --*
lin ack_ack_N = variants {mkN "ack-ack-ack" ; mkN "gun" ; } ; --*
lin ackee_1_N = mkN "Akee" ; --*
lin acknowledge_1_VS = variants {mkVS (mkV "admitir") ; mkVS (mkV "confessar") ; mkVS (mkV "reconhecer") ; } ; --*
lin acknowledge_2_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "dar") ; mkV2 (mkV "passar") ; } ; --*
lin acknowledge_3_V2 = variants {mkV2 (mkV "notar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin acknowledge_4_V2 = variants {mkV2 (mkV "agradecer") ; mkV2 (mkV "apreciar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin acknowledge_5_V2 = mkV2 (mkV "reconhecer") ; --*
lin acknowledge_6_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "reconhecer") ; } ; --*
lin acknowledgement_1_N = variants {mkN "Agradecimento" ; mkN "reconhecimento" ; mkN "Reconhecimento" ; } ; --*
lin acknowledgement_2_N = mkN "reconhecimento" ; --*
lin acknowledgement_3_N = variants {mkN "citação" ; mkN "menção" ; mkN "referência" ; } ; --*
lin acme_1_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin acme_2_N = variants {mkN "topo" ; mkN "vértice" ; } ; --*
lin acneiform_A = mkA "acnéiforme" ; --*
lin acne_N = variants {mkN "acne" ; mkN "dartro" ; } ; --*
lin acolyte_N = mkN "acólito" ; --*
lin aconite_N = mkN "acônito" ; --*
lin acorn_N = mkN "bolota" ; --*
lin acoustic_1_A = mkA "acústico" ; --*
lin acoustics_N = variants {mkN "Acustica" ; mkN "acústica" ; mkN "Acústica" ; } ; --*
lin acquaint_2_V2 = variants {mkV2 (mkV "familiarizar") ; mkV2 (mkV "informar") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "notificar") ; } ; --*
lin acquaint_3_V2 = variants {mkV2 (mkV "noticiar") ; mkV2 (mkV "notificar") ; } ; --*
lin acquaintance_1_N = variants {mkN "conhecimento" ; mkN "familiaridade" ; } ; --*
lin acquaintance_2_N = variants {mkN "conhecido" ; mkN "convivência" ; mkN "pessoa" ; mkN "ser" ; } ; --*
lin acquaintance_3_N = variants {mkN "amigo" ; mkN "amizade" ; mkN "conhecida" ; mkN "conhecido" ; } ; --*
lin acquaintanceship_N = variants {mkN "conhecido" ; mkN "convivência" ; mkN "pessoa" ; mkN "ser" ; } ; --*
lin acquaint_with_V3 = variants {mkV3 (mkV "apresentar") ; mkV3 (mkV "introduzir") ; } ; --*
lin acquiescence_1_N = variants {mkN "anuência" ; mkN "aquiescência" ; } ; --*
lin acquiescence_2_N = variants {mkN "aprovação" ; mkN "aquiescência" ; mkN "assentimento" ; mkN "concessão" ; mkN "conformidade" ; mkN "consentimento" ; } ; --*
lin acquiescent_A = variants {mkA "aquiescente" ; mkA "condescendente" ; } ; --*
lin acquiesce_V = variants {mkV "aquiescer" ; mkV "assentir" ; mkV "concordar" ; mkV "dizer" ; mkV "responder" ; } ; --*
lin acquire_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "comprar") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin acquire_2_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; } ; --*
lin acquire_3_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "crescer") ; mkV2 (mkV "ganhar") ; } ; --*
lin acquire_4_V2 = mkV2 (mkV "adquirir") ; --*
lin acquire_5_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "ganhar") ; mkV2 (mkV "vencer") ; } ; --*
lin acquire_6_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "aprender") ; mkV2 (mkV "estudar") ; } ; --*
lin acquire_7_V2 = mkV2 (mkV "desenvolver") ; --*
lin acquirement_N = variants {mkN "habilidade" ; mkN "meta" ; mkN "talento" ; mkN "técnica" ; } ; --*
lin acquiring_N = mkN "aquisição" ; --*
lin acquisition_1_N = variants {mkN "aquisição" ; mkN "compra" ; } ; --*
lin acquisition_2_N = mkN "aquisição" ; --*
lin acquisition_3_N = variants {mkN "aprendizagem" ; mkN "aquisição" ; } ; --*
lin acquisition_4_N = variants {mkN "habilidade" ; mkN "meta" ; mkN "talento" ; mkN "técnica" ; } ; --*
lin acquisitive_A = variants {mkA "cobiçoso" ; mkA "sequioso" ; } ; --*
lin acquit_1_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "inocentar") ; } ; --*
lin acquit_2_V2 = variants {mkV2 (mkV "comportar-se") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "resistir") ; } ; --*
lin acquittal_N = mkN "quitação" ; --*
lin acre_1_N = variants {mkN "Acre" ; mkN "jeira" ; } ; --*
lin acre_2_N = mkN "Acre" ; --*
lin acre_3_N = mkN "Acre" ; --*
lin acrid_1_A = mkA "acre" ; --*
lin acrid_2_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin acrimonious_A = mkA "acrimonioso" ; --*
lin acrimony_N = variants {mkN "acrimónia" ; mkN "acrimônia" ; mkN "acuidade" ; mkN "agrura" ; mkN "agudeza" ; } ; --*
lin acrobatFem_N = variants {mkN "acrobata" ; mkN "akrobata" ; } ; --*
lin acrobatic_A = variants {mkA "acrobático" ; mkA "atlético" ; } ; --*
lin acrobatics_1_N = variants {mkN "acobatismo" ; mkN "acrobacia" ; } ; --*
lin acrobatics_2_N = variants {mkN "acrobacia" ; mkN "flying" ; } ; --*
lin acrobatMasc_N = variants {mkN "acrobata" ; mkN "akrobata" ; } ; --*
lin acrocyanosis_N = variants {mkN "Acrocianose" ; mkN "sign" ; } ; --*
lin acromegalic_A = mkA "acromegálico" ; --*
lin acromegaly_1_N = variants {mkN "acromegalia" ; mkN "Acromegalia" ; } ; --*
lin acromion_N = variants {mkN "acrômio" ; mkN "process" ; } ; --*
lin acronym_N = variants {mkN "acrografia" ; mkN "acrograma" ; mkN "acrónimo" ; mkN "acrônimo" ; mkN "sigla" ; } ; --*
lin acrophobia_N = mkN "acrofobia" ; --*
lin acropolis_N = mkN "acrópole" ; --*
lin across_2_Adv = mkAdv "transversalmente" ; --*
lin acrostic_1_N = variants {mkN "acróstico" ; mkN "square" ; } ; --*
lin acrostic_2_N = mkN "acróstico" ; --*
lin acrylamide_N = mkN "acrilamida" ; --*
lin acrylic_1_N = variants {mkN "fiber" ; mkN "Fibra" ; } ; --*
lin acrylic_3_N = variants {mkN "paint" ; mkN "Tinta" ; } ; --*
lin act_10_V = variants {mkV "actuar" ; mkV "atuar" ; mkV "fazer" ; mkV "representar" ; } ; --*
lin act_1_N = mkN "ato" ; --*
lin act_1_V = variants {mkV "agir" ; mkV "atuar" ; mkV "fazer" ; } ; --*
lin act_2_N = variants {mkN "ação" ; mkN "action" ; mkN "activity" ; mkN "ato" ; } ; --*
lin act_3_N = mkN "ato" ; --*
lin act_3_V2 = variants {mkV2 (mkV "atuar") ; mkV2 (mkV "representar") ; } ; --*
lin act_4_N = mkN "número" ; --*
lin act_4_V = mkV "atuar" ; --*
lin act_5_V2 = variants {mkV2 (mkV "as") ; mkV2 (mkV "simular") ; } ; --*
lin act_7_V = mkV "funcionar" ; --*
lin act_9_V = mkV "fingir" ; --*
lin acting_A = variants {mkA "em" ; mkA "interino" ; mkA "temporário" ; } ; --*
lin acting_N = variants {mkN "atuação" ; mkN "interpretação" ; mkN "representação" ; } ; --*
lin actinium_N = variants {mkN "actínia" ; mkN "Actinio" ; mkN "number" ; } ; --*
lin actin_N = mkN "actina" ; --*
lin actinoid_1_N = variants {mkN "actinídeo" ; mkN "Actinídeo" ; mkN "actinídeos" ; } ; --*
lin actinolite_N = mkN "actinolita" ; --*
lin actinometer_N = mkN "Actinometria" ; --*
lin actinomycetal_A = mkA "actinobacterial" ; --*
lin actinomycin_N = mkN "Actinomicina" ; --*
lin actinomycosis_N = variants {mkN "actinomicose" ; mkN "Actinomicose" ; } ; --*
lin action_1_N = variants {mkN "ação" ; mkN "atividade" ; mkN "ato" ; } ; --*
lin action_2_N = variants {mkN "ação" ; mkN "actividade" ; mkN "atividade" ; } ; --*
lin action_3_N = variants {mkN "action" ; mkN "batalha" ; } ; --*
lin action_5_N = mkN "ação" ; --*
lin action_8_N = variants {mkN "action" ; mkN "at" ; mkN "causa" ; } ; --*
lin activate_1_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin activate_2_V2 = variants {mkV2 (mkV "ativar") ; mkV2 (mkV "causar") ; mkV2 (mkV "produzir") ; mkV2 (mkV "ser") ; } ; --*
lin activation_3_N = variants {mkN "activação" ; mkN "ativação" ; } ; --*
lin active_2_A = mkA "pronto" ; --*
lin active_3_A = variants {mkA "agencioso" ; mkA "ativo" ; } ; --*
lin active_4_A = variants {mkA "activo" ; mkA "participante" ; } ; --*
lin active_5_A = mkA "ativo" ; --*
lin activeness_1_N = variants {mkN "ação" ; mkN "actividade" ; mkN "atividade" ; } ; --*
lin activeness_2_N = mkN "atividade" ; --*
lin activism_N = variants {mkN "ativismo" ; mkN "Ativismo" ; } ; --*
lin activist_1_A = variants {mkA "activista" ; mkA "ativista" ; } ; --*
lin activistFem_N = variants {mkN "activista" ; mkN "militante" ; } ; --*
lin activistMasc_N = variants {mkN "activista" ; mkN "militante" ; } ; --*
lin activity_1_N = variants {mkN "atividade" ; mkN "ocupação" ; } ; --*
lin activity_2_N = variants {mkN "ação" ; mkN "actividade" ; mkN "atividade" ; } ; --*
lin activity_4_N = mkN "radioactividade" ; --*
lin activity_6_N = mkN "atividade" ; --*
lin act_like_V2 = variants {mkV2 (mkV "agir") ; mkV2 (mkV "atuar") ; mkV2 (mkV "comportar-se") ; mkV2 (mkV "fazer") ; mkV2 (mkV "parecer") ; } ; --*
lin act_on_2_V2 = mkV2 (mkV "on") ; --*
lin act_on_3_V2 = variants {mkV2 (mkV "agir") ; mkV2 (mkV "atuar") ; mkV2 (mkV "fazer") ; } ; --*
lin actor_1_N = variants {mkN "actor" ; mkN "artista" ; mkN "ator" ; mkN "intérprete" ; mkN "player" ; } ; --*
lin actor_2_N = variants {mkN "agente" ; mkN "fazedor" ; mkN "realizador" ; mkN "trabalhador" ; } ; --*
lin act_out_1_V2 = mkV2 (mkV "out") ; --*
lin act_out_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "reencenar") ; } ; --*
lin actress_N = variants {mkN "actriz" ; mkN "atriz" ; } ; --*
lin actual_1_A = variants {mkA "efectivo" ; mkA "efetivo" ; mkA "real" ; mkA "verdadeiro" ; } ; --*
lin actual_2_A = mkA "real" ; --*
lin actual_3_A = variants {mkA "autêntico" ; mkA "genuíno" ; mkA "literal" ; mkA "verdadeiro" ; } ; --*
lin actual_4_A = mkA "real" ; --*
lin actual_5_A = variants {mkA "atual" ; mkA "real" ; } ; --*
lin actuality_N = mkN "realidade" ; --*
lin actually_1_AdV = mkAdV "na" ; --*
lin actuarial_A = mkA "atuarial" ; --*
lin actuary_N = variants {mkN "actuário" ; mkN "atuário" ; } ; --*
lin actuate_1_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin actuate_2_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "incentivar") ; mkV2 (mkV "motivar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "provocar") ; } ; --*
lin actuator_N = mkN "atuador" ; --*
lin act_upon_V2 = variants {mkV2 (mkV "influenciar") ; mkV2 (mkV "influir") ; mkV2 (mkV "upon") ; } ; --*
lin act_VA = variants {mkVA (mkV "agir") ; mkVA (mkV "atuar") ; mkVA (mkV "comportar-se") ; mkVA (mkV "fazer") ; mkVA (mkV "parecer") ; } ; --*
lin acuity_1_N = variants {mkN "acuidade" ; mkN "acuity" ; } ; --*
lin acumen_2_N = mkN "acume" ; --*
lin acupuncture_N = variants {mkN "acupuntura" ; mkN "Acupuntura" ; } ; --*
lin acute_1_A = mkA "pontiagudo" ; --*
lin acute_2_A = variants {mkA "forte" ; mkA "intenso" ; } ; --*
lin acute_3_A = mkA "penetrante" ; --*
lin acyclic_1_A = mkA "acíclico" ; --*
lin acyclic_2_A = mkA "acíclico" ; --*
lin acylation_N = mkN "acilação" ; --*
lin acyl_N = variants {mkN "group" ; mkN "grupo" ; } ; --*
lin adage_N = variants {mkN "adágio" ; mkN "aforismo" ; mkN "ditado" ; mkN "Ditado" ; mkN "provérbio" ; mkN "Provérbios" ; } ; --*
lin adagio_1_N = mkN "adágio" ; --*
lin adagio_2_N = mkN "adágio" ; --*
lin adam_1_PN = mkPN "Adão" ; --*
lin adam_2_PN = variants {mkPN "Adam" ; mkPN "Robert" ; } ; --*
lin adamance_N = mkN "obstinação" ; --*
lin adamant_A = mkA "intransigente" ; --*
lin adamantine_2_A = mkA "de" ; --*
lin adamantine_3_A = mkA "intransigente" ; --*
lin adamant_N = variants {mkN "adamantino" ; mkN "diamante" ; } ; --*
lin ada_PN = variants {mkPN "adenosina" ; mkPN "deaminase" ; } ; --*
lin adaptability_N = mkN "adaptabilidade" ; --*
lin adaptable_A = variants {mkA "adaptável" ; mkA "ajustável" ; } ; --*
lin adaptation_1_N = mkN "versão" ; --*
lin adaptation_2_N = mkN "adaptação" ; --*
lin adaptation_3_N = variants {mkN "adaptação" ; mkN "personalização" ; } ; --*
lin adaptational_A = mkA "adaptativo" ; --*
lin adapter_2_N = variants {mkN "adaptador" ; mkN "benjamim" ; } ; --*
lin adaptive_1_A = mkA "adaptável" ; --*
lin adaptor_N = variants {mkN "adaptador" ; mkN "benjamim" ; } ; --*
lin adapt_V2 = variants {mkV2 (mkV "adaptar") ; mkV2 (mkV "adequar") ; mkV2 (mkV "ajustar") ; } ; --*
lin adapt_V = variants {mkV "adaptar-se" ; mkV "adequar-se" ; mkV "ajustar" ; } ; --*
lin add_1_V2 = variants {mkV2 (mkV "acrescentar") ; mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; } ; --*
lin add_3_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "contribuir") ; } ; --*
lin add_4_V2 = variants {mkV2 (mkV "somar") ; mkV2 (mkV "together") ; } ; --*
lin add_5_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin add_6_V = mkV "adicionar" ; --*
lin addend_N = mkN "parcela" ; --*
lin addendum_N = variants {mkN "adendo" ; mkN "Post-scriptum" ; mkN "Post-Scriptum" ; } ; --*
lin adder_3_N = variants {mkN "berus" ; mkN "víbora" ; mkN "viper" ; } ; --*
lin addict_1_N = variants {mkN "adicto" ; mkN "viciado" ; } ; --*
lin addict_2_N = variants {mkN "adicto" ; mkN "viciado" ; } ; --*
lin addiction_1_N = mkN "dependência" ; --*
lin addiction_2_N = mkN "vício" ; --*
lin addiction_3_N = mkN "dependência" ; --*
lin addictive_A = mkA "viciante" ; --*
lin addict_V2 = variants {mkV2 (mkV "fisgar") ; mkV2 (mkV "viciar") ; } ; --*
lin adding_machine_N = variants {mkN "machine" ; mkN "máquina" ; } ; --*
lin addis_ababa_PN = variants {mkPN "Ababa" ; mkPN "Flower" ; mkPN "of" ; } ; --*
lin addition_1_N = variants {mkN "adição" ; mkN "melhoria" ; } ; --*
lin addition_2_N = mkN "adição" ; --*
lin addition_4_N = mkN "aquisição" ; --*
lin addition_6_N = mkN "adição" ; --*
lin additional_A = variants {mkA "adicional" ; mkA "aditivo" ; mkA "extra" ; } ; --*
lin additionally_Adv = variants {mkAdv "adicionalmente" ; mkAdv "boot" ; } ; --*
lin addition_to_N2 = mkN2 (mkN "aumento") noPrep ; --*
lin additive_2_A = mkA "aditivo" ; --*
lin additive_N = mkN "aditivos" ; --*
lin addle_1_V2 = variants {mkV2 (mkV "atabalhoar") ; mkV2 (mkV "confundir") ; } ; --*
lin add_on_to_V2 = mkV2 (mkV "on") ; --*
lin address_1_N = variants {mkN "address" ; mkN "endereço" ; } ; --*
lin address_1_V2 = variants {mkV2 (mkV "dirigir") ; mkV2 (mkV "to") ; } ; --*
lin address_2_N = mkN "endereço" ; --*
lin address_3_N = mkN "discurso" ; --*
lin address_5_V2 = mkV2 (mkV "endereçar") ; --*
lin address_6_N = variants {mkN "and" ; mkN "destino" ; } ; --*
lin address_8_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "endereçar") ; mkV2 (mkV "falar") ; mkV2 (mkV "lidar") ; mkV2 (mkV "tratar") ; } ; --*
lin address_9_V2 = variants {mkV2 (mkV "cumprimentar") ; mkV2 (mkV "up") ; } ; --*
lin addressee_N = mkN "destinatário" ; --*
lin adduce_1_V2 = variants {mkV2 (mkV "aduzir") ; mkV2 (mkV "alegar") ; } ; --*
lin adduction_N = mkN "adução" ; --*
lin adduct_N = mkN "aduto" ; --*
lin adductor_N = variants {mkN "adutor" ; mkN "muscle" ; } ; --*
lin add_up_1_V2 = variants {mkV2 (mkV "acontecer") ; mkV2 (mkV "ser") ; mkV2 (mkV "surgir") ; mkV2 (mkV "up") ; mkV2 (mkV "vir") ; } ; --*
lin add_up_3_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "up") ; } ; --*
lin add_up_4_V2 = variants {mkV2 (mkV "sense") ; mkV2 (mkV "up") ; } ; --*
lin add_up_4_V = variants {mkV "sense" ; mkV "up" ; } ; --*
lin add_up_to_V2 = variants {mkV2 (mkV "acontecer") ; mkV2 (mkV "ser") ; mkV2 (mkV "surgir") ; mkV2 (mkV "up") ; mkV2 (mkV "vir") ; } ; --*
lin adelaide_PN = mkPN "Adelaide" ; --*
lin adenine_N = mkN "adenina" ; --*
lin adenitis_N = variants {mkN "adenite" ; mkN "Adenite" ; } ; --*
lin adenocarcinoma_N = variants {mkN "adenocarcinoma" ; mkN "cancer" ; mkN "carcinoma" ; } ; --*
lin adenoid_A = mkA "adenóide" ; --*
lin adenoidal_2_A = mkA "nasal" ; --*
lin adenoma_N = mkN "adenoma" ; --*
lin adenopathy_N = mkN "adenopatia" ; --*
lin adenosine_N = mkN "adenosina" ; --*
lin adenovirus_N = mkN "adenovírus" ; --*
lin adept_A = variants {mkA "competente" ; mkA "experiente" ; mkA "hábil" ; mkA "habilidoso" ; mkA "mestre" ; mkA "versado" ; } ; --*
lin adeptness_N = variants {mkN "competência" ; mkN "facilidade" ; mkN "habilidade" ; } ; --*
lin adept_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin adequacy_1_N = mkN "adequação" ; --*
lin adequacy_2_N = variants {mkN "adequação" ; mkN "suficiência" ; } ; --*
lin adequate_1_A = variants {mkA "adequado" ; mkA "capaz" ; } ; --*
lin adequate_2_A = mkA "suficiente" ; --*
lin adhere_3_V = variants {mkV "aderir" ; mkV "colar" ; } ; --*
lin adhere_4_V = variants {mkV "aderir" ; mkV "manter" ; } ; --*
lin adhere_5_V = variants {mkV "by" ; mkV "ficar" ; } ; --*
lin adherence_1_N = variants {mkN "aderência" ; mkN "adesão" ; } ; --*
lin adherent_A = mkA "aderente" ; --*
lin adherent_N = variants {mkN "adepto" ; mkN "aluno" ; mkN "apóstolo" ; mkN "discípulo" ; mkN "estudante" ; mkN "seguidor" ; } ; --*
lin adhere_to_6_V2 = variants {mkV2 (mkV "aderir") ; mkV2 (mkV "colar") ; mkV2 (mkV "fast") ; mkV2 (mkV "grudar") ; mkV2 (mkV "to") ; } ; --*
lin adhesion_4_N = variants {mkN "aderência" ; mkN "adesão" ; } ; --*
lin adhesive_A = mkA "adesivo" ; --*
lin adhesive_N = variants {mkN "agent" ; mkN "cimento" ; mkN "material" ; } ; --*
lin ad_hoc_2_A = mkA "hoc" ; --*
lin adhocracy_N = mkN "Adocracia" ; --*
lin adiabatic_A = mkA "adiabático" ; --*
lin adieu_Interj = variants {ss "adeus" ; ss "atélogo" ; ss "day" ; ss "despedida" ; ss "long" ; ss "revoir" ; ss "wiedersehen" ; } ; --*
lin ad_infinitum_Adv = mkAdv "infinitum" ; --*
lin adipose_A = mkA "adipose" ; --*
lin adjacent_1_A = variants {mkA "adjacente" ; mkA "apenso" ; mkA "by" ; } ; --*
lin adjacent_2_A = variants {mkA "adjacente" ; mkA "contíguo" ; mkA "junto" ; mkA "vizinho" ; } ; --*
lin adjacent_3_A = mkA "contíguo" ; --*
lin adjectival_A = variants {mkA "adjectivo" ; mkA "adjetival" ; mkA "adjetivo" ; } ; --*
lin adjective_1_A = variants {mkA "adjectivo" ; mkA "adjetival" ; mkA "adjetivo" ; } ; --*
lin adjective_1_N = variants {mkN "adjectivo" ; mkN "adjetivo" ; } ; --*
lin adjective_2_A = mkA "processual" ; --*
lin adjective_2_N = variants {mkN "adjectivo" ; mkN "adjetivo" ; } ; --*
lin adjoin_2_V2 = variants {mkV2 (mkV "encostar") ; mkV2 (mkV "tocar") ; } ; --*
lin adjoin_2_V = variants {mkV "encostar" ; mkV "tocar" ; } ; --*
lin adjourn_2_V = mkV "adiar" ; --*
lin adjournment_1_N = mkN "protelação" ; --*
lin adjournment_2_N = variants {mkN "adiamento" ; mkN "deferimento" ; } ; --*
lin adjudge_V2 = variants {mkV2 (mkV "declarar") ; mkV2 (mkV "julgar") ; } ; --*
lin adjudicate_1_V2 = mkV2 (mkV "julgar") ; --*
lin adjudicate_2_V = variants {mkV "concluir" ; mkV "decidir" ; mkV "resolver" ; } ; --*
lin adjudication_N = mkN "adjudicação" ; --*
lin adjudicator_N = variants {mkN "adjudicator" ; mkN "árbitro" ; mkN "juiz" ; } ; --*
lin adjunct_1_A = variants {mkA "auxiliar" ; mkA "secundário" ; mkA "subordinado" ; } ; --*
lin adjunct_2_A = variants {mkA "adjunto" ; mkA "auxiliar" ; } ; --*
lin adjunct_2_N = mkN "acessória" ; --*
lin adjure_1_V2 = variants {mkV2 (mkV "implorar") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin adjust_1_V2 = variants {mkV2 (mkV "acertar") ; mkV2 (mkV "ajustar") ; mkV2 (mkV "corrigir") ; } ; --*
lin adjust_2_V2 = variants {mkV2 (mkV "alinhar") ; mkV2 (mkV "up") ; } ; --*
lin adjust_3_V = variants {mkV "adaptar-se" ; mkV "adequar-se" ; mkV "ajustar" ; } ; --*
lin adjust_4_V2 = mkV2 (mkV "ajustar") ; --*
lin adjust_5_V2 = variants {mkV2 (mkV "ajustar") ; mkV2 (mkV "reajustar") ; } ; --*
lin adjust_5_V = variants {mkV "ajustar" ; mkV "reajustar" ; } ; --*
lin adjustable_1_A = mkA "ajustável" ; --*
lin adjustable_2_A = mkA "regulável" ; --*
lin adjustment_1_N = mkN "ajustamento" ; --*
lin adjustment_2_N = variants {mkN "ajuste" ; mkN "alteração" ; mkN "modificação" ; } ; --*
lin adjustment_3_N = variants {mkN "ajustagem" ; mkN "reajuste" ; mkN "regulação" ; } ; --*
lin adjustment_4_N = mkN "adaptação" ; --*
lin adjutant_1_N = variants {mkN "aide-de-acampamento" ; mkN "ajudante" ; mkN "ajudante-de-ordens" ; } ; --*
lin adjuvant_1_A = variants {mkA "auxiliar" ; mkA "secundário" ; mkA "subordinado" ; } ; --*
lin ad_lib_1_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin ad_lib_2_A = mkA "espontâneo" ; --*
lin ad_lib_Adv = variants {mkAdv "de" ; mkAdv "espontaneamente" ; mkAdv "lib" ; mkAdv "libitum" ; } ; --*
lin ad_libitum_Adv = variants {mkAdv "de" ; mkAdv "espontaneamente" ; mkAdv "lib" ; mkAdv "libitum" ; } ; --*
lin ad_lib_V = mkV "improvisar" ; --*
lin ad_man_N = variants {mkN "anunciante" ; mkN "noticiador" ; } ; --*
lin administer_1_V2 = variants {mkV2 (mkV "administrar") ; mkV2 (mkV "gerenciar") ; mkV2 (mkV "gerir") ; } ; --*
lin administer_3_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; } ; --*
lin administer_4_V2 = variants {mkV2 (mkV "administrar") ; mkV2 (mkV "dispensar") ; } ; --*
lin administrable_A = variants {mkA "administrável" ; mkA "gerenciável" ; } ; --*
lin administration_1_N = variants {mkN "administração" ; mkN "gerenciamento" ; mkN "gestão" ; } ; --*
lin administration_2_N = variants {mkN "administração" ; mkN "body" ; mkN "organização" ; } ; --*
lin administration_3_N = variants {mkN "medication" ; mkN "ministração" ; } ; --*
lin administration_4_N = variants {mkN "presidência" ; mkN "term" ; } ; --*
lin administration_5_N = variants {mkN "activity" ; mkN "administração" ; mkN "governação" ; mkN "governo" ; } ; --*
lin administration_6_N = mkN "justiça" ; --*
lin administrative_A = mkA "administrativo" ; --*
lin administratorFem_1_N = variants {mkN "administrador" ; mkN "maker" ; } ; --*
lin administratorFem_2_N = mkN "administrador" ; --*
lin administratorFem_3_N = variants {mkN "administrador" ; mkN "executivo" ; } ; --*
lin administratorMasc_1_N = variants {mkN "administrador" ; mkN "maker" ; } ; --*
lin administratorMasc_2_N = mkN "administrador" ; --*
lin administratorMasc_3_N = variants {mkN "administrador" ; mkN "executivo" ; } ; --*
lin admirable_1_A = mkA "admirável" ; --*
lin admirable_2_A = mkA "admirável" ; --*
lin admiral_1_N = variants {mkN "admiral" ; mkN "almirante" ; } ; --*
lin admiralty_1_N = mkN "almirantado" ; --*
lin admiralty_2_N = mkN "almirantado" ; --*
lin admiration_1_N = mkN "admiração" ; --*
lin admiration_2_N = variants {mkN "admiração" ; mkN "espanto" ; mkN "maravilha" ; mkN "surpresa" ; } ; --*
lin admiration_3_N = mkN "admiração" ; --*
lin admire_1_V2 = variants {mkV2 (mkV "admirar") ; mkV2 (mkV "up") ; } ; --*
lin admire_2_V2 = variants {mkV2 (mkV "admirar") ; mkV2 (mkV "contemplar") ; } ; --*
lin admirer_1_N = mkN "seguidor" ; --*
lin admirer_3_N = variants {mkN "admirador" ; mkN "adorador" ; } ; --*
lin admiringly_Adv = mkAdv "admiradamente" ; --*
lin admissibility_N = mkN "admissibilidade" ; --*
lin admissible_A = variants {mkA "aceitável" ; mkA "admissível" ; mkA "lícito" ; } ; --*
lin admission_2_N = mkN "admissão" ; --*
lin admission_3_N = variants {mkN "charge" ; mkN "fee" ; mkN "money" ; mkN "of" ; mkN "preço" ; mkN "price" ; } ; --*
lin admission_4_N = variants {mkN "acesso" ; mkN "admitância" ; } ; --*
lin admission_to_N2 = variants {mkN2 (mkN "acolhida") noPrep ; mkN2 (mkN "acolhimento") noPrep ; mkN2 (mkN "admissão") noPrep ; } ; --*
lin admit_1_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "confessar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin admit_1_VS = variants {mkVS (mkV "admitir") ; mkVS (mkV "confessar") ; mkVS (mkV "reconhecer") ; } ; --*
lin admit_2_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "in") ; } ; --*
lin admit_4_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "admitir") ; mkV2 (mkV "on") ; } ; --*
lin admit_7_V2 = mkV2 (mkV "acomodar") ; --*
lin admit_8_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "permitir") ; } ; --*
lin admit_of_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "permitir") ; } ; --*
lin admittance_1_N = variants {mkN "acesso" ; mkN "admitância" ; } ; --*
lin admittance_2_N = variants {mkN "acolhida" ; mkN "acolhimento" ; mkN "admissão" ; } ; --*
lin admittedly_Adv = mkAdv "reconhecidamente" ; --*
lin admit_to_V3 = variants {mkV3 (mkV "admitir") ; mkV3 (mkV "in") ; } ; --*
lin admixture_1_N = mkN "liga" ; --*
lin admixture_3_N = mkN "mistura" ; --*
lin admix_V2 = mkV2 (mkV "misturar") ; --*
lin admonish_1_V2 = variants {mkV2 (mkV "admoestar") ; mkV2 (mkV "advertir") ; mkV2 (mkV "avisar") ; mkV2 (mkV "desaconselhar") ; mkV2 (mkV "prevenir") ; } ; --*
lin admonish_2_V2 = variants {mkV2 (mkV "admoestar") ; mkV2 (mkV "advertir") ; mkV2 (mkV "avisar") ; mkV2 (mkV "prevenir") ; } ; --*
lin admonish_3_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin admonisher_N = mkN "monitor" ; --*
lin admonition_1_N = variants {mkN "of" ; mkN "repreensão" ; } ; --*
lin admonition_2_N = variants {mkN "admonição" ; mkN "advertência" ; mkN "aviso" ; mkN "repreensão" ; } ; --*
lin ad_N = variants {mkN "anúncio" ; mkN "propaganda" ; mkN "publicidade" ; mkN "reclame" ; mkN "reclamo" ; } ; --*
lin adobe_1_N = variants {mkN "adobe" ; mkN "Adobe" ; } ; --*
lin adobe_2_N = variants {mkN "adobe" ; mkN "brick" ; mkN "tijolo" ; } ; --*
lin adolescence_1_N = variants {mkN "adolescência" ; mkN "Adolescência" ; } ; --*
lin adolescence_2_N = mkN "adolescência" ; --*
lin adolescent_3_A = mkA "juvenil" ; --*
lin adolescent_N = variants {mkN "adolescente" ; mkN "moça" ; mkN "moço" ; mkN "rapariga" ; mkN "rapaz" ; } ; --*
lin ado_N = mkN "freneticidade" ; --*
lin adonis_2_N = mkN "Adonis" ; --*
lin adopt_1_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "adotar") ; } ; --*
lin adopt_2_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin adopt_3_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; } ; --*
lin adopt_4_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; } ; --*
lin adopt_5_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "adotar") ; mkV2 (mkV "in") ; } ; --*
lin adopt_7_V2 = variants {mkV2 (mkV "abraçar") ; mkV2 (mkV "up") ; } ; --*
lin adoptee_N = variants {mkN "adoptada" ; mkN "adoptado" ; } ; --*
lin adoption_1_N = variants {mkN "aceitação" ; mkN "adoção" ; mkN "adopção" ; } ; --*
lin adoption_2_N = variants {mkN "adoção" ; mkN "Adoção" ; } ; --*
lin adoption_3_N = variants {mkN "adoção" ; mkN "adopção" ; } ; --*
lin adoptive_1_A = variants {mkA "adoptivo" ; mkA "adotivo" ; } ; --*
lin adoptive_2_A = variants {mkA "adoptivo" ; mkA "adotado" ; mkA "adotivo" ; } ; --*
lin adorable_A = mkA "adorável" ; --*
lin adoration_2_N = mkN "adulação" ; --*
lin adoration_3_N = variants {mkN "adoração" ; mkN "adorar" ; } ; --*
lin adorer_N = variants {mkN "admirador" ; mkN "adorador" ; } ; --*
lin adore_V2 = variants {mkV2 (mkV "adorar") ; mkV2 (mkV "idolatrar") ; mkV2 (mkV "reverenciar") ; } ; --*
lin adoring_2_A = variants {mkA "afectuoso" ; mkA "afeiçoado" ; mkA "carinhoso" ; } ; --*
lin adorn_1_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "empetecar") ; mkV2 (mkV "enfeitar") ; mkV2 (mkV "ornamentar") ; mkV2 (mkV "ornar") ; } ; --*
lin adorn_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "ornamentar") ; } ; --*
lin adorn_3_V2 = mkV2 (mkV "investir") ; --*
lin adornment_1_N = variants {mkN "decoração" ; mkN "ornamento" ; } ; --*
lin adornment_2_N = variants {mkN "adornamento" ; mkN "decoração" ; mkN "ornamento" ; } ; --*
lin adrenal_2_A = mkA "ad-renal" ; --*
lin adrenalin_1_N = variants {mkN "adranalina" ; mkN "adrenalina" ; mkN "epinefrina" ; } ; --*
lin adrenergic_A = mkA "adrenérgico" ; --*
lin adrenocorticotropic_1_A = mkA "adrenocorticotrópico" ; --*
lin adrian_1_PN = variants {mkPN "Adriano" ; mkPN "Aelius" ; } ; --*
lin adrian_2_PN = variants {mkPN "Adrian" ; mkPN "Adriano" ; mkPN "Douglas" ; } ; --*
lin adrift_1_A = mkA "à" ; --*
lin adrift_1_Adv = mkAdv "à" ; --*
lin adrift_2_A = mkA "à" ; --*
lin adrift_2_Adv = mkAdv "à" ; --*
lin adroit_A = variants {mkA "ágil" ; mkA "alerta" ; mkA "animado" ; mkA "bem" ; mkA "hábil" ; } ; --*
lin adroitness_N = variants {mkN "competência" ; mkN "facilidade" ; mkN "habilidade" ; } ; --*
lin adsorption_N = variants {mkN "adsorção" ; mkN "assimilation" ; } ; --*
lin adulation_N = mkN "adulação" ; --*
lin adult_1_A = variants {mkA "adulto" ; mkA "crescido" ; mkA "grown" ; mkA "maior" ; } ; --*
lin adult_1_N = variants {mkN "adulto" ; mkN "de" ; mkN "terceira" ; } ; --*
lin adult_2_A = mkA "pornográfico" ; --*
lin adult_2_N = mkN "adulto" ; --*
lin adulterate_V2 = variants {mkV2 (mkV "adulterar") ; mkV2 (mkV "aviltar") ; mkV2 (mkV "diluir") ; } ; --*
lin adulteration_1_N = mkN "adulteração" ; --*
lin adulteration_2_N = mkN "adulteração" ; --*
lin adulterer_N = mkN "adúltero" ; --*
lin adulteress_N = variants {mkN "meretriz" ; mkN "prostituta" ; mkN "woman" ; } ; --*
lin adulterous_1_A = mkA "extraconjugal" ; --*
lin adulterous_2_A = mkA "adulterino" ; --*
lin adultery_N = variants {mkN "adultério" ; mkN "conversation" ; mkN "Fornicação" ; } ; --*
lin adulthood_1_N = mkN "maturidade" ; --*
lin adumbrate_1_V2 = mkV2 (mkV "criar") ; --*
lin adumbrate_2_V2 = mkV2 (mkV "insinuar") ; --*
lin advance_12_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "crescer") ; mkV2 (mkV "subir") ; } ; --*
lin advance_1_N = variants {mkN "avanço" ; mkN "progressão" ; mkN "progresso" ; } ; --*
lin advance_1_V = variants {mkV "ganhar" ; mkV "on" ; } ; --*
lin advance_2_N = variants {mkN "melhoria" ; mkN "progresso" ; } ; --*
lin advance_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "promover") ; } ; --*
lin advance_3_V2 = mkV2 (mkV "aumentar") ; --*
lin advance_4_N = variants {mkN "avanço" ; mkN "motion" ; mkN "progressão" ; } ; --*
lin advance_4_V2 = variants {mkV2 (mkV "encorajar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "promover") ; } ; --*
lin advance_5_N = variants {mkN "advance" ; mkN "pagamento" ; } ; --*
lin advance_5_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "forward") ; } ; --*
lin advance_6_N = mkN "aumento" ; --*
lin advance_6_V2 = variants {mkV2 (mkV "ahead") ; mkV2 (mkV "avançar") ; mkV2 (mkV "ganhar") ; mkV2 (mkV "ground") ; mkV2 (mkV "headway") ; } ; --*
lin advance_6_V = variants {mkV "ahead" ; mkV "avançar" ; mkV "ganhar" ; mkV "ground" ; mkV "headway" ; } ; --*
lin advance_7_V = variants {mkV "along" ; mkV "avançar" ; mkV "on" ; mkV "progredir" ; mkV "up" ; } ; --*
lin advance_9_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "upstairs") ; } ; --*
lin advanced_1_A = mkA "avançado" ; --*
lin advanced_2_A = variants {mkA "advance" ; mkA "avançado" ; } ; --*
lin advanced_3_A = variants {mkA "contemporâneo" ; mkA "inovador" ; mkA "moderno" ; mkA "progressista" ; } ; --*
lin advanced_4_A = mkA "avançado" ; --*
lin advancement_1_N = mkN "promoção" ; --*
lin advancement_2_N = variants {mkN "avanço" ; mkN "motion" ; mkN "progressão" ; } ; --*
lin advancement_3_N = mkN "progresso" ; --*
lin advantage_1_N = variants {mkN "benefício" ; mkN "handicap" ; mkN "lucro" ; mkN "utilidade" ; mkN "vantagem" ; } ; --*
lin advantage_3_N = variants {mkN "benefício" ; mkN "lucro" ; } ; --*
lin advantageous_1_A = variants {mkA "favorável" ; mkA "profícuo" ; mkA "propício" ; mkA "vantajoso" ; } ; --*
lin advantageous_2_A = mkA "profícuo" ; --*
lin advection_N = mkN "advecção" ; --*
lin advent_1_N = variants {mkN "advento" ; mkN "chegada" ; mkN "vinda" ; } ; --*
lin advent_2_N = mkN "Advento" ; --*
lin advent_3_N = variants {mkN "Advent" ; mkN "Advento" ; mkN "Coming" ; } ; --*
lin adventitious_A = variants {mkA "acidental" ; mkA "fortuito" ; } ; --*
lin adventure_1_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "chances") ; } ; --*
lin adventure_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "aventurar") ; mkV2 (mkV "aventurar-se") ; } ; --*
lin adventure_N = variants {mkN "aventura" ; mkN "undertaking" ; mkN "venture" ; } ; --*
lin adventurer_2_N = variants {mkN "explorador" ; mkN "exploradora" ; } ; --*
lin adventuresome_A = mkA "aventureiro" ; --*
lin adventurous_A = mkA "aventureiro" ; --*
lin adverb_1_N = mkN "advérbio" ; --*
lin adverb_2_N = mkN "advérbio" ; --*
lin adverbial_A = mkA "advérbial" ; --*
lin adversary_N = variants {mkN "adversário" ; mkN "antagonista" ; mkN "inimigo" ; mkN "opositor" ; } ; --*
lin adversity_1_N = variants {mkN "adversidade" ; mkN "knocks" ; } ; --*
lin adversity_2_N = mkN "adversidade" ; --*
lin advert_1_V = variants {mkV "assistir" ; mkV "atender" ; mkV "ear" ; mkV "fixar" ; mkV "heed" ; } ; --*
lin advert_2_V = variants {mkV "aludir" ; mkV "fazer" ; mkV "reportar-se" ; } ; --*
lin advert_3_V = variants {mkV "aludir" ; mkV "citar" ; mkV "mencionar" ; mkV "up" ; } ; --*
lin advertent_A = mkA "atento" ; --*
lin advertise_1_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "divulgar") ; } ; --*
lin advertise_2_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "promover") ; mkV2 (mkV "publicitar") ; } ; --*
lin advertisement_1_N = variants {mkN "anúncio" ; mkN "propaganda" ; mkN "publicidade" ; mkN "reclame" ; mkN "reclamo" ; } ; --*
lin advertiser_1_N = variants {mkN "anunciante" ; mkN "noticiador" ; } ; --*
lin advertising_1_N = variants {mkN "anúncio" ; mkN "propaganda" ; mkN "publicidade" ; mkN "reclame" ; mkN "reclamo" ; } ; --*
lin advertising_2_N = variants {mkN "publicidade" ; mkN "Publicidade" ; } ; --*
lin advert_N = variants {mkN "anúncio" ; mkN "propaganda" ; mkN "publicidade" ; mkN "reclame" ; mkN "reclamo" ; } ; --*
lin advice_N = variants {mkN "assessoramento" ; mkN "conselho" ; mkN "recomendação" ; } ; --*
lin advisable_A = mkA "aconselhável" ; --*
lin advise_1_V2 = variants {mkV2 (mkV "aconselhar") ; mkV2 (mkV "assessorar") ; mkV2 (mkV "avisar") ; mkV2 (mkV "opinar") ; } ; --*
lin advise_2_V2 = variants {mkV2 (mkV "advertir") ; mkV2 (mkV "anunciar") ; mkV2 (mkV "avisar") ; mkV2 (mkV "notice") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "notificar") ; mkV2 (mkV "word") ; } ; --*
lin advise_3_V2 = variants {mkV2 (mkV "propor") ; mkV2 (mkV "sugerir") ; } ; --*
lin advise_3_V = variants {mkV "propor" ; mkV "sugerir" ; } ; --*
lin advise_3_VS = variants {mkVS (mkV "propor") ; mkVS (mkV "sugerir") ; } ; --*
lin adviserFem_N = variants {mkN "assessor" ; mkN "conselheiro" ; mkN "consultor" ; mkN "orientador" ; } ; --*
lin adviserMasc_N = variants {mkN "assessor" ; mkN "conselheiro" ; mkN "consultor" ; mkN "orientador" ; } ; --*
lin advisor_N = variants {mkN "assessor" ; mkN "conselheiro" ; mkN "consultor" ; mkN "orientador" ; } ; --*
lin advisory_A = variants {mkA "aconselhador" ; mkA "consultivo" ; mkA "consultor" ; } ; --*
lin advocate_1_V2 = variants {mkV2 (mkV "advocar") ; mkV2 (mkV "recomendar") ; mkV2 (mkV "urgir") ; } ; --*
lin advocate_1_VS = variants {mkVS (mkV "advocar") ; mkVS (mkV "recomendar") ; mkVS (mkV "urgir") ; } ; --*
lin advocate_2_V2 = variants {mkV2 (mkV "advocar") ; mkV2 (mkV "advogar") ; mkV2 (mkV "arguir") ; mkV2 (mkV "argumentar") ; mkV2 (mkV "predicar") ; mkV2 (mkV "pregar") ; } ; --*
lin advocateFem_1_N = variants {mkN "advogado" ; mkN "defensor" ; mkN "proponente" ; mkN "representante" ; } ; --*
lin advocateFem_2_N = variants {mkN "advogada" ; mkN "advogado" ; mkN "procurador" ; } ; --*
lin advocateMasc_1_N = variants {mkN "advogado" ; mkN "defensor" ; mkN "proponente" ; mkN "representante" ; } ; --*
lin advocateMasc_2_N = variants {mkN "advogada" ; mkN "advogado" ; mkN "procurador" ; } ; --*
lin adze_N = mkN "enxó" ; --*
lin adz_N = mkN "enxó" ; --*
lin aegis_1_N = variants {mkN "auspício" ; mkN "cuidado" ; } ; --*
lin aeon_1_N = mkN "éon" ; --*
lin aeon_2_N = mkN "éon" ; --*
lin aeon_3_N = mkN "éon" ; --*
lin aerate_1_V2 = variants {mkV2 (mkV "abanar") ; mkV2 (mkV "arejar") ; mkV2 (mkV "out") ; } ; --*
lin aeration_1_N = variants {mkN "Aeração" ; mkN "arejamento" ; } ; --*
lin aerial_1_A = mkA "aéreo" ; --*
lin aerial_1_N = variants {mkN "pass" ; mkN "Passe" ; } ; --*
lin aerial_2_A = mkA "etéreo" ; --*
lin aerial_2_N = variants {mkN "aerial" ; mkN "antena" ; mkN "Antenas" ; } ; --*
lin aeriform_2_A = mkA "etéreo" ; --*
lin aerobatics_N = variants {mkN "acrobacia" ; mkN "flying" ; } ; --*
lin aerobic_2_A = mkA "aeróbico" ; --*
lin aerodrome_1_N = variants {mkN "aeródromo" ; mkN "aeroporto" ; } ; --*
lin aerodynamic_1_A = mkA "aerodinâmico" ; --*
lin aerodynamic_2_A = variants {mkA "aerodinâmica" ; mkA "aerodinâmico" ; } ; --*
lin aerodynamics_N = variants {mkN "aerodinâmica" ; mkN "Aerodinâmica" ; } ; --*
lin aerolite_N = mkN "aerólito" ; --*
lin aeromechanics_N = variants {mkN "aerodinâmica" ; mkN "Aerodinâmica" ; } ; --*
lin aeronautical_1_A = variants {mkA "aeronáutico" ; mkA "relativo" ; } ; --*
lin aeronautics_N = variants {mkN "aeronáutica" ; mkN "Aeronáutica" ; mkN "astronáutica" ; mkN "aviação" ; } ; --*
lin aeronaut_N = variants {mkN "aeronauta" ; mkN "aviador" ; mkN "aviadora" ; mkN "aviatriz" ; mkN "piloto" ; mkN "piloto-aviador" ; } ; --*
lin aerophilatelic_A = mkA "aerofilatélico" ; --*
lin aerophilately_N = mkN "aerofilatelia" ; --*
lin aeroplane_N = variants {mkN "aeronaves" ; mkN "aeroplano" ; mkN "avião" ; } ; --*
lin aerosol_1_N = variants {mkN "aerossóis" ; mkN "aerossol" ; mkN "Aerossol" ; mkN "neblina" ; } ; --*
lin aerosol_2_N = variants {mkN "aerossóis" ; mkN "bomb" ; mkN "can" ; mkN "container" ; } ; --*
lin aerospace_N = mkN "aeroespaço" ; --*
lin aesculapian_A = mkA "médico" ; --*
lin aestheteFem_N = mkN "esteta" ; --*
lin aestheteMasc_N = mkN "esteta" ; --*
lin aesthetic_1_A = mkA "estético" ; --*
lin aesthetic_2_A = mkA "estético" ; --*
lin aesthetic_3_A = variants {mkA "artístico" ; mkA "estético" ; } ; --*
lin aesthetical_A = mkA "estético" ; --*
lin aesthetic_N = mkN "estética" ; --*
lin aesthetics_N = variants {mkN "estética" ; mkN "Estética" ; } ; --*
lin aestival_1_A = mkA "estival" ; --*
lin aether_1_N = variants {mkN "Eter" ; mkN "Éter" ; } ; --*
lin aether_2_N = mkN "éter" ; --*
lin aetiology_1_N = mkN "etiologia" ; --*
lin aetiology_2_N = variants {mkN "etiologia" ; mkN "Etiologia" ; } ; --*
lin afar_Adv = variants {mkAdv "de" ; mkAdv "longe" ; } ; --*
lin afar_off_Adv = variants {mkAdv "de" ; mkAdv "longe" ; } ; --*
lin afebrile_A = mkA "afebril" ; --*
lin affability_N = variants {mkN "afabilidade" ; mkN "amabilidade" ; mkN "doçura" ; } ; --*
lin affable_A = variants {mkA "afável" ; mkA "amável" ; } ; --*
lin affair_1_N = variants {mkN "caso" ; mkN "interesse" ; } ; --*
lin affair_2_N = mkN "intimidade" ; --*
lin affair_3_N = variants {mkN "acontecimento" ; mkN "festa" ; mkN "function" ; mkN "occasion" ; } ; --*
lin affect_1_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "impactar") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin affect_2_V2 = variants {mkV2 (mkV "afectar") ; mkV2 (mkV "afetar") ; } ; --*
lin affect_3_V2 = mkV2 (mkV "comprometer") ; --*
lin affect_4_V2 = variants {mkV2 (mkV "aparentar") ; mkV2 (mkV "fingir") ; mkV2 (mkV "pretextar") ; mkV2 (mkV "simular") ; } ; --*
lin affect_5_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "comover") ; mkV2 (mkV "impressionar") ; } ; --*
lin affectation_N = variants {mkN "ação" ; mkN "afetação" ; mkN "fingimento" ; } ; --*
lin affected_1_A = mkA "afetado" ; --*
lin affected_2_A = variants {mkA "afetado" ; mkA "artificial" ; } ; --*
lin affected_3_A = variants {mkA "afetado" ; mkA "trasladado" ; } ; --*
lin affectedness_2_N = variants {mkN "ação" ; mkN "afetação" ; mkN "fingimento" ; } ; --*
lin affecting_A = mkA "comovente" ; --*
lin affectional_A = mkA "afetivo" ; --*
lin affectionate_A = variants {mkA "afectuoso" ; mkA "afeiçoado" ; mkA "cálido" ; mkA "carinhoso" ; mkA "meigo" ; mkA "que" ; mkA "terno" ; } ; --*
lin affectionateness_1_N = variants {mkN "afecção" ; mkN "afeição" ; mkN "afetividade" ; mkN "amor" ; mkN "apego" ; mkN "carinho" ; } ; --*
lin affectionateness_2_N = variants {mkN "afeição" ; mkN "amor" ; mkN "apego" ; } ; --*
lin affection_N = variants {mkN "afecção" ; mkN "afeição" ; mkN "afetividade" ; mkN "amor" ; mkN "apego" ; mkN "carinho" ; } ; --*
lin affect_N = variants {mkN "afeição" ; mkN "afete" ; mkN "afeto" ; mkN "emoção" ; } ; --*
lin afferent_A = mkA "aferente" ; --*
lin affiance_V2 = variants {mkV2 (mkV "noivar") ; mkV2 (mkV "prometer") ; } ; --*
lin affiliate_1_V = mkV "associar" ; --*
lin affiliate_2_N = mkN "sucursal" ; --*
lin affiliate_2_V = variants {mkV "afiliar" ; mkV "afiliar-se" ; mkV "associar-se" ; } ; --*
lin affiliation_1_N = variants {mkN "afiliação" ; mkN "filiação" ; } ; --*
lin affiliation_2_N = variants {mkN "afiliação" ; mkN "filiação" ; } ; --*
lin affined_A = mkA "aparentado" ; --*
lin affinity_1_N = mkN "afinidade" ; --*
lin affinity_4_N = variants {mkN "afinidade" ; mkN "parentesco" ; mkN "relação" ; } ; --*
lin affinity_5_N = variants {mkN "afinidade" ; mkN "attraction" ; } ; --*
lin affinity_7_N = mkN "afinidade" ; --*
lin affirm_1_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "corroborar") ; mkV2 (mkV "provar") ; mkV2 (mkV "substanciar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; } ; --*
lin affirm_2_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "jurar") ; } ; --*
lin affirm_2_V = variants {mkV "afirmar" ; mkV "jurar" ; } ; --*
lin affirm_2_VS = variants {mkVS (mkV "afirmar") ; mkVS (mkV "jurar") ; } ; --*
lin affirm_3_V2 = mkV2 (mkV "afirmar") ; --*
lin affirm_3_V = mkV "afirmar" ; --*
lin affirm_3_VS = mkVS (mkV "afirmar") ; --*
lin affirmation_1_N = mkN "afirmação" ; --*
lin affirmation_2_N = variants {mkN "afirmação" ; mkN "asserção" ; } ; --*
lin affirmative_1_A = mkA "afirmativo" ; --*
lin affirmative_2_A = variants {mkA "afirmativo" ; mkA "otimista" ; } ; --*
lin affix_1_V2 = variants {mkV2 (mkV "afixar") ; mkV2 (mkV "cravar") ; mkV2 (mkV "on") ; } ; --*
lin affix_2_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin affixal_1_A = mkA "afixal" ; --*
lin affix_N = mkN "afixo" ; --*
lin affix_to_V2 = mkV2 (mkV "afixar") ; --*
lin afflict_1_V2 = variants {mkV2 (mkV "acabrunhar") ; mkV2 (mkV "afligir") ; mkV2 (mkV "angustiar") ; } ; --*
lin afflict_2_V2 = variants {mkV2 (mkV "afligir") ; mkV2 (mkV "atribular") ; } ; --*
lin affliction_2_N = variants {mkN "aflição" ; mkN "doença" ; } ; --*
lin afflictive_A = variants {mkA "dolorido" ; mkA "doloroso" ; mkA "lamentável" ; mkA "triste" ; } ; --*
lin affluence_N = mkN "riqueza" ; --*
lin affluent_1_N = mkN "rico" ; --*
lin affluent_2_N = variants {mkN "afluente" ; mkN "confluente" ; } ; --*
lin affluent_A = variants {mkA "afluente" ; mkA "rico" ; } ; --*
lin afford_1_VV = variants {mkVV (mkV "dispor") ; mkVV (mkV "poder") ; } ; --*
lin afford_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "prover") ; } ; --*
lin afford_3_V2 = variants {mkV2 (mkV "bancar") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "poder") ; mkV2 (mkV "propiciar") ; mkV2 (mkV "proporcionar") ; } ; --*
lin afford_3_VV = variants {mkVV (mkV "bancar") ; mkVV (mkV "fornecer") ; mkVV (mkV "poder") ; mkVV (mkV "propiciar") ; mkVV (mkV "proporcionar") ; } ; --*
lin affordable_A = variants {mkA "pagável" ; mkA "possível" ; } ; --*
lin afforestation_N = variants {mkN "florestação" ; mkN "florestamento" ; } ; --*
lin affray_1_N = variants {mkN "altercação" ; mkN "rixa" ; } ; --*
lin affray_2_N = mkN "contenda" ; --*
lin affront_N = variants {mkN "afronta" ; mkN "injúria" ; mkN "insulto" ; mkN "ofensa" ; } ; --*
lin affront_V2 = variants {mkV2 (mkV "insultar") ; mkV2 (mkV "ofender") ; } ; --*
lin affusion_N = mkN "Efusão" ; --*
lin afghan_1_A = variants {mkA "afegane" ; mkA "afegânico" ; mkA "afegão" ; } ; --*
lin afghanFem_2_N = mkN "afegão" ; --*
lin afghanFem_3_N = variants {mkN "afegane" ; mkN "afegão" ; mkN "Língua" ; mkN "pastó" ; } ; --*
lin afghanFem_5_N = variants {mkN "Galgo" ; mkN "hound" ; } ; --*
lin afghani_2_N = variants {mkN "afegane" ; mkN "afegão" ; mkN "Língua" ; mkN "pastó" ; } ; --*
lin afghanistani_A = variants {mkA "afegane" ; mkA "afegânico" ; mkA "afegão" ; } ; --*
lin afghanistaniFem_N = mkN "afegão" ; --*
lin afghanistaniMasc_N = mkN "afegão" ; --*
lin afghanistan_PN = variants {mkPN "Afeganistão" ; mkPN "State" ; } ; --*
lin afghanMasc_2_N = mkN "afegão" ; --*
lin afghanMasc_3_N = variants {mkN "afegane" ; mkN "afegão" ; mkN "Língua" ; mkN "pastó" ; } ; --*
lin afghanMasc_5_N = variants {mkN "Galgo" ; mkN "hound" ; } ; --*
lin aficionado_1_N = mkN "torcedor" ; --*
lin afire_A = variants {mkA "ardente" ; mkA "fire" ; } ; --*
lin aflame_1_A = variants {mkA "em" ; mkA "flamejante" ; } ; --*
lin aflame_2_A = variants {mkA "ardente" ; mkA "fire" ; } ; --*
lin aflare_1_A = mkA "chaminés" ; --*
lin aflare_2_A = variants {mkA "ardente" ; mkA "fire" ; } ; --*
lin aflatoxin_N = mkN "aflatoxina" ; --*
lin afloat_1_A = variants {mkA "à" ; mkA "flutuante" ; } ; --*
lin afloat_3_A = mkA "à" ; --*
lin aflutter_A = mkA "nervoso" ; --*
lin afoot_3_Adv = variants {mkAdv "a" ; mkAdv "andando" ; } ; --*
lin aforementioned_A = variants {mkA "já" ; mkA "previamente" ; mkA "sobredito" ; mkA "supracitado" ; } ; --*
lin aforesaid_A = variants {mkA "já" ; mkA "previamente" ; mkA "sobredito" ; mkA "supracitado" ; } ; --*
lin afraid_1_A = mkA "receoso" ; --*
lin afresh_Adv = variants {mkAdv "de" ; mkAdv "novamente" ; mkAdv "outra" ; } ; --*
lin african_A = variants {mkA "africano" ; mkA "da" ; } ; --*
lin africanFem_N = mkN "africano" ; --*
lin africanMasc_N = mkN "africano" ; --*
lin africa_PN = variants {mkPN "Africa" ; mkPN "África" ; } ; --*
lin afrikaner_A = variants {mkA "africânder" ; mkA "africâner" ; } ; --*
lin afrikanerFem_N = variants {mkN "Africânder" ; mkN "bôer" ; } ; --*
lin afrikanerMasc_N = variants {mkN "Africânder" ; mkN "bôer" ; } ; --*
lin aft_Adv = variants {mkAdv "pela" ; mkAdv "popa" ; } ; --*
lin after_1_Adv = variants {mkAdv "após" ; mkAdv "mais" ; mkAdv "on" ; mkAdv "subsequentemente" ; mkAdv "subseqüentemente" ; } ; --*
lin afterburner_N = mkN "pós-combustão" ; --*
lin afterlife_N = variants {mkN "além" ; mkN "além-túmulo" ; mkN "vida" ; } ; --*
lin aftermath_1_N = mkN "resultado" ; --*
lin aftermath_2_N = mkN "conseqüência" ; --*
lin afternoon_Interj = variants {ss "afternoon" ; ss "boa" ; } ; --*
lin afternoon_N = mkN "tarde" ; --*
lin aftershock_N = mkN "Réplica" ; --*
lin aftertaste_N = mkN "ressaibo" ; --*
lin afterthought_2_N = variants {mkN "reconsideração" ; mkN "reflexão" ; } ; --*
lin afterwards_1_Adv = variants {mkAdv "após" ; mkAdv "mais" ; mkAdv "on" ; mkAdv "subsequentemente" ; mkAdv "subseqüentemente" ; } ; --*
lin again_Adv = variants {mkAdv "again" ; mkAdv "more" ; mkAdv "novamente" ; } ; --*
lin agape_2_N = variants {mkN "ágape" ; mkN "love" ; } ; --*
lin agape_A = variants {mkA "aberto" ; mkA "escancarado" ; } ; --*
lin agar_2_N = variants {mkN "Agar" ; mkN "Agar-agar" ; mkN "ágar-ágar" ; } ; --*
lin agar_agar_N = variants {mkN "Agar" ; mkN "Agar-agar" ; mkN "ágar-ágar" ; } ; --*
lin agate_N = mkN "ágata" ; --*
lin agave_N = variants {mkN "agave" ; mkN "aloe" ; mkN "plant" ; } ; --*
lin age_1_N = mkN "idade" ; --*
lin age_1_V = mkV "envelhecer" ; --*
lin age_2_N = variants {mkN "época" ; mkN "era" ; mkN "idade" ; mkN "period" ; } ; --*
lin age_2_V = variants {mkV "envelhecer" ; mkV "on" ; } ; --*
lin age_3_N = mkN "idade" ; --*
lin age_4_N = variants {mkN "idade" ; mkN "time" ; } ; --*
lin age_5_N = variants {mkN "age" ; mkN "idade" ; mkN "velhice" ; } ; --*
lin age_bracket_N = variants {mkN "bracket" ; mkN "coorte" ; mkN "group" ; } ; --*
lin agedness_N = mkN "senescência" ; --*
lin aged_N = mkN "velho" ; --*
lin age_group_N = variants {mkN "bracket" ; mkN "coorte" ; mkN "group" ; } ; --*
lin ageing_1_N = mkN "envelhecimento" ; --*
lin ageing_2_N = variants {mkN "envelhecimento" ; mkN "Envelhecimento" ; } ; --*
lin ageism_1_N = mkN "discriminação" ; --*
lin ageless_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin agelessness_N = mkN "eternidade" ; --*
lin agency_1_N = variants {mkN "agência" ; mkN "agency" ; mkN "escritório" ; mkN "Governo" ; mkN "instituição" ; } ; --*
lin agency_2_N = variants {mkN "agencia" ; mkN "agência" ; } ; --*
lin agency_4_N = mkN "delegação" ; --*
lin agency_5_N = variants {mkN "caminho" ; mkN "ferramenta" ; mkN "jeito" ; mkN "maneira" ; mkN "meio" ; mkN "modo" ; } ; --*
lin agenda_1_N = variants {mkN "cronograma" ; mkN "horário" ; mkN "ordem" ; mkN "plano" ; mkN "programa" ; } ; --*
lin agenda_2_N = variants {mkN "agenda" ; mkN "of" ; mkN "pauta" ; } ; --*
lin agent_3_N = mkN "agente" ; --*
lin agentFem_2_N = mkN "agente" ; --*
lin agentFem_4_N = variants {mkN "Broker" ; mkN "corretor" ; mkN "intermediário" ; } ; --*
lin agentFem_5_N = variants {mkN "agent" ; mkN "agente" ; } ; --*
lin agentMasc_2_N = mkN "agente" ; --*
lin agentMasc_4_N = variants {mkN "Broker" ; mkN "corretor" ; mkN "intermediário" ; } ; --*
lin agentMasc_5_N = variants {mkN "agent" ; mkN "agente" ; } ; --*
lin agent_provocateur_N = variants {mkN "agente" ; mkN "provocateur" ; } ; --*
lin age_V2 = variants {mkV2 (mkV "avelhentar") ; mkV2 (mkV "envelhecer") ; } ; --*
lin agglomerate_2_N = variants {mkN "acúmulo" ; mkN "cúmulo" ; mkN "grupo" ; mkN "montão" ; mkN "monte" ; mkN "pilha" ; } ; --*
lin agglomerate_V2 = mkV2 (mkV "aglomerar") ; --*
lin agglomerate_V = mkV "aglomerar" ; --*
lin agglomeration_1_N = mkN "aglomeração" ; --*
lin agglomeration_2_N = mkN "aglomeração" ; --*
lin agglutinate_1_V2 = mkV2 (mkV "aglutinar") ; --*
lin agglutinate_2_V2 = mkV2 (mkV "aglutinar") ; --*
lin agglutination_2_N = mkN "aglutinação" ; --*
lin agglutination_3_N = variants {mkN "activity" ; mkN "sinterização" ; } ; --*
lin agglutinative_1_A = mkA "polisintético" ; --*
lin agglutinin_N = mkN "aglutinina" ; --*
lin aggrandize_1_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin aggrandizement_1_N = variants {mkN "enaltecimento" ; mkN "engrandecimento" ; } ; --*
lin aggravate_1_V2 = variants {mkV2 (mkV "agravar") ; mkV2 (mkV "exacerbar") ; mkV2 (mkV "piorar") ; } ; --*
lin aggravate_2_V2 = variants {mkV2 (mkV "exacerbar") ; mkV2 (mkV "exasperar") ; } ; --*
lin aggravating_A = variants {mkA "agravante" ; mkA "exasperador" ; mkA "exasperante" ; } ; --*
lin aggravation_1_N = variants {mkN "agravamento" ; mkN "exasperação" ; mkN "irritação" ; } ; --*
lin aggravation_2_N = mkN "irritação" ; --*
lin aggravation_3_N = mkN "exacerbação" ; --*
lin aggregate_1_N = variants {mkN "soma" ; mkN "totalidade" ; } ; --*
lin aggregate_1_V2 = mkV2 (mkV "agregar") ; --*
lin aggregate_1_V = mkV "agregar" ; --*
lin aggregate_2_V2 = mkV2 (mkV "agregar") ; --*
lin aggregate_2_V = mkV "agregar" ; --*
lin aggregate_3_N = variants {mkN "aglomeração" ; mkN "agregação" ; mkN "agregado" ; } ; --*
lin aggregation_1_N = variants {mkN "acúmulo" ; mkN "aglomeração" ; mkN "chusma" ; mkN "coleção" ; mkN "colecção" ; mkN "grupo" ; mkN "montão" ; mkN "ruma" ; } ; --*
lin aggregation_2_N = variants {mkN "agregaçao" ; mkN "reunião" ; } ; --*
lin aggression_2_N = mkN "agressividade" ; --*
lin aggression_3_N = variants {mkN "agressão" ; mkN "hostilidade" ; } ; --*
lin aggression_4_N = mkN "agressão" ; --*
lin aggressive_1_A = mkA "agressivo" ; --*
lin aggressive_2_A = mkA "agressivo" ; --*
lin aggressive_3_A = variants {mkA "agressivo" ; mkA "beligerante" ; } ; --*
lin aggressiveness_1_N = mkN "agressividade" ; --*
lin aggressiveness_2_N = mkN "agressividade" ; --*
lin aggressiveness_3_N = mkN "agressividade" ; --*
lin aggressorFem_1_N = variants {mkN "agressor" ; mkN "assaltante" ; mkN "atacante" ; } ; --*
lin aggressorMasc_1_N = variants {mkN "agressor" ; mkN "assaltante" ; mkN "atacante" ; } ; --*
lin aggrieve_2_V2 = mkV2 (mkV "entristecer") ; --*
lin aghast_A = variants {mkA "apavorado" ; mkA "aterrorizado" ; mkA "chocada" ; mkA "chocado" ; mkA "espantado" ; mkA "horrorizado" ; mkA "pasmado" ; mkA "pasmo" ; } ; --*
lin agile_1_A = variants {mkA "ágil" ; mkA "ativo" ; mkA "lépido" ; mkA "lesto" ; mkA "ligeiro" ; mkA "rápido" ; mkA "serelepe" ; } ; --*
lin agile_2_A = variants {mkA "ágil" ; mkA "ligeiro" ; } ; --*
lin agility_N = mkN "agilidade" ; --*
lin aging_1_N = mkN "envelhecimento" ; --*
lin aging_2_N = variants {mkN "envelhecimento" ; mkN "Envelhecimento" ; } ; --*
lin agio_N = variants {mkN "ágio" ; mkN "premium" ; } ; --*
lin agitate_1_V2 = variants {mkV2 (mkV "fomentar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "up") ; } ; --*
lin agitate_1_V = variants {mkV "fomentar" ; mkV "incitar" ; mkV "up" ; } ; --*
lin agitate_2_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin agitate_2_V = variants {mkV "agitar" ; mkV "excitar" ; mkV "on" ; mkV "up" ; } ; --*
lin agitate_3_V = variants {mkV "advogar" ; mkV "agitar" ; mkV "fazer" ; mkV "lutar" ; } ; --*
lin agitate_4_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; mkV2 (mkV "mexer") ; } ; --*
lin agitate_4_V = variants {mkV "agitar" ; mkV "bater" ; mkV "mexer" ; } ; --*
lin agitate_5_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "sacudir") ; mkV2 (mkV "tremer") ; } ; --*
lin agitate_6_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "up") ; } ; --*
lin agitate_6_V = variants {mkV "agitar" ; mkV "perturbar" ; mkV "up" ; } ; --*
lin agitation_2_N = variants {mkN "agitação" ; mkN "perturbação" ; } ; --*
lin agitation_4_N = mkN "distúrbio" ; --*
lin agitation_5_N = mkN "agitação" ; --*
lin agitative_A = mkA "provocador" ; --*
lin agitator_N = mkN "agitador" ; --*
lin agitprop_N = mkN "Agitprop" ; --*
lin aglet_1_N = mkN "agulheta" ; --*
lin aglow_A = variants {mkA "brilhante" ; mkA "luminoso" ; } ; --*
lin agnail_N = mkN "espigão" ; --*
lin agnate_N = variants {mkN "agnado" ; mkN "kin" ; mkN "sib" ; } ; --*
lin agnosia_N = variants {mkN "agnosia" ; mkN "Agnosia" ; } ; --*
lin agnostic_1_A = mkA "agnóstico" ; --*
lin agnostic_1_N = variants {mkN "agnóstica" ; mkN "agnóstico" ; } ; --*
lin agnostic_2_A = mkA "agnóstico" ; --*
lin agnostic_2_N = mkN "agnosticista" ; --*
lin agnosticism_1_N = variants {mkN "agnosticismo" ; mkN "Agnosticismo" ; } ; --*
lin agnosticism_2_N = variants {mkN "agnosticismo" ; mkN "cepticismo" ; mkN "ceticismo" ; mkN "Ceticismo" ; mkN "descrença" ; } ; --*
lin ago_Adv = variants {mkAdv "anteriormente" ; mkAdv "atrás" ; } ; --*
lin agonist_1_N = mkN "protagonista" ; --*
lin agonist_4_N = mkN "agonista" ; --*
lin agonize_1_V = variants {mkV "atormentar" ; mkV "supliciar" ; mkV "torturar" ; } ; --*
lin agonize_2_V = variants {mkV "agoniar" ; mkV "agonizar" ; } ; --*
lin agon_N = mkN "agon" ; --*
lin agony_1_N = mkN "agonia" ; --*
lin agony_2_N = variants {mkN "agonia" ; mkN "passamento" ; mkN "sofrimento" ; } ; --*
lin agora_2_N = mkN "ágora" ; --*
lin agora_3_N = variants {mkN "ágora" ; mkN "square" ; } ; --*
lin agoraphobia_N = mkN "agorafobia" ; --*
lin agoraphobic_A = variants {mkA "agoráfoba" ; mkA "agorafóbico" ; mkA "agoráfobo" ; } ; --*
lin agouti_N = variants {mkN "aguti" ; mkN "cutia" ; } ; --*
lin agranulocytosis_N = variants {mkN "agranulocitose" ; mkN "Agranulocitose" ; } ; --*
lin agraphic_A = mkA "agráfico" ; --*
lin agra_PN = mkPN "Agra" ; --*
lin agrarian_A = variants {mkA "agrário" ; mkA "agrícola" ; } ; --*
lin agree_2_VV = variants {mkVV (mkV "concordar") ; mkVV (mkV "consentir") ; } ; --*
lin agree_3_V = variants {mkV "combinar" ; mkV "concordar" ; mkV "corresponder" ; } ; --*
lin agree_4_V = variants {mkV "compatibilizar" ; mkV "concordar" ; mkV "estar" ; mkV "harmonizar" ; mkV "in" ; } ; --*
lin agreeable_1_A = mkA "agradável" ; --*
lin agreeable_2_A = mkA "conforme" ; --*
lin agreeableness_1_N = variants {mkN "amenidade" ; mkN "comodidade" ; mkN "qualidade" ; } ; --*
lin agreed_A = variants {mkA "agreement" ; mkA "combinado" ; mkA "convindo" ; mkA "determinado" ; } ; --*
lin agreement_1_N = variants {mkN "acordo" ; mkN "pacto" ; } ; --*
lin agreement_2_N = mkN "correspondência" ; --*
lin agreement_3_N = variants {mkN "acordo" ; mkN "consenso" ; } ; --*
lin agreement_5_N = mkN "concordância" ; --*
lin agreement_6_N = variants {mkN "acordo" ; mkN "aliança" ; mkN "aprovação" ; mkN "conformidade" ; mkN "consenso" ; mkN "pacto" ; } ; --*
lin agree_on_1_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "concordar") ; } ; --*
lin agree_to_V2 = variants {mkV2 (mkV "concordar") ; mkV2 (mkV "consentir") ; } ; --*
lin agree_with_1_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "concordar") ; } ; --*
lin agribusiness_N = variants {mkN "agricultura" ; mkN "agro-indústria" ; mkN "agronegócio" ; mkN "farm" ; } ; --*
lin agricultural_1_A = variants {mkA "agrícola" ; mkA "agronômico" ; } ; --*
lin agricultural_2_A = variants {mkA "agrário" ; mkA "agrícola" ; } ; --*
lin agriculture_1_N = variants {mkN "agricultura" ; mkN "agro-indústria" ; mkN "agronegócio" ; mkN "farm" ; } ; --*
lin agriculture_2_N = variants {mkN "agricultura" ; mkN "cultivo" ; mkN "pecuária" ; } ; --*
lin agriculturist_1_N = variants {mkN "agricultor" ; mkN "agricultora" ; mkN "agrônomo" ; mkN "cultivador" ; mkN "engenheiro" ; } ; --*
lin agrimonia_1_N = mkN "agrimônia" ; --*
lin agromania_N = mkN "agromania" ; --*
lin agronomist_N = variants {mkN "engenheiro" ; mkN "Engenheiro" ; } ; --*
lin agronomy_N = variants {mkN "agriculture" ; mkN "agronomia" ; } ; --*
lin ague_2_N = variants {mkN "and" ; mkN "febre" ; } ; --*
lin ague_3_N = variants {mkN "accent" ; mkN "acento" ; } ; --*
lin ahead_1_Adv = variants {mkAdv "adiante" ; mkAdv "ante" ; mkAdv "diante" ; mkAdv "em" ; mkAdv "frente" ; mkAdv "front" ; } ; --*
lin ahead_2_Adv = mkAdv "avante" ; --*
lin ahead_3_Adv = variants {mkAdv "a" ; mkAdv "para" ; } ; --*
lin ahead_4_Adv = variants {mkAdv "advance" ; mkAdv "antecipadamente" ; } ; --*
lin aid_1_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "recurso" ; } ; --*
lin aid_1_V = variants {mkV "acorrer" ; mkV "ajudar" ; mkV "assistir" ; mkV "auxiliar" ; mkV "socorrer" ; mkV "solidarizar" ; } ; --*
lin aid_2_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "auxílio" ; mkN "socorro" ; } ; --*
lin aid_2_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "socorrer") ; } ; --*
lin aid_3_N = variants {mkN "aid" ; mkN "ajuda" ; } ; --*
lin aid_4_N = variants {mkN "assintência" ; mkN "cuidado" ; } ; --*
lin aide_1_N = variants {mkN "aide-de-acampamento" ; mkN "ajudante" ; mkN "ajudante-de-ordens" ; } ; --*
lin aide_2_N = variants {mkN "ajudante" ; mkN "auxiliar" ; } ; --*
lin aide_de_camp_N = variants {mkN "aide-de-acampamento" ; mkN "ajudante" ; mkN "ajudante-de-ordens" ; } ; --*
lin aids_N = variants {mkN "AIDS" ; mkN "immune" ; mkN "SIDA" ; } ; --*
lin aikido_N = mkN "aikido" ; --*
lin aileron_N = variants {mkN "aileron" ; mkN "válvula" ; } ; --*
lin ailment_N = mkN "doença" ; --*
lin ailurophobia_N = mkN "ailurofobia" ; --*
lin aim_1_N = variants {mkN "finalidade" ; mkN "intenção" ; mkN "intento" ; mkN "objectivo" ; mkN "objetivo" ; mkN "propósito" ; } ; --*
lin aim_1_V = variants {mkV "aim" ; mkV "apontar" ; mkV "direcionar" ; mkV "mirar" ; } ; --*
lin aim_2_N = variants {mkN "fim" ; mkN "ideia" ; mkN "intenção" ; mkN "objetivo" ; mkN "ponto" ; } ; --*
lin aim_2_VV = variants {mkVV (mkV "pretender") ; mkVV (mkV "propor") ; } ; --*
lin aim_3_N = variants {mkN "apontar" ; mkN "visar" ; } ; --*
lin aim_4_N = mkN "curso" ; --*
lin aim_4_V2 = mkV2 (mkV "direcionar") ; --*
lin aim_4_V = mkV "direcionar" ; --*
lin aim_4_VV = mkVV (mkV "direcionar") ; --*
lin aim_5_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "dirigir") ; } ; --*
lin aim_6_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "indicar") ; } ; --*
lin aim_7_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "almejar") ; mkV2 (mkV "aspirar") ; mkV2 (mkV "for") ; } ; --*
lin aim_7_V = variants {mkV "a" ; mkV "almejar" ; mkV "aspirar" ; mkV "for" ; } ; --*
lin aim_7_VV = variants {mkVV (mkV "a") ; mkVV (mkV "almejar") ; mkVV (mkV "aspirar") ; mkVV (mkV "for") ; } ; --*
lin aimless_1_A = mkA "à" ; --*
lin air_1_N = mkN "ar" ; --*
lin air_1_V2 = variants {mkV2 (mkV "abanar") ; mkV2 (mkV "arejar") ; mkV2 (mkV "out") ; } ; --*
lin air_3_V2 = mkV2 (mkV "transmitir") ; --*
lin air_4_N = variants {mkN "aragem" ; mkN "brisa" ; mkN "maresia" ; mkN "vento" ; mkN "wind" ; mkN "zefir" ; mkN "zéfiro" ; } ; --*
lin air_5_N = variants {mkN "ar" ; mkN "atmosfera" ; } ; --*
lin air_5_V2 = mkV2 (mkV "arejar") ; --*
lin air_6_N = mkN "ar" ; --*
lin air_6_V2 = variants {mkV2 (mkV "arejar") ; mkV2 (mkV "out") ; } ; --*
lin air_7_N = variants {mkN "line" ; mkN "melodia" ; mkN "phrase" ; mkN "toada" ; } ; --*
lin air_9_N = variants {mkN "aviação" ; mkN "travel" ; } ; --*
lin air_bladder_N = variants {mkN "bexiga" ; mkN "bladder" ; } ; --*
lin airborne_A = mkA "transportado" ; --*
lin air_conditioning_N = variants {mkN "conditioner" ; mkN "conditioning" ; } ; --*
lin air_cooled_A = mkA "refrigerado" ; --*
lin aircraft_N = variants {mkN "aeronave" ; mkN "aeronaves" ; mkN "aeroplano" ; mkN "avião" ; } ; --*
lin airdock_N = variants {mkN "hangar" ; mkN "Hangar" ; mkN "shed" ; } ; --*
lin airedale_N = variants {mkN "Airedale" ; mkN "terrier" ; } ; --*
lin airfield_N = variants {mkN "aeródromo" ; mkN "aeroporto" ; mkN "field" ; } ; --*
lin airflow_1_N = variants {mkN "flow" ; mkN "fluxo" ; mkN "of" ; } ; --*
lin airfoil_1_N = variants {mkN "aerofólio" ; mkN "surface" ; } ; --*
lin airforce_1_N = variants {mkN "Força" ; mkN "force" ; } ; --*
lin airforce_2_N = variants {mkN "Air" ; mkN "Força" ; mkN "Force" ; mkN "S." ; mkN "States" ; } ; --*
lin airheaded_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin airing_3_N = mkN "ventilação" ; --*
lin airless_A = mkA "abafado" ; --*
lin airlift_N = mkN "Transporte" ; --*
lin airline_2_N = variants {mkN "business" ; mkN "linha" ; mkN "Linha" ; } ; --*
lin airliner_N = mkN "avião" ; --*
lin airmail_1_N = mkN "correio" ; --*
lin airmail_2_N = mkN "correio" ; --*
lin airman_N = variants {mkN "aeronauta" ; mkN "aviador" ; mkN "aviadora" ; mkN "aviatriz" ; mkN "piloto" ; mkN "piloto-aviador" ; } ; --*
lin air_of_N2 = variants {mkN2 (mkN "atmosfera") noPrep ; mkN2 (mkN "aura") noPrep ; } ; --*
lin airplane_N = variants {mkN "aeronaves" ; mkN "aeroplano" ; mkN "avião" ; } ; --*
lin airport_N = variants {mkN "aeródromo" ; mkN "aeroporto" ; } ; --*
lin air_pump_N = mkN "pump" ; --*
lin air_raid_N = variants {mkN "attack" ; mkN "raid" ; } ; --*
lin airship_N = variants {mkN "aeronave" ; mkN "dirigível" ; } ; --*
lin airs_N = mkN "afectação" ; --*
lin airspace_1_N = variants {mkN "espaço" ; mkN "space" ; } ; --*
lin airspace_2_N = mkN "espaço" ; --*
lin airstrip_N = variants {mkN "pista" ; mkN "strip" ; } ; --*
lin airtight_1_A = mkA "impermeável" ; --*
lin airtight_2_A = mkA "estanque" ; --*
lin airway_1_N = variants {mkN "duct" ; mkN "passage" ; mkN "via" ; } ; --*
lin airway_2_N = variants {mkN "lane" ; mkN "path" ; mkN "rota" ; } ; --*
lin airway_3_N = variants {mkN "tract" ; mkN "trato" ; } ; --*
lin airway_4_N = variants {mkN "business" ; mkN "linha" ; mkN "Linha" ; } ; --*
lin airwoman_N = variants {mkN "aviadora" ; mkN "aviatrix" ; mkN "aviatriz" ; } ; --*
lin airy_1_A = variants {mkA "aguado" ; mkA "arejado" ; mkA "falhado" ; mkA "ralo" ; } ; --*
lin airy_2_A = mkA "visionário" ; --*
lin airy_3_A = mkA "translúcido" ; --*
lin airy_4_A = mkA "etéreo" ; --*
lin aisle_2_N = variants {mkN "corredor" ; mkN "passadiço" ; mkN "passagem" ; } ; --*
lin aisle_3_N = mkN "nave" ; --*
lin ajar_A = variants {mkA "entreaberta" ; mkA "entreaberto" ; } ; --*
lin akin_1_A = variants {mkA "cossangüineo" ; mkA "semelhante" ; } ; --*
lin akin_to_A2 = mkA2 (mkA "semelhante") noPrep ; --*
lin al_1_PN = variants {mkPN "Aluminio" ; mkPN "alumínio" ; mkPN "number" ; } ; --*
lin al_2_PN = variants {mkPN "Alabama" ; mkPN "of" ; mkPN "State" ; } ; --*
lin alabama_1_PN = variants {mkPN "Alabama" ; mkPN "of" ; mkPN "State" ; } ; --*
lin alabama_3_PN = variants {mkPN "alabama" ; mkPN "rio" ; mkPN "River" ; } ; --*
lin alabama_4_PN = mkPN "alabama" ; --*
lin alabaster_1_N = mkN "alabastro" ; --*
lin alabaster_3_N = mkN "alabastro" ; --*
lin alabaster_A = mkA "alabastrino" ; --*
lin alacrity_N = variants {mkN "alacridade" ; mkN "furor" ; mkN "vida" ; } ; --*
lin alanine_N = mkN "alanina" ; --*
lin alar_2_A = mkA "aliforme" ; --*
lin alarm_1_N = variants {mkN "consternação" ; mkN "estupefação" ; mkN "medo" ; } ; --*
lin alarm_1_V2 = mkV2 (mkV "horrorizar") ; --*
lin alarm_2_N = variants {mkN "alarme" ; mkN "device" ; mkN "system" ; } ; --*
lin alarm_2_V2 = variants {mkV2 (mkV "alarmar") ; mkV2 (mkV "alertar") ; } ; --*
lin alarm_3_N = variants {mkN "alarme" ; mkN "Alarmes" ; mkN "signal" ; } ; --*
lin alarm_4_N = variants {mkN "clock" ; mkN "despertador" ; } ; --*
lin alarm_clock_N = variants {mkN "clock" ; mkN "despertador" ; } ; --*
lin alarming_A = variants {mkA "alarmante" ; mkA "inquietante" ; } ; --*
lin alarmism_N = mkN "alarmismo" ; --*
lin alaska_PN = variants {mkPN "Alasca" ; mkPN "Frontier" ; } ; --*
lin albanian_1_N = variants {mkN "albanés" ; mkN "albanês" ; mkN "albanesa" ; } ; --*
lin albanian_2_N = variants {mkN "albanês" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin albanian_A = mkA "albanês" ; --*
lin albania_PN = variants {mkPN "Albania" ; mkPN "Albânia" ; mkPN "of" ; } ; --*
lin albatross_2_N = variants {mkN "albatroz" ; mkN "Thalassarche" ; } ; --*
lin albedo_N = variants {mkN "albedo" ; mkN "power" ; } ; --*
lin alberta_PN = mkPN "Alberta" ; --*
lin albert_PN = variants {mkPN "Albert" ; mkPN "Francis" ; } ; --*
lin albinal_1_A = mkA "albino" ; --*
lin albinism_N = mkN "albinismo" ; --*
lin albino_N = variants {mkN "albina" ; mkN "albino" ; } ; --*
lin alb_N = mkN "alva" ; --*
lin album_1_N = variants {mkN "album" ; mkN "álbum" ; } ; --*
lin album_2_N = variants {mkN "Album" ; mkN "álbum" ; mkN "Álbuns" ; } ; --*
lin albumen_1_N = mkN "albumina" ; --*
lin albumen_2_N = variants {mkN "albumen" ; mkN "albúmen" ; mkN "clara" ; mkN "white" ; } ; --*
lin albumin_N = mkN "albumina" ; --*
lin albuminuria_N = mkN "albuminúria" ; --*
lin alcalde_N = variants {mkN "alcaide" ; mkN "Alcaide" ; } ; --*
lin alchemic_1_A = mkA "alquímico" ; --*
lin alchemist_N = mkN "alquimista" ; --*
lin alchemy_1_N = variants {mkN "alquimia" ; mkN "chemistry" ; mkN "química" ; } ; --*
lin alchemy_2_N = variants {mkN "alquimia" ; mkN "Alquimia" ; } ; --*
lin alcohol_1_N = variants {mkN "álcoois" ; mkN "álcool" ; mkN "Bebida" ; mkN "beverage" ; mkN "drink" ; } ; --*
lin alcohol_2_N = variants {mkN "álcoois" ; mkN "Álcoois" ; mkN "Alcool" ; mkN "álcool" ; } ; --*
lin alcoholic_1_A = mkA "alcoólico" ; --*
lin alcoholic_2_A = mkA "alcoólico" ; --*
lin alcoholic_N = variants {mkN "alcoólatra" ; mkN "bêbado" ; mkN "borracho" ; } ; --*
lin alcoholism_1_N = variants {mkN "addiction" ; mkN "alcoolismo" ; mkN "Alcoolismo" ; } ; --*
lin alcoholism_2_N = variants {mkN "alcoolismo" ; mkN "Dipsomania" ; } ; --*
lin alcove_N = variants {mkN "alcova" ; mkN "nicho" ; } ; --*
lin aldehyde_N = variants {mkN "aldeído" ; mkN "Aldeídos" ; } ; --*
lin alder_1_N = mkN "amieiro" ; --*
lin alder_2_N = variants {mkN "amieiro" ; mkN "tree" ; } ; --*
lin alderman_N = mkN "vereador" ; --*
lin aldohexose_N = variants {mkN "aldo-hexose" ; mkN "Aldohexose" ; mkN "Aldohexoses" ; } ; --*
lin aldose_N = variants {mkN "Aldose" ; mkN "Aldoses" ; } ; --*
lin aldosterone_N = mkN "aldosterona" ; --*
lin aldosteronism_N = mkN "Hiperaldosteronismo" ; --*
lin alembic_N = mkN "alambique" ; --*
lin ale_N = variants {mkN "ale" ; mkN "cerveja" ; } ; --*
lin aleppo_PN = mkPN "Alepo" ; --*
lin alert_1_A = mkA "alerta" ; --*
lin alert_3_N = variants {mkN "alarme" ; mkN "Alarmes" ; mkN "signal" ; } ; --*
lin alert_to_V3 = variants {mkV3 (mkV "alarmar") ; mkV3 (mkV "alertar") ; } ; --*
lin aleurone_N = mkN "aleurona" ; --*
lin aleuronic_A = mkA "aleurônico" ; --*
lin alexander_1_PN = variants {mkPN "lovage" ; mkPN "olusatrum" ; mkPN "parsley" ; mkPN "Smyrnium" ; } ; --*
lin alexander_2_PN = variants {mkPN "Alexandre" ; mkPN "the" ; } ; --*
lin alexandria_2_PN = variants {mkPN "Alexandria" ; mkPN "Iskandriyah" ; } ; --*
lin alfalfa_1_N = variants {mkN "alfafa" ; mkN "sativa" ; } ; --*
lin alfred_PN = variants {mkPN "Alfredo" ; mkPN "the" ; } ; --*
lin alfresco_Adv = variants {mkAdv "a" ; mkAdv "ao" ; mkAdv "of" ; } ; --*
lin alga_N = variants {mkN "alga" ; mkN "algas" ; } ; --*
lin algarroba_1_N = variants {mkN "alfarroba" ; mkN "bean" ; mkN "pod" ; } ; --*
lin algarroba_2_N = variants {mkN "Alfarroba" ; mkN "alfarrobeira" ; mkN "bean" ; mkN "siliqua" ; mkN "tree" ; } ; --*
lin algebraic_A = mkA "algébrico" ; --*
lin algebraical_A = mkA "algébrico" ; --*
lin algebraist_N = mkN "algebrista" ; --*
lin algebra_N = variants {mkN "álgebra" ; mkN "Álgebra" ; } ; --*
lin algerian_A = variants {mkA "algeriano" ; mkA "argeliano" ; mkA "argelino" ; } ; --*
lin algerian_N = mkN "argelino" ; --*
lin algeria_PN = variants {mkPN "Algéria" ; mkPN "and" ; mkPN "Argelia" ; } ; --*
lin algin_N = variants {mkN "acid" ; mkN "algina" ; } ; --*
lin algometric_1_A = mkA "algométrico" ; --*
lin algorithm_N = variants {mkN "algoritmo" ; mkN "Algorítmo" ; mkN "program" ; mkN "rule" ; } ; --*
lin alias_N = variants {mkN "alias" ; mkN "apelido" ; mkN "name" ; } ; --*
lin alibi_1_N = mkN "álibi" ; --*
lin alibi_2_N = variants {mkN "álibi" ; mkN "desculpa" ; mkN "escusa" ; } ; --*
lin alidade_2_N = mkN "Alidade" ; --*
lin alien_1_A = mkA "alheio" ; --*
lin alien_2_A = variants {mkA "estrangeiro" ; mkA "estranho" ; mkA "exótico" ; } ; --*
lin alienable_A = mkA "alienável" ; --*
lin alienate_1_V2 = variants {mkV2 (mkV "alhear") ; mkV2 (mkV "alienar") ; mkV2 (mkV "estranhar") ; } ; --*
lin alienate_2_V2 = mkV2 (mkV "alienar") ; --*
lin alienate_3_V2 = variants {mkV2 (mkV "alhear") ; mkV2 (mkV "alienar") ; } ; --*
lin alienation_1_N = variants {mkN "alheamento" ; mkN "alienação" ; } ; --*
lin alienFem_1_N = variants {mkN "estrangeira" ; mkN "estrangeiro" ; } ; --*
lin alienFem_2_N = variants {mkN "estrangeiro" ; mkN "pessoa" ; } ; --*
lin alienFem_3_N = variants {mkN "alienígena" ; mkN "being" ; mkN "extraterrestre" ; } ; --*
lin alienist_N = mkN "alienista" ; --*
lin alienMasc_1_N = variants {mkN "estrangeira" ; mkN "estrangeiro" ; } ; --*
lin alienMasc_2_N = variants {mkN "estrangeiro" ; mkN "pessoa" ; } ; --*
lin alienMasc_3_N = variants {mkN "alienígena" ; mkN "being" ; mkN "extraterrestre" ; } ; --*
lin alight_1_V = mkV "desembarcar" ; --*
lin alight_2_V = variants {mkV "descer" ; mkV "down" ; mkV "pousar" ; } ; --*
lin alight_A = variants {mkA "ardente" ; mkA "fire" ; } ; --*
lin align_1_V2 = variants {mkV2 (mkV "alinhar") ; mkV2 (mkV "up") ; } ; --*
lin align_3_V2 = mkV2 (mkV "alinhar-se") ; --*
lin align_3_V = mkV "alinhar-se" ; --*
lin alignment_1_N = variants {mkN "aliança" ; mkN "coalizão" ; mkN "coligação" ; } ; --*
lin alignment_2_N = mkN "alinhamento" ; --*
lin alignment_3_N = variants {mkN "conjunção" ; mkN "Conjunção" ; } ; --*
lin alignment_4_N = mkN "alinhamento" ; --*
lin alike_1_Adv = mkAdv "igual" ; --*
lin alike_A = variants {mkA "parecido" ; mkA "semelhante" ; mkA "similar" ; } ; --*
lin alimentary_1_A = variants {mkA "alimentar" ; mkA "alimentário" ; mkA "nutritivo" ; } ; --*
lin alimony_N = mkN "pensão" ; --*
lin alive_1_A = mkA "vivo" ; --*
lin alive_3_A = mkA "vivo" ; --*
lin alive_6_A = mkA "vivo" ; --*
lin alive_to_A2 = mkA2 (mkA "vivo") noPrep ; --*
lin alive_with_A2 = mkA2 (mkA "vivo") noPrep ; --*
lin alkali_1_N = variants {mkN "álcali" ; mkN "base" ; mkN "bases" ; mkN "Bases" ; } ; --*
lin alkaline_1_A = mkA "alcalino" ; --*
lin alkalinity_N = mkN "alcalinidade" ; --*
lin alkaloidal_A = mkA "alcaloidal" ; --*
lin alkaloid_N = mkN "alcalóide" ; --*
lin alkalosis_N = mkN "alcalose" ; --*
lin alkaptonuria_1_N = mkN "alcaptonúria" ; --*
lin alkene_N = variants {mkN "alceno" ; mkN "alqueno" ; mkN "Alquenos" ; } ; --*
lin alkyl_N = variants {mkN "Alquila" ; mkN "group" ; mkN "radical" ; } ; --*
lin allah_PN = mkPN "Alá" ; --*
lin allay_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "aquietar") ; mkV2 (mkV "pacificar") ; } ; --*
lin allay_2_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "matar") ; mkV2 (mkV "saciar") ; } ; --*
lin allegation_1_N = mkN "alegação" ; --*
lin alleged_1_A = mkA "alegado" ; --*
lin alleged_2_A = variants {mkA "assim" ; mkA "chamado" ; mkA "dito" ; mkA "suposto" ; } ; --*
lin allegedly_AdA = variants {mkAdA "alegadamente" ; mkAdA "supostamente" ; } ; --*
lin allegedly_AdV = variants {mkAdV "alegadamente" ; mkAdV "supostamente" ; } ; --*
lin allege_VS = variants {mkVS (mkV "afirmar") ; mkVS (mkV "alegar") ; mkVS (mkV "declarar") ; } ; --*
lin allegiance_1_N = mkN "dedicação" ; --*
lin allegiance_2_N = variants {mkN "fidelidade" ; mkN "lealdade" ; } ; --*
lin allegoric_A = mkA "alegórico" ; --*
lin allegorical_A = mkA "alegórico" ; --*
lin allegory_1_N = variants {mkN "alegoria" ; mkN "apólogo" ; mkN "Apólogo" ; mkN "parábola" ; } ; --*
lin allegory_2_N = variants {mkN "emblema" ; mkN "símbolo" ; } ; --*
lin allegory_3_N = mkN "alegoria" ; --*
lin allele_N = mkN "alelo" ; --*
lin allen_1_PN = variants {mkPN "Allen" ; mkPN "Ethel" ; mkPN "Gracie" ; } ; --*
lin allen_2_PN = variants {mkPN "Allen" ; mkPN "Stewart" ; mkPN "Woody" ; } ; --*
lin allen_3_PN = variants {mkPN "Allen" ; mkPN "Ethan" ; } ; --*
lin allergenic_A = mkA "alergênico" ; --*
lin allergen_N = variants {mkN "alergénios" ; mkN "alérgeno" ; } ; --*
lin allergic_1_A = mkA "alérgico" ; --*
lin allergic_2_A = variants {mkA "alérgico" ; mkA "hipersensível" ; } ; --*
lin allergology_N = mkN "alergologia" ; --*
lin allergy_N = variants {mkN "alergia" ; mkN "reaction" ; } ; --*
lin alleviate_1_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "amenizar") ; mkV2 (mkV "atenuar") ; mkV2 (mkV "melhorar") ; } ; --*
lin alleviate_2_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "facilitar") ; } ; --*
lin alleviation_1_N = mkN "alívio" ; --*
lin alleviation_2_N = mkN "alívio" ; --*
lin alleviative_A = mkA "paliativo" ; --*
lin alley_1_N = variants {mkN "aléia" ; mkN "ruela" ; mkN "street" ; } ; --*
lin alleyway_N = variants {mkN "aléia" ; mkN "ruela" ; mkN "street" ; } ; --*
lin alliance_1_N = mkN "aliança" ; --*
lin alliance_2_N = mkN "ligação" ; --*
lin alliance_3_N = variants {mkN "aliança" ; mkN "coalizão" ; mkN "coligação" ; } ; --*
lin alliance_4_N = mkN "aliança" ; --*
lin alliance_5_N = variants {mkN "aliança" ; mkN "confederação" ; mkN "Confederação" ; } ; --*
lin allied_4_A = variants {mkA "aliado" ; mkA "confederativo" ; } ; --*
lin allied_5_A = mkA "aliado" ; --*
lin allies_3_N = mkN "Aliados" ; --*
lin alligator_1_N = variants {mkN "aligátor" ; mkN "caimão" ; mkN "jacaré" ; } ; --*
lin alligatored_A = mkA "rachado" ; --*
lin alliteration_N = variants {mkN "aliteração" ; mkN "rhyme" ; } ; --*
lin allocate_V2 = mkV2 (mkV "alocar") ; --*
lin allocation_1_N = variants {mkN "alocação" ; mkN "arrendamento" ; mkN "atribuição" ; } ; --*
lin allocation_2_N = variants {mkN "divisão" ; mkN "repartição" ; } ; --*
lin allocator_N = mkN "distribuidor" ; --*
lin allogamy_N = mkN "Alogamia" ; --*
lin allomorph_2_N = mkN "Alomorfia" ; --*
lin allophone_N = variants {mkN "alofone" ; mkN "alofonia" ; } ; --*
lin allopurinol_N = mkN "alopurinol" ; --*
lin allot_1_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "lotear") ; } ; --*
lin allot_2_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "outorgar") ; } ; --*
lin allot_3_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; } ; --*
lin allotment_1_N = variants {mkN "alocação" ; mkN "arrendamento" ; mkN "atribuição" ; } ; --*
lin allotment_2_N = variants {mkN "divisão" ; mkN "repartição" ; } ; --*
lin allotrope_N = mkN "alótropo" ; --*
lin allotropy_N = variants {mkN "alotropia" ; mkN "Alotropia" ; } ; --*
lin allow_10_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "agüentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; } ; --*
lin allow_1_V2V = variants {mkV2V (mkV "deixar") ; mkV2V (mkV "permitir") ; mkV2V (mkV "possibilitar") ; } ; --*
lin allow_2_V2V = variants {mkV2V (mkV "consentir") ; mkV2V (mkV "deixar") ; mkV2V (mkV "permitir") ; } ; --*
lin allow_3_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "outorgar") ; mkV2 (mkV "permitir") ; } ; --*
lin allow_4_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "reservar") ; mkV2 (mkV "separar") ; } ; --*
lin allow_5_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "for") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "permitir") ; } ; --*
lin allow_9_V2 = mkV2 (mkV "dar") ; --*
lin allowable_3_A = mkA "admissível" ; --*
lin allowance_1a_N = variants {mkN "mesada" ; mkN "pensão" ; } ; --*
lin allowance_1b_N = variants {mkN "mesada" ; mkN "pensão" ; } ; --*
lin allow_for_6_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "for") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "permitir") ; } ; --*
lin allow_for_7_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "into") ; mkV2 (mkV "planejar") ; } ; --*
lin allow_of_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "permitir") ; } ; --*
lin alloy_1_N = variants {mkN "liga" ; mkN "Liga" ; mkN "ligas" ; mkN "Ligas" ; } ; --*
lin alloy_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin alloy_2_N = mkN "liga" ; --*
lin alloy_2_V2 = mkV2 (mkV "aliar") ; --*
lin allspice_3_N = variants {mkN "Pimenta" ; mkN "Pimenta-da-jamaica" ; } ; --*
lin allude_V = variants {mkV "aludir" ; mkV "fazer" ; mkV "reportar-se" ; } ; --*
lin allurement_2_N = mkN "sedução" ; --*
lin allure_N = mkN "sedução" ; --*
lin allure_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "tentar") ; } ; --*
lin alluring_A = variants {mkA "aliciante" ; mkA "atrativo" ; mkA "tentador" ; } ; --*
lin allusion_N = mkN "alusão" ; --*
lin allusiveness_N = mkN "alusão" ; --*
lin alluvial_A = mkA "aluvial" ; --*
lin alluvion_2_N = variants {mkN "aluvião" ; mkN "cheia" ; mkN "dilúvio" ; mkN "enchente" ; mkN "inundação" ; mkN "temporal" ; } ; --*
lin alluvion_3_N = variants {mkN "Aluvião" ; mkN "deposit" ; mkN "sediment" ; } ; --*
lin ally_1_N = mkN "aliado" ; --*
lin ally_2_N = variants {mkN "aliada" ; mkN "aliado" ; } ; --*
lin alma_ata_PN = mkPN "Almaty" ; --*
lin alma_mater_N = mkN "mater" ; --*
lin almanac_1_N = variants {mkN "almanaque" ; mkN "calendar" ; } ; --*
lin almanac_2_N = variants {mkN "almanaque" ; mkN "Almanaque" ; mkN "Almanaques" ; } ; --*
lin almandine_2_N = variants {mkN "almandina" ; mkN "almandita" ; } ; --*
lin almandite_N = variants {mkN "almandina" ; mkN "almandita" ; } ; --*
lin almighty_A = variants {mkA "omnipotente" ; mkA "onipotente" ; mkA "todo-poderoso" ; } ; --*
lin almighty_N = variants {mkN "Almighty" ; mkN "Senhor" ; mkN "Todo-Poderoso" ; } ; --*
lin almond_1_N = variants {mkN "almond" ; mkN "amendoeira" ; mkN "amygdalus" ; mkN "communis" ; mkN "dulcis" ; } ; --*
lin almond_2_N = variants {mkN "amêndoa" ; mkN "mígala" ; } ; --*
lin almost_AdA = variants {mkAdA "perto" ; mkAdA "por" ; mkAdA "quase" ; mkAdA "virtualmente" ; } ; --*
lin almost_AdN = variants {mkAdN "perto" ; mkAdN "por" ; mkAdN "quase" ; mkAdN "virtualmente" ; } ; --*
lin almost_AdV = variants {mkAdV "perto" ; mkAdV "por" ; mkAdV "quase" ; mkAdV "virtualmente" ; } ; --*
lin alms_giving_1_N = mkN "esmola" ; --*
lin alms_N = mkN "esmola" ; --*
lin aloe_N = variants {mkN "aloés" ; mkN "azebre" ; mkN "babosa" ; mkN "erva-babosa" ; } ; --*
lin aloft_1_Adv = mkAdv "no" ; --*
lin aloft_2_Adv = mkAdv "no" ; --*
lin aloft_3_Adv = mkAdv "no" ; --*
lin aloft_4_Adv = mkAdv "no" ; --*
lin alone_1_A = variants {mkA "inigualável" ; mkA "único" ; } ; --*
lin alone_4_A = variants {mkA "solitário" ; mkA "sozinho" ; } ; --*
lin aloneness_N = mkN "solidão" ; --*
lin alongside_Adv = variants {mkAdv "ao" ; mkAdv "aoladode" ; mkAdv "com" ; mkAdv "junto" ; } ; --*
lin aloof_A = variants {mkA "afastado" ; mkA "alijado" ; mkA "distante" ; } ; --*
lin aloof_Adv = mkAdv "à" ; --*
lin aloofness_1_N = mkN "afastamento" ; --*
lin alopecia_N = mkN "alopécia" ; --*
lin a_lot_AdA = variants {mkAdA "good" ; mkAdA "great" ; mkAdA "lot" ; mkAdA "much" ; mkAdA "mui" ; mkAdA "muita" ; } ; --*
lin a_lot_Adv = variants {mkAdv "good" ; mkAdv "great" ; mkAdv "lot" ; mkAdv "much" ; mkAdv "mui" ; mkAdv "muita" ; } ; --*
lin a_lotPl_Card = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin a_lotSg_Card = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin aloud_1_Adv = variants {mkAdv "em" ; mkAdv "loud" ; } ; --*
lin aloud_2_Adv = variants {mkAdv "em" ; mkAdv "emvozalta" ; mkAdv "ruidosamente" ; } ; --*
lin alpaca_1_N = mkN "alpaca" ; --*
lin alpaca_3_N = variants {mkN "alpaca" ; mkN "pacos" ; } ; --*
lin alpha_1_N = variants {mkN "alfa" ; mkN "α" ; } ; --*
lin alpha_2_N = mkN "alfa" ; --*
lin alphabet_1_N = mkN "alfabeto" ; --*
lin alphabet_2_N = variants {mkN "abc" ; mkN "abecê" ; mkN "principle" ; mkN "rudiment" ; } ; --*
lin alphabetic_1_A = variants {mkA "alfabético" ; mkA "alfabeto" ; } ; --*
lin alphabetic_2_A = variants {mkA "alfabético" ; mkA "alfabeto" ; } ; --*
lin alphabetical_1_A = variants {mkA "alfabético" ; mkA "alfabeto" ; } ; --*
lin alphabetical_2_A = variants {mkA "alfabético" ; mkA "alfabeto" ; } ; --*
lin alphabetization_1_N = mkN "literacia" ; --*
lin alphanumeric_1_A = mkA "alfanumérico" ; --*
lin alpine_1_A = variants {mkA "alpestre" ; mkA "alpino" ; } ; --*
lin alpine_2_A = mkA "alpino" ; --*
lin alpine_3_A = variants {mkA "alpestre" ; mkA "alpino" ; } ; --*
lin alp_N = variants {mkN "alpe" ; mkN "alpes" ; mkN "Alpes" ; } ; --*
lin alprazolam_N = mkN "alprazolam" ; --*
lin already_Adv = mkAdv "já" ; --*
lin already_AdV = mkAdV "já" ; --*
lin alright_1_Adv = variants {mkAdv "bem" ; mkAdv "right" ; } ; --*
lin alright_2_Adv = variants {mkAdv "bem" ; mkAdv "right" ; mkAdv "well" ; } ; --*
lin alright_3_Adv = variants {mkAdv "bem" ; mkAdv "right" ; } ; --*
lin alsatianFem_1_N = mkN "alsaciano" ; --*
lin alsatianFem_2_N = variants {mkN "pastor" ; mkN "police" ; mkN "shepherd" ; } ; --*
lin alsatianMasc_1_N = mkN "alsaciano" ; --*
lin alsatianMasc_2_N = variants {mkN "pastor" ; mkN "police" ; mkN "shepherd" ; } ; --*
lin also_Adv = variants {mkAdv "ainda" ; mkAdv "idem" ; mkAdv "outrossim" ; mkAdv "também" ; mkAdv "well" ; } ; --*
lin also_AdV = variants {mkAdV "ainda" ; mkAdV "idem" ; mkAdV "outrossim" ; mkAdV "também" ; mkAdV "well" ; } ; --*
lin altar_1_N = variants {mkN "altar" ; mkN "table" ; } ; --*
lin altar_2_N = mkN "altar" ; --*
lin altar_piece_N = mkN "retábulo" ; --*
lin alter_1_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "modificar") ; mkV2 (mkV "mudar") ; } ; --*
lin alter_2_V = variants {mkV "alterar" ; mkV "modificar" ; mkV "mudar" ; mkV "variar" ; } ; --*
lin alter_3_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "consertar") ; } ; --*
lin alter_4_V2 = mkV2 (mkV "interpolar") ; --*
lin alter_4_V = mkV "interpolar" ; --*
lin alteration_1_N = variants {mkN "alteração" ; mkN "modificação" ; mkN "mudança" ; mkN "variação" ; } ; --*
lin alteration_2_N = variants {mkN "ajuste" ; mkN "alteração" ; mkN "modificação" ; } ; --*
lin altercation_N = variants {mkN "altercação" ; mkN "rixa" ; } ; --*
lin altered_1_A = mkA "alterado" ; --*
lin altered_3_A = mkA "adaptado" ; --*
lin alter_ego_N = mkN "ego" ; --*
lin alternate_1_A = variants {mkA "alternado" ; mkA "alternante" ; mkA "alternativa" ; mkA "alterno" ; } ; --*
lin alternate_2_A = mkA "alternativo" ; --*
lin alternate_3_A = variants {mkA "alternado" ; mkA "alterno" ; } ; --*
lin alternate_3_V2 = mkV2 (mkV "ser") ; --*
lin alternate_3_V = mkV "ser" ; --*
lin alternate_4_V2 = variants {mkV2 (mkV "alternar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin alternate_4_V = variants {mkV "alternar" ; mkV "mudar" ; mkV "trocar" ; } ; --*
lin alternate_5_V2 = variants {mkV2 (mkV "alternar") ; mkV2 (mkV "turns") ; } ; --*
lin alternate_5_V = variants {mkV "alternar" ; mkV "turns" ; } ; --*
lin alternation_N = mkN "alternação" ; --*
lin alternative_1_A = mkA "alternativo" ; --*
lin alternative_3_A = mkA "alternativo" ; --*
lin alternative_N = variants {mkN "alternativa" ; mkN "eleição" ; mkN "escolha" ; mkN "intercorrência" ; mkN "opção" ; } ; --*
lin alternator_N = mkN "alternador" ; --*
lin altimeter_N = variants {mkN "Altimetro" ; mkN "altímetro" ; } ; --*
lin altitude_1_N = variants {mkN "altitude" ; mkN "altura" ; } ; --*
lin altitude_2_N = variants {mkN "altitude" ; mkN "altura" ; mkN "ortocentro" ; } ; --*
lin altitude_3_N = mkN "altitude" ; --*
lin alto_2_N = variants {mkN "contralto" ; mkN "Contralto" ; mkN "Contraltos" ; } ; --*
lin alto_3_N = mkN "alto" ; --*
lin altogether_3_Adv = variants {mkAdv "ensemble" ; mkAdv "in" ; mkAdv "numa" ; mkAdv "the" ; } ; --*
lin altogether_AdA = variants {mkAdA "ao" ; mkAdA "cabalmente" ; mkAdA "cem" ; mkAdA "completamente" ; mkAdA "inteiramente" ; mkAdA "totalmente" ; } ; --*
lin altogether_AdV = variants {mkAdV "ao" ; mkAdV "cabalmente" ; mkAdV "cem" ; mkAdV "completamente" ; mkAdV "inteiramente" ; mkAdV "totalmente" ; } ; --*
lin altruism_N = variants {mkN "Altruismo" ; mkN "altruísmo" ; } ; --*
lin altruistic_A = variants {mkA "altruísta" ; mkA "humanitário" ; } ; --*
lin altruist_N = variants {mkN "altruísta" ; mkN "filantropo" ; } ; --*
lin alum_2_N = variants {mkN "alum" ; mkN "alume" ; } ; --*
lin alum_3_N = variants {mkN "alumnus" ; mkN "graduado" ; } ; --*
lin alumina_N = variants {mkN "alumina" ; mkN "oxide" ; } ; --*
lin aluminium_N = variants {mkN "Aluminio" ; mkN "alumínio" ; mkN "number" ; } ; --*
lin aluminum_N = variants {mkN "Aluminio" ; mkN "alumínio" ; mkN "number" ; } ; --*
lin alumna_N = variants {mkN "alumnus" ; mkN "graduado" ; } ; --*
lin alumnus_N = variants {mkN "alumnus" ; mkN "graduado" ; } ; --*
lin alveolar_2_A = mkA "alveolar" ; --*
lin alveolar_N = variants {mkN "Consoante" ; mkN "consonant" ; } ; --*
lin alveolate_1_A = mkA "alveolada" ; --*
lin alveolus_1_N = variants {mkN "alvéolos" ; mkN "cell" ; mkN "sac" ; } ; --*
lin alveolus_2_N = variants {mkN "alvéolos" ; mkN "socket" ; } ; --*
lin always_1_Adv = mkAdv "sempre" ; --*
lin always_1_AdV = mkAdV "sempre" ; --*
lin always_2_Adv = variants {mkAdv "de" ; mkAdv "invariavelmente" ; mkAdv "sempre" ; } ; --*
lin always_2_AdV = variants {mkAdV "de" ; mkAdV "invariavelmente" ; mkAdV "sempre" ; } ; --*
lin always_3_Adv = variants {mkAdv "constantemente" ; mkAdv "continuamente" ; mkAdv "eternamente" ; mkAdv "incessantemente" ; mkAdv "perpetuamente" ; mkAdv "sempre" ; } ; --*
lin always_3_AdV = variants {mkAdV "constantemente" ; mkAdV "continuamente" ; mkAdV "eternamente" ; mkAdV "incessantemente" ; mkAdV "perpetuamente" ; mkAdV "sempre" ; } ; --*
lin alyssum_2_N = mkN "Alyssum" ; --*
lin amah_1_N = variants {mkN "ama-de-leite" ; mkN "Ama-de-leite" ; mkN "nurse" ; } ; --*
lin amah_2_N = variants {mkN "ama" ; mkN "arrumadeira" ; mkN "camareira" ; mkN "criada" ; mkN "empregada" ; } ; --*
lin amalgam_1_N = variants {mkN "amalgam" ; mkN "amálgama" ; } ; --*
lin amalgam_2_N = mkN "amálgama" ; --*
lin amalgamate_V2 = variants {mkV2 (mkV "confraternizar") ; mkV2 (mkV "misturar") ; } ; --*
lin amalgamation_N = mkN "fusão" ; --*
lin amanuensis_N = variants {mkN "estenógrafo" ; mkN "typist" ; } ; --*
lin amaranth_1_N = mkN "amaranto" ; --*
lin amaranth_2_N = mkN "amaranto" ; --*
lin amaretto_N = mkN "amaretto" ; --*
lin amaryllis_N = mkN "amarílis" ; --*
lin amass_1_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "aglomerar") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "conglomerar") ; mkV2 (mkV "up") ; } ; --*
lin amass_2_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin amateurFem_1_N = variants {mkN "aficionado" ; mkN "amador" ; mkN "amadora" ; } ; --*
lin amateurFem_2_N = variants {mkN "amador" ; mkN "Amadorismo" ; } ; --*
lin amateurMasc_1_N = variants {mkN "aficionado" ; mkN "amador" ; mkN "amadora" ; } ; --*
lin amateurMasc_2_N = variants {mkN "amador" ; mkN "Amadorismo" ; } ; --*
lin amatory_A = mkA "amoroso" ; --*
lin amaurosis_N = mkN "Amaurose" ; --*
lin amaze_1_V2 = variants {mkV2 (mkV "admirar") ; mkV2 (mkV "assombrar") ; mkV2 (mkV "espantar") ; mkV2 (mkV "estontear") ; mkV2 (mkV "surpreender") ; } ; --*
lin amaze_2_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin amazement_N = variants {mkN "admiração" ; mkN "espanto" ; mkN "surpresa" ; } ; --*
lin amazing_1_A = variants {mkA "assombroso" ; mkA "espantoso" ; mkA "estonteante" ; mkA "surpreendente" ; } ; --*
lin amazing_2_A = variants {mkA "admirável" ; mkA "imponente" ; mkA "impressionante" ; mkA "surpreendente" ; } ; --*
lin amazon_2_N = variants {mkN "amazonas" ; mkN "Amazonas" ; } ; --*
lin amazon_3_N = variants {mkN "amazona" ; mkN "rio" ; mkN "Rio" ; mkN "River" ; } ; --*
lin ambassador_1_N = variants {mkN "embaixador" ; mkN "embaixadora" ; } ; --*
lin ambassador_2_N = mkN "embaixador" ; --*
lin ambassadorial_A = mkA "embaixadorial" ; --*
lin ambassadorship_N = mkN "embaixada" ; --*
lin ambassadress_N = variants {mkN "embaixador" ; mkN "embaixatriz" ; } ; --*
lin amber_1_N = variants {mkN "amarelo" ; mkN "âmbar" ; mkN "âmbar-cinzento" ; mkN "dourado" ; } ; --*
lin amber_2_N = mkN "âmbar" ; --*
lin amber_A = mkA "ambarino" ; --*
lin ambergris_N = variants {mkN "âmbar" ; mkN "Âmbar" ; } ; --*
lin ambidexterity_N = mkN "ambidestria" ; --*
lin ambidextrous_1_A = mkA "ambidestro" ; --*
lin ambience_1_N = variants {mkN "ambiência" ; mkN "ar" ; mkN "atmosfera" ; } ; --*
lin ambience_2_N = mkN "ambiente" ; --*
lin ambient_A = mkA "circundante" ; --*
lin ambiguity_1_N = variants {mkN "ambiguidade" ; mkN "ambigüidade" ; } ; --*
lin ambiguity_2_N = mkN "ambiguidade" ; --*
lin ambiguous_1_A = variants {mkA "ambíguo" ; mkA "dúbio" ; } ; --*
lin ambiguous_2_A = variants {mkA "ambíguo" ; mkA "dúbio" ; mkA "impreciso" ; mkA "indefinido" ; mkA "vago" ; } ; --*
lin ambition_1_N = variants {mkN "ambição" ; mkN "aspiração" ; mkN "pretensão" ; } ; --*
lin ambition_2_N = variants {mkN "ambição" ; mkN "aspiração" ; } ; --*
lin ambitious_1_A = mkA "ambicioso" ; --*
lin ambitious_2_A = variants {mkA "ambicioso" ; mkA "complicado" ; mkA "desafiador" ; mkA "laborioso" ; } ; --*
lin ambit_N = variants {mkN "alcance" ; mkN "áreas" ; mkN "escopo" ; } ; --*
lin ambivalence_1_N = mkN "ambivalência" ; --*
lin ambivalent_A = mkA "ambivalente" ; --*
lin amble_N = variants {mkN "dê" ; mkN "passeio" ; } ; --*
lin amble_V = mkV "passear" ; --*
lin amblygonite_N = mkN "Ambligonita" ; --*
lin amblyopia_N = mkN "ambliopia" ; --*
lin ambrosia_1_N = mkN "ambrosia" ; --*
lin ambrosia_2_N = mkN "ambrosia" ; --*
lin ambrosia_4_N = variants {mkN "ambrosia" ; mkN "Ambrosia" ; mkN "Ambrósia" ; } ; --*
lin ambulance_N = variants {mkN "Ambulancia" ; mkN "ambulância" ; mkN "hospital" ; } ; --*
lin ambulatory_N = variants {mkN "ambulatório" ; mkN "charola" ; mkN "deambulatório" ; } ; --*
lin ambuscade_N = variants {mkN "emboscada" ; mkN "Emboscada" ; mkN "in" ; mkN "tocaia" ; } ; --*
lin ambuscade_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "estar") ; mkV2 (mkV "in") ; } ; --*
lin ambush_1_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "estar") ; mkV2 (mkV "in") ; } ; --*
lin ambush_2_V2 = mkV2 (mkV "emboscar") ; --*
lin ambush_N = variants {mkN "emboscada" ; mkN "Emboscada" ; mkN "in" ; mkN "tocaia" ; } ; --*
lin ameer_N = mkN "emir" ; --*
lin ameliorate_1_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "melhorar") ; } ; --*
lin ameliorate_2_V = mkV "melhorar" ; --*
lin amelioration_N = mkN "melhoramento" ; --*
lin ameloblast_N = mkN "ameloblasto" ; --*
lin amend_1_V2 = variants {mkV2 (mkV "emendar") ; mkV2 (mkV "retificar") ; } ; --*
lin amend_2_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "melhorar") ; } ; --*
lin amend_3_V2 = variants {mkV2 (mkV "rectificar") ; mkV2 (mkV "retificar") ; } ; --*
lin amendment_1_N = variants {mkN "correção" ; mkN "emenda" ; } ; --*
lin amendment_2_N = mkN "emenda" ; --*
lin amenity_N = variants {mkN "amenidade" ; mkN "comodidade" ; mkN "qualidade" ; } ; --*
lin amenorrhea_1_N = variants {mkN "Amenorreia" ; mkN "amenorréia" ; mkN "Amenorréia" ; } ; --*
lin america_1_PN = variants {mkPN "América" ; mkPN "Continente" ; mkPN "EEUU" ; mkPN "EstadosUnidosdaAmérica" ; mkPN "EUA" ; mkPN "E.U.A." ; mkPN "States" ; } ; --*
lin america_2_PN = variants {mkPN "America" ; mkPN "América" ; mkPN "Américas" ; mkPN "Continente" ; } ; --*
lin american_1_A = variants {mkA "americano" ; mkA "estadounidense" ; mkA "estado-unidense" ; mkA "norte-americano" ; } ; --*
lin american_2_A = mkA "americano" ; --*
lin americanFem_1_N = variants {mkN "estado-unidense" ; mkN "norte-americano" ; } ; --*
lin americanFem_2_N = variants {mkN "English" ; mkN "inglês" ; mkN "language" ; } ; --*
lin americanFem_3_N = mkN "americano" ; --*
lin americanize_1_V2 = mkV2 (mkV "americanizar") ; --*
lin americanize_2_V2 = mkV2 (mkV "americanizar") ; --*
lin americanMasc_1_N = variants {mkN "estado-unidense" ; mkN "norte-americano" ; } ; --*
lin americanMasc_2_N = variants {mkN "English" ; mkN "inglês" ; mkN "language" ; } ; --*
lin americanMasc_3_N = mkN "americano" ; --*
lin americium_N = variants {mkN "Americio" ; mkN "amerício" ; mkN "number" ; } ; --*
lin amethyst_N = mkN "ametista" ; --*
lin amiability_2_N = variants {mkN "afabilidade" ; mkN "amabilidade" ; mkN "doçura" ; } ; --*
lin amiable_1_A = variants {mkA "afável" ; mkA "amável" ; } ; --*
lin amiable_2_A = variants {mkA "afável" ; mkA "amável" ; } ; --*
lin amicable_A = mkA "amigável" ; --*
lin amide_N = variants {mkN "amida" ; mkN "Amidas" ; } ; --*
lin amine_N = variants {mkN "amina" ; mkN "Aminas" ; } ; --*
lin amiodarone_N = variants {mkN "amiodarona" ; mkN "Amiodarona" ; } ; --*
lin amir_N = mkN "emir" ; --*
lin amiss_3_Adv = mkAdv "imperfeitamente" ; --*
lin amity_1_N = mkN "cordialidade" ; --*
lin amity_2_N = mkN "amizade" ; --*
lin ammeter_N = mkN "amperímetro" ; --*
lin ammonia_1_N = variants {mkN "amônia" ; mkN "hydroxide" ; mkN "water" ; } ; --*
lin ammonia_2_N = variants {mkN "amônia" ; mkN "amoníaco" ; } ; --*
lin ammonification_N = mkN "amonificação" ; --*
lin ammonite_N = mkN "Ammonoidea" ; --*
lin ammonium_N = variants {mkN "amónia" ; mkN "amônio" ; mkN "Amônio" ; mkN "ion" ; } ; --*
lin ammunition_1_N = mkN "munição" ; --*
lin amnesia_N = variants {mkN "amnésia" ; mkN "loss" ; } ; --*
lin amnesty_1_N = variants {mkN "anistia" ; mkN "indulto" ; } ; --*
lin amnesty_2_N = variants {mkN "anistia" ; mkN "perdão" ; } ; --*
lin amnesty_3_N = variants {mkN "amnistia" ; mkN "pardon" ; mkN "perdão" ; } ; --*
lin amniocentesis_N = mkN "amniocentese" ; --*
lin amnion_1_N = variants {mkN "Bolsa" ; mkN "sac" ; } ; --*
lin amniotic_1_A = mkA "amniótico" ; --*
lin amobarbital_N = mkN "Amobarbital" ; --*
lin amoeba_1_N = mkN "ameba" ; --*
lin amoebic_1_A = mkA "amébico" ; --*
lin amoralism_N = mkN "amoralismo" ; --*
lin amorality_N = mkN "amoralidade" ; --*
lin amorous_2_A = mkA "amoroso" ; --*
lin amorphous_1_A = variants {mkA "amórfico" ; mkA "amorfo" ; } ; --*
lin amortization_1_N = mkN "amortização" ; --*
lin amortization_2_N = variants {mkN "amortização" ; mkN "Amortização" ; } ; --*
lin amortize_1_V2 = mkV2 (mkV "amortizar") ; --*
lin amount_1_N = variants {mkN "custo" ; mkN "of" ; } ; --*
lin amount_2_N = variants {mkN "número" ; mkN "quantidade" ; mkN "Quantidade" ; } ; --*
lin amount_3_N = variants {mkN "magnitude" ; mkN "medida" ; mkN "número" ; mkN "quantia" ; mkN "quantidade" ; mkN "volume" ; } ; --*
lin amount_4_N = variants {mkN "montante" ; mkN "número" ; mkN "soma" ; mkN "totalizar" ; } ; --*
lin amount_to_2_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "up") ; } ; --*
lin amount_to_3_V2 = variants {mkV2 (mkV "acontecer") ; mkV2 (mkV "ser") ; mkV2 (mkV "surgir") ; mkV2 (mkV "up") ; mkV2 (mkV "vir") ; } ; --*
lin amour_N = mkN "intimidade" ; --*
lin amour_propre_N = variants {mkN "presunção" ; mkN "propre" ; mkN "vaidade" ; } ; --*
lin amoxicillin_N = mkN "Amoxicilina" ; --*
lin amp_1_N = variants {mkN "ampere" ; mkN "Ampere" ; mkN "ampère" ; } ; --*
lin amp_2_N = variants {mkN "acid" ; mkN "Adenosina" ; mkN "monophosphate" ; } ; --*
lin amperage_N = mkN "amperagem" ; --*
lin ampere_1_N = mkN "ampere" ; --*
lin ampere_2_N = variants {mkN "ampere" ; mkN "Ampere" ; mkN "ampère" ; } ; --*
lin ampersand_N = variants {mkN "&" ; mkN "e" ; } ; --*
lin amphetamine_N = variants {mkN "anfetamina" ; mkN "pill" ; } ; --*
lin amphibian_1_N = variants {mkN "anfíbio" ; mkN "vehicle" ; } ; --*
lin amphibian_3_N = variants {mkN "anfíbio" ; mkN "Anfibios" ; mkN "anfíbios" ; } ; --*
lin amphibious_1_A = mkA "anfíbio" ; --*
lin amphibious_2_A = mkA "anfíbio" ; --*
lin amphibole_N = mkN "anfíbola" ; --*
lin amphibolite_N = mkN "Anfibolito" ; --*
lin amphimixis_1_N = variants {mkN "Reproducao" ; mkN "reproduction" ; } ; --*
lin amphitheatre_1_N = mkN "anfiteatro" ; --*
lin amphitheatre_2_N = variants {mkN "anfiteatro" ; mkN "Anfiteatro" ; } ; --*
lin amphora_N = variants {mkN "Anfôra" ; mkN "ânfora" ; } ; --*
lin amphoteric_A = mkA "anfotérico" ; --*
lin ampicillin_N = mkN "ampicilina" ; --*
lin ample_2_A = variants {mkA "abundante" ; mkA "bastante" ; mkA "copioso" ; mkA "lauto" ; } ; --*
lin ample_3_A = variants {mkA "amplo" ; mkA "considerável" ; } ; --*
lin amplification_1_N = mkN "amplificação" ; --*
lin amplification_2_N = variants {mkN "amplificação" ; mkN "aumento" ; mkN "Ganho" ; } ; --*
lin amplifier_N = variants {mkN "amplificador" ; mkN "Amplificadores" ; } ; --*
lin amplify_1_V2 = variants {mkV2 (mkV "amplificar") ; mkV2 (mkV "aumentar") ; } ; --*
lin amplify_2_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "exagerar") ; } ; --*
lin amplify_3_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "expandir") ; mkV2 (mkV "up") ; } ; --*
lin amplify_4_V2 = variants {mkV2 (mkV "amplificar") ; mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; } ; --*
lin amplitude_2_N = mkN "abundância" ; --*
lin amplitude_3_N = variants {mkN "amplitude" ; mkN "medida" ; } ; --*
lin ampoule_1_N = mkN "ampola" ; --*
lin amputate_V2 = variants {mkV2 (mkV "amputar") ; mkV2 (mkV "off") ; } ; --*
lin amputation_1_N = mkN "amputação" ; --*
lin amputation_2_N = mkN "amputação" ; --*
lin amsterdam_PN = variants {mkPN "Amsterdão" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin amuck_1_A = variants {mkA "demoníaco" ; mkA "enlouquecido" ; mkA "furioso" ; mkA "possuído" ; } ; --*
lin amuck_1_Adv = mkAdv "sem" ; --*
lin amulet_N = variants {mkN "amuleto" ; mkN "figa" ; mkN "patuá" ; mkN "talismã" ; } ; --*
lin amuse_1_V2 = variants {mkV2 (mkV "divertir") ; mkV2 (mkV "entreter") ; } ; --*
lin amuse_2_V2 = variants {mkV2 (mkV "divertir") ; mkV2 (mkV "recrear") ; } ; --*
lin amusement_1_N = mkN "encantamento" ; --*
lin amusement_2_N = variants {mkN "diversão" ; mkN "divertimento" ; mkN "entretenimento" ; mkN "entreterimento" ; } ; --*
lin amusing_1_A = variants {mkA "divertido" ; mkA "entretido" ; } ; --*
lin amusing_2_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin amygdala_N = variants {mkN "Amígdala" ; mkN "amygdaloideum" ; mkN "nucleus" ; } ; --*
lin amygdalin_N = mkN "Amigdalina" ; --*
lin amylase_N = variants {mkN "amilase" ; mkN "amílase" ; mkN "Amílase" ; } ; --*
lin amyloid_2_N = variants {mkN "Amiloide" ; mkN "Amilóide" ; } ; --*
lin amyloidosis_N = variants {mkN "amiloidose" ; mkN "Amiloidose" ; } ; --*
lin anabolic_1_A = mkA "anabólico" ; --*
lin anabolic_2_A = mkA "anabólico" ; --*
lin anabolism_N = variants {mkN "anabolismo" ; mkN "metabolism" ; } ; --*
lin anachronic_A = mkA "anacrônico" ; --*
lin anachronism_1_N = mkN "anacronismo" ; --*
lin anachronism_2_N = mkN "anacronismo" ; --*
lin anachronistic_1_A = mkA "anacrônico" ; --*
lin anacoluthia_1_N = mkN "anacoluto" ; --*
lin anaconda_N = variants {mkN "anaconda" ; mkN "Anaconda" ; mkN "murinus" ; } ; --*
lin anadiplosis_N = mkN "Anadiplose" ; --*
lin anaemia_1_N = mkN "anemia" ; --*
lin anaemia_2_N = variants {mkN "anemia" ; mkN "Anemias" ; } ; --*
lin anaerobe_N = mkN "anaeróbio" ; --*
lin anaerobic_1_A = mkA "anaeróbico" ; --*
lin anaesthesia_N = variants {mkN "anestesia" ; mkN "anestesiação" ; mkN "anestésico" ; mkN "anestesiologia" ; } ; --*
lin anaesthetic_1_A = mkA "anestésico" ; --*
lin anaesthetic_N = variants {mkN "agent" ; mkN "anestésico" ; mkN "Anestésicos" ; } ; --*
lin anaesthetist_N = mkN "anestesista" ; --*
lin anagram_N = mkN "anagrama" ; --*
lin anal_1_A = mkA "anal" ; --*
lin anal_2_A = variants {mkA "anal" ; mkA "retentive" ; } ; --*
lin analgesia_N = variants {mkN "analgesia" ; mkN "analgia" ; } ; --*
lin analgesic_1_A = mkA "analgésico" ; --*
lin analgesic_N = variants {mkN "analgésico" ; mkN "Analgésicos" ; mkN "pill" ; } ; --*
lin analogical_A = mkA "analógico" ; --*
lin analog_N = mkN "análogo" ; --*
lin analogous_1_A = variants {mkA "análogo" ; mkA "correspondente" ; } ; --*
lin analogous_2_A = mkA "análogo" ; --*
lin analogue_1_A = mkA "analógico" ; --*
lin analogue_N = mkN "análogo" ; --*
lin analogy_1_N = variants {mkN "analogia" ; mkN "relação" ; mkN "símile" ; } ; --*
lin analogy_2_N = variants {mkN "analogia" ; mkN "Analogia" ; } ; --*
lin analphabet_1_N = mkN "analfabeto" ; --*
lin analysis_1_N = mkN "análise" ; --*
lin analysis_2_N = variants {mkN "análise" ; mkN "thinking" ; } ; --*
lin analysis_5_N = mkN "análise" ; --*
lin analysis_6_N = variants {mkN "psicanálise" ; mkN "psychology" ; } ; --*
lin analyst_1_N = variants {mkN "analista" ; mkN "psicanalista" ; } ; --*
lin analyst_2_N = mkN "analista" ; --*
lin analyst_3_N = mkN "psicanalista" ; --*
lin analytic_1_A = mkA "analítico" ; --*
lin analytic_2_A = mkA "analítico" ; --*
lin analytic_3_A = mkA "analítico" ; --*
lin analytic_4_A = mkA "analítico" ; --*
lin analytical_1_A = mkA "analítico" ; --*
lin analytical_2_A = mkA "analítico" ; --*
lin analyze_1_V2 = variants {mkV2 (mkV "analizar") ; mkV2 (mkV "examinar") ; } ; --*
lin analyze_2_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "apart") ; mkV2 (mkV "down") ; } ; --*
lin analyze_3_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "decompor") ; } ; --*
lin analyze_4_V2 = mkV2 (mkV "analisar") ; --*
lin analyzer_1_N = mkN "analisador" ; --*
lin anamorphism_3_N = mkN "anamorfismo" ; --*
lin anamorphosis_2_N = mkN "anamorfismo" ; --*
lin anapaest_N = variants {mkN "anapesto" ; mkN "Anapesto" ; } ; --*
lin anapest_N = variants {mkN "anapesto" ; mkN "Anapesto" ; } ; --*
lin anaphase_N = variants {mkN "Anafase" ; mkN "Anáfase" ; } ; --*
lin anaphora_1_N = mkN "anáfora" ; --*
lin anaphora_2_N = mkN "anáfora" ; --*
lin anaphylactic_A = mkA "anafilático" ; --*
lin anaphylaxis_N = mkN "anafilaxia" ; --*
lin anaplasia_N = mkN "anaplasia" ; --*
lin anapsid_N = variants {mkN "anapsida" ; mkN "reptile" ; } ; --*
lin anarchic_1_A = mkA "anárquico" ; --*
lin anarchism_N = variants {mkN "anarquismo" ; mkN "Anarquismo" ; } ; --*
lin anarchistFem_N = mkN "anarquista" ; --*
lin anarchistic_A = mkA "anarquista" ; --*
lin anarchistMasc_N = mkN "anarquista" ; --*
lin anarchy_N = mkN "anarquia" ; --*
lin anastomosis_N = mkN "anastomose" ; --*
lin anathema_2_N = mkN "anátema" ; --*
lin anathematize_1_V2 = variants {mkV2 (mkV "abominar") ; mkV2 (mkV "anatematizar") ; } ; --*
lin anathematize_1_V = variants {mkV "abominar" ; mkV "anatematizar" ; } ; --*
lin anathematize_2_V2 = mkV2 (mkV "amaldiçoar") ; --*
lin anatomic_1_A = variants {mkA "anatomico" ; mkA "anatómico" ; mkA "anatômico" ; } ; --*
lin anatomical_1_A = variants {mkA "anatomico" ; mkA "anatómico" ; mkA "anatômico" ; } ; --*
lin anatomist_N = mkN "anatomista" ; --*
lin anatomy_1_N = variants {mkN "anatomia" ; mkN "anatomy" ; } ; --*
lin anatomy_2_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin anatomy_3_N = mkN "anatomia" ; --*
lin anatoxin_N = variants {mkN "Toxoide" ; mkN "Toxóide" ; } ; --*
lin ancestor_N = variants {mkN "ancestral" ; mkN "antecedentes" ; mkN "antecessor" ; mkN "antepassado" ; mkN "Antepassado" ; } ; --*
lin ancestral_1_A = variants {mkA "hereditário" ; mkA "patrimonial" ; } ; --*
lin ancestral_2_A = mkA "ancestral" ; --*
lin ancestry_1_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin ancestry_2_N = variants {mkN "ascendência" ; mkN "origem" ; } ; --*
lin anchor_1_N = variants {mkN "âncora" ; mkN "tackle" ; } ; --*
lin anchor_2_N = mkN "ponto" ; --*
lin anchor_3_N = mkN "âncora" ; --*
lin anchorage_4_N = variants {mkN "ancoradouro" ; mkN "ground" ; } ; --*
lin anchorite_N = variants {mkN "anacoreta" ; mkN "eremita" ; } ; --*
lin anchorman_N = mkN "âncora" ; --*
lin anchor_V2 = variants {mkV2 (mkV "ancorar") ; mkV2 (mkV "escorar") ; } ; --*
lin anchovy_1_N = variants {mkN "anchova" ; mkN "biquerão" ; mkN "bocaréu" ; mkN "enchova" ; mkN "manjuba" ; } ; --*
lin anchovy_2_N = variants {mkN "anchova" ; mkN "Engraulidae" ; } ; --*
lin ancient_1_A = variants {mkA "antiga" ; mkA "vetusto" ; } ; --*
lin ancientness_N = variants {mkN "ancianidade" ; mkN "antigüidade" ; } ; --*
lin ancillary_A = variants {mkA "auxiliar" ; mkA "secundário" ; mkA "subordinado" ; } ; --*
lin andesite_N = mkN "andesito" ; --*
lin andorran_A = variants {mkA "andorrano" ; mkA "andorrense" ; } ; --*
lin andorran_N = variants {mkN "andorrano" ; mkN "andorrense" ; } ; --*
lin andorra_PN = variants {mkPN "Andorra" ; mkPN "of" ; } ; --*
lin andrew_PN = variants {mkPN "André" ; mkPN "Andrew" ; } ; --*
lin androgenesis_N = mkN "androgênese" ; --*
lin androgenetic_A = mkA "androgenético" ; --*
lin androgenic_A = mkA "androgênico" ; --*
lin androgen_N = variants {mkN "andrógeno" ; mkN "hormone" ; } ; --*
lin androgyny_N = mkN "androginia" ; --*
lin android_N = variants {mkN "androide" ; mkN "Andróide" ; mkN "man" ; mkN "Robôs" ; } ; --*
lin andromeda_3_PN = variants {mkPN "Andrómeda" ; mkPN "Andrômeda" ; } ; --*
lin andromeda_4_PN = variants {mkPN "Andrómeda" ; mkPN "Galáxia" ; } ; --*
lin androsterone_N = mkN "androsterona" ; --*
lin anecdotal_1_A = mkA "anedótico" ; --*
lin anecdotal_2_A = mkA "anedótico" ; --*
lin anecdote_N = variants {mkN "anedota" ; mkN "historieta" ; mkN "piada" ; } ; --*
lin anecdotic_1_A = mkA "anedótico" ; --*
lin anechoic_A = mkA "anecóico" ; --*
lin anemia_1_N = variants {mkN "anemia" ; mkN "Anemias" ; } ; --*
lin anemia_2_N = mkN "anemia" ; --*
lin anemic_1_A = variants {mkA "anémico" ; mkA "anêmico" ; } ; --*
lin anemic_2_A = variants {mkA "anémico" ; mkA "anêmico" ; } ; --*
lin anemometer_N = variants {mkN "Anemometro" ; mkN "Anemómetro" ; mkN "gage" ; mkN "gauge" ; } ; --*
lin anemone_1_N = variants {mkN "anemona" ; mkN "anémona" ; mkN "anêmona" ; } ; --*
lin anemone_2_N = variants {mkN "anêmona" ; mkN "anemone" ; } ; --*
lin anencephalic_A = mkA "anencefálico" ; --*
lin anencephaly_1_N = mkN "anencefalia" ; --*
lin aneroid_N = variants {mkN "aneróide" ; mkN "barometer" ; } ; --*
lin anesthesiologist_N = mkN "anestesista" ; --*
lin anesthetic_N = variants {mkN "agent" ; mkN "anestésico" ; mkN "Anestésicos" ; } ; --*
lin anesthetist_N = mkN "anestesista" ; --*
lin anesthetize_1_V2 = variants {mkV2 (mkV "anestesiar") ; mkV2 (mkV "out") ; mkV2 (mkV "under") ; } ; --*
lin anestrus_1_N = mkN "anestro" ; --*
lin aneuploid_A = mkA "aneuplóide" ; --*
lin aneuploidy_N = mkN "aneuploidia" ; --*
lin aneurysm_1_N = mkN "aneurisma" ; --*
lin anew_Adv = variants {mkAdv "de" ; mkAdv "novamente" ; mkAdv "outra" ; } ; --*
lin angel_1_N = mkN "anjo" ; --*
lin angel_2_N = variants {mkN "anjo" ; mkN "man" ; mkN "person" ; mkN "santo" ; } ; --*
lin angel_3_N = mkN "anjo" ; --*
lin angelic_1_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin angelic_2_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin angelic_3_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin angelica_1_N = mkN "angélica" ; --*
lin angel_PN = variants {mkPN "Falls" ; mkPN "Salto" ; } ; --*
lin angelus_1_N = variants {mkN "ângelus" ; mkN "bell" ; } ; --*
lin angelus_2_N = mkN "Angelus" ; --*
lin anger_1_N = variants {mkN "cólera" ; mkN "ira" ; mkN "raiva" ; mkN "zanga" ; } ; --*
lin anger_2_N = variants {mkN "ira" ; mkN "raiva" ; } ; --*
lin anger_3_N = variants {mkN "cólera" ; mkN "ira" ; mkN "sete" ; } ; --*
lin anger_V2 = variants {mkV2 (mkV "encolerizar") ; mkV2 (mkV "enraivecer") ; mkV2 (mkV "irar") ; mkV2 (mkV "zangar") ; } ; --*
lin anger_V = variants {mkV "enraivecer" ; mkV "red" ; mkV "zangar" ; } ; --*
lin angina_1_N = mkN "angina" ; --*
lin angina_2_N = variants {mkN "angina" ; mkN "pectoris" ; } ; --*
lin angiogenesis_N = variants {mkN "Angiogenese" ; mkN "Angiogénese" ; mkN "angiogênese" ; } ; --*
lin angiography_N = mkN "angiografia" ; --*
lin angiology_N = mkN "Angiologia" ; --*
lin angioma_N = mkN "angioma" ; --*
lin angiopathy_N = mkN "angiopatia" ; --*
lin angioplasty_N = mkN "angioplastia" ; --*
lin angiosperm_N = variants {mkN "angiosperma" ; mkN "angiospérmicas" ; mkN "plant" ; } ; --*
lin angiotensin_1_N = variants {mkN "angiotensina" ; mkN "Angiotensina" ; } ; --*
lin angle_1_N = variants {mkN "ângulo" ; mkN "Ângulos" ; } ; --*
lin angle_2_N = mkN "enfoque" ; --*
lin angle_2_V = variants {mkV "debruçar" ; mkV "inclinar" ; } ; --*
lin angle_3_N = variants {mkN "angla" ; mkN "anglo" ; mkN "anglos" ; } ; --*
lin angler_3_N = variants {mkN "Americanus" ; mkN "fish" ; mkN "Lofiformes" ; mkN "Lophiiformes" ; } ; --*
lin anglican_A = mkA "anglicano" ; --*
lin anglican_N = mkN "anglicano" ; --*
lin anglicism_1_N = mkN "anglicismo" ; --*
lin anglicize_1_V2 = mkV2 (mkV "anglicizar") ; --*
lin angling_N = mkN "pesca" ; --*
lin anglo_indian_A = mkA "anglo-indiano" ; --*
lin anglo_indian_N = variants {mkN "anglo-indianos" ; mkN "Anglo-indianos" ; } ; --*
lin anglo_saxon_1_N = variants {mkN "Anglo" ; mkN "anglo-saxão" ; mkN "Anglo-saxões" ; mkN "Anglo-Saxões" ; } ; --*
lin anglo_saxon_2_N = mkN "anglo-saxão" ; --*
lin anglo_saxon_3_N = variants {mkN "anglo-saxão" ; mkN "English" ; mkN "língua" ; } ; --*
lin anglo_saxon_A = mkA "anglo-saxão" ; --*
lin angolan_A = variants {mkA "angolano" ; mkA "angolense" ; } ; --*
lin angolan_N = variants {mkN "angola" ; mkN "angolano" ; mkN "angolense" ; } ; --*
lin angola_PN = variants {mkPN "Angola" ; mkPN "of" ; } ; --*
lin angora_1_N = variants {mkN "Ancara" ; mkN "Angorá" ; mkN "capital" ; mkN "of" ; } ; --*
lin angora_4_N = variants {mkN "cat" ; mkN "gato" ; } ; --*
lin angry_1_A = variants {mkA "bravo" ; mkA "irado" ; mkA "irritado" ; mkA "raivosa" ; mkA "zangado" ; } ; --*
lin angry_2_A = variants {mkA "feroz" ; mkA "furioso" ; mkA "raivoso" ; mkA "tempestuoso" ; } ; --*
lin angstrom_N = variants {mkN "angstrom" ; mkN "ångström" ; mkN "unit" ; } ; --*
lin anguilla_1_PN = variants {mkPN "Anguila" ; mkPN "Anguilha" ; mkPN "Anguilla" ; } ; --*
lin anguillan_A = mkA "anguilano" ; --*
lin anguish_1_N = variants {mkN "agonia" ; mkN "angústia" ; mkN "tormento" ; mkN "transe" ; } ; --*
lin anguish_2_N = variants {mkN "agonia" ; mkN "angústia" ; } ; --*
lin angular_1_A = mkA "angular" ; --*
lin angular_2_A = variants {mkA "angulado" ; mkA "angular" ; } ; --*
lin angularity_2_N = mkN "angularidade" ; --*
lin angulation_2_N = mkN "angulação" ; --*
lin angus_1_PN = variants {mkPN "Angus" ; mkPN "Og" ; } ; --*
lin angus_2_PN = mkPN "Angus" ; --*
lin anhedonia_N = mkN "Anedonia" ; --*
lin anhidrosis_1_N = variants {mkN "anidrose" ; mkN "Anidrose" ; } ; --*
lin anhydride_N = mkN "anidrido" ; --*
lin anhydrous_A = mkA "anidro" ; --*
lin anicteric_1_A = mkA "anictérico" ; --*
lin anicteric_2_A = mkA "anictérico" ; --*
lin anil_1_N = variants {mkN "anil" ; mkN "indigo" ; mkN "índigo" ; } ; --*
lin aniline_N = variants {mkN "anilina" ; mkN "oil" ; } ; --*
lin animadversion_N = mkN "reprovação" ; --*
lin animadvert_1_V = variants {mkV "off" ; mkV "opinar" ; mkV "out" ; mkV "up" ; } ; --*
lin animal_A = variants {mkA "carnal" ; mkA "sensual" ; } ; --*
lin animal_N = variants {mkN "animal" ; mkN "being" ; mkN "besta" ; mkN "bicho" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin animate_1_A = mkA "animado" ; --*
lin animate_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "inspirar") ; } ; --*
lin animate_2_V2 = mkV2 (mkV "animar") ; --*
lin animate_3_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "envigorar") ; mkV2 (mkV "up") ; } ; --*
lin animate_4_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin animation_1_N = variants {mkN "animação" ; mkN "vida" ; } ; --*
lin animation_2_N = mkN "animação" ; --*
lin animation_3_N = mkN "animação" ; --*
lin animation_5_N = mkN "animação" ; --*
lin animation_6_N = mkN "animação" ; --*
lin animator_2_N = variants {mkN "animador" ; mkN "animadora" ; } ; --*
lin animatronics_N = mkN "Animatrônica" ; --*
lin animism_N = mkN "Animismo" ; --*
lin animist_N = mkN "animista" ; --*
lin animosity_N = variants {mkN "animosidade" ; mkN "blood" ; mkN "ódio" ; } ; --*
lin animus_N = variants {mkN "animosidade" ; mkN "blood" ; mkN "ódio" ; } ; --*
lin anionic_A = mkA "aniônico" ; --*
lin anion_N = variants {mkN "anião" ; mkN "aniões" ; mkN "aníon" ; mkN "ânion" ; mkN "anionte" ; } ; --*
lin anise_1_N = variants {mkN "anis" ; mkN "anisum" ; mkN "plant" ; } ; --*
lin anise_2_N = variants {mkN "anis" ; mkN "erva-doce" ; mkN "seed" ; } ; --*
lin aniseed_N = variants {mkN "anis" ; mkN "erva-doce" ; mkN "seed" ; } ; --*
lin aniseikonia_N = mkN "Aniseiconia" ; --*
lin anisometropia_N = mkN "anisometropia" ; --*
lin anisotropy_N = mkN "anisotropia" ; --*
lin anjou_1_N = mkN "Anjou" ; --*
lin ankara_PN = variants {mkPN "Ancara" ; mkPN "Angorá" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin anklebone_N = variants {mkN "astrágalo" ; mkN "tálus" ; mkN "Tálus" ; } ; --*
lin ankle_N = variants {mkN "joint" ; mkN "maléolo" ; mkN "talocruralis" ; } ; --*
lin anklet_3_N = variants {mkN "bracelet" ; mkN "tornozeleira" ; } ; --*
lin ankylosis_1_N = variants {mkN "ancilose" ; mkN "anquilose" ; } ; --*
lin annals_1_N = mkN "anais" ; --*
lin annals_2_N = variants {mkN "anais" ; mkN "record" ; } ; --*
lin annealing_N = mkN "revenido" ; --*
lin anneal_V2 = mkV2 (mkV "temperar") ; --*
lin annelid_N = variants {mkN "anelídeo" ; mkN "worm" ; } ; --*
lin annex_2_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "incorporar") ; } ; --*
lin annexation_1_N = mkN "anexação" ; --*
lin annexation_2_N = variants {mkN "anexação" ; mkN "incorporação" ; } ; --*
lin annexe_N = mkN "asa" ; --*
lin annex_N = mkN "asa" ; --*
lin annihilate_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin annihilation_1_N = mkN "obliteração" ; --*
lin annihilation_2_N = variants {mkN "aniquilação" ; mkN "aniquilamento" ; mkN "desintegração" ; } ; --*
lin anniversary_N = variants {mkN "aniversário" ; mkN "of" ; } ; --*
lin annotate_1_V2 = variants {mkV2 (mkV "anotar") ; mkV2 (mkV "fazer") ; } ; --*
lin annotate_2_V2 = mkV2 (mkV "glossar") ; --*
lin annotation_1_N = variants {mkN "anotação" ; mkN "apontamento" ; mkN "nota" ; } ; --*
lin annotation_2_N = mkN "anotação" ; --*
lin announce_1_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "mostrar") ; } ; --*
lin announce_2_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "declarar") ; } ; --*
lin announce_3_V2 = mkV2 (mkV "anunciar") ; --*
lin announce_4_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; } ; --*
lin announce_4_VS = variants {mkVS (mkV "anunciar") ; mkVS (mkV "pressagiar") ; mkVS (mkV "prever") ; } ; --*
lin announcement_1_N = variants {mkN "anunciação" ; mkN "anúncio" ; mkN "declaracão" ; mkN "declaração" ; mkN "pregão" ; mkN "proclamação" ; mkN "promulgação" ; } ; --*
lin announcement_2_N = variants {mkN "anúncio" ; mkN "aviso" ; mkN "comunicação" ; } ; --*
lin announcer_1_N = mkN "apresentador" ; --*
lin announcer_2_N = variants {mkN "anunciador" ; mkN "locutor" ; } ; --*
lin annoyance_1_N = variants {mkN "contrariedade" ; mkN "incômodo" ; mkN "irritação" ; } ; --*
lin annoyance_2_N = mkN "irritação" ; --*
lin annoyance_4_N = variants {mkN "contrariedade" ; mkN "in" ; mkN "incômodo" ; mkN "moléstia" ; } ; --*
lin annoyance_5_N = mkN "irritação" ; --*
lin annoying_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin annoy_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin annual_1_A = mkA "anual" ; --*
lin annual_2_A = mkA "anual" ; --*
lin annual_2_N = mkN "anuário" ; --*
lin annuity_N = mkN "anuidade" ; --*
lin annul_1_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "invalidar") ; mkV2 (mkV "revogar") ; } ; --*
lin annul_2_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin annulment_2_N = mkN "anulação" ; --*
lin annulment_3_N = variants {mkN "ab-rogação" ; mkN "anulação" ; } ; --*
lin annulus_1_N = variants {mkN "anel" ; mkN "ring" ; } ; --*
lin annunciate_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; } ; --*
lin annunciation_1_N = variants {mkN "25" ; mkN "Anunciação" ; mkN "Day" ; } ; --*
lin annunciation_3_N = variants {mkN "anunciação" ; mkN "anúncio" ; mkN "declaracão" ; mkN "declaração" ; mkN "pregão" ; mkN "proclamação" ; mkN "promulgação" ; } ; --*
lin anode_1_N = variants {mkN "anódio" ; mkN "ânodo" ; } ; --*
lin anode_2_N = variants {mkN "Anodo" ; mkN "ânodo" ; } ; --*
lin anodyne_A = mkA "analgésico" ; --*
lin anodyne_N = variants {mkN "analgésico" ; mkN "Analgésicos" ; mkN "pill" ; } ; --*
lin anoint_2_V2 = variants {mkV2 (mkV "ungir") ; mkV2 (mkV "untar") ; } ; --*
lin anointing_N = mkN "Unção" ; --*
lin anointment_N = mkN "Unção" ; --*
lin anomalous_A = mkA "anômalo" ; --*
lin anomaly_3_N = mkN "anomalia" ; --*
lin anomie_1_N = mkN "anomia" ; --*
lin anon_1_Adv = mkAdv "imediatamente" ; --*
lin anonymity_N = mkN "anonimato" ; --*
lin anonymous_1_A = variants {mkA "anónimo" ; mkA "anônimo" ; } ; --*
lin anonymous_2_A = variants {mkA "anónimo" ; mkA "anônimo" ; } ; --*
lin anopheles_N = mkN "Anopheles" ; --*
lin anopia_N = mkN "cegueira" ; --*
lin anorak_N = variants {mkN "anoraque" ; mkN "parca" ; } ; --*
lin anorectic_1_A = mkA "anoréxico" ; --*
lin anorexia_N = variants {mkN "anorexia" ; mkN "Anorexia" ; } ; --*
lin anorexic_1_N = mkN "anorexígeno" ; --*
lin anorexic_A = mkA "anoréxico" ; --*
lin anorthite_N = mkN "anortita" ; --*
lin anosmia_N = mkN "anosmia" ; --*
lin anoxic_A = mkA "anóxico" ; --*
lin anserine_2_A = mkA "estúpido" ; --*
lin answer_10_V = mkV "responder" ; --*
lin answer_1_N = variants {mkN "resposta" ; mkN "resultado" ; } ; --*
lin answer_1_V2 = variants {mkV2 (mkV "replicar") ; mkV2 (mkV "responder") ; mkV2 (mkV "retrucar") ; } ; --*
lin answer_1_V = variants {mkV "replicar" ; mkV "responder" ; mkV "retrucar" ; } ; --*
lin answer_2_N = variants {mkN "resposta" ; mkN "solução" ; } ; --*
lin answer_2_V2 = variants {mkV2 (mkV "atender") ; mkV2 (mkV "responder") ; } ; --*
lin answer_3_N = mkN "resposta" ; --*
lin answer_3_V2 = mkV2 (mkV "responder") ; --*
lin answer_4_V2 = mkV2 (mkV "responder") ; --*
lin answer_5_N = variants {mkN "reação" ; mkN "resposta" ; } ; --*
lin answer_5_V = mkV "responder" ; --*
lin answer_7_V = variants {mkV "bastar" ; mkV "ser" ; } ; --*
lin answer_9_V2 = mkV2 (mkV "satisfazer") ; --*
lin answerable_1_A = mkA "questionável" ; --*
lin answerable_2_A = variants {mkA "refutável" ; mkA "responsável" ; } ; --*
lin answer_VS = variants {mkVS (mkV "replicar") ; mkVS (mkV "responder") ; mkVS (mkV "retrucar") ; } ; --*
lin antacid_1_N = variants {mkN "antacid" ; mkN "Antiácido" ; } ; --*
lin antacid_A = mkA "antiácido" ; --*
lin antagonism_1_N = variants {mkN "hostilidade" ; mkN "inimizade" ; } ; --*
lin antagonism_2_N = mkN "antagonismo" ; --*
lin antagonism_3_N = mkN "antagonismo" ; --*
lin antagonism_4_N = mkN "antagonismo" ; --*
lin antagonist_1_N = variants {mkN "adversário" ; mkN "antagonista" ; mkN "inimigo" ; mkN "opositor" ; } ; --*
lin antagonist_2_N = mkN "músculo" ; --*
lin antagonistic_4_A = mkA "incompatível" ; --*
lin antagonize_1_V2 = variants {mkV2 (mkV "antagonizar") ; mkV2 (mkV "inimizar") ; } ; --*
lin antagonize_2_V2 = mkV2 (mkV "hostilizar") ; --*
lin antarctic_A = variants {mkA "antárctico" ; mkA "antártico" ; mkA "do" ; } ; --*
lin antbird_1_N = variants {mkN "bird" ; mkN "Thamnophilidae" ; } ; --*
lin ant_eater_1_N = variants {mkN "anteater" ; mkN "pangolim" ; mkN "tamanduá" ; } ; --*
lin ant_eater_2_N = variants {mkN "tamanduá" ; mkN "World" ; } ; --*
lin ant_eater_3_N = variants {mkN "aardvark" ; mkN "Aard-vark" ; mkN "aardwark" ; mkN "afer" ; mkN "bear" ; mkN "porco-da-terra" ; mkN "timbo" ; } ; --*
lin ant_eater_4_N = variants {mkN "anteater" ; mkN "fasciatus" ; mkN "numbat" ; } ; --*
lin ant_eater_6_N = variants {mkN "anteater" ; mkN "equidna" ; } ; --*
lin antecedence_1_N = variants {mkN "antecedência" ; mkN "precedência" ; mkN "prioridade" ; } ; --*
lin antecedent_1_N = variants {mkN "ancestral" ; mkN "antecedentes" ; mkN "antecessor" ; mkN "antepassado" ; mkN "Antepassado" ; } ; --*
lin antecedent_2_N = mkN "antecedentes" ; --*
lin antecedent_4_N = mkN "antecedente" ; --*
lin antecedent_A = mkA "antecedente" ; --*
lin antechamber_N = variants {mkN "antecâmara" ; mkN "antessala" ; mkN "átrio" ; mkN "hall" ; mkN "saguão" ; mkN "sala" ; mkN "vestíbulo" ; } ; --*
lin antedate_1_V2 = mkV2 (mkV "preceder") ; --*
lin antedate_2_V2 = mkV2 (mkV "antedatar") ; --*
lin antediluvian_1_A = mkA "antediluviano" ; --*
lin antediluvian_2_A = variants {mkA "antediluviano" ; mkA "arcaica" ; mkA "arcaico" ; } ; --*
lin antelope_N = mkN "antílope" ; --*
lin ante_meridiem_Adv = variants {mkAdv "da" ; mkAdv "meridiem" ; } ; --*
lin antenatal_A = mkA "pré-natal" ; --*
lin antenna_1_N = variants {mkN "aerial" ; mkN "antena" ; mkN "Antenas" ; } ; --*
lin antenna_3_N = mkN "antena" ; --*
lin antepenultimate_A = mkA "antepenúltimo" ; --*
lin anterior_2_A = variants {mkA "anterior" ; mkA "prévio" ; } ; --*
lin anteriority_2_N = variants {mkN "antecedência" ; mkN "precedência" ; mkN "prioridade" ; } ; --*
lin anteroom_N = variants {mkN "antecâmara" ; mkN "antessala" ; mkN "átrio" ; mkN "hall" ; mkN "saguão" ; mkN "sala" ; mkN "vestíbulo" ; } ; --*
lin anthelmintic_1_A = mkA "anti-helmíntico" ; --*
lin anthem_1_N = mkN "hino" ; --*
lin anthem_2_N = mkN "hino" ; --*
lin antheridium_N = mkN "anterídeo" ; --*
lin anther_N = mkN "antera" ; --*
lin ant_hill_N = mkN "cupinzeiro" ; --*
lin anthologist_N = mkN "antologista" ; --*
lin anthology_N = variants {mkN "antologia" ; mkN "Antologia" ; mkN "Antologias" ; mkN "crestomatia" ; mkN "florilégio" ; mkN "selecta" ; } ; --*
lin anthony_1_PN = variants {mkPN "Anthony" ; mkPN "Antonius" ; mkPN "Antony" ; mkPN "Marco" ; } ; --*
lin anthony_2_PN = variants {mkPN "Anthony" ; mkPN "António" ; mkPN "B." ; mkPN "Brownell" ; } ; --*
lin anthracite_N = variants {mkN "antracite" ; mkN "coal" ; } ; --*
lin anthrax_1_N = variants {mkN "antraz" ; mkN "fever" ; } ; --*
lin anthrax_2_N = mkN "carbúnculo" ; --*
lin anthropocentric_A = mkA "antropocêntrico" ; --*
lin anthropocentrism_N = mkN "antropocentrismo" ; --*
lin anthropoid_1_A = mkA "antropóide" ; --*
lin anthropoid_2_A = mkA "antropóide" ; --*
lin anthropological_A = mkA "antropológico" ; --*
lin anthropologistFem_N = variants {mkN "antropóloga" ; mkN "antropologista" ; mkN "antropólogo" ; } ; --*
lin anthropologistMasc_N = variants {mkN "antropóloga" ; mkN "antropologista" ; mkN "antropólogo" ; } ; --*
lin anthropology_N = variants {mkN "antropologia" ; mkN "Antropologia" ; } ; --*
lin anthropometric_1_A = mkA "antropométrico" ; --*
lin anthropometry_N = variants {mkN "antropometria" ; mkN "Antropometria" ; } ; --*
lin anthropomorphic_A = variants {mkA "antropomórfico" ; mkA "antropomorfo" ; } ; --*
lin anthropomorphism_N = variants {mkN "antropomorfismo" ; mkN "Antropomorfismo" ; } ; --*
lin anthropophagy_N = mkN "antropofagia" ; --*
lin anti_aircraft_N = variants {mkN "ack-ack-ack" ; mkN "gun" ; } ; --*
lin antibacterial_N = variants {mkN "Bactericida" ; mkN "drug" ; } ; --*
lin antibiotic_N = variants {mkN "Antibiotico" ; mkN "antibiótico" ; mkN "Antibióticos" ; mkN "drug" ; } ; --*
lin antibody_N = variants {mkN "anticorpo" ; mkN "anticorpos" ; mkN "Anticorpos" ; mkN "imunoglobulina" ; } ; --*
lin antic_A = mkA "fantástico" ; --*
lin anticholinergic_A = mkA "anticolinérgico" ; --*
lin anticipant_A = mkA "expectante" ; --*
lin anticipate_1_V2 = mkV2 (mkV "antecipar") ; --*
lin anticipate_2_V2 = variants {mkV2 (mkV "antecipar") ; mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; } ; --*
lin anticipate_2_V = variants {mkV "antecipar" ; mkV "antever" ; mkV "prever" ; } ; --*
lin anticipate_2_VS = variants {mkVS (mkV "antecipar") ; mkVS (mkV "antever") ; mkVS (mkV "prever") ; } ; --*
lin anticipate_2_VV = variants {mkVV (mkV "antecipar") ; mkVV (mkV "antever") ; mkVV (mkV "prever") ; } ; --*
lin anticipate_3_V2 = variants {mkV2 (mkV "antecipar") ; mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; } ; --*
lin anticipate_3_V = variants {mkV "antecipar" ; mkV "antever" ; mkV "prever" ; } ; --*
lin anticipate_3_VS = variants {mkVS (mkV "antecipar") ; mkVS (mkV "antever") ; mkVS (mkV "prever") ; } ; --*
lin anticipate_3_VV = variants {mkVV (mkV "antecipar") ; mkVV (mkV "antever") ; mkVV (mkV "prever") ; } ; --*
lin anticipate_4_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin anticipate_4_VS = variants {mkVS (mkV "adivinhar") ; mkVS (mkV "predizer") ; mkVS (mkV "pressentir") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin anticipate_5_V2 = variants {mkV2 (mkV "esperar") ; mkV2 (mkV "for") ; mkV2 (mkV "to") ; } ; --*
lin anticipation_1_N = mkN "esperança" ; --*
lin anticipation_2_N = mkN "expectativa" ; --*
lin anticipation_3_N = variants {mkN "antecipação" ; mkN "previsão" ; } ; --*
lin anticipation_4_N = variants {mkN "antecipação" ; mkN "expectativa" ; } ; --*
lin anticlimax_1_N = mkN "anticlímax" ; --*
lin anticlimax_2_N = mkN "anticlímax" ; --*
lin anticlockwise_Adv = mkAdv "no" ; --*
lin antic_N = variants {mkN "gozação" ; mkN "sacanagem" ; mkN "travessura" ; mkN "trote" ; } ; --*
lin anticoagulant_N = variants {mkN "anticoagulante" ; mkN "Anticoagulantes" ; mkN "medication" ; } ; --*
lin anticoagulation_N = mkN "anticoagulação" ; --*
lin anticonvulsant_N = variants {mkN "Anticonvulsivo" ; mkN "drug" ; } ; --*
lin anticyclone_N = variants {mkN "anticiclone" ; mkN "Anti-ciclone" ; } ; --*
lin antidepressant_N = variants {mkN "antidepressivo" ; mkN "Anti-depressivo" ; mkN "drug" ; } ; --*
lin antidote_N = variants {mkN "antidoto" ; mkN "antídoto" ; mkN "contraveneno" ; } ; --*
lin antiemetic_N = variants {mkN "antiemético" ; mkN "drug" ; } ; --*
lin antiferromagnetism_N = mkN "antiferromagnetismo" ; --*
lin antifreeze_N = mkN "anticongelante" ; --*
lin antifungal_N = variants {mkN "agent" ; mkN "antifungico" ; mkN "Fungicida" ; mkN "fungicidas" ; } ; --*
lin antigenic_A = mkA "antigênico" ; --*
lin antigen_N = variants {mkN "antigénio" ; mkN "antígeno" ; } ; --*
lin antiguan_A = mkA "antiguano" ; --*
lin antigua_PN = mkPN "Antígua" ; --*
lin anti_hero_N = mkN "anti-herói" ; --*
lin antihypertensive_N = variants {mkN "anti-hipertensivo" ; mkN "drug" ; } ; --*
lin antimatter_N = variants {mkN "Antimateria" ; mkN "antimatéria" ; mkN "Anti-matéria" ; } ; --*
lin antimicrobial_1_A = mkA "antimicrobiano" ; --*
lin antimony_N = variants {mkN "Antimonio" ; mkN "antimónio" ; mkN "antimônio" ; mkN "number" ; } ; --*
lin antineutron_N = mkN "antinêutron" ; --*
lin antioxidant_N = variants {mkN "antioxidante" ; mkN "Antioxidantes" ; } ; --*
lin antiparticle_N = variants {mkN "antipartícula" ; mkN "Anti-partícula" ; } ; --*
lin antipasto_N = mkN "antipasto" ; --*
lin antipathetic_to_A2 = mkA2 (mkA "avesso") noPrep ; --*
lin antipathy_1_N = variants {mkN "antipatia" ; mkN "aversão" ; mkN "ódio" ; mkN "ojeriza" ; mkN "quezília" ; } ; --*
lin antiphon_N = mkN "Antífona" ; --*
lin antiphony_2_N = mkN "Antífona" ; --*
lin antipode_N = mkN "antípoda" ; --*
lin antipodes_N = mkN "antípoda" ; --*
lin antipope_N = mkN "antipapa" ; --*
lin antiproton_N = variants {mkN "antiprotão" ; mkN "antipróton" ; } ; --*
lin antipyretic_A = mkA "anti-pirético" ; --*
lin antipyretic_N = variants {mkN "antipirético" ; mkN "Antipiréticos" ; } ; --*
lin antiquarian_N = variants {mkN "antiquário" ; mkN "Antiquário" ; } ; --*
lin antiquary_N = variants {mkN "antiquário" ; mkN "Antiquário" ; } ; --*
lin antiquated_A = variants {mkA "antediluviano" ; mkA "arcaica" ; mkA "arcaico" ; } ; --*
lin antique_1_N = variants {mkN "geezer" ; mkN "velho" ; } ; --*
lin antique_2_A = variants {mkA "antiquado" ; mkA "defasado" ; mkA "démodé" ; mkA "fora" ; mkA "obsoleto" ; mkA "passado" ; } ; --*
lin antique_2_N = mkN "antiguidades" ; --*
lin antiquity_1_N = mkN "antiguidade" ; --*
lin antiquity_2_N = variants {mkN "ancianidade" ; mkN "antigüidade" ; } ; --*
lin antirrhinum_N = mkN "Antirrhinum" ; --*
lin anti_semite_A = mkA "racista" ; --*
lin anti_semite_N = mkN "anti-semita" ; --*
lin anti_semitic_A = variants {mkA "antisemítico" ; mkA "antissemita" ; } ; --*
lin anti_semitism_1_N = variants {mkN "anti-semitismo" ; mkN "Antisemitismo" ; mkN "antissemitismo" ; } ; --*
lin antiseptic_2_A = variants {mkA "anti-séptico" ; mkA "antisséptico" ; } ; --*
lin antiseptic_N = variants {mkN "antiséptico" ; mkN "antisséptico" ; mkN "Antissépticos" ; } ; --*
lin antithesis_1_N = variants {mkN "Antitese" ; mkN "antítese" ; } ; --*
lin antithesis_2_N = mkN "antítese" ; --*
lin antithetic_A = mkA "antitético" ; --*
lin antitoxin_N = mkN "Antitoxina" ; --*
lin antiviral_A = mkA "antiviral" ; --*
lin antiviral_N = variants {mkN "agent" ; mkN "Antiviral" ; mkN "drug" ; } ; --*
lin antler_N = variants {mkN "chifre" ; mkN "corno" ; mkN "galhada" ; } ; --*
lin ant_N = variants {mkN "formiga" ; mkN "Formigas" ; } ; --*
lin antonym_N = variants {mkN "antónimo" ; mkN "antônimo" ; mkN "word" ; } ; --*
lin antonymous_A = mkA "antônimo" ; --*
lin antony_PN = variants {mkPN "Anthony" ; mkPN "Antonius" ; mkPN "Antony" ; mkPN "Marco" ; } ; --*
lin antsy_A = mkA "nervoso" ; --*
lin antwerp_PN = variants {mkPN "Antuerpia" ; mkPN "Antuérpia" ; } ; --*
lin anus_N = variants {mkN "Anus" ; mkN "ânus" ; } ; --*
lin anvil_1_N = variants {mkN "bigorna" ; mkN "Bigorna" ; } ; --*
lin anvil_2_N = mkN "bigorna" ; --*
lin anxiety_1_N = variants {mkN "angústia" ; mkN "ansiedade" ; } ; --*
lin anxiety_2_N = variants {mkN "ânsia" ; mkN "ansiedade" ; mkN "preocupação" ; } ; --*
lin anxious_1_A = variants {mkA "ansioso" ; mkA "inquieto" ; mkA "nervoso" ; } ; --*
lin anxious_2_A = variants {mkA "ansiosa" ; mkA "ansioso" ; } ; --*
lin anxiousness_1_N = variants {mkN "angústia" ; mkN "ansiedade" ; } ; --*
lin anxiousness_2_N = variants {mkN "ansiedade" ; mkN "inquietação" ; } ; --*
lin anyhow_1_Adv = variants {mkAdv "além" ; mkAdv "any" ; mkAdv "de" ; } ; --*
lin anyhow_2_Adv = mkAdv "de" ; --*
lin anymore_Adv = variants {mkAdv "daqui" ; mkAdv "longer" ; } ; --*
lin anyplace_Adv = variants {mkAdv "algures" ; mkAdv "em" ; mkAdv "nenhures" ; mkAdv "para" ; } ; --*
lin anyway_1_Adv = variants {mkAdv "além" ; mkAdv "any" ; mkAdv "de" ; } ; --*
lin anyway_2_Adv = mkAdv "de" ; --*
lin anywhere_Adv = variants {mkAdv "algures" ; mkAdv "em" ; mkAdv "nenhures" ; mkAdv "para" ; } ; --*
lin aorist_N = mkN "Aorista" ; --*
lin aortal_1_A = mkA "aórtico" ; --*
lin aorta_N = mkN "aorta" ; --*
lin aoudad_1_N = variants {mkN "Ammotragus" ; mkN "lervia" ; mkN "sheep" ; } ; --*
lin apace_2_Adv = variants {mkAdv "brevemente" ; mkAdv "rapidamente" ; mkAdv "rápidamente" ; mkAdv "rápido" ; mkAdv "vapt" ; } ; --*
lin apache_3_N = mkN "apache" ; --*
lin apar_N = variants {mkN "armadillo" ; mkN "Tatu-bola-da-caatinga" ; mkN "tricinctus" ; } ; --*
lin apart_2_Adv = mkAdv "à" ; --*
lin apartheid_N = mkN "apartheid" ; --*
lin apartment_N = mkN "apartamento" ; --*
lin apathetic_1_A = variants {mkA "apático" ; mkA "indiferente" ; } ; --*
lin apathetic_2_A = variants {mkA "apático" ; mkA "indiferente" ; } ; --*
lin apathy_1_N = variants {mkN "apatia" ; mkN "langor" ; } ; --*
lin apathy_2_N = variants {mkN "apatia" ; mkN "indiferença" ; } ; --*
lin apatite_N = mkN "apatita" ; --*
lin ape_1_N = variants {mkN "hominóideo" ; mkN "hominóideos" ; mkN "incivilizado" ; mkN "macaco" ; } ; --*
lin ape_1_V2 = variants {mkV2 (mkV "imitar") ; mkV2 (mkV "macaquear") ; } ; --*
lin ape_2_N = variants {mkN "emulador" ; mkN "macaquice" ; } ; --*
lin ape_2_V2 = variants {mkV2 (mkV "caricaturar") ; mkV2 (mkV "fazer") ; } ; --*
lin apeldoorn_PN = mkPN "Apeldoorn" ; --*
lin aperient_N = mkN "laxante" ; --*
lin aperture_1_N = variants {mkN "apertura" ; mkN "orificio" ; } ; --*
lin aperture_2_N = mkN "abertura" ; --*
lin apery_N = variants {mkN "imitação" ; mkN "mímica" ; } ; --*
lin apetalous_A = mkA "apétalo" ; --*
lin apex_1_N = variants {mkN "topo" ; mkN "vértice" ; } ; --*
lin apex_2_N = variants {mkN "apex" ; mkN "Ápice" ; mkN "of" ; } ; --*
lin aphaeresis_N = mkN "aférese" ; --*
lin aphakia_N = mkN "Afacia" ; --*
lin aphasia_N = mkN "afasia" ; --*
lin aphelion_N = variants {mkN "afélio" ; mkN "apoastro" ; } ; --*
lin apheresis_1_N = mkN "aférese" ; --*
lin aphid_N = mkN "afídio" ; --*
lin aphis_N = mkN "Aphis" ; --*
lin aphorism_N = variants {mkN "aforismo" ; mkN "apotegma" ; mkN "prolóquio" ; } ; --*
lin aphrodisiac_N = mkN "afrodisíaco" ; --*
lin apiarist_N = variants {mkN "abelheiro" ; mkN "apicultor" ; } ; --*
lin apiary_N = variants {mkN "Apiário" ; mkN "house" ; } ; --*
lin apical_A = mkA "apical" ; --*
lin apiculture_N = variants {mkN "apicultura" ; mkN "Apicultura" ; } ; --*
lin apiece_Adv = variants {mkAdv "cada" ; mkAdv "each" ; } ; --*
lin aplite_N = mkN "Aplito" ; --*
lin aplomb_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "desembaraço" ; } ; --*
lin apnea_N = mkN "apnéia" ; --*
lin apneic_1_A = mkA "apnéico" ; --*
lin apocalypse_1_N = mkN "apocalipse" ; --*
lin apocalypse_2_N = variants {mkN "Apocalipse" ; mkN "of" ; mkN "Revelação" ; } ; --*
lin apocalyptic_1_A = variants {mkA "apocalíptico" ; mkA "difícil" ; mkA "relativo" ; } ; --*
lin apocalyptic_2_A = mkA "apocalíptico" ; --*
lin apocope_N = mkN "apócope" ; --*
lin apocryphal_1_A = variants {mkA "apócrifo" ; mkA "apográfico" ; mkA "não" ; } ; --*
lin apocrypha_N = mkN "Livros" ; --*
lin apocynaceous_A = mkA "apocináceo" ; --*
lin apogean_A = mkA "apogístico" ; --*
lin apogee_1_N = variants {mkN "culminação" ; mkN "culminância" ; } ; --*
lin apogee_2_N = mkN "apogeu" ; --*
lin apolitical_1_A = mkA "apolítico" ; --*
lin apologetic_1_A = mkA "de" ; --*
lin apologize_2_V = variants {mkV "explicar" ; mkV "justificar" ; mkV "perdoar" ; mkV "racionalizar" ; } ; --*
lin apology_1_N = variants {mkN "desculpa" ; mkN "excusa" ; } ; --*
lin apology_2_N = mkN "apologia" ; --*
lin apomixis_N = mkN "apomixia" ; --*
lin aponeurosis_N = mkN "aponeurose" ; --*
lin aponeurotic_A = mkA "aponeurótico" ; --*
lin apophthegm_N = variants {mkN "aforismo" ; mkN "apotegma" ; mkN "prolóquio" ; } ; --*
lin apoplexy_N = variants {mkN "accident" ; mkN "apoplexia" ; mkN "AVC" ; mkN "derrame" ; } ; --*
lin apoptosis_N = variants {mkN "apoptose" ; mkN "cell" ; } ; --*
lin apostasy_1_N = variants {mkN "apostasia" ; mkN "renúncia" ; } ; --*
lin apostasy_2_N = mkN "apostasia" ; --*
lin apostate_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin apostle_2_N = variants {mkN "apóstolo" ; mkN "Father" ; } ; --*
lin apostle_3_N = variants {mkN "apóstolo" ; mkN "Apóstolos" ; } ; --*
lin apostleship_N = mkN "dignidade" ; --*
lin apostolic_1_A = mkA "apostolar" ; --*
lin apostolic_2_A = mkA "papal" ; --*
lin apostrophe_1_N = mkN "apóstrofe" ; --*
lin apostrophe_2_N = variants {mkN "apóstrofe" ; mkN "apóstrofo" ; } ; --*
lin apothecary_N = variants {mkN "farmacêutico" ; mkN "pusher" ; mkN "roller" ; } ; --*
lin apothegm_N = variants {mkN "aforismo" ; mkN "apotegma" ; mkN "prolóquio" ; } ; --*
lin apotheosis_1_N = mkN "apoteose" ; --*
lin apotheosis_2_N = variants {mkN "apoteose" ; mkN "exaltação" ; } ; --*
lin appal_1_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "escandalizar") ; mkV2 (mkV "horrorizar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "ultrajar") ; } ; --*
lin appal_2_V2 = mkV2 (mkV "horrorizar") ; --*
lin appalling_A = mkA "horrível" ; --*
lin apparatchik_2_N = mkN "apparatchik" ; --*
lin apparatus_1_N = variants {mkN "aparato" ; mkN "aparelho" ; mkN "equipamento" ; } ; --*
lin apparel_N = variants {mkN "apparel" ; mkN "roupa" ; mkN "roupas" ; mkN "vestido" ; mkN "vestuário" ; } ; --*
lin apparel_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vestir") ; } ; --*
lin apparent_1_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin apparent_2_A = mkA "aparente" ; --*
lin apparition_1_N = mkN "fantasma" ; --*
lin apparition_2_N = mkN "aparição" ; --*
lin apparition_3_N = variants {mkN "aparição" ; mkN "fantasma" ; } ; --*
lin apparition_4_N = mkN "aparição" ; --*
lin appeal_1_N = variants {mkN "apelo" ; mkN "petição" ; mkN "súplica" ; } ; --*
lin appeal_1_V = mkV "apelar" ; --*
lin appeal_2_N = mkN "charme" ; --*
lin appeal_2_V = mkV "invocar" ; --*
lin appeal_3_N = variants {mkN "apelação" ; mkN "apelo" ; mkN "recurso" ; mkN "recursos" ; } ; --*
lin appeal_4_N = variants {mkN "apelo" ; mkN "coleção" ; mkN "solicitação" ; } ; --*
lin appeal_4_V2 = mkV2 (mkV "apelar") ; --*
lin appeal_5_V = mkV "invocar" ; --*
lin appealing_2_A = mkA "atractivo" ; --*
lin appeal_to_3_V2 = mkV2 (mkV "atrair") ; --*
lin appear_2_V = variants {mkV "aparecer" ; mkV "surgir" ; } ; --*
lin appear_3_V = variants {mkV "out" ; mkV "sair" ; } ; --*
lin appear_4_VS = variants {mkVS (mkV "parecer") ; mkVS (mkV "ter") ; } ; --*
lin appear_5_V = variants {mkV "along" ; mkV "aparecer" ; } ; --*
lin appearance_1_N = variants {mkN "aparência" ; mkN "aspect" ; mkN "semblante" ; } ; --*
lin appearance_6_N = mkN "aparência" ; --*
lin appease_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "apaziguar") ; mkV2 (mkV "aplacar") ; mkV2 (mkV "pacificar") ; mkV2 (mkV "serenar") ; mkV2 (mkV "sossegar") ; mkV2 (mkV "tranquilizar") ; } ; --*
lin appease_2_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aplacar") ; } ; --*
lin appease_3_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "apaziguar") ; } ; --*
lin appeasement_N = mkN "política" ; --*
lin appeaser_N = mkN "pacificador" ; --*
lin appellation_1_N = variants {mkN "antenome" ; mkN "denominação" ; mkN "nome" ; mkN "prenome" ; mkN "primeiro" ; mkN "título" ; } ; --*
lin append_1_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin append_2_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin appendage_1_N = mkN "membro" ; --*
lin appendage_3_N = mkN "apêndice" ; --*
lin appendectomy_1_N = mkN "apendicectomia" ; --*
lin appendicitis_N = mkN "apendicite" ; --*
lin appendix_1_N = mkN "apêndice" ; --*
lin appendix_2_N = variants {mkN "apêndice" ; mkN "appendage" ; mkN "appendix" ; mkN "process" ; } ; --*
lin appertain_V = variants {mkV "pertencer" ; mkV "referir-se" ; } ; --*
lin appetite_N = variants {mkN "apetite" ; mkN "desfastio" ; mkN "gana" ; } ; --*
lin appetizer_1_N = variants {mkN "antepasto" ; mkN "aperitivo" ; } ; --*
lin appetizing_1_A = mkA "apetitoso" ; --*
lin applaud_1_V = variants {mkV "aclamar" ; mkV "aplaudir" ; mkV "bater" ; mkV "ovacionar" ; } ; --*
lin applaud_2_V2 = variants {mkV2 (mkV "aclamar") ; mkV2 (mkV "aplaudir") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "louvar") ; } ; --*
lin applause_N = variants {mkN "aplauso" ; mkN "clapping" ; } ; --*
lin apple_1_N = mkN "maçã" ; --*
lin apple_2_N = variants {mkN "apple" ; mkN "macieira" ; mkN "pumila" ; } ; --*
lin applesauce_1_N = variants {mkN "puré" ; mkN "sauce" ; } ; --*
lin applesauce_2_N = variants {mkN "besteira" ; mkN "besteirol" ; mkN "folharada" ; } ; --*
lin applet_N = variants {mkN "applet" ; mkN "Java" ; } ; --*
lin applewood_N = variants {mkN "macieira" ; mkN "madeira" ; } ; --*
lin appliance_1_N = variants {mkN "apetrecho" ; mkN "engenhoca" ; mkN "ferramenta" ; mkN "gadget" ; mkN "objeto" ; mkN "troço" ; } ; --*
lin appliance_2_N = variants {mkN "electrodoméstico" ; mkN "eletrodoméstico" ; } ; --*
lin applicability_N = mkN "aplicabilidade" ; --*
lin applicable_A = mkA "aplicável" ; --*
lin applicant_N = variants {mkN "candidato" ; mkN "pretendente" ; mkN "solicitante" ; } ; --*
lin application_1_N = variants {mkN "aplicação" ; mkN "application" ; } ; --*
lin application_2_N = mkN "candidatura" ; --*
lin application_3_N = mkN "revestimento" ; --*
lin application_4_N = variants {mkN "aplicativo" ; mkN "program" ; mkN "programme" ; } ; --*
lin application_6_N = mkN "diligência" ; --*
lin applicator_N = variants {mkN "cotonete" ; mkN "haste" ; } ; --*
lin applied_A = mkA "aplicado" ; --*
lin apply_1_V2 = variants {mkV2 (mkV "empregar") ; mkV2 (mkV "usar") ; mkV2 (mkV "utilizar") ; } ; --*
lin apply_4_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "on") ; } ; --*
lin apply_7_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "praticar") ; mkV2 (mkV "utilizar") ; } ; --*
lin apply_8_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "forçar") ; } ; --*
lin apply_9_V2 = mkV2 (mkV "aplicar") ; --*
lin apply_to_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "for") ; mkV2 (mkV "valer") ; } ; --*
lin appoint_1_V2V = mkV2V (mkV "nomear") ; --*
lin appoint_1_V3 = mkV3 (mkV "nomear") ; --*
lin appoint_2_V2 = mkV2 (mkV "nomear") ; --*
lin appoint_2_V3 = mkV3 (mkV "nomear") ; --*
lin appointed_4_A = variants {mkA "encarregado" ; mkA "equipado" ; } ; --*
lin appointive_1_A = variants {mkA "nomeado" ; mkA "nomeativo" ; } ; --*
lin appointment_1_N = variants {mkN "designação" ; mkN "nomeação" ; } ; --*
lin appointment_2_N = variants {mkN "compromisso" ; mkN "hora" ; } ; --*
lin appointment_3_N = mkN "aparelhagem" ; --*
lin appointment_5_N = mkN "cargo" ; --*
lin apportion_1_V2 = mkV2 (mkV "alocar") ; --*
lin apportionment_N = variants {mkN "divisão" ; mkN "repartição" ; } ; --*
lin apposite_A = variants {mkA "apropriado" ; mkA "apto" ; mkA "pertinente" ; mkA "procedente" ; } ; --*
lin appraisal_1_N = variants {mkN "apreciação" ; mkN "avaliação" ; mkN "valorização" ; } ; --*
lin appraisal_2_N = variants {mkN "estimativa" ; mkN "orçamento" ; } ; --*
lin appraise_1_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "estimar") ; } ; --*
lin appraise_2_V2 = mkV2 (mkV "examinar") ; --*
lin appraiser_1_N = mkN "avaliador" ; --*
lin appraiser_2_N = mkN "avaliador" ; --*
lin appreciate_1_V2 = mkV2 (mkV "apreciar") ; --*
lin appreciate_1_V = mkV "apreciar" ; --*
lin appreciate_2_V2 = variants {mkV2 (mkV "account") ; mkV2 (mkV "apreciar") ; } ; --*
lin appreciate_3_V2 = variants {mkV2 (mkV "apreciar") ; mkV2 (mkV "valorizar") ; } ; --*
lin appreciate_4_V = variants {mkV "aumentar" ; mkV "revalorizar" ; mkV "subir" ; } ; --*
lin appreciation_1_N = mkN "compreensão" ; --*
lin appreciation_2_N = mkN "sabor" ; --*
lin appreciation_3_N = mkN "agrado" ; --*
lin appreciation_4_N = mkN "admiração" ; --*
lin appreciation_5_N = variants {mkN "reavaliação" ; mkN "Reavaliação" ; } ; --*
lin appreciative_1_A = variants {mkA "agradecido" ; mkA "apreciativo" ; mkA "obrigado" ; } ; --*
lin apprehend_1_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; mkV2 (mkV "the") ; } ; --*
lin apprehend_2_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin apprehend_3_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "temer") ; } ; --*
lin apprehensible_A = variants {mkA "compreensível" ; mkA "entendível" ; } ; --*
lin apprehension_1_N = variants {mkN "consternação" ; mkN "dor" ; mkN "medo" ; mkN "pavor" ; mkN "temor" ; } ; --*
lin apprehension_2_N = variants {mkN "compreensão" ; mkN "Compreensão" ; mkN "discernimento" ; } ; --*
lin apprehension_3_N = variants {mkN "apreensão" ; mkN "mau" ; } ; --*
lin apprehension_4_N = variants {mkN "arresto" ; mkN "into" ; } ; --*
lin apprehensive_2_A = variants {mkA "apreensivo" ; mkA "preocupado" ; } ; --*
lin apprentice_N = mkN "aprendiz" ; --*
lin apprenticeship_N = mkN "aprendizado" ; --*
lin apprentice_V2 = mkV2 (mkV "trabalhar") ; --*
lin apprise_1_V2 = variants {mkV2 (mkV "advertir") ; mkV2 (mkV "anunciar") ; mkV2 (mkV "avisar") ; mkV2 (mkV "notice") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "notificar") ; mkV2 (mkV "word") ; } ; --*
lin apprise_2_V2 = mkV2 (mkV "advertir") ; --*
lin apprise_3_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "revalorizar") ; mkV2 (mkV "subir") ; } ; --*
lin approach_1_N = variants {mkN "abordagem" ; mkN "of" ; } ; --*
lin approach_1_V2 = variants {mkV2 (mkV "aproximar-se") ; mkV2 (mkV "close") ; mkV2 (mkV "near") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; mkV2 (mkV "vir") ; } ; --*
lin approach_2_N = mkN "aproximação" ; --*
lin approach_3_N = variants {mkN "abordagens" ; mkN "acesso" ; mkN "caminho" ; mkN "estrada" ; } ; --*
lin approach_3_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; } ; --*
lin approach_4_V = variants {mkV "chegar" ; mkV "near" ; } ; --*
lin approachability_N = variants {mkN "acessibilidade" ; mkN "Acessibilidade" ; } ; --*
lin approachable_1_A = variants {mkA "abordável" ; mkA "acessível" ; } ; --*
lin approachable_2_A = mkA "acessível" ; --*
lin approbation_2_N = mkN "aprovação" ; --*
lin appropriate_1_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "reservar") ; mkV2 (mkV "separar") ; } ; --*
lin appropriate_2_V2 = variants {mkV2 (mkV "apropriar-se") ; mkV2 (mkV "capturar") ; mkV2 (mkV "conquistar") ; } ; --*
lin appropriate_A = mkA "apropriado" ; --*
lin appropriation_2_N = mkN "anexação" ; --*
lin appropriation_3_N = mkN "apropriação" ; --*
lin approval_1_N = variants {mkN "aprovaçã0" ; mkN "aprovação" ; } ; --*
lin approval_3_N = variants {mkN "aprovação" ; mkN "reception" ; } ; --*
lin approval_4_N = variants {mkN "aplauso" ; mkN "aprovação" ; } ; --*
lin approve_2_V2 = mkV2 (mkV "aprovar") ; --*
lin approve_2_V = mkV "aprovar" ; --*
lin approved_A = mkA "aprovado" ; --*
lin approve_of_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "deferir") ; mkV2 (mkV "sancionar") ; } ; --*
lin approximate_1_V = variants {mkV "aproximar" ; mkV "aproximar-se" ; mkV "close" ; } ; --*
lin approximate_2_A = mkA "aproximado" ; --*
lin approximate_2_V2 = variants {mkV2 (mkV "chutar") ; mkV2 (mkV "estimar") ; } ; --*
lin approximate_2_V = variants {mkV "chutar" ; mkV "estimar" ; } ; --*
lin approximately_Adv = variants {mkAdv "about" ; mkAdv "aproximadamente" ; mkAdv "cerca" ; mkAdv "or" ; mkAdv "so" ; mkAdv "to" ; } ; --*
lin approximation_1_N = variants {mkN "aproximação" ; mkN "estimativa" ; mkN "ideia" ; } ; --*
lin approximation_2_N = mkN "aproximação" ; --*
lin approximation_3_N = mkN "aproximação" ; --*
lin approximation_4_N = variants {mkN "aproximação" ; mkN "close" ; } ; --*
lin appurtenance_1_N = mkN "parafernália" ; --*
lin appurtenance_2_N = mkN "acessório" ; --*
lin apraxia_N = mkN "apraxia" ; --*
lin apricot_1_N = variants {mkN "abricó" ; mkN "abricote" ; mkN "albricoque" ; mkN "alperce" ; mkN "damasqueiro" ; mkN "tree" ; } ; --*
lin apricot_2_N = variants {mkN "abricó" ; mkN "damasco" ; } ; --*
lin apricot_3_N = variants {mkN "pink" ; mkN "salmão" ; } ; --*
lin apron_1_N = mkN "avental" ; --*
lin apron_3_N = mkN "proscênio" ; --*
lin apropos_2_Adv = variants {mkAdv "aliás" ; mkAdv "the" ; } ; --*
lin apr_PN = variants {mkPN "abril" ; mkPN "Abril" ; } ; --*
lin apse_1_N = variants {mkN "abside" ; mkN "ábside" ; } ; --*
lin apt_4_A = variants {mkA "apropriado" ; mkA "apto" ; mkA "pertinente" ; mkA "procedente" ; } ; --*
lin aptitude_N = variants {mkN "Abilidade" ; mkN "aptidão" ; mkN "competência" ; mkN "habilidade" ; mkN "talento" ; } ; --*
lin aptness_1_N = mkN "tendência" ; --*
lin aquaculture_N = mkN "aquacultura" ; --*
lin aqualung_N = variants {mkN "Aqualung" ; mkN "Aqua-lung" ; } ; --*
lin aquamarine_1_N = mkN "água-marinha" ; --*
lin aquamarine_2_N = variants {mkN "aquamarina" ; mkN "blue" ; mkN "turquesa" ; mkN "Turquesa" ; } ; --*
lin aquaphobia_N = variants {mkN "aquafobia" ; mkN "hidrofobia" ; } ; --*
lin aquarium_N = variants {mkN "aquário" ; mkN "museum" ; mkN "tank" ; } ; --*
lin aquarius_2_PN = variants {mkPN "Ânfora" ; mkPN "Aquarius" ; mkPN "Constelação" ; } ; --*
lin aquarius_3_PN = variants {mkPN "Aquário" ; mkPN "Bearer" ; mkPN "the" ; } ; --*
lin aquatic_1_A = variants {mkA "aquático" ; mkA "aquoso" ; } ; --*
lin aquatic_2_A = variants {mkA "aquática" ; mkA "aquático" ; } ; --*
lin aquavit_1_N = mkN "aquavita" ; --*
lin aqueduct_N = variants {mkN "adutora" ; mkN "aqueduto" ; mkN "aquedutos" ; mkN "Aquedutos" ; mkN "canalização" ; mkN "conduto" ; mkN "ducto" ; mkN "duto" ; } ; --*
lin aqueous_1_A = mkA "aquoso" ; --*
lin aquifer_N = variants {mkN "Aquifero" ; mkN "aquífero" ; mkN "aqüífero" ; mkN "Aqüífero" ; mkN "aquíferos" ; } ; --*
lin arab_1_N = variants {mkN "árabe" ; mkN "Arábico" ; } ; --*
lin arab_2_N = mkN "árabe" ; --*
lin arabesque_2_N = mkN "arabesco" ; --*
lin arabian_1_A = mkA "árabe" ; --*
lin arabian_2_A = mkA "árabe" ; --*
lin arabianFem_1_N = variants {mkN "árabe" ; mkN "Arábico" ; } ; --*
lin arabianFem_2_N = mkN "árabe" ; --*
lin arabianMasc_1_N = variants {mkN "árabe" ; mkN "Arábico" ; } ; --*
lin arabianMasc_2_N = mkN "árabe" ; --*
lin arabic_A = variants {mkA "árabe" ; mkA "arábico" ; } ; --*
lin arabist_N = mkN "Arabistas" ; --*
lin arable_A = variants {mkA "arável" ; mkA "cultivável" ; } ; --*
lin arachnid_N = variants {mkN "aracnídeo" ; mkN "Aracnideos" ; mkN "aracnídeos" ; } ; --*
lin arachnoid_1_N = variants {mkN "aracnoide" ; mkN "membrane" ; } ; --*
lin arachnoid_2_N = variants {mkN "aracnídeo" ; mkN "Aracnideos" ; mkN "aracnídeos" ; } ; --*
lin arachnophobia_N = mkN "aracnofobia" ; --*
lin aragonite_N = mkN "Aragonita" ; --*
lin araucaria_N = variants {mkN "araucária" ; mkN "pinheiro" ; } ; --*
lin arbiter_2_N = variants {mkN "árbitro" ; mkN "juiz" ; } ; --*
lin arbitrage_N = mkN "arbitragem" ; --*
lin arbitrament_1_N = mkN "arbitragem" ; --*
lin arbitrary_A = variants {mkA "arbitrária" ; mkA "arbitrário" ; mkA "discrionário" ; } ; --*
lin arbitrate_V2 = variants {mkV2 (mkV "interceder") ; mkV2 (mkV "mediar") ; } ; --*
lin arbitrate_V = variants {mkV "interceder" ; mkV "mediar" ; } ; --*
lin arbitration_1_N = mkN "arbitragem" ; --*
lin arbitration_2_N = mkN "arbitragem" ; --*
lin arbitrator_N = variants {mkN "árbitro" ; mkN "juiz" ; } ; --*
lin arbor_1_N = mkN "mandril" ; --*
lin arboreal_1_A = mkA "arbóreo" ; --*
lin arboreal_2_A = mkA "arbóreo" ; --*
lin arboretum_N = variants {mkN "garden" ; mkN "jardim" ; } ; --*
lin arborical_A = mkA "arbóreo" ; --*
lin arboriculture_N = variants {mkN "arboricultura" ; mkN "farming" ; } ; --*
lin arbour_N = mkN "pérgola" ; --*
lin arbutus_N = variants {mkN "medronheiro" ; mkN "medronho" ; } ; --*
lin arc_1_N = variants {mkN "arc" ; mkN "arco" ; mkN "discharge" ; } ; --*
lin arc_2_N = mkN "arco" ; --*
lin arc_3_N = mkN "arco" ; --*
lin arcade_1_N = variants {mkN "arcada" ; mkN "fliperama" ; } ; --*
lin arcade_2_N = mkN "Arcada" ; --*
lin arcadian_A = mkA "bucólico" ; --*
lin arcane_A = variants {mkA "arcano" ; mkA "misterioso" ; mkA "obscuro" ; mkA "oculto" ; mkA "secreto" ; } ; --*
lin arch_1_N = mkN "arco" ; --*
lin arch_1_V = variants {mkV "arquear" ; mkV "curvar" ; } ; --*
lin arch_2_A = variants {mkA "bagunceiro" ; mkA "sapeca" ; } ; --*
lin arch_2_N = mkN "arco" ; --*
lin arch_3_N = mkN "arco" ; --*
lin arch_4_N = variants {mkN "arco" ; mkN "Arco" ; } ; --*
lin archaeological_1_A = mkA "arqueológico" ; --*
lin archaeologist_1_N = mkN "arqueólogo" ; --*
lin archaeology_1_N = variants {mkN "arqueologia" ; mkN "Arqueologia" ; } ; --*
lin archaeopteryx_1_N = variants {mkN "arqueopterix" ; mkN "lithographica" ; } ; --*
lin archaic_1_A = variants {mkA "antediluviano" ; mkA "arcaica" ; mkA "arcaico" ; } ; --*
lin archaic_2_A = mkA "primitivo" ; --*
lin archaist_2_N = variants {mkN "antiquário" ; mkN "Antiquário" ; } ; --*
lin archangel_1_N = mkN "arcanjo" ; --*
lin archangel_2_N = variants {mkN "angelica" ; mkN "arcanjo" ; mkN "Archangelica" ; } ; --*
lin archbishop_N = mkN "arcebispo" ; --*
lin archdiocese_N = mkN "arquidiocese" ; --*
lin archduchess_N = mkN "arquiduquesa" ; --*
lin archduke_N = variants {mkN "arquiduque" ; mkN "grão-duque" ; } ; --*
lin archegonium_N = mkN "Arquegónio" ; --*
lin archer_1_N = mkN "arqueiro" ; --*
lin archer_3_N = variants {mkN "Sagitário" ; mkN "the" ; } ; --*
lin archery_N = variants {mkN "arco-e-flecha" ; mkN "tiro" ; } ; --*
lin archetypal_1_A = mkA "arquetípico" ; --*
lin archetype_N = variants {mkN "arquetipo" ; mkN "Arquetipo" ; mkN "arquétipo" ; } ; --*
lin archiepiscopal_1_A = mkA "arquiepiscopal" ; --*
lin archimandrite_N = variants {mkN "abade" ; mkN "Arquimandrita" ; } ; --*
lin archipelago_N = mkN "arquipélago" ; --*
lin architectFem_N = variants {mkN "arquitecto" ; mkN "arquiteto" ; mkN "designer" ; } ; --*
lin architectMasc_N = variants {mkN "arquitecto" ; mkN "arquiteto" ; mkN "designer" ; } ; --*
lin architectural_A = mkA "arquitetônico" ; --*
lin architecture_1_N = variants {mkN "arquitectura" ; mkN "arquitetura" ; } ; --*
lin architecture_2_N = variants {mkN "arquitectura" ; mkN "arquitetura" ; } ; --*
lin architecture_3_N = variants {mkN "arquitectura" ; mkN "Arquitectura" ; mkN "Arquitetura" ; } ; --*
lin architecture_4_N = variants {mkN "architecture" ; mkN "Arquitectura" ; mkN "Arquitetura" ; mkN "estrutura" ; } ; --*
lin architeuthis_N = variants {mkN "lula-gigante" ; mkN "squid" ; } ; --*
lin architrave_2_N = mkN "Arquitrave" ; --*
lin archive_N = variants {mkN "arquivo" ; mkN "Arquivo" ; mkN "Arquivos" ; mkN "ficheiro" ; } ; --*
lin archives_N = variants {mkN "arquivo" ; mkN "arquivos" ; } ; --*
lin archivist_N = mkN "arquivista" ; --*
lin archosaur_N = variants {mkN "arcossauros" ; mkN "reptile" ; } ; --*
lin archpriest_N = variants {mkN "prelado" ; mkN "priest" ; mkN "primaz" ; } ; --*
lin archway_N = mkN "arco" ; --*
lin arc_lamp_N = variants {mkN "lamp" ; mkN "light" ; } ; --*
lin arc_light_N = variants {mkN "lamp" ; mkN "light" ; } ; --*
lin arctic_1_A = variants {mkA "ártica" ; mkA "ártico" ; } ; --*
lin arctic_1_N = variants {mkN "Artico" ; mkN "Frigid" ; mkN "Zone" ; } ; --*
lin arctic_2_A = variants {mkA "ártico" ; mkA "gelado" ; mkA "polar" ; } ; --*
lin arctic_2_N = mkN "galocha" ; --*
lin ardent_1_A = mkA "ardente" ; --*
lin ardour_1_N = variants {mkN "ardor" ; mkN "zelo" ; } ; --*
lin ardour_3_N = variants {mkN "fervor" ; mkN "zelo" ; } ; --*
lin arduous_1_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin arduous_2_A = mkA "arduo" ; --*
lin arduous_3_A = mkA "arduo" ; --*
lin are_1_N = variants {mkN "are" ; mkN "erre" ; mkN "seja" ; } ; --*
lin are_2_N = variants {mkN "Argon" ; mkN "árgon" ; mkN "Árgon" ; mkN "argónio" ; mkN "number" ; } ; --*
lin are_3_N = variants {mkN "Arcansas" ; mkN "Arkansas" ; mkN "of" ; } ; --*
lin area_1_N = variants {mkN "ambiente" ; mkN "região" ; mkN "território" ; } ; --*
lin area_2_N = mkN "terreno" ; --*
lin area_4_N = variants {mkN "domínio" ; mkN "esfera" ; } ; --*
lin area_6_N = variants {mkN "area" ; mkN "extensão" ; } ; --*
lin arena_1_N = variants {mkN "domínio" ; mkN "esfera" ; } ; --*
lin arena_2_N = mkN "arena" ; --*
lin arena_3_N = variants {mkN "estádio" ; mkN "stadium" ; } ; --*
lin arena_4_N = variants {mkN "arena" ; mkN "of" ; } ; --*
lin arenaceous_A = mkA "arenoso" ; --*
lin areola_2_N = variants {mkN "Areola" ; mkN "Aréola" ; mkN "of" ; } ; --*
lin argali_1_N = variants {mkN "ammon" ; mkN "argali" ; } ; --*
lin argent_A = mkA "prateado" ; --*
lin argentina_1_PN = variants {mkPN "Argentina" ; mkPN "Republic" ; } ; --*
lin argentina_2_PN = mkPN "Argentina" ; --*
lin argentinian_A = mkA "argentino" ; --*
lin argentinian_N = mkN "argentino" ; --*
lin argentite_N = mkN "acantita" ; --*
lin argent_N = variants {mkN "argent" ; mkN "prata" ; } ; --*
lin argillaceous_A = mkA "argiloso" ; --*
lin arginine_N = mkN "arginina" ; --*
lin argonaut_2_N = mkN "argonautas" ; --*
lin argon_N = variants {mkN "Argon" ; mkN "árgon" ; mkN "Árgon" ; mkN "argónio" ; mkN "number" ; } ; --*
lin argot_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin arguable_1_A = variants {mkA "argumentável" ; mkA "discutível" ; } ; --*
lin arguable_2_A = mkA "discutível" ; --*
lin argue_1_V2 = variants {mkV2 (mkV "arguir") ; mkV2 (mkV "argumentar") ; } ; --*
lin argue_1_V = variants {mkV "arguir" ; mkV "argumentar" ; } ; --*
lin argue_1_VS = variants {mkVS (mkV "arguir") ; mkVS (mkV "argumentar") ; } ; --*
lin argue_2_V2 = variants {mkV2 (mkV "arguir") ; mkV2 (mkV "argüir") ; mkV2 (mkV "debater") ; mkV2 (mkV "discutir") ; } ; --*
lin argue_2_V = variants {mkV "arguir" ; mkV "argüir" ; mkV "debater" ; mkV "discutir" ; } ; --*
lin argue_2_VS = variants {mkVS (mkV "arguir") ; mkVS (mkV "argüir") ; mkVS (mkV "debater") ; mkVS (mkV "discutir") ; } ; --*
lin argue_for_V2 = mkV2 (mkV "indicar") ; --*
lin argument_1_N = mkN "argumento" ; --*
lin argument_2_N = variants {mkN "contestação" ; mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; mkN "polémica" ; mkN "polêmica" ; } ; --*
lin argument_3_N = variants {mkN "debate" ; mkN "discussão" ; } ; --*
lin argument_4_N = variants {mkN "argument" ; mkN "argumento" ; } ; --*
lin argument_5_N = variants {mkN "parâmetro" ; mkN "Parâmetro" ; } ; --*
lin argument_7_N = variants {mkN "argument" ; mkN "argumentação" ; mkN "of" ; mkN "raciocínio" ; } ; --*
lin argumentation_1_N = variants {mkN "debate" ; mkN "discussão" ; } ; --*
lin argumentation_2_N = variants {mkN "argument" ; mkN "argumentação" ; mkN "of" ; mkN "raciocínio" ; } ; --*
lin argus_1_N = variants {mkN "Argo" ; mkN "Argólida" ; mkN "Argos" ; } ; --*
lin aria_N = variants {mkN "Aria" ; mkN "ária" ; mkN "Ária" ; mkN "Árias" ; } ; --*
lin arid_1_A = mkA "árido" ; --*
lin arid_2_A = mkA "dessecado" ; --*
lin aridity_1_N = mkN "aridez" ; --*
lin aridity_2_N = mkN "aridez" ; --*
lin aries_2_PN = variants {mkPN "Aries" ; mkPN "Áries" ; mkPN "Carneiro" ; mkPN "Constelação" ; } ; --*
lin aries_3_PN = variants {mkPN "Áries" ; mkPN "the" ; } ; --*
lin aright_Adv = variants {mkAdv "correctamente" ; mkAdv "corretamente" ; mkAdv "de" ; } ; --*
lin aril_N = mkN "arilo" ; --*
lin arioso_N = mkN "arioso" ; --*
lin arise_1_V = variants {mkV "originar-se" ; mkV "provir" ; mkV "surgir" ; mkV "up" ; } ; --*
lin arise_2_V = variants {mkV "provir" ; mkV "up" ; } ; --*
lin arise_3_V = variants {mkV "se" ; mkV "up" ; } ; --*
lin arise_5_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin arise_6_V = variants {mkV "amotinar-se" ; mkV "insurgir" ; mkV "insurgir-se" ; mkV "rebelar" ; mkV "rebelar-se" ; mkV "revoltar-se" ; mkV "up" ; } ; --*
lin arise_7_V = variants {mkV "acordar" ; mkV "out" ; mkV "up" ; } ; --*
lin aristocracy_1_N = variants {mkN "aristocracia" ; mkN "nobreza" ; mkN "Nobreza" ; } ; --*
lin aristocracy_2_N = mkN "aristocracia" ; --*
lin aristocratic_1_A = variants {mkA "aristocrata" ; mkA "aristocrático" ; } ; --*
lin aristocrat_N = variants {mkN "aristocrata" ; mkN "blood" ; mkN "patrício" ; } ; --*
lin arithmetical_1_A = mkA "aritmético" ; --*
lin arithmetic_N = variants {mkN "aritmética" ; mkN "Aritmética" ; } ; --*
lin arity_N = mkN "aridade" ; --*
lin arizona_1_PN = variants {mkPN "Arizona" ; mkPN "Canyon" ; } ; --*
lin ark_1_N = variants {mkN "Arca" ; mkN "of" ; } ; --*
lin arkansas_1_PN = variants {mkPN "Arcansas" ; mkPN "Arkansas" ; mkPN "of" ; } ; --*
lin arkansas_2_PN = variants {mkPN "Arcansas" ; mkPN "River" ; } ; --*
lin arm_1_N = variants {mkN "braço" ; mkN "Braço" ; } ; --*
lin arm_1_V = variants {mkV "prover" ; mkV "up" ; } ; --*
lin arm_2_N = mkN "braço" ; --*
lin arm_2_V2 = mkV2 (mkV "armar") ; --*
lin arm_3_N = variants {mkN "arma" ; mkN "armamento" ; mkN "system" ; } ; --*
lin arm_4_N = mkN "braço" ; --*
lin arm_5_N = variants {mkN "broto" ; mkN "ramo" ; } ; --*
lin arm_6_N = mkN "manga" ; --*
lin armadillo_N = variants {mkN "armadílio" ; mkN "tatu" ; } ; --*
lin armageddon_2_PN = mkPN "Armagedão" ; --*
lin armament_1_N = variants {mkN "arma" ; mkN "armamento" ; } ; --*
lin armament_2_N = variants {mkN "armamento" ; mkN "equipamento" ; } ; --*
lin armchair_N = variants {mkN "cadeira" ; mkN "cadeirão" ; mkN "poltrona" ; } ; --*
lin armed_2_A = mkA "armado" ; --*
lin armenian_1_N = variants {mkN "Arménios" ; mkN "armênios" ; } ; --*
lin armenian_2_N = variants {mkN "armênio" ; mkN "language" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin armenian_3_N = variants {mkN "Alfabeto" ; mkN "alphabet" ; mkN "armênia" ; } ; --*
lin armet_N = variants {mkN "armet" ; mkN "Armet" ; mkN "elmo" ; } ; --*
lin armilla_1_N = variants {mkN "esfera" ; mkN "sphere" ; } ; --*
lin arming_N = variants {mkN "armamento" ; mkN "equipamento" ; } ; --*
lin armistice_N = variants {mkN "armistício" ; mkN "cessar-fogo" ; mkN "trégua" ; } ; --*
lin armlet_N = variants {mkN "band" ; mkN "bracelete" ; } ; --*
lin armored_1_A = mkA "blindado" ; --*
lin armored_2_A = mkA "blindado" ; --*
lin armored_3_A = mkA "armado" ; --*
lin armour_2_N = variants {mkN "armadura" ; mkN "Armaduras" ; } ; --*
lin armour_3_N = variants {mkN "armadura" ; mkN "couraça" ; } ; --*
lin armoured_1_A = mkA "blindado" ; --*
lin armoured_2_A = mkA "blindado" ; --*
lin armoury_2_N = mkN "arsenal" ; --*
lin armoury_3_N = mkN "arsenal" ; --*
lin armoury_4_N = variants {mkN "armaria" ; mkN "arsenal" ; } ; --*
lin armpit_N = variants {mkN "axila" ; mkN "cavity" ; mkN "fossa" ; mkN "sovaco" ; } ; --*
lin arms_race_N = mkN "race" ; --*
lin army_1_N = variants {mkN "army" ; mkN "exército" ; mkN "forces" ; } ; --*
lin army_2_N = variants {mkN "exército" ; mkN "multidão" ; } ; --*
lin army_3_N = variants {mkN "Army" ; mkN "Exército" ; mkN "S." ; mkN "States" ; } ; --*
lin arnhem_PN = variants {mkPN "Arnhem" ; mkPN "Arnhemia" ; } ; --*
lin arnica_2_N = variants {mkN "arnica" ; mkN "árnica" ; } ; --*
lin arnold_1_PN = variants {mkPN "Arnold" ; mkPN "Matthew" ; } ; --*
lin arnold_2_PN = variants {mkPN "Arnold" ; mkPN "Benedict" ; } ; --*
lin aroma_1_N = variants {mkN "cheiro" ; mkN "hálito" ; mkN "odor" ; mkN "odores" ; mkN "property" ; } ; --*
lin aroma_2_N = variants {mkN "cheiro" ; mkN "fragrância" ; mkN "odor" ; mkN "perfume" ; } ; --*
lin aromatherapy_N = variants {mkN "aromaterapia" ; mkN "Aromaterapia" ; } ; --*
lin aromatic_1_A = mkA "aromático" ; --*
lin around_10_Prep = mkPrep "cerca" ; --*
lin around_1_Adv = mkAdv "por" ; --*
lin around_8_Adv = mkAdv "por" ; --*
lin around_8_Prep = mkPrep "por" ; --*
lin around_AdN = variants {mkAdN "about" ; mkAdN "aproximadamente" ; mkAdN "cerca" ; mkAdN "or" ; mkAdN "so" ; mkAdN "to" ; } ; --*
lin arousal_4_N = variants {mkN "estimulação" ; mkN "preliminares" ; } ; --*
lin arouse_1_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin arouse_4_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "energizar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "up") ; } ; --*
lin arouse_5_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "despertar") ; mkV2 (mkV "up") ; } ; --*
lin arouse_6_V2 = mkV2 (mkV "acordar") ; --*
lin arouse_7_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin arouse_V = variants {mkV "acordar" ; mkV "alive" ; mkV "levantar-se" ; mkV "up" ; } ; --*
lin arpeggio_N = mkN "arpejo" ; --*
lin arquebus_1_N = variants {mkN "arcabuz" ; mkN "Arcabuz" ; } ; --*
lin arrack_1_N = mkN "araca" ; --*
lin arrange_1_V2 = variants {mkV2 (mkV "arranjar") ; mkV2 (mkV "up") ; } ; --*
lin arrange_2_V2 = variants {mkV2 (mkV "arranjar") ; mkV2 (mkV "up") ; } ; --*
lin arrange_3_V2 = variants {mkV2 (mkV "arranjar") ; mkV2 (mkV "realizar") ; } ; --*
lin arrange_7_V2 = variants {mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin arrangement_3_N = variants {mkN "estrutura" ; mkN "ordem" ; mkN "organização" ; mkN "sistema" ; } ; --*
lin arrangement_4_N = variants {mkN "espaçamento" ; mkN "posição" ; } ; --*
lin arrangement_5_N = variants {mkN "arrangement" ; mkN "arranjo" ; } ; --*
lin arrangement_6_N = variants {mkN "arranjo" ; mkN "transcrição" ; } ; --*
lin arranger_1_N = mkN "organizador" ; --*
lin arras_N = mkN "tapeçaria" ; --*
lin array_1_N = variants {mkN "array" ; mkN "ordem" ; } ; --*
lin array_1_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "out") ; } ; --*
lin array_2_V2 = mkV2 (mkV "alinhar-se") ; --*
lin array_3_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin arrest_1_N = variants {mkN "arresto" ; mkN "into" ; } ; --*
lin arrest_1_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin arrest_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "resistir") ; } ; --*
lin arrest_4_V2 = variants {mkV2 (mkV "demorar-se") ; mkV2 (mkV "deter-se") ; mkV2 (mkV "parar") ; } ; --*
lin arresting_A = mkA "impressionante" ; --*
lin arrhythmic_2_A = mkA "arrítmico" ; --*
lin arrival_1_N = mkN "chegar" ; --*
lin arrival_2_N = variants {mkN "chegada" ; mkN "vinda" ; } ; --*
lin arrive_1_V = variants {mkV "chegar" ; mkV "vir" ; } ; --*
lin arrive_2_V = variants {mkV "alcançar" ; mkV "far" ; mkV "in" ; mkV "it" ; } ; --*
lin arroba_2_N = mkN "arroba" ; --*
lin arrogance_N = variants {mkN "arrogância" ; mkN "elevado-high-handedness" ; mkN "orgulho" ; } ; --*
lin arrogant_A = variants {mkA "altivo" ; mkA "arrogante" ; mkA "orgulhoso" ; mkA "presunçoso" ; mkA "ufano" ; } ; --*
lin arrogate_1_V2 = variants {mkV2 (mkV "claim") ; mkV2 (mkV "reclamar") ; } ; --*
lin arrogate_3_V2 = variants {mkV2 (mkV "esbulhar") ; mkV2 (mkV "over") ; mkV2 (mkV "usurpar") ; } ; --*
lin arrow_1_N = variants {mkN "flecha" ; mkN "ponteiro" ; } ; --*
lin arrow_2_N = variants {mkN "flecha" ; mkN "seta" ; } ; --*
lin arrowhead_N = mkN "ponta" ; --*
lin arrowroot_2_N = variants {mkN "araruta" ; mkN "arrowroot" ; mkN "arundinaceae" ; mkN "plant" ; } ; --*
lin arroyo_N = mkN "ribeiro" ; --*
lin arse_1_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin arse_2_N = variants {mkN "ânus" ; mkN "cuzão" ; mkN "pentelho" ; mkN "rabo" ; } ; --*
lin arsehole_N = variants {mkN "ânus" ; mkN "cuzão" ; mkN "pentelho" ; mkN "rabo" ; } ; --*
lin arsenal_1_N = mkN "arsenal" ; --*
lin arsenal_2_N = mkN "arsenal" ; --*
lin arsenal_3_N = variants {mkN "armaria" ; mkN "arsenal" ; } ; --*
lin arsenate_N = variants {mkN "arseniato" ; mkN "Arseniatos" ; } ; --*
lin arsenic_1_N = variants {mkN "anhydride" ; mkN "arsenic" ; mkN "arsénio" ; mkN "arsênio" ; mkN "oxide" ; mkN "trioxide" ; } ; --*
lin arsenic_2_N = variants {mkN "arsénico" ; mkN "arsênico" ; mkN "arsénio" ; mkN "Arsénio" ; mkN "arsênio" ; mkN "mata-ratos" ; mkN "number" ; } ; --*
lin arsenopyrite_N = mkN "Arsenopirita" ; --*
lin arsine_N = mkN "arsina" ; --*
lin arsonist_N = mkN "incendiário" ; --*
lin arson_N = variants {mkN "fogo" ; mkN "incêndio" ; } ; --*
lin art_1_N = variants {mkN "art" ; mkN "arte" ; mkN "belas-artes" ; } ; --*
lin art_2_N = variants {mkN "arte" ; mkN "creation" ; mkN "production" ; } ; --*
lin art_3_N = variants {mkN "Arte" ; mkN "destreza" ; } ; --*
lin art_4_N = variants {mkN "arte" ; mkN "desenho" ; mkN "gráfico" ; mkN "ilustração" ; mkN "matter" ; } ; --*
lin artefact_N = variants {mkN "artefato" ; mkN "produto" ; mkN "utensílio" ; } ; --*
lin arterial_A = mkA "arterial" ; --*
lin arteriography_N = mkN "arteriografia" ; --*
lin arteriole_1_N = variants {mkN "arteríola" ; mkN "artery" ; } ; --*
lin arteriosclerosis_N = variants {mkN "arteriosclerose" ; mkN "disease" ; mkN "of" ; mkN "sclerosis" ; } ; --*
lin arteriovenous_A = mkA "arteriovenoso" ; --*
lin arteritis_N = variants {mkN "arterite" ; mkN "Arterite" ; } ; --*
lin artery_1_N = variants {mkN "Arteria" ; mkN "artéria" ; mkN "Artéria" ; mkN "blood" ; } ; --*
lin artery_2_N = mkN "artéria" ; --*
lin artesian_A = mkA "artesiano" ; --*
lin artful_1_A = mkA "astuto" ; --*
lin artful_2_A = mkA "astuto" ; --*
lin arthralgia_N = variants {mkN "artralgia" ; mkN "Artralgia" ; } ; --*
lin arthritic_A = mkA "artrítico" ; --*
lin arthritis_N = variants {mkN "artrite" ; mkN "Artrite" ; } ; --*
lin arthrodesis_N = mkN "artrodese" ; --*
lin arthrogram_N = mkN "Artrografia" ; --*
lin arthropathy_N = variants {mkN "artropatia" ; mkN "Artropatia" ; } ; --*
lin arthropod_N = variants {mkN "Artropode" ; mkN "artrópode" ; mkN "artrópodes" ; } ; --*
lin arthroscope_N = mkN "artroscópio" ; --*
lin arthroscopy_N = mkN "artroscopia" ; --*
lin arthur_1_PN = variants {mkPN "A." ; mkPN "Alan" ; mkPN "Arthur" ; mkPN "Artur" ; } ; --*
lin arthur_2_PN = variants {mkPN "Arthur" ; mkPN "Rei" ; } ; --*
lin artichoke_1_N = variants {mkN "alcachofra" ; mkN "artichoke" ; mkN "plant" ; mkN "scolymus" ; } ; --*
lin artichoke_2_N = variants {mkN "alcachofra" ; mkN "artichoke" ; } ; --*
lin article_1_N = variants {mkN "artigo" ; mkN "artigos" ; } ; --*
lin article_2_N = mkN "artigo" ; --*
lin article_3_N = variants {mkN "artigo" ; mkN "cláusula" ; } ; --*
lin article_4_N = mkN "artigo" ; --*
lin articulate_2_A = mkA "articulado" ; --*
lin articulate_2_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "expressar") ; mkV2 (mkV "formular") ; mkV2 (mkV "voice") ; } ; --*
lin articulate_3_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "out") ; mkV2 (mkV "pronunciar") ; } ; --*
lin articulate_5_V2 = variants {mkV2 (mkV "articular") ; mkV2 (mkV "dizer") ; mkV2 (mkV "enunciar") ; mkV2 (mkV "vocalizar") ; } ; --*
lin articulation_1_N = mkN "pronúncia" ; --*
lin articulation_2_N = variants {mkN "articulação" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin articulation_3_N = mkN "articulação" ; --*
lin articulation_4_N = variants {mkN "articulação" ; mkN "Articulações" ; } ; --*
lin articulation_5_N = mkN "articulação" ; --*
lin artifact_N = variants {mkN "artefato" ; mkN "produto" ; mkN "utensílio" ; } ; --*
lin artifice_N = variants {mkN "artimanha" ; mkN "maracutaia" ; mkN "truque" ; } ; --*
lin artificer_1_N = variants {mkN "artífice" ; mkN "descobridor" ; mkN "inventor" ; mkN "Inventor" ; mkN "Inventores" ; } ; --*
lin artificer_2_N = variants {mkN "artesão" ; mkN "artífice" ; } ; --*
lin artificial_1_A = variants {mkA "artificial" ; mkA "f''" ; } ; --*
lin artificial_2_A = mkA "artificial" ; --*
lin artificial_3_A = variants {mkA "artificial" ; mkA "f''" ; } ; --*
lin artillery_1_N = variants {mkN "arma" ; mkN "artilharia" ; mkN "weapon" ; } ; --*
lin artillery_2_N = variants {mkN "artilharia" ; mkN "unit" ; } ; --*
lin artillery_3_N = variants {mkN "arma" ; mkN "recurso" ; } ; --*
lin artilleryman_N = variants {mkN "artilheiro" ; mkN "gunner" ; } ; --*
lin artiodactyl_A = mkA "artiodátilo" ; --*
lin artisan_N = variants {mkN "artesão" ; mkN "artífice" ; } ; --*
lin artiste_N = mkN "artista" ; --*
lin artistic_1_A = mkA "artístico" ; --*
lin artistic_2_A = mkA "artístico" ; --*
lin artistic_3_A = variants {mkA "artístico" ; mkA "estético" ; } ; --*
lin artist_N = variants {mkN "artista" ; mkN "person" ; } ; --*
lin artistry_N = variants {mkN "Arte" ; mkN "destreza" ; } ; --*
lin artlessness_1_N = variants {mkN "inocência" ; mkN "naturalidade" ; } ; --*
lin artwork_N = variants {mkN "arte" ; mkN "desenho" ; mkN "gráfico" ; mkN "ilustração" ; mkN "matter" ; } ; --*
lin arum_1_N = mkN "árum" ; --*
lin aryan_A = mkA "ariano" ; --*
lin aryanFem_1_N = variants {mkN "ariano" ; mkN "arianos" ; } ; --*
lin aryanMasc_1_N = variants {mkN "ariano" ; mkN "arianos" ; } ; --*
lin asafetida_1_N = mkN "assa-fétida" ; --*
lin asana_N = variants {mkN "asana" ; mkN "Ásana" ; mkN "Posições" ; } ; --*
lin asarabacca_N = variants {mkN "ásaro" ; mkN "europaeum" ; } ; --*
lin asbestosis_N = variants {mkN "asbestose" ; mkN "Asbestose" ; } ; --*
lin asbestos_N = variants {mkN "amianto" ; mkN "asbesto" ; mkN "asbestos" ; } ; --*
lin ascariasis_N = mkN "ascaridíase" ; --*
lin ascend_1_V2 = variants {mkV2 (mkV "levantar-se") ; mkV2 (mkV "up") ; } ; --*
lin ascend_7_V = variants {mkV "ascender" ; mkV "subir" ; mkV "up" ; } ; --*
lin ascend_8_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin ascendancy_1_N = variants {mkN "domínio" ; mkN "superioridade" ; } ; --*
lin ascendant_1_N = mkN "signo" ; --*
lin ascendant_2_A = variants {mkA "ascendente" ; mkA "dominante" ; } ; --*
lin ascendant_2_N = variants {mkN "ancestral" ; mkN "antecedentes" ; mkN "antecessor" ; mkN "antepassado" ; mkN "Antepassado" ; } ; --*
lin ascendency_1_N = variants {mkN "domínio" ; mkN "superioridade" ; } ; --*
lin ascension_1_N = variants {mkN "Ascensão" ; mkN "Day" ; mkN "of" ; } ; --*
lin ascension_2_N = variants {mkN "ascensão" ; mkN "escalada" ; mkN "subida" ; } ; --*
lin ascension_3_N = variants {mkN "Ascensão" ; mkN "of" ; } ; --*
lin ascension_5_N = variants {mkN "ascensão" ; mkN "elevação" ; } ; --*
lin ascent_1_N = variants {mkN "aclive" ; mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "subida" ; } ; --*
lin ascent_2_N = variants {mkN "ascensão" ; mkN "escalada" ; mkN "subida" ; } ; --*
lin ascent_3_N = variants {mkN "ascensão" ; mkN "elevação" ; } ; --*
lin ascertain_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "determinar") ; mkV2 (mkV "out") ; } ; --*
lin ascertain_2_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "to") ; mkV2 (mkV "verificar") ; } ; --*
lin ascertain_3_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin ascertain_4_V2 = mkV2 (mkV "descobrir") ; --*
lin ascertainable_A = variants {mkA "averiguável" ; mkA "constatável" ; mkA "verificável" ; } ; --*
lin ascetic_1_A = mkA "ascético" ; --*
lin ascetic_2_A = mkA "ascético" ; --*
lin asceticism_2_N = mkN "ascese" ; --*
lin ascetic_N = mkN "asceta" ; --*
lin ascites_N = mkN "ascite" ; --*
lin ascocarp_N = mkN "Ascocarpo" ; --*
lin ascribable_A = mkA "atribuível" ; --*
lin ascribe_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "imputar") ; } ; --*
lin ascription_2_N = mkN "Atribuição" ; --*
lin asdic_N = variants {mkN "sonar" ; mkN "Sonar" ; mkN "sounder" ; } ; --*
lin aseptic_A = variants {mkA "asséptico" ; mkA "estéril" ; } ; --*
lin asexual_A = mkA "assexual" ; --*
lin asexuality_N = variants {mkN "Assexual" ; mkN "assexualidade" ; } ; --*
lin ash_1_N = variants {mkN "cinza" ; mkN "cinzas" ; } ; --*
lin ash_2_N = variants {mkN "freixo" ; mkN "tree" ; } ; --*
lin ashamed_A = mkA "envergonhado" ; --*
lin ash_bin_1_N = variants {mkN "barrel" ; mkN "bin" ; mkN "can" ; mkN "cesto" ; mkN "lixeira" ; } ; --*
lin ash_can_N = variants {mkN "barrel" ; mkN "bin" ; mkN "can" ; mkN "cesto" ; mkN "lixeira" ; } ; --*
lin ashen_2_A = mkA "cinzento" ; --*
lin ashlar_N = mkN "Silhar" ; --*
lin ashore_Adv = mkAdv "em" ; --*
lin ashram_2_N = variants {mkN "ashram" ; mkN "Ashram" ; } ; --*
lin ashtray_N = mkN "cinzeiro" ; --*
lin ashy_A = mkA "cinzento" ; --*
lin asian_A = variants {mkA "asiática" ; mkA "asiático" ; } ; --*
lin asian_N = variants {mkN "asiano" ; mkN "asiática" ; mkN "asiático" ; } ; --*
lin asiatic_A = variants {mkA "asiática" ; mkA "asiático" ; } ; --*
lin asiatic_N = variants {mkN "asiano" ; mkN "asiática" ; mkN "asiático" ; } ; --*
lin aside_2_N = variants {mkN "excurso" ; mkN "parêntese" ; } ; --*
lin aside_3_Adv = mkAdv "à" ; --*
lin ask_1_V2 = mkV2 (mkV "pedir") ; --*
lin ask_2_V2 = mkV2 (mkV "perguntar") ; --*
lin ask_3_V2 = variants {mkV2 (mkV "exigir") ; mkV2 (mkV "requerer") ; } ; --*
lin ask_4_V2 = variants {mkV2 (mkV "indagar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "questionar") ; } ; --*
lin ask_5_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin ask_for_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "pedir") ; } ; --*
lin ask_for_2_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "pedir") ; mkV2 (mkV "requerer") ; mkV2 (mkV "requisitar") ; } ; --*
lin asking_N = variants {mkN "apelo" ; mkN "encomenda" ; mkN "instância" ; mkN "oração" ; mkN "pedido" ; mkN "pergunta" ; mkN "petição" ; mkN "requerimento" ; mkN "requisição" ; mkN "solicitação" ; } ; --*
lin ask_over_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "over") ; mkV2 (mkV "round") ; } ; --*
lin ask_round_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "over") ; mkV2 (mkV "round") ; } ; --*
lin ask_VV = variants {mkVV (mkV "exigir") ; mkVV (mkV "requerer") ; } ; --*
lin aslant_A = variants {mkA "enviesado" ; mkA "esguelhado" ; mkA "oblíqua" ; } ; --*
lin asleep_1_A = mkA "adormecido" ; --*
lin asleep_1_Adv = variants {mkAdv "dormente" ; mkAdv "formigando" ; } ; --*
lin asleep_2_A = variants {mkA "entorpecida" ; mkA "entorpecido" ; } ; --*
lin asleep_3_A = variants {mkA "falecido" ; mkA "morto" ; mkA "peace" ; mkA "rest" ; } ; --*
lin asp_1_N = variants {mkN "áspide" ; mkN "aspis" ; mkN "viper" ; } ; --*
lin asparagine_N = mkN "Asparagina" ; --*
lin asparagus_1_N = variants {mkN "asparagus" ; mkN "aspargo" ; mkN "espargo" ; mkN "officinales" ; } ; --*
lin asparagus_2_N = variants {mkN "Asparagus" ; mkN "aspargo" ; mkN "espargo" ; } ; --*
lin aspartame_N = variants {mkN "Aspartame" ; mkN "aspartamo" ; } ; --*
lin aspect_1_N = mkN "faceta" ; --*
lin aspect_2_N = mkN "aspecto" ; --*
lin aspect_3_N = variants {mkN "panorama" ; mkN "vista" ; } ; --*
lin aspect_4_N = mkN "aspecto" ; --*
lin aspect_5_N = variants {mkN "aparência" ; mkN "expressão" ; mkN "expression" ; mkN "rosto" ; } ; --*
lin aspen_N = variants {mkN "álamo" ; mkN "choupo" ; mkN "faia" ; } ; --*
lin aspergillosis_3_N = mkN "aspergilose" ; --*
lin asperity_1_N = mkN "rigor" ; --*
lin asperse_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin aspersion_2_N = variants {mkN "calúnia" ; mkN "difamação" ; } ; --*
lin aspersion_3_N = mkN "aspersão" ; --*
lin asphalt_1_N = variants {mkN "alcatrão" ; mkN "asfalto" ; } ; --*
lin asphalt_2_N = variants {mkN "asfalto" ; mkN "pitch" ; } ; --*
lin asphalt_V2 = variants {mkV2 (mkV "asfaltar") ; mkV2 (mkV "cobrir") ; } ; --*
lin asphodel_N = mkN "asfódelo" ; --*
lin asphyxia_N = mkN "asfixia" ; --*
lin asphyxiate_1_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin asphyxiate_2_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin asphyxiate_3_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "estrangular") ; mkV2 (mkV "sufocar") ; } ; --*
lin asphyxiation_2_N = variants {mkN "asfixia" ; mkN "sufocamento" ; } ; --*
lin aspic_N = variants {mkN "aspic" ; mkN "Aspic" ; } ; --*
lin aspidistra_N = variants {mkN "aspidistra" ; mkN "elatio" ; mkN "plant" ; } ; --*
lin aspirant_N = mkN "pretendente" ; --*
lin aspiration_1_N = variants {mkN "ambição" ; mkN "aspiração" ; } ; --*
lin aspiration_2_N = variants {mkN "ambição" ; mkN "aspiração" ; mkN "pretensão" ; } ; --*
lin aspiration_3_N = mkN "aspiração" ; --*
lin aspiration_4_N = variants {mkN "in" ; mkN "inalação" ; mkN "inspiração" ; } ; --*
lin aspire_V = variants {mkV "a" ; mkV "almejar" ; mkV "aspirar" ; mkV "for" ; } ; --*
lin aspire_VV = variants {mkVV (mkV "a") ; mkVV (mkV "almejar") ; mkVV (mkV "aspirar") ; mkVV (mkV "for") ; } ; --*
lin aspirin_N = variants {mkN "acid" ; mkN "aspirina" ; mkN "Joseph" ; } ; --*
lin ass_1_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin ass_4_N = variants {mkN "coito" ; mkN "cópula" ; mkN "foda" ; mkN "in" ; mkN "metida" ; mkN "of" ; mkN "sexo" ; mkN "trepada" ; } ; --*
lin assagai_N = variants {mkN "azagaia" ; mkN "Azagaia" ; mkN "zagaia" ; } ; --*
lin assail_1_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "assaltar") ; mkV2 (mkV "atacar") ; mkV2 (mkV "on") ; } ; --*
lin assail_2_V2 = variants {mkV2 (mkV "assaltar") ; mkV2 (mkV "atacar") ; } ; --*
lin assail_3_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "atacar") ; mkV2 (mkV "out") ; } ; --*
lin assailant_N = variants {mkN "agressor" ; mkN "assaltante" ; mkN "atacante" ; } ; --*
lin assassin_1_N = variants {mkN "assassina" ; mkN "assassino" ; mkN "sicário" ; } ; --*
lin assassin_2_N = mkN "assassino" ; --*
lin assassinate_1_V2 = mkV2 (mkV "assassinar") ; --*
lin assassination_2_N = variants {mkN "assassinato" ; mkN "Assassinatos" ; } ; --*
lin assault_1_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "assaltar") ; mkV2 (mkV "atacar") ; mkV2 (mkV "on") ; } ; --*
lin assault_2_N = mkN "assalto" ; --*
lin assault_2_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atentar") ; mkV2 (mkV "estuprar") ; mkV2 (mkV "violentar") ; } ; --*
lin assault_3_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "atacar") ; mkV2 (mkV "out") ; } ; --*
lin assault_4_N = mkN "estupro" ; --*
lin assay_1_N = mkN "teste" ; --*
lin assay_2_V2 = variants {mkV2 (mkV "procurar") ; mkV2 (mkV "tentar") ; } ; --*
lin assay_4_N = mkN "ensaios" ; --*
lin assegai_N = variants {mkN "azagaia" ; mkN "Azagaia" ; mkN "zagaia" ; } ; --*
lin assemblage_1_N = mkN "reunião" ; --*
lin assemblage_3_N = variants {mkN "assembléia" ; mkN "reunião" ; } ; --*
lin assemblage_4_N = variants {mkN "acúmulo" ; mkN "aglomeração" ; mkN "chusma" ; mkN "coleção" ; mkN "colecção" ; mkN "grupo" ; mkN "montão" ; mkN "ruma" ; } ; --*
lin assemble_1_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "montar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin assemble_2_V = mkV "reunir" ; --*
lin assemble_3_V2 = variants {mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; } ; --*
lin assembler_N = variants {mkN "program" ; mkN "programa" ; } ; --*
lin assembly_2_N = variants {mkN "construção" ; mkN "fabricação" ; } ; --*
lin assembly_3_N = variants {mkN "fórum" ; mkN "newsgroup" ; mkN "place" ; } ; --*
lin assembly_4_N = variants {mkN "assembleia" ; mkN "assembléia" ; } ; --*
lin assembly_5_N = mkN "produto" ; --*
lin assembly_6_N = variants {mkN "assembléia" ; mkN "reunião" ; } ; --*
lin assent_N = variants {mkN "aprovação" ; mkN "aquiescência" ; mkN "assentimento" ; mkN "concessão" ; mkN "conformidade" ; mkN "consentimento" ; } ; --*
lin assent_V = variants {mkV "aquiescer" ; mkV "assentir" ; mkV "concordar" ; mkV "dizer" ; mkV "responder" ; } ; --*
lin assert_1_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "sustentar") ; } ; --*
lin assert_1_V = variants {mkV "manter" ; mkV "sustentar" ; } ; --*
lin assert_1_VS = variants {mkVS (mkV "manter") ; mkVS (mkV "sustentar") ; } ; --*
lin assert_2_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "jurar") ; } ; --*
lin assert_2_VS = variants {mkVS (mkV "afirmar") ; mkVS (mkV "jurar") ; } ; --*
lin assert_3_V2 = variants {mkV2 (mkV "fazer-se") ; mkV2 (mkV "forward") ; } ; --*
lin assert_4_V2 = variants {mkV2 (mkV "assertar") ; mkV2 (mkV "insistir") ; } ; --*
lin assertion_1_N = mkN "asserção" ; --*
lin assertion_2_N = variants {mkN "afirmação" ; mkN "asserção" ; } ; --*
lin assertive_A = variants {mkA "agressivo" ; mkA "assertivo" ; mkA "peremptório" ; } ; --*
lin assess_1_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "estimar") ; } ; --*
lin assess_3_V2 = mkV2 (mkV "avaliar") ; --*
lin assess_4_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "estimar") ; } ; --*
lin assessment_1_N = variants {mkN "apreciação" ; mkN "avaliação" ; mkN "valorização" ; } ; --*
lin assessment_4_N = variants {mkN "critica" ; mkN "juízo" ; mkN "julgamento" ; } ; --*
lin assessor_N = variants {mkN "assessor" ; mkN "perito" ; } ; --*
lin asset_N = variants {mkN "bem" ; mkN "propriedade" ; mkN "recurso" ; mkN "vantagem" ; mkN "virtude" ; } ; --*
lin assets_N = variants {mkN "activos" ; mkN "ativo" ; mkN "ativos" ; mkN "bens" ; mkN "recursos" ; } ; --*
lin asseverate_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "sustentar") ; } ; --*
lin asseveration_N = mkN "asserção" ; --*
lin asshole_1_N = variants {mkN "filha" ; mkN "filho" ; mkN "fucker" ; mkN "of" ; } ; --*
lin asshole_2_N = variants {mkN "ânus" ; mkN "cuzão" ; mkN "pentelho" ; mkN "rabo" ; } ; --*
lin assiduity_N = variants {mkN "assiduidade" ; mkN "concentração" ; } ; --*
lin assiduous_A = mkA "assíduo" ; --*
lin assign_1_V2 = mkV2 (mkV "delegar") ; --*
lin assign_1_V2V = mkV2V (mkV "delegar") ; --*
lin assign_2_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "lotear") ; } ; --*
lin assign_3_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "imputar") ; } ; --*
lin assign_4_V2V = variants {mkV2V (mkV "apart") ; mkV2V (mkV "designar") ; mkV2V (mkV "especificar") ; } ; --*
lin assign_5_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "por") ; } ; --*
lin assign_8_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "atribuir") ; } ; --*
lin assignation_2_N = variants {mkN "divisão" ; mkN "repartição" ; } ; --*
lin assignment_1_N = variants {mkN "assignment" ; mkN "designação" ; } ; --*
lin assignment_5_N = mkN "tarefa" ; --*
lin assignment_6_N = variants {mkN "designação" ; mkN "nomeação" ; } ; --*
lin assimilable_A = mkA "assimilável" ; --*
lin assimilate_1_V2 = variants {mkV2 (mkV "assimilar") ; mkV2 (mkV "in") ; } ; --*
lin assimilate_3_V2 = mkV2 (mkV "assimilar") ; --*
lin assimilate_4_V2 = mkV2 (mkV "assimilar") ; --*
lin assimilate_4_V = mkV "assimilar" ; --*
lin assimilate_5_V = mkV "assimilar" ; --*
lin assimilation_1_N = mkN "assimilação" ; --*
lin assimilation_2_N = mkN "assimilação" ; --*
lin assimilation_3_N = mkN "assimilação" ; --*
lin assimilation_4_N = mkN "assimilação" ; --*
lin assimilation_5_N = mkN "assimilação" ; --*
lin assimilation_6_N = mkN "assimilação" ; --*
lin assist_1_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "auxílio" ; mkN "socorro" ; } ; --*
lin assist_1_V2 = variants {mkV2 (mkV "acorrer") ; mkV2 (mkV "ajudar") ; mkV2 (mkV "assistir") ; mkV2 (mkV "auxiliar") ; mkV2 (mkV "socorrer") ; mkV2 (mkV "solidarizar") ; } ; --*
lin assist_1_V = variants {mkV "acorrer" ; mkV "ajudar" ; mkV "assistir" ; mkV "auxiliar" ; mkV "socorrer" ; mkV "solidarizar" ; } ; --*
lin assist_2_N = mkN "assistência" ; --*
lin assist_2_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "assistir") ; mkV2 (mkV "auxiliar") ; } ; --*
lin assist_2_V = variants {mkV "ajudar" ; mkV "assistir" ; mkV "auxiliar" ; } ; --*
lin assist_3_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "assistir") ; mkV2 (mkV "on") ; mkV2 (mkV "servir") ; mkV2 (mkV "to") ; } ; --*
lin assistance_1_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "auxílio" ; mkN "socorro" ; } ; --*
lin assistance_2_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "recurso" ; } ; --*
lin assistance_3_N = variants {mkN "aid" ; mkN "ajuda" ; } ; --*
lin assistant_A = variants {mkA "adjunto" ; mkA "auxiliar" ; } ; --*
lin assistantFem_N = variants {mkN "adjunto" ; mkN "ajudante" ; mkN "assistente" ; mkN "criado" ; mkN "servente" ; mkN "servidor" ; } ; --*
lin assistantMasc_N = variants {mkN "adjunto" ; mkN "ajudante" ; mkN "assistente" ; mkN "criado" ; mkN "servente" ; mkN "servidor" ; } ; --*
lin associate_1_N = mkN "associado" ; --*
lin associate_1_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "in") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "up") ; } ; --*
lin associate_2_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; } ; --*
lin associate_2_V = mkV "associar" ; --*
lin associate_3_V2 = mkV2 (mkV "associar-se") ; --*
lin associate_3_V = mkV "associar-se" ; --*
lin associate_5_N = variants {mkN "degree" ; mkN "habilitações" ; } ; --*
lin association_1_N = variants {mkN "ordem" ; mkN "organização" ; mkN "sociedade" ; mkN "união" ; } ; --*
lin association_3_N = variants {mkN "ligação" ; mkN "união" ; } ; --*
lin association_4_N = variants {mkN "associação" ; mkN "conexão" ; } ; --*
lin association_5_N = variants {mkN "afiliação" ; mkN "filiação" ; } ; --*
lin associationism_N = variants {mkN "Associacionismo" ; mkN "theory" ; } ; --*
lin associative_A = variants {mkA "associativa" ; mkA "associativo" ; } ; --*
lin assonance_N = variants {mkN "assonância" ; mkN "rhyme" ; } ; --*
lin assorted_1_A = variants {mkA "misto" ; mkA "sortido" ; mkA "variado" ; } ; --*
lin assorted_2_A = variants {mkA "sortido" ; mkA "variado" ; } ; --*
lin assortment_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin assortment_2_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Sistemas" ; mkN "sortimento" ; } ; --*
lin assuage_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "apaziguar") ; mkV2 (mkV "aplacar") ; mkV2 (mkV "pacificar") ; mkV2 (mkV "serenar") ; mkV2 (mkV "sossegar") ; mkV2 (mkV "tranquilizar") ; } ; --*
lin assuage_2_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "matar") ; mkV2 (mkV "saciar") ; } ; --*
lin assuage_3_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "amenizar") ; mkV2 (mkV "atenuar") ; mkV2 (mkV "melhorar") ; } ; --*
lin assuasive_A = variants {mkA "acalmar" ; mkA "relaxar" ; } ; --*
lin assume_1_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "for") ; mkV2 (mkV "presumir") ; mkV2 (mkV "supor") ; } ; --*
lin assume_1_VS = variants {mkVS (mkV "assumir") ; mkVS (mkV "for") ; mkVS (mkV "presumir") ; mkVS (mkV "supor") ; } ; --*
lin assume_2_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; } ; --*
lin assume_3_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; } ; --*
lin assume_5_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "up") ; } ; --*
lin assume_6_VS = variants {mkVS (mkV "esbulhar") ; mkVS (mkV "over") ; mkVS (mkV "usurpar") ; } ; --*
lin assume_7_V2 = variants {mkV2 (mkV "fingir") ; mkV2 (mkV "simular") ; } ; --*
lin assume_9_V2 = variants {mkV2 (mkV "caber") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "pôr") ; mkV2 (mkV "usar") ; mkV2 (mkV "vestir") ; } ; --*
lin assumption_1_N = mkN "pressuposto" ; --*
lin assumption_2_N = variants {mkN "hipótese" ; mkN "pressuposição" ; mkN "suposição" ; } ; --*
lin assumption_3_N = variants {mkN "assunção" ; mkN "claim" ; } ; --*
lin assumption_4_N = variants {mkN "15" ; mkN "of" ; } ; --*
lin assumption_5_N = mkN "Suposição" ; --*
lin assumptive_1_A = mkA "presunçoso" ; --*
lin assurance_1_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "certeza" ; mkN "desembaraço" ; mkN "fé" ; mkN "pose" ; } ; --*
lin assurance_2_N = variants {mkN "declaração" ; mkN "garantia" ; } ; --*
lin assurance_3_N = variants {mkN "compromisso" ; mkN "garantia" ; mkN "promessa" ; } ; --*
lin assure_1_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "assegurar-se") ; mkV2 (mkV "certificar-se") ; mkV2 (mkV "garantir") ; mkV2 (mkV "ter") ; } ; --*
lin assure_2_V2 = mkV2 (mkV "afirmar") ; --*
lin assure_2_V2S = mkV2S (mkV "afirmar") ; --*
lin assure_3_V2S = variants {mkV2S (mkV "convencer") ; mkV2S (mkV "persuadir") ; } ; --*
lin assure_4_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "to") ; mkV2 (mkV "verificar") ; } ; --*
lin assure_5_V2 = variants {mkV2 (mkV "reassegurar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin assure_6_V2 = mkV2 (mkV "prometer") ; --*
lin assuredness_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "desembaraço" ; } ; --*
lin assure_VS = variants {mkVS (mkV "assegurar") ; mkVS (mkV "to") ; mkVS (mkV "verificar") ; } ; --*
lin astatine_N = variants {mkN "astatínio" ; mkN "Ástato" ; mkN "number" ; } ; --*
lin aster_1_N = variants {mkN "áster" ; mkN "astropólio" ; } ; --*
lin asterisk_N = variants {mkN "asterisco" ; mkN "Asterisco" ; } ; --*
lin asterism_2_N = mkN "asterismo" ; --*
lin astern_2_Adv = variants {mkAdv "pela" ; mkAdv "popa" ; } ; --*
lin asteroid_N = mkN "asteróide" ; --*
lin asthenosphere_N = mkN "astenosfera" ; --*
lin asthma_N = variants {mkN "Asma" ; mkN "asthma" ; mkN "attack" ; } ; --*
lin asthmatic_A = mkA "asmático" ; --*
lin astigmatism_1_N = mkN "astigmatismo" ; --*
lin astigmatism_2_N = mkN "astigmatismo" ; --*
lin astonishing_1_A = variants {mkA "assombroso" ; mkA "espantoso" ; mkA "estonteante" ; mkA "surpreendente" ; } ; --*
lin astonishing_2_A = mkA "impressionante" ; --*
lin astonishment_N = variants {mkN "admiração" ; mkN "espanto" ; mkN "surpresa" ; } ; --*
lin astonish_V2 = variants {mkV2 (mkV "admirar") ; mkV2 (mkV "assombrar") ; mkV2 (mkV "espantar") ; mkV2 (mkV "estontear") ; mkV2 (mkV "surpreender") ; } ; --*
lin astounding_1_A = mkA "estarrecedor" ; --*
lin astounding_2_A = mkA "impressionante" ; --*
lin astound_V2 = variants {mkV2 (mkV "admirar") ; mkV2 (mkV "assombrar") ; mkV2 (mkV "espantar") ; mkV2 (mkV "estontear") ; mkV2 (mkV "surpreender") ; } ; --*
lin astragalar_A = mkA "do" ; --*
lin astrakhan_2_N = mkN "Astracã" ; --*
lin astral_A = variants {mkA "astral" ; mkA "sideral" ; } ; --*
lin astraphobia_N = mkN "Brontofobia" ; --*
lin astride_1_Adv = variants {mkAdv "de" ; mkAdv "escarranchadamente" ; mkAdv "escarranchado" ; } ; --*
lin astride_2_Adv = variants {mkAdv "de" ; mkAdv "escarranchadamente" ; } ; --*
lin astringent_1_A = variants {mkA "acerbo" ; mkA "adstringente" ; mkA "cortante" ; mkA "picante" ; } ; --*
lin astringent_2_A = mkA "adstringente" ; --*
lin astringent_N = variants {mkN "adstringência" ; mkN "drug" ; } ; --*
lin astrocyte_N = mkN "astrócito" ; --*
lin astrolabe_N = mkN "astrolábio" ; --*
lin astrologer_N = mkN "astrólogo" ; --*
lin astrological_A = mkA "astrológico" ; --*
lin astrology_N = variants {mkN "Astrologia" ; mkN "divination" ; } ; --*
lin astrometry_N = variants {mkN "astrometria" ; mkN "astronomia" ; } ; --*
lin astronautics_N = variants {mkN "aeronáutica" ; mkN "Aeronáutica" ; mkN "astronáutica" ; mkN "aviação" ; } ; --*
lin astronaut_N = variants {mkN "astronauta" ; mkN "cosmonauta" ; } ; --*
lin astronomer_N = variants {mkN "astrónomo" ; mkN "astrônomo" ; mkN "Astrónomos" ; } ; --*
lin astronomic_1_A = variants {mkA "astronómico" ; mkA "astronômico" ; } ; --*
lin astronomic_2_A = variants {mkA "astronômico" ; mkA "galáctico" ; mkA "galático" ; } ; --*
lin astronomical_1_A = variants {mkA "astronómico" ; mkA "astronômico" ; } ; --*
lin astronomical_2_A = variants {mkA "astronômico" ; mkA "galáctico" ; mkA "galático" ; } ; --*
lin astronomy_N = variants {mkN "astronomia" ; mkN "Astronomia" ; } ; --*
lin astrophysical_A = mkA "astrofísico" ; --*
lin astrophysicist_N = mkN "astrofísico" ; --*
lin astrophysics_N = variants {mkN "astrofísica" ; mkN "Astrofísica" ; } ; --*
lin astute_A = mkA "astuto" ; --*
lin astuteness_1_N = variants {mkN "astúcia" ; mkN "astucidade" ; mkN "sagacidade" ; } ; --*
lin a_sufficiencyPl_Card = variants {} ; --*
lin a_sufficiencySg_Card = variants {} ; --*
lin as_well_Adv = variants {mkAdv "ainda" ; mkAdv "idem" ; mkAdv "outrossim" ; mkAdv "também" ; mkAdv "well" ; } ; --*
lin asylum_1_N = variants {mkN "asilo" ; mkN "guarida" ; mkN "refúgio" ; } ; --*
lin asylum_2_N = variants {mkN "asylum" ; mkN "home" ; mkN "Hospitais" ; mkN "hospital" ; mkN "institution" ; } ; --*
lin asymmetric_A = mkA "assimétrico" ; --*
lin asymmetrical_1_A = mkA "assimétrico" ; --*
lin asymmetrical_2_A = mkA "assimétrico" ; --*
lin asymmetry_N = mkN "assimetria" ; --*
lin asymptomatic_A = mkA "assintomático" ; --*
lin asymptote_N = variants {mkN "Assimptota" ; mkN "assímptota" ; mkN "assíntota" ; } ; --*
lin asynchronism_N = variants {mkN "assincronia" ; mkN "assincronismo" ; } ; --*
lin asynchronous_1_A = mkA "assíncrono" ; --*
lin asynchronous_2_A = mkA "assíncrono" ; --*
lin asyndeton_N = mkN "Assíndeto" ; --*
lin asystole_N = variants {mkN "arrest" ; mkN "parada" ; } ; --*
lin at_1_N = variants {mkN "astatínio" ; mkN "Ástato" ; mkN "number" ; } ; --*
lin at_2_N = mkN "at" ; --*
lin at_all_Adv = variants {mkAdv "all" ; mkAdv "least" ; mkAdv "the" ; } ; --*
lin ataractic_1_A = mkA "sedativo" ; --*
lin ataraxia_N = mkN "ataraxia" ; --*
lin atavism_N = variants {mkN "atavismo" ; mkN "Atavismo" ; } ; --*
lin atavistic_A = variants {mkA "atávico" ; mkA "atavístico" ; } ; --*
lin ataxia_1_N = variants {mkN "ataxia" ; mkN "Ataxia" ; } ; --*
lin atelectasis_N = mkN "atelectasia" ; --*
lin atelier_N = variants {mkN "atelier" ; mkN "workroom" ; } ; --*
lin atenolol_N = mkN "atenolol" ; --*
lin atheism_N = variants {mkN "ateísmo" ; mkN "Ateísmo" ; } ; --*
lin atheist_A = mkA "ateístico" ; --*
lin atheistic_1_A = mkA "ateístico" ; --*
lin atheistic_2_A = mkA "ateístico" ; --*
lin atheist_N = variants {mkN "atéia" ; mkN "ateísta" ; mkN "ateu" ; } ; --*
lin athenian_A = mkA "ateniense" ; --*
lin athenianFem_N = mkN "ateniense" ; --*
lin athenianMasc_N = mkN "ateniense" ; --*
lin athens_1_PN = variants {mkPN "Atenas" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin atherogenesis_N = mkN "aterogênese" ; --*
lin atheroma_N = mkN "ateroma" ; --*
lin atherosclerosis_N = variants {mkN "artery" ; mkN "aterosclerose" ; } ; --*
lin athlete_N = variants {mkN "atleta" ; mkN "Desportistas" ; } ; --*
lin athletic_1_A = mkA "atlético" ; --*
lin athletic_2_A = variants {mkA "acrobático" ; mkA "atlético" ; } ; --*
lin athletic_3_A = mkA "atlético" ; --*
lin athletics_1_N = mkN "esporte" ; --*
lin athletics_3_N = mkN "atletismo" ; --*
lin at_home_1_Adv = mkAdv "home" ; --*
lin at_home_2_Adv = mkAdv "home" ; --*
lin atlanta_1_PN = variants {mkPN "Atlanta" ; mkPN "of" ; } ; --*
lin atlanta_2_PN = variants {mkPN "Atlanta" ; mkPN "of" ; } ; --*
lin atlantic_A = mkA "atlântico" ; --*
lin atlantic_PN = variants {mkPN "Atlântico" ; mkPN "Ocean" ; mkPN "oceano" ; } ; --*
lin atlas_2_N = variants {mkN "Atlas" ; mkN "collection" ; mkN "of" ; } ; --*
lin atlas_3_N = variants {mkN "atlas" ; mkN "Átlas" ; mkN "vertebra" ; } ; --*
lin atlas_4_N = mkN "atlante" ; --*
lin atlas_PN = variants {mkPN "Atlas" ; mkPN "Cordilheira" ; } ; --*
lin at_last_Adv = variants {mkAdv "afinal" ; mkAdv "finalmente" ; mkAdv "last" ; mkAdv "long" ; mkAdv "the" ; mkAdv "ultimamente" ; } ; --*
lin at_last_AdV = variants {mkAdV "afinal" ; mkAdV "finalmente" ; mkAdV "last" ; mkAdV "long" ; mkAdV "the" ; mkAdV "ultimamente" ; } ; --*
lin at_least_AdN = variants {mkAdN "least" ; mkAdN "the" ; } ; --*
lin at_long_last_Adv = variants {mkAdv "afinal" ; mkAdv "finalmente" ; mkAdv "last" ; mkAdv "long" ; mkAdv "the" ; mkAdv "ultimamente" ; } ; --*
lin atmosphere_1_N = variants {mkN "ambiência" ; mkN "ar" ; mkN "atmosfera" ; } ; --*
lin atmosphere_2_N = variants {mkN "atmosfera" ; mkN "atmosphere" ; mkN "pressure" ; } ; --*
lin atmosphere_3_N = variants {mkN "ar" ; mkN "atmosfera" ; } ; --*
lin atmosphere_4_N = variants {mkN "atmosfera" ; mkN "state" ; } ; --*
lin atmosphere_5_N = variants {mkN "ar" ; mkN "atmosfera" ; } ; --*
lin atmosphere_of_N2 = variants {mkN2 (mkN "atmosfera") noPrep ; mkN2 (mkN "aura") noPrep ; } ; --*
lin atmospheric_1_A = mkA "atmosférico" ; --*
lin atoll_N = variants {mkN "Atóis" ; mkN "atol" ; mkN "Atol" ; } ; --*
lin atom_1_N = mkN "átomo" ; --*
lin atom_2_N = variants {mkN "átomo" ; mkN "partícula" ; } ; --*
lin atomic_1_A = variants {mkA "atómico" ; mkA "atômico" ; } ; --*
lin atomic_3_A = mkA "diminuto" ; --*
lin atomic_bomb_N = variants {mkN "bomb" ; mkN "bomba" ; } ; --*
lin atomic_weapon_N = mkN "weapon" ; --*
lin atomization_1_N = mkN "fragmentação" ; --*
lin atomize_3_V2 = variants {mkV2 (mkV "atomizar") ; mkV2 (mkV "pulverizar") ; } ; --*
lin atomizer_1_N = variants {mkN "atomizador" ; mkN "bombas" ; mkN "nebulizador" ; } ; --*
lin atonal_A = mkA "atonal" ; --*
lin atonality_1_N = mkN "Música" ; --*
lin atone_1_V = mkV "redimir" ; --*
lin atone_2_V = mkV "penitenciar" ; --*
lin atonement_2_N = mkN "absolvição" ; --*
lin atop_Adv = mkAdv "no" ; --*
lin atrazine_N = variants {mkN "atrazina" ; mkN "Atrazina" ; } ; --*
lin atresia_N = mkN "Atresia" ; --*
lin atrial_A = mkA "atrial" ; --*
lin atrioventricular_A = mkA "atrioventricular" ; --*
lin atrium_2_N = mkN "átrio" ; --*
lin atrocious_1_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "nefando" ; } ; --*
lin atrocious_2_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin atrocious_3_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "horrível" ; } ; --*
lin atrocity_1_N = variants {mkN "atrocidade" ; mkN "barbaria" ; mkN "barbaridade" ; } ; --*
lin atrocity_2_N = mkN "atrocidade" ; --*
lin atrophic_A = mkA "atrófico" ; --*
lin atrophy_1_N = variants {mkN "atrofia" ; mkN "away" ; } ; --*
lin atrophy_2_N = mkN "atrofia" ; --*
lin atrophy_V = variants {mkV "atrofiar" ; mkV "atrofiar-se" ; mkV "causar" ; } ; --*
lin atropine_N = mkN "Atropina" ; --*
lin attach_1_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "unir") ; } ; --*
lin attach_2_V = mkV "tocar" ; --*
lin attach_3_V = variants {mkV "grudar" ; mkV "juntar" ; } ; --*
lin attach_4_V2 = variants {mkV2 (mkV "aproximar") ; mkV2 (mkV "aproximar-se") ; mkV2 (mkV "criar") ; mkV2 (mkV "ligar") ; } ; --*
lin attach_5_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "confiscar") ; } ; --*
lin attachment_1_N = variants {mkN "apego" ; mkN "regard" ; } ; --*
lin attachment_2_N = mkN "anexo" ; --*
lin attachment_4_N = mkN "ligação" ; --*
lin attachment_5_N = variants {mkN "aderência" ; mkN "adesão" ; } ; --*
lin attachment_7_N = variants {mkN "fixação" ; mkN "ligação" ; } ; --*
lin attack_1_N = mkN "ataque" ; --*
lin attack_1_V2 = variants {mkV2 (mkV "assaltar") ; mkV2 (mkV "atacar") ; } ; --*
lin attack_2_N = mkN "ataque" ; --*
lin attack_2_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "atacar") ; mkV2 (mkV "out") ; } ; --*
lin attack_3_N = variants {mkN "ataque" ; mkN "fogo" ; } ; --*
lin attack_3_V = variants {mkV "agredir" ; mkV "atacar" ; } ; --*
lin attack_4_N = variants {mkN "abordagem" ; mkN "of" ; } ; --*
lin attack_4_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "assaltar") ; mkV2 (mkV "atacar") ; mkV2 (mkV "on") ; } ; --*
lin attack_5_N = variants {mkN "assalto" ; mkN "ataque" ; mkN "atentado" ; } ; --*
lin attack_5_V2 = mkV2 (mkV "acometer") ; --*
lin attack_6_V2 = mkV2 (mkV "atacar") ; --*
lin attack_9_N = mkN "ataque" ; --*
lin attacker_N = variants {mkN "agressor" ; mkN "assaltante" ; mkN "atacante" ; } ; --*
lin attain_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "chegar") ; mkV2 (mkV "efectuar") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "obter") ; mkV2 (mkV "realizar") ; } ; --*
lin attain_3_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "across") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin attain_4_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "chegar") ; } ; --*
lin attainable_A = variants {mkA "alcançável" ; mkA "atingível" ; } ; --*
lin attainment_1_N = variants {mkN "obtenção" ; mkN "realização" ; } ; --*
lin attainment_2_N = mkN "conseguimento" ; --*
lin attainment_3_N = variants {mkN "habilidade" ; mkN "meta" ; mkN "talento" ; mkN "técnica" ; } ; --*
lin attempt_1_N = variants {mkN "esforço" ; mkN "tentativa" ; } ; --*
lin attempt_1_VV = variants {mkVV (mkV "procurar") ; mkVV (mkV "tentar") ; } ; --*
lin attempt_2_N = variants {mkN "assalto" ; mkN "ataque" ; mkN "atentado" ; } ; --*
lin attempt_2_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "empreender") ; } ; --*
lin attempt_2_VV = variants {mkVV (mkV "about") ; mkVV (mkV "empreender") ; } ; --*
lin attend_1_V2 = variants {mkV2 (mkV "estar") ; mkV2 (mkV "ir") ; mkV2 (mkV "participar") ; mkV2 (mkV "to") ; } ; --*
lin attend_4_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "assistir") ; mkV2 (mkV "on") ; mkV2 (mkV "servir") ; mkV2 (mkV "to") ; } ; --*
lin attend_5_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "atender") ; mkV2 (mkV "ear") ; mkV2 (mkV "fixar") ; mkV2 (mkV "heed") ; } ; --*
lin attendance_1_N = variants {mkN "assistência" ; mkN "comparecimento" ; mkN "presença" ; } ; --*
lin attendance_2_N = mkN "frequência" ; --*
lin attendant_1_N = variants {mkN "ajudante" ; mkN "assistente" ; mkN "empregado" ; } ; --*
lin attendant_2_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin attendant_2_N = mkN "assistente" ; --*
lin attend_to_2_V2 = variants {mkV2 (mkV "care") ; mkV2 (mkV "cuidar") ; } ; --*
lin attend_to_5_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "atender") ; mkV2 (mkV "ear") ; mkV2 (mkV "fixar") ; mkV2 (mkV "heed") ; } ; --*
lin attention_2_N = variants {mkN "assintência" ; mkN "cuidado" ; } ; --*
lin attention_3_N = mkN "interesse" ; --*
lin attention_4_N = mkN "sentido" ; --*
lin attention_5_N = variants {mkN "atenção" ; mkN "concentração" ; } ; --*
lin attentive_A = variants {mkA "atencioso" ; mkA "atento" ; mkA "attention" ; } ; --*
lin attentive_to_A2 = mkA2 (mkA "atento") noPrep ; --*
lin attenuate_1_V2 = variants {mkV2 (mkV "debilitar") ; mkV2 (mkV "rarefazer") ; } ; --*
lin attenuate_2_V2 = mkV2 (mkV "debilitar") ; --*
lin attenuate_A = mkA "atenue" ; --*
lin attenuation_1_N = variants {mkN "atenuação" ; mkN "enfraquecimento" ; } ; --*
lin attenuation_2_N = mkN "Atenuação" ; --*
lin attenuator_N = mkN "atenuador" ; --*
lin attest_2_V2 = mkV2 (mkV "confirmar") ; --*
lin attest_3_V2 = variants {mkV2 (mkV "testemunhar") ; mkV2 (mkV "the") ; mkV2 (mkV "witness") ; } ; --*
lin attest_3_VS = variants {mkVS (mkV "testemunhar") ; mkVS (mkV "the") ; mkVS (mkV "witness") ; } ; --*
lin attest_3_V = variants {mkV "testemunhar" ; mkV "the" ; mkV "witness" ; } ; --*
lin attest_to_V2 = variants {mkV2 (mkV "certificar") ; mkV2 (mkV "demonstrar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "provar") ; } ; --*
lin attic_1_N = variants {mkN "ático" ; mkN "mansarda" ; mkN "sótão" ; mkN "trapeira" ; } ; --*
lin attic_2_N = variants {mkN "dialect" ; mkN "Greek" ; mkN "jónico" ; mkN "Sótão" ; } ; --*
lin attic_A = mkA "ático" ; --*
lin at_times_Adv = variants {mkAdv "and" ; mkAdv "in" ; mkAdv "ocasionalmente" ; mkAdv "occasion" ; mkAdv "time" ; mkAdv "times" ; } ; --*
lin attire_N = variants {mkN "roupa" ; mkN "traje" ; mkN "vestido" ; mkN "vestuário" ; } ; --*
lin attire_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; mkV2 (mkV "vestir") ; } ; --*
lin attitude_1_N = variants {mkN "atitude" ; mkN "attitude" ; } ; --*
lin attitude_2_N = variants {mkN "atitude" ; mkN "posição" ; mkN "postura" ; } ; --*
lin attitude_3_N = mkN "postura" ; --*
lin attitudinize_1_V = mkV "fingir" ; --*
lin attorney_N = variants {mkN "advogada" ; mkN "advogado" ; mkN "jurista" ; } ; --*
lin attorneyship_N = mkN "advocacia" ; --*
lin attract_1_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "in") ; } ; --*
lin attract_2_V2 = mkV2 (mkV "atrair") ; --*
lin attraction_1_N = variants {mkN "atração" ; mkN "force" ; } ; --*
lin attraction_2_N = mkN "atração" ; --*
lin attraction_3_N = variants {mkN "atração" ; mkN "atratividade" ; } ; --*
lin attraction_4_N = variants {mkN "atração" ; mkN "feature" ; } ; --*
lin attraction_5_N = variants {mkN "atração" ; mkN "card" ; } ; --*
lin attractive_1_A = mkA "atraente" ; --*
lin attractive_3_A = variants {mkA "atrativo" ; mkA "magnético" ; } ; --*
lin attractiveness_1_N = variants {mkN "atração" ; mkN "atratividade" ; } ; --*
lin attractor_1_N = variants {mkN "atração" ; mkN "card" ; } ; --*
lin attractor_2_N = mkN "atractor" ; --*
lin attractor_3_N = variants {mkN "atração" ; mkN "feature" ; } ; --*
lin attribute_1_N = variants {mkN "atributos" ; mkN "carácter" ; mkN "qualidade" ; } ; --*
lin attribute_1_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "imputar") ; } ; --*
lin attribute_2_N = variants {mkN "atributo" ; mkN "característica" ; mkN "predicado" ; mkN "propriedade" ; } ; --*
lin attribute_2_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "atribuir") ; } ; --*
lin attribution_2_N = mkN "Atribuição" ; --*
lin attrition_1_N = mkN "abrasão" ; --*
lin attrition_2_N = mkN "abrasão" ; --*
lin attrition_3_N = variants {mkN "contrição" ; mkN "remorso" ; } ; --*
lin attrition_4_N = mkN "atrito" ; --*
lin attune_V2 = variants {mkV2 (mkV "afinar") ; mkV2 (mkV "ajustar") ; } ; --*
lin atypical_1_A = mkA "atípico" ; --*
lin atypical_2_A = mkA "irregular" ; --*
lin aubergine_1_N = variants {mkN "apple" ; mkN "beringela" ; mkN "berinjela" ; mkN "bush" ; mkN "egg" ; mkN "melongena" ; } ; --*
lin aubergine_2_N = variants {mkN "apple" ; mkN "beringela" ; mkN "berinjela" ; } ; --*
lin auburn_A = mkA "ruivo" ; --*
lin auckland_PN = variants {mkPN "Auckland" ; mkPN "Auclanda" ; } ; --*
lin auction_2_N = variants {mkN "almoeda" ; mkN "arrematação" ; mkN "leilão" ; mkN "sale" ; } ; --*
lin auctioneer_N = variants {mkN "leiloeiro" ; mkN "pregoeiro" ; } ; --*
lin auction_off_V2 = variants {mkV2 (mkV "leiloar") ; mkV2 (mkV "licitar") ; mkV2 (mkV "off") ; } ; --*
lin auction_V2 = variants {mkV2 (mkV "leiloar") ; mkV2 (mkV "licitar") ; mkV2 (mkV "off") ; } ; --*
lin audacious_1_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "intrépido" ; mkA "ousado" ; } ; --*
lin audacious_2_A = mkA "insolente" ; --*
lin audacious_3_A = variants {mkA "arriscado" ; mkA "arriscador" ; mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "ousado" ; } ; --*
lin audacity_1_N = mkN "audácia" ; --*
lin audacity_2_N = mkN "audácia" ; --*
lin audibility_N = mkN "audibilidade" ; --*
lin audible_A = mkA "audível" ; --*
lin audience_1_N = variants {mkN "audiências" ; mkN "ouvintes" ; mkN "público" ; } ; --*
lin audience_2_N = variants {mkN "audiência" ; mkN "espectador" ; } ; --*
lin audience_3_N = variants {mkN "audiência" ; mkN "ouvinte" ; } ; --*
lin audience_4_N = variants {mkN "audiência" ; mkN "entrevista" ; } ; --*
lin audio_1_N = mkN "som" ; --*
lin audio_2_N = variants {mkN "audio" ; mkN "frequency" ; } ; --*
lin audio_3_N = variants {mkN "Gravação" ; mkN "recording" ; } ; --*
lin audiogram_N = mkN "Audiograma" ; --*
lin audiometer_N = mkN "sonómetro" ; --*
lin audiometry_2_N = variants {mkN "audiometria" ; mkN "Audiometria" ; } ; --*
lin audiovisual_A = mkA "audiovisual" ; --*
lin audit_1_N = variants {mkN "account" ; mkN "auditoria" ; } ; --*
lin audit_1_V2 = variants {mkV2 (mkV "auditar") ; mkV2 (mkV "auditorar") ; mkV2 (mkV "escrutinizar") ; mkV2 (mkV "inspecionar") ; } ; --*
lin audit_2_N = mkN "exame" ; --*
lin audit_2_V2 = mkV2 (mkV "participar") ; --*
lin audition_1_N = variants {mkN "audição" ; mkN "modality" ; mkN "of" ; mkN "sense" ; } ; --*
lin audition_2_N = variants {mkN "audição" ; mkN "ensaio" ; mkN "teste" ; } ; --*
lin auditor_1_N = variants {mkN "aluno" ; mkN "auditor" ; mkN "ouvinte" ; } ; --*
lin auditor_2_N = mkN "ouvinte" ; --*
lin auditor_3_N = mkN "auditor" ; --*
lin auditorium_N = mkN "auditório" ; --*
lin auditory_A = mkA "auditivo" ; --*
lin auger_2_N = variants {mkN "auger" ; mkN "trado" ; } ; --*
lin aught_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin augment_1_V2 = mkV2 (mkV "aumentar") ; --*
lin augment_2_V = mkV "aumentar" ; --*
lin augmentation_1_N = mkN "aumento" ; --*
lin augmentation_2_N = mkN "Aumento" ; --*
lin augmentation_3_N = mkN "aumento" ; --*
lin augmentative_1_A = mkA "aumentativo" ; --*
lin augmentative_2_A = mkA "aumentativo" ; --*
lin aug_PN = variants {mkPN "agosto" ; mkPN "Agosto" ; } ; --*
lin augur_1_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin augur_N = variants {mkN "agoureiro" ; mkN "Áugures" ; } ; --*
lin augury_N = variants {mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; } ; --*
lin august_1_A = mkA "senhorial" ; --*
lin august_2_A = variants {mkA "augusto" ; mkA "venerável" ; } ; --*
lin augustan_A = mkA "augusto" ; --*
lin auntie_N = variants {mkN "tia" ; mkN "tio" ; } ; --*
lin aunt_N = variants {mkN "tia" ; mkN "tio" ; } ; --*
lin aunty_N = variants {mkN "tia" ; mkN "tio" ; } ; --*
lin au_pair_N = mkN "pair" ; --*
lin aura_1_N = mkN "aura" ; --*
lin aura_2_N = variants {mkN "aura" ; mkN "auréola" ; mkN "halo" ; } ; --*
lin aural_1_A = mkA "auditivo" ; --*
lin aural_2_A = mkA "auditivo" ; --*
lin aura_of_N2 = variants {mkN2 (mkN "atmosfera") noPrep ; mkN2 (mkN "aura") noPrep ; } ; --*
lin aureate_1_A = mkA "flamboaiã" ; --*
lin aureate_2_A = variants {mkA "áureo" ; mkA "dourado" ; } ; --*
lin aureole_2_N = variants {mkN "aura" ; mkN "auréola" ; mkN "halo" ; } ; --*
lin auricle_1_N = variants {mkN "atrii" ; mkN "auricle" ; mkN "aurícula" ; } ; --*
lin auricle_2_N = mkN "orelha" ; --*
lin auricular_1_A = mkA "ótico" ; --*
lin auriferous_A = mkA "aurífero" ; --*
lin aurochs_1_N = variants {mkN "auroque" ; mkN "bisão-europeu" ; mkN "bonasus" ; } ; --*
lin aurochs_2_N = variants {mkN "auroque" ; mkN "primigenius" ; } ; --*
lin aurora_1_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin aurora_2_N = mkN "aurora" ; --*
lin aurora_PN = mkPN "Aurora" ; --*
lin auscultation_N = variants {mkN "ausculta" ; mkN "auscultação" ; } ; --*
lin auscultatory_A = mkA "auscultatório" ; --*
lin auspices_N = variants {mkN "auspício" ; mkN "cuidado" ; } ; --*
lin auspicious_A = variants {mkA "auspicioso" ; mkA "propício" ; } ; --*
lin aussie_N = mkN "australiano" ; --*
lin austenite_N = mkN "austenita" ; --*
lin austere_1_A = mkA "austero" ; --*
lin austere_2_A = mkA "severo" ; --*
lin austere_3_A = mkA "ascético" ; --*
lin austerity_N = mkN "ascese" ; --*
lin austral_A = mkA "austral" ; --*
lin australia_1_PN = variants {mkPN "Austrália" ; mkPN "of" ; } ; --*
lin australia_2_PN = mkPN "Austrália" ; --*
lin australian_A = mkA "australiano" ; --*
lin australianFem_1_N = mkN "australiano" ; --*
lin australianFem_2_N = variants {mkN "Australian" ; mkN "australiano" ; } ; --*
lin australianMasc_1_N = mkN "australiano" ; --*
lin australianMasc_2_N = variants {mkN "Australian" ; mkN "australiano" ; } ; --*
lin austrian_A = variants {mkA "astríaco" ; mkA "austríaco" ; } ; --*
lin austrianFem_N = variants {mkN "austríaca" ; mkN "austríaco" ; } ; --*
lin austrianMasc_N = variants {mkN "austríaca" ; mkN "austríaco" ; } ; --*
lin austria_PN = variants {mkPN "Austria" ; mkPN "Áustria" ; mkPN "of" ; } ; --*
lin autarchy_1_N = mkN "autarquia" ; --*
lin autarchy_2_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; } ; --*
lin autarky_N = mkN "autarquia" ; --*
lin authentic_1_A = variants {mkA "autêntico" ; mkA "confiável" ; mkA "fiável" ; } ; --*
lin authentic_2_A = variants {mkA "autêntico" ; mkA "fide" ; mkA "genuíno" ; } ; --*
lin authenticate_V2 = mkV2 (mkV "autenticar") ; --*
lin authentication_1_N = variants {mkN "autenticação" ; mkN "comprovação" ; mkN "marca" ; } ; --*
lin authentication_2_N = variants {mkN "autenticação" ; mkN "autentificação" ; mkN "certificação" ; mkN "Métodos" ; mkN "verificação" ; } ; --*
lin authenticity_N = variants {mkN "autenticidade" ; mkN "legitimidade" ; } ; --*
lin author_1_N = variants {mkN "autor" ; mkN "escritor" ; } ; --*
lin author_2_N = variants {mkN "artífice" ; mkN "autor" ; mkN "escritor" ; } ; --*
lin authoress_N = mkN "autor" ; --*
lin authoritarian_1_A = variants {mkA "autocrático" ; mkA "ditatorial" ; } ; --*
lin authoritarian_2_A = variants {mkA "autoritário" ; mkA "ditatorial" ; } ; --*
lin authoritarianism_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; mkN "rule" ; mkN "stalinismo" ; mkN "Stalinismo" ; } ; --*
lin authoritarian_N = mkN "ditador" ; --*
lin authoritative_1_A = mkA "importante" ; --*
lin authoritative_2_A = mkA "clássico" ; --*
lin authoritative_3_A = variants {mkA "autorizada" ; mkA "autorizado" ; mkA "de" ; } ; --*
lin authority_1_N = mkN "autorização" ; --*
lin authority_2_N = variants {mkN "autoridade" ; mkN "chefia" ; } ; --*
lin authority_3_N = mkN "autoridade" ; --*
lin authority_4_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "certeza" ; mkN "desembaraço" ; mkN "fé" ; mkN "pose" ; } ; --*
lin authority_5_N = variants {mkN "agência" ; mkN "agency" ; mkN "escritório" ; mkN "Governo" ; mkN "instituição" ; } ; --*
lin authority_6_N = variants {mkN "autorização" ; mkN "autorizações" ; mkN "sanção" ; } ; --*
lin authority_7_N = mkN "autoridade" ; --*
lin authorization_1_N = mkN "mandato" ; --*
lin authorization_2_N = mkN "autorização" ; --*
lin authorization_3_N = variants {mkN "autorização" ; mkN "autorizações" ; mkN "sanção" ; } ; --*
lin authorization_4_N = mkN "autorização" ; --*
lin authorize_1_V2 = variants {mkV2 (mkV "autorizar") ; mkV2 (mkV "permitir") ; } ; --*
lin authorize_2_V2V = mkV2V (mkV "autorizar") ; --*
lin authorship_1_N = mkN "autoria" ; --*
lin autism_N = variants {mkN "autismo" ; mkN "Autismo" ; } ; --*
lin autoantibody_N = mkN "autoanticorpo" ; --*
lin autobahn_N = variants {mkN "Autobahn" ; mkN "estrada" ; mkN "vias" ; } ; --*
lin autobiographical_1_A = mkA "autobiográfico" ; --*
lin autobiographical_2_A = mkA "autobiográfico" ; --*
lin autobiography_N = variants {mkN "autobiografia" ; mkN "Auto-biografia" ; mkN "Livros" ; } ; --*
lin autochthonal_1_A = variants {mkA "endémico" ; mkA "endêmico" ; mkA "oriundo" ; } ; --*
lin autochthonous_2_A = variants {mkA "endémico" ; mkA "endêmico" ; mkA "oriundo" ; } ; --*
lin autoclave_N = mkN "autoclave" ; --*
lin autocracy_1_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; } ; --*
lin autocracy_2_N = variants {mkN "autocracia" ; mkN "autocratismo" ; } ; --*
lin autocratic_1_A = mkA "mandão" ; --*
lin autocratic_2_A = variants {mkA "autocrático" ; mkA "ditatorial" ; } ; --*
lin autocrat_N = variants {mkN "autocrata" ; mkN "autócrata" ; mkN "déspota" ; mkN "ditador" ; mkN "tirano" ; } ; --*
lin autodidact_N = mkN "autodidata" ; --*
lin autoeroticism_1_N = mkN "autoerotismo" ; --*
lin autogenous_A = mkA "que" ; --*
lin autogiro_N = variants {mkN "Autogiro" ; mkN "helicóptero" ; } ; --*
lin autograph_1_N = mkN "autógrafo" ; --*
lin autograph_2_N = variants {mkN "autógrafo" ; mkN "Hancock" ; } ; --*
lin autogyro_N = variants {mkN "Autogiro" ; mkN "helicóptero" ; } ; --*
lin autoimmune_A = mkA "autoimune" ; --*
lin autoimmunity_N = mkN "autoimunidade" ; --*
lin autolysis_N = mkN "autólise" ; --*
lin automate_1_V2 = variants {mkV2 (mkV "automatizar") ; mkV2 (mkV "tornar") ; } ; --*
lin automatic_1_A = mkA "automático" ; --*
lin automatic_2_A = mkA "automático" ; --*
lin automatic_3_A = mkA "automático" ; --*
lin automation_1_N = variants {mkN "Automaçao" ; mkN "automação" ; mkN "automatização" ; } ; --*
lin automaton_2_N = variants {mkN "andróide" ; mkN "autômato" ; mkN "robô" ; mkN "robot" ; } ; --*
lin automobile_N = variants {mkN "auto" ; mkN "automóvel" ; mkN "carro" ; mkN "máquina" ; mkN "veículo" ; mkN "viatura" ; } ; --*
lin automotive_1_A = variants {mkA "automobilístico" ; mkA "automotivo" ; } ; --*
lin automotive_2_A = variants {mkA "automotivo" ; mkA "automotor" ; mkA "autopropelido" ; mkA "semovente" ; } ; --*
lin auto_N = variants {mkN "auto" ; mkN "automóvel" ; mkN "carro" ; mkN "máquina" ; mkN "veículo" ; mkN "viatura" ; } ; --*
lin autonomic_A = variants {mkA "autonómico" ; mkA "autonômico" ; mkA "autônomo" ; mkA "independente" ; } ; --*
lin autonomous_1_A = variants {mkA "autônoma" ; mkA "autonômico" ; mkA "autônomo" ; mkA "independente" ; mkA "soberano" ; } ; --*
lin autonomous_2_A = mkA "autônomo" ; --*
lin autonomy_1_N = variants {mkN "autonomia" ; mkN "liberalismo" ; } ; --*
lin autonomy_2_N = variants {mkN "autonomia" ; mkN "independência" ; } ; --*
lin autophyte_N = variants {mkN "Autotrofismo" ; mkN "organism" ; mkN "plant" ; } ; --*
lin autopilot_2_N = variants {mkN "pilot" ; mkN "piloto" ; } ; --*
lin autopsy_N = variants {mkN "autópsia" ; mkN "examination" ; mkN "necropse" ; mkN "necrópsia" ; } ; --*
lin autosome_N = variants {mkN "Autossomo" ; mkN "chromosome" ; } ; --*
lin autotomic_A = mkA "autotômico" ; --*
lin autotomy_N = variants {mkN "autotomia" ; mkN "Autotomia" ; } ; --*
lin autotype_2_N = variants {mkN "Facsimile" ; mkN "fac-símile" ; mkN "Fac-símile" ; } ; --*
lin autumnal_1_A = mkA "outonal" ; --*
lin autumnal_2_A = mkA "outonal" ; --*
lin autumn_N = mkN "outono" ; --*
lin auxiliary_1_A = variants {mkA "adicional" ; mkA "auxiliar" ; mkA "suplementar" ; } ; --*
lin auxiliary_2_A = variants {mkA "auxiliar" ; mkA "secundário" ; mkA "subordinado" ; } ; --*
lin auxiliary_N = variants {mkN "ajudante" ; mkN "auxiliar" ; } ; --*
lin auxin_N = mkN "auxina" ; --*
lin availability_N = variants {mkN "acessibilidade" ; mkN "disponibilidade" ; } ; --*
lin available_1_A = mkA "disponível" ; --*
lin available_3_A = variants {mkA "disponível" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin avail_N = mkN "assistência" ; --*
lin avail_of_V2 = mkV2 (mkV "aproveitar") ; --*
lin avalanche_1_N = variants {mkN "avalancha" ; mkN "avalanche" ; mkN "avalanches" ; mkN "Avalanches" ; } ; --*
lin avant_garde_N = variants {mkN "vanguarda" ; mkN "wave" ; } ; --*
lin avarice_1_N = variants {mkN "avareza" ; mkN "avarícia" ; mkN "avidez" ; mkN "cobiça" ; mkN "ganância" ; } ; --*
lin avarice_2_N = variants {mkN "avareza" ; mkN "ganância" ; } ; --*
lin avaricious_A = variants {mkA "avaro" ; mkA "ávido" ; mkA "ganancioso" ; } ; --*
lin avatar_1_N = mkN "personificação" ; --*
lin avatar_2_N = mkN "encarnação" ; --*
lin avenge_V2 = variants {mkV2 (mkV "desagravar") ; mkV2 (mkV "desforrar") ; mkV2 (mkV "retaliar") ; mkV2 (mkV "revidar") ; mkV2 (mkV "vingar") ; } ; --*
lin avenue_1_N = mkN "avenida" ; --*
lin avenue_2_N = variants {mkN "alameda" ; mkN "avenida" ; mkN "bulevar" ; mkN "rua" ; } ; --*
lin aver_1_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "alegar") ; mkV2 (mkV "declarar") ; } ; --*
lin aver_2_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "jurar") ; } ; --*
lin average_1_A = variants {mkA "média" ; mkA "médio" ; } ; --*
lin average_1_N = variants {mkN "média" ; mkN "Média" ; mkN "Médias" ; } ; --*
lin average_3_A = mkA "medíocre" ; --*
lin average_3_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "out") ; } ; --*
lin average_3_V = variants {mkV "calcular" ; mkV "out" ; } ; --*
lin average_4_A = mkA "médio" ; --*
lin average_5_A = mkA "modal" ; --*
lin averse_to_A2 = mkA2 (mkA "avesso") noPrep ; --*
lin aversion_1_N = variants {mkN "antipatia" ; mkN "aversão" ; mkN "ódio" ; mkN "ojeriza" ; mkN "quezília" ; } ; --*
lin avert_1_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin avert_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desviar") ; } ; --*
lin aviary_N = variants {mkN "avaria" ; mkN "aviário" ; mkN "sanctuary" ; } ; --*
lin aviation_2_N = mkN "aviação" ; --*
lin aviation_4_N = variants {mkN "aviação" ; mkN "travel" ; } ; --*
lin aviatorFem_N = variants {mkN "aeronauta" ; mkN "aviador" ; mkN "aviadora" ; mkN "aviatriz" ; mkN "piloto" ; mkN "piloto-aviador" ; } ; --*
lin aviatorMasc_N = variants {mkN "aeronauta" ; mkN "aviador" ; mkN "aviadora" ; mkN "aviatriz" ; mkN "piloto" ; mkN "piloto-aviador" ; } ; --*
lin aviatrix_N = variants {mkN "aviadora" ; mkN "aviatrix" ; mkN "aviatriz" ; } ; --*
lin avid_A = variants {mkA "ardente" ; mkA "ávido" ; mkA "fervente" ; mkA "fervoroso" ; mkA "zeloso" ; } ; --*
lin avid_for_A2 = mkA2 (mkA "ávido") noPrep ; --*
lin avidity_N = variants {mkN "anseio" ; mkN "ânsia" ; } ; --*
lin avifauna_N = mkN "aves" ; --*
lin avignon_PN = mkPN "Avinhão" ; --*
lin avionics_N = variants {mkN "Avionica" ; mkN "aviónica" ; mkN "Aviónica" ; mkN "Aviônica" ; } ; --*
lin avocado_1_N = variants {mkN "abacate" ; mkN "pear" ; } ; --*
lin avocado_2_N = variants {mkN "abacateiro" ; mkN "Americana" ; mkN "tree" ; } ; --*
lin avocational_A = mkA "avocacional" ; --*
lin avocation_N = variants {mkN "activity" ; mkN "hobby" ; mkN "passatempo" ; mkN "Passa-tempo" ; mkN "Passatempos" ; } ; --*
lin avoid_1_V2 = mkV2 (mkV "evitar") ; --*
lin avoid_2_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin avoid_3_V2 = mkV2 (mkV "evitar") ; --*
lin avoid_5_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "invalidar") ; mkV2 (mkV "revogar") ; } ; --*
lin avoidable_A = mkA "evitável" ; --*
lin avoidance_N = variants {mkN "away" ; mkN "evitação" ; mkN "sorteio" ; } ; --*
lin avoirdupois_1_N = variants {mkN "avoirdupois" ; mkN "weight" ; } ; --*
lin avoirdupois_2_N = variants {mkN "corpulência" ; mkN "excesso" ; mkN "obesidade" ; } ; --*
lin avouch_V2 = mkV2 (mkV "confessar") ; --*
lin avouch_V = mkV "confessar" ; --*
lin avow_1_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "jurar") ; } ; --*
lin avow_2_V2 = mkV2 (mkV "confessar") ; --*
lin avowal_N = mkN "afirmação" ; --*
lin avowedly_2_Adv = mkAdv "reconhecidamente" ; --*
lin await_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin awake_1_A = variants {mkA "acordado" ; mkA "desperto" ; } ; --*
lin awake_2_A = mkA "vivo" ; --*
lin awaken_1_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "despertar") ; mkV2 (mkV "up") ; } ; --*
lin awaken_2_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "alive") ; mkV2 (mkV "levantar-se") ; mkV2 (mkV "up") ; } ; --*
lin awakening_N = variants {mkN "despertar" ; mkN "up" ; } ; --*
lin awake_V = variants {mkV "acordar" ; mkV "alive" ; mkV "levantar-se" ; mkV "up" ; } ; --*
lin award_1_V2 = variants {mkV2 (mkV "outorgar") ; mkV2 (mkV "premiar") ; mkV2 (mkV "presentear") ; } ; --*
lin award_1_V3 = variants {mkV3 (mkV "outorgar") ; mkV3 (mkV "premiar") ; mkV3 (mkV "presentear") ; } ; --*
lin award_2_N = variants {mkN "galardão" ; mkN "prémio" ; mkN "Prémio" ; mkN "prêmio" ; mkN "Prêmios" ; } ; --*
lin award_3_N = variants {mkN "galardão" ; mkN "prémio" ; mkN "prêmio" ; } ; --*
lin award_to_V3 = variants {mkV3 (mkV "adjudicar") ; mkV3 (mkV "dar") ; mkV3 (mkV "outorgar") ; } ; --*
lin aware_A = mkA "consciente" ; --*
lin awareness_1_N = variants {mkN "conhecimento" ; mkN "consciência" ; mkN "saber" ; mkN "sentimento" ; } ; --*
lin awareness_2_N = variants {mkN "conhecimento" ; mkN "consciência" ; mkN "tomar" ; } ; --*
lin aware_of_A2 = variants {mkA2 (mkA "ciente") noPrep ; mkA2 (mkA "informado") noPrep ; } ; --*
lin away_1_Adv = mkAdv "embora" ; --*
lin away_7_Adv = mkAdv "alhures" ; --*
lin awe_1_N = variants {mkN "admiração" ; mkN "encatamento" ; mkN "espanto" ; mkN "fascínio" ; } ; --*
lin awe_2_N = variants {mkN "reverência" ; mkN "temor" ; } ; --*
lin aweary_A = mkA "cansado" ; --*
lin awe_inspiring_A = variants {mkA "admirável" ; mkA "imponente" ; mkA "impressionante" ; mkA "surpreendente" ; } ; --*
lin aweless_2_A = mkA "desrespeitoso" ; --*
lin awesome_A = variants {mkA "admirável" ; mkA "imponente" ; mkA "impressionante" ; mkA "surpreendente" ; } ; --*
lin awe_struck_A = mkA "deslumbrado" ; --*
lin awe_V2 = mkV2 (mkV "impressionar") ; --*
lin awful_1_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin awful_2_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin awful_3_A = variants {mkA "antipático" ; mkA "horrível" ; } ; --*
lin awful_5_A = mkA "horrível" ; --*
lin awful_6_A = variants {mkA "admirável" ; mkA "imponente" ; mkA "impressionante" ; mkA "surpreendente" ; } ; --*
lin awhile_Adv = variants {mkAdv "a" ; mkAdv "um" ; } ; --*
lin awkward_1_A = variants {mkA "bisonho" ; mkA "desastrado" ; mkA "inábil" ; } ; --*
lin awkward_2_A = variants {mkA "esquisito" ; mkA "estranho" ; } ; --*
lin awkward_4_A = mkA "desgracioso" ; --*
lin awkward_5_A = variants {mkA "desconcertante" ; mkA "difícil" ; } ; --*
lin awl_N = mkN "furador" ; --*
lin awning_N = mkN "toldo" ; --*
lin axe_N = mkN "machado" ; --*
lin axial_2_A = mkA "axial" ; --*
lin axial_3_A = mkA "axial" ; --*
lin axile_A = mkA "axial" ; --*
lin axiology_N = mkN "axiologia" ; --*
lin axiom_1_N = variants {mkN "adágio" ; mkN "aforismo" ; mkN "axioma" ; mkN "ditado" ; mkN "máxima" ; mkN "provérbio" ; } ; --*
lin axiom_2_N = mkN "axioma" ; --*
lin axiomatic_1_A = variants {mkA "axiomático" ; mkA "for" ; } ; --*
lin axis_3_N = mkN "Eixo" ; --*
lin axis_5_N = variants {mkN "áxis" ; mkN "vertebra" ; } ; --*
lin axis_6_N = variants {mkN "eixo" ; mkN "of" ; } ; --*
lin axle_N = variants {mkN "eixo" ; mkN "veio" ; } ; --*
lin axolotl_N = variants {mkN "Ambystoma" ; mkN "mexicanum" ; mkN "puppy" ; } ; --*
lin axon_1_N = variants {mkN "axónio" ; mkN "axônio" ; } ; --*
lin axonal_A = mkA "axonal" ; --*
lin azalea_N = variants {mkN "Azalea" ; mkN "Azaléa" ; mkN "azálea" ; mkN "azaléia" ; } ; --*
lin azathioprine_N = mkN "azatioprina" ; --*
lin azide_N = mkN "Azidas" ; --*
lin azimuth_N = variants {mkN "azimute" ; mkN "Azimute" ; } ; --*
lin azithromycin_N = mkN "azitromicina" ; --*
lin azoic_A = mkA "nítrico" ; --*
lin azote_N = variants {mkN "azoto" ; mkN "nitrogénio" ; mkN "nitrogênio" ; } ; --*
lin aztreonam_N = mkN "Aztreonam" ; --*
lin azure_A = variants {mkA "azul" ; mkA "blue" ; mkA "cerúleo" ; } ; --*
lin azure_N = variants {mkN "azul" ; mkN "cerúleo" ; } ; --*
lin azurite_N = mkN "azurita" ; --*
lin ba_1_N = variants {mkN "Bario" ; mkN "bário" ; mkN "number" ; } ; --*
lin ba_2_N = variants {mkN "Baccalaurens" ; mkN "Bachelor" ; mkN "of" ; } ; --*
lin baa_1_V = mkV "balir" ; --*
lin babble_1_V = mkV "tagarelar" ; --*
lin babble_4_V = variants {mkV "falar" ; mkV "out" ; mkV "the" ; } ; --*
lin babble_N = mkN "balbucio" ; --*
lin babel_1_N = variants {mkN "Babel" ; mkN "of" ; } ; --*
lin babe_N = variants {mkN "bebé" ; mkN "bebê" ; mkN "criancinha" ; mkN "garota" ; mkN "mina" ; mkN "nenê" ; mkN "recém-nascido" ; } ; --*
lin baboon_N = variants {mkN "babuíno" ; mkN "bugio" ; mkN "cinocéfalo" ; } ; --*
lin baby_1_N = variants {mkN "bebé" ; mkN "bebê" ; mkN "criancinha" ; mkN "garota" ; mkN "mina" ; mkN "nenê" ; mkN "recém-nascido" ; } ; --*
lin baby_3_N = variants {mkN "criança" ; mkN "menina" ; mkN "menino" ; } ; --*
lin babyhood_1_N = variants {mkN "childhood" ; mkN "infância" ; mkN "primeira" ; } ; --*
lin babyhood_2_N = variants {mkN "infância" ; mkN "primeira" ; } ; --*
lin babysitter_1_N = variants {mkN "babá" ; mkN "baby-sitter" ; } ; --*
lin baby_talk_1_N = variants {mkN "fala" ; mkN "talk" ; } ; --*
lin baby_talk_2_N = variants {mkN "fala" ; mkN "talk" ; } ; --*
lin baby_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin baccalaureate_2_N = variants {mkN "Bacharelato" ; mkN "Cursos" ; mkN "degree" ; } ; --*
lin baccarat_N = variants {mkN "bacará" ; mkN "de" ; } ; --*
lin bacchanal_3_N = variants {mkN "deboche" ; mkN "dissipação" ; mkN "farra" ; mkN "orgia" ; mkN "revelry" ; mkN "viveremfarra" ; } ; --*
lin bacchanal_A = mkA "orgíaco" ; --*
lin bacchanalian_A = mkA "orgíaco" ; --*
lin baccy_N = variants {mkN "fumo" ; mkN "tabaco" ; mkN "Tabaco" ; } ; --*
lin bachelor_1_N = variants {mkN "man" ; mkN "solteiro" ; } ; --*
lin bachelor_2_N = variants {mkN "bacharel" ; mkN "bachelor" ; } ; --*
lin bacillus_N = mkN "bacilo" ; --*
lin back_1_Adv = mkAdv "de" ; --*
lin back_1_A = mkA "posterior" ; --*
lin back_1_N = variants {mkN "coluna" ; mkN "costas" ; mkN "lombo" ; } ; --*
lin back_1_V = variants {mkV "aprovar" ; mkV "for" ; } ; --*
lin back_2_A = variants {mkA "de" ; mkA "posterior" ; mkA "traseiro" ; } ; --*
lin back_2_Adv = variants {mkAdv "às" ; mkAdv "de" ; mkAdv "para" ; } ; --*
lin back_2_N = variants {mkN "costas" ; mkN "dorso" ; mkN "parte" ; mkN "reverso" ; } ; --*
lin back_2_V = mkV "recuar" ; --*
lin back_3_A = mkA "anterior" ; --*
lin back_3_Adv = mkAdv "voltar" ; --*
lin back_3_V = variants {mkV "apoiar" ; mkV "aprovar" ; mkV "endossar" ; mkV "secundar" ; } ; --*
lin back_4_Adv = mkAdv "para" ; --*
lin back_4_N = variants {mkN "beque" ; mkN "zagueiro" ; } ; --*
lin back_5_N = variants {mkN "column" ; mkN "costas" ; mkN "espinha" ; mkN "espinhaço" ; } ; --*
lin back_5_V2 = mkV2 (mkV "apoiar") ; --*
lin back_6_N = variants {mkN "binding" ; mkN "capa" ; } ; --*
lin back_7_N = mkN "costas" ; --*
lin back_7_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "on") ; } ; --*
lin back_8_N = mkN "espaldar" ; --*
lin back_9_N = variants {mkN "beque" ; mkN "zagueiro" ; } ; --*
lin back_away_V = variants {mkV "away" ; mkV "back" ; mkV "decorrer" ; mkV "in" ; mkV "out" ; } ; --*
lin backbencher_N = mkN "deputado" ; --*
lin backbiter_N = variants {mkN "caluniador" ; mkN "difamador" ; } ; --*
lin backbite_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; } ; --*
lin backbite_V = variants {mkV "dizer" ; mkV "falar" ; } ; --*
lin backboard_1_N = variants {mkN "backboard" ; mkN "tabela" ; } ; --*
lin backbone_1_N = mkN "ponto" ; --*
lin backbone_2_N = variants {mkN "entranhas" ; mkN "vísceras" ; } ; --*
lin backbone_3_N = variants {mkN "column" ; mkN "costas" ; mkN "espinha" ; mkN "espinhaço" ; } ; --*
lin back_breaking_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin backdoor_2_N = variants {mkN "Backdoor" ; mkN "door" ; mkN "entrance" ; } ; --*
lin back_down_N = mkN "retirada" ; --*
lin backerFem_N = mkN "anjo" ; --*
lin backerMasc_N = mkN "anjo" ; --*
lin backfire_2_V = mkV "sair" ; --*
lin backfire_4_N = mkN "bumerangue" ; --*
lin backflow_N = mkN "fluxo" ; --*
lin back_formation_N = mkN "derivação" ; --*
lin backgammon_N = variants {mkN "Gamao" ; mkN "gamão" ; mkN "Gamão" ; } ; --*
lin background_1_N = variants {mkN "experiência" ; mkN "formação" ; mkN "instrução" ; } ; --*
lin background_2_N = variants {mkN "fundo" ; mkN "plano" ; } ; --*
lin background_3_N = variants {mkN "knowledge" ; mkN "segundo" ; } ; --*
lin background_6_N = variants {mkN "âmbito" ; mkN "domínio" ; mkN "esfera" ; } ; --*
lin backing_1_N = variants {mkN "mecenato" ; mkN "proteção" ; } ; --*
lin backing_3_N = variants {mkN "apoio" ; mkN "backing" ; mkN "support" ; } ; --*
lin backlash_1_N = mkN "repercussão" ; --*
lin backlog_1_N = mkN "acúmulo" ; --*
lin backlog_3_N = variants {mkN "acumulação" ; mkN "acúmulo" ; mkN "existências" ; } ; --*
lin backmost_A = mkA "mais" ; --*
lin back_out_of_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "decorrer") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin backpack_N = variants {mkN "alforje" ; mkN "mochila" ; mkN "Mochila" ; mkN "pack" ; } ; --*
lin backsheesh_N = mkN "gorjeta" ; --*
lin backside_1_N = variants {mkN "end" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin backside_2_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin backsliding_N = variants {mkN "quebra" ; mkN "Recidiva" ; } ; --*
lin backspin_N = mkN "Backspin" ; --*
lin backstop_1_N = variants {mkN "apanhador" ; mkN "coletor" ; mkN "receptor" ; } ; --*
lin backstroke_N = mkN "costas" ; --*
lin back_up_1_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "up") ; } ; --*
lin back_up_2_N = variants {mkN "dobro" ; mkN "man" ; } ; --*
lin back_up_3_N = variants {mkN "accompaniment" ; mkN "acompanhamento" ; } ; --*
lin back_up_3_V2 = variants {mkV2 (mkV "suportar") ; mkV2 (mkV "up") ; } ; --*
lin back_up_4_N = variants {mkN "backup" ; mkN "cópia" ; } ; --*
lin back_up_5_N = variants {mkN "mecenato" ; mkN "proteção" ; } ; --*
lin back_up_5_V2 = variants {mkV2 (mkV "entupir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin backward_1_Adv = variants {mkAdv "às" ; mkAdv "de" ; mkAdv "para" ; } ; --*
lin backward_2_Adv = variants {mkAdv "de" ; mkAdv "para" ; } ; --*
lin backward_3_Adv = mkAdv "para" ; --*
lin backwards_1_Adv = variants {mkAdv "às" ; mkAdv "de" ; mkAdv "para" ; } ; --*
lin backwards_2_Adv = variants {mkAdv "de" ; mkAdv "para" ; } ; --*
lin backwash_2_N = mkN "resultado" ; --*
lin backwoods_N = variants {mkN "country" ; mkN "hinterlândia" ; } ; --*
lin backyard_N = mkN "quintal" ; --*
lin bacon_1_N = variants {mkN "bacon" ; mkN "lardo" ; mkN "toicinho" ; mkN "toucinho" ; } ; --*
lin bacon_2_N = variants {mkN "Bacon" ; mkN "Roger" ; } ; --*
lin bacon_3_N = variants {mkN "Bacon" ; mkN "Baron" ; mkN "Francis" ; mkN "St." ; mkN "Verulam" ; } ; --*
lin bacteremia_1_N = variants {mkN "bacteremia" ; mkN "Bacterémia" ; } ; --*
lin bacterial_A = mkA "bacteriano" ; --*
lin bacteria_N = mkN "bactéria" ; --*
lin bactericidal_A = variants {mkA "bactericida" ; mkA "desinfectantes" ; } ; --*
lin bactericide_1_N = mkN "bactericidas" ; --*
lin bactericide_2_N = variants {mkN "Bactericida" ; mkN "drug" ; } ; --*
lin bacteriochlorophyll_N = mkN "bacterioclorofila" ; --*
lin bacteriology_N = mkN "bacteriologia" ; --*
lin bacteriophage_N = variants {mkN "bacteriófago" ; mkN "fago" ; } ; --*
lin bacteriophagic_A = mkA "bacteriofágico" ; --*
lin bacteriostatic_A = mkA "bacteriostático" ; --*
lin bacterium_N = mkN "bactéria" ; --*
lin bad_11_A = mkA "mal" ; --*
lin bad_12_A = variants {mkA "mau" ; mkA "ruim" ; } ; --*
lin bad_13_A = mkA "forjado" ; --*
lin bad_14_A = mkA "defeituoso" ; --*
lin bad_1_A = mkA "ruim" ; --*
lin bad_2_A = mkA "terrível" ; --*
lin bad_4_A = mkA "estragado" ; --*
lin bad_7_A = variants {mkA "mau" ; mkA "ruim" ; } ; --*
lin badge_1_N = variants {mkN "crachá" ; mkN "distintivo" ; mkN "tarja" ; } ; --*
lin badge_2_N = mkN "distintivo" ; --*
lin badger_1_N = mkN "texugo" ; --*
lin badger_1_V2 = variants {mkV2 (mkV "amolar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "incomodar") ; } ; --*
lin badger_2_N = mkN "texugo" ; --*
lin badminton_N = variants {mkN "Badminton" ; mkN "Badmínton" ; } ; --*
lin badness_1_N = mkN "maldade" ; --*
lin badness_2_N = variants {mkN "seriedade" ; mkN "severidade" ; } ; --*
lin badness_3_N = variants {mkN "mal" ; mkN "maldade" ; mkN "travessura" ; } ; --*
lin bad_N = mkN "maldade" ; --*
lin baffle_1_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin baffle_2_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin baffling_A = mkA "frustrante" ; --*
lin bag_1_N = variants {mkN "bolsa" ; mkN "carteira" ; mkN "saco" ; mkN "sacola" ; } ; --*
lin bag_4_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin bag_4_V2 = variants {mkV2 (mkV "embolsar") ; mkV2 (mkV "ensacar") ; mkV2 (mkV "furtar") ; } ; --*
lin bag_4_V = variants {mkV "embolsar" ; mkV "ensacar" ; mkV "furtar" ; } ; --*
lin bag_5_N = mkN "bolsa" ; --*
lin bag_5_V2 = variants {mkV2 (mkV "empacotar") ; mkV2 (mkV "ensacar") ; } ; --*
lin bag_6_N = variants {mkN "bag" ; mkN "mala" ; mkN "valise" ; } ; --*
lin bag_7_N = variants {mkN "bag" ; mkN "estupor" ; } ; --*
lin bag_8_N = variants {mkN "úbere" ; mkN "ubre" ; } ; --*
lin bagasse_N = mkN "bagaço" ; --*
lin bagatelle_2_N = mkN "bagatela" ; --*
lin bagel_1_N = mkN "bagel" ; --*
lin baggage_1_N = variants {mkN "bagagem" ; mkN "Bagagens" ; mkN "embrulho" ; mkN "mala" ; } ; --*
lin baggy_A = mkA "folgado" ; --*
lin baghdad_PN = variants {mkPN "Bagdá" ; mkPN "Bagdad" ; mkPN "Bagdade" ; mkPN "of" ; } ; --*
lin bagnio_1_N = variants {mkN "alcoice" ; mkN "bordel" ; mkN "house" ; mkN "lupanar" ; mkN "of" ; mkN "prostíbulo" ; } ; --*
lin bagpipe_N = variants {mkN "gaita" ; mkN "gaita-de-fole" ; mkN "Gaitas-de-fole" ; } ; --*
lin baguet_1_N = mkN "Baguete" ; --*
lin bahamas_PN = variants {mkPN "Bahamas" ; mkPN "Islands" ; mkPN "of" ; } ; --*
lin bahamian_A = variants {mkA "baamense" ; mkA "baamês" ; mkA "baamiano" ; mkA "bahamense" ; mkA "bahamiano" ; } ; --*
lin bahasa_N = variants {mkN "Indonesia" ; mkN "indonésio" ; } ; --*
lin bahrain_1_PN = variants {mkPN "Bahrein" ; mkPN "Barém" ; mkPN "Island" ; } ; --*
lin bahrain_2_PN = variants {mkPN "Bahrain" ; mkPN "Bahrein" ; mkPN "Barém" ; mkPN "of" ; } ; --*
lin bahraini_A = variants {mkA "bareinita" ; mkA "baremense" ; } ; --*
lin bail_1_N = variants {mkN "bond" ; mkN "caução" ; mkN "fiança" ; } ; --*
lin bail_2_N = mkN "fiança" ; --*
lin bailey_1_N = variants {mkN "Bailey" ; mkN "Mae" ; mkN "Pearl" ; } ; --*
lin bailey_1_PN = variants {mkPN "Bailey" ; mkPN "Mae" ; mkPN "Pearl" ; } ; --*
lin bailiff_N = mkN "meirinho" ; --*
lin bailiwick_1_N = mkN "bailiado" ; --*
lin bailiwick_2_N = variants {mkN "area" ; mkN "campo" ; mkN "disciplina" ; mkN "domínio" ; mkN "field" ; mkN "of" ; mkN "terreno" ; } ; --*
lin bairn_N = mkN "criança" ; --*
lin bait_1_N = variants {mkN "adoçante" ; mkN "chamariz" ; mkN "engodo" ; } ; --*
lin bait_1_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin bait_2_N = variants {mkN "Ardil" ; mkN "isca" ; } ; --*
lin baize_N = mkN "baeta" ; --*
lin bake_1_V2 = variants {mkV2 (mkV "assar") ; mkV2 (mkV "cozer") ; mkV2 (mkV "fornear") ; } ; --*
lin bake_2_V2 = mkV2 (mkV "assar") ; --*
lin bakelite_N = mkN "baquelite" ; --*
lin baker_1_N = variants {mkN "padeiro" ; mkN "pasteleiro" ; } ; --*
lin baker_2_N = variants {mkN "maker" ; mkN "padeiro" ; mkN "Padeiro" ; } ; --*
lin bakery_N = mkN "padaria" ; --*
lin baking_powder_N = mkN "powder" ; --*
lin baklava_N = mkN "baklava" ; --*
lin baksheesh_1_N = mkN "gorjeta" ; --*
lin baku_PN = variants {mkPN "Baku" ; mkPN "of" ; } ; --*
lin balaclava_N = variants {mkN "balaclava" ; mkN "helmet" ; } ; --*
lin balalaika_N = variants {mkN "balalaica" ; mkN "balalaika" ; } ; --*
lin balance_10_N = mkN "contrapeso" ; --*
lin balance_12_N = variants {mkN "balança" ; mkN "escala" ; mkN "prato" ; mkN "válvula" ; } ; --*
lin balance_1_N = mkN "equilíbrio" ; --*
lin balance_1_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "equilibrar") ; } ; --*
lin balance_2_N = mkN "balanço" ; --*
lin balance_3_N = variants {mkN "equilíbrio" ; mkN "proporção" ; } ; --*
lin balance_3_V2 = mkV2 (mkV "equilibrar") ; --*
lin balance_3_V = mkV "equilibrar" ; --*
lin balance_4_N = variants {mkN "contrapeso" ; mkN "equilíbrio" ; } ; --*
lin balance_4_V = mkV "equilibrar-se" ; --*
lin balance_5_N = variants {mkN "excedente" ; mkN "resíduo" ; mkN "resto" ; mkN "sobra" ; mkN "tudomais" ; } ; --*
lin balance_6_N = mkN "saldo" ; --*
lin balance_8_N = variants {mkN "Balança" ; mkN "Libra" ; mkN "the" ; } ; --*
lin balance_9_N = mkN "simetria" ; --*
lin balanced_A = variants {mkA "balanceado" ; mkA "equilibrado" ; } ; --*
lin balancer_1_N = mkN "equilibrista" ; --*
lin balance_sheet_N = mkN "sheet" ; --*
lin balanitis_N = mkN "balanite" ; --*
lin balata_1_N = mkN "balata" ; --*
lin balboa_2_N = variants {mkN "Nunez" ; mkN "Vasco" ; } ; --*
lin balcony_1_N = variants {mkN "sacada" ; mkN "varanda" ; } ; --*
lin balcony_2_N = variants {mkN "balcão" ; mkN "sacada" ; mkN "varanda" ; mkN "Varanda" ; } ; --*
lin bald_2_A = variants {mkA "calvo" ; mkA "careca" ; } ; --*
lin baldachin_N = variants {mkN "baldaquim" ; mkN "Baldaquino" ; mkN "dossel" ; mkN "pálio" ; } ; --*
lin balderdash_N = mkN "conversa" ; --*
lin balding_A = mkA "calvejante" ; --*
lin baldness_N = variants {mkN "calvice" ; mkN "calvície" ; } ; --*
lin bale_2_N = variants {mkN "Basileia" ; mkN "Basiléia" ; } ; --*
lin baleful_2_A = variants {mkA "ameaçador" ; mkA "ominoso" ; } ; --*
lin bale_V2 = mkV2 (mkV "enfardar") ; --*
lin balk_2_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin balk_3_N = mkN "trave" ; --*
lin balk_V2 = mkV2 (mkV "resistir") ; --*
lin balk_V = mkV "resistir" ; --*
lin ball_11_N = variants {mkN "basebol" ; mkN "game" ; } ; --*
lin ball_1_N = mkN "bola" ; --*
lin ball_3_N = variants {mkN "bola" ; mkN "esfera" ; mkN "orbe" ; } ; --*
lin ball_4_N = mkN "baile" ; --*
lin ball_5_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin ball_6_N = mkN "bola" ; --*
lin ball_8_N = variants {mkN "bola" ; mkN "grupo" ; mkN "torrão" ; } ; --*
lin ball_9_N = mkN "baile" ; --*
lin ballad_1_N = mkN "balada" ; --*
lin ballad_2_N = variants {mkN "balada" ; mkN "Baladas" ; } ; --*
lin ballade_1_N = variants {mkN "balada" ; mkN "xácara" ; } ; --*
lin ballade_2_N = mkN "balada" ; --*
lin ballade_3_N = variants {mkN "balada" ; mkN "Baladas" ; } ; --*
lin ballast_1_N = variants {mkN "balastro" ; mkN "estiva" ; mkN "lastro" ; } ; --*
lin ballast_2_N = mkN "balastro" ; --*
lin ballerina_N = variants {mkN "bailarina" ; mkN "Ballerina" ; } ; --*
lin ballet_1_N = variants {mkN "balé" ; mkN "dance" ; } ; --*
lin ballet_2_N = variants {mkN "Bale" ; mkN "balé" ; mkN "Balê" ; mkN "Ballet" ; } ; --*
lin ballet_dancer_N = mkN "dancer" ; --*
lin ballistic_A = mkA "balístico" ; --*
lin ballistics_1_N = variants {mkN "balística" ; mkN "trajectory" ; } ; --*
lin ballistics_2_N = variants {mkN "balística" ; mkN "Balística" ; } ; --*
lin ballock_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin balloon_1_N = variants {mkN "aeróstato" ; mkN "balão" ; } ; --*
lin balloon_2_N = variants {mkN "balão" ; mkN "bola" ; } ; --*
lin balloon_2_V = mkV "inchar" ; --*
lin ballot_1_N = variants {mkN "boletim" ; mkN "cédula" ; } ; --*
lin ballot_2_N = variants {mkN "eleição" ; mkN "votação" ; mkN "voto" ; } ; --*
lin ballot_box_N = mkN "box" ; --*
lin ballot_V = mkV "votar" ; --*
lin ballpen_N = variants {mkN "canetaesferográfica" ; mkN "pen" ; } ; --*
lin ballplayer_N = variants {mkN "Jogadores" ; mkN "player" ; } ; --*
lin ball_PN = variants {mkPN "Ball" ; mkPN "Lucille" ; } ; --*
lin ballpoint_N = variants {mkN "canetaesferográfica" ; mkN "pen" ; } ; --*
lin ballpoint_pen_N = variants {mkN "canetaesferográfica" ; mkN "pen" ; } ; --*
lin ballroom_N = variants {mkN "hall" ; mkN "palace" ; mkN "salão" ; } ; --*
lin bally_A = variants {mkA "maldito" ; mkA "puto" ; } ; --*
lin ballyhoo_N = variants {mkN "falatório" ; mkN "modismo" ; mkN "tititi" ; } ; --*
lin balm_1_N = mkN "bálsamo" ; --*
lin balm_2_N = variants {mkN "pomada" ; mkN "reboco" ; mkN "ungüento" ; } ; --*
lin balmy_1_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin baloney_N = mkN "mexerico" ; --*
lin balsam_1_N = mkN "balsâmina" ; --*
lin balsam_2_N = mkN "ungüento" ; --*
lin balsam_3_N = mkN "ungüento" ; --*
lin baltimore_PN = variants {mkPN "Baltimore" ; mkPN "Maryland" ; } ; --*
lin baluster_N = variants {mkN "Balaustre" ; mkN "balaústre" ; } ; --*
lin balustrade_N = mkN "balaustrada" ; --*
lin bamboo_1_N = variants {mkN "bambu" ; mkN "cana-brava" ; mkN "taboca" ; mkN "taquara" ; } ; --*
lin bamboo_2_N = variants {mkN "bambu" ; mkN "Bambu" ; } ; --*
lin bamboozle_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "enganar") ; mkV2 (mkV "false") ; mkV2 (mkV "the") ; } ; --*
lin ban_1_N = variants {mkN "interdição" ; mkN "proibição" ; mkN "proibições" ; } ; --*
lin ban_1_V2 = mkV2 (mkV "proibir") ; --*
lin ban_2_V2 = mkV2 (mkV "proibir") ; --*
lin ban_3_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "expulsar") ; } ; --*
lin ban_4_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "ostracizar") ; mkV2 (mkV "out") ; } ; --*
lin banal_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin banality_N = variants {mkN "banalidade" ; mkN "chavão" ; mkN "cliché" ; mkN "trivialidade" ; mkN "vulgaridade" ; } ; --*
lin banana_1_N = variants {mkN "banana" ; mkN "tree" ; } ; --*
lin banana_2_N = variants {mkN "banana" ; mkN "bananeira" ; } ; --*
lin band_11_N = variants {mkN "banda" ; mkN "cinta" ; } ; --*
lin band_1_N = variants {mkN "círculo" ; mkN "grupo" ; mkN "ordem" ; } ; --*
lin band_2_N = variants {mkN "banda" ; mkN "grupo" ; mkN "Grupos" ; } ; --*
lin band_2_V2 = variants {mkV2 (mkV "anilhar") ; mkV2 (mkV "etiquetar") ; } ; --*
lin band_3_N = mkN "estria" ; --*
lin band_4_N = variants {mkN "banda" ; mkN "faixa" ; } ; --*
lin band_6_N = mkN "banda" ; --*
lin band_7_N = mkN "faixa" ; --*
lin band_9_N = variants {mkN "aliança" ; mkN "anel" ; mkN "Anel" ; } ; --*
lin bandage_1_V2 = mkV2 (mkV "atar") ; --*
lin bandage_2_V2 = mkV2 (mkV "enfaixar") ; --*
lin bandage_N = variants {mkN "atadura" ; mkN "esparadrapo" ; mkN "ligadura" ; mkN "penso" ; } ; --*
lin bandeau_N = variants {mkN "porta-seios" ; mkN "sutiã" ; } ; --*
lin bandit_N = variants {mkN "bandido" ; mkN "bandoleiro" ; mkN "cangaceiro" ; mkN "facínora" ; mkN "ladrão" ; } ; --*
lin bandstand_N = variants {mkN "coreto" ; mkN "stage" ; } ; --*
lin bandung_PN = mkPN "Bandung" ; --*
lin bandwidth_N = variants {mkN "lardura" ; mkN "largura" ; mkN "Largura" ; } ; --*
lin baneful_1_A = variants {mkA "perniciosa" ; mkA "pernicioso" ; } ; --*
lin bane_N = variants {mkN "arquiinimigo" ; mkN "calamidade" ; mkN "desgraça" ; mkN "Deusa" ; mkN "nêmese" ; } ; --*
lin bang_1_V2 = mkV2 (mkV "bater") ; --*
lin bang_2_N = variants {mkN "baterpalmas" ; mkN "explosão" ; } ; --*
lin bang_3_N = mkN "franja" ; --*
lin bang_3_V2 = mkV2 (mkV "bater") ; --*
lin bang_4_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin bang_5_N = variants {mkN "estrondo" ; mkN "sensação" ; mkN "sucesso" ; } ; --*
lin bang_5_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin bang_7_V2 = variants {mkV2 (mkV "socar") ; mkV2 (mkV "surrar") ; } ; --*
lin bangalore_PN = mkPN "Bangalore" ; --*
lin banger_2_N = variants {mkN "panchão" ; mkN "Panchão" ; } ; --*
lin bangkok_PN = variants {mkPN "Bancoc" ; mkPN "of" ; mkPN "Thep" ; } ; --*
lin bangladeshi_A = variants {mkA "bangladechiano" ; mkA "bangladense" ; mkA "bangladês" ; mkA "bangladexiano" ; mkA "Pakistani" ; } ; --*
lin bangladesh_PN = variants {mkPN "Bangladesh" ; mkPN "Desh" ; mkPN "Pakistan" ; mkPN "Republic" ; } ; --*
lin bangle_1_N = variants {mkN "bracelete" ; mkN "Bracelete" ; mkN "pulseira" ; } ; --*
lin bangor_1_PN = mkPN "Bangor" ; --*
lin bang_up_1_V2 = variants {mkV2 (mkV "falir") ; mkV2 (mkV "up") ; } ; --*
lin bang_up_2_V2 = variants {mkV2 (mkV "emprenhar") ; mkV2 (mkV "up") ; } ; --*
lin banish_1_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "ostracizar") ; mkV2 (mkV "out") ; } ; --*
lin banish_2_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "expulsar") ; } ; --*
lin banish_3_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "exilar") ; mkV2 (mkV "expulsar") ; } ; --*
lin banish_4_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "espantar") ; } ; --*
lin banishment_1_N = variants {mkN "banimento" ; mkN "desterro" ; mkN "ostracismo" ; } ; --*
lin banishment_2_N = variants {mkN "banimento" ; mkN "proscrição" ; } ; --*
lin banister_N = mkN "balaustrada" ; --*
lin banjo_N = variants {mkN "banjo" ; mkN "Banjo" ; } ; --*
lin bank_1_N = variants {mkN "costa" ; mkN "margem" ; } ; --*
lin bank_2_N = variants {mkN "banco" ; mkN "company" ; mkN "concern" ; mkN "financial" ; } ; --*
lin bank_6_V2 = mkV2 (mkV "depositar") ; --*
lin bank_8_N = variants {mkN "bank" ; mkN "box" ; mkN "caixa" ; } ; --*
lin bank_9_N = variants {mkN "banco" ; mkN "building" ; } ; --*
lin bank_bill_N = variants {mkN "bill" ; mkN "cédula" ; mkN "nota" ; mkN "note" ; mkN "Reserve" ; } ; --*
lin banker_1_N = mkN "banqueiro" ; --*
lin banker_2_N = mkN "banqueiro" ; --*
lin banking_2_N = mkN "banca" ; --*
lin banknote_N = variants {mkN "bill" ; mkN "cédula" ; mkN "nota" ; mkN "note" ; mkN "Reserve" ; } ; --*
lin bank_on_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin bankroll_N = mkN "meios" ; --*
lin bankrupt_A = variants {mkA "falido" ; mkA "quebrado" ; } ; --*
lin bankruptcy_2_N = variants {mkN "bancarrota" ; mkN "falência" ; } ; --*
lin bankruptcy_3_N = variants {mkN "bancarrota" ; mkN "falência" ; } ; --*
lin bankrupt_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "falir") ; mkV2 (mkV "quebrar") ; } ; --*
lin banner_1_N = variants {mkN "bandeira" ; mkN "estandarte" ; } ; --*
lin banner_3_N = mkN "estandarte" ; --*
lin bannister_2_N = mkN "balaustrada" ; --*
lin banquet_1_N = variants {mkN "banquete" ; mkN "festa" ; } ; --*
lin banquet_2_N = variants {mkN "ágape" ; mkN "banquete" ; mkN "comerembanquete" ; } ; --*
lin banshee_1_N = variants {mkN "banshee" ; mkN "Banshee" ; } ; --*
lin bantam_A = variants {mkA "diminuto" ; mkA "minúsculo" ; mkA "nanico" ; mkA "pequeno" ; } ; --*
lin banteng_N = variants {mkN "banteng" ; mkN "Bos" ; } ; --*
lin banter_V2 = variants {mkV2 (mkV "bulir") ; mkV2 (mkV "caçoar") ; } ; --*
lin banter_V = variants {mkV "bulir" ; mkV "caçoar" ; } ; --*
lin banting_2_N = variants {mkN "banteng" ; mkN "Bos" ; } ; --*
lin bantu_1_N = mkN "bantos" ; --*
lin bantu_2_N = variants {mkN "language" ; mkN "línguas" ; } ; --*
lin bantu_A = variants {mkA "banto" ; mkA "bantu" ; } ; --*
lin banyan_2_N = mkN "figueira-da-índia" ; --*
lin baobab_N = variants {mkN "baobá" ; mkN "baobabe" ; mkN "digitata" ; mkN "tree" ; } ; --*
lin bap_N = mkN "pãozinho" ; --*
lin baptism_N = mkN "batismo" ; --*
lin baptist_N = variants {mkN "Baptista" ; mkN "Batistas" ; mkN "Igreja" ; } ; --*
lin baptize_1_V2 = variants {mkV2 (mkV "baptizar") ; mkV2 (mkV "batizar") ; } ; --*
lin bar_10_N = variants {mkN "listra" ; mkN "risco" ; } ; --*
lin bar_13_N = mkN "barra" ; --*
lin bar_1_N = mkN "bar" ; --*
lin bar_1_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "proibir") ; } ; --*
lin bar_2_N = variants {mkN "bar" ; mkN "lanchonete" ; } ; --*
lin bar_2_V2 = variants {mkV2 (mkV "barricar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "interditar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin bar_3_N = mkN "barra" ; --*
lin bar_3_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "exilar") ; mkV2 (mkV "expulsar") ; } ; --*
lin bar_4_N = variants {mkN "medição" ; mkN "Metrologia" ; } ; --*
lin bar_5_N = mkN "barra" ; --*
lin bar_6_N = mkN "prevenção" ; --*
lin bar_7_N = mkN "bar" ; --*
lin bar_9_N = variants {mkN "community" ; mkN "judiciário" ; mkN "profession" ; } ; --*
lin barbadian_A = mkA "barbadiano" ; --*
lin barbados_1_PN = mkPN "Barbados" ; --*
lin barbados_2_PN = mkPN "Barbados" ; --*
lin barbarian_1_N = variants {mkN "bárbaro" ; mkN "bárbaros" ; mkN "selvagem" ; } ; --*
lin barbarian_2_N = mkN "indivíduo" ; --*
lin barbarian_A = variants {mkA "bárbaro" ; mkA "bravio" ; mkA "gentio" ; mkA "selvagem" ; } ; --*
lin barbaric_1_A = variants {mkA "bárbaro" ; mkA "bravio" ; mkA "gentio" ; mkA "selvagem" ; } ; --*
lin barbarism_N = variants {mkN "actodebárbaro" ; mkN "barbárie" ; mkN "barbarismo" ; } ; --*
lin barbarity_1_N = variants {mkN "atrocidade" ; mkN "barbaria" ; mkN "barbaridade" ; } ; --*
lin barbarity_2_N = variants {mkN "actodebárbaro" ; mkN "barbárie" ; mkN "barbarismo" ; } ; --*
lin barbarous_1_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin barbecue_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "grelhar") ; mkV2 (mkV "out") ; } ; --*
lin barbecue_2_N = mkN "braai" ; --*
lin barbecue_3_N = variants {mkN "churrasco" ; mkN "churrasqueira" ; } ; --*
lin barbed_2_A = variants {mkA "espinhento" ; mkA "espinhoso" ; mkA "farpado" ; } ; --*
lin barbell_N = mkN "haltere" ; --*
lin barbel_N = mkN "barbo" ; --*
lin barber_1_N = variants {mkN "Barber" ; mkN "Samuel" ; } ; --*
lin barber_2_N = variants {mkN "barbeiro" ; mkN "cabeleireiro" ; mkN "Cabeleireiro" ; mkN "Cabeleireiros" ; } ; --*
lin barberry_N = variants {mkN "bérberis" ; mkN "uva-espim" ; } ; --*
lin barbershop_N = mkN "barbearia" ; --*
lin barbette_N = mkN "barbeta" ; --*
lin barbican_1_N = mkN "barbacã" ; --*
lin barbital_N = variants {mkN "acid" ; mkN "veronal" ; } ; --*
lin barbitone_N = variants {mkN "acid" ; mkN "veronal" ; } ; --*
lin barbiturate_N = variants {mkN "Barbiturico" ; mkN "barbitúrico" ; mkN "Barbitúricos" ; } ; --*
lin barcarole_N = mkN "Barcarola" ; --*
lin barcarolle_N = mkN "Barcarola" ; --*
lin barcelona_PN = mkPN "Barcelona" ; --*
lin bard_1_N = variants {mkN "bardo" ; mkN "poeta" ; } ; --*
lin bare_11_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin bare_1_A = variants {mkA "despido" ; mkA "naturel" ; mkA "nu" ; mkA "pelado" ; } ; --*
lin bare_3_V2 = mkV2 (mkV "desnudar") ; --*
lin bare_8_A = variants {mkA "árido" ; mkA "desolado" ; mkA "estéril" ; } ; --*
lin barefaced_2_A = mkA "insolente" ; --*
lin barefoot_A = variants {mkA "descalça" ; mkA "descalço" ; } ; --*
lin barefoot_Adv = mkAdv "descalço" ; --*
lin barefooted_A = variants {mkA "descalça" ; mkA "descalço" ; } ; --*
lin barefooted_Adv = mkAdv "descalço" ; --*
lin bareheaded_A = mkA "em" ; --*
lin barely_1_Adv = variants {mkAdv "dificilmente" ; mkAdv "logo" ; mkAdv "quase" ; } ; --*
lin barely_2_Adv = variants {mkAdv "apenas" ; mkAdv "dificilmente" ; } ; --*
lin bareness_1_N = mkN "desolação" ; --*
lin bargain_1_N = mkN "pacto" ; --*
lin bargain_1_V = variants {mkV "pechinchar" ; mkV "regatear" ; } ; --*
lin bargainer_1_N = variants {mkN "comerciante" ; mkN "mercador" ; mkN "negociante" ; } ; --*
lin bargain_for_V2 = variants {mkV2 (mkV "pechinchar") ; mkV2 (mkV "regatear") ; } ; --*
lin bargaining_N = mkN "Regateio" ; --*
lin barge_in_1_V = variants {mkV "in" ; mkV "penetrar" ; } ; --*
lin barge_N = variants {mkN "barca" ; mkN "barcaça" ; mkN "bateira" ; } ; --*
lin baric_A = mkA "bárico" ; --*
lin bari_PN = mkPN "Bari" ; --*
lin baritone_1_N = mkN "barítono" ; --*
lin baritone_2_N = variants {mkN "barítono" ; mkN "Barítono" ; mkN "voice" ; } ; --*
lin baritone_3_N = variants {mkN "barítono" ; mkN "horn" ; } ; --*
lin barium_N = variants {mkN "Bario" ; mkN "bário" ; mkN "number" ; } ; --*
lin bark_1_N = variants {mkN "casca" ; mkN "súber" ; } ; --*
lin bark_1_V = variants {mkV "bradar" ; mkV "ladrar" ; mkV "vociferar" ; } ; --*
lin bark_2_N = mkN "latido" ; --*
lin bark_3_V2 = mkV2 (mkV "descascar") ; --*
lin bark_3_V = mkV "descascar" ; --*
lin bark_4_N = mkN "ladrido" ; --*
lin bark_4_V = variants {mkV "ladrar" ; mkV "latir" ; } ; --*
lin bark_5_V2 = mkV2 (mkV "curtir") ; --*
lin bark_5_V = mkV "curtir" ; --*
lin barley_1_N = mkN "cevada" ; --*
lin barley_2_N = mkN "cevada" ; --*
lin barleycorn_2_N = mkN "cevada" ; --*
lin barmaid_N = mkN "empregado" ; --*
lin barman_N = variants {mkN "barman" ; mkN "bárman" ; mkN "empregado" ; } ; --*
lin barm_N = variants {mkN "fermento" ; mkN "levedura" ; } ; --*
lin barmy_2_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin barn_1_N = variants {mkN "barn" ; mkN "celeiro" ; mkN "guarita" ; } ; --*
lin barn_2_N = mkN "barn" ; --*
lin barnacle_1_N = mkN "percebe" ; --*
lin barnstormer_1_N = mkN "ator" ; --*
lin barograph_N = variants {mkN "barógrafo" ; mkN "Barógrafo" ; } ; --*
lin barometer_N = variants {mkN "barómetro" ; mkN "barômetro" ; mkN "Barômetro" ; } ; --*
lin barometric_1_A = mkA "barométrico" ; --*
lin baron_1_N = mkN "barão" ; --*
lin baron_2_N = variants {mkN "barão" ; mkN "Barão" ; } ; --*
lin baron_3_N = variants {mkN "businessman" ; mkN "executive" ; mkN "leader" ; mkN "magnata" ; } ; --*
lin baronage_N = variants {mkN "nobreza" ; mkN "pariato" ; mkN "Pariato" ; } ; --*
lin baroness_N = mkN "baronesa" ; --*
lin baronial_A = variants {mkA "impo" ; mkA "nobre" ; } ; --*
lin barony_1_N = variants {mkN "baronato" ; mkN "baronia" ; } ; --*
lin baroque_1_A = mkA "barroco" ; --*
lin baroque_1_N = variants {mkN "Barroco" ; mkN "era" ; mkN "period" ; } ; --*
lin baroque_2_N = mkN "barroco" ; --*
lin barouche_N = variants {mkN "Caleche" ; mkN "carruagem" ; } ; --*
lin barrack_2_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin barrack_3_V = variants {mkV "vaiar" ; mkV "zombar" ; } ; --*
lin barracuda_N = variants {mkN "barracuda" ; mkN "Sphyraenidae" ; } ; --*
lin barrage_N = variants {mkN "bombardeio" ; mkN "fire" ; } ; --*
lin barrage_of_N2 = mkN2 (mkN "barragem") noPrep ; --*
lin barranquilla_PN = mkPN "Barranquilla" ; --*
lin barratry_1_N = mkN "simonia" ; --*
lin barrel_1_N = variants {mkN "barrel" ; mkN "tubo" ; } ; --*
lin barrel_2_N = variants {mkN "barril" ; mkN "Barril" ; } ; --*
lin barrel_3_N = mkN "tambor" ; --*
lin barrel_5_N = variants {mkN "barril" ; mkN "Barril" ; } ; --*
lin barren_1_A = variants {mkA "árido" ; mkA "desolado" ; mkA "estéril" ; } ; --*
lin barren_2_A = variants {mkA "estéril" ; mkA "infértil" ; } ; --*
lin barren_3_A = mkA "destituído" ; --*
lin barren_N = variants {mkN "baldio" ; mkN "deserto" ; } ; --*
lin barrenness_2_N = mkN "aridez" ; --*
lin barrette_N = mkN "pino" ; --*
lin barricade_1_N = mkN "barricada" ; --*
lin barricade_1_V2 = variants {mkV2 (mkV "barricar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "interditar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin barricade_2_N = variants {mkN "barricada" ; mkN "Barricada" ; } ; --*
lin barricade_3_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "fazer") ; } ; --*
lin barrier_1_N = variants {mkN "barreira" ; mkN "obstáculo" ; } ; --*
lin barrier_2_N = variants {mkN "barreira" ; mkN "obstáculo" ; } ; --*
lin barrier_3_N = mkN "barreira" ; --*
lin barrister_N = variants {mkN "advogado" ; mkN "Advogados" ; mkN "barrister" ; } ; --*
lin barroom_N = mkN "bar" ; --*
lin barrow_2_N = variants {mkN "mamoa" ; mkN "Mâmoa" ; mkN "mound" ; } ; --*
lin barrow_3_N = variants {mkN "carrinho" ; mkN "cart" ; } ; --*
lin bartender_N = variants {mkN "barman" ; mkN "bárman" ; mkN "empregado" ; } ; --*
lin barter_N = variants {mkN "permuta" ; mkN "troca" ; } ; --*
lin barter_V2 = variants {mkV2 (mkV "cambiar") ; mkV2 (mkV "trocar") ; } ; --*
lin barter_V = variants {mkV "cambiar" ; mkV "trocar" ; } ; --*
lin barye_N = variants {mkN "absolute" ; mkN "baria" ; } ; --*
lin baryon_N = variants {mkN "Barion" ; mkN "bárion" ; mkN "Bárions" ; mkN "particle" ; } ; --*
lin basal_1_A = mkA "basal" ; --*
lin basal_2_A = variants {mkA "elementar" ; mkA "rudimentar" ; } ; --*
lin basalt_N = mkN "basalto" ; --*
lin base_10_N = variants {mkN "álcali" ; mkN "base" ; mkN "bases" ; mkN "Bases" ; } ; --*
lin base_11_N = mkN "base" ; --*
lin base_13_N = mkN "base" ; --*
lin base_14_N = mkN "base" ; --*
lin base_15_N = variants {mkN "Al-Qaeda" ; mkN "Al-Qaida" ; } ; --*
lin base_16_N = variants {mkN "radical" ; mkN "Radical" ; mkN "raiz" ; mkN "word" ; } ; --*
lin base_17_N = variants {mkN "infraestructura" ; mkN "infraestrutura" ; mkN "infra-estrutura" ; } ; --*
lin base_19_N = mkN "base" ; --*
lin base_1_N = variants {mkN "base" ; mkN "of" ; } ; --*
lin base_1_V2 = variants {mkV2 (mkV "basear") ; mkV2 (mkV "fundamentar") ; } ; --*
lin base_2_N = variants {mkN "alicerce" ; mkN "base" ; mkN "pé" ; } ; --*
lin base_4_A = mkA "mau" ; --*
lin base_7_N = variants {mkN "base" ; mkN "fundação" ; } ; --*
lin base_8_N = mkN "pé" ; --*
lin base_9_N = variants {mkN "nucleotídeo" ; mkN "Nucleótido" ; mkN "Nucleótidos" ; } ; --*
lin baseball_1_N = variants {mkN "basebol" ; mkN "game" ; } ; --*
lin baseball_2_N = variants {mkN "basebol" ; mkN "beisebol" ; } ; --*
lin baseboard_N = variants {mkN "board" ; mkN "Roda" ; mkN "Rodapé" ; } ; --*
lin baseless_A = variants {mkA "infundado" ; mkA "não" ; mkA "sem" ; mkA "sembase" ; mkA "semfundamento" ; } ; --*
lin baseline_1_N = mkN "linha" ; --*
lin basel_PN = variants {mkPN "Basileia" ; mkPN "Basiléia" ; } ; --*
lin basement_1_N = variants {mkN "cave" ; mkN "porão" ; } ; --*
lin basenji_N = mkN "Basenji" ; --*
lin bash_2_N = mkN "festa" ; --*
lin bashful_1_A = mkA "tímida" ; --*
lin bashful_2_A = variants {mkA "recatado" ; mkA "tímido" ; } ; --*
lin bash_V2 = variants {mkV2 (mkV "socar") ; mkV2 (mkV "surrar") ; } ; --*
lin basic_1_A = mkA "basilar" ; --*
lin basic_1_N = variants {mkN "Basic" ; mkN "BASIC" ; } ; --*
lin basic_2_A = mkA "canônico" ; --*
lin basically_Adv = variants {mkAdv "basicamente" ; mkAdv "em" ; mkAdv "essencialmente" ; mkAdv "fundamentalmente" ; } ; --*
lin basics_1_N = mkN "rudimentos" ; --*
lin basics_2_N = variants {mkN "abc" ; mkN "abecê" ; mkN "á-bê-cê" ; mkN "principle" ; } ; --*
lin basidiomycete_N = variants {mkN "basidiomicetos" ; mkN "fungi" ; } ; --*
lin basidiospore_N = mkN "basidiósporo" ; --*
lin basidium_N = mkN "basídio" ; --*
lin basil_1_N = variants {mkN "alfavaca" ; mkN "basílico" ; } ; --*
lin basil_3_N = variants {mkN "alfavaca" ; mkN "Alfavaca" ; mkN "basil" ; mkN "basílico" ; } ; --*
lin basilica_1_N = mkN "basílica" ; --*
lin basilica_2_N = variants {mkN "basilica" ; mkN "basílica" ; } ; --*
lin basilisk_1_N = mkN "basilisco" ; --*
lin basilisk_2_N = mkN "basilisco" ; --*
lin basil_PN = variants {mkPN "Basil" ; mkPN "Basílio" ; mkPN "of" ; mkPN "the" ; } ; --*
lin basin_1_N = variants {mkN "pia" ; mkN "tigela" ; } ; --*
lin basin_2_N = mkN "tigela" ; --*
lin basin_4_N = variants {mkN "albufeira" ; mkN "area" ; mkN "bacia" ; mkN "basin" ; } ; --*
lin basin_5_N = variants {mkN "lavabo" ; mkN "pia" ; } ; --*
lin basis_1_N = mkN "base" ; --*
lin basis_2_N = variants {mkN "base" ; mkN "fundação" ; } ; --*
lin bask_1_V = variants {mkV "agradar-se" ; mkV "saborear" ; } ; --*
lin basket_1_N = variants {mkN "cesta" ; mkN "cesto" ; } ; --*
lin basket_2_N = variants {mkN "cesto" ; mkN "Cesto" ; } ; --*
lin basket_3_N = variants {mkN "aro" ; mkN "hoop" ; } ; --*
lin basket_4_N = variants {mkN "cesta" ; mkN "goal" ; } ; --*
lin basketball_1_N = variants {mkN "basquete" ; mkN "basquetebol" ; mkN "bola-ao-cesto" ; mkN "game" ; } ; --*
lin basketball_2_N = mkN "basquetebol" ; --*
lin basophilic_A = mkA "basofílico" ; --*
lin bas_relief_N = variants {mkN "relief" ; mkN "relievo" ; mkN "rilievo" ; } ; --*
lin bass_1_N = mkN "baixo" ; --*
lin bass_5_N = variants {mkN "bass" ; mkN "robalo" ; } ; --*
lin bass_6_N = variants {mkN "baixo" ; mkN "Baixo" ; mkN "voice" ; } ; --*
lin bass_7_N = variants {mkN "baixo" ; mkN "Baixo" ; } ; --*
lin bassarisk_N = variants {mkN "astutus" ; mkN "bassarisco" ; mkN "cat" ; mkN "fox" ; } ; --*
lin bassist_N = variants {mkN "baixista" ; mkN "Baixistas" ; } ; --*
lin bassoon_N = variants {mkN "baixo" ; mkN "fagote" ; } ; --*
lin basswood_1_N = mkN "tilia" ; --*
lin basswood_2_N = variants {mkN "til" ; mkN "tília" ; mkN "tree" ; } ; --*
lin bast_1_N = variants {mkN "fiber" ; mkN "liber" ; } ; --*
lin bast_2_N = mkN "floema" ; --*
lin bast_3_N = mkN "Bastet" ; --*
lin bastard_1_N = variants {mkN "filha" ; mkN "filho" ; mkN "fucker" ; mkN "of" ; } ; --*
lin bastard_2_N = variants {mkN "bastardo" ; mkN "child" ; } ; --*
lin bastardize_1_V2 = mkV2 (mkV "abastardar") ; --*
lin bastardize_2_V2 = mkV2 (mkV "abastardar") ; --*
lin bastardy_N = variants {mkN "bastardia" ; mkN "sinister" ; } ; --*
lin bastille_1_N = mkN "Bastilha" ; --*
lin bastille_2_N = variants {mkN "cadeia" ; mkN "prisão" ; } ; --*
lin bastinado_1_N = mkN "cacete" ; --*
lin bastion_1_N = mkN "bastião" ; --*
lin bastion_2_N = variants {mkN "baluarte" ; mkN "bastião" ; mkN "cidadela" ; } ; --*
lin bastion_3_N = variants {mkN "baluarte" ; mkN "bastião" ; } ; --*
lin bastioned_A = mkA "fortificado" ; --*
lin bat_1_N = variants {mkN "morcego" ; mkN "Morcegos" ; mkN "quirópteros" ; } ; --*
lin bat_1_V2 = mkV2 (mkV "bater") ; --*
lin bat_5_N = variants {mkN "bastão" ; mkN "taco" ; } ; --*
lin bat_5_V2 = mkV2 (mkV "destruir") ; --*
lin batch_1_N = variants {mkN "fornada" ; mkN "lote" ; } ; --*
lin batch_3_N = mkN "grupo" ; --*
lin batch_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin bath_1_N = variants {mkN "banheira" ; mkN "banho" ; } ; --*
lin bath_2_N = mkN "banho" ; --*
lin bathe_1_V = variants {mkV "banhar-se" ; mkV "tomar" ; } ; --*
lin bathe_2_V2 = mkV2 (mkV "envolver") ; --*
lin bathe_N = mkN "banhe" ; --*
lin bather_1_N = variants {mkN "Nadador" ; mkN "Nadadores" ; } ; --*
lin bathetic_A = mkA "sentimental" ; --*
lin bathing_2_N = variants {mkN "ablução" ; mkN "banho" ; } ; --*
lin bathing_costume_N = variants {mkN "costume" ; mkN "fatodebanho" ; mkN "roupadebanho" ; mkN "suit" ; } ; --*
lin bathing_suit_N = variants {mkN "costume" ; mkN "fatodebanho" ; mkN "roupadebanho" ; mkN "suit" ; } ; --*
lin bathos_3_N = mkN "anticlímax" ; --*
lin bath_PN = variants {mkPN "Bath" ; mkPN "Somerset" ; } ; --*
lin bathrobe_N = mkN "roupão" ; --*
lin bathroom_1_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "quarto" ; mkN "sala" ; } ; --*
lin bathroom_2_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin bathtub_N = variants {mkN "banheira" ; mkN "tub" ; } ; --*
lin bathymetry_N = mkN "batimetria" ; --*
lin bathyscaphe_1_N = mkN "batiscafo" ; --*
lin batik_N = mkN "batik" ; --*
lin batiste_N = variants {mkN "batista" ; mkN "cambraia" ; } ; --*
lin baton_1_N = variants {mkN "bordão" ; mkN "pau" ; } ; --*
lin baton_2_N = variants {mkN "cassetete" ; mkN "club" ; mkN "porrete" ; } ; --*
lin baton_5_N = variants {mkN "bastão" ; mkN "testemunho" ; } ; --*
lin bats_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin batsman_N = mkN "batedor" ; --*
lin battalion_1_N = mkN "batalhão" ; --*
lin battalion_2_N = variants {mkN "batalhão" ; mkN "montão" ; mkN "multidão" ; mkN "number" ; mkN "pilha" ; } ; --*
lin batter_1_N = mkN "batedor" ; --*
lin batter_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "arrombar") ; mkV2 (mkV "golpear") ; } ; --*
lin batter_2_N = mkN "polme" ; --*
lin battery_2_N = variants {mkN "acumuladores" ; mkN "bateria" ; mkN "battery" ; mkN "pilha" ; mkN "pilhas" ; } ; --*
lin battery_6_N = variants {mkN "bombardeio" ; mkN "fire" ; } ; --*
lin battery_7_N = variants {mkN "and" ; mkN "assalto" ; } ; --*
lin battle_1_N = variants {mkN "batalha" ; mkN "combate" ; mkN "luta" ; } ; --*
lin battle_2_N = variants {mkN "batalha" ; mkN "luta" ; } ; --*
lin battle_3_N = variants {mkN "conflito" ; mkN "luta" ; } ; --*
lin battle_cruiser_N = mkN "cruiser" ; --*
lin battlefield_N = variants {mkN "campo" ; mkN "of" ; } ; --*
lin battlefront_N = variants {mkN "fronte" ; mkN "line" ; mkN "Linha" ; } ; --*
lin battleful_A = mkA "belicoso" ; --*
lin battleground_N = variants {mkN "campo" ; mkN "of" ; } ; --*
lin battlemented_1_A = mkA "guarnecido" ; --*
lin battlement_N = mkN "ameia" ; --*
lin battleship_N = variants {mkN "couraçado" ; mkN "Couraçados" ; } ; --*
lin battle_V = variants {mkV "batalhar" ; mkV "combater" ; mkV "lutar" ; } ; --*
lin battue_1_N = mkN "batida" ; --*
lin battue_2_N = variants {mkN "banho" ; mkN "massacre" ; } ; --*
lin batty_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin baud_N = variants {mkN "baud" ; mkN "Baud" ; mkN "rate" ; mkN "velocidade" ; } ; --*
lin baulk_2_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin baulk_3_N = mkN "trave" ; --*
lin baulk_V2 = mkV2 (mkV "resistir") ; --*
lin baulk_V = mkV "resistir" ; --*
lin bauxite_N = mkN "bauxita" ; --*
lin bawd_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin bawdy_A = mkA "verde" ; --*
lin bawl_out_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin bay_1_N = variants {mkN "baía" ; mkN "baías" ; } ; --*
lin bay_3_N = variants {mkN "laurel" ; mkN "louro" ; mkN "nobilis" ; mkN "tree" ; } ; --*
lin bay_6_N = variants {mkN "alcova" ; mkN "nicho" ; } ; --*
lin bayonet_N = mkN "baioneta" ; --*
lin bazaar_2_N = variants {mkN "bazar" ; mkN "mercado" ; } ; --*
lin bazaar_3_N = mkN "feira" ; --*
lin bazooka_N = mkN "bazuca" ; --*
lin beach_N = variants {mkN "costa" ; mkN "praia" ; } ; --*
lin beach_V2 = mkV2 (mkV "abicar") ; --*
lin beacon_3_N = variants {mkN "farol" ; mkN "light" ; } ; --*
lin beacon_light_N = variants {mkN "farol" ; mkN "light" ; } ; --*
lin bead_1_N = variants {mkN "conta" ; mkN "grânulo" ; mkN "Miçanga" ; } ; --*
lin bead_2_N = variants {mkN "gota" ; mkN "pérola" ; } ; --*
lin beadle_2_N = variants {mkN "Beadle" ; mkN "George" ; mkN "Wells" ; } ; --*
lin beak_1_N = variants {mkN "bico" ; mkN "boca" ; } ; --*
lin beak_2_N = mkN "bico" ; --*
lin beak_4_N = variants {mkN "bocal" ; mkN "focinho" ; } ; --*
lin beam_1_V2 = mkV2 (mkV "sorrir") ; --*
lin beam_1_V = mkV "sorrir" ; --*
lin beam_2_N = variants {mkN "trave" ; mkN "viga" ; } ; --*
lin beam_2_V = variants {mkV "brilhar" ; mkV "luzir" ; mkV "resplandecer" ; } ; --*
lin beam_3_N = variants {mkN "beam" ; mkN "raio" ; } ; --*
lin beam_4_N = variants {mkN "beam" ; mkN "feixe" ; mkN "of" ; mkN "raio" ; } ; --*
lin beam_4_V2 = mkV2 (mkV "transmitir") ; --*
lin beam_5_V = mkV "brilhar" ; --*
lin beam_6_V = variants {mkV "brilhar" ; mkV "radiar" ; } ; --*
lin beam_7_N = variants {mkN "beam" ; mkN "Trave" ; } ; --*
lin beamy_2_A = variants {mkA "radiante" ; mkA "refulgente" ; } ; --*
lin bean_1_N = variants {mkN "bean" ; mkN "fava" ; } ; --*
lin bean_3_N = variants {mkN "feijão" ; mkN "plant" ; } ; --*
lin beano_1_N = mkN "bingo" ; --*
lin bear_10_V = variants {mkV "comportar-se" ; mkV "conduzir" ; mkV "resistir" ; } ; --*
lin bear_12_V2A = mkV2A (mkV "portar") ; --*
lin bear_13_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin bear_1_N = variants {mkN "Ursidae" ; mkN "ursídeos" ; mkN "Ursídeos" ; mkN "urso" ; } ; --*
lin bear_1_V2 = mkV2 (mkV "portar") ; --*
lin bear_2_N = mkN "baixista" ; --*
lin bear_2_V2 = variants {mkV2 (mkV "birth") ; mkV2 (mkV "dar") ; mkV2 (mkV "parir") ; mkV2 (mkV "ter") ; } ; --*
lin bear_3_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin bear_4_V2 = mkV2 (mkV "carregar") ; --*
lin bear_5_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "out") ; } ; --*
lin bear_7_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "incluir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "segurar") ; mkV2 (mkV "ter") ; } ; --*
lin bear_9_V2 = mkV2 (mkV "vestir") ; --*
lin bearable_A = variants {mkA "suportável" ; mkA "tolerável" ; } ; --*
lin beard_1_N = variants {mkN "barba" ; mkN "fungus" ; } ; --*
lin beard_2_N = mkN "barba" ; --*
lin beard_4_N = mkN "barba" ; --*
lin beard_5_N = mkN "Bisso" ; --*
lin beardless_1_A = variants {mkA "glabro" ; mkA "imberbe" ; } ; --*
lin beardless_2_A = variants {mkA "glabro" ; mkA "imberbe" ; } ; --*
lin bearer_1_N = mkN "portador" ; --*
lin bearer_2_N = variants {mkN "carregador" ; mkN "detentor" ; mkN "portador" ; } ; --*
lin bearer_4_N = mkN "detentor" ; --*
lin bearing_1_N = mkN "relação" ; --*
lin bearing_2_N = mkN "curso" ; --*
lin bearing_3_N = variants {mkN "comportamento" ; mkN "presença" ; } ; --*
lin bearing_4_N = mkN "posição" ; --*
lin bear_on_1_V2 = variants {mkV2 (mkV "concernir") ; mkV2 (mkV "doe") ; mkV2 (mkV "on") ; mkV2 (mkV "referir") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "to") ; } ; --*
lin bear_on_2_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "impactar") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin bear_on_4_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "manter") ; mkV2 (mkV "on") ; mkV2 (mkV "preservar") ; } ; --*
lin bear_out_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "out") ; mkV2 (mkV "sustentar") ; } ; --*
lin bearskin_1_N = mkN "pele" ; --*
lin beast_1_N = variants {mkN "animal" ; mkN "being" ; mkN "besta" ; mkN "bicho" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin beast_2_N = variants {mkN "besta" ; mkN "fera" ; } ; --*
lin beastly_1_A = variants {mkA "animal" ; mkA "infernal" ; } ; --*
lin beastly_2_A = variants {mkA "animal" ; mkA "bestial" ; mkA "brutal" ; } ; --*
lin beat_10_V2 = mkV2 (mkV "bater") ; --*
lin beat_11_V2 = mkV2 (mkV "bater") ; --*
lin beat_12_V2 = variants {mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; } ; --*
lin beat_13_V2 = mkV2 (mkV "dar") ; --*
lin beat_14_V2 = mkV2 (mkV "bater") ; --*
lin beat_15_V = variants {mkV "agitar" ; mkV "bater" ; } ; --*
lin beat_17_V = mkV "bater" ; --*
lin beat_18_V2 = mkV2 (mkV "fazer") ; --*
lin beat_19_V2 = mkV2 (mkV "bater") ; --*
lin beat_1_N = mkN "rodada" ; --*
lin beat_1_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "out") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin beat_20_V2 = mkV2 (mkV "bater") ; --*
lin beat_20_V = mkV "bater" ; --*
lin beat_21_V2 = mkV2 (mkV "enganar") ; --*
lin beat_22_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin beat_23_V = variants {mkV "exaurir" ; mkV "out" ; mkV "up" ; } ; --*
lin beat_2_N = mkN "pulso" ; --*
lin beat_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "surrar") ; mkV2 (mkV "up") ; } ; --*
lin beat_3_N = variants {mkN "rhythm" ; mkN "ritmo" ; mkN "tempo" ; } ; --*
lin beat_3_V2 = mkV2 (mkV "bater") ; --*
lin beat_3_V = mkV "bater" ; --*
lin beat_4_N = mkN "Batimentos" ; --*
lin beat_4_V = mkV "pulsar" ; --*
lin beat_5_N = mkN "beatnik" ; --*
lin beat_6_V = variants {mkV "bater" ; mkV "batucar" ; } ; --*
lin beat_7_N = mkN "métrica" ; --*
lin beat_8_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; } ; --*
lin beaten_1_A = mkA "batido" ; --*
lin beater_2_N = mkN "batedor" ; --*
lin beatific_2_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin beatification_3_N = mkN "beatificação" ; --*
lin beatify_1_V2 = variants {mkV2 (mkV "enebriar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "exultar") ; mkV2 (mkV "pink") ; } ; --*
lin beatify_3_V2 = mkV2 (mkV "beatificar") ; --*
lin beating_1_N = mkN "superação" ; --*
lin beating_2_N = mkN "surra" ; --*
lin beatitude_2_N = variants {mkN "Bem-aventuranças" ; mkN "Bem-Aventuranças" ; } ; --*
lin beatnik_N = mkN "beatnik" ; --*
lin beau_1_N = variants {mkN "homem" ; mkN "man" ; mkN "namorado" ; mkN "noivo" ; } ; --*
lin beau_2_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin beaujolais_N = mkN "Beaujolais" ; --*
lin beauteous_A = mkA "belo" ; --*
lin beautification_N = mkN "embelezamento" ; --*
lin beautiful_1_A = variants {mkA "bela" ; mkA "belo" ; mkA "bonita" ; mkA "bonito" ; mkA "formoso" ; mkA "lindo" ; } ; --*
lin beautify_1_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "embonecar") ; mkV2 (mkV "empetecar") ; } ; --*
lin beautify_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "ornamentar") ; } ; --*
lin beautify_3_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "empetecar") ; mkV2 (mkV "enfeitar") ; mkV2 (mkV "ornamentar") ; mkV2 (mkV "ornar") ; } ; --*
lin beauty_1_N = variants {mkN "beleza" ; mkN "Belo" ; } ; --*
lin beauty_2_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin beauty_parlour_N = variants {mkN "parlor" ; mkN "parlour" ; mkN "salão" ; mkN "salon" ; mkN "shop" ; } ; --*
lin beauty_salon_N = variants {mkN "parlor" ; mkN "parlour" ; mkN "salão" ; mkN "salon" ; mkN "shop" ; } ; --*
lin beaver_4_N = variants {mkN "cartola" ; mkN "hat" ; } ; --*
lin beaver_7_N = mkN "castor" ; --*
lin becket_1_N = variants {mkN "a" ; mkN "Thomas" ; } ; --*
lin beckon_2_V = mkV "atrair" ; --*
lin beckon_3_V2 = mkV2 (mkV "acenar") ; --*
lin beckon_3_V = mkV "acenar" ; --*
lin become_2_V2 = variants {mkV2 (mkV "acontecer") ; mkV2 (mkV "tornar-se") ; mkV2 (mkV "transformar") ; mkV2 (mkV "transformar-se") ; mkV2 (mkV "virar") ; } ; --*
lin become_VA = variants {mkVA (mkV "estar") ; mkVA (mkV "ficar") ; mkVA (mkV "tornar") ; } ; --*
lin bed_1_N = variants {mkN "cama" ; mkN "Camas" ; mkN "leito" ; } ; --*
lin bed_2_N = mkN "canteiro" ; --*
lin bed_3_N = variants {mkN "fundo" ; mkN "leito" ; } ; --*
lin bed_4_N = mkN "jazigo" ; --*
lin bed_4_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin bed_5_V2 = variants {mkV2 (mkV "deitar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; mkV2 (mkV "to") ; } ; --*
lin bed_6_N = mkN "calceteiro" ; --*
lin bedbug_1_N = variants {mkN "bug" ; mkN "lectularius" ; mkN "percevejo" ; } ; --*
lin bedclothes_N = variants {mkN "clothing" ; mkN "roupa" ; } ; --*
lin bedding_1_N = variants {mkN "clothing" ; mkN "roupa" ; } ; --*
lin bedding_2_N = variants {mkN "material" ; mkN "Objetos" ; } ; --*
lin bedevil_1_V2 = variants {mkV2 (mkV "crucificar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "retalhar") ; mkV2 (mkV "tormentar") ; } ; --*
lin bedevil_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "enrolar") ; mkV2 (mkV "perplexar") ; } ; --*
lin bedlam_1_N = variants {mkN "balbúrdia" ; mkN "caos" ; mkN "confusão" ; mkN "tumulto" ; } ; --*
lin bedouin_1_N = mkN "beduíno" ; --*
lin bedraggled_2_A = variants {mkA "dilapidada" ; mkA "dilapidadas" ; mkA "dilapidado" ; mkA "dilapidados" ; mkA "malcuidada" ; mkA "malcuidado" ; } ; --*
lin bedrock_1_N = variants {mkN "fundamento" ; mkN "tipo" ; } ; --*
lin bedrock_2_N = variants {mkN "abc" ; mkN "abecê" ; mkN "á-bê-cê" ; mkN "principle" ; } ; --*
lin bedroom_N = variants {mkN "accommodation" ; mkN "câmara" ; mkN "habitação" ; mkN "quarto" ; mkN "room" ; } ; --*
lin bedspread_N = variants {mkN "colcha" ; mkN "cover" ; mkN "covering" ; } ; --*
lin bedtime_N = mkN "hora" ; --*
lin bee_1_N = variants {mkN "abelha" ; mkN "bê" ; mkN "vespa" ; } ; --*
lin beebread_N = mkN "ambrosia" ; --*
lin beech_1_N = variants {mkN "faia" ; mkN "tree" ; } ; --*
lin beef_1_N = variants {mkN "bovinos" ; mkN "cattle" ; } ; --*
lin beef_2_N = variants {mkN "bife" ; mkN "carne" ; } ; --*
lin beef_3_N = variants {mkN "queixa" ; mkN "reclamação" ; } ; --*
lin beefsteak_N = variants {mkN "bife" ; mkN "bifsteque" ; } ; --*
lin beef_up_V2 = variants {mkV2 (mkV "fortalecer") ; mkV2 (mkV "fortificar") ; mkV2 (mkV "up") ; } ; --*
lin beef_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin beefy_A = mkA "musculoso" ; --*
lin beehive_2_N = variants {mkN "alvéolo" ; mkN "colméia" ; } ; --*
lin beehive_4_N = variants {mkN "colméia" ; mkN "cortiço" ; } ; --*
lin beekeeper_N = variants {mkN "abelheiro" ; mkN "apicultor" ; } ; --*
lin beekeeping_N = variants {mkN "apicultura" ; mkN "Apicultura" ; } ; --*
lin beeper_N = mkN "pager" ; --*
lin beep_N = variants {mkN "assobio" ; mkN "Beep" ; } ; --*
lin beer_N = mkN "cerveja" ; --*
lin beeswax_N = mkN "cera" ; --*
lin beet_1_N = variants {mkN "beet" ; mkN "beterraba" ; mkN "vulgaris" ; } ; --*
lin beet_2_N = mkN "beterraba" ; --*
lin beetle_1_N = variants {mkN "besoiro" ; mkN "besouro" ; mkN "escaravelho" ; } ; --*
lin beetle_2_N = mkN "malho" ; --*
lin beetle_browed_A = mkA "carrancudo" ; --*
lin beetroot_1_N = variants {mkN "beterraba" ; mkN "vulgaris" ; } ; --*
lin beetroot_2_N = mkN "beterraba" ; --*
lin befall_V2 = mkV2 (mkV "acontecer") ; --*
lin befall_V = variants {mkV "acontecer" ; mkV "calhar" ; mkV "ocorrer" ; mkV "suceder" ; } ; --*
lin befit_V2 = variants {mkV2 (mkV "adaptar-se") ; mkV2 (mkV "adequar-se") ; mkV2 (mkV "convir") ; } ; --*
lin before_1_Adv = variants {mkAdv "antes" ; mkAdv "dantes" ; } ; --*
lin before_2_Adv = variants {mkAdv "adiante" ; mkAdv "ante" ; mkAdv "diante" ; mkAdv "em" ; mkAdv "frente" ; mkAdv "front" ; } ; --*
lin beforehand_A = mkA "de" ; --*
lin beforehand_Adv = variants {mkAdv "advance" ; mkAdv "antecipadamente" ; } ; --*
lin beg_1_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin beg_2_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin beg_3_V2 = variants {mkV2 (mkV "captar") ; mkV2 (mkV "mendigar") ; mkV2 (mkV "pedir") ; } ; --*
lin begetter_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "parent" ; } ; --*
lin beget_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin beggar_2_V2 = mkV2 (mkV "empobrecer") ; --*
lin beggar_N = variants {mkN "mendigo" ; mkN "pedinte" ; } ; --*
lin beggarwoman_N = mkN "mendigo" ; --*
lin beggary_1_N = mkN "mendicidade" ; --*
lin begin_1_V = variants {mkV "about" ; mkV "começar" ; mkV "down" ; mkV "iniciar" ; mkV "out" ; mkV "principiar" ; } ; --*
lin begin_2_V = variants {mkV "começar" ; mkV "iniciar" ; mkV "principiar" ; } ; --*
lin begin_3_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "off") ; } ; --*
lin begin_5_V2 = mkV2 (mkV "começar") ; --*
lin begin_6_V = mkV "começar" ; --*
lin begin_8_V2 = mkV2 (mkV "começar") ; --*
lin begin_ing_VV = variants {mkVV (mkV "about") ; mkVV (mkV "começar") ; mkVV (mkV "down") ; mkVV (mkV "iniciar") ; mkVV (mkV "out") ; mkVV (mkV "principiar") ; } ; --*
lin beginner_1_N = variants {mkN "novato" ; mkN "principiante" ; } ; --*
lin beginner_2_N = variants {mkN "father" ; mkN "fundador" ; mkN "iniciador" ; mkN "pai" ; } ; --*
lin beginning_1_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; } ; --*
lin beginning_2_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; mkN "time" ; } ; --*
lin beginning_3_N = mkN "começo" ; --*
lin beginning_4_N = variants {mkN "fonte" ; mkN "manancial" ; mkN "nascente" ; mkN "procedência" ; mkN "prosedensia" ; mkN "raiz" ; } ; --*
lin beginning_5_N = variants {mkN "começo" ; mkN "início" ; } ; --*
lin begin_to_1_VV = variants {mkVV (mkV "about") ; mkVV (mkV "começar") ; mkVV (mkV "down") ; mkVV (mkV "iniciar") ; mkVV (mkV "out") ; mkVV (mkV "principiar") ; } ; --*
lin begin_to_9_VV = mkVV (mkV "começar") ; --*
lin begin_with_V = variants {mkV "começar" ; mkV "iniciar" ; mkV "principiar" ; } ; --*
lin begonia_N = mkN "begônia" ; --*
lin begrimed_A = variants {mkA "encardido" ; mkA "grudento" ; mkA "sujo" ; } ; --*
lin begrudge_1_V2 = variants {mkV2 (mkV "invejar") ; mkV2 (mkV "ter") ; } ; --*
lin begrudge_2_V2 = mkV2 (mkV "ressentir") ; --*
lin beguile_2_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin beguilement_1_N = variants {mkN "magnetism" ; mkN "Mesmerismo" ; } ; --*
lin beguilement_2_N = variants {mkN "distração" ; mkN "distracção" ; mkN "divertimento" ; } ; --*
lin beguiling_1_A = variants {mkA "aliciante" ; mkA "atrativo" ; mkA "tentador" ; } ; --*
lin beguiling_2_A = mkA "encantador" ; --*
lin beguine_1_N = mkN "beguinas" ; --*
lin beguine_2_N = mkN "beguina" ; --*
lin behalf_2_N = variants {mkN "interesse" ; mkN "lucro" ; } ; --*
lin behave_2_V = variants {mkV "comportar-se" ; mkV "conduzir" ; mkV "resistir" ; } ; --*
lin behave_3_V = variants {mkV "comportar" ; mkV "comportar-se" ; mkV "portar-se" ; } ; --*
lin behave_like_V2 = variants {mkV2 (mkV "agir") ; mkV2 (mkV "atuar") ; mkV2 (mkV "comportar-se") ; mkV2 (mkV "fazer") ; mkV2 (mkV "parecer") ; } ; --*
lin behavior_1_N = variants {mkN "comportamento" ; mkN "conduta" ; } ; --*
lin behavior_2_N = mkN "comportamento" ; --*
lin behavior_3_N = variants {mkN "comportamento" ; mkN "conduta" ; mkN "maneira" ; mkN "procedimento" ; } ; --*
lin behavior_4_N = mkN "comportamento" ; --*
lin behavioral_1_A = mkA "comportamental" ; --*
lin behavioristic_1_A = variants {mkA "behaviorista" ; mkA "comportamentalista" ; } ; --*
lin behaviour_1_N = mkN "comportamento" ; --*
lin behaviour_2_N = variants {mkN "comportamento" ; mkN "conduta" ; mkN "maneira" ; mkN "procedimento" ; } ; --*
lin behaviour_3_N = mkN "comportamento" ; --*
lin behaviour_4_N = variants {mkN "comportamento" ; mkN "conduta" ; } ; --*
lin behaviourism_1_N = variants {mkN "Behaviorismo" ; mkN "psychology" ; } ; --*
lin behead_V2 = variants {mkV2 (mkV "decapitar") ; mkV2 (mkV "degolar") ; } ; --*
lin behest_N = mkN "ordem" ; --*
lin behind_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin beholder_N = variants {mkN "espectador" ; mkN "observador" ; } ; --*
lin behold_V2 = variants {mkV2 (mkV "eyes") ; mkV2 (mkV "ver") ; } ; --*
lin beige_N = variants {mkN "bege" ; mkN "Bege" ; mkN "beige" ; } ; --*
lin beijing_PN = variants {mkPN "of" ; mkPN "Pequim" ; } ; --*
lin being_1_N = variants {mkN "existência" ; mkN "Existência" ; mkN "forma" ; mkN "ser" ; } ; --*
lin being_2_N = variants {mkN "criatura" ; mkN "organismo" ; mkN "ser" ; } ; --*
lin beirut_PN = variants {mkPN "Beirute" ; mkPN "of" ; } ; --*
lin belated_A = variants {mkA "tarde" ; mkA "tardio" ; } ; --*
lin belch_1_V = mkV "arrotar" ; --*
lin belch_2_V = mkV "entrar" ; --*
lin belching_2_N = mkN "arroto" ; --*
lin belch_N = mkN "arroto" ; --*
lin beldam_1_N = variants {mkN "bruxa" ; mkN "coroa" ; } ; --*
lin beldame_1_N = variants {mkN "bruxa" ; mkN "coroa" ; } ; --*
lin beleaguer_1_V2 = variants {mkV2 (mkV "amolar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "incomodar") ; } ; --*
lin beleaguer_2_V2 = variants {mkV2 (mkV "cercar") ; mkV2 (mkV "in") ; mkV2 (mkV "sitiar") ; } ; --*
lin belem_PN = variants {mkPN "Lusitania" ; mkPN "Maria" ; mkPN "Mary" ; mkPN "Santa" ; } ; --*
lin belfast_PN = variants {mkPN "Belfast" ; mkPN "of" ; } ; --*
lin belfry_1_N = mkN "campanário" ; --*
lin belfry_2_N = mkN "campanário" ; --*
lin belgian_A = mkA "belga" ; --*
lin belgian_N = mkN "belga" ; --*
lin belgium_PN = variants {mkPN "Belgica" ; mkPN "Bélgica" ; mkPN "of" ; } ; --*
lin belgrade_PN = variants {mkPN "Belgrado" ; mkPN "of" ; } ; --*
lin belie_1_V2 = mkV2 (mkV "desmentir") ; --*
lin belie_2_V2 = mkV2 (mkV "desmentir") ; --*
lin belief_1_N = variants {mkN "convicção" ; mkN "crença" ; mkN "Crença" ; mkN "Crenças" ; mkN "fé" ; mkN "opinião" ; mkN "religião" ; } ; --*
lin belief_2_N = variants {mkN "crença" ; mkN "ideia" ; mkN "idéia" ; mkN "impressão" ; mkN "opinião" ; } ; --*
lin believable_A = variants {mkA "acreditável" ; mkA "crível" ; } ; --*
lin believe_1_V2 = variants {mkV2 (mkV "acreditar") ; mkV2 (mkV "crer") ; } ; --*
lin believe_1_V = variants {mkV "acreditar" ; mkV "crer" ; } ; --*
lin believe_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "pensar") ; } ; --*
lin believe_3_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "acreditar") ; mkVS (mkV "crer") ; mkVS (mkV "pensar") ; } ; --*
lin believe_4_V = variants {mkV "acreditar" ; mkV "crer" ; } ; --*
lin believer_1_N = mkN "crente" ; --*
lin believer_2_N = mkN "crente" ; --*
lin belike_Adv = variants {mkAdv "all" ; mkAdv "provavelmente" ; } ; --*
lin belittle_1_V2 = variants {mkV2 (mkV "denegrir") ; mkV2 (mkV "depreciar") ; mkV2 (mkV "minimizar") ; } ; --*
lin belittle_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "minimizar") ; } ; --*
lin belittle_3_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "minguar") ; mkV2 (mkV "minimizar") ; mkV2 (mkV "reduzir") ; } ; --*
lin bell_1_N = mkN "sino" ; --*
lin bell_2_N = mkN "campainha" ; --*
lin bell_4_N = variants {mkN "batidas" ; mkN "bell" ; } ; --*
lin bell_6_N = variants {mkN "Alexander" ; mkN "Bell" ; mkN "Melville" ; } ; --*
lin bell_8_N = variants {mkN "Bell" ; mkN "Graham" ; mkN "sino" ; } ; --*
lin belladonna_1_N = variants {mkN "beladona" ; mkN "belladonna" ; mkN "nightshade" ; mkN "plant" ; } ; --*
lin bellboy_N = mkN "mandarete" ; --*
lin bell_flower_N = mkN "campânula" ; --*
lin bellhop_N = mkN "mandarete" ; --*
lin bellicose_A = mkA "belicoso" ; --*
lin belligerence_2_N = mkN "agressividade" ; --*
lin belligerent_1_A = variants {mkA "agressivo" ; mkA "beligerante" ; } ; --*
lin belligerent_N = variants {mkN "combatente" ; mkN "guerreiro" ; mkN "lutador" ; mkN "lutadora" ; } ; --*
lin bellow_1_N = mkN "urro" ; --*
lin bellow_2_N = variants {mkN "Bellow" ; mkN "Saul" ; } ; --*
lin bellow_2_V = variants {mkV "berrar" ; mkV "bramir" ; mkV "rugir" ; mkV "uivar" ; } ; --*
lin bellows_N = mkN "fole" ; --*
lin belly_1_N = variants {mkN "abdome" ; mkN "abdómen" ; mkN "abdômen" ; mkN "barriga" ; mkN "estômago" ; mkN "tronco" ; mkN "ventre" ; } ; --*
lin belly_2_N = mkN "pança" ; --*
lin belly_4_N = mkN "barriga" ; --*
lin belly_5_N = variants {mkN "barriga" ; mkN "ventre" ; } ; --*
lin bellyache_N = variants {mkN "ache" ; mkN "dor" ; } ; --*
lin bellyache_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin belo_horizonte_PN = mkPN "Horizonte" ; --*
lin belonging_N = mkN "pertence" ; --*
lin belong_to_V2 = variants {mkV2 (mkV "caber") ; mkV2 (mkV "pertencer") ; mkV2 (mkV "ser") ; mkV2 (mkV "to") ; } ; --*
lin beloved_A = variants {mkA "caro" ; mkA "prezado" ; mkA "querida" ; mkA "querido" ; } ; --*
lin beloved_N = variants {mkN "amante" ; mkN "amor" ; } ; --*
lin below_1_Adv = variants {mkAdv "a" ; mkAdv "abaixode" ; mkAdv "debaixode" ; } ; --*
lin below_2_Adv = mkAdv "embaixo" ; --*
lin below_4_Adv = mkAdv "abaixo" ; --*
lin belowground_1_A = mkA "subterrânea" ; --*
lin belt_1_N = mkN "correia" ; --*
lin belt_2_N = mkN "cinto" ; --*
lin belt_3_V2 = mkV2 (mkV "cingir") ; --*
lin belt_7_N = variants {mkN "batida" ; mkN "golpe" ; } ; --*
lin beluga_1_N = variants {mkN "Esturjão" ; mkN "Esturjão-branco" ; mkN "huso" ; mkN "sturgeon" ; } ; --*
lin beluga_2_N = variants {mkN "beluga" ; mkN "leucas" ; mkN "whale" ; } ; --*
lin bemoan_V2 = variants {mkV2 (mkV "lamentar") ; mkV2 (mkV "lastimar") ; mkV2 (mkV "queixar-se") ; } ; --*
lin bemused_2_A = variants {mkA "perplexo" ; mkA "sea" ; } ; --*
lin bench_1_N = variants {mkN "banco" ; mkN "Banco" ; } ; --*
lin bench_2_N = variants {mkN "socalco" ; mkN "Terraceamento" ; } ; --*
lin bench_4_N = variants {mkN "bancada" ; mkN "bench" ; } ; --*
lin benchmark_2_N = variants {mkN "benchmark" ; mkN "mark" ; mkN "padrão" ; } ; --*
lin bend_1_N = mkN "arco" ; --*
lin bend_1_V = variants {mkV "curvar" ; mkV "dobrar" ; mkV "torcer" ; mkV "vergar" ; } ; --*
lin bend_3_N = mkN "curva" ; --*
lin bend_3_V2 = mkV2 (mkV "torcer") ; --*
lin bend_4_N = mkN "dobra" ; --*
lin bend_4_V = variants {mkV "agachar" ; mkV "dobrar" ; mkV "inclinar" ; } ; --*
lin bend_5_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "curvar") ; mkV2 (mkV "virar") ; } ; --*
lin bend_5_V = variants {mkV "away" ; mkV "curvar" ; mkV "virar" ; } ; --*
lin bend_6_V2 = variants {mkV2 (mkV "curvar") ; mkV2 (mkV "dobrar") ; } ; --*
lin bendable_A = mkA "dobrável" ; --*
lin bender_2_N = mkN "farra" ; --*
lin bending_3_N = mkN "inflexão" ; --*
lin beneath_Adv = variants {mkAdv "a" ; mkAdv "abaixode" ; mkAdv "debaixode" ; } ; --*
lin benedick_2_N = variants {mkN "Benedict" ; mkN "Benedito" ; } ; --*
lin benedick_3_N = variants {mkN "Benedict" ; mkN "Fulton" ; mkN "Ruth" ; } ; --*
lin benedictine_1_A = mkA "beneditino" ; --*
lin benedictine_1_N = variants {mkN "beneditino" ; mkN "Beneditino" ; mkN "Beneditinos" ; } ; --*
lin benedictine_2_A = mkA "beneditino" ; --*
lin benedictine_2_N = variants {mkN "benedictine" ; mkN "bénédictine" ; } ; --*
lin benediction_1_N = mkN "bênção" ; --*
lin benediction_2_N = mkN "bênção" ; --*
lin benefactor_N = mkN "doador" ; --*
lin benefice_N = variants {mkN "benefice" ; mkN "beneficium" ; } ; --*
lin beneficent_1_A = mkA "benfeitor" ; --*
lin beneficial_A = variants {mkA "benéfico" ; mkA "boa" ; mkA "bom" ; mkA "vantajoso" ; } ; --*
lin beneficiary_1_N = mkN "beneficiário" ; --*
lin beneficiary_A = mkA "beneficiário" ; --*
lin benefit_1_V = variants {mkV "beneficiar" ; mkV "ganhar" ; mkV "lucrar" ; } ; --*
lin benefit_2_N = variants {mkN "bem" ; mkN "benefício" ; } ; --*
lin benefit_2_V2 = variants {mkV2 (mkV "beneficiar") ; mkV2 (mkV "good") ; } ; --*
lin benefit_2_V = variants {mkV "beneficiar" ; mkV "good" ; } ; --*
lin benevolence_1_N = mkN "benevolência" ; --*
lin benevolence_2_N = mkN "benevolência" ; --*
lin benevolent_2_A = variants {mkA "benevolente" ; mkA "benévolo" ; mkA "bondoso" ; } ; --*
lin bengali_3_N = variants {mkN "alfabeto" ; mkN "bengali" ; mkN "Bengali" ; mkN "língua" ; } ; --*
lin bengali_A = variants {mkA "bengala" ; mkA "bengalês" ; mkA "bengali" ; } ; --*
lin benign_1_A = mkA "benigno" ; --*
lin benign_2_A = mkA "benigno" ; --*
lin benign_3_A = mkA "benigno" ; --*
lin benignant_1_A = mkA "benigno" ; --*
lin benignant_2_A = mkA "benigno" ; --*
lin benignity_2_N = variants {mkN "amabilidade" ; mkN "bondade" ; mkN "delicadeza" ; mkN "gentileza" ; } ; --*
lin beninese_A = variants {mkA "beninense" ; mkA "beninês" ; } ; --*
lin benin_PN = variants {mkPN "Benin" ; mkPN "Daomé" ; mkPN "of" ; } ; --*
lin benjamin_2_PN = mkPN "Benjamim" ; --*
lin benny_1_PN = variants {mkPN "gergelim" ; mkPN "indicum" ; } ; --*
lin bent_1_N = mkN "tendência" ; --*
lin bent_3_A = mkA "enrugado" ; --*
lin bent_4_N = mkN "talento" ; --*
lin benthos_1_N = variants {mkN "divisão" ; mkN "division" ; mkN "zone" ; } ; --*
lin benthos_2_N = mkN "bentos" ; --*
lin bentonite_N = mkN "bentonita" ; --*
lin bentonitic_A = mkA "bentonítico" ; --*
lin benumbed_1_A = variants {mkA "entorpecida" ; mkA "entorpecido" ; } ; --*
lin benzene_N = variants {mkN "benzeno" ; mkN "benzol" ; } ; --*
lin benzine_N = variants {mkN "benzeno" ; mkN "benzol" ; } ; --*
lin benzoate_N = mkN "benzoato" ; --*
lin benzocaine_N = variants {mkN "aminobenzoate" ; mkN "benzocaína" ; } ; --*
lin benzodiazepine_N = variants {mkN "benzodiazepina" ; mkN "Benzodiazepinas" ; } ; --*
lin benzoic_A = mkA "benzóico" ; --*
lin benzol_N = variants {mkN "benzeno" ; mkN "benzol" ; } ; --*
lin benzyl_N = variants {mkN "benzil" ; mkN "group" ; mkN "radical" ; } ; --*
lin beograd_PN = variants {mkPN "Belgrado" ; mkPN "of" ; } ; --*
lin bequeath_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "legar") ; } ; --*
lin bequest_N = variants {mkN "herança" ; mkN "legado" ; } ; --*
lin berate_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin bereavement_N = mkN "luto" ; --*
lin beret_N = variants {mkN "barrete" ; mkN "boina" ; mkN "borla" ; } ; --*
lin berg_1_N = variants {mkN "iceberg" ; mkN "Iceberg" ; mkN "icebergue" ; } ; --*
lin berg_2_N = variants {mkN "Alban" ; mkN "Berg" ; } ; --*
lin bergamot_N = variants {mkN "bergamia" ; mkN "bergamota" ; mkN "orange" ; } ; --*
lin bergen_PN = mkPN "Bergen" ; --*
lin beri_beri_N = variants {mkN "beribéri" ; mkN "Beribéri" ; } ; --*
lin berkelium_N = variants {mkN "berkélio" ; mkN "Berkélio" ; mkN "berquélio" ; mkN "number" ; } ; --*
lin berkshire_PN = mkPN "Berkshire" ; --*
lin berlin_1_N = variants {mkN "Berlim" ; mkN "capital" ; } ; --*
lin berlin_1_PN = variants {mkPN "Berlim" ; mkPN "capital" ; } ; --*
lin berlin_2_N = variants {mkN "Baline" ; mkN "Berlin" ; mkN "Irving" ; } ; --*
lin berlin_2_PN = variants {mkPN "Baline" ; mkPN "Berlin" ; mkPN "Irving" ; } ; --*
lin berm_2_N = variants {mkN "acostamento" ; mkN "berma" ; } ; --*
lin bermudan_A = mkA "bermudense" ; --*
lin bermuda_PN = mkPN "Bermudas" ; --*
lin bernard_PN = variants {mkPN "Bernard" ; mkPN "Claude" ; } ; --*
lin bern_PN = variants {mkPN "Berna" ; mkPN "of" ; } ; --*
lin berry_1_N = variants {mkN "baga" ; mkN "fruta" ; mkN "fruto" ; } ; --*
lin berry_2_N = mkN "baga" ; --*
lin berry_3_N = variants {mkN "Berry" ; mkN "Chuck" ; mkN "Edward" ; } ; --*
lin berserk_A = variants {mkA "demoníaco" ; mkA "enlouquecido" ; mkA "furioso" ; mkA "possuído" ; } ; --*
lin berserker_1_N = mkN "berserker" ; --*
lin berth_1_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin berth_2_N = variants {mkN "ancoradouro" ; mkN "atracadouro" ; } ; --*
lin berth_2_V2 = variants {mkV2 (mkV "atracar") ; mkV2 (mkV "up") ; } ; --*
lin berth_3_N = variants {mkN "camarote" ; mkN "in" ; mkN "liteira" ; } ; --*
lin beryllium_N = variants {mkN "Berilio" ; mkN "berílio" ; mkN "number" ; } ; --*
lin beryl_N = variants {mkN "água-marinha" ; mkN "berilo" ; } ; --*
lin beryl_PN = variants {mkPN "água-marinha" ; mkPN "berilo" ; } ; --*
lin beseeching_A = mkA "suplicante" ; --*
lin beseech_V2 = variants {mkV2 (mkV "implorar") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin beseem_V2 = variants {mkV2 (mkV "adaptar-se") ; mkV2 (mkV "adequar-se") ; mkV2 (mkV "convir") ; } ; --*
lin beset_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin beset_2_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "upon") ; } ; --*
lin beset_3_V2 = mkV2 (mkV "incrustar") ; --*
lin beshrew_V2 = mkV2 (mkV "amaldiçoar") ; --*
lin besides_1_Adv = variants {mkAdv "além" ; mkAdv "any" ; } ; --*
lin besides_2_Adv = variants {mkAdv "ainda" ; mkAdv "idem" ; mkAdv "outrossim" ; mkAdv "também" ; mkAdv "well" ; } ; --*
lin besiege_1_V2 = variants {mkV2 (mkV "cercar") ; mkV2 (mkV "in") ; mkV2 (mkV "sitiar") ; } ; --*
lin besiege_2_V2 = variants {mkV2 (mkV "cercar") ; mkV2 (mkV "cercear") ; } ; --*
lin besmirch_1_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin besom_N = mkN "vassoura" ; --*
lin bespeak_1_V2 = variants {mkV2 (mkV "denotar") ; mkV2 (mkV "evidenciar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "sinalizar") ; mkV2 (mkV "sugerir") ; } ; --*
lin bespeak_2_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "pedir") ; mkV2 (mkV "requerer") ; mkV2 (mkV "requisitar") ; } ; --*
lin bespoke_A = mkA "sob" ; --*
lin best_3_N = variants {mkN "Charles" ; mkN "H." ; mkN "Herbert" ; } ; --*
lin bestial_A = variants {mkA "animal" ; mkA "bestial" ; mkA "brutal" ; } ; --*
lin bestiality_2_N = variants {mkN "bestialidade" ; mkN "zoofilia" ; mkN "zoossexualidade" ; } ; --*
lin bestow_1_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "conferir") ; mkV2 (mkV "outorgar") ; } ; --*
lin bestow_2_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "outorgar") ; } ; --*
lin bestow_3_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "contribuir") ; } ; --*
lin bestowal_2_N = variants {mkN "doação" ; mkN "presente" ; } ; --*
lin bestride_V2 = variants {mkV2 (mkV "montar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin best_seller_1_N = variants {mkN "best-seller" ; mkN "seller" ; } ; --*
lin best_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; mkV2 (mkV "triunfar") ; mkV2 (mkV "vencer") ; } ; --*
lin bet_1_N = mkN "aposta" ; --*
lin bet_1_VS = mkVS (mkV "apostar") ; --*
lin bet_2_N = mkN "aposta" ; --*
lin bet_2_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "jogar") ; } ; --*
lin beta_1_N = variants {mkN "beta" ; mkN "β" ; } ; --*
lin beta_2_N = mkN "Beta" ; --*
lin betel_2_N = variants {mkN "betel" ; mkN "pepper" ; mkN "Piper" ; } ; --*
lin betel_nut_N = mkN "nut" ; --*
lin bethink_2_V2 = mkV2 (mkV "ponderar") ; --*
lin betide_V2 = mkV2 (mkV "acontecer") ; --*
lin betoken_1_V2 = variants {mkV2 (mkV "denotar") ; mkV2 (mkV "evidenciar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "sinalizar") ; mkV2 (mkV "sugerir") ; } ; --*
lin betoken_2_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin bet_on_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin betray_1_V2 = variants {mkV2 (mkV "mostrar") ; mkV2 (mkV "trair") ; } ; --*
lin betray_2_V2 = variants {mkV2 (mkV "atraiçoar") ; mkV2 (mkV "trair") ; } ; --*
lin betray_3_V2 = variants {mkV2 (mkV "falhar") ; mkV2 (mkV "trair") ; } ; --*
lin betray_4_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "tapear") ; mkV2 (mkV "trair") ; } ; --*
lin betray_6_V2 = variants {mkV2 (mkV "astray") ; mkV2 (mkV "enganar") ; mkV2 (mkV "trair") ; } ; --*
lin betrayal_1_N = mkN "traição" ; --*
lin betrayal_2_N = mkN "traição" ; --*
lin betrayer_1_N = mkN "delator" ; --*
lin betrayer_2_N = variants {mkN "informante" ; mkN "traição" ; mkN "traidor" ; } ; --*
lin betrothal_1_N = variants {mkN "casamento" ; mkN "noivado" ; } ; --*
lin betrothal_2_N = variants {mkN "esponsais" ; mkN "noivado" ; } ; --*
lin betroth_V2 = variants {mkV2 (mkV "noivar") ; mkV2 (mkV "prometer") ; } ; --*
lin better_1_A = mkA "melhor" ; --*
lin better_1_V2 = mkV2 (mkV "superar") ; --*
lin better_2_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "melhorar") ; } ; --*
lin better_3_V2 = mkV2 (mkV "melhorar") ; --*
lin betterment_1_N = variants {mkN "melhoria" ; mkN "progresso" ; } ; --*
lin betterment_2_N = mkN "melhoramento" ; --*
lin betterment_3_N = mkN "melhoramento" ; --*
lin bevel_1_N = variants {mkN "bisel" ; mkN "chanfradura" ; } ; --*
lin bevel_V2 = mkV2 (mkV "alisar") ; --*
lin beverage_N = mkN "bebida" ; --*
lin bevy_1_N = variants {mkN "bando" ; mkN "cáfila" ; mkN "malta" ; mkN "quadrilha" ; mkN "reunião" ; mkN "súcia" ; } ; --*
lin bewail_V2 = variants {mkV2 (mkV "lamentar") ; mkV2 (mkV "lastimar") ; mkV2 (mkV "queixar-se") ; } ; --*
lin beware_V = variants {mkV "precaver" ; mkV "precaver-se" ; mkV "ter" ; mkV "tomar" ; } ; --*
lin bewilder_1_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin bewilder_2_V2 = variants {mkV2 (mkV "descombobular") ; mkV2 (mkV "desconcertar") ; mkV2 (mkV "desnortear") ; } ; --*
lin bewitch_1_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin bewitch_2_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "enfeitiçar") ; } ; --*
lin bewitch_3_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "enfeitiçar") ; } ; --*
lin bewitchery_N = variants {mkN "magnetism" ; mkN "Mesmerismo" ; } ; --*
lin beyond_1_Adv = mkAdv "para" ; --*
lin bhakti_N = mkN "bhakti" ; --*
lin bhang_N = mkN "Bhang" ; --*
lin bhutan_PN = variants {mkPN "Butao" ; mkPN "Butão" ; mkPN "of" ; } ; --*
lin biannually_Adv = mkAdv "semestralmente" ; --*
lin bias_1_N = variants {mkN "preconceito" ; mkN "Pré-conceito" ; mkN "viés" ; } ; --*
lin bias_2_N = variants {mkN "diagonais" ; mkN "diagonal" ; } ; --*
lin bias_2_V2 = mkV2 (mkV "predeterminar") ; --*
lin bias_A = mkA "diagonal" ; --*
lin bib_2_N = mkN "babador" ; --*
lin bible_1_N = variants {mkN "Bible" ; mkN "Bíblia" ; mkN "Book" ; mkN "of" ; mkN "Scripture" ; mkN "Writ" ; } ; --*
lin bible_2_N = mkN "Bíblia" ; --*
lin biblical_1_A = variants {mkA "biblico" ; mkA "bíblico" ; } ; --*
lin biblical_2_A = mkA "bíblico" ; --*
lin bibliographer_N = mkN "bibliógrafo" ; --*
lin bibliographic_1_A = mkA "bibliográfico" ; --*
lin bibliography_N = variants {mkN "bibliografia" ; mkN "Bibliografia" ; mkN "bibliografias" ; } ; --*
lin bibliomania_N = mkN "bibliomania" ; --*
lin bibliophile_N = variants {mkN "bibliófilo" ; mkN "lover" ; } ; --*
lin bicameral_1_A = mkA "bicameral" ; --*
lin bicapsular_A = mkA "bicapsular" ; --*
lin bicarbonate_N = variants {mkN "bicarbonato" ; mkN "carbonate" ; } ; --*
lin bicentennial_A = mkA "bicentenário" ; --*
lin biceps_N = mkN "bíceps" ; --*
lin bichromated_A = variants {mkA "bicromatado" ; mkA "bicromatizado" ; } ; --*
lin bicipital_A = mkA "bicipital" ; --*
lin bicker_N = mkN "desavença" ; --*
lin bicker_V = variants {mkV "bicar" ; mkV "discutir" ; } ; --*
lin bicolor_1_A = mkA "bicolor" ; --*
lin biconcave_A = mkA "bicôncavo" ; --*
lin biconvex_A = mkA "biconvexo" ; --*
lin bicorn_1_N = mkN "bicorne" ; --*
lin bicuspid_A = mkA "bicúspide" ; --*
lin bicycle_N = variants {mkN "bici" ; mkN "bicicleta" ; mkN "bicicletas" ; mkN "biciclo" ; mkN "roda" ; } ; --*
lin bid_1_N = variants {mkN "Comando" ; mkN "ordem" ; } ; --*
lin bid_1_V2 = mkV2 (mkV "oferecer") ; --*
lin bid_2_N = mkN "tentativa" ; --*
lin bid_3_N = mkN "oferta" ; --*
lin bid_3_V2 = variants {mkV2 (mkV "implorar") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin bid_4_N = variants {mkN "licitação" ; mkN "oferta" ; } ; --*
lin bid_6_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "pedir") ; } ; --*
lin bid_6_V = variants {mkV "convidar" ; mkV "pedir" ; } ; --*
lin biddable_A = variants {mkA "aquiescente" ; mkA "condescendente" ; } ; --*
lin bidding_1_N = variants {mkN "Comando" ; mkN "ordem" ; } ; --*
lin bidding_3_N = variants {mkN "licitação" ; mkN "oferta" ; } ; --*
lin bidet_N = mkN "bidê" ; --*
lin bidirectional_A = mkA "bidirecional" ; --*
lin biennial_N = mkN "bienal" ; --*
lin biff_N = variants {mkN "murro" ; mkN "ponche" ; mkN "soco" ; } ; --*
lin bifocal_A = mkA "bifocal" ; --*
lin bifocals_N = mkN "bifocal" ; --*
lin bifurcate_1_V2 = mkV2 (mkV "bifurcar") ; --*
lin bifurcate_1_V = mkV "bifurcar" ; --*
lin bifurcate_A = mkA "bifurcado" ; --*
lin bifurcation_1_N = mkN "bifurcação" ; --*
lin bifurcation_3_N = mkN "bifurcação" ; --*
lin big_10_A = mkA "forte" ; --*
lin big_11_A = variants {mkA "generoso" ; mkA "grande" ; mkA "magnânimo" ; } ; --*
lin big_12_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin big_1_A = mkA "grande" ; --*
lin big_2_A = mkA "grande" ; --*
lin big_3_A = mkA "terrível" ; --*
lin big_4_A = mkA "grande" ; --*
lin big_5_A = variants {mkA "ilustre" ; mkA "importante" ; mkA "proeminente" ; } ; --*
lin big_6_A = variants {mkA "child" ; mkA "grávida" ; } ; --*
lin big_8_A = variants {mkA "vangloriosa" ; mkA "vanglorioso" ; } ; --*
lin big_9_A = variants {mkA "adulto" ; mkA "crescido" ; mkA "grown" ; mkA "maior" ; } ; --*
lin bigamist_N = mkN "bígamo" ; --*
lin bigamy_1_N = mkN "bigamia" ; --*
lin bigamy_2_N = mkN "bigamia" ; --*
lin bigeminal_A = mkA "bigeminal" ; --*
lin bigheaded_A = variants {mkA "big" ; mkA "ranhoso" ; } ; --*
lin bigos_N = mkN "bigos" ; --*
lin bigot_N = mkN "fanático" ; --*
lin bigotry_N = variants {mkN "fanatismo" ; mkN "preconceito" ; } ; --*
lin bigram_N = mkN "bigrama" ; --*
lin bike_1_N = variants {mkN "mota" ; mkN "moto" ; mkN "motocicleta" ; mkN "motocicletas" ; mkN "Motos" ; } ; --*
lin bike_2_N = variants {mkN "bici" ; mkN "bicicleta" ; mkN "bicicletas" ; mkN "biciclo" ; mkN "roda" ; } ; --*
lin bikini_2_N = variants {mkN "Biquini" ; mkN "biquíni" ; } ; --*
lin bilabial_A = mkA "bilabial" ; --*
lin bilabial_N = mkN "bilabial" ; --*
lin bilateral_1_A = variants {mkA "bilateral" ; mkA "symmetric" ; mkA "symmetrical" ; } ; --*
lin bilateral_2_A = mkA "bilateral" ; --*
lin bilateral_3_A = mkA "bilateral" ; --*
lin bilateralism_N = variants {mkN "Relações" ; mkN "symmetry" ; } ; --*
lin bilaterality_N = variants {mkN "Relações" ; mkN "symmetry" ; } ; --*
lin bilberry_3_N = variants {mkN "arando" ; mkN "blueberry" ; mkN "mirtilo" ; } ; --*
lin bile_duct_N = variants {mkN "bile" ; mkN "duct" ; } ; --*
lin bile_N = variants {mkN "bile" ; mkN "bílis" ; mkN "fel" ; } ; --*
lin bilge_water_2_N = mkN "mexerico" ; --*
lin bilharzia_N = variants {mkN "esquistossomose" ; mkN "esquitosomíase" ; } ; --*
lin biliary_2_A = mkA "biliar" ; --*
lin bilimbi_N = variants {mkN "Averrhoa" ; mkN "bilimbi" ; } ; --*
lin bilinear_A = mkA "bilinear" ; --*
lin bilingual_A = mkA "bilíngüe" ; --*
lin bilingualism_N = mkN "bilinguismo" ; --*
lin bilingual_N = mkN "bilíngue" ; --*
lin bilirubin_N = mkN "bilirrubina" ; --*
lin bilk_1_V2 = variants {mkV2 (mkV "charlatanear") ; mkV2 (mkV "fazer") ; } ; --*
lin bilk_2_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin bilk_4_V2 = variants {mkV2 (mkV "escapar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "safar") ; } ; --*
lin bill_10_N = mkN "bico" ; --*
lin bill_1_N = mkN "projecto" ; --*
lin bill_1_V2 = mkV2 (mkV "cobrar") ; --*
lin bill_2_N = variants {mkN "conta" ; mkN "contas" ; mkN "factura" ; mkN "facturas" ; mkN "fatura" ; } ; --*
lin bill_3_N = variants {mkN "bill" ; mkN "cédula" ; mkN "nota" ; mkN "note" ; mkN "Reserve" ; } ; --*
lin bill_3_V2 = mkV2 (mkV "afixar") ; --*
lin bill_5_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin bill_6_N = variants {mkN "anúncio" ; mkN "cartaz" ; mkN "edital" ; mkN "letreiro" ; mkN "papeleta" ; mkN "rótulo" ; } ; --*
lin billboard_N = mkN "outdoor" ; --*
lin billet_1_N = variants {mkN "bilhete" ; mkN "letter" ; mkN "nota" ; } ; --*
lin billet_3_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin billet_doux_N = variants {mkN "doux" ; mkN "letter" ; } ; --*
lin billet_V2 = mkV2 (mkV "aquartelar") ; --*
lin billfish_4_N = variants {mkN "Gar" ; mkN "Lepisosteiformes" ; } ; --*
lin billfold_N = mkN "carteira" ; --*
lin billiards_N = mkN "bilhar" ; --*
lin billion_1_A = mkA "bilhão" ; --*
lin billion_1_N = variants {mkN "bilhão" ; mkN "bilião" ; mkN "million" ; } ; --*
lin billion_2_N = variants {mkN "milhão" ; mkN "milhentos" ; mkN "zilhão" ; } ; --*
lin billion_3_N = variants {mkN "bilhão" ; mkN "thousand" ; } ; --*
lin billow_4_V = mkV "inchar" ; --*
lin billow_N = variants {mkN "onda" ; mkN "vaga" ; mkN "vagalhão" ; } ; --*
lin billowy_A = mkA "ondeante" ; --*
lin billy_1_N = variants {mkN "cassetete" ; mkN "club" ; mkN "porrete" ; } ; --*
lin billy_1_PN = variants {mkPN "cassetete" ; mkPN "club" ; mkPN "porrete" ; } ; --*
lin billy_2_N = variants {mkN "bode" ; mkN "goat" ; } ; --*
lin billy_2_PN = variants {mkPN "bode" ; mkPN "goat" ; } ; --*
lin billy_goat_N = variants {mkN "bode" ; mkN "goat" ; } ; --*
lin bimester_N = mkN "bimestre" ; --*
lin bimetal_A = variants {mkA "bimetal" ; mkA "bimetálico" ; } ; --*
lin bimetallic_2_A = variants {mkA "bimetal" ; mkA "bimetálico" ; } ; --*
lin bimetal_N = mkN "Placa" ; --*
lin bimodal_A = mkA "bimodal" ; --*
lin bimolecular_A = mkA "bimolecular" ; --*
lin bimonthly_1_Adv = mkAdv "bimestralmente" ; --*
lin bimonthly_2_Adv = mkAdv "bimestralmente" ; --*
lin bin_1_N = variants {mkN "balde" ; mkN "contentores" ; mkN "tonel" ; } ; --*
lin binary_1_A = mkA "binário" ; --*
lin binary_1_N = variants {mkN "sistema" ; mkN "star" ; } ; --*
lin binary_2_A = mkA "binário" ; --*
lin bind_10_V2 = mkV2 (mkV "constipar") ; --*
lin bind_2_V2 = variants {mkV2 (mkV "aproximar") ; mkV2 (mkV "aproximar-se") ; mkV2 (mkV "criar") ; mkV2 (mkV "ligar") ; } ; --*
lin bind_3_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; } ; --*
lin bind_4_V2 = mkV2 (mkV "atar") ; --*
lin bind_4_V = mkV "atar" ; --*
lin bind_5_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; mkV2 (mkV "down") ; mkV2 (mkV "up") ; } ; --*
lin bind_6_V2 = variants {mkV2 (mkV "obrigar") ; mkV2 (mkV "prender") ; mkV2 (mkV "vincular") ; } ; --*
lin bind_7_V2 = mkV2 (mkV "encadernar") ; --*
lin bind_8_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "ligar") ; } ; --*
lin bind_9_V2 = mkV2 (mkV "ligar") ; --*
lin binding_3_N = mkN "curativo" ; --*
lin binding_5_N = variants {mkN "binding" ; mkN "capa" ; } ; --*
lin bind_to_1_V2 = variants {mkV2 (mkV "aderir") ; mkV2 (mkV "colar") ; mkV2 (mkV "fast") ; mkV2 (mkV "grudar") ; mkV2 (mkV "to") ; } ; --*
lin bine_N = variants {mkN "hop" ; mkN "hops" ; mkN "lúpulo" ; mkN "lupulus" ; } ; --*
lin binge_1_N = mkN "bacanal" ; --*
lin binge_2_N = mkN "compulsão" ; --*
lin bingo_N = mkN "bingo" ; --*
lin binocular_A = mkA "binocular" ; --*
lin binoculars_N = variants {mkN "binóculos" ; mkN "glasses" ; } ; --*
lin binomial_2_A = variants {mkA "binária" ; mkA "binomial" ; mkA "binominal" ; } ; --*
lin binomial_N = variants {mkN "binómio" ; mkN "binômio" ; mkN "Produtos" ; } ; --*
lin binucleate_1_A = mkA "binucleado" ; --*
lin bioassay_1_N = mkN "Bioensaio" ; --*
lin biochemical_A = mkA "bioquímico" ; --*
lin biochemist_N = variants {mkN "Bioquimico" ; mkN "bioquímico" ; } ; --*
lin biochemistry_N = variants {mkN "Bioquimica" ; mkN "bioquímica" ; } ; --*
lin bioclimatology_N = mkN "bioclimatologia" ; --*
lin biodegradable_A = mkA "biodegradável" ; --*
lin biodiversity_N = mkN "biodiversidade" ; --*
lin bioelectricity_N = mkN "bioeletricidade" ; --*
lin bioethics_N = mkN "bioética" ; --*
lin biofeedback_N = mkN "biofeedback" ; --*
lin biogenesis_1_N = variants {mkN "biogênese" ; mkN "biossíntese" ; } ; --*
lin biogenesis_2_N = variants {mkN "Biogenese" ; mkN "Biogénese" ; mkN "biogênese" ; } ; --*
lin biogenetic_A = mkA "biogenético" ; --*
lin biogenic_2_A = mkA "biogênico" ; --*
lin biogeographic_1_A = mkA "biogeográfico" ; --*
lin biogeography_N = mkN "biogeografia" ; --*
lin biographer_N = variants {mkN "biografista" ; mkN "biógrafo" ; } ; --*
lin biographic_A = mkA "biográfico" ; --*
lin biographical_A = mkA "biográfico" ; --*
lin biography_N = variants {mkN "biografia" ; mkN "history" ; mkN "story" ; } ; --*
lin biological_1_A = variants {mkA "biológica" ; mkA "biológico" ; } ; --*
lin biological_2_A = variants {mkA "biológica" ; mkA "biológico" ; mkA "natural" ; } ; --*
lin biologist_N = variants {mkN "biologista" ; mkN "scientist" ; } ; --*
lin biology_1_N = variants {mkN "biologia" ; mkN "science" ; } ; --*
lin biology_2_N = mkN "biologia" ; --*
lin biology_3_N = variants {mkN "biologia" ; mkN "biota" ; } ; --*
lin bioluminescence_N = variants {mkN "bioluminescência" ; mkN "Bioluminescência" ; } ; --*
lin biomass_1_N = mkN "biomassa" ; --*
lin biomedical_A = mkA "biomédico" ; --*
lin biomedicine_1_N = mkN "biomedicina" ; --*
lin biome_N = variants {mkN "bioma" ; mkN "Bioma" ; mkN "Biomas" ; } ; --*
lin biometrics_N = variants {mkN "bioestatística" ; mkN "Bioestatística" ; mkN "biometria" ; } ; --*
lin bionic_1_A = variants {mkA "biónico" ; mkA "biônico" ; } ; --*
lin bionic_2_A = mkA "biónico" ; --*
lin bionics_N = variants {mkN "biónica" ; mkN "Biónica" ; mkN "Biônica" ; } ; --*
lin biont_N = variants {mkN "bionte" ; mkN "protobionte" ; } ; --*
lin biophysics_N = variants {mkN "biofísica" ; mkN "Biofísica" ; } ; --*
lin biopsy_N = variants {mkN "biopsia" ; mkN "biópsia" ; mkN "Biópsia" ; } ; --*
lin bioremediation_2_N = mkN "Biorremediação" ; --*
lin biosafety_N = variants {mkN "biossegurança" ; mkN "segurança" ; } ; --*
lin biosphere_N = mkN "biosfera" ; --*
lin biosynthesis_N = variants {mkN "biogênese" ; mkN "biossíntese" ; } ; --*
lin biosynthetic_A = mkA "biossintético" ; --*
lin biota_N = variants {mkN "biologia" ; mkN "biota" ; } ; --*
lin biotechnology_1_N = mkN "biotecnologia" ; --*
lin biotechnology_2_N = variants {mkN "bioengenharia" ; mkN "Biotecnologia" ; mkN "ergonomia" ; } ; --*
lin bioterrorism_N = variants {mkN "Bioterrorismo" ; mkN "terrorism" ; } ; --*
lin biotin_N = variants {mkN "biotina" ; mkN "H" ; } ; --*
lin biotite_N = mkN "biotita" ; --*
lin biotitic_A = mkA "biotítico" ; --*
lin biotype_N = mkN "biotipo" ; --*
lin bioweapon_N = variants {mkN "armas" ; mkN "weapon" ; } ; --*
lin bipedal_1_A = mkA "bípede" ; --*
lin bipedalism_N = variants {mkN "Bípede" ; mkN "Bipedismo" ; } ; --*
lin biplane_N = mkN "biplano" ; --*
lin bipolar_2_A = mkA "bipolar" ; --*
lin bipolar_3_A = mkA "bipolar" ; --*
lin biracial_A = mkA "birracial" ; --*
lin birch_1_N = mkN "bétula" ; --*
lin birch_2_N = variants {mkN "bétula" ; mkN "tree" ; } ; --*
lin birch_3_N = variants {mkN "bétel" ; mkN "bétula" ; mkN "rod" ; } ; --*
lin birch_rod_N = variants {mkN "bétel" ; mkN "bétula" ; mkN "rod" ; } ; --*
lin bird_1_N = variants {mkN "ave" ; mkN "pássaro" ; } ; --*
lin bird_2_N = variants {mkN "ave" ; mkN "carne" ; } ; --*
lin bird_3_N = variants {mkN "brasa" ; mkN "franguinha" ; mkN "garota" ; mkN "gata" ; mkN "menina" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin bird_5_N = variants {mkN "peteca" ; mkN "volante" ; mkN "Volante" ; } ; --*
lin birdcage_N = variants {mkN "gaiola" ; mkN "Gaiola" ; } ; --*
lin birdcall_1_N = mkN "canto" ; --*
lin birdie_1_N = mkN "passarinho" ; --*
lin birdie_2_N = variants {mkN "peteca" ; mkN "volante" ; mkN "Volante" ; } ; --*
lin bird's_eye_A = mkA "panorâmico" ; --*
lin birefringent_A = mkA "birrefringente" ; --*
lin biretta_1_N = variants {mkN "barrete" ; mkN "Barrete" ; } ; --*
lin biro_N = variants {mkN "canetaesferográfica" ; mkN "pen" ; } ; --*
lin birth_1_N = mkN "nascimento" ; --*
lin birth_2_N = mkN "nascimento" ; --*
lin birth_3_N = variants {mkN "birth" ; mkN "nascimento" ; } ; --*
lin birth_4_N = mkN "paternidade" ; --*
lin birth_control_N = variants {mkN "control" ; mkN "planning" ; mkN "prevention" ; } ; --*
lin birthday_1_N = variants {mkN "Aniversario" ; mkN "aniversário" ; mkN "data" ; } ; --*
lin birthday_2_N = variants {mkN "aniversário" ; mkN "day" ; } ; --*
lin birthplace_1_N = variants {mkN "of" ; mkN "terra" ; } ; --*
lin birthplace_2_N = variants {mkN "berço" ; mkN "of" ; mkN "origem" ; mkN "procedência" ; mkN "proveniência" ; } ; --*
lin birthrate_1_N = variants {mkN "rate" ; mkN "taxa" ; } ; --*
lin birthright_2_N = mkN "patrimônio" ; --*
lin biscuit_1_N = mkN "bolacha" ; --*
lin biscuit_2_N = variants {mkN "biscoito" ; mkN "bolacha" ; mkN "cookie" ; } ; --*
lin bisection_N = variants {mkN "bissecção" ; mkN "bissetriz" ; } ; --*
lin bisect_V2 = mkV2 (mkV "dividir") ; --*
lin bisexual_1_A = variants {mkA "bi" ; mkA "bissexuado" ; mkA "bissexual" ; } ; --*
lin bisexual_2_A = mkA "epiceno" ; --*
lin bisexuality_1_N = mkN "androginia" ; --*
lin bisexuality_2_N = mkN "bissexualidade" ; --*
lin bisexual_N = variants {mkN "bissexual" ; mkN "person" ; } ; --*
lin bishop_1_N = variants {mkN "bispo" ; mkN "Bispo" ; mkN "Bispos" ; } ; --*
lin bishop_3_N = mkN "bispo" ; --*
lin bishopric_N = variants {mkN "diocese" ; mkN "Diocese" ; } ; --*
lin bismuth_N = variants {mkN "bismuto" ; mkN "number" ; } ; --*
lin bison_N = variants {mkN "auroque" ; mkN "bisão" ; mkN "bisão-americano" ; mkN "bisão-europeu" ; mkN "bisonte" ; } ; --*
lin bistro_N = mkN "bistrô" ; --*
lin bit_11_N = variants {mkN "broca" ; mkN "pua" ; mkN "verruma" ; } ; --*
lin bit_1_N = mkN "pouco" ; --*
lin bit_2_N = mkN "apara" ; --*
lin bit_3_N = variants {mkN "instante" ; mkN "minuto" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin bit_5_N = variants {mkN "bocado" ; mkN "bocal" ; mkN "morso" ; } ; --*
lin bit_6_N = variants {mkN "bit" ; mkN "bite" ; } ; --*
lin bit_7_N = variants {mkN "bocada" ; mkN "bocado" ; mkN "fragmento" ; mkN "gota" ; mkN "mordida" ; mkN "pedaço" ; mkN "porção" ; } ; --*
lin bit_8_N = variants {mkN "bocado" ; mkN "pedaço" ; mkN "porção" ; } ; --*
lin bit_9_N = mkN "número" ; --*
lin bitch_1_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin bitch_2_N = variants {mkN "puta" ; mkN "vadia" ; mkN "vagabunda" ; } ; --*
lin bitch_2_V = variants {mkV "dizer" ; mkV "falar" ; } ; --*
lin bitch_3_N = variants {mkN "queixa" ; mkN "reclamação" ; } ; --*
lin bitch_4_N = variants {mkN "cachorra" ; mkN "cadela" ; } ; --*
lin bitchy_A = variants {mkA "calúnia" ; mkA "malvado" ; mkA "perversa" ; } ; --*
lin bite_1_N = variants {mkN "mordedura" ; mkN "mordida" ; } ; --*
lin bite_1_V2 = variants {mkV2 (mkV "morder") ; mkV2 (mkV "with") ; } ; --*
lin bite_2_N = variants {mkN "bocada" ; mkN "bocado" ; mkN "fragmento" ; mkN "gota" ; mkN "mordida" ; mkN "pedaço" ; mkN "porção" ; } ; --*
lin bite_2_V2 = mkV2 (mkV "queimar") ; --*
lin bite_3_N = variants {mkN "bite" ; mkN "picada" ; } ; --*
lin bite_4_N = variants {mkN "lanche" ; mkN "merenda" ; } ; --*
lin bite_4_V2 = variants {mkV2 (mkV "morder") ; mkV2 (mkV "picar") ; } ; --*
lin bitmap_N = variants {mkN "image" ; mkN "mapa" ; } ; --*
lin bitter_1_A = mkA "acrimonioso" ; --*
lin bitter_2_A = mkA "amargo" ; --*
lin bitter_3_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin bitter_3_N = mkN "amargura" ; --*
lin bitter_4_A = mkA "amargo" ; --*
lin bitter_6_A = mkA "amargo" ; --*
lin bitterness_1_N = variants {mkN "amargura" ; mkN "rancor" ; mkN "resentimento" ; mkN "ressentimento" ; } ; --*
lin bitterness_2_N = variants {mkN "acrimónia" ; mkN "acrimônia" ; mkN "acuidade" ; mkN "agrura" ; mkN "agudeza" ; } ; --*
lin bitterness_4_N = mkN "amargura" ; --*
lin bitter_sweet_1_A = mkA "agridoce" ; --*
lin bitter_sweet_2_A = mkA "agridoce" ; --*
lin bittersweet_2_N = variants {mkN "bittersweet" ; mkN "Celastrus" ; mkN "scandens" ; mkN "vine" ; } ; --*
lin bitumen_N = mkN "betume" ; --*
lin bivalent_2_A = mkA "bivalente" ; --*
lin bivouac_1_N = mkN "acampamento" ; --*
lin bivouac_1_V = variants {mkV "acampar" ; mkV "out" ; } ; --*
lin bivouac_2_N = variants {mkN "acampamento" ; mkN "area" ; mkN "campismo" ; mkN "ground" ; mkN "parques" ; mkN "site" ; } ; --*
lin bizarre_A = variants {mkA "bizarro" ; mkA "bizzaro" ; mkA "estranho" ; } ; --*
lin blab_1_V = variants {mkV "falar" ; mkV "out" ; mkV "the" ; } ; --*
lin blab_2_V2 = mkV2 (mkV "tagarelar") ; --*
lin blab_2_V = mkV "tagarelar" ; --*
lin blabbermouth_N = variants {mkN "palrador" ; mkN "paroleiro" ; mkN "tagarela" ; } ; --*
lin blabber_V2 = mkV2 (mkV "tagarelar") ; --*
lin blabber_V = mkV "tagarelar" ; --*
lin black_12_A = variants {mkA "desgraçado" ; mkA "ignominioso" ; mkA "torpe" ; } ; --*
lin black_13_A = mkA "puro" ; --*
lin black_1_A = variants {mkA "atro" ; mkA "negro" ; mkA "preto" ; } ; --*
lin black_1_N = mkN "preto" ; --*
lin black_2_N = variants {mkN "blackness" ; mkN "darkness" ; mkN "escuridão" ; } ; --*
lin black_3_N = variants {mkN "Black" ; mkN "Joseph" ; } ; --*
lin black_4_A = variants {mkA "escalvado" ; mkA "pálida" ; mkA "sombrio" ; } ; --*
lin black_4_N = variants {mkN "Shirley" ; mkN "Temple" ; } ; --*
lin black_5_N = variants {mkN "afro-americana" ; mkN "afro-americano" ; mkN "American" ; mkN "negra" ; mkN "negro" ; mkN "person" ; } ; --*
lin black_6_A = mkA "desastroso" ; --*
lin black_8_A = variants {mkA "negro" ; mkA "sombrio" ; } ; --*
lin blackball_1_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "ostracizar") ; mkV2 (mkV "out") ; } ; --*
lin blackball_2_V2 = mkV2 (mkV "vetar") ; --*
lin black_beetle_N = variants {mkN "Barata-oriental" ; mkN "cockroach" ; mkN "orientalis" ; mkN "roach" ; } ; --*
lin blackberry_1_N = variants {mkN "amora" ; mkN "Amora" ; mkN "Amora-silvestre" ; } ; --*
lin blackberry_2_N = variants {mkN "amoreira" ; mkN "bush" ; } ; --*
lin blackbird_1_N = variants {mkN "toutinegra" ; mkN "World" ; } ; --*
lin blackbird_2_N = variants {mkN "blackbird" ; mkN "melro" ; mkN "melro-preto" ; mkN "merula" ; } ; --*
lin blackboard_N = variants {mkN "lousa" ; mkN "quadro" ; mkN "quadro-negro" ; } ; --*
lin blacken_1_V2 = variants {mkV2 (mkV "empretecer") ; mkV2 (mkV "enegrecer") ; } ; --*
lin blacken_2_V2 = mkV2 (mkV "abrasar") ; --*
lin blacken_V = variants {mkV "empretecer" ; mkV "enegrecer" ; } ; --*
lin blackfish_3_N = variants {mkN "baleia-piloto" ; mkN "blackfish" ; mkN "melaena" ; mkN "whale" ; } ; --*
lin blackfly_2_N = variants {mkN "fly" ; mkN "gnat" ; mkN "Simuliidae" ; } ; --*
lin blackguard_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "fun") ; mkV2 (mkV "mangar") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "zombar") ; } ; --*
lin blackguard_2_V2 = variants {mkV2 (mkV "injuriar") ; mkV2 (mkV "insultar") ; } ; --*
lin blacking_N = variants {mkN "graxa" ; mkN "polish" ; } ; --*
lin blackjack_3_N = variants {mkN "flag" ; mkN "Jolly" ; mkN "Roger" ; } ; --*
lin blackjack_4_N = variants {mkN "blackjack" ; mkN "vinte-e-um" ; } ; --*
lin black_lead_N = variants {mkN "grafita" ; mkN "grafite" ; mkN "lead" ; } ; --*
lin blackleg_N = variants {mkN "fura-greve" ; mkN "Fura-greve" ; } ; --*
lin blacklist_N = variants {mkN "book" ; mkN "lista" ; } ; --*
lin blacklist_V2 = mkV2 (mkV "colocar") ; --*
lin blackmail_1_V2 = variants {mkV2 (mkV "chantagear") ; mkV2 (mkV "pressionar") ; } ; --*
lin blackmail_2_V2 = mkV2 (mkV "chantagear") ; --*
lin blackmailer_N = mkN "chantagista" ; --*
lin blackmail_N = mkN "chantagem" ; --*
lin blackness_1_N = mkN "preto" ; --*
lin blackness_2_N = variants {mkN "blackness" ; mkN "darkness" ; mkN "escuridão" ; } ; --*
lin black_out_1_V = mkV "out" ; --*
lin blackout_3_N = variants {mkN "apagão" ; mkN "blecaute" ; } ; --*
lin blackout_4_N = mkN "desmaio" ; --*
lin blackout_5_N = variants {mkN "amnésia" ; mkN "loss" ; } ; --*
lin blackpool_PN = mkPN "Blackpool" ; --*
lin blacksmith_N = mkN "ferreiro" ; --*
lin blacksnake_2_N = variants {mkN "constrictor" ; mkN "Corredora-azul" ; mkN "racer" ; } ; --*
lin black_V2 = variants {mkV2 (mkV "empretecer") ; mkV2 (mkV "enegrecer") ; } ; --*
lin bladder_1_N = mkN "bexiga" ; --*
lin bladder_2_N = mkN "bexiga" ; --*
lin bladderwrack_2_N = variants {mkN "fucus" ; mkN "Fucus" ; mkN "rockweed" ; mkN "vesiculosus" ; } ; --*
lin blade_1_N = variants {mkN "blade" ; mkN "folha" ; } ; --*
lin blade_4_N = variants {mkN "espada" ; mkN "Espadas" ; mkN "gládio" ; } ; --*
lin blade_9_N = variants {mkN "lâmina" ; mkN "Lâmina" ; } ; --*
lin bladed_3_A = mkA "laminado" ; --*
lin blame_1_V2 = variants {mkV2 (mkV "culpabilizar") ; mkV2 (mkV "culpar") ; } ; --*
lin blame_1_V = variants {mkV "culpabilizar" ; mkV "culpar" ; } ; --*
lin blame_2_N = mkN "culpa" ; --*
lin blame_2_V2 = variants {mkV2 (mkV "acusar") ; mkV2 (mkV "culpar") ; mkV2 (mkV "fault") ; mkV2 (mkV "repreender") ; } ; --*
lin blame_3_V2 = mkV2 (mkV "culpar") ; --*
lin blameless_A = variants {mkA "inocente" ; mkA "irrepreensível" ; mkA "irreprochável" ; mkA "sem" ; } ; --*
lin blameworthy_A = variants {mkA "censurável" ; mkA "culpável" ; mkA "repreensível" ; mkA "reprovável" ; } ; --*
lin blanch_1_V2 = variants {mkV2 (mkV "clarear") ; mkV2 (mkV "empalidecer") ; } ; --*
lin blanch_1_V = variants {mkV "clarear" ; mkV "empalidecer" ; } ; --*
lin bland_1_A = mkA "insípido" ; --*
lin bland_2_A = mkA "monótono" ; --*
lin blandness_2_N = mkN "insipidez" ; --*
lin blank_1_A = variants {mkA "em" ; mkA "refletivo" ; } ; --*
lin blank_1_N = mkN "espaço" ; --*
lin blank_2_N = mkN "lacuna" ; --*
lin blank_4_N = variants {mkN "festim" ; mkN "shell" ; } ; --*
lin blanket_1_N = variants {mkN "coberta" ; mkN "cobertor" ; mkN "colcha" ; } ; --*
lin blanket_2_V2 = mkV2 (mkV "cobrir") ; --*
lin blank_out_V = variants {mkV "a" ; mkV "bloquear" ; mkV "esquecer" ; mkV "out" ; } ; --*
lin blare_1_V = mkV "fazer" ; --*
lin blare_2_V = mkV "buzinar" ; --*
lin blare_N = mkN "ruído" ; --*
lin blaspheme_1_V = variants {mkV "desbocar" ; mkV "insultar" ; mkV "xingar" ; } ; --*
lin blaspheme_2_V2 = variants {mkV2 (mkV "blasfemar") ; mkV2 (mkV "maldizer") ; mkV2 (mkV "praguejar") ; } ; --*
lin blasphemer_N = mkN "blasfemo" ; --*
lin blasphemous_1_A = mkA "sacrílego" ; --*
lin blasphemy_1_N = variants {mkN "blasfémia" ; mkN "blasfêmia" ; mkN "Blasfêmia" ; } ; --*
lin blasphemy_2_N = variants {mkN "blasfémia" ; mkN "blasfêmia" ; mkN "profanação" ; mkN "Profanação" ; mkN "sacrilégio" ; } ; --*
lin blast_1_V = mkV "fazer" ; --*
lin blast_2_N = variants {mkN "baterpalmas" ; mkN "explosão" ; } ; --*
lin blast_2_V2 = mkV2 (mkV "estrelar") ; --*
lin blast_3_N = variants {mkN "rajada" ; mkN "ventania" ; } ; --*
lin blast_4_N = mkN "explosão" ; --*
lin blast_5_V2 = variants {mkV2 (mkV "dinamitar") ; mkV2 (mkV "explodir") ; } ; --*
lin blast_6_N = variants {mkN "ataque" ; mkN "fogo" ; } ; --*
lin blast_7_V = variants {mkV "atirar" ; mkV "disparar" ; } ; --*
lin blast_8_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "crucificar") ; } ; --*
lin blastema_N = mkN "Blastema" ; --*
lin blast_furnace_N = mkN "furnace" ; --*
lin blastomere_N = variants {mkN "blastómero" ; mkN "Blastômero" ; } ; --*
lin blastomycosis_N = mkN "Blastomicose" ; --*
lin blastospheric_A = mkA "blastular" ; --*
lin blastula_N = mkN "blástula" ; --*
lin blatant_2_A = mkA "clamoroso" ; --*
lin blaxploitation_N = mkN "Blaxploitation" ; --*
lin blaze_1_N = mkN "labareda" ; --*
lin blaze_1_V = mkV "coriscar" ; --*
lin blaze_2_N = mkN "inferno" ; --*
lin blaze_3_V = mkV "incendiar" ; --*
lin blaze_4_N = variants {mkN "brilho" ; mkN "clarão" ; } ; --*
lin blazon_N = variants {mkN "brasão" ; mkN "of" ; } ; --*
lin blazonry_N = variants {mkN "brasão" ; mkN "of" ; } ; --*
lin blazon_V2 = mkV2 (mkV "adornar") ; --*
lin bleach_1_N = mkN "descorante" ; --*
lin bleach_1_V2 = variants {mkV2 (mkV "descolorir") ; mkV2 (mkV "out") ; mkV2 (mkV "oxigenar") ; } ; --*
lin bleach_2_N = variants {mkN "agent" ; mkN "descorante" ; mkN "Lixívia" ; } ; --*
lin bleach_3_N = mkN "processo" ; --*
lin bleachers_N = mkN "arquibancada" ; --*
lin bleak_1_A = variants {mkA "escalvado" ; mkA "pálida" ; mkA "sombrio" ; } ; --*
lin bleak_2_A = variants {mkA "árido" ; mkA "desolado" ; mkA "estéril" ; } ; --*
lin bleakness_N = mkN "desolação" ; --*
lin bleary_1_A = mkA "exausto" ; --*
lin bleary_eyed_1_A = mkA "exausto" ; --*
lin bleat_2_V = mkV "balir" ; --*
lin bleed_1_V2 = variants {mkV2 (mkV "blood") ; mkV2 (mkV "sangrar") ; } ; --*
lin bleed_1_V = variants {mkV "blood" ; mkV "sangrar" ; } ; --*
lin bleed_1_VS = variants {mkVS (mkV "blood") ; mkVS (mkV "sangrar") ; } ; --*
lin bleeding_N = variants {mkN "hemorragia" ; mkN "sangramento" ; } ; --*
lin bleep_N = variants {mkN "assobio" ; mkN "Beep" ; } ; --*
lin blemish_1_V2 = mkV2 (mkV "desfigurar") ; --*
lin blemish_3_V2 = variants {mkV2 (mkV "estragar") ; mkV2 (mkV "quebrar") ; } ; --*
lin blemish_N = mkN "defeito" ; --*
lin blench_V = variants {mkV "clarear" ; mkV "empalidecer" ; } ; --*
lin blend_1_N = mkN "mistura" ; --*
lin blend_1_V = variants {mkV "mesclar" ; mkV "misturar" ; } ; --*
lin blend_2_N = variants {mkN "Palavra-valise" ; mkN "word" ; } ; --*
lin blend_2_V = variants {mkV "combinar" ; mkV "in" ; } ; --*
lin blend_3_N = mkN "mistura" ; --*
lin blend_3_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin blender_N = mkN "liquidificador" ; --*
lin blend_V2 = variants {mkV2 (mkV "mesclar") ; mkV2 (mkV "misturar") ; } ; --*
lin blepharitis_N = mkN "blefarite" ; --*
lin bless_1_V2 = variants {mkV2 (mkV "abençoar") ; mkV2 (mkV "bendizer") ; mkV2 (mkV "benzer") ; } ; --*
lin bless_2_V2 = variants {mkV2 (mkV "abençoar") ; mkV2 (mkV "bendizer") ; } ; --*
lin bless_4_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "santificar") ; } ; --*
lin blessing_1_N = variants {mkN "aprovaçã0" ; mkN "aprovação" ; } ; --*
lin blessing_2_N = variants {mkN "benção" ; mkN "bênção" ; } ; --*
lin blessing_3_N = mkN "bênção" ; --*
lin blessing_4_N = mkN "bênção" ; --*
lin blessing_5_N = mkN "bênção" ; --*
lin bleu_N = variants {mkN "cheese" ; mkN "Queijo" ; } ; --*
lin blighter_1_N = mkN "peste" ; --*
lin blighter_2_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin blight_V2 = mkV2 (mkV "empestear") ; --*
lin blind_1_A = variants {mkA "cego" ; mkA "invisual" ; } ; --*
lin blind_1_V2 = mkV2 (mkV "encandear") ; --*
lin blind_2_A = mkA "cega" ; --*
lin blind_2_V2 = mkV2 (mkV "cegar") ; --*
lin blind_3_N = mkN "cortina" ; --*
lin blind_4_N = variants {mkN "estratagema" ; mkN "socapa" ; mkN "subterfúgio" ; mkN "tramóia" ; } ; --*
lin blindfold_N = mkN "venda" ; --*
lin blindfold_V2 = mkV2 (mkV "vendar") ; --*
lin blindness_N = variants {mkN "cegueira" ; mkN "Cegueira" ; } ; --*
lin blindworm_1_N = variants {mkN "ânguis" ; mkN "fragilis" ; mkN "licranço" ; } ; --*
lin blindworm_2_N = variants {mkN "gimnofiono" ; mkN "Gymnophiona" ; } ; --*
lin blini_1_N = mkN "blini" ; --*
lin blink_1_V = variants {mkV "pestanejar" ; mkV "piscar" ; } ; --*
lin blink_2_V = variants {mkV "away" ; mkV "piscar" ; } ; --*
lin blink_3_V = variants {mkV "cintilar" ; mkV "piscar" ; } ; --*
lin blinker_2_N = variants {mkN "indicator" ; mkN "seta" ; mkN "signal" ; } ; --*
lin blink_N = variants {mkN "blink" ; mkN "piscamento" ; } ; --*
lin bliss_N = variants {mkN "êxtase" ; mkN "heaven" ; mkN "nas" ; mkN "nine" ; mkN "on" ; } ; --*
lin blister_1_V = mkV "empolar" ; --*
lin blister_3_N = mkN "bolha" ; --*
lin blister_3_V2 = mkV2 (mkV "fazer") ; --*
lin blithe_2_A = mkA "alegre" ; --*
lin blithesome_A = mkA "alegre" ; --*
lin blitz_2_N = variants {mkN "blitzkrieg" ; mkN "Blitzkrieg" ; mkN "guerra" ; } ; --*
lin blizzard_1_N = variants {mkN "nevão" ; mkN "nevasca" ; mkN "tempestade" ; } ; --*
lin bloat_N = variants {mkN "inchaço" ; mkN "Síndrome" ; } ; --*
lin block_10_N = mkN "obstáculo" ; --*
lin block_10_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "entupir") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "ocluir") ; mkV2 (mkV "tapar") ; mkV2 (mkV "trancar") ; mkV2 (mkV "up") ; } ; --*
lin block_12_V2 = variants {mkV2 (mkV "bloquear") ; mkV2 (mkV "defletir") ; mkV2 (mkV "impedir") ; } ; --*
lin block_13_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "esquecer") ; mkV2 (mkV "out") ; } ; --*
lin block_16_V2 = mkV2 (mkV "congelar") ; --*
lin block_1_N = variants {mkN "bloco" ; mkN "tijolos" ; } ; --*
lin block_1_V2 = variants {mkV2 (mkV "barricar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "interditar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin block_2_N = variants {mkN "block" ; mkN "bloco" ; mkN "quarteirão" ; } ; --*
lin block_2_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin block_3_N = variants {mkN "bloco" ; mkN "cubo" ; } ; --*
lin block_3_V2 = variants {mkV2 (mkV "parar") ; mkV2 (mkV "travar") ; } ; --*
lin block_4_N = variants {mkN "conjunto" ; mkN "grupo" ; } ; --*
lin block_7_V2 = mkV2 (mkV "tapar") ; --*
lin block_8_N = variants {mkN "block" ; mkN "polia" ; mkN "Polia" ; mkN "roldana" ; } ; --*
lin block_9_N = variants {mkN "block" ; mkN "Bloco" ; } ; --*
lin blockade_1_N = mkN "bloqueio" ; --*
lin blockade_1_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin blockade_2_N = mkN "obstáculo" ; --*
lin blockade_2_V2 = variants {mkV2 (mkV "barricar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "interditar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin blockage_2_N = mkN "obstáculo" ; --*
lin blockbuster_2_N = variants {mkN "arrasa-quarteirão" ; mkN "hit" ; } ; --*
lin blocker_2_N = variants {mkN "agent" ; mkN "bloqueador" ; } ; --*
lin blockheaded_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "imbecil" ; } ; --*
lin blockhead_N = mkN "cabeça" ; --*
lin blockhouse_N = mkN "blocausse" ; --*
lin blogger_N = variants {mkN "blogueira" ; mkN "blogueiro" ; mkN "bloguista" ; } ; --*
lin blog_N = variants {mkN "blog" ; mkN "Blogs" ; mkN "blogue" ; mkN "log" ; } ; --*
lin bloke_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin blond_A = variants {mkA "flavo" ; mkA "loiro" ; } ; --*
lin blonde_1_A = variants {mkA "flavo" ; mkA "loiro" ; } ; --*
lin blonde_1_N = variants {mkN "Cabelo" ; mkN "loira" ; } ; --*
lin blood_1_N = variants {mkN "sangue" ; mkN "Sangue" ; } ; --*
lin blood_4_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin blood_bath_N = variants {mkN "banho" ; mkN "massacre" ; } ; --*
lin bloodcurdling_A = mkA "pesadelar" ; --*
lin blood_group_N = variants {mkN "group" ; mkN "type" ; } ; --*
lin bloodhound_N = mkN "Cão" ; --*
lin bloodless_2_A = mkA "incruento" ; --*
lin blood_letting_1_N = mkN "Flebotomia" ; --*
lin blood_letting_2_N = variants {mkN "banho" ; mkN "massacre" ; } ; --*
lin blood_poisoning_N = variants {mkN "poisoning" ; mkN "septicemia" ; } ; --*
lin blood_pressure_N = mkN "pressure" ; --*
lin bloodroot_N = variants {mkN "canadensis" ; mkN "Sanguinaria" ; } ; --*
lin bloodshed_1_N = variants {mkN "massacre" ; mkN "sangue" ; } ; --*
lin bloodshed_2_N = variants {mkN "banho" ; mkN "massacre" ; } ; --*
lin bloodstained_A = mkA "ensanguentado" ; --*
lin bloodstone_N = mkN "Heliotropo" ; --*
lin bloodstream_1_N = variants {mkN "corrente" ; mkN "stream" ; } ; --*
lin bloodsucker_N = mkN "sanguessuga" ; --*
lin bloodsucking_2_A = mkA "parasita" ; --*
lin blood_transfusion_N = variants {mkN "transfusão" ; mkN "Transfusão" ; mkN "transfusion" ; } ; --*
lin blood_type_N = variants {mkN "group" ; mkN "type" ; } ; --*
lin blood_vessel_N = mkN "vessel" ; --*
lin bloody_1_A = variants {mkA "sangrento" ; mkA "sangüíneo" ; } ; --*
lin bloody_2_A = variants {mkA "maldito" ; mkA "puto" ; } ; --*
lin bloom_1_N = mkN "floração" ; --*
lin bloom_2_N = variants {mkN "flor" ; mkN "floração" ; mkN "florada" ; mkN "flores" ; mkN "Flores" ; } ; --*
lin bloom_5_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin bloom_6_N = mkN "Eflorescência" ; --*
lin bloomer_2_N = variants {mkN "bobagem" ; mkN "fiasco" ; mkN "gafe" ; } ; --*
lin bloomers_N = variants {mkN "calça" ; mkN "calcinha" ; mkN "roupa" ; } ; --*
lin blooming_N = mkN "floração" ; --*
lin bloom_V = variants {mkV "desabrochar" ; mkV "florescer" ; mkV "florir" ; } ; --*
lin blossom_1_N = variants {mkN "flor" ; mkN "floração" ; mkN "florada" ; mkN "flores" ; mkN "Flores" ; } ; --*
lin blossom_1_V = variants {mkV "desabrochar" ; mkV "florescer" ; mkV "florir" ; } ; --*
lin blossom_2_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin blossom_2_V = variants {mkV "florescer" ; mkV "forth" ; mkV "out" ; } ; --*
lin blossoming_N = mkN "floração" ; --*
lin blot_1_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin blot_2_N = variants {mkN "mácula" ; mkN "mancha" ; } ; --*
lin blot_2_V2 = mkV2 (mkV "manchar") ; --*
lin blotch_N = mkN "mancha" ; --*
lin blot_out_V = variants {mkV "apagar" ; mkV "esconder" ; mkV "out" ; } ; --*
lin blotter_1_N = variants {mkN "mata-borrão" ; mkN "paper" ; } ; --*
lin blotting_paper_N = variants {mkN "mata-borrão" ; mkN "paper" ; } ; --*
lin blouse_N = variants {mkN "blusa" ; mkN "camisa" ; } ; --*
lin blow_13_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "mamar") ; } ; --*
lin blow_13_V = variants {mkV "down" ; mkV "mamar" ; } ; --*
lin blow_1_N = variants {mkN "golpe" ; mkN "porrada" ; } ; --*
lin blow_1_V = variants {mkV "assoprar" ; mkV "soprar" ; } ; --*
lin blow_20_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin blow_20_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin blow_22_V = variants {mkV "estourar" ; mkV "out" ; } ; --*
lin blow_2_N = mkN "choque" ; --*
lin blow_2_V = variants {mkV "soprar" ; mkV "ventar" ; } ; --*
lin blow_3_N = variants {mkN "eye" ; mkN "revés" ; } ; --*
lin blow_4_V = variants {mkV "adrift" ; mkV "nadar" ; mkV "vagar" ; } ; --*
lin blow_5_N = variants {mkN "rajada" ; mkN "ventania" ; } ; --*
lin blow_6_V2 = mkV2 (mkV "fundir") ; --*
lin blow_8_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin blow_9_V2 = mkV2 (mkV "desperdiçar") ; --*
lin blower_2_N = variants {mkN "fan" ; mkN "soprador" ; } ; --*
lin blower_3_N = variants {mkN "cetáceos" ; mkN "mammal" ; } ; --*
lin blowgun_N = variants {mkN "tube" ; mkN "zarabatana" ; } ; --*
lin blowhole_2_N = mkN "espiráculo" ; --*
lin blowing_N = mkN "sopro" ; --*
lin blowlamp_N = mkN "maçarico" ; --*
lin blow_out_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin blowout_3_N = variants {mkN "affair" ; mkN "gala" ; } ; --*
lin blow_out_3_V2 = mkV2 (mkV "out") ; --*
lin blow_out_V = variants {mkV "estourar" ; mkV "out" ; } ; --*
lin blow_over_V = variants {mkV "desaparecer" ; mkV "esvanecer" ; mkV "off" ; mkV "over" ; } ; --*
lin blowpipe_1_N = variants {mkN "tube" ; mkN "zarabatana" ; } ; --*
lin blowpipe_2_N = variants {mkN "tube" ; mkN "zarabatana" ; } ; --*
lin blowtorch_N = mkN "maçarico" ; --*
lin blowtube_1_N = variants {mkN "tube" ; mkN "zarabatana" ; } ; --*
lin blowtube_2_N = variants {mkN "tube" ; mkN "zarabatana" ; } ; --*
lin blow_up_1_N = mkN "explosão" ; --*
lin blow_up_1_V = variants {mkV "detonar" ; mkV "off" ; mkV "up" ; } ; --*
lin blow_up_2_N = mkN "ebulição" ; --*
lin blow_up_2_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "up") ; } ; --*
lin blow_up_3_N = variants {mkN "alargamento" ; mkN "ampliação" ; } ; --*
lin blow_up_3_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "ballistic") ; mkV2 (mkV "kittens") ; mkV2 (mkV "off") ; mkV2 (mkV "one's") ; mkV2 (mkV "ter") ; mkV2 (mkV "the") ; mkV2 (mkV "up") ; } ; --*
lin blow_up_3_V = variants {mkV "a" ; mkV "ballistic" ; mkV "kittens" ; mkV "off" ; mkV "one's" ; mkV "ter" ; mkV "the" ; mkV "up" ; } ; --*
lin blow_up_4_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin blow_up_4_V = variants {mkV "embelezar" ; mkV "engrandecer" ; mkV "up" ; } ; --*
lin blow_up_5_V = variants {mkV "detonar" ; mkV "up" ; } ; --*
lin blow_up_6_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "expandir") ; mkV2 (mkV "up") ; } ; --*
lin blow_up_7_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "inflar") ; mkV2 (mkV "up") ; } ; --*
lin blowy_A = mkA "ventoso" ; --*
lin blubber_2_N = variants {mkN "corpulência" ; mkN "excesso" ; mkN "obesidade" ; } ; --*
lin blucher_1_N = variants {mkN "Blucher" ; mkN "Gebhard" ; mkN "L." ; mkN "Leberecht" ; } ; --*
lin bludgeon_1_V2 = mkV2 (mkV "cacetear") ; --*
lin bludgeon_2_V2 = mkV2 (mkV "cacetear") ; --*
lin bludgeon_N = variants {mkN "cacete" ; mkN "clava" ; } ; --*
lin blue_1_A = variants {mkA "azul" ; mkA "azulado" ; } ; --*
lin blue_1_N = mkN "azul" ; --*
lin blue_2_A = mkA "azul" ; --*
lin blue_3_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin blue_5_A = mkA "verde" ; --*
lin blue_5_N = mkN "azul" ; --*
lin blue_6_A = variants {mkA "aristocrata" ; mkA "aristocrático" ; } ; --*
lin blue_7_A = mkA "puritânico" ; --*
lin blue_8_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin blueberry_1_N = variants {mkN "bush" ; mkN "mirtilo" ; } ; --*
lin blueberry_2_N = mkN "mirtilo" ; --*
lin bluebottle_1_N = variants {mkN "aciano" ; mkN "button" ; mkN "cyanus" ; } ; --*
lin bluefish_1_N = variants {mkN "Pomatomidae" ; mkN "saltatrix" ; } ; --*
lin blue_jacket_N = variants {mkN "boy" ; mkN "man" ; mkN "marinheiro" ; } ; --*
lin blueprint_1_N = variants {mkN "desenho" ; mkN "esquema" ; mkN "figura" ; mkN "ilustração" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin blueprint_2_N = variants {mkN "planta" ; mkN "Planta" ; } ; --*
lin blues_1_N = variants {mkN "blues" ; mkN "Blues" ; } ; --*
lin bluetongue_N = variants {mkN "febre" ; mkN "língua" ; } ; --*
lin blueweed_N = variants {mkN "bugloss" ; mkN "devil" ; mkN "thistle" ; mkN "viperina" ; mkN "vulgare" ; } ; --*
lin bluff_1_A = mkA "perpendicular" ; --*
lin bluff_1_N = mkN "falésia" ; --*
lin bluff_1_V2 = variants {mkV2 (mkV "blefar") ; mkV2 (mkV "out") ; } ; --*
lin bluff_1_V = variants {mkV "blefar" ; mkV "out" ; } ; --*
lin bluff_2_N = mkN "blefe" ; --*
lin bluing_1_N = mkN "azul" ; --*
lin bluish_1_A = variants {mkA "azul" ; mkA "azulado" ; } ; --*
lin blunder_1_V = variants {mkV "pisar" ; mkV "the" ; } ; --*
lin blunder_3_V2 = variants {mkV2 (mkV "ejacular") ; mkV2 (mkV "out") ; } ; --*
lin blunder_N = variants {mkN "bobagem" ; mkN "fiasco" ; mkN "gafe" ; } ; --*
lin blunt_2_A = mkA "desafiado" ; --*
lin blunt_2_V2 = mkV2 (mkV "anestesiar") ; --*
lin blunt_3_A = mkA "correto" ; --*
lin blunt_3_V2 = variants {mkV2 (mkV "desamolar") ; mkV2 (mkV "perder") ; } ; --*
lin blunt_5_V2 = variants {mkV2 (mkV "amortecer") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin blur_1_V2 = variants {mkV2 (mkV "desfocar") ; mkV2 (mkV "over") ; } ; --*
lin blur_1_V = variants {mkV "desfocar" ; mkV "over" ; } ; --*
lin blur_2_V2 = mkV2 (mkV "embaçar") ; --*
lin blur_3_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "obnubilar") ; mkV2 (mkV "obscurecer") ; } ; --*
lin blur_4_V2 = variants {mkV2 (mkV "lambuzar") ; mkV2 (mkV "manchar") ; } ; --*
lin blur_4_V = variants {mkV "lambuzar" ; mkV "manchar" ; } ; --*
lin blur_N = variants {mkN "borrado" ; mkN "borrão" ; } ; --*
lin blurt_out_V2 = variants {mkV2 (mkV "ejacular") ; mkV2 (mkV "out") ; } ; --*
lin blush_1_V = variants {mkV "avermelhar" ; mkV "corar" ; mkV "enrubescer" ; mkV "rosar" ; mkV "ruborizar" ; } ; --*
lin blushful_1_A = mkA "rubro" ; --*
lin blushful_2_A = mkA "rosado" ; --*
lin bluster_1_V = mkV "ventar" ; --*
lin bluster_2_N = mkN "bravata" ; --*
lin bluster_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin bluster_2_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin boa_1_N = variants {mkN "boa" ; mkN "jibóia" ; } ; --*
lin boa_2_N = mkN "jibóia" ; --*
lin boar_1_N = variants {mkN "barrão" ; mkN "boar" ; mkN "javali" ; mkN "scrofa" ; } ; --*
lin boar_2_N = variants {mkN "barrão" ; mkN "berrão" ; mkN "cachaço" ; mkN "javali" ; } ; --*
lin board_1_N = variants {mkN "comité" ; mkN "comitê" ; mkN "conselho" ; mkN "junta" ; } ; --*
lin board_1_V2 = variants {mkV2 (mkV "embarcar") ; mkV2 (mkV "on") ; } ; --*
lin board_2_N = variants {mkN "prancha" ; mkN "tábua" ; } ; --*
lin board_3_N = variants {mkN "lousa" ; mkN "quadro" ; mkN "tábua" ; } ; --*
lin board_3_V2 = mkV2 (mkV "hospedar") ; --*
lin board_4_N = mkN "mesa" ; --*
lin board_6_N = variants {mkN "mesa" ; mkN "table" ; } ; --*
lin board_7_N = variants {mkN "board" ; mkN "panel" ; mkN "tabuleiro" ; } ; --*
lin board_8_N = variants {mkN "board" ; mkN "card" ; mkN "placa" ; } ; --*
lin board_9_N = mkN "tabuleiro" ; --*
lin boarding_1_N = mkN "embarque" ; --*
lin boarding_card_N = variants {mkN "card" ; mkN "pass" ; } ; --*
lin boarding_house_1_N = variants {mkN "house" ; mkN "pensão" ; } ; --*
lin boarding_school_N = mkN "school" ; --*
lin board_up_V2 = mkV2 (mkV "up") ; --*
lin boast_1_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin boast_1_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin boast_1_VS = variants {mkVS (mkV "a") ; mkVS (mkV "fanfarrear") ; mkVS (mkV "ostentar") ; mkVS (mkV "vangloriar-se") ; } ; --*
lin boast_2_V2 = variants {mkV2 (mkV "constar") ; mkV2 (mkV "gabar") ; mkV2 (mkV "gabar-se") ; } ; --*
lin boaster_N = mkN "pimpão" ; --*
lin boastfulness_N = mkN "vanglória" ; --*
lin boast_N = mkN "ostentamento" ; --*
lin boat_1_N = variants {mkN "barco" ; mkN "batel" ; mkN "bote" ; mkN "escaler" ; mkN "navio" ; } ; --*
lin boat_2_N = variants {mkN "boat" ; mkN "holder" ; mkN "molheira" ; } ; --*
lin boater_1_N = variants {mkN "chapéu-panamá" ; mkN "hat" ; } ; --*
lin boatswain_N = mkN "contramestre" ; --*
lin bob_3_N = variants {mkN "bobsleigh" ; mkN "Bobsleigh" ; } ; --*
lin bob_3_PN = variants {mkPN "bobsleigh" ; mkPN "Bobsleigh" ; } ; --*
lin bobbin_N = variants {mkN "bobina" ; mkN "carretel" ; mkN "carrinho" ; } ; --*
lin bobcat_N = variants {mkN "lince-pardo" ; mkN "lynx" ; mkN "rufus" ; } ; --*
lin bobsled_1_N = variants {mkN "bobsled" ; mkN "bobsleigh" ; } ; --*
lin bobsled_2_N = variants {mkN "bobsleigh" ; mkN "Bobsleigh" ; } ; --*
lin bobsleigh_1_N = variants {mkN "bobsled" ; mkN "bobsleigh" ; } ; --*
lin bobsleigh_2_N = variants {mkN "bobsleigh" ; mkN "Bobsleigh" ; } ; --*
lin bobtail_2_N = variants {mkN "English" ; mkN "Old" ; } ; --*
lin bodacious_2_A = mkA "insolente" ; --*
lin bode_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin bodied_2_A = mkA "corporativo" ; --*
lin bodily_1_A = mkA "corpóreo" ; --*
lin bodily_2_A = variants {mkA "corpóreo" ; mkA "somático" ; } ; --*
lin bodily_3_A = mkA "corporal" ; --*
lin boding_N = mkN "pressentimento" ; --*
lin bodkin_1_N = mkN "punhal" ; --*
lin body_11_N = variants {mkN "carroçaria" ; mkN "carroceria" ; } ; --*
lin body_1_N = variants {mkN "corpo" ; mkN "structure" ; } ; --*
lin body_2_N = variants {mkN "comunidade" ; mkN "grupo" ; } ; --*
lin body_3_N = variants {mkN "body" ; mkN "cadáver" ; mkN "corpo" ; mkN "morto" ; } ; --*
lin body_4_N = mkN "corpo" ; --*
lin body_5_N = variants {mkN "corpo" ; mkN "torso" ; mkN "tronco" ; mkN "Tronco" ; } ; --*
lin body_7_N = variants {mkN "consistência" ; mkN "viscosidade" ; } ; --*
lin bodybuilder_N = variants {mkN "builder" ; mkN "culturista" ; } ; --*
lin bodybuilding_N = variants {mkN "building" ; mkN "culturismo" ; mkN "exercise" ; mkN "fisiculturismo" ; } ; --*
lin bodyguard_1_N = mkN "guarda-costas" ; --*
lin bodyguard_2_N = variants {mkN "guarda" ; mkN "guarda-costas" ; } ; --*
lin boer_N = variants {mkN "Africânder" ; mkN "bôer" ; } ; --*
lin boffin_N = mkN "cientista" ; --*
lin bog_down_2_V = variants {mkV "atolar" ; mkV "down" ; } ; --*
lin bog_down_3_V = variants {mkV "atolar" ; mkV "down" ; mkV "stuck" ; mkV "to" ; } ; --*
lin bogey_2_N = mkN "meleca" ; --*
lin bogey_3_N = variants {mkN "bogie" ; mkN "Truque" ; } ; --*
lin bogeyman_1_N = mkN "bicho" ; --*
lin boggle_3_V = variants {mkV "over" ; mkV "surpreender" ; } ; --*
lin bogie_2_N = variants {mkN "bogie" ; mkN "Truque" ; } ; --*
lin bog_N = variants {mkN "bog" ; mkN "Paul" ; } ; --*
lin bogota_PN = variants {mkPN "Bogota" ; mkPN "of" ; } ; --*
lin bogus_A = mkA "farsante" ; --*
lin bogy_1_N = variants {mkN "bogie" ; mkN "Truque" ; } ; --*
lin bohemia_1_N = variants {mkN "Boémia" ; mkN "Boêmia" ; } ; --*
lin bohemian_1_A = mkA "boêmio" ; --*
lin bohemian_1_N = variants {mkN "cigana" ; mkN "cigano" ; mkN "Rom" ; } ; --*
lin bohemian_2_N = mkN "boêmio" ; --*
lin bohrium_N = variants {mkN "107" ; mkN "bóhrio" ; mkN "number" ; } ; --*
lin boil_1_N = variants {mkN "abcesso" ; mkN "bubão" ; mkN "carbúnculo" ; mkN "cisto" ; mkN "furúnculo" ; mkN "íngua" ; mkN "pústula" ; mkN "tumor" ; } ; --*
lin boil_1_V = mkV "ebulir" ; --*
lin boil_2_N = variants {mkN "fervura" ; mkN "point" ; } ; --*
lin boil_2_V2 = mkV2 (mkV "ferver") ; --*
lin boil_3_V2 = mkV2 (mkV "ferver") ; --*
lin boil_4_V = variants {mkV "agitar" ; mkV "bater" ; } ; --*
lin boil_5_V = mkV "estar" ; --*
lin boil_down_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; } ; --*
lin boiler_1_N = variants {mkN "boiler" ; mkN "caldeira" ; } ; --*
lin boiler_2_N = variants {mkN "bule" ; mkN "caldeiras" ; mkN "chaleira" ; mkN "Chaleira" ; } ; --*
lin boilersuit_N = variants {mkN "macacão" ; mkN "suit" ; } ; --*
lin boiling_1_N = variants {mkN "ebulição" ; mkN "fervura" ; } ; --*
lin boiling_point_1_N = variants {mkN "fervura" ; mkN "point" ; } ; --*
lin boisterous_1_A = mkA "descontrolado" ; --*
lin boisterousness_1_N = variants {mkN "ressaca" ; mkN "turbulência" ; } ; --*
lin bola_2_N = mkN "boleadeira" ; --*
lin bold_1_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "bravo" ; mkA "corajoso" ; mkA "destemido" ; } ; --*
lin bold_3_A = mkA "perpendicular" ; --*
lin boldness_1_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin boldness_2_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin bole_2_N = variants {mkN "tronco" ; mkN "Tronco" ; mkN "trunk" ; } ; --*
lin bolero_1_N = variants {mkN "bolero" ; mkN "Bolero" ; } ; --*
lin bolivar_2_N = variants {mkN "Bolivar" ; mkN "Libertador" ; mkN "Simón" ; } ; --*
lin bolivia_1_N = variants {mkN "Bolivia" ; mkN "of" ; } ; --*
lin bolivia_1_PN = variants {mkPN "Bolivia" ; mkPN "of" ; } ; --*
lin bolivian_A = mkA "boliviano" ; --*
lin bolivian_N = mkN "boliviano" ; --*
lin bollock_1_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin bologna_1_N = variants {mkN "Bologna" ; mkN "Bolonha" ; } ; --*
lin bologna_1_PN = variants {mkPN "Bologna" ; mkPN "Bolonha" ; } ; --*
lin bolographic_A = mkA "bolométrico" ; --*
lin bolometer_N = variants {mkN "Bolometro" ; mkN "Bolómetro" ; mkN "Bolômetro" ; } ; --*
lin boloney_N = mkN "mexerico" ; --*
lin bolshevik_2_N = variants {mkN "bolchevique" ; mkN "Bolchevique" ; mkN "Bolcheviques" ; mkN "bolchevista" ; } ; --*
lin bolt_1_Adv = mkAdv "severamente" ; --*
lin bolt_1_N = variants {mkN "of" ; mkN "raio" ; mkN "trovão" ; mkN "trovoadas" ; } ; --*
lin bolt_3_V2 = mkV2 (mkV "devorar") ; --*
lin bolt_3_V = mkV "devorar" ; --*
lin bolt_4_V = variants {mkV "desaparecer" ; mkV "escapar" ; mkV "esconder-se" ; mkV "off" ; mkV "sumir" ; } ; --*
lin bolt_6_N = variants {mkN "cavilha" ; mkN "parafuso" ; mkN "perno" ; } ; --*
lin bolt_6_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "tragar") ; } ; --*
lin bolzano_PN = variants {mkPN "Bolzano" ; mkPN "Tirol" ; } ; --*
lin bomb_1_N = variants {mkN "bomba" ; mkN "Bombas" ; } ; --*
lin bombard_2_V2 = variants {mkV2 (mkV "bombardear") ; mkV2 (mkV "bombear") ; } ; --*
lin bombardment_2_N = variants {mkN "bombardeio" ; mkN "fire" ; } ; --*
lin bombardment_4_N = mkN "bombardeio" ; --*
lin bombardment_of_N2 = mkN2 (mkN "barragem") noPrep ; --*
lin bombardon_2_N = mkN "bombardeie" ; --*
lin bombastic_1_A = mkA "bombástico" ; --*
lin bombay_PN = variants {mkPN "Bombaim" ; mkPN "Bombaím" ; } ; --*
lin bomber_1_N = variants {mkN "Aviões" ; mkN "bombardeiro" ; } ; --*
lin bomber_2_N = mkN "homem-bomba" ; --*
lin bombing_1_N = mkN "bombardeio" ; --*
lin bombshell_3_N = mkN "gata" ; --*
lin bomb_V2 = variants {mkV2 (mkV "bombardear") ; mkV2 (mkV "bombear") ; } ; --*
lin bomb_V = variants {mkV "it" ; mkV "reprovar" ; } ; --*
lin bona_fide_2_A = variants {mkA "autêntico" ; mkA "fide" ; mkA "genuíno" ; } ; --*
lin bonanza_2_N = variants {mkN "dádiva" ; mkN "from" ; mkN "rush" ; } ; --*
lin bonbon_N = variants {mkN "bombom" ; mkN "caramelo" ; } ; --*
lin bond_1_N = variants {mkN "bond" ; mkN "ligação" ; } ; --*
lin bond_1_V2 = variants {mkV2 (mkV "aderir") ; mkV2 (mkV "colar") ; mkV2 (mkV "fast") ; mkV2 (mkV "grudar") ; mkV2 (mkV "to") ; } ; --*
lin bond_2_N = variants {mkN "certificate" ; mkN "Obrigação" ; mkN "Títulos" ; } ; --*
lin bond_2_V2 = variants {mkV2 (mkV "aproximar") ; mkV2 (mkV "aproximar-se") ; mkV2 (mkV "criar") ; mkV2 (mkV "ligar") ; } ; --*
lin bond_3_N = mkN "ligação" ; --*
lin bond_4_N = variants {mkN "bond" ; mkN "caução" ; mkN "fiança" ; } ; --*
lin bond_4_V2 = variants {mkV2 (mkV "ligar") ; mkV2 (mkV "together") ; } ; --*
lin bond_5_N = variants {mkN "algema" ; mkN "cadeia" ; mkN "grilhão" ; } ; --*
lin bond_6_N = mkN "ligação" ; --*
lin bond_9_PN = variants {mkPN "Bond" ; mkPN "James" ; } ; --*
lin bondage_1_N = mkN "sujeição" ; --*
lin bondage_2_N = variants {mkN "escravidão" ; mkN "jugo" ; } ; --*
lin bondage_3_N = mkN "Bondage" ; --*
lin bondman_2_N = mkN "escravo" ; --*
lin bondsman_1_N = mkN "escravo" ; --*
lin bondwoman_2_N = mkN "escrava" ; --*
lin bone_1_N = mkN "osso" ; --*
lin bone_3_N = mkN "pérola" ; --*
lin bonefish_N = variants {mkN "Ubarana" ; mkN "vulpes" ; } ; --*
lin bone_head_N = mkN "cabeça" ; --*
lin boner_N = variants {mkN "bobagem" ; mkN "fiasco" ; mkN "gafe" ; } ; --*
lin boneset_1_N = variants {mkN "comfrey" ; mkN "Confrei" ; mkN "officinale" ; } ; --*
lin bones_N = variants {mkN "castanhola" ; mkN "cymbals" ; } ; --*
lin bone_up_V = variants {mkV "away" ; mkV "marrar" ; mkV "up" ; } ; --*
lin bone_V2 = mkV2 (mkV "desossar") ; --*
lin bonfire_N = mkN "fogueira" ; --*
lin bongo_1_N = variants {mkN "bongô" ; mkN "drum" ; } ; --*
lin bongo_2_N = variants {mkN "eurycerus" ; mkN "Tragelaphus" ; } ; --*
lin bonhomie_N = variants {mkN "afabilidade" ; mkN "amabilidade" ; mkN "doçura" ; } ; --*
lin bonkers_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin bonnet_1_N = variants {mkN "bonnet" ; mkN "capote" ; } ; --*
lin bonnet_2_N = variants {mkN "capô" ; mkN "capuz" ; mkN "coberta" ; } ; --*
lin bonn_PN = variants {mkPN "Bona" ; mkPN "Bonn" ; } ; --*
lin bonny_1_A = variants {mkA "atraente" ; mkA "lindo" ; } ; --*
lin bonsai_N = mkN "bonsai" ; --*
lin bonus_1_N = variants {mkN "bonificação" ; mkN "bônus" ; mkN "peteleco" ; } ; --*
lin bonus_2_N = variants {mkN "abono" ; mkN "bônus" ; mkN "incentivo" ; } ; --*
lin bony_1_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin bony_2_A = mkA "ósseo" ; --*
lin boob_1_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; } ; --*
lin boob_2_N = variants {mkN "mama" ; mkN "peito" ; mkN "seio" ; mkN "seios" ; mkN "teta" ; } ; --*
lin boob_V = variants {mkV "pisar" ; mkV "the" ; } ; --*
lin booby_1_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; } ; --*
lin booby_trap_1_N = variants {mkN "mine" ; mkN "trap" ; } ; --*
lin booby_trap_2_N = variants {mkN "obstáculo" ; mkN "trap" ; } ; --*
lin boodle_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin booger_1_N = mkN "bicho" ; --*
lin booger_2_N = mkN "macaco" ; --*
lin book_11_N = variants {mkN "álbum" ; mkN "livro" ; } ; --*
lin book_1_N = mkN "livro" ; --*
lin book_1_V2 = variants {mkV2 (mkV "agendar") ; mkV2 (mkV "reservar") ; } ; --*
lin book_2_N = variants {mkN "livro" ; mkN "livros" ; } ; --*
lin book_2_V2 = variants {mkV2 (mkV "inscrever-se") ; mkV2 (mkV "pedir") ; mkV2 (mkV "reservar") ; } ; --*
lin book_4_N = variants {mkN "guião" ; mkN "roteiro" ; mkN "script" ; } ; --*
lin book_5_N = variants {mkN "book" ; mkN "livro-caixa" ; mkN "of" ; } ; --*
lin book_8_N = variants {mkN "Alcorão" ; mkN "Al-corão" ; mkN "Al-Corão" ; } ; --*
lin book_9_N = variants {mkN "Bible" ; mkN "Bíblia" ; mkN "Book" ; mkN "of" ; mkN "Scripture" ; mkN "Writ" ; } ; --*
lin bookcase_N = mkN "Estante" ; --*
lin booker_N = variants {mkN "agent" ; mkN "booker" ; } ; --*
lin bookie_N = mkN "agenciador" ; --*
lin booking_2_N = mkN "reserva" ; --*
lin bookish_A = variants {mkA "estudioso" ; mkA "que" ; } ; --*
lin book_keeper_N = mkN "contador" ; --*
lin bookkeeping_N = variants {mkN "contabilidade" ; mkN "escrituração" ; } ; --*
lin booklet_N = variants {mkN "brochura" ; mkN "folheto" ; mkN "livreto" ; mkN "opúsculo" ; mkN "panfleto" ; } ; --*
lin bookmaker_2_N = mkN "agenciador" ; --*
lin bookmarker_N = variants {mkN "marcador" ; mkN "marca-livro" ; } ; --*
lin bookmark_N = variants {mkN "marcador" ; mkN "marca-livro" ; } ; --*
lin bookmobile_N = mkN "Biblioteca" ; --*
lin bookplate_N = variants {mkN "Ex-libris" ; mkN "libris" ; } ; --*
lin bookseller_N = mkN "livreiro" ; --*
lin bookshelf_N = mkN "estante" ; --*
lin bookshop_N = variants {mkN "livraria" ; mkN "Livrarias" ; } ; --*
lin bookstall_N = variants {mkN "livraria" ; mkN "Livrarias" ; } ; --*
lin bookstore_N = variants {mkN "livraria" ; mkN "Livrarias" ; } ; --*
lin bookworm_1_N = mkN "pedante" ; --*
lin boom_1_N = mkN "ribombo" ; --*
lin boom_2_N = mkN "boom" ; --*
lin boom_2_V2 = mkV2 (mkV "estrelar") ; --*
lin boom_3_N = variants {mkN "dádiva" ; mkN "from" ; mkN "rush" ; } ; --*
lin boom_3_V = variants {mkV "trovejar" ; mkV "trovoar" ; } ; --*
lin boom_5_N = mkN "retranca" ; --*
lin boom_5_V = mkV "vigorar" ; --*
lin boomerang_2_N = mkN "bumerangue" ; --*
lin boon_N = variants {mkN "benção" ; mkN "bênção" ; } ; --*
lin boor_N = mkN "indivíduo" ; --*
lin boost_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "up") ; } ; --*
lin boost_2_N = variants {mkN "aumento" ; mkN "increase" ; } ; --*
lin boost_2_V2 = mkV2 (mkV "aumentar") ; --*
lin boost_3_V2 = variants {mkV2 (mkV "encorajar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "promover") ; } ; --*
lin boost_4_V2 = mkV2 (mkV "aumentar") ; --*
lin boost_5_V2 = mkV2 (mkV "impulsionar") ; --*
lin booster_1_N = mkN "seguidor" ; --*
lin booster_2_N = variants {mkN "apoiador" ; mkN "impulsionador" ; mkN "promotor" ; } ; --*
lin booster_5_N = variants {mkN "booster" ; mkN "Foguete" ; mkN "rocket" ; mkN "unit" ; } ; --*
lin boot_1_N = variants {mkN "bota" ; mkN "calçado" ; } ; --*
lin boot_2_N = variants {mkN "compartment" ; mkN "mala" ; mkN "porta-bagagem" ; mkN "trunk" ; } ; --*
lin boot_2_V2 = variants {mkV2 (mkV "iniciar") ; mkV2 (mkV "up") ; } ; --*
lin boot_3_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin boot_7_N = mkN "chute" ; --*
lin booth_2_N = variants {mkN "cabine" ; mkN "quiosque" ; } ; --*
lin booth_3_N = variants {mkN "John" ; mkN "Wilkes" ; } ; --*
lin booth_4_N = variants {mkN "banca" ; mkN "bancas" ; mkN "estande" ; } ; --*
lin bootless_A = mkA "vão" ; --*
lin booty_N = variants {mkN "botim" ; mkN "espólio" ; mkN "money" ; mkN "pilhagem" ; mkN "rapina" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin boo_V = mkV "vaiar" ; --*
lin booze_N = variants {mkN "álcool" ; mkN "Barleycorn" ; mkN "drink" ; mkN "liquor" ; } ; --*
lin boozer_N = variants {mkN "alcoólatra" ; mkN "bêbado" ; mkN "borracho" ; } ; --*
lin booze_up_N = mkN "farra" ; --*
lin booze_V = variants {mkV "beber" ; mkV "tomar" ; } ; --*
lin bop_2_N = mkN "Bebop" ; --*
lin borage_1_N = variants {mkN "borragem" ; mkN "officinalis" ; } ; --*
lin borage_2_N = mkN "borragem" ; --*
lin borate_N = mkN "Borato" ; --*
lin borax_N = variants {mkN "Borax" ; mkN "bórax" ; } ; --*
lin bordeaux_1_N = variants {mkN "Bordeaux" ; mkN "Bordéus" ; } ; --*
lin bordeaux_1_PN = variants {mkPN "Bordeaux" ; mkPN "Bordéus" ; } ; --*
lin bordeaux_2_N = variants {mkN "Bordéus" ; mkN "Vinho" ; mkN "wine" ; } ; --*
lin bordeaux_2_PN = variants {mkPN "Bordéus" ; mkPN "Vinho" ; mkPN "wine" ; } ; --*
lin border_1_N = variants {mkN "borda" ; mkN "delimitação" ; mkN "fronteira" ; mkN "limite" ; mkN "line" ; } ; --*
lin border_1_V2 = variants {mkV2 (mkV "contornar") ; mkV2 (mkV "rodear") ; } ; --*
lin border_2_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "perímetro" ; } ; --*
lin border_2_V2 = variants {mkV2 (mkV "abeirar") ; mkV2 (mkV "beirar") ; mkV2 (mkV "bordejar") ; mkV2 (mkV "limitar") ; } ; --*
lin border_2_V = variants {mkV "abeirar" ; mkV "beirar" ; mkV "bordejar" ; mkV "limitar" ; } ; --*
lin border_3_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "margem" ; } ; --*
lin border_3_V2 = variants {mkV2 (mkV "emoldurar") ; mkV2 (mkV "in") ; } ; --*
lin border_4_N = mkN "borda" ; --*
lin border_5_N = variants {mkN "borda" ; mkN "margem" ; } ; --*
lin borderline_A = variants {mkA "fronteiriça" ; mkA "marginal" ; } ; --*
lin borderline_N = variants {mkN "borda" ; mkN "delimitação" ; mkN "fronteira" ; mkN "limite" ; mkN "line" ; } ; --*
lin bore_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "cansar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "entediar") ; mkV2 (mkV "fatigar") ; } ; --*
lin bore_1_V = variants {mkV "aborrecer" ; mkV "cansar" ; mkV "chatear" ; mkV "entediar" ; mkV "fatigar" ; } ; --*
lin bore_2_N = variants {mkN "bore" ; mkN "macaréu" ; } ; --*
lin bore_2_V2 = variants {mkV2 (mkV "cavar") ; mkV2 (mkV "furar") ; mkV2 (mkV "perfurar") ; } ; --*
lin bore_3_N = mkN "calibre" ; --*
lin bore_4_N = variants {mkN "berbequim" ; mkN "hole" ; } ; --*
lin bored_A = mkA "aborrecida" ; --*
lin boredom_N = variants {mkN "aborrecimento" ; mkN "apatia" ; mkN "enfado" ; mkN "fastio" ; mkN "tedio" ; mkN "tédio" ; } ; --*
lin bore_hole_N = variants {mkN "berbequim" ; mkN "hole" ; } ; --*
lin boring_2_N = variants {mkN "perfuração" ; mkN "production" ; } ; --*
lin boring_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin boringness_N = variants {mkN "insipidez" ; mkN "tédio" ; } ; --*
lin boron_N = variants {mkN "boro" ; mkN "number" ; } ; --*
lin borough_1_N = mkN "Borough" ; --*
lin borrow_1_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "levar") ; mkV2 (mkV "pedir") ; mkV2 (mkV "tomar") ; } ; --*
lin borrow_2_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin borrow_2_V = variants {mkV "adoptar" ; mkV "over" ; mkV "up" ; } ; --*
lin borrow_2_VV = variants {mkVV (mkV "adoptar") ; mkVV (mkV "over") ; mkVV (mkV "up") ; } ; --*
lin borrowing_1_N = variants {mkN "adoção" ; mkN "adopção" ; } ; --*
lin borrowing_2_N = mkN "empréstimo" ; --*
lin borsch_1_N = variants {mkN "borsch" ; mkN "soparussadebeterraba" ; } ; --*
lin bosh_N = mkN "mexerico" ; --*
lin bosom_2_N = mkN "peito" ; --*
lin bosom_5_N = mkN "coração" ; --*
lin bosom_6_N = variants {mkN "mama" ; mkN "peito" ; mkN "seio" ; mkN "seios" ; mkN "teta" ; } ; --*
lin bosomy_A = mkA "peituda" ; --*
lin boson_N = variants {mkN "bosão" ; mkN "bóson" ; mkN "Bósons" ; } ; --*
lin boss_1_N = variants {mkN "chefe" ; mkN "supervisor" ; } ; --*
lin boss_2_N = mkN "chefe" ; --*
lin boss_4_N = variants {mkN "boss" ; mkN "líder" ; } ; --*
lin bossy_A = mkA "mandão" ; --*
lin boston_PN = variants {mkPN "Boston" ; mkPN "Bóston" ; mkPN "of" ; mkPN "Town" ; } ; --*
lin bo'sun_1_N = mkN "contramestre" ; --*
lin botanic_A = mkA "botânico" ; --*
lin botanical_A = mkA "botânico" ; --*
lin botanist_N = variants {mkN "botânica" ; mkN "botanista" ; mkN "scientist" ; } ; --*
lin botanize_1_V = mkV "coletar" ; --*
lin botany_1_N = variants {mkN "coberto" ; mkN "flora" ; mkN "Vegetaçao" ; mkN "vegetação" ; mkN "Vegetação" ; } ; --*
lin botany_2_N = variants {mkN "Botanica" ; mkN "botânica" ; mkN "Botânica" ; } ; --*
lin botch_N = variants {mkN "bobagem" ; mkN "fiasco" ; mkN "gafe" ; } ; --*
lin botch_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin botfly_N = mkN "Berne" ; --*
lin bother_1_V = variants {mkV "incomodar" ; mkV "incomodar-se" ; mkV "oneself" ; } ; --*
lin bother_2_N = variants {mkN "contrariedade" ; mkN "in" ; mkN "incômodo" ; mkN "moléstia" ; } ; --*
lin bother_2_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin bother_3_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin bother_4_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "interromper") ; } ; --*
lin bother_5_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "enervar") ; mkV2 (mkV "incomodar") ; } ; --*
lin bother_6_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "incomodar") ; } ; --*
lin bother_6_V2V = variants {mkV2V (mkV "confundir") ; mkV2V (mkV "incomodar") ; } ; --*
lin bother_6_V = variants {mkV "confundir" ; mkV "incomodar" ; } ; --*
lin bother_6_VV = variants {mkVV (mkV "confundir") ; mkVV (mkV "incomodar") ; } ; --*
lin bothersome_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin bot_N = variants {mkN "berne" ; mkN "bot" ; } ; --*
lin botswana_PN = variants {mkPN "Botswana" ; mkPN "of" ; } ; --*
lin bottle_1_N = variants {mkN "biberão" ; mkN "botelha" ; mkN "frasco" ; mkN "garrafa" ; mkN "Garrafa" ; } ; --*
lin bottle_1_V2 = mkV2 (mkV "engarrafar") ; --*
lin bottle_2_N = variants {mkN "botelha" ; mkN "garrafa" ; } ; --*
lin bottle_2_V2 = mkV2 (mkV "engarrafar") ; --*
lin bottle_3_N = variants {mkN "biberão" ; mkN "bottle" ; } ; --*
lin bottleneck_1_N = variants {mkN "constricção" ; mkN "ponto" ; } ; --*
lin bottleneck_2_N = mkN "gargalo" ; --*
lin bottle_up_V2 = variants {mkV2 (mkV "inibir") ; mkV2 (mkV "suprimir") ; mkV2 (mkV "up") ; } ; --*
lin bottom_1_N = variants {mkN "fundo" ; mkN "parte" ; } ; --*
lin bottom_2_N = variants {mkN "fundo" ; mkN "traseiro" ; } ; --*
lin bottom_3_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin bottom_3_V = variants {mkV "aprofundar" ; mkV "comprender" ; } ; --*
lin bottom_5_N = variants {mkN "fundo" ; mkN "leito" ; } ; --*
lin bottom_7_N = variants {mkN "carga" ; mkN "ship" ; } ; --*
lin bottomless_1_A = mkA "sem" ; --*
lin bottomless_2_A = mkA "sem" ; --*
lin bottomless_3_A = mkA "sem" ; --*
lin bottomless_4_A = mkA "sem" ; --*
lin botulinal_A = mkA "botulínico" ; --*
lin botulinus_1_N = variants {mkN "botulinum" ; mkN "Clostridium" ; } ; --*
lin botulism_N = mkN "botulismo" ; --*
lin bougainvillea_N = mkN "bougainvillea" ; --*
lin bough_N = mkN "ramo" ; --*
lin bouillabaisse_N = mkN "bouillabaisse" ; --*
lin bouillon_N = variants {mkN "caldo" ; mkN "olha" ; } ; --*
lin boulder_1_N = variants {mkN "matacão" ; mkN "pedra" ; mkN "pedregulho" ; mkN "rocha" ; mkN "rochedo" ; } ; --*
lin boulder_2_N = mkN "Boulder" ; --*
lin boulevard_N = variants {mkN "alameda" ; mkN "avenida" ; mkN "bulevar" ; mkN "rua" ; } ; --*
lin bounce_1_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin bounce_2_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin bounce_3_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "saltar") ; } ; --*
lin bounce_3_V = variants {mkV "fazer" ; mkV "saltar" ; } ; --*
lin bounce_5_V = mkV "saltar" ; --*
lin bouncy_1_A = mkA "elástico" ; --*
lin bound_1_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "margem" ; } ; --*
lin bound_1_V = variants {mkV "pular" ; mkV "saltar" ; } ; --*
lin bound_2_N = variants {mkN "fronteira" ; mkN "fronteiras" ; mkN "limite" ; } ; --*
lin bound_2_V2 = variants {mkV2 (mkV "abeirar") ; mkV2 (mkV "beirar") ; mkV2 (mkV "bordejar") ; mkV2 (mkV "limitar") ; } ; --*
lin bound_2_V2V = variants {mkV2V (mkV "abeirar") ; mkV2V (mkV "beirar") ; mkV2V (mkV "bordejar") ; mkV2V (mkV "limitar") ; } ; --*
lin bound_2_V = variants {mkV "abeirar" ; mkV "beirar" ; mkV "bordejar" ; mkV "limitar" ; } ; --*
lin bound_3_N = variants {mkN "fronteira" ; mkN "limitação" ; mkN "limite" ; } ; --*
lin bound_3_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin bound_4_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin bound_4_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin boundary_1_N = variants {mkN "fronteira" ; mkN "fronteiras" ; mkN "limite" ; } ; --*
lin boundary_2_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "margem" ; } ; --*
lin boundary_3_N = variants {mkN "fronteira" ; mkN "limitação" ; mkN "limite" ; } ; --*
lin boundless_A = variants {mkA "ilimitado" ; mkA "infinito" ; } ; --*
lin bounteous_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin bountiful_1_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin bountiful_2_A = variants {mkA "abudante" ; mkA "farto" ; mkA "generoso" ; } ; --*
lin bounty_1_N = mkN "recompensa" ; --*
lin bounty_2_N = mkN "abundância" ; --*
lin bounty_3_N = mkN "generosidade" ; --*
lin bounty_4_N = variants {mkN "Bounty" ; mkN "HMS" ; } ; --*
lin bouquet_1_N = mkN "buquê" ; --*
lin bouquet_2_N = variants {mkN "aroma" ; mkN "fragância" ; } ; --*
lin bourgeois_1_A = mkA "burguês" ; --*
lin bourgeois_1_N = mkN "empresário" ; --*
lin bourgeois_2_A = variants {mkA "burguês" ; mkA "burguesa" ; } ; --*
lin bourgeois_2_N = variants {mkN "burguês" ; mkN "burguesa" ; } ; --*
lin bourgeois_3_A = variants {mkA "burguês" ; mkA "burguesa" ; } ; --*
lin bourgeoisie_N = variants {mkN "burguesia" ; mkN "class" ; mkN "Classe-média" ; } ; --*
lin bourtree_N = variants {mkN "elder" ; mkN "nigra" ; mkN "Sambucus" ; } ; --*
lin boustrophedon_N = variants {mkN "Bustrofedon" ; mkN "bustrofédon" ; mkN "Bustrofédon" ; } ; --*
lin bout_1_N = mkN "jogo" ; --*
lin bout_4_N = mkN "compulsão" ; --*
lin boutique_N = variants {mkN "boutique" ; mkN "shop" ; } ; --*
lin bovid_N = mkN "bovídeos" ; --*
lin bovine_1_A = mkA "bovino" ; --*
lin bovine_N = mkN "bovinos" ; --*
lin bovril_N = variants {mkN "Bovril" ; mkN "tea" ; } ; --*
lin bow_1_V2 = variants {mkV2 (mkV "curvar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "inclinar-se") ; } ; --*
lin bow_2_N = mkN "arco" ; --*
lin bow_2_V = variants {mkV "aceder" ; mkV "in" ; } ; --*
lin bow_3_N = mkN "proa" ; --*
lin bow_3_V = mkV "se" ; --*
lin bow_4_N = mkN "arco" ; --*
lin bow_4_V = variants {mkV "agachar" ; mkV "dobrar" ; mkV "inclinar" ; } ; --*
lin bow_5_N = mkN "arco" ; --*
lin bow_8_N = mkN "laço" ; --*
lin bowdlerize_1_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "expurgar") ; } ; --*
lin bowel_N = variants {mkN "barriga" ; mkN "intestino" ; mkN "intestinos" ; } ; --*
lin bower_N = mkN "pérgola" ; --*
lin bowfin_N = variants {mkN "Amia" ; mkN "calva" ; } ; --*
lin bowhead_N = variants {mkN "baleia-da-groenlândia" ; mkN "mysticetus" ; mkN "whale" ; } ; --*
lin bowie_knife_N = mkN "knife" ; --*
lin bowie_N = variants {mkN "Bowie" ; mkN "Jim" ; } ; --*
lin bowl_1_N = mkN "tigela" ; --*
lin bowl_3_N = mkN "tigela" ; --*
lin bowl_5_N = variants {mkN "estádio" ; mkN "stadium" ; } ; --*
lin bowl_6_N = variants {mkN "ball" ; mkN "bola" ; } ; --*
lin bowl_7_N = mkN "bola" ; --*
lin bowl_9_N = mkN "rolamento" ; --*
lin bowler_3_N = variants {mkN "chapéu-coco" ; mkN "hat" ; } ; --*
lin bowline_N = variants {mkN "bolina" ; mkN "knot" ; } ; --*
lin bowling_1_N = variants {mkN "boliche" ; mkN "Boliche" ; } ; --*
lin bowling_3_N = mkN "boliche" ; --*
lin bowl_over_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin bowl_over_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "surpreender") ; } ; --*
lin bowls_N = variants {mkN "boliche" ; mkN "bowling" ; } ; --*
lin bowman_N = mkN "arqueiro" ; --*
lin box_1_N = mkN "caixa" ; --*
lin box_2_N = mkN "camarote" ; --*
lin box_6_N = mkN "buxo" ; --*
lin boxer_1_N = variants {mkN "boxeador" ; mkN "boxer" ; mkN "pugilista" ; } ; --*
lin boxer_4_N = mkN "boxer" ; --*
lin boxfish_N = mkN "Ostraciidae" ; --*
lin boxing_1_N = variants {mkN "boxe" ; mkN "pugilismo" ; } ; --*
lin boxing_day_N = mkN "Day" ; --*
lin boxing_day_PN = mkPN "Day" ; --*
lin boxing_glove_N = variants {mkN "glove" ; mkN "luva" ; } ; --*
lin box_office_2_N = variants {mkN "booth" ; mkN "office" ; } ; --*
lin box_V = variants {mkV "boxar" ; mkV "boxear" ; } ; --*
lin boxwood_2_N = mkN "buxo" ; --*
lin boy_1_N = variants {mkN "child" ; mkN "criança" ; mkN "garoto" ; mkN "infante" ; mkN "moço" ; mkN "rapaz" ; } ; --*
lin boy_2_N = variants {mkN "cara" ; mkN "guri" ; mkN "petitinho" ; mkN "rapazinho" ; } ; --*
lin boy_3_N = variants {mkN "criança" ; mkN "filho" ; mkN "menino" ; } ; --*
lin boycott_N = mkN "boicote" ; --*
lin boycott_V2 = mkV2 (mkV "boicotar") ; --*
lin boyfriend_N = variants {mkN "homem" ; mkN "man" ; mkN "namorado" ; mkN "noivo" ; } ; --*
lin brace_1_N = mkN "abraçadeira" ; --*
lin brace_1_V2 = mkV2 (mkV "preparar") ; --*
lin brace_1_V = mkV "preparar" ; --*
lin brace_2_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin brace_3_N = variants {mkN "par" ; mkN "parelha" ; } ; --*
lin brace_4_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "energizar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "up") ; } ; --*
lin brace_6_N = mkN "suspensório" ; --*
lin brace_7_N = variants {mkN "alças" ; mkN "aparelho" ; mkN "braces" ; mkN "cintas" ; } ; --*
lin brace_8_N = mkN "Arco" ; --*
lin bracelet_1_N = variants {mkN "bracelet" ; mkN "bracelete" ; mkN "pulseira" ; } ; --*
lin bracelet_2_N = variants {mkN "bracelete" ; mkN "Bracelete" ; mkN "pulseira" ; } ; --*
lin brachial_A = mkA "braquial" ; --*
lin brachiopod_N = variants {mkN "Brachiopoda" ; mkN "shell" ; } ; --*
lin bracket_1_N = mkN "classe" ; --*
lin bracket_2_N = variants {mkN "bracket" ; mkN "parêntesis" ; } ; --*
lin bracket_3_N = variants {mkN "bracket" ; mkN "colchete" ; } ; --*
lin bracket_3_V2 = mkV2 (mkV "classificar") ; --*
lin brackish_2_A = mkA "salobra" ; --*
lin bract_N = mkN "Bráctea" ; --*
lin brad_N = mkN "tacha" ; --*
lin bradycardia_N = mkN "bradicardia" ; --*
lin braggart_N = mkN "pimpão" ; --*
lin bragger_N = mkN "pimpão" ; --*
lin brag_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin brahman_4_N = variants {mkN "brâman" ; mkN "indicus" ; } ; --*
lin brahmin_4_N = variants {mkN "brâman" ; mkN "indicus" ; } ; --*
lin braid_1_N = variants {mkN "Nó" ; mkN "trança" ; } ; --*
lin braid_1_V2 = variants {mkV2 (mkV "entrançar") ; mkV2 (mkV "trançar") ; } ; --*
lin braid_2_N = variants {mkN "braid" ; mkN "trança" ; } ; --*
lin braid_2_V2 = mkV2 (mkV "trançar") ; --*
lin braid_3_V2 = variants {mkV2 (mkV "trança") ; mkV2 (mkV "trançar") ; } ; --*
lin braille_1_N = variants {mkN "Braille" ; mkN "Louis" ; } ; --*
lin braille_2_N = variants {mkN "braile" ; mkN "braille" ; mkN "Braille" ; mkN "sistema" ; } ; --*
lin brain_1_N = variants {mkN "cérebro" ; mkN "encéfalo" ; mkN "Encéfalo" ; } ; --*
lin brain_2_N = variants {mkN "ability" ; mkN "agudez" ; mkN "agudeza" ; mkN "capacity" ; mkN "cérebro" ; mkN "inteligência" ; } ; --*
lin brain_2_V2 = mkV2 (mkV "atirar") ; --*
lin brain_3_N = variants {mkN "cabeça" ; mkN "mente" ; mkN "psique" ; } ; --*
lin brain_4_N = variants {mkN "gênia" ; mkN "gênio" ; } ; --*
lin brainchild_N = mkN "criação" ; --*
lin brainsick_A = mkA "louco" ; --*
lin brainstem_1_N = variants {mkN "stem" ; mkN "tronco" ; } ; --*
lin brainstorming_N = mkN "brainstorming" ; --*
lin brainstorm_N = variants {mkN "epifania" ; mkN "insight" ; mkN "lampejo" ; } ; --*
lin brain_teaser_N = variants {mkN "adivinha" ; mkN "adivinhação" ; mkN "adivinhas" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin brainwash_1_V2 = mkV2 (mkV "fazer") ; --*
lin brainwash_2_V2 = mkV2 (mkV "indoutrinar") ; --*
lin brainwave_2_N = variants {mkN "epifania" ; mkN "insight" ; mkN "lampejo" ; } ; --*
lin brainy_A = variants {mkA "as" ; mkA "brilhante" ; } ; --*
lin braise_V2 = mkV2 (mkV "refogar") ; --*
lin brake_1_N = variants {mkN "freio" ; mkN "travão" ; mkN "Travão" ; } ; --*
lin brake_V2 = variants {mkV2 (mkV "frear") ; mkV2 (mkV "travar") ; } ; --*
lin brake_V = variants {mkV "frear" ; mkV "travar" ; } ; --*
lin bran_2_N = variants {mkN "farelo" ; mkN "Farelo" ; } ; --*
lin branch_1_N = variants {mkN "broto" ; mkN "ramo" ; } ; --*
lin branch_1_V = variants {mkV "desgalhar" ; mkV "ramificar" ; mkV "ramificar-se" ; } ; --*
lin branch_2_N = variants {mkN "galho" ; mkN "Galho" ; mkN "ramo" ; } ; --*
lin branch_2_V = variants {mkV "bifurcar" ; mkV "brotar" ; mkV "ramificar" ; } ; --*
lin branch_5_N = mkN "afluente" ; --*
lin branch_6_N = mkN "braço" ; --*
lin branched_1_A = mkA "bifurcado" ; --*
lin branchlet_N = variants {mkN "galho" ; mkN "raminho" ; mkN "ramo" ; } ; --*
lin branch_out_V = variants {mkV "diversificar" ; mkV "out" ; } ; --*
lin brand_1_N = variants {mkN "name" ; mkN "nome" ; } ; --*
lin brand_2_N = variants {mkN "classe" ; mkN "faça" ; mkN "make" ; mkN "tipo" ; } ; --*
lin brand_2_V2 = variants {mkV2 (mkV "denunciar") ; mkV2 (mkV "estigmatizar") ; } ; --*
lin brand_3_N = variants {mkN "marca" ; mkN "Marcas" ; } ; --*
lin brand_5_N = variants {mkN "estigma" ; mkN "mancha" ; mkN "marca" ; } ; --*
lin brand_6_N = variants {mkN "espada" ; mkN "Espadas" ; mkN "gládio" ; } ; --*
lin brandish_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "brandir") ; mkV2 (mkV "mexer") ; } ; --*
lin brandish_2_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "brandir") ; } ; --*
lin brandy_N = variants {mkN "aguardente" ; mkN "brandy" ; mkN "cachaça" ; mkN "conhaque" ; mkN "parati" ; mkN "pinga" ; } ; --*
lin bra_N = variants {mkN "porta-seios" ; mkN "sutiã" ; } ; --*
lin brash_A = mkA "insolente" ; --*
lin brasilia_PN = variants {mkPN "Brasilia" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin brass_1_N = variants {mkN "bronze" ; mkN "latão" ; } ; --*
lin brass_2_N = variants {mkN "instrument" ; mkN "metais" ; } ; --*
lin brass_3_N = variants {mkN "administração" ; mkN "body" ; mkN "organização" ; } ; --*
lin brass_4_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin brass_5_N = mkN "bronze" ; --*
lin brass_7_N = variants {mkN "placa" ; mkN "tablet" ; } ; --*
lin brassiere_N = variants {mkN "porta-seios" ; mkN "sutiã" ; } ; --*
lin brassy_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin brassy_3_A = mkA "insolente" ; --*
lin brat_2_N = variants {mkN "bratwurst" ; mkN "mimado" ; mkN "pirralho" ; } ; --*
lin bratislava_PN = variants {mkPN "Bratislava" ; mkPN "of" ; } ; --*
lin bratwurst_N = variants {mkN "bratwurst" ; mkN "mimado" ; mkN "pirralho" ; } ; --*
lin braunschweig_PN = variants {mkPN "Bransvique" ; mkPN "Braunschweig" ; } ; --*
lin bravado_N = mkN "bravata" ; --*
lin brave_1_A = variants {mkA "afoito" ; mkA "arrojado" ; mkA "brava" ; mkA "bravo" ; mkA "corajoso" ; mkA "valente" ; mkA "valoroso" ; } ; --*
lin brave_2_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "intrépido" ; mkA "ousado" ; } ; --*
lin bravery_1_N = variants {mkN "ânimo" ; mkN "coragem" ; mkN "denodo" ; } ; --*
lin bravery_2_N = variants {mkN "bravura" ; mkN "valentia" ; } ; --*
lin brave_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resistir") ; } ; --*
lin bravo_1_N = variants {mkN "assassina" ; mkN "assassino" ; mkN "sicário" ; } ; --*
lin brawl_1_N = mkN "festa" ; --*
lin brawl_V = mkV "porfiar" ; --*
lin brawn_N = mkN "músculo" ; --*
lin brawny_A = mkA "musculoso" ; --*
lin bray_1_V2 = mkV2 (mkV "zurrar") ; --*
lin bray_2_V2 = variants {mkV2 (mkV "moer") ; mkV2 (mkV "triturar") ; } ; --*
lin bray_3_V2 = mkV2 (mkV "zurrar") ; --*
lin bray_N = mkN "zurro" ; --*
lin brazen_1_A = mkA "insolente" ; --*
lin brazen_faced_A = mkA "insolente" ; --*
lin brazil_1_PN = variants {mkPN "Brasil" ; mkPN "Republic" ; } ; --*
lin brazil_2_PN = variants {mkPN "castanha-do-pará" ; mkPN "nut" ; } ; --*
lin brazilian_A = mkA "brasileiro" ; --*
lin brazilian_N = variants {mkN "brasileira" ; mkN "brasileiro" ; } ; --*
lin brazilwood_1_N = variants {mkN "brasil" ; mkN "ibirapiranga" ; mkN "ibirapitá" ; mkN "pau-brasil" ; mkN "pau-de-tinta" ; mkN "pau-pernambuco" ; mkN "pau-rosado" ; mkN "pernambuco" ; } ; --*
lin brazilwood_2_N = variants {mkN "Caesalpinia" ; mkN "echinata" ; mkN "wood" ; } ; --*
lin breach_1_N = variants {mkN "inadimplência" ; mkN "não" ; mkN "parada" ; } ; --*
lin breach_1_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "infringir") ; mkV2 (mkV "ofender") ; mkV2 (mkV "pecar") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "transgredir") ; mkV2 (mkV "violar") ; } ; --*
lin breach_2_N = variants {mkN "brecha" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin breach_3_N = variants {mkN "out" ; mkN "rompimento" ; } ; --*
lin bread_1_N = variants {mkN "of" ; mkN "pão" ; } ; --*
lin bread_2_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin breadbasket_2_N = variants {mkN "Estomago" ; mkN "estômago" ; } ; --*
lin breadcrumb_N = variants {mkN "farelo" ; mkN "migalha" ; mkN "Navegação" ; } ; --*
lin breadfruit_1_N = variants {mkN "altilis" ; mkN "communis" ; mkN "fruta-pão" ; mkN "tree" ; } ; --*
lin breadstuff_1_N = variants {mkN "of" ; mkN "pão" ; } ; --*
lin breadth_2_N = variants {mkN "anchura" ; mkN "largura" ; } ; --*
lin break_10_N = mkN "mudança" ; --*
lin break_13_N = variants {mkN "interrupção" ; mkN "pausa" ; } ; --*
lin break_13_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "destruir") ; mkV2 (mkV "ir") ; } ; --*
lin break_14_V2 = mkV2 (mkV "superar") ; --*
lin break_15_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin break_16_N = mkN "evasão" ; --*
lin break_16_V = mkV "aparecer" ; --*
lin break_1_N = variants {mkN "interrupção" ; mkN "pausa" ; } ; --*
lin break_1_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "suspender") ; } ; --*
lin break_21_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "suavizar") ; } ; --*
lin break_28_V2 = mkV2 (mkV "acontecer") ; --*
lin break_2_N = variants {mkN "chance" ; mkN "luck" ; } ; --*
lin break_2_V = variants {mkV "apart" ; mkV "desmoronar" ; mkV "separar" ; mkV "up" ; } ; --*
lin break_31_V = variants {mkV "partir" ; mkV "separar" ; mkV "up" ; } ; --*
lin break_33_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "falir") ; mkV2 (mkV "quebrar") ; } ; --*
lin break_36_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin break_3_N = variants {mkN "falha" ; mkN "fault" ; } ; --*
lin break_3_V2 = variants {mkV2 (mkV "estragar") ; mkV2 (mkV "partir") ; mkV2 (mkV "quebrar") ; } ; --*
lin break_42_V = variants {mkV "apart" ; mkV "destruir" ; mkV "out" ; mkV "quebrar" ; } ; --*
lin break_43_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "quebrar") ; } ; --*
lin break_45_V2 = mkV2 (mkV "perfurar") ; --*
lin break_47_V = variants {mkV "interromper" ; mkV "parar" ; mkV "pausar" ; } ; --*
lin break_4_N = variants {mkN "out" ; mkN "rompimento" ; } ; --*
lin break_4_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "destruir") ; } ; --*
lin break_50_V2 = mkV2 (mkV "quebrar") ; --*
lin break_51_V2 = mkV2 (mkV "quebrar") ; --*
lin break_53_V = variants {mkV "acontecer" ; mkV "desenvolver" ; mkV "recrudescer" ; } ; --*
lin break_54_V2 = variants {mkV2 (mkV "partir") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "rachar") ; } ; --*
lin break_55_V = mkV "mudar" ; --*
lin break_57_V2 = variants {mkV2 (mkV "fraturar") ; mkV2 (mkV "quebrar") ; } ; --*
lin break_58_V = mkV "diminuir" ; --*
lin break_59_V2 = mkV2 (mkV "destruir") ; --*
lin break_5_N = variants {mkN "out" ; mkN "pausa" ; } ; --*
lin break_5_V2 = variants {mkV2 (mkV "quebrar") ; mkV2 (mkV "romper") ; } ; --*
lin break_60_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin break_6_N = mkN "rompimento" ; --*
lin break_6_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "infringir") ; mkV2 (mkV "ofender") ; mkV2 (mkV "pecar") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "transgredir") ; mkV2 (mkV "violar") ; } ; --*
lin break_7_N = variants {mkN "fazerumapausa" ; mkN "interrupção" ; mkN "pausa" ; mkN "suspensão" ; } ; --*
lin break_7_V = variants {mkV "away" ; mkV "fugir" ; mkV "out" ; } ; --*
lin break_8_N = variants {mkN "fractura" ; mkN "fratura" ; } ; --*
lin breakage_3_N = mkN "rompimento" ; --*
lin break_apart_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "desfazer") ; mkV2 (mkV "desmantelar") ; mkV2 (mkV "up") ; } ; --*
lin break_apart_2_V = variants {mkV "apart" ; mkV "arrebentar" ; mkV "up" ; } ; --*
lin break_away_2_V = variants {mkV "away" ; mkV "off" ; mkV "quebrar" ; } ; --*
lin break_away_4_V = variants {mkV "away" ; mkV "romper" ; } ; --*
lin break_away_5_V = variants {mkV "away" ; mkV "escapar" ; mkV "escapulir" ; mkV "for" ; mkV "fugir" ; mkV "it" ; mkV "tail" ; mkV "the" ; mkV "to" ; } ; --*
lin breakdown_2_N = mkN "colapso" ; --*
lin break_down_2_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "apart") ; mkV2 (mkV "down") ; } ; --*
lin breakdown_3_N = variants {mkN "decomposição" ; mkN "putrefação" ; } ; --*
lin break_down_3_V = variants {mkV "desmoronar" ; mkV "down" ; mkV "it" ; } ; --*
lin breakdown_4_N = variants {mkN "avaria" ; mkN "failure" ; } ; --*
lin break_down_4_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin break_down_5_V = variants {mkV "amarfanhar" ; mkV "desmoronar" ; mkV "down" ; mkV "esboroar" ; mkV "esfarelar" ; } ; --*
lin break_down_to_V2 = variants {mkV2 (mkV "demover") ; mkV2 (mkV "despromover") ; mkV2 (mkV "downstairs") ; mkV2 (mkV "relegar") ; } ; --*
lin breaker_3_N = variants {mkN "breaker" ; mkN "disjuntor" ; } ; --*
lin breakfast_1_V = mkV "desjejuar" ; --*
lin breakfast_2_V = mkV "fornecer" ; --*
lin breakfast_N = variants {mkN "café" ; mkN "desjejum" ; } ; --*
lin break_in_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "invadir") ; } ; --*
lin break_in_1_V = variants {mkV "in" ; mkV "invadir" ; } ; --*
lin break_in_3_V2 = mkV2 (mkV "in") ; --*
lin break_in_3_V = mkV "in" ; --*
lin break_in_5_V2 = mkV2 (mkV "in") ; --*
lin break_off_2_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "suspender") ; } ; --*
lin break_off_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; mkV2 (mkV "quebrar") ; } ; --*
lin break_off_4_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "quebrar") ; } ; --*
lin break_off_5_V2 = variants {mkV2 (mkV "lascar") ; mkV2 (mkV "off") ; } ; --*
lin break_out_5_V = variants {mkV "out" ; mkV "recrudescer" ; } ; --*
lin breakout_N = mkN "evasão" ; --*
lin breakthrough_1_N = variants {mkN "achado" ; mkN "descoberta" ; } ; --*
lin break_through_1_V2 = variants {mkV2 (mkV "atravessar") ; mkV2 (mkV "through") ; } ; --*
lin break_up_10_V2 = variants {mkV2 (mkV "apartar") ; mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; mkV2 (mkV "separar-se") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin break_up_16_V = variants {mkV "fragmentar" ; mkV "up" ; } ; --*
lin break_up_1_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "dissipar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "up") ; } ; --*
lin break_up_2_N = mkN "dispersão" ; --*
lin break_up_4_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "arrebentar") ; mkV2 (mkV "up") ; } ; --*
lin break_up_4_V = variants {mkV "apart" ; mkV "arrebentar" ; mkV "up" ; } ; --*
lin break_up_5_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "up") ; } ; --*
lin break_up_6_V2 = variants {mkV2 (mkV "dissolver") ; mkV2 (mkV "up") ; } ; --*
lin break_up_7_V2 = variants {mkV2 (mkV "pirar") ; mkV2 (mkV "up") ; } ; --*
lin break_up_7_V = variants {mkV "pirar" ; mkV "up" ; } ; --*
lin break_up_8_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "desfazer") ; mkV2 (mkV "desmantelar") ; mkV2 (mkV "up") ; } ; --*
lin breakwater_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin bream_1_N = variants {mkN "bream" ; mkN "brema" ; } ; --*
lin bream_2_N = variants {mkN "bream" ; mkN "brema-do-mar" ; mkN "dourada" ; } ; --*
lin breast_1_N = variants {mkN "colo" ; mkN "peito" ; mkN "peitos" ; mkN "tórax" ; } ; --*
lin breast_2_N = variants {mkN "mama" ; mkN "peito" ; mkN "seio" ; mkN "seios" ; mkN "teta" ; } ; --*
lin breast_3_N = variants {mkN "Carne" ; mkN "meat" ; } ; --*
lin breastfeed_V2 = variants {mkV2 (mkV "aleitar") ; mkV2 (mkV "amamentar") ; mkV2 (mkV "lactar") ; mkV2 (mkV "suck") ; } ; --*
lin breaststroke_N = variants {mkN "braça" ; mkN "bruços" ; mkN "Bruços" ; mkN "nado" ; } ; --*
lin breath_1_N = mkN "respiração" ; --*
lin breath_2_N = variants {mkN "alento" ; mkN "folêgo" ; mkN "fôlego" ; mkN "hálito" ; mkN "respiração" ; } ; --*
lin breath_3_N = variants {mkN "place" ; mkN "respiradouro" ; mkN "space" ; mkN "spell" ; mkN "time" ; } ; --*
lin breathalyser_N = variants {mkN "bafómetro" ; mkN "bafômetro" ; mkN "etilómetro" ; mkN "etilômetro" ; } ; --*
lin breathalyzer_N = variants {mkN "bafómetro" ; mkN "bafômetro" ; mkN "etilómetro" ; mkN "etilômetro" ; } ; --*
lin breathe_1_V = variants {mkV "a" ; mkV "bafejar" ; mkV "espirar" ; mkV "respirar" ; } ; --*
lin breathe_2_V = mkV "respirar" ; --*
lin breathe_6_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "exalar") ; mkV2 (mkV "manifestar") ; } ; --*
lin breathe_7_V = variants {mkV "a" ; mkV "espirar" ; mkV "one's" ; mkV "respirar" ; } ; --*
lin breather_1_N = variants {mkN "place" ; mkN "respiradouro" ; mkN "space" ; mkN "spell" ; mkN "time" ; } ; --*
lin breathing_N = variants {mkN "respiração" ; mkN "respiration" ; } ; --*
lin breathing_space_1_N = variants {mkN "place" ; mkN "respiradouro" ; mkN "space" ; mkN "spell" ; mkN "time" ; } ; --*
lin breathless_1_A = mkA "dispnéico" ; --*
lin breathless_2_A = variants {mkA "de" ; mkA "sem" ; } ; --*
lin breathtaking_A = variants {mkA "de" ; mkA "sem" ; } ; --*
lin breccia_N = mkN "brecha" ; --*
lin breech_block_N = variants {mkN "closer" ; mkN "Ferrolho" ; } ; --*
lin breeches_N = variants {mkN "breeches" ; mkN "culote" ; mkN "pants" ; } ; --*
lin breech_N = variants {mkN "nádegas" ; mkN "of" ; } ; --*
lin breed_1_N = variants {mkN "estirpe" ; mkN "raça" ; } ; --*
lin breed_1_V2 = variants {mkV2 (mkV "desovar") ; mkV2 (mkV "fazer") ; } ; --*
lin breed_1_V = variants {mkV "desovar" ; mkV "fazer" ; } ; --*
lin breed_3_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "reproduzir") ; } ; --*
lin breeder_N = variants {mkN "breeder" ; mkN "criador" ; } ; --*
lin breeding_2_N = variants {mkN "educação" ; mkN "instrução" ; } ; --*
lin breeding_4_N = mkN "criação" ; --*
lin breeding_5_N = variants {mkN "of" ; mkN "procriação" ; mkN "reprodução" ; } ; --*
lin breeze_1_N = variants {mkN "aragem" ; mkN "brisa" ; mkN "maresia" ; mkN "vento" ; mkN "wind" ; mkN "zefir" ; mkN "zéfiro" ; } ; --*
lin breeze_1_V = mkV "ter" ; --*
lin breeze_2_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin breeze_2_V = mkV "voar" ; --*
lin breezy_2_A = mkA "ventoso" ; --*
lin bremen_PN = mkPN "Bremen" ; --*
lin bremerhaven_PN = mkPN "Bremerhaven" ; --*
lin brescia_PN = mkPN "Bréscia" ; --*
lin brethren_N = variants {mkN "confraria" ; mkN "irmãos" ; } ; --*
lin breve_N = variants {mkN "Braquia" ; mkN "Bráquia" ; } ; --*
lin breviary_N = mkN "breviário" ; --*
lin brevity_1_N = mkN "breviedade" ; --*
lin brewer_1_N = variants {mkN "cervejeiro" ; mkN "maker" ; } ; --*
lin brewer_2_N = mkN "cervejeiro" ; --*
lin brewery_N = variants {mkN "cervejaria" ; mkN "Cervejaria" ; } ; --*
lin brew_N = mkN "fermentação" ; --*
lin brew_V = variants {mkV "fermentar" ; mkV "tramar" ; } ; --*
lin briar_3_N = variants {mkN "arborea" ; mkN "heath" ; mkN "Urze-molar" ; } ; --*
lin bribable_A = variants {mkA "corruptível" ; mkA "desonesto" ; mkA "venal" ; } ; --*
lin bribe_N = variants {mkN "dinheiro" ; mkN "suborno" ; } ; --*
lin bribery_N = mkN "suborno" ; --*
lin bribe_V2 = variants {mkV2 (mkV "corromper") ; mkV2 (mkV "one's") ; mkV2 (mkV "subornar") ; } ; --*
lin bric_a_brac_N = mkN "quinquilharias" ; --*
lin brick_1_N = variants {mkN "tejolo" ; mkN "tijolo" ; mkN "Tijolos" ; } ; --*
lin bricklayer_N = mkN "pedreiro" ; --*
lin brickwork_N = mkN "Aparelho" ; --*
lin bridal_1_A = mkA "nupcial" ; --*
lin bridal_2_A = mkA "nupcial" ; --*
lin bridal_N = variants {mkN "casamento" ; mkN "do" ; } ; --*
lin bride_1_N = variants {mkN "noiva" ; mkN "recém-casada" ; } ; --*
lin bride_3_N = mkN "noiva" ; --*
lin bridecake_N = variants {mkN "bolo" ; mkN "cake" ; } ; --*
lin bridegroom_1_N = mkN "noivo" ; --*
lin bridegroom_2_N = variants {mkN "namorado" ; mkN "noivo" ; } ; --*
lin bridesmaid_N = variants {mkN "dama" ; mkN "of" ; } ; --*
lin bridge_1_N = mkN "ponte" ; --*
lin bridge_1_V2 = variants {mkV2 (mkV "ligar") ; mkV2 (mkV "over") ; } ; --*
lin bridge_9_N = variants {mkN "deck" ; mkN "passadiço" ; } ; --*
lin bridgehead_1_N = mkN "Cabeça" ; --*
lin bridle_1_N = variants {mkN "breio" ; mkN "brida" ; mkN "entrave" ; mkN "flange" ; mkN "pôrfreioem" ; } ; --*
lin bridle_1_V = mkV "ofender" ; --*
lin bridle_2_N = mkN "freio" ; --*
lin brief_1_A = variants {mkA "breve" ; mkA "curto" ; } ; --*
lin brief_2_N = mkN "resumo" ; --*
lin brief_3_A = mkA "abreviado" ; --*
lin briefcase_N = variants {mkN "carteira" ; mkN "maleta" ; mkN "pasta" ; mkN "teca" ; } ; --*
lin brier_5_N = variants {mkN "arborea" ; mkN "heath" ; mkN "Urze-molar" ; } ; --*
lin brig_1_N = variants {mkN "brigantim" ; mkN "brigue" ; } ; --*
lin brig_1_PN = variants {mkPN "brigantim" ; mkPN "brigue" ; } ; --*
lin brigade_N = variants {mkN "brigada" ; mkN "Brigada" ; } ; --*
lin brigadier_N = variants {mkN "brigadeiro" ; mkN "general" ; } ; --*
lin brigandine_N = mkN "brigantina" ; --*
lin brigand_N = variants {mkN "bandido" ; mkN "bandoleiro" ; mkN "cangaceiro" ; mkN "facínora" ; mkN "ladrão" ; } ; --*
lin brigantine_N = variants {mkN "Bergantim" ; mkN "brig" ; } ; --*
lin bright_1_A = variants {mkA "brilhante" ; mkA "claro" ; mkA "luminoso" ; mkA "radiante" ; mkA "vivído" ; } ; --*
lin bright_2_A = mkA "brilhante" ; --*
lin bright_4_A = mkA "luminoso" ; --*
lin bright_5_A = variants {mkA "brilhoso" ; mkA "faiscante" ; mkA "luminoso" ; mkA "reluzente" ; mkA "soalheiro" ; } ; --*
lin bright_8_A = mkA "claro" ; --*
lin brighten_1_V2 = variants {mkV2 (mkV "clarear") ; mkV2 (mkV "up") ; } ; --*
lin brighten_2_V = variants {mkV "clarear" ; mkV "up" ; } ; --*
lin brightness_1_N = variants {mkN "brilhância" ; mkN "brilho" ; mkN "luminosidade" ; } ; --*
lin brightness_2_N = variants {mkN "inteligência" ; mkN "talento" ; } ; --*
lin brightness_3_N = variants {mkN "level" ; mkN "luminosidade" ; } ; --*
lin brighton_PN = mkPN "Brighton" ; --*
lin brilliance_1_N = variants {mkN "brilho" ; mkN "clarão" ; } ; --*
lin brilliance_2_N = mkN "fulgor" ; --*
lin brilliance_3_N = variants {mkN "brilho" ; mkN "gênia" ; mkN "génio" ; mkN "talento" ; } ; --*
lin brilliancy_N = variants {mkN "brilho" ; mkN "esplendor" ; mkN "lustre" ; } ; --*
lin brilliant_1_A = variants {mkA "luzente" ; mkA "magnífico" ; } ; --*
lin brilliant_2_A = variants {mkA "as" ; mkA "brilhante" ; } ; --*
lin brilliant_3_A = mkA "magnífico" ; --*
lin brilliant_4_A = mkA "brilhante" ; --*
lin brilliant_6_A = mkA "claro" ; --*
lin brill_N = variants {mkN "rhombus" ; mkN "Rodovalho" ; } ; --*
lin brim_1_N = mkN "rebordo" ; --*
lin brim_2_V = variants {mkV "desbordar" ; mkV "transbordar" ; } ; --*
lin brimstone_N = variants {mkN "enxofre" ; mkN "sulfur" ; mkN "sulphur" ; } ; --*
lin brine_1_N = variants {mkN "água" ; mkN "salmoura" ; } ; --*
lin brine_2_N = mkN "salmoura" ; --*
lin bring_10_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "trazer") ; } ; --*
lin bring_11_V2 = mkV2 (mkV "fazer") ; --*
lin bring_1_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "tirar") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin bring_1_V3 = variants {mkV3 (mkV "levar") ; mkV3 (mkV "tirar") ; mkV3 (mkV "transportar") ; mkV3 (mkV "trazer") ; } ; --*
lin bring_2_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "levar") ; mkV2 (mkV "produzir") ; mkV2 (mkV "provocar") ; } ; --*
lin bring_3_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "for") ; mkV2 (mkV "trazer") ; } ; --*
lin bring_4_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin bring_5_V2 = mkV2 (mkV "levar") ; --*
lin bring_6_V2 = mkV2 (mkV "trazer") ; --*
lin bring_7_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "instaurar") ; mkV2 (mkV "instituir") ; } ; --*
lin bring_8_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "contribuir") ; } ; --*
lin bring_9_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin bring_about_1_V2 = mkV2 (mkV "about") ; --*
lin bring_about_2_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "causar") ; mkV2 (mkV "produzir") ; mkV2 (mkV "rise") ; } ; --*
lin bring_around_2_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "curar") ; mkV2 (mkV "sarar") ; } ; --*
lin bring_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "voltar") ; } ; --*
lin bring_down_2_V2 = variants {mkV2 (mkV "derribar") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; mkV2 (mkV "subverter") ; } ; --*
lin bring_down_3_V2 = variants {mkV2 (mkV "ditar") ; mkV2 (mkV "down") ; mkV2 (mkV "impor") ; mkV2 (mkV "infligir") ; } ; --*
lin bring_down_4_V2 = variants {mkV2 (mkV "aterrar") ; mkV2 (mkV "down") ; } ; --*
lin bring_down_5_V2 = mkV2 (mkV "down") ; --*
lin bring_down_6_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin bring_forth_1_V2 = variants {mkV2 (mkV "engendrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; } ; --*
lin bring_forth_2_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "mostrar") ; } ; --*
lin bring_forth_3_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "forth") ; } ; --*
lin bring_forth_4_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin bring_forward_1_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "forward") ; } ; --*
lin bring_in_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "introduzir") ; } ; --*
lin bring_in_2_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin bring_out_1_V2 = variants {mkV2 (mkV "desvendar") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; mkV2 (mkV "trazer") ; } ; --*
lin bring_out_3_V2 = variants {mkV2 (mkV "lançar") ; mkV2 (mkV "out") ; mkV2 (mkV "publicar") ; } ; --*
lin bring_out_6_V2 = mkV2 (mkV "out") ; --*
lin bring_out_9_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin bring_up_2_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "up") ; } ; --*
lin bring_up_4_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "elevar") ; mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin bring_up_6_V2 = variants {mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin bring_up_7_V2 = variants {mkV2 (mkV "aludir") ; mkV2 (mkV "citar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "up") ; } ; --*
lin bring_up_8_V2 = variants {mkV2 (mkV "iniciar") ; mkV2 (mkV "up") ; } ; --*
lin brininess_N = mkN "salinidade" ; --*
lin brink_1_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "fronteiras" ; mkN "limite" ; mkN "margem" ; } ; --*
lin brink_2_N = variants {mkN "beira" ; mkN "borda" ; } ; --*
lin brink_3_N = mkN "beira" ; --*
lin brinkmanship_N = mkN "brinkmanship" ; --*
lin briny_A = mkA "salobra" ; --*
lin brioche_N = mkN "brioche" ; --*
lin brisbane_PN = variants {mkPN "Brisbane" ; mkPN "Brisbânia" ; } ; --*
lin brisk_2_A = variants {mkA "fresco" ; mkA "refrescante" ; } ; --*
lin brisket_N = variants {mkN "carne" ; mkN "Peito" ; } ; --*
lin bristle_2_N = mkN "cerda" ; --*
lin bristly_2_A = variants {mkA "espinhento" ; mkA "espinhoso" ; mkA "farpado" ; } ; --*
lin bristol_PN = variants {mkPN "Bristol" ; mkPN "Brístol" ; } ; --*
lin brit_1_N = variants {mkN "bretão" ; mkN "britânico" ; } ; --*
lin britain_PN = variants {mkPN "Britain" ; mkPN "Kingdom" ; mkPN "Reino-Unido" ; mkPN "RU" ; } ; --*
lin britannic_A = mkA "britânico" ; --*
lin british_A = mkA "britânico" ; --*
lin britisher_N = variants {mkN "bretão" ; mkN "britânico" ; } ; --*
lin briton_1_N = variants {mkN "bretão" ; mkN "britânico" ; } ; --*
lin briton_A = mkA "britânico" ; --*
lin brittle_1_A = mkA "quebradiça" ; --*
lin brno_PN = mkPN "Brno" ; --*
lin broach_V2 = variants {mkV2 (mkV "abordar") ; mkV2 (mkV "encetar") ; mkV2 (mkV "iniciar") ; } ; --*
lin broach_V = variants {mkV "abordar" ; mkV "encetar" ; mkV "iniciar" ; } ; --*
lin broad_1_A = variants {mkA "ampla" ; mkA "amplo" ; mkA "largo" ; } ; --*
lin broad_2_A = mkA "amplo" ; --*
lin broad_8_A = mkA "liberal" ; --*
lin broadband_1_A = mkA "banda" ; --*
lin broadcast_1_N = mkN "mensagem" ; --*
lin broadcast_2_N = variants {mkN "emissão" ; mkN "programa" ; } ; --*
lin broadcast_3_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin broadcasting_1_N = variants {mkN "medium" ; mkN "radiodifusão" ; } ; --*
lin broadcasting_2_N = variants {mkN "broadcast" ; mkN "BROADCAST" ; } ; --*
lin broadcast_V2 = mkV2 (mkV "transmitir") ; --*
lin broaden_2_V2 = variants {mkV2 (mkV "ampliar") ; mkV2 (mkV "estender") ; } ; --*
lin broaden_3_V = variants {mkV "diversificar" ; mkV "out" ; } ; --*
lin broadly_speaking_Adv = variants {mkAdv "em" ; mkAdv "speaking" ; } ; --*
lin broadness_N = mkN "largura" ; --*
lin broad_N = mkN "mulher" ; --*
lin broadsheet_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin broadside_1_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin broadside_2_N = mkN "diatribe" ; --*
lin brocade_N = variants {mkN "brocado" ; mkN "brokat" ; } ; --*
lin broccoli_1_N = variants {mkN "brócolis" ; mkN "oleracea" ; } ; --*
lin broccoli_2_N = variants {mkN "brócolis" ; mkN "brócolo" ; mkN "bróculos" ; } ; --*
lin brochette_N = mkN "espetada" ; --*
lin brochure_N = variants {mkN "brochura" ; mkN "folheto" ; mkN "livreto" ; mkN "opúsculo" ; mkN "panfleto" ; } ; --*
lin broil_1_V2 = variants {mkV2 (mkV "broil") ; mkV2 (mkV "grelhar") ; } ; --*
lin broiler_2_N = variants {mkN "frango" ; mkN "galinha" ; mkN "galo" ; } ; --*
lin broil_N = mkN "grelhado" ; --*
lin broken_11_A = mkA "quebrado" ; --*
lin broken_13_A = mkA "partido" ; --*
lin broken_1_A = variants {mkA "partido" ; mkA "quebrado" ; } ; --*
lin broken_8_A = mkA "perplexo" ; --*
lin brokerage_1_N = variants {mkN "agência" ; mkN "firm" ; } ; --*
lin broker_N = variants {mkN "Broker" ; mkN "corretor" ; mkN "intermediário" ; } ; --*
lin bromide_2_N = variants {mkN "banalidade" ; mkN "chavão" ; mkN "cliché" ; mkN "trivialidade" ; mkN "vulgaridade" ; } ; --*
lin bromine_N = variants {mkN "bromo" ; mkN "number" ; } ; --*
lin bromoform_N = mkN "Bromofórmio" ; --*
lin bronchial_A = mkA "bronquial" ; --*
lin bronchiole_N = mkN "bronquíolo" ; --*
lin bronchitis_N = mkN "bronquite" ; --*
lin bronchodilator_N = variants {mkN "Broncodilatador" ; mkN "Broncodilatadores" ; } ; --*
lin bronchopneumonia_N = variants {mkN "broncopneumonia" ; mkN "pneumonia" ; } ; --*
lin bronchoscope_N = mkN "broncoscópio" ; --*
lin bronchoscopic_A = mkA "broncoscópico" ; --*
lin bronchospasm_N = variants {mkN "broncoespasmo" ; mkN "broncospasmo" ; } ; --*
lin bronchus_N = variants {mkN "brônquios" ; mkN "tube" ; } ; --*
lin bronze_1_A = variants {mkA "bronzeado" ; mkA "da" ; mkA "de" ; } ; --*
lin bronze_1_N = mkN "bronze" ; --*
lin bronze_1_V2 = mkV2 (mkV "bronzear") ; --*
lin bronze_2_A = mkA "brônzeo" ; --*
lin bronze_2_N = mkN "bronze" ; --*
lin bronze_2_V2 = mkV2 (mkV "bronzear") ; --*
lin bronze_2_V = mkV "bronzear" ; --*
lin brooch_1_N = variants {mkN "alfinete" ; mkN "broche" ; mkN "Broche" ; mkN "colchete" ; } ; --*
lin brood_1_V = mkV "remoer" ; --*
lin brood_3_V = variants {mkV "amuar" ; mkV "emburrar" ; } ; --*
lin brood_4_V = mkV "ficar" ; --*
lin brood_5_V = mkV "eclodir" ; --*
lin brooding_1_N = mkN "incubação" ; --*
lin brood_N = variants {mkN "ninhada" ; mkN "prole" ; } ; --*
lin brooklet_N = mkN "ribeiro" ; --*
lin brook_N = variants {mkN "corrente" ; mkN "enseadas" ; mkN "Esteiro" ; mkN "pequena" ; mkN "regatos" ; mkN "riacho" ; mkN "ribeiro" ; } ; --*
lin brook_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin broom_1_N = mkN "vassoura" ; --*
lin broom_2_N = mkN "Podocytisus" ; --*
lin broth_1_N = mkN "caldo" ; --*
lin broth_2_N = mkN "caldo" ; --*
lin brothel_N = variants {mkN "alcoice" ; mkN "bordel" ; mkN "house" ; mkN "lupanar" ; mkN "of" ; mkN "prostíbulo" ; } ; --*
lin brother_1_N = variants {mkN "brother" ; mkN "irmão" ; } ; --*
lin brother_2_N = variants {mkN "frade" ; mkN "irmão" ; } ; --*
lin brother_3_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin brother_4_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin brother_5_N = mkN "Irmão" ; --*
lin brotherhood_2_N = variants {mkN "fraternidade" ; mkN "irmandade" ; mkN "ordem" ; } ; --*
lin brotherhood_3_N = variants {mkN "fraternidade" ; mkN "irmandade" ; } ; --*
lin brotherhood_4_N = variants {mkN "ordem" ; mkN "union" ; } ; --*
lin brother_in_law_N = variants {mkN "concunhado" ; mkN "cunhada" ; mkN "cunhado" ; } ; --*
lin brotherly_A = variants {mkA "fraternal" ; mkA "fraterno" ; } ; --*
lin brotula_N = mkN "Bythitidae" ; --*
lin brouhaha_1_N = mkN "rusga" ; --*
lin brow_1_N = mkN "testa" ; --*
lin brow_2_N = variants {mkN "sobrancelha" ; mkN "Sobrancelha" ; mkN "sobrolho" ; mkN "supercílio" ; } ; --*
lin browbeat_2_V2 = mkV2 (mkV "intimidar") ; --*
lin brown_1_A = variants {mkA "acastanhado" ; mkA "castanho" ; mkA "marrom" ; mkA "moreno" ; mkA "pardo" ; } ; --*
lin brown_1_N = variants {mkN "castanho" ; mkN "marrom" ; mkN "marron" ; } ; --*
lin brown_1_V2 = variants {mkV2 (mkV "acastanhar") ; mkV2 (mkV "dourar") ; mkV2 (mkV "gratinar") ; mkV2 (mkV "tostar") ; } ; --*
lin brown_4_N = variants {mkN "Universidade" ; mkN "University" ; } ; --*
lin brownie_2_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin brownie_3_N = mkN "fadinha" ; --*
lin brownish_A = variants {mkA "acastanhado" ; mkA "castanho" ; mkA "marrom" ; mkA "moreno" ; mkA "pardo" ; } ; --*
lin browse_1_V = mkV "ir" ; --*
lin browse_2_V = mkV "pastar" ; --*
lin browse_3_V = mkV "navegar" ; --*
lin browse_4_V = variants {mkV "dar" ; mkV "folear" ; mkV "pastar" ; } ; --*
lin browser_2_N = variants {mkN "browser" ; mkN "navegador" ; mkN "Navegadores" ; } ; --*
lin brucellosis_1_N = variants {mkN "brucelose" ; mkN "fever" ; } ; --*
lin bruges_PN = variants {mkPN "Bruges" ; mkPN "of" ; } ; --*
lin bruin_2_N = variants {mkN "arctos" ; mkN "bear" ; mkN "urso-pardo" ; } ; --*
lin bruise_1_V2 = mkV2 (mkV "contundir") ; --*
lin bruise_2_V2 = variants {mkV2 (mkV "magoar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "provocar") ; } ; --*
lin bruise_N = variants {mkN "contusão" ; mkN "Contusão" ; mkN "hematoma" ; mkN "inchaço" ; } ; --*
lin bruit_V2 = variants {mkV2 (mkV "difundir") ; mkV2 (mkV "espalhar") ; } ; --*
lin brumous_A = mkA "nevoeirento" ; --*
lin brunch_N = mkN "Brunch" ; --*
lin bruneian_A = variants {mkA "bruneano" ; mkA "bruneíno" ; } ; --*
lin brunei_PN = mkPN "Brunei" ; --*
lin brunet_1_A = variants {mkA "brunícoma" ; mkA "castanícoma" ; mkA "de" ; mkA "fuscícoma" ; mkA "marronícoma" ; mkA "morena" ; mkA "obscurícoma" ; } ; --*
lin brunet_N = variants {mkN "bruna" ; mkN "morena" ; } ; --*
lin brunetteFem_N = variants {mkN "bruna" ; mkN "morena" ; } ; --*
lin brunetteMasc_N = variants {mkN "bruna" ; mkN "morena" ; } ; --*
lin brunswick_1_PN = mkPN "Brunsvique" ; --*
lin brunswick_3_PN = variants {mkPN "Bransvique" ; mkPN "Braunschweig" ; } ; --*
lin brush_1_N = mkN "arvoredo" ; --*
lin brush_1_V2 = mkV2 (mkV "escovar") ; --*
lin brush_2_N = variants {mkN "brocha" ; mkN "escova" ; mkN "pincel" ; } ; --*
lin brush_2_V2 = variants {mkV2 (mkV "raspar") ; mkV2 (mkV "roçar") ; } ; --*
lin brush_3_V2 = mkV2 (mkV "escovar") ; --*
lin brush_4_V2 = variants {mkV2 (mkV "varrer") ; mkV2 (mkV "vasculhar") ; mkV2 (mkV "vassourar") ; } ; --*
lin brush_5_V2 = mkV2 (mkV "escovar") ; --*
lin brush_6_N = variants {mkN "conflito" ; mkN "disputa" ; } ; --*
lin brush_aside_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "descartar") ; mkV2 (mkV "escovar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "off") ; } ; --*
lin brush_off_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "descartar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "off") ; } ; --*
lin brush_up_1_V2 = variants {mkV2 (mkV "rever") ; mkV2 (mkV "up") ; } ; --*
lin brush_up_2_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin brush_up_N = mkN "revisão" ; --*
lin brushwood_2_N = mkN "arvoredo" ; --*
lin brusque_A = variants {mkA "brusca" ; mkA "brusco" ; } ; --*
lin brussels_PN = variants {mkPN "Bruxelas" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin brutal_1_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin brutal_2_A = mkA "brutal" ; --*
lin brutal_3_A = variants {mkA "animal" ; mkA "bestial" ; mkA "brutal" ; } ; --*
lin brutality_1_N = variants {mkN "barbárie" ; mkN "brutalidade" ; } ; --*
lin brutality_2_N = variants {mkN "actodebárbaro" ; mkN "barbárie" ; mkN "barbarismo" ; } ; --*
lin brute_1_N = variants {mkN "besta" ; mkN "fera" ; } ; --*
lin brute_2_N = variants {mkN "animal" ; mkN "being" ; mkN "besta" ; mkN "bicho" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin brutish_A = variants {mkA "animal" ; mkA "bestial" ; mkA "brutal" ; } ; --*
lin bruxism_N = mkN "bruxismo" ; --*
lin bryan_1_PN = variants {mkPN "Commoner" ; mkPN "Jennings" ; mkPN "Orator" ; mkPN "William" ; } ; --*
lin bryophyte_N = variants {mkN "briófita" ; mkN "plant" ; } ; --*
lin bubble_1_N = variants {mkN "bolha" ; mkN "borbulha" ; } ; --*
lin bubble_1_V = variants {mkV "bolhadear" ; mkV "borbulhar" ; mkV "formar" ; } ; --*
lin bubble_3_V = mkV "borbulhar" ; --*
lin bubble_5_V = mkV "arrotar" ; --*
lin bubble_over_V = variants {mkV "babar" ; mkV "over" ; } ; --*
lin bubbler_1_N = variants {mkN "bebedouro" ; mkN "fountain" ; } ; --*
lin bubbly_1_A = variants {mkA "borbulhante" ; mkA "espumoso" ; } ; --*
lin bubbly_N = variants {mkN "champagne" ; mkN "Champagne" ; mkN "champanha" ; mkN "champanhe" ; } ; --*
lin buccal_2_A = mkA "oral" ; --*
lin buccaneer_N = variants {mkN "bucaneiro" ; mkN "pirata" ; mkN "robber" ; mkN "rover" ; } ; --*
lin buck_1_V = mkV "ralar" ; --*
lin buck_2_N = variants {mkN "bill" ; mkN "dólar" ; mkN "dollar" ; } ; --*
lin buck_2_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "resistir") ; } ; --*
lin buck_4_V = mkV "pinotear" ; --*
lin bucket_1_N = variants {mkN "balde" ; mkN "caçamba" ; mkN "cubeta" ; } ; --*
lin buckeye_2_N = variants {mkN "Castanheiro-da-índia" ; mkN "chestnut" ; mkN "hippocastanum" ; } ; --*
lin buckle_1_N = variants {mkN "fivela" ; mkN "Fivela" ; } ; --*
lin buckle_1_V2 = mkV2 (mkV "afivelar") ; --*
lin buckle_1_V = mkV "afivelar" ; --*
lin buckle_3_V = mkV "bombear" ; --*
lin buckle_down_V = variants {mkV "down" ; mkV "mourejar" ; mkV "one's" ; } ; --*
lin buckler_N = variants {mkN "broquel" ; mkN "escudo" ; mkN "Escudos" ; } ; --*
lin buckle_under_V = variants {mkV "ceder" ; mkV "in" ; mkV "sucumbir" ; mkV "under" ; } ; --*
lin buckskins_N = mkN "calções" ; --*
lin buck_up_V2 = variants {mkV2 (mkV "heart") ; mkV2 (mkV "up") ; } ; --*
lin buckwheat_1_N = variants {mkN "esculentum" ; mkN "fagopyrum" ; mkN "trigo" ; } ; --*
lin buckwheat_2_N = mkN "trigo" ; --*
lin bucolic_1_A = mkA "bucólico" ; --*
lin bud_1_V = variants {mkV "gomar" ; mkV "rebentar" ; } ; --*
lin bud_2_N = variants {mkN "broto" ; mkN "gomo" ; mkN "maconha" ; mkN "rebento" ; mkN "renovo" ; } ; --*
lin budapest_PN = variants {mkPN "Budapeste" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin buddhism_1_N = mkN "Budismo" ; --*
lin buddhism_2_N = mkN "budismo" ; --*
lin buddhistFem_N = variants {mkN "budista" ; mkN "Budistas" ; } ; --*
lin buddhistMasc_N = variants {mkN "budista" ; mkN "Budistas" ; } ; --*
lin budding_N = mkN "Gemulação" ; --*
lin buddy_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin budgerigar_1_N = variants {mkN "parakeet" ; mkN "periquito" ; mkN "Periquito" ; mkN "undulatus" ; } ; --*
lin budget_1_N = mkN "orçamento" ; --*
lin budget_2_N = variants {mkN "orçamento" ; mkN "verba" ; } ; --*
lin budgetary_A = variants {mkA "orçamental" ; mkA "orçamentário" ; } ; --*
lin budget_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "orçar") ; } ; --*
lin budget_V = variants {mkV "fazer" ; mkV "orçar" ; } ; --*
lin budge_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; mkV2 (mkV "mexer") ; } ; --*
lin budge_V = variants {mkV "agitar" ; mkV "bater" ; mkV "mexer" ; } ; --*
lin budgie_N = variants {mkN "parakeet" ; mkN "periquito" ; mkN "Periquito" ; mkN "undulatus" ; } ; --*
lin buenos_aires_PN = variants {mkPN "Aires" ; mkPN "of" ; } ; --*
lin buff_1_N = mkN "amante" ; --*
lin buff_2_V2 = mkV2 (mkV "polir") ; --*
lin buff_4_N = variants {mkN "brown" ; mkN "caramelo" ; mkN "sienna" ; } ; --*
lin buffalo_1_N = variants {mkN "bisão" ; mkN "bison" ; mkN "búfalo" ; mkN "buffalo" ; } ; --*
lin buffalo_1_PN = variants {mkPN "bisão" ; mkPN "bison" ; mkPN "búfalo" ; mkPN "buffalo" ; } ; --*
lin buffalo_2_N = mkN "Buffalo" ; --*
lin buffalo_2_PN = mkPN "Buffalo" ; --*
lin buffalo_4_N = variants {mkN "búfalo" ; mkN "World" ; } ; --*
lin buffalo_4_PN = variants {mkPN "búfalo" ; mkPN "World" ; } ; --*
lin buffer_2_V2 = mkV2 (mkV "amortecer") ; --*
lin buffer_4_N = variants {mkN "buffer" ; mkN "storage" ; mkN "store" ; } ; --*
lin buffet_1_N = variants {mkN "armário" ; mkN "bufete" ; mkN "prateleiras" ; } ; --*
lin buffet_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "arrombar") ; mkV2 (mkV "golpear") ; } ; --*
lin buffet_2_N = mkN "buffet" ; --*
lin buffoon_1_N = mkN "bufão" ; --*
lin buffoon_2_N = variants {mkN "andrew" ; mkN "palhaço" ; mkN "Palhaços" ; } ; --*
lin bug_1_N = variants {mkN "bicho" ; mkN "hemípteros" ; mkN "insecto" ; mkN "inseto" ; } ; --*
lin bug_1_V2 = variants {mkV2 (mkV "amolar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "incomodar") ; } ; --*
lin bug_2_N = variants {mkN "defeito" ; mkN "falha" ; } ; --*
lin bug_2_V2 = mkV2 (mkV "interceptar") ; --*
lin bug_3_N = mkN "grampo" ; --*
lin bug_4_N = variants {mkN "insect" ; mkN "insecto" ; mkN "inseto" ; } ; --*
lin bug_5_N = mkN "micróbio" ; --*
lin bugaboo_1_N = mkN "bicho" ; --*
lin bugbear_1_N = mkN "bicho" ; --*
lin bugger_N = variants {mkN "Bugre" ; mkN "praticarsodomia" ; } ; --*
lin bugger_V2 = mkV2 (mkV "sodomizar") ; --*
lin bugger_V = mkV "sodomizar" ; --*
lin buggery_N = variants {mkN "intercourse" ; mkN "sex" ; mkN "sodomia" ; } ; --*
lin buggy_1_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin bug_hunter_N = variants {mkN "entomologista" ; mkN "entomólogo" ; } ; --*
lin bugle_1_N = variants {mkN "clarim" ; mkN "fliscorne" ; } ; --*
lin bugloss_2_N = variants {mkN "echioides" ; mkN "oxtongue" ; mkN "Picris" ; } ; --*
lin build_1_N = mkN "físico" ; --*
lin build_1_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "edificar") ; } ; --*
lin build_2_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin build_2_V = variants {mkV "desenvolver" ; mkV "up" ; } ; --*
lin build_3_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "estabelecer") ; } ; --*
lin build_6_V2 = mkV2 (mkV "construir") ; --*
lin build_8_V2 = mkV2 (mkV "construir") ; --*
lin builder_1_N = variants {mkN "builder" ; mkN "constructora" ; mkN "empreiteira" ; } ; --*
lin builder_2_N = mkN "construtor" ; --*
lin builder_3_N = variants {mkN "constructor" ; mkN "construtor" ; mkN "empreiteiro" ; } ; --*
lin building_1_N = variants {mkN "edifício" ; mkN "prédio" ; } ; --*
lin building_2_N = variants {mkN "construção" ; mkN "edificação" ; } ; --*
lin building_3_N = variants {mkN "construção" ; mkN "edifício" ; } ; --*
lin building_4_N = mkN "prédio" ; --*
lin build_up_1_N = variants {mkN "acumulação" ; mkN "acúmulo" ; } ; --*
lin build_up_3_V2 = variants {mkV2 (mkV "prover") ; mkV2 (mkV "up") ; } ; --*
lin built_in_A = mkA "inerente" ; --*
lin bulb_1_N = variants {mkN "bolbo" ; mkN "cebola" ; } ; --*
lin bulb_2_N = variants {mkN "bulb" ; mkN "lamp" ; mkN "lâmpada" ; mkN "light" ; } ; --*
lin bulb_5_N = variants {mkN "Bulbo" ; mkN "oblongata" ; } ; --*
lin bulb_6_N = mkN "bulbo" ; --*
lin bulgarian_A = variants {mkA "búlgara" ; mkA "búlgaro" ; } ; --*
lin bulgarianFem_N = mkN "búlgaro" ; --*
lin bulgarianMasc_N = mkN "búlgaro" ; --*
lin bulgarian_N = variants {mkN "búlgaro" ; mkN "língua" ; } ; --*
lin bulgaria_PN = variants {mkPN "Bulgaria" ; mkPN "Bulgária" ; mkPN "of" ; } ; --*
lin bulge_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin bulimia_2_N = mkN "bulimia" ; --*
lin bulk_1_N = variants {mkN "ascendência" ; mkN "maioria" ; mkN "maioridade" ; } ; --*
lin bulk_2_N = variants {mkN "extensão" ; mkN "quantidade" ; mkN "volume" ; } ; --*
lin bulky_A = variants {mkA "grosso" ; mkA "massudo" ; mkA "volumoso" ; } ; --*
lin bull_10_N = variants {mkN "Bulas" ; mkN "bull" ; } ; --*
lin bull_11_N = variants {mkN "macho" ; mkN "touro" ; } ; --*
lin bull_1_N = variants {mkN "toiro" ; mkN "touro" ; } ; --*
lin bull_3_N = variants {mkN "besteira" ; mkN "bosta" ; mkN "bull" ; mkN "merda" ; } ; --*
lin bull_5_N = variants {mkN "policial" ; mkN "tira" ; } ; --*
lin bull_8_N = variants {mkN "Taurus" ; mkN "the" ; mkN "Touro" ; } ; --*
lin bulla_1_N = mkN "bolha" ; --*
lin bulla_2_N = mkN "bula" ; --*
lin bulldog_N = variants {mkN "buldogue" ; mkN "bulldog" ; } ; --*
lin bulldozer_N = variants {mkN "buldózer" ; mkN "buldôzer" ; } ; --*
lin bulldoze_V2 = mkV2 (mkV "arrasar") ; --*
lin bullet_1_N = variants {mkN "bala" ; mkN "balaço" ; mkN "Projetil" ; mkN "Projétil" ; } ; --*
lin bulletin_N = mkN "boletim" ; --*
lin bullfighter_N = mkN "toureiro" ; --*
lin bullfighting_N = variants {mkN "Tauromaquia" ; mkN "tourada" ; } ; --*
lin bullfight_N = variants {mkN "corrida" ; mkN "tourada" ; } ; --*
lin bullfrog_N = variants {mkN "catesbeiana" ; mkN "rã-touro-americana" ; } ; --*
lin bullish_A = variants {mkA "altista" ; mkA "de" ; } ; --*
lin bullock_1_N = mkN "novilho" ; --*
lin bullock_2_N = mkN "boi" ; --*
lin bullpen_2_N = variants {mkN "cela" ; mkN "cell" ; mkN "centre" ; } ; --*
lin bullring_N = mkN "praça" ; --*
lin bullshit_N = variants {mkN "besteira" ; mkN "bosta" ; mkN "bull" ; mkN "merda" ; } ; --*
lin bully_1_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin bully_2_V2 = mkV2 (mkV "intimidar") ; --*
lin bully_2_V = mkV "intimidar" ; --*
lin bully_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin bullying_N = variants {mkN "bullying" ; mkN "intimidação" ; } ; --*
lin bulwark_1_N = variants {mkN "baluarte" ; mkN "muralha" ; mkN "trincheira" ; } ; --*
lin bulwark_3_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin bum_1_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin bum_2_N = variants {mkN "vagabunda" ; mkN "vagabundo" ; } ; --*
lin bum_3_N = variants {mkN "vadio" ; mkN "vagabundo" ; } ; --*
lin bum_4_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin bum_A = mkA "brega" ; --*
lin bumblebee_1_N = variants {mkN "abelhão" ; mkN "mamangaba" ; mkN "Mamangaba" ; mkN "zangão" ; } ; --*
lin bumbling_A = mkA "desengoçado" ; --*
lin bump_1_N = variants {mkN "galo" ; mkN "inchaço" ; } ; --*
lin bump_2_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin bump_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "trombar") ; } ; --*
lin bump_3_N = mkN "choque" ; --*
lin bump_4_V2 = variants {mkV2 (mkV "demover") ; mkV2 (mkV "despromover") ; mkV2 (mkV "downstairs") ; mkV2 (mkV "relegar") ; } ; --*
lin bump_5_V2 = variants {mkV2 (mkV "desalojar") ; mkV2 (mkV "remover") ; } ; --*
lin bumper_2_N = mkN "pára-choque" ; --*
lin bump_into_1_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "colidir") ; } ; --*
lin bumpkinly_A = variants {mkA "caipira" ; mkA "provinciano" ; mkA "rústico" ; } ; --*
lin bumpkin_N = variants {mkN "caipira" ; mkN "rústico" ; } ; --*
lin bump_off_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin bumptiousness_N = mkN "petulância" ; --*
lin bumpy_2_A = variants {mkA "acidentado" ; mkA "anguloso" ; } ; --*
lin bunch_1_N = variants {mkN "aglomerado" ; mkN "punhado" ; } ; --*
lin bunch_2_N = variants {mkN "gangue" ; mkN "quadrilha" ; } ; --*
lin bunch_3_N = mkN "grupo" ; --*
lin bunchgrass_1_N = variants {mkN "capim" ; mkN "grass" ; } ; --*
lin bundle_1_N = mkN "pacote" ; --*
lin bundle_2_N = variants {mkN "fardo" ; mkN "feixe" ; mkN "molho" ; mkN "pacote" ; mkN "penca" ; } ; --*
lin bung_1_V2 = mkV2 (mkV "gratificar") ; --*
lin bungalow_N = variants {mkN "bangalô" ; mkN "casa" ; mkN "casinha" ; mkN "casinhola" ; mkN "chalé" ; } ; --*
lin bung_hole_1_N = variants {mkN "ânus" ; mkN "cuzão" ; mkN "pentelho" ; mkN "rabo" ; } ; --*
lin bungle_1_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin bungle_N = variants {mkN "bobagem" ; mkN "fiasco" ; mkN "gafe" ; } ; --*
lin bunion_N = variants {mkN "Hallux" ; mkN "joanete" ; } ; --*
lin bunk_1_V = mkV "dar" ; --*
lin bunk_2_N = variants {mkN "camarote" ; mkN "in" ; mkN "liteira" ; } ; --*
lin bunk_3_N = mkN "liteira" ; --*
lin bunk_3_V = variants {mkV "away" ; mkV "escapar" ; mkV "escapulir" ; mkV "for" ; mkV "fugir" ; mkV "it" ; mkV "tail" ; mkV "the" ; mkV "to" ; } ; --*
lin bunk_5_N = variants {mkN "besteira" ; mkN "disparate" ; mkN "insensatez" ; mkN "tolice" ; } ; --*
lin bunk_6_N = variants {mkN "bed" ; mkN "liteira" ; } ; --*
lin bunker_1_N = variants {mkN "casamata" ; mkN "trap" ; } ; --*
lin bun_N = variants {mkN "bolo" ; mkN "pãozinho" ; } ; --*
lin bunsen_1_N = variants {mkN "Bunsen" ; mkN "Robert" ; mkN "Wilhelm" ; } ; --*
lin buoyancy_3_N = mkN "empuxo" ; --*
lin buoy_N = variants {mkN "boia" ; mkN "bóia" ; } ; --*
lin burden_1_N = variants {mkN "carga" ; mkN "fardo" ; mkN "preocupação" ; } ; --*
lin burden_1_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "down") ; } ; --*
lin burden_2_N = mkN "carga" ; --*
lin burden_2_V2 = mkV2 (mkV "responsabilizar") ; --*
lin burden_3_N = mkN "essência" ; --*
lin burdensome_A = variants {mkA "exigente" ; mkA "onerosa" ; mkA "oneroso" ; mkA "pesado" ; } ; --*
lin burdock_N = mkN "bardana" ; --*
lin bureau_1_N = variants {mkN "agência" ; mkN "agency" ; mkN "escritório" ; mkN "Governo" ; mkN "instituição" ; } ; --*
lin bureau_2_N = variants {mkN "aparelhador" ; mkN "cómoda" ; mkN "cômodas" ; mkN "gaveteiro" ; mkN "of" ; } ; --*
lin bureaucracy_1_N = mkN "burocracia" ; --*
lin bureaucracy_3_N = mkN "burocracia" ; --*
lin bureaucratic_1_A = mkA "burocrático" ; --*
lin bureaucrat_N = variants {mkN "burocrata" ; mkN "official" ; } ; --*
lin burette_1_N = mkN "bureta" ; --*
lin burgeon_V = mkV "desabrochar" ; --*
lin burgher_2_N = variants {mkN "burguês" ; mkN "burguesa" ; } ; --*
lin burgher_3_N = variants {mkN "Burger" ; mkN "E." ; mkN "Earl" ; mkN "Warren" ; } ; --*
lin burgher_4_N = variants {mkN "hamburger" ; mkN "hambúrguer" ; } ; --*
lin burgh_N = mkN "burgh" ; --*
lin burglar_N = variants {mkN "assaltante" ; mkN "ventoso" ; } ; --*
lin burgle_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "roubar") ; } ; --*
lin burgle_V = variants {mkV "furtar" ; mkV "roubar" ; } ; --*
lin burgomaster_N = variants {mkN "prefeito" ; mkN "presidente" ; } ; --*
lin burgrave_2_N = mkN "Burgrave" ; --*
lin burgundy_1_N = mkN "Borgonha" ; --*
lin burgundy_3_N = variants {mkN "bordô" ; mkN "Borgonha" ; } ; --*
lin burial_1_N = variants {mkN "enterro" ; mkN "funeral" ; mkN "inumação" ; mkN "sepultamento" ; mkN "sepultura" ; } ; --*
lin burial_ground_N = variants {mkN "cemitério" ; mkN "ground" ; mkN "necrópole" ; mkN "park" ; mkN "site" ; } ; --*
lin burlap_N = mkN "estopa" ; --*
lin burlesque_2_N = mkN "paródia" ; --*
lin burlesque_V2 = variants {mkV2 (mkV "arremedar") ; mkV2 (mkV "parodiar") ; } ; --*
lin burly_1_A = mkA "musculoso" ; --*
lin burma_PN = variants {mkPN "Birmânia" ; mkPN "Myanmar" ; mkPN "of" ; mkPN "República" ; } ; --*
lin burmese_2_N = variants {mkN "birmã" ; mkN "birmane" ; mkN "birmanês" ; mkN "língua" ; } ; --*
lin burmese_A = variants {mkA "birmã" ; mkA "birmane" ; mkA "birmanês" ; } ; --*
lin burn_11_V2 = mkV2 (mkV "cauterizar") ; --*
lin burn_15_V2 = variants {mkV2 (mkV "atear") ; mkV2 (mkV "queimar") ; } ; --*
lin burn_15_V = variants {mkV "atear" ; mkV "queimar" ; } ; --*
lin burn_1_V2 = variants {mkV2 (mkV "arder") ; mkV2 (mkV "down") ; } ; --*
lin burn_2_N = variants {mkN "bronzeado" ; mkN "queimadura" ; } ; --*
lin burn_2_V = variants {mkV "brilhar" ; mkV "queimar" ; } ; --*
lin burn_3_N = mkN "queimadura" ; --*
lin burn_3_V = variants {mkV "carburar" ; mkV "queimar" ; } ; --*
lin burn_4_N = variants {mkN "mark" ; mkN "queimadura" ; } ; --*
lin burn_4_V2 = mkV2 (mkV "queimar") ; --*
lin burn_5_N = mkN "queimadura" ; --*
lin burn_6_V = mkV "arder" ; --*
lin burn_7_V2 = variants {mkV2 (mkV "incinerar") ; mkV2 (mkV "queimar") ; } ; --*
lin burnable_A = mkA "inflamável" ; --*
lin burning_1_N = mkN "combustão" ; --*
lin burning_3_N = mkN "combustão" ; --*
lin burnish_V2 = mkV2 (mkV "polir") ; --*
lin burn_off_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "queimar") ; mkV2 (mkV "up") ; } ; --*
lin burn_off_5_V2 = variants {mkV2 (mkV "arder") ; mkV2 (mkV "queimar") ; } ; --*
lin burnouse_1_N = variants {mkN "albornoz" ; mkN "Albornoz" ; } ; --*
lin burnous_N = variants {mkN "albornoz" ; mkN "Albornoz" ; } ; --*
lin burn_out_1_V = variants {mkV "estourar" ; mkV "out" ; } ; --*
lin burn_up_1_V = variants {mkV "arder" ; mkV "up" ; } ; --*
lin burp_N = mkN "arroto" ; --*
lin burp_V = mkV "arrotar" ; --*
lin burqa_1_N = mkN "burca" ; --*
lin burr_3_N = variants {mkN "Aaron" ; mkN "Burr" ; } ; --*
lin burrito_N = mkN "burrito" ; --*
lin burro_N = mkN "asno" ; --*
lin burrow_N = variants {mkN "cova" ; mkN "toca" ; mkN "túnel" ; } ; --*
lin burrow_V = mkV "cavar" ; --*
lin bursa_1_N = mkN "Bursa" ; --*
lin bursitis_N = variants {mkN "bursite" ; mkN "Bursite" ; } ; --*
lin burst_1_N = variants {mkN "estouro" ; mkN "explosão" ; } ; --*
lin burst_1_V = variants {mkV "estourar" ; mkV "explodir" ; mkV "open" ; } ; --*
lin burst_2_N = variants {mkN "caudal" ; mkN "salva" ; mkN "saraivada" ; mkN "torrente" ; mkN "voleio" ; } ; --*
lin burst_2_V = mkV "explodir" ; --*
lin burst_3_N = mkN "ataque" ; --*
lin burst_3_V = mkV "detonar" ; --*
lin burst_4_N = mkN "explosão" ; --*
lin burst_7_V2 = mkV2 (mkV "colapsar") ; --*
lin burst_7_V = mkV "colapsar" ; --*
lin burst_8_V = variants {mkV "arrebentar" ; mkV "arrombar" ; } ; --*
lin burst_into_V2 = mkV2 (mkV "irromper") ; --*
lin burthen_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "down") ; } ; --*
lin burton_2_N = variants {mkN "Burton" ; mkN "Richard" ; } ; --*
lin burundian_1_A = variants {mkA "burundiano" ; mkA "burundinense" ; mkA "burundinês" ; } ; --*
lin burundi_PN = variants {mkPN "Burundi" ; mkPN "of" ; } ; --*
lin bury_1_V = variants {mkV "enterrar" ; mkV "esconder" ; mkV "sepultar" ; mkV "soterrar" ; } ; --*
lin bury_2_V2 = variants {mkV2 (mkV "enterrar") ; mkV2 (mkV "sepultar") ; mkV2 (mkV "soterrar") ; mkV2 (mkV "to") ; } ; --*
lin bury_3_V2 = mkV2 (mkV "enterrar") ; --*
lin bury_6_V2 = variants {mkV2 (mkV "enterrar") ; mkV2 (mkV "esqueça-se") ; mkV2 (mkV "esquecer") ; } ; --*
lin burying_ground_N = variants {mkN "cemitério" ; mkN "ground" ; mkN "necrópole" ; mkN "park" ; mkN "site" ; } ; --*
lin bus_1_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin bus_4_N = mkN "calhambeque" ; --*
lin bush_1_N = variants {mkN "arbusto" ; mkN "arbustos" ; mkN "arvoreta" ; mkN "mato" ; mkN "moita" ; } ; --*
lin bush_3_N = mkN "Chaparral" ; --*
lin bush_4_N = variants {mkN "Bush" ; mkN "George" ; mkN "W." ; mkN "Walker" ; } ; --*
lin bush_5_N = variants {mkN "Bush" ; mkN "Vannevar" ; } ; --*
lin bush_6_N = variants {mkN "Bush" ; mkN "Herbert" ; mkN "H.W." ; } ; --*
lin bush_7_N = variants {mkN "hair" ; mkN "Pêlo" ; } ; --*
lin bushbuck_N = variants {mkN "Bauala" ; mkN "scriptus" ; } ; --*
lin bushel_1_N = mkN "Celemim" ; --*
lin bushman_1_N = variants {mkN "bosquímano" ; mkN "Bosquímano" ; mkN "boximane" ; } ; --*
lin bushwhacker_1_N = mkN "cateto" ; --*
lin bushy_1_A = variants {mkA "peludo" ; mkA "piloso" ; mkA "viloso" ; } ; --*
lin business_1_N = variants {mkN "concern" ; mkN "empresas" ; mkN "organisation" ; mkN "organization" ; } ; --*
lin business_2_N = variants {mkN "empresa" ; mkN "enterprise" ; } ; --*
lin business_3_N = variants {mkN "função" ; mkN "lugar" ; mkN "ocupação" ; mkN "of" ; mkN "ofício" ; mkN "profissão" ; mkN "serviço" ; mkN "trabalho" ; } ; --*
lin business_4_N = mkN "problema" ; --*
lin business_6_N = mkN "negócio" ; --*
lin business_8_N = variants {mkN "clientela" ; mkN "freguesia" ; } ; --*
lin business_9_N = variants {mkN "ato" ; mkN "business" ; } ; --*
lin businesslike_2_A = mkA "sério" ; --*
lin businessman_N = variants {mkN "comerciante" ; mkN "empresário" ; mkN "homemdenegócios" ; mkN "negociante" ; mkN "of" ; } ; --*
lin businessperson_N = mkN "empresário" ; --*
lin businesswoman_N = mkN "mulher" ; --*
lin buskin_N = variants {mkN "boot" ; mkN "coturno" ; } ; --*
lin busman_N = variants {mkN "driver" ; mkN "motorista" ; } ; --*
lin buspirone_N = mkN "buspirona" ; --*
lin bust_1_N = mkN "fracasso" ; --*
lin bust_1_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "destruir") ; } ; --*
lin bust_3_N = mkN "Busto" ; --*
lin bust_3_V2 = variants {mkV2 (mkV "cindir") ; mkV2 (mkV "dividir") ; mkV2 (mkV "rasgar") ; } ; --*
lin bust_3_V = variants {mkV "cindir" ; mkV "dividir" ; mkV "rasgar" ; } ; --*
lin bust_4_N = mkN "compulsão" ; --*
lin bust_4_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "destruir") ; mkV2 (mkV "out") ; mkV2 (mkV "quebrar") ; } ; --*
lin bust_4_V = variants {mkV "apart" ; mkV "destruir" ; mkV "out" ; mkV "quebrar" ; } ; --*
lin bust_5_V = variants {mkV "arrebentar" ; mkV "arrombar" ; } ; --*
lin bustard_N = mkN "abetarda" ; --*
lin buster_1_N = variants {mkN "gajo" ; mkN "homem" ; } ; --*
lin bustle_1_N = mkN "freneticidade" ; --*
lin bust_up_V = variants {mkV "destruir" ; mkV "up" ; } ; --*
lin busy_1_A = mkA "ocupado" ; --*
lin busy_5_A = variants {mkA "ocupado" ; mkA "use" ; } ; --*
lin busy_V2 = mkV2 (mkV "ocupar") ; --*
lin butane_N = mkN "butano" ; --*
lin butanone_N = variants {mkN "butanona" ; mkN "ethyl" ; } ; --*
lin butch_1_N = variants {mkN "fufa" ; mkN "sapatão" ; } ; --*
lin butcher_1_N = variants {mkN "açougueiro" ; mkN "homem" ; mkN "talhante" ; } ; --*
lin butcher_V2 = mkV2 (mkV "matar") ; --*
lin butchery_1_N = variants {mkN "abatedouro" ; mkN "matadouro" ; } ; --*
lin butchery_3_N = variants {mkN "abate" ; mkN "assassinato" ; mkN "carnificina" ; mkN "massacre" ; mkN "murder" ; } ; --*
lin butler_1_N = mkN "mordomo" ; --*
lin but_Predet = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin butt_1_N = variants {mkN "end" ; mkN "rabo" ; } ; --*
lin butt_4_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin butt_6_N = variants {mkN "cigarro" ; mkN "nail" ; } ; --*
lin butt_9_N = variants {mkN "bituca" ; mkN "traseiro" ; } ; --*
lin butte_1_N = mkN "planalto" ; --*
lin butter_1_N = mkN "manteiga" ; --*
lin butterbean_2_N = variants {mkN "bean" ; mkN "lunatus" ; mkN "plant" ; } ; --*
lin butterfly_1_N = variants {mkN "borboleta" ; mkN "borboletas" ; mkN "mariposa" ; } ; --*
lin butterfly_2_N = variants {mkN "borboleta" ; mkN "borboletas" ; mkN "mariposa" ; mkN "stroke" ; } ; --*
lin buttermilk_N = mkN "leitelho" ; --*
lin butter_up_V2 = variants {mkV2 (mkV "puxar") ; mkV2 (mkV "up") ; } ; --*
lin butter_V2 = variants {mkV2 (mkV "amanteigar") ; mkV2 (mkV "passar") ; mkV2 (mkV "pôr") ; } ; --*
lin buttery_1_N = variants {mkN "aparador" ; mkN "bodega" ; mkN "despensa" ; mkN "doçaria" ; } ; --*
lin buttock_N = variants {mkN "anca" ; mkN "banda" ; mkN "bunda" ; mkN "fundilhos" ; mkN "nádega" ; mkN "nalga" ; mkN "traseiro" ; } ; --*
lin buttocks_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin button_1_N = mkN "botão" ; --*
lin button_2_N = variants {mkN "botão" ; mkN "button" ; } ; --*
lin button_2_V2 = mkV2 (mkV "abotoar") ; --*
lin button_3_N = mkN "botão" ; --*
lin button_5_N = variants {mkN "berbigão" ; mkN "clitóris" ; mkN "clítoris" ; mkN "grelo" ; } ; --*
lin button_6_N = mkN "botão" ; --*
lin button_7_N = mkN "botão" ; --*
lin buttonhole_1_N = variants {mkN "casa" ; mkN "hole" ; } ; --*
lin buttress_N = mkN "contraforte" ; --*
lin butylene_1_N = mkN "buteno" ; --*
lin butyl_N = mkN "butil" ; --*
lin butyrin_N = mkN "Butirina" ; --*
lin buxom_1_A = mkA "peituda" ; --*
lin buxom_2_A = variants {mkA "rechonchuda" ; mkA "viçosa" ; } ; --*
lin buy_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "comprar") ; mkV2 (mkV "obter") ; } ; --*
lin buy_2_V2 = variants {mkV2 (mkV "corromper") ; mkV2 (mkV "one's") ; mkV2 (mkV "subornar") ; } ; --*
lin buy_4_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "comprar") ; } ; --*
lin buy_5_V2 = variants {mkV2 (mkV "cair") ; mkV2 (mkV "engolir") ; } ; --*
lin buy_back_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "readquirir") ; } ; --*
lin buyerFem_N = variants {mkN "comprador" ; mkN "freguês" ; } ; --*
lin buyerMasc_N = variants {mkN "comprador" ; mkN "freguês" ; } ; --*
lin buying_N = variants {mkN "aquisição" ; mkN "compra" ; mkN "gestão" ; } ; --*
lin buy_in_V2 = variants {mkV2 (mkV "estocar") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin buy_off_V2 = mkV2 (mkV "off") ; --*
lin buy_out_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin buy_up_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin buzzard_2_N = variants {mkN "buteo" ; mkN "milhafre" ; } ; --*
lin buzzer_1_N = mkN "campainha" ; --*
lin buzz_off_V = variants {mkV "off" ; mkV "saia" ; } ; --*
lin by_1_Adv = mkAdv "por" ; --*
lin by_and_large_Adv = variants {mkAdv "and" ; mkAdv "em" ; mkAdv "generalmente" ; mkAdv "often" ; } ; --*
lin bye_bye_Interj = variants {ss "adeus" ; ss "atélogo" ; ss "day" ; ss "despedida" ; ss "long" ; ss "revoir" ; ss "wiedersehen" ; } ; --*
lin bye_Interj = variants {ss "adeus" ; ss "atélogo" ; ss "day" ; ss "despedida" ; ss "long" ; ss "revoir" ; ss "wiedersehen" ; } ; --*
lin bylaw_N = variants {mkN "estatuto" ; mkN "regulamento" ; mkN "regulamentos" ; } ; --*
lin bypass_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "contornar") ; } ; --*
lin byplay_N = variants {mkN "ato" ; mkN "business" ; } ; --*
lin byproduct_1_N = mkN "subprodutos" ; --*
lin byproduct_2_N = variants {mkN "derivado" ; mkN "subprodutos" ; } ; --*
lin byssus_N = mkN "Bisso" ; --*
lin byte_N = variants {mkN "baite" ; mkN "byte" ; } ; --*
lin byword_N = variants {mkN "adágio" ; mkN "aforismo" ; mkN "ditado" ; mkN "Ditado" ; mkN "provérbio" ; mkN "Provérbios" ; } ; --*
lin byzantine_1_A = mkA "bizantino" ; --*
lin byzantine_2_A = mkA "bizantino" ; --*
lin byzantine_3_A = variants {mkA "convoluto" ; mkA "tortuoso" ; } ; --*
lin cab_1_N = mkN "camarote" ; --*
lin cab_2_N = mkN "táxi" ; --*
lin cab_3_N = variants {mkN "Taxi" ; mkN "táxi" ; } ; --*
lin cabal_1_N = variants {mkN "camarilha" ; mkN "facção" ; } ; --*
lin cabal_2_N = variants {mkN "conjuração" ; mkN "conspiração" ; } ; --*
lin cabala_2_N = mkN "Cabala" ; --*
lin cabalist_2_N = mkN "cabalista" ; --*
lin cabalistic_1_A = variants {mkA "cabalístico" ; mkA "enigmático" ; } ; --*
lin cabana_N = mkN "choupana" ; --*
lin cabaret_1_N = variants {mkN "balada" ; mkN "boate" ; mkN "cabaré" ; mkN "club" ; } ; --*
lin cabaret_2_N = variants {mkN "cabaré" ; mkN "cabaret" ; mkN "show" ; } ; --*
lin cabbage_1_N = variants {mkN "couve" ; mkN "repolho" ; mkN "vegetal" ; } ; --*
lin cabbage_2_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin cabbage_3_N = variants {mkN "cabbage" ; mkN "couve" ; mkN "oleracea" ; } ; --*
lin cabby_N = variants {mkN "driver" ; mkN "motorista" ; mkN "taxista" ; } ; --*
lin cabin_1_N = mkN "camarote" ; --*
lin cabin_2_N = variants {mkN "cabana" ; mkN "choça" ; } ; --*
lin cabin_3_N = mkN "camarote" ; --*
lin cabinet_1_N = variants {mkN "armário" ; mkN "estante" ; } ; --*
lin cabinet_2_N = mkN "ministério" ; --*
lin cabinet_3_N = variants {mkN "armário" ; mkN "locker" ; } ; --*
lin cable_1_N = variants {mkN "cabograma" ; mkN "telegram" ; mkN "telegrama" ; } ; --*
lin cable_1_V2 = mkV2 (mkV "telegrafar") ; --*
lin cable_2_N = variants {mkN "cabos" ; mkN "line" ; mkN "Linha" ; mkN "linhas" ; } ; --*
lin cable_3_N = mkN "cabo" ; --*
lin cable_6_N = variants {mkN "system" ; mkN "televisão" ; mkN "television" ; } ; --*
lin cable_car_N = variants {mkN "car" ; mkN "Carro" ; } ; --*
lin cablegram_N = variants {mkN "cabograma" ; mkN "telegram" ; mkN "telegrama" ; } ; --*
lin cable_railway_N = variants {mkN "funicular" ; mkN "railway" ; } ; --*
lin cable_V = mkV "telegrafar" ; --*
lin cabman_N = variants {mkN "driver" ; mkN "motorista" ; mkN "taxista" ; } ; --*
lin caboodle_N = mkN "grupo" ; --*
lin caboose_2_N = variants {mkN "car" ; mkN "vagão" ; } ; --*
lin cabotage_2_N = mkN "cabotagem" ; --*
lin cacao_bean_N = mkN "bean" ; --*
lin cacao_N = variants {mkN "cacao" ; mkN "Cacau" ; mkN "tree" ; } ; --*
lin cacao_tree_N = variants {mkN "cacao" ; mkN "Cacau" ; mkN "tree" ; } ; --*
lin cache_2_N = mkN "provisão" ; --*
lin cache_3_N = mkN "cache" ; --*
lin cachet_1_N = variants {mkN "of" ; mkN "selo" ; } ; --*
lin cachexia_1_N = mkN "Caquexia" ; --*
lin cackle_1_N = mkN "cacarejo" ; --*
lin cackle_3_V = mkV "cacarejar" ; --*
lin cacodemonic_1_A = mkA "demoníaco" ; --*
lin cacophonous_A = mkA "cacofônico" ; --*
lin cacophony_1_N = mkN "ruído" ; --*
lin cacophony_2_N = variants {mkN "cacófato" ; mkN "cacofonia" ; } ; --*
lin cactus_N = variants {mkN "Cactaceae" ; mkN "cacto" ; mkN "cactus" ; } ; --*
lin cad_2_N = variants {mkN "CAD" ; mkN "design" ; } ; --*
lin cadaster_1_N = mkN "cadastro" ; --*
lin cadastral_A = mkA "cadastral" ; --*
lin cadaver_N = variants {mkN "cadáver" ; mkN "corpo" ; mkN "defunto" ; mkN "enchido" ; mkN "restos" ; } ; --*
lin cadaverous_1_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin cadence_1_N = mkN "métrica" ; --*
lin cadence_2_N = mkN "cadenza" ; --*
lin cadence_3_N = mkN "cadência" ; --*
lin cadet_N = mkN "cadete" ; --*
lin cadiz_PN = mkPN "Cádis" ; --*
lin cadmium_N = variants {mkN "Cadmio" ; mkN "cádmio" ; mkN "number" ; } ; --*
lin cadre_1_N = variants {mkN "célula" ; mkN "células" ; } ; --*
lin cadre_2_N = mkN "caixilho" ; --*
lin caduceus_N = mkN "caduceu" ; --*
lin caducous_A = mkA "caduco" ; --*
lin caecilian_N = variants {mkN "gimnofiono" ; mkN "Gymnophiona" ; } ; --*
lin caesar_1_N = variants {mkN "Caesar" ; mkN "César" ; mkN "Julius" ; } ; --*
lin caesarian_1_A = mkA "cesereano" ; --*
lin caesura_1_N = mkN "cesura" ; --*
lin caesura_2_N = mkN "cesura" ; --*
lin cafeteria_N = variants {mkN "cafeteria" ; mkN "cantina" ; } ; --*
lin caffeine_1_N = variants {mkN "Cafeina" ; mkN "cafeína" ; } ; --*
lin caftan_1_N = mkN "cafetã" ; --*
lin cage_1_N = variants {mkN "gaiola" ; mkN "jaula" ; } ; --*
lin cage_2_N = variants {mkN "gaiola" ; mkN "jaula" ; } ; --*
lin cage_3_N = variants {mkN "Cage" ; mkN "John" ; mkN "Milton" ; } ; --*
lin cage_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "prender") ; } ; --*
lin cagey_1_A = mkA "esperto" ; --*
lin cairngorm_N = variants {mkN "quartz" ; mkN "Quartzo" ; } ; --*
lin cairo_1_PN = mkPN "O" ; --*
lin cairo_2_PN = variants {mkPN "Cairo" ; mkPN "capital" ; mkPN "of" ; mkPN "Qahira" ; } ; --*
lin caisson_1_N = mkN "caixotão" ; --*
lin cajole_V2 = mkV2 (mkV "adular") ; --*
lin cake_3_N = variants {mkN "bolo" ; mkN "Bolos" ; } ; --*
lin cake_V2 = mkV2 (mkV "cobrir") ; --*
lin calabash_2_N = variants {mkN "Crescentia" ; mkN "cujete" ; mkN "tree" ; } ; --*
lin calabash_4_N = variants {mkN "cabaça" ; mkN "cabaceiro" ; mkN "cuieira" ; mkN "porongo" ; } ; --*
lin calabash_5_N = variants {mkN "cuia" ; mkN "pipe" ; } ; --*
lin calamitous_A = mkA "desastroso" ; --*
lin calamity_N = variants {mkN "calamidade" ; mkN "cataclismo" ; mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; mkN "flagelo" ; mkN "tragédia" ; } ; --*
lin calamus_2_N = mkN "ácoro" ; --*
lin calamus_3_N = variants {mkN "Açoro" ; mkN "calamus" ; mkN "flag" ; } ; --*
lin calamus_4_N = mkN "Calamus" ; --*
lin calamus_5_N = mkN "raque" ; --*
lin calced_A = variants {mkA "calçada" ; mkA "calçado" ; } ; --*
lin calcification_1_N = mkN "calcificação" ; --*
lin calcify_1_V2 = mkV2 (mkV "calcificar") ; --*
lin calcify_1_V = mkV "calcificar" ; --*
lin calcify_2_V = mkV "calcificar" ; --*
lin calcify_3_V = mkV "calcificar" ; --*
lin calcify_4_V2 = mkV2 (mkV "calcificar") ; --*
lin calcination_N = variants {mkN "calcinação" ; mkN "Calcinação" ; } ; --*
lin calcite_N = mkN "calcita" ; --*
lin calcitonin_N = mkN "calcitonina" ; --*
lin calcium_N = variants {mkN "Calcio" ; mkN "Cálcio" ; mkN "number" ; } ; --*
lin calculable_A = mkA "calculável" ; --*
lin calculate_1_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "computar") ; mkV2 (mkV "out") ; } ; --*
lin calculate_1_V = variants {mkV "calcular" ; mkV "computar" ; mkV "out" ; } ; --*
lin calculate_1_VS = variants {mkVS (mkV "calcular") ; mkVS (mkV "computar") ; mkVS (mkV "out") ; } ; --*
lin calculate_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "avaliar") ; mkV2 (mkV "calcular") ; mkV2 (mkV "on") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin calculate_2_V = variants {mkV "achar" ; mkV "avaliar" ; mkV "calcular" ; mkV "on" ; mkV "predizer" ; mkV "prever" ; mkV "prognosticar" ; } ; --*
lin calculate_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "avaliar") ; mkVS (mkV "calcular") ; mkVS (mkV "on") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin calculate_3_V2 = variants {mkV2 (mkV "computar") ; mkV2 (mkV "contar") ; } ; --*
lin calculate_3_V = variants {mkV "computar" ; mkV "contar" ; } ; --*
lin calculate_3_VS = variants {mkVS (mkV "computar") ; mkVS (mkV "contar") ; } ; --*
lin calculate_4_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin calculate_4_V = variants {mkV "calcular" ; mkV "predizer" ; mkV "prever" ; mkV "prognosticar" ; } ; --*
lin calculate_4_VS = variants {mkVS (mkV "calcular") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin calculate_5_V2 = mkV2 (mkV "direcionar") ; --*
lin calculate_5_V = mkV "direcionar" ; --*
lin calculate_5_VS = mkVS (mkV "direcionar") ; --*
lin calculation_1_N = mkN "cálculo" ; --*
lin calculation_2_N = mkN "cálculo" ; --*
lin calculation_3_N = variants {mkN "cálculo" ; mkN "deliberação" ; } ; --*
lin calculator_1_N = variants {mkN "computador" ; mkN "estimador" ; } ; --*
lin calculator_2_N = variants {mkN "calculador" ; mkN "calculadora" ; mkN "calculista" ; mkN "computador" ; mkN "machine" ; } ; --*
lin calculus_1_N = variants {mkN "Litíase" ; mkN "pedra" ; mkN "pedras" ; } ; --*
lin calculus_2_N = mkN "tártaro" ; --*
lin calculus_3_N = variants {mkN "Calculo" ; mkN "cálculo" ; mkN "calculus" ; } ; --*
lin calcutta_PN = mkPN "Calcutá" ; --*
lin caldera_N = mkN "Caldeira" ; --*
lin caldron_N = variants {mkN "caldeirão" ; mkN "Caldeirão" ; } ; --*
lin calendar_1_N = mkN "calendário" ; --*
lin calendar_2_N = mkN "calendário" ; --*
lin calendar_3_N = mkN "calendário" ; --*
lin calender_N = mkN "calendário" ; --*
lin calf_1_N = variants {mkN "bezerro" ; mkN "terneiro" ; mkN "vitelo" ; } ; --*
lin calf_2_N = variants {mkN "barriga" ; mkN "panturrilha" ; mkN "surata" ; } ; --*
lin calf_love_N = variants {mkN "love" ; mkN "paixonite" ; } ; --*
lin caliber_1_N = variants {mkN "calibre" ; mkN "qualidade" ; } ; --*
lin caliber_2_N = mkN "calibre" ; --*
lin calibrate_1_V2 = mkV2 (mkV "calibrar") ; --*
lin calibrate_3_V2 = mkV2 (mkV "calibrar") ; --*
lin calibration_N = mkN "calibração" ; --*
lin calibre_1_N = variants {mkN "calibre" ; mkN "qualidade" ; } ; --*
lin calibre_2_N = mkN "calibre" ; --*
lin caliche_2_N = mkN "Caliche" ; --*
lin calico_2_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin calif_1_N = mkN "califa" ; --*
lin californian_A = mkA "californiano" ; --*
lin californian_N = mkN "californiano" ; --*
lin california_PN = variants {mkPN "California" ; mkPN "Califórnia" ; mkPN "Califòrnia" ; mkPN "State" ; } ; --*
lin californium_N = variants {mkN "Californio" ; mkN "califórnio" ; mkN "number" ; } ; --*
lin caliginous_A = mkA "escuro" ; --*
lin caliper_1_N = variants {mkN "calibrador" ; mkN "paquímetro" ; } ; --*
lin caliph_1_N = mkN "califa" ; --*
lin caliphate_1_N = variants {mkN "califado" ; mkN "Califados" ; } ; --*
lin caliphate_2_N = mkN "califado" ; --*
lin caliphate_3_N = mkN "califado" ; --*
lin cali_PN = variants {mkPN "Cali" ; mkPN "Cáli" ; } ; --*
lin calisaya_N = variants {mkN "calisaya" ; mkN "ledgeriana" ; mkN "officinalis" ; mkN "quinquina" ; } ; --*
lin call_14_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "pedir") ; } ; --*
lin call_18_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin call_1_N = variants {mkN "call" ; mkN "ligação" ; } ; --*
lin call_24_V2 = mkV2 (mkV "chamar") ; --*
lin call_25_V2 = mkV2 (mkV "chamar") ; --*
lin call_27_V2 = mkV2 (mkV "chamar") ; --*
lin call_3_N = variants {mkN "brado" ; mkN "chamada" ; mkN "grito" ; } ; --*
lin call_3_V2 = variants {mkV2 (mkV "chamar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "telefonar") ; mkV2 (mkV "up") ; } ; --*
lin call_4_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin call_5_N = mkN "canto" ; --*
lin call_5_V2 = variants {mkV2 (mkV "chamar") ; mkV2 (mkV "for") ; } ; --*
lin call_6_N = mkN "visita" ; --*
lin call_9_N = mkN "apelo" ; --*
lin call_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "in") ; mkV2 (mkV "retirar") ; } ; --*
lin call_back_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; mkV2 (mkV "recordar-se") ; mkV2 (mkV "up") ; } ; --*
lin call_box_1_N = variants {mkN "booth" ; mkN "box" ; mkN "kiosk" ; } ; --*
lin caller_1_N = variants {mkN "companhia" ; mkN "visita" ; mkN "visitante" ; } ; --*
lin call_forth_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "forth") ; mkV2 (mkV "incitar") ; mkV2 (mkV "up") ; } ; --*
lin call_girl_N = mkN "girl" ; --*
lin calligrapher_1_N = mkN "calígrafo" ; --*
lin calligraphic_1_A = mkA "caligráfico" ; --*
lin calligraphy_N = variants {mkN "caligrafia" ; mkN "Caligrafia" ; mkN "quirografia" ; } ; --*
lin call_in_7_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "in") ; mkV2 (mkV "retirar") ; } ; --*
lin calling_N = variants {mkN "ocupação" ; mkN "profissão" ; mkN "vocação" ; } ; --*
lin calliope_1_N = mkN "Calíope" ; --*
lin callipygian_A = mkA "calipígeo" ; --*
lin call_off_1_V2 = variants {mkV2 (mkV "cancelar") ; mkV2 (mkV "off") ; } ; --*
lin callosity_1_N = variants {mkN "calo" ; mkN "calosidade" ; } ; --*
lin callosity_2_N = mkN "dureza" ; --*
lin callous_1_A = mkA "insensível" ; --*
lin callous_2_A = mkA "caloso" ; --*
lin calloused_A = mkA "caloso" ; --*
lin callousness_N = mkN "dureza" ; --*
lin call_out_1_V2 = variants {mkV2 (mkV "berrar") ; mkV2 (mkV "exclamar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "out") ; } ; --*
lin call_up_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; mkV2 (mkV "recordar-se") ; mkV2 (mkV "up") ; } ; --*
lin call_up_5_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "mobilizar") ; mkV2 (mkV "up") ; } ; --*
lin call_up_N = mkN "up" ; --*
lin callus_1_N = variants {mkN "calo" ; mkN "calosidade" ; } ; --*
lin callus_2_N = mkN "calo" ; --*
lin callus_3_N = mkN "calo" ; --*
lin call_V3 = variants {mkV3 (mkV "chamar") ; mkV3 (mkV "denominar") ; mkV3 (mkV "nomear") ; } ; --*
lin calm_1_A = variants {mkA "calma" ; mkA "calmo" ; mkA "sereno" ; mkA "sossegado" ; mkA "tranquilo" ; mkA "tranqüilo" ; } ; --*
lin calm_1_N = variants {mkN "calma" ; mkN "equanimidade" ; } ; --*
lin calm_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin calm_2_A = mkA "pacato" ; --*
lin calm_3_V = variants {mkV "acalmar-se" ; mkV "down" ; mkV "it" ; mkV "off" ; mkV "out" ; } ; --*
lin calm_down_1_V2 = variants {mkV2 (mkV "acalmar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "it") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin calm_down_2_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin calmness_1_N = variants {mkN "calma" ; mkN "equanimidade" ; } ; --*
lin calmness_2_N = mkN "calma" ; --*
lin calmness_3_N = variants {mkN "calma" ; mkN "tranquilidade" ; } ; --*
lin caloric_1_A = variants {mkA "calórico" ; mkA "termal" ; mkA "térmico" ; } ; --*
lin calorie_1_N = variants {mkN "caloria" ; mkN "calorie" ; } ; --*
lin calorie_2_N = variants {mkN "caloria" ; mkN "calorie" ; } ; --*
lin calorimeter_N = mkN "calorímetro" ; --*
lin calorimetric_A = mkA "calorimétrico" ; --*
lin calorimetry_N = variants {mkN "calorimetria" ; mkN "Calorimetria" ; } ; --*
lin calque_N = variants {mkN "decalque" ; mkN "formation" ; mkN "translation" ; } ; --*
lin caltrop_3_N = variants {mkN "abrolho" ; mkN "calcitrapa" ; mkN "estrepe" ; } ; --*
lin calumniate_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin calumniatory_A = variants {mkA "calunioso" ; mkA "difamatório" ; mkA "infamante" ; } ; --*
lin calumny_2_N = variants {mkN "calúnia" ; mkN "difamação" ; } ; --*
lin calvary_1_N = variants {mkN "Calvário" ; mkN "Gólgota" ; } ; --*
lin calvary_2_N = variants {mkN "gólgota" ; mkN "martírio" ; } ; --*
lin calve_2_V = variants {mkV "parir" ; mkV "young" ; } ; --*
lin calvinism_N = mkN "Calvinismo" ; --*
lin calvinist_N = mkN "Calvinistas" ; --*
lin calypso_2_N = mkN "Calipso" ; --*
lin cam_2_N = mkN "Came" ; --*
lin camail_N = mkN "Almofar" ; --*
lin camber_3_N = mkN "Camber" ; --*
lin cambial_A = mkA "cambial" ; --*
lin cambodian_A = mkA "cambojano" ; --*
lin cambodian_N = mkN "khmer" ; --*
lin cambodia_PN = variants {mkPN "Camboja" ; mkPN "of" ; } ; --*
lin cambric_N = variants {mkN "batista" ; mkN "cambraia" ; mkN "Cambraia" ; } ; --*
lin cambridge_3_PN = mkPN "Cambridge" ; --*
lin camcorder_N = variants {mkN "camcorder" ; mkN "câmera" ; } ; --*
lin camden_PN = mkPN "Camden" ; --*
lin camel_N = variants {mkN "camelo" ; mkN "Camelus" ; } ; --*
lin camembert_N = mkN "camembert" ; --*
lin cameo_N = mkN "camafeu" ; --*
lin camera_1_N = variants {mkN "câmara" ; mkN "camera" ; mkN "câmera" ; mkN "máquina" ; } ; --*
lin camera_2_N = variants {mkN "câmara" ; mkN "camera" ; mkN "câmera" ; } ; --*
lin cameraman_N = variants {mkN "cameraman" ; mkN "diretor" ; mkN "operator" ; } ; --*
lin cameroon_1_PN = variants {mkPN "Camaroes" ; mkPN "Camarões" ; } ; --*
lin cameroon_2_PN = variants {mkPN "Camarões" ; mkPN "of" ; } ; --*
lin cameroonian_A = variants {mkA "camaronense" ; mkA "camaronês" ; } ; --*
lin camion_1_N = variants {mkN "camião" ; mkN "caminhão" ; mkN "camiões" ; mkN "sunkvežimis" ; } ; --*
lin camomile_1_N = variants {mkN "camomila" ; mkN "Camomila-romana" ; mkN "nobilis" ; } ; --*
lin camouflage_1_N = mkN "camuflagem" ; --*
lin camouflage_3_N = mkN "camuflagem" ; --*
lin camouflage_4_N = mkN "camuflagem" ; --*
lin camouflage_V2 = variants {mkV2 (mkV "camuflar") ; mkV2 (mkV "disfarçar") ; } ; --*
lin camp_1_N = mkN "acampamento" ; --*
lin camp_1_V2 = variants {mkV2 (mkV "acampar") ; mkV2 (mkV "out") ; } ; --*
lin camp_2_N = variants {mkN "acampamento" ; mkN "acampamentos" ; } ; --*
lin camp_3_N = mkN "acampamento" ; --*
lin camp_4_N = variants {mkN "camarilha" ; mkN "circle" ; } ; --*
lin camp_5_N = mkN "campo" ; --*
lin camp_7_N = variants {mkN "camp" ; mkN "Campo" ; } ; --*
lin camp_8_N = variants {mkN "camp" ; mkN "campismo" ; } ; --*
lin campaign_1_N = variants {mkN "campaign" ; mkN "campanha" ; } ; --*
lin campaign_1_V = variants {mkV "concorrer" ; mkV "disputar" ; mkV "fazer" ; } ; --*
lin campaign_2_N = variants {mkN "campanha" ; mkN "causa" ; } ; --*
lin campaign_2_V = variants {mkV "advogar" ; mkV "agitar" ; mkV "fazer" ; mkV "lutar" ; } ; --*
lin campaign_3_N = variants {mkN "campaign" ; mkN "campanha" ; } ; --*
lin campaign_4_N = variants {mkN "expedition" ; mkN "Safari" ; mkN "Safári" ; } ; --*
lin campaigner_N = mkN "candidato" ; --*
lin campaigning_N = variants {mkN "campaign" ; mkN "Campanha" ; mkN "candidatura" ; } ; --*
lin campanile_N = mkN "campanário" ; --*
lin campanula_N = mkN "campânula" ; --*
lin camp_fire_N = mkN "fogueira" ; --*
lin camphor_N = variants {mkN "cânfora" ; mkN "Cânfora" ; } ; --*
lin camping_N = mkN "acampamento" ; --*
lin campsite_N = variants {mkN "acampamento" ; mkN "area" ; mkN "campismo" ; mkN "ground" ; mkN "parques" ; mkN "site" ; } ; --*
lin campus_N = variants {mkN "campus" ; mkN "câmpus" ; } ; --*
lin camshaft_N = mkN "árvore" ; --*
lin can_1_N = variants {mkN "can" ; mkN "lata" ; mkN "vasilha" ; } ; --*
lin can_1_V2 = variants {mkV2 (mkV "enlatar") ; mkV2 (mkV "up") ; } ; --*
lin can_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "demitir") ; mkV2 (mkV "despedir") ; mkV2 (mkV "destituir") ; mkV2 (mkV "notice") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; } ; --*
lin can_4_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin can_5_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin can_6_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin canada_PN = variants {mkPN "Canada" ; mkPN "Canadá" ; } ; --*
lin canadian_1_N = variants {mkN "canadense" ; mkN "Canadense" ; mkN "canadiana" ; mkN "canadiano" ; } ; --*
lin canadian_2_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin canadian_A = variants {mkA "canadense" ; mkA "canadiano" ; } ; --*
lin canal_1_N = mkN "canal" ; --*
lin canal_2_N = variants {mkN "canal" ; mkN "duct" ; } ; --*
lin canal_3_N = variants {mkN "canal" ; mkN "Canal" ; } ; --*
lin canaliculus_N = mkN "canalículo" ; --*
lin canalization_2_N = mkN "sistemas" ; --*
lin canalize_1_V2 = mkV2 (mkV "canalizar") ; --*
lin canary_4_N = variants {mkN "bird" ; mkN "canário" ; } ; --*
lin canary_bird_N = variants {mkN "bird" ; mkN "canário" ; } ; --*
lin canasta_N = variants {mkN "Canasta" ; mkN "rummy" ; } ; --*
lin canberra_PN = variants {mkPN "Canberra" ; mkPN "capital" ; mkPN "of" ; } ; --*
lin cancel_1_V2 = variants {mkV2 (mkV "cancelar") ; mkV2 (mkV "off") ; } ; --*
lin cancel_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; } ; --*
lin cancel_3_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "down") ; } ; --*
lin cancel_4_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "deletar") ; mkV2 (mkV "eliminar") ; } ; --*
lin cancel_5_V2 = mkV2 (mkV "invalidar") ; --*
lin cancellation_1_N = mkN "cancelamento" ; --*
lin cancellation_2_N = mkN "cancelamento" ; --*
lin cancel_out_V2 = mkV2 (mkV "out") ; --*
lin cancer_1_N = variants {mkN "câncer" ; mkN "Câncro" ; mkN "neoplastic" ; } ; --*
lin cancer_1_PN = variants {mkPN "câncer" ; mkPN "Câncro" ; mkPN "neoplastic" ; } ; --*
lin cancer_3_N = variants {mkN "Cancer" ; mkN "Câncer" ; mkN "Constelação" ; } ; --*
lin cancer_3_PN = variants {mkPN "Cancer" ; mkPN "Câncer" ; mkPN "Constelação" ; } ; --*
lin cancer_4_N = variants {mkN "câncer" ; mkN "Câncer" ; mkN "the" ; } ; --*
lin cancer_4_PN = variants {mkPN "câncer" ; mkPN "Câncer" ; mkPN "the" ; } ; --*
lin cancerous_1_A = mkA "canceroso" ; --*
lin candelabrum_1_N = variants {mkN "candelabro" ; mkN "candelabros" ; mkN "castiçal" ; } ; --*
lin candid_1_A = mkA "correto" ; --*
lin candid_2_A = mkA "sincero" ; --*
lin candidacy_N = variants {mkN "campaign" ; mkN "Campanha" ; mkN "candidatura" ; } ; --*
lin candidateFem_1_N = mkN "candidato" ; --*
lin candidateFem_2_N = variants {mkN "candidato" ; mkN "concorrente" ; } ; --*
lin candidateMasc_1_N = mkN "candidato" ; --*
lin candidateMasc_2_N = variants {mkN "candidato" ; mkN "concorrente" ; } ; --*
lin candidature_N = variants {mkN "campaign" ; mkN "Campanha" ; mkN "candidatura" ; } ; --*
lin candidiasis_N = variants {mkN "Candidiase" ; mkN "candidíase" ; mkN "disease" ; } ; --*
lin candle_1_N = variants {mkN "light" ; mkN "vela" ; mkN "Vela" ; } ; --*
lin candle_2_N = variants {mkN "candela" ; mkN "candle" ; mkN "vela" ; } ; --*
lin candlelight_N = variants {mkN "flame" ; mkN "luz" ; } ; --*
lin candlenut_1_N = variants {mkN "moluccana" ; mkN "Nogueira" ; mkN "tree" ; } ; --*
lin candlestick_N = variants {mkN "candelabro" ; mkN "holder" ; } ; --*
lin candlewick_1_N = mkN "pavio" ; --*
lin candor_2_N = mkN "franqueza" ; --*
lin candour_1_N = mkN "franqueza" ; --*
lin candy_floss_N = variants {mkN "Algodão" ; mkN "candy" ; mkN "sugar" ; } ; --*
lin candy_N = variants {mkN "bala" ; mkN "candil" ; mkN "caramelo" ; } ; --*
lin candy_V2 = mkV2 (mkV "cobrir") ; --*
lin candy_V = mkV "cobrir" ; --*
lin cane_1_N = mkN "bengala" ; --*
lin cane_3_N = mkN "cassetete" ; --*
lin canella_N = variants {mkN "bark" ; mkN "canela" ; mkN "cinnamon" ; } ; --*
lin cane_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "bater") ; } ; --*
lin canine_1_A = mkA "canino" ; --*
lin canine_1_N = variants {mkN "dente" ; mkN "tooth" ; } ; --*
lin canine_2_A = mkA "canino" ; --*
lin canine_2_N = variants {mkN "canídeo" ; mkN "cão" ; } ; --*
lin canister_1_N = variants {mkN "Metralha" ; mkN "shot" ; } ; --*
lin canister_2_N = variants {mkN "lata" ; mkN "vasilha" ; } ; --*
lin cannabis_1_N = variants {mkN "cânhamo" ; mkN "maconha" ; } ; --*
lin cannabis_2_N = variants {mkN "Canabis" ; mkN "Canábis" ; mkN "cânabis" ; mkN "erva" ; mkN "maconha" ; mkN "Maconha" ; } ; --*
lin cannelloni_N = mkN "Cannelloni" ; --*
lin cannes_PN = mkPN "Cannes" ; --*
lin cannibalism_N = variants {mkN "antropofagia" ; mkN "canibalismo" ; mkN "Canibalismo" ; } ; --*
lin cannibal_N = mkN "canibal" ; --*
lin cannon_1_N = variants {mkN "Canhao" ; mkN "canhão" ; } ; --*
lin cannon_5_N = mkN "canela" ; --*
lin cannon_fodder_N = variants {mkN "bucha" ; mkN "fish" ; mkN "fodder" ; } ; --*
lin cannula_N = mkN "cânula" ; --*
lin cannulation_1_N = variants {mkN "intubação" ; mkN "Intubação" ; } ; --*
lin canny_A = mkA "esperto" ; --*
lin canoe_N = mkN "canoa" ; --*
lin canon_3_N = variants {mkN "canhão" ; mkN "desfiladeiro" ; } ; --*
lin canon_4_N = mkN "cânone" ; --*
lin canon_6_N = mkN "cânone" ; --*
lin canonic_1_A = mkA "canônico" ; --*
lin canonic_2_A = mkA "canônico" ; --*
lin canonic_3_A = mkA "canônico" ; --*
lin canonic_4_A = mkA "canônico" ; --*
lin canonical_1_A = mkA "canônico" ; --*
lin canonical_2_A = mkA "canônico" ; --*
lin canonical_3_A = mkA "canônico" ; --*
lin canonical_4_A = mkA "canônico" ; --*
lin canonization_1_N = variants {mkN "beatificação" ; mkN "canonização" ; mkN "Canonização" ; } ; --*
lin canonize_1_V2 = mkV2 (mkV "canonizar") ; --*
lin canopy_1_N = mkN "canopo" ; --*
lin canopy_3_N = mkN "toldo" ; --*
lin cant_3_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin cant_5_N = variants {mkN "bisel" ; mkN "chanfradura" ; } ; --*
lin cantabile_A = mkA "canoro" ; --*
lin cantaloupe_1_N = variants {mkN "cantaloupe" ; mkN "melo" ; mkN "vine" ; } ; --*
lin cantaloupe_2_N = variants {mkN "cantaloupe" ; mkN "cantalupo" ; mkN "meloa" ; } ; --*
lin cantankerous_2_A = mkA "resmungão" ; --*
lin cantata_N = variants {mkN "oratório" ; mkN "Oratório" ; mkN "Oratórios" ; } ; --*
lin canteen_1_N = variants {mkN "Bandejao" ; mkN "bandejão" ; } ; --*
lin canteen_2_N = mkN "cantina" ; --*
lin canteen_3_N = variants {mkN "canteen" ; mkN "cantina" ; } ; --*
lin canteen_5_N = mkN "cantina" ; --*
lin canterbury_PN = mkPN "Cantuária" ; --*
lin cantilever_N = mkN "Cantilever" ; --*
lin canton_1_N = mkN "Cantão" ; --*
lin canton_1_PN = mkPN "Cantão" ; --*
lin canton_2_N = mkN "Cantão" ; --*
lin canton_2_PN = mkPN "Cantão" ; --*
lin cantonment_N = mkN "acampamento" ; --*
lin cantor_1_N = mkN "Cantor" ; --*
lin canvas_1_N = mkN "lona" ; --*
lin canvas_2_N = mkN "tela" ; --*
lin canvas_5_N = mkN "vela" ; --*
lin canvass_2_N = variants {mkN "enquête" ; mkN "opinion" ; mkN "pesquisa" ; mkN "poll" ; } ; --*
lin canvass_3_N = mkN "vela" ; --*
lin canvass_3_V2 = variants {mkV2 (mkV "analizar") ; mkV2 (mkV "examinar") ; } ; --*
lin canvass_4_V2 = mkV2 (mkV "sondar") ; --*
lin canvass_5_N = mkN "tela" ; --*
lin canvass_7_N = mkN "lona" ; --*
lin canyon_N = variants {mkN "canhão" ; mkN "desfiladeiro" ; } ; --*
lin cap_1_N = variants {mkN "barrete" ; mkN "boné" ; mkN "quepe" ; } ; --*
lin cap_2_V2 = mkV2 (mkV "restringir") ; --*
lin cap_3_N = variants {mkN "detonador" ; mkN "device" ; } ; --*
lin cap_5_N = mkN "chapéu" ; --*
lin cap_7_N = mkN "teto" ; --*
lin cap_9_N = mkN "capitel" ; --*
lin capability_1_N = variants {mkN "capacidade" ; mkN "habilidade" ; mkN "potencialidade" ; } ; --*
lin capability_2_N = mkN "capacidade" ; --*
lin capability_3_N = variants {mkN "capacidade" ; mkN "talento" ; } ; --*
lin capable_of_A2 = mkA2 (mkA "capaz") noPrep ; --*
lin capacitance_1_N = variants {mkN "capacidade" ; mkN "capacitância" ; mkN "capacity" ; } ; --*
lin capacitance_2_N = variants {mkN "capacitor" ; mkN "condenser" ; } ; --*
lin capacitor_N = variants {mkN "capacitor" ; mkN "condenser" ; } ; --*
lin capacity_2_N = mkN "capacidade" ; --*
lin capacity_3_N = variants {mkN "capacidade" ; mkN "conteúdo" ; mkN "teor" ; } ; --*
lin capacity_7_N = variants {mkN "capacidade" ; mkN "capacitância" ; mkN "capacity" ; } ; --*
lin caparison_N = mkN "armadilhas" ; --*
lin cape_1_N = mkN "cabo" ; --*
lin caper_1_N = mkN "alcaparra" ; --*
lin caper_5_N = mkN "brincadeira" ; --*
lin caper_6_N = variants {mkN "gozação" ; mkN "sacanagem" ; mkN "travessura" ; mkN "trote" ; } ; --*
lin capercaillie_1_N = variants {mkN "galomontês" ; mkN "of" ; mkN "tetraz" ; mkN "urogallus" ; } ; --*
lin cape_town_PN = mkPN "Town" ; --*
lin capillarity_N = variants {mkN "action" ; mkN "Capilaridade" ; } ; --*
lin capillary_1_N = variants {mkN "capilar" ; mkN "tube" ; mkN "tubing" ; } ; --*
lin capillary_2_N = variants {mkN "capilar" ; mkN "vessel" ; } ; --*
lin capital_1_A = mkA "primeira" ; --*
lin capital_1_N = variants {mkN "capital" ; mkN "fundo" ; } ; --*
lin capital_2_N = variants {mkN "capital" ; mkN "fundos" ; } ; --*
lin capital_3_N = variants {mkN "capital" ; mkN "Capital" ; } ; --*
lin capital_4_N = variants {mkN "letra" ; mkN "letter" ; mkN "maiúscula" ; mkN "maiúsculo" ; } ; --*
lin capital_6_N = mkN "Washington" ; --*
lin capital_7_N = variants {mkN "Kapital" ; mkN "O" ; } ; --*
lin capital_8_N = mkN "capitel" ; --*
lin capitalism_N = variants {mkN "capitalismo" ; mkN "economy" ; } ; --*
lin capitalist_1_N = mkN "capitalista" ; --*
lin capitalist_2_N = mkN "capitalista" ; --*
lin capitalization_2_N = mkN "capitalização" ; --*
lin capitalization_3_N = mkN "capitalização" ; --*
lin capitalization_4_N = mkN "capitalização" ; --*
lin capitalize_1_V = variants {mkV "advantage" ; mkV "capitalizar" ; } ; --*
lin capitalize_2_V2 = mkV2 (mkV "capitalizar") ; --*
lin capitalize_2_V = mkV "capitalizar" ; --*
lin capitalize_4_V2 = mkV2 (mkV "calcular") ; --*
lin capitalize_4_V = mkV "calcular" ; --*
lin capitalize_5_V2 = mkV2 (mkV "capitalizar") ; --*
lin capitalize_5_V = mkV "capitalizar" ; --*
lin capital_punishment_N = variants {mkN "execução" ; mkN "pena" ; mkN "penalty" ; mkN "punishment" ; } ; --*
lin capitate_N = variants {mkN "bone" ; mkN "capitato" ; mkN "capitatum" ; mkN "grande" ; } ; --*
lin capitol_1_N = mkN "Capitólio" ; --*
lin capitol_2_N = variants {mkN "Building" ; mkN "Capitólio" ; } ; --*
lin capitulate_V2 = variants {mkV2 (mkV "capitulação") ; mkV2 (mkV "desistir") ; mkV2 (mkV "rendição") ; } ; --*
lin capitulate_V = variants {mkV "capitulação" ; mkV "desistir" ; mkV "rendição" ; } ; --*
lin capitulation_3_N = variants {mkN "capitulação" ; mkN "rendição" ; } ; --*
lin capitulum_2_N = mkN "espiga" ; --*
lin capon_2_N = mkN "capão" ; --*
lin capo_N = mkN "capo" ; --*
lin cappuccino_N = variants {mkN "cappuccino" ; mkN "coffee" ; } ; --*
lin caprice_N = variants {mkN "capricho" ; mkN "caprichoso" ; mkN "desejo" ; mkN "fantasia" ; mkN "impertinência" ; } ; --*
lin capricorn_2_PN = variants {mkPN "Capricórnio" ; mkPN "Capricornus" ; } ; --*
lin capricorn_3_PN = variants {mkPN "Capricórnio" ; mkPN "the" ; } ; --*
lin caprine_A = mkA "cabrum" ; --*
lin capsaicin_N = mkN "capsaicina" ; --*
lin capsid_2_N = variants {mkN "Capsídeo" ; mkN "Cápsideo" ; } ; --*
lin capsize_V2 = variants {mkV2 (mkV "soçobrar") ; mkV2 (mkV "turtle") ; mkV2 (mkV "voltar-se") ; } ; --*
lin capstone_1_N = variants {mkN "toque" ; mkN "touch" ; } ; --*
lin capsular_1_A = mkA "capsular" ; --*
lin capsule_2_N = mkN "cápsula" ; --*
lin capsule_3_N = mkN "cápsula" ; --*
lin capsule_4_N = variants {mkN "abreviação" ; mkN "abreviatura" ; mkN "compendio" ; mkN "compêndio" ; mkN "resumo" ; mkN "sumário" ; } ; --*
lin capsule_5_N = mkN "cápsula" ; --*
lin capsule_7_N = variants {mkN "Assento" ; mkN "seat" ; } ; --*
lin captain_1_N = mkN "capitão" ; --*
lin captain_2_N = mkN "capitão" ; --*
lin captain_3_N = variants {mkN "captain" ; mkN "chief" ; mkN "delegado" ; } ; --*
lin captain_4_N = variants {mkN "capitão" ; mkN "captain" ; mkN "patrão" ; } ; --*
lin captain_5_N = mkN "cacique" ; --*
lin captain_6_N = variants {mkN "capitão" ; mkN "pilot" ; } ; --*
lin captainship_N = mkN "capitania" ; --*
lin caption_2_N = mkN "legenda" ; --*
lin caption_3_N = variants {mkN "legenda" ; mkN "lenda" ; mkN "subtítulo" ; mkN "título" ; } ; --*
lin captivate_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin captivation_2_N = mkN "fascinação" ; --*
lin captive_1_A = variants {mkA "aprisionado" ; mkA "cativado" ; } ; --*
lin captive_2_A = variants {mkA "absorto" ; mkA "absorvido" ; } ; --*
lin captiveFem_1_N = variants {mkN "cativo" ; mkN "preso" ; mkN "prisioneiro" ; mkN "refém" ; } ; --*
lin captiveMasc_1_N = variants {mkN "cativo" ; mkN "preso" ; mkN "prisioneiro" ; mkN "refém" ; } ; --*
lin captivity_1_N = mkN "cativeiro" ; --*
lin captivity_2_N = mkN "cativeiro" ; --*
lin captopril_N = mkN "captopril" ; --*
lin capture_1_N = variants {mkN "confiscação" ; mkN "control" ; } ; --*
lin capture_1_V2 = mkV2 (mkV "capturar") ; --*
lin capture_2_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin capture_3_V2 = variants {mkV2 (mkV "capturar") ; mkV2 (mkV "pegar") ; } ; --*
lin capture_4_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "capturar") ; } ; --*
lin capture_5_V2 = variants {mkV2 (mkV "apropriar-se") ; mkV2 (mkV "capturar") ; mkV2 (mkV "conquistar") ; } ; --*
lin capture_6_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "capturar") ; } ; --*
lin capuchin_2_N = variants {mkN "capucinus" ; mkN "Macaco-prego-de-cara-branca" ; } ; --*
lin caput_2_N = variants {mkN "cabeça" ; mkN "Cabeça" ; mkN "pescoço" ; } ; --*
lin capybara_1_N = variants {mkN "capivara" ; mkN "hydrochaeris" ; } ; --*
lin car_1_N = variants {mkN "auto" ; mkN "automóvel" ; mkN "carro" ; mkN "máquina" ; mkN "veículo" ; mkN "viatura" ; } ; --*
lin car_2_N = variants {mkN "automotora" ; mkN "automóvel" ; mkN "car" ; mkN "carro" ; mkN "vagão" ; mkN "vagões" ; } ; --*
lin car_4_N = variants {mkN "car" ; mkN "elevador" ; } ; --*
lin car_5_N = variants {mkN "car" ; mkN "Carro" ; } ; --*
lin caracal_N = variants {mkN "caracal" ; mkN "lynx" ; } ; --*
lin caracas_PN = variants {mkPN "Caracas" ; mkPN "of" ; } ; --*
lin carafe_N = variants {mkN "decanter" ; mkN "garrafa" ; mkN "jarra" ; } ; --*
lin carambola_1_N = variants {mkN "carambola" ; mkN "tree" ; } ; --*
lin carambola_2_N = variants {mkN "carambola" ; mkN "fruit" ; } ; --*
lin caramel_1_N = mkN "caramelo" ; --*
lin caramel_3_N = variants {mkN "brown" ; mkN "caramelo" ; mkN "sienna" ; } ; --*
lin carancha_N = variants {mkN "carcará" ; mkN "plancus" ; } ; --*
lin caranday_1_N = variants {mkN "alba" ; mkN "australis" ; mkN "Carandá" ; mkN "palm" ; } ; --*
lin carapace_N = variants {mkN "carapaça" ; mkN "concha" ; mkN "Cuticula" ; mkN "cutícula" ; } ; --*
lin carat_1_N = mkN "quilate" ; --*
lin carat_2_N = mkN "quilate" ; --*
lin caravan_1_N = variants {mkN "caravana" ; mkN "train" ; } ; --*
lin caravan_2_N = mkN "caravana" ; --*
lin caravanserai_1_N = variants {mkN "caravançará" ; mkN "caravançarai" ; mkN "Caravançarai" ; mkN "hospedaria" ; mkN "inn" ; } ; --*
lin carbamate_N = variants {mkN "carbamato" ; mkN "Carbamatos" ; } ; --*
lin carbide_N = variants {mkN "carbeto" ; mkN "Carbetos" ; } ; --*
lin carbine_N = variants {mkN "carabina" ; mkN "Carabina" ; } ; --*
lin carbohydrate_N = variants {mkN "açúcar" ; mkN "carboidrato" ; mkN "Carboidratos" ; mkN "hidratos" ; } ; --*
lin carbon_1_N = variants {mkN "carbono" ; mkN "number" ; } ; --*
lin carbon_2_N = variants {mkN "papel-carbono" ; mkN "paper" ; } ; --*
lin carbonaceous_A = mkA "carbônico" ; --*
lin carbonara_N = mkN "carbonara" ; --*
lin carbonate_N = variants {mkN "carbonato" ; mkN "carbonatos" ; mkN "Carbonatos" ; } ; --*
lin carbonation_N = mkN "carbonação" ; --*
lin carbonic_A = mkA "carbônico" ; --*
lin carboniferous_2_A = mkA "carbônico" ; --*
lin carbonization_1_N = mkN "carbonização" ; --*
lin carbonize_2_V2 = mkV2 (mkV "carbonizar") ; --*
lin carbon_paper_N = variants {mkN "papel-carbono" ; mkN "paper" ; } ; --*
lin carbonyl_N = mkN "carbonila" ; --*
lin carboxyl_1_A = variants {mkA "carboxil" ; mkA "carboxílico" ; } ; --*
lin carburettor_1_N = mkN "carburador" ; --*
lin carcase_N = mkN "cadáver" ; --*
lin carcass_N = mkN "cadáver" ; --*
lin carcinogenic_A = variants {mkA "cancerígeno" ; mkA "carcinogênico" ; } ; --*
lin carcinogen_N = variants {mkN "agentes" ; mkN "carcinógeno" ; mkN "Carcinógeno" ; mkN "Carcinógenos" ; } ; --*
lin carcinoma_N = mkN "carcinoma" ; --*
lin carcinomatous_A = mkA "carcinomatoso" ; --*
lin carcinosarcoma_N = mkN "carcinossarcoma" ; --*
lin card_10_N = variants {mkN "ordem" ; mkN "order" ; } ; --*
lin card_11_N = variants {mkN "board" ; mkN "card" ; mkN "placa" ; } ; --*
lin card_1_N = variants {mkN "carta" ; mkN "cartão" ; mkN "cartas" ; } ; --*
lin card_2_N = variants {mkN "bilhete" ; mkN "card" ; } ; --*
lin card_2_V2 = mkV2 (mkV "pedir") ; --*
lin card_3_N = mkN "cartão" ; --*
lin card_6_N = variants {mkN "anúncio" ; mkN "cartaz" ; mkN "edital" ; mkN "letreiro" ; mkN "papeleta" ; mkN "rótulo" ; } ; --*
lin card_7_N = variants {mkN "card" ; mkN "cartão" ; } ; --*
lin card_9_N = variants {mkN "cardápio" ; mkN "du" ; mkN "menu" ; mkN "of" ; } ; --*
lin cardamom_1_N = variants {mkN "cardamomo" ; mkN "cardamomum" ; } ; --*
lin cardamom_2_N = mkN "cardamomo" ; --*
lin cardboard_N = variants {mkN "board" ; mkN "cartão" ; } ; --*
lin cardiac_A = variants {mkA "cardíaco" ; mkA "cordial" ; mkA "do" ; } ; --*
lin cardia_N = mkN "cárdia" ; --*
lin cardiff_PN = mkPN "Cardiff" ; --*
lin cardigan_1_N = variants {mkN "cardigã" ; mkN "cardigan" ; } ; --*
lin cardigan_1_PN = variants {mkPN "cardigã" ; mkPN "cardigan" ; } ; --*
lin cardigan_2_N = mkN "Welsh" ; --*
lin cardigan_2_PN = mkPN "Welsh" ; --*
lin cardinal_1_A = variants {mkA "básico" ; mkA "central" ; mkA "fundamental" ; } ; --*
lin cardinal_1_N = mkN "cardeal" ; --*
lin cardinal_2_A = variants {mkA "cardeal" ; mkA "cardinal" ; } ; --*
lin cardinal_2_N = variants {mkN "Cardinalidade" ; mkN "number" ; mkN "numeral" ; mkN "número" ; } ; --*
lin cardinal_3_N = mkN "carmim" ; --*
lin cardinalate_1_N = variants {mkN "College" ; mkN "of" ; } ; --*
lin cardinality_N = mkN "cardinalidade" ; --*
lin cardiographic_A = mkA "cardiográfico" ; --*
lin cardiography_N = variants {mkN "cardiografia" ; mkN "eletrocardiografia" ; mkN "eletrocardiograma" ; } ; --*
lin cardioid_N = mkN "cardióide" ; --*
lin cardiologistFem_N = variants {mkN "cardiologista" ; mkN "specialist" ; mkN "surgeon" ; } ; --*
lin cardiologistMasc_N = variants {mkN "cardiologista" ; mkN "specialist" ; mkN "surgeon" ; } ; --*
lin cardiology_N = mkN "cardiologia" ; --*
lin cardiomegaly_N = variants {mkN "cardiomegalia" ; mkN "heart" ; } ; --*
lin cardiomyopathy_N = variants {mkN "cardiomiopatia" ; mkN "miocardiopatia" ; mkN "Miocardiopatia" ; } ; --*
lin cardiopulmonary_A = variants {mkA "cardiopulmonar" ; mkA "cardiorrespiratório" ; } ; --*
lin cardiovascular_A = mkA "cardiovascular" ; --*
lin carditis_N = mkN "cardite" ; --*
lin cardoon_2_N = mkN "cardo" ; --*
lin care_1_N = variants {mkN "assintência" ; mkN "cuidado" ; } ; --*
lin care_2_N = variants {mkN "cautela" ; mkN "precaução" ; mkN "prudência" ; } ; --*
lin care_2_V = variants {mkV "care" ; mkV "cuidar" ; mkV "tutelar" ; } ; --*
lin care_3_N = variants {mkN "medo" ; mkN "preocupação" ; mkN "temor" ; } ; --*
lin care_3_VV = variants {mkVV (mkV "desejar") ; mkVV (mkV "esperar") ; mkVV (mkV "querer") ; } ; --*
lin care_4_N = variants {mkN "cuidado" ; mkN "preocupação" ; } ; --*
lin care_4_V = variants {mkV "conduzir" ; mkV "dirigir" ; mkV "governar" ; mkV "guiar" ; mkV "lidar" ; } ; --*
lin care_5_N = variants {mkN "cuidado" ; mkN "tutela" ; } ; --*
lin care_5_V = mkV "cuidar" ; --*
lin care_6_N = mkN "manutenção" ; --*
lin career_1_N = variants {mkN "ocupação" ; mkN "profissão" ; mkN "vocação" ; } ; --*
lin career_2_N = variants {mkN "carriera" ; mkN "history" ; } ; --*
lin care_for_1_V2 = mkV2 (mkV "for") ; --*
lin care_for_2_V2 = variants {mkV2 (mkV "adorar") ; mkV2 (mkV "apreciar") ; mkV2 (mkV "dear") ; mkV2 (mkV "for") ; } ; --*
lin care_for_3_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "tratar") ; } ; --*
lin carefree_1_A = mkA "despreocupado" ; --*
lin careful_1_A = variants {mkA "atento" ; mkA "cautelosa" ; mkA "cuidadosa" ; mkA "prudente" ; } ; --*
lin careful_2_A = mkA "atento" ; --*
lin caregiver_1_N = variants {mkN "care" ; mkN "médico" ; mkN "professional" ; } ; --*
lin caregiver_2_N = mkN "profissional" ; --*
lin careless_1_A = variants {mkA "descuidado" ; mkA "negligente" ; } ; --*
lin carelessness_1_N = mkN "falta" ; --*
lin carelessness_2_N = mkN "negligência" ; --*
lin caressing_N = mkN "soba" ; --*
lin caress_V2 = variants {mkV2 (mkV "acariciar") ; mkV2 (mkV "afagar") ; } ; --*
lin careworn_A = mkA "extenuado" ; --*
lin cargo_N = mkN "carga" ; --*
lin caribou_N = variants {mkN "caribou" ; mkN "rangífer" ; mkN "rena" ; mkN "tarandus" ; } ; --*
lin caricature_N = variants {mkN "caricatura" ; mkN "Caricatura" ; mkN "vinheta" ; } ; --*
lin caricature_V2 = variants {mkV2 (mkV "caricaturar") ; mkV2 (mkV "fazer") ; } ; --*
lin caries_N = variants {mkN "cárie" ; mkN "caries" ; mkN "decay" ; } ; --*
lin carillon_2_N = variants {mkN "carrilhão" ; mkN "playing" ; mkN "ringing" ; } ; --*
lin carina_1_N = variants {mkN "Carina" ; mkN "Constelação" ; } ; --*
lin carioca_1_N = mkN "carioca" ; --*
lin carjacking_N = mkN "Roubo" ; --*
lin carmelite_N = variants {mkN "Friar" ; mkN "Ordem" ; } ; --*
lin carminative_N = mkN "Carminativo" ; --*
lin carmine_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin carmine_N = mkN "carmim" ; --*
lin carnage_N = variants {mkN "abate" ; mkN "assassinato" ; mkN "carnificina" ; mkN "massacre" ; mkN "murder" ; } ; --*
lin carnal_1_A = variants {mkA "carnal" ; mkA "sensual" ; } ; --*
lin carnal_2_A = mkA "carnal" ; --*
lin carnallite_N = mkN "Carnallita" ; --*
lin carnation_1_N = variants {mkN "caryophyllus" ; mkN "cravo" ; mkN "Cravo" ; mkN "pink" ; } ; --*
lin carnation_2_N = mkN "Carnação" ; --*
lin carnauba_1_N = variants {mkN "carnaúba" ; mkN "wax" ; } ; --*
lin carnauba_2_N = variants {mkN "carnaúba" ; mkN "cerifera" ; mkN "palm" ; mkN "prunifera" ; } ; --*
lin carnelian_N = variants {mkN "cornalina" ; mkN "Cornalina" ; } ; --*
lin carnival_1_N = mkN "carnaval" ; --*
lin carnival_3_N = variants {mkN "carnaval" ; mkN "feira" ; mkN "quermesse" ; } ; --*
lin carnivore_2_N = variants {mkN "carnivora" ; mkN "carnívoro" ; } ; --*
lin carnivorous_1_A = mkA "carnívoro" ; --*
lin carnivorous_2_A = mkA "carnívoro" ; --*
lin carnotite_N = mkN "carnotita" ; --*
lin carob_1_N = variants {mkN "alfarroba" ; mkN "bean" ; mkN "pod" ; } ; --*
lin carob_2_N = variants {mkN "Alfarroba" ; mkN "alfarrobeira" ; mkN "bean" ; mkN "siliqua" ; mkN "tree" ; } ; --*
lin carol_1_N = variants {mkN "Canções" ; mkN "carol" ; } ; --*
lin carol_1_PN = variants {mkPN "Canções" ; mkPN "carol" ; } ; --*
lin carolina_PN = mkPN "Carolinas" ; --*
lin carotene_2_N = mkN "caroteno" ; --*
lin carotenoid_N = variants {mkN "Carotenoide" ; mkN "Carotenóide" ; mkN "Carotenoides" ; } ; --*
lin carotid_A = mkA "carótida" ; --*
lin carousal_N = mkN "farra" ; --*
lin carousel_1_N = variants {mkN "carousel" ; mkN "carrossel" ; mkN "carrousel" ; } ; --*
lin carousel_2_N = variants {mkN "carrossel" ; mkN "Carrossel" ; } ; --*
lin carouse_N = mkN "farra" ; --*
lin carp_1_N = mkN "Carpa-comum" ; --*
lin carp_2_N = mkN "carpa" ; --*
lin carpal_A = mkA "carpal" ; --*
lin carpenter_N = variants {mkN "carpinteiro" ; mkN "marceneiro" ; } ; --*
lin carpentry_N = variants {mkN "carpintaria" ; mkN "Carpintaria" ; mkN "marcenaria" ; } ; --*
lin carpet_1_N = variants {mkN "alcatifa" ; mkN "carpete" ; mkN "tapeçaria" ; mkN "tapete" ; } ; --*
lin carpet_1_V2 = mkV2 (mkV "atapetar") ; --*
lin carpet_2_N = mkN "tapete" ; --*
lin carpet_2_V2 = mkV2 (mkV "atapetar") ; --*
lin carpet_3_V2 = variants {mkV2 (mkV "acarpetar") ; mkV2 (mkV "atapetar") ; } ; --*
lin carrack_1_N = mkN "nau" ; --*
lin carrageenin_1_N = mkN "Carragenina" ; --*
lin carrel_1_N = variants {mkN "Alexis" ; mkN "Carrel" ; } ; --*
lin carriage_1_N = variants {mkN "car" ; mkN "carruagem" ; mkN "vagão" ; } ; --*
lin carriage_2_N = mkN "carruagem" ; --*
lin carriage_3_N = mkN "posição" ; --*
lin carriage_5_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin carrier_1_N = mkN "portador" ; --*
lin carrier_3_N = variants {mkN "aircraft" ; mkN "carrier" ; mkN "porta-aviões" ; mkN "transportador" ; } ; --*
lin carrier_6_N = variants {mkN "portadora" ; mkN "wave" ; } ; --*
lin carrier_7_N = variants {mkN "carrier" ; mkN "carteiro" ; mkN "correio" ; } ; --*
lin carrier_bag_N = variants {mkN "bag" ; mkN "bolsa" ; } ; --*
lin carrion_N = mkN "carniça" ; --*
lin carrot_1_N = mkN "cenoura" ; --*
lin carrot_2_N = variants {mkN "carota" ; mkN "carrot" ; mkN "cenoura" ; } ; --*
lin carrot_3_N = mkN "cenoura" ; --*
lin carroty_A = variants {mkA "cor" ; mkA "ruivo" ; } ; --*
lin carry_10_V2 = mkV2 (mkV "implicar") ; --*
lin carry_12_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "incluir") ; mkV2 (mkV "pertencer") ; } ; --*
lin carry_13_V2 = variants {mkV2 (mkV "comportar-se") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "resistir") ; } ; --*
lin carry_1_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "levar") ; mkV2 (mkV "transportar") ; } ; --*
lin carry_23_V2 = variants {mkV2 (mkV "convencer") ; mkV2 (mkV "persuadir") ; } ; --*
lin carry_2_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "portar") ; } ; --*
lin carry_32_V2 = mkV2 (mkV "carregar") ; --*
lin carry_32_V = mkV "carregar" ; --*
lin carry_33_V2 = mkV2 (mkV "beber") ; --*
lin carry_37_V = mkV "passar" ; --*
lin carry_3_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin carry_3_V = variants {mkV "conduzir" ; mkV "transmitir" ; mkV "trazer" ; } ; --*
lin carry_40_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin carry_4_V2 = mkV2 (mkV "transmitir") ; --*
lin carry_6_V2A = mkV2A (mkV "portar") ; --*
lin carry_7_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "incluir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "segurar") ; mkV2 (mkV "ter") ; } ; --*
lin carrycot_N = mkN "carrinho" ; --*
lin carry_N = variants {mkN "carregue" ; mkN "Carry" ; } ; --*
lin carry_off_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; } ; --*
lin carry_off_3_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin carry_on_1_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "lidar") ; mkV2 (mkV "on") ; } ; --*
lin carry_on_2_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "manter") ; mkV2 (mkV "on") ; mkV2 (mkV "preservar") ; } ; --*
lin carry_on_3_V = variants {mkV "continuar" ; mkV "on" ; mkV "prosseguir" ; } ; --*
lin carry_out_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "cumprir") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "realizar") ; mkV2 (mkV "through") ; } ; --*
lin carry_out_2_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin carry_through_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "cumprir") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "realizar") ; mkV2 (mkV "through") ; } ; --*
lin cart_1_N = variants {mkN "carro" ; mkN "carroça" ; } ; --*
lin cart_1_V2 = variants {mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin cart_2_N = mkN "carrinho" ; --*
lin cartagena_1_PN = mkPN "Cartagena" ; --*
lin cartagena_2_PN = mkPN "Cartagena" ; --*
lin carte_blanche_N = mkN "blanche" ; --*
lin cartel_N = variants {mkN "cartel" ; mkN "trust" ; } ; --*
lin carter_1_N = variants {mkN "Carter" ; mkN "Howard" ; } ; --*
lin carter_2_N = variants {mkN "Carter" ; mkN "Earl" ; mkN "Jimmy" ; } ; --*
lin cartilage_N = variants {mkN "cartilagem" ; mkN "tecido" ; } ; --*
lin cartilaginous_1_A = mkA "cartilaginoso" ; --*
lin cartilaginous_2_A = mkA "cartilaginoso" ; --*
lin cartographer_N = variants {mkN "cartógrafo" ; mkN "maker" ; } ; --*
lin cartographic_1_A = mkA "cartográfico" ; --*
lin cartography_N = variants {mkN "cartografia" ; mkN "Cartografia" ; } ; --*
lin cartoon_1_N = variants {mkN "caricatura" ; mkN "cartoon" ; } ; --*
lin cartoon_2_N = variants {mkN "cartoon" ; mkN "desenho" ; } ; --*
lin cartoonistFem_N = variants {mkN "cartunista" ; mkN "Cartunistas" ; mkN "chargista" ; mkN "desenhista" ; } ; --*
lin cartoonistMasc_N = variants {mkN "cartunista" ; mkN "Cartunistas" ; mkN "chargista" ; mkN "desenhista" ; } ; --*
lin cartridge_1_N = variants {mkN "cartucho" ; mkN "Cartucho" ; mkN "pente" ; } ; --*
lin cartridge_3_N = mkN "cartucho" ; --*
lin cartridge_4_N = mkN "captador" ; --*
lin cartroad_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "track" ; } ; --*
lin cart_track_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "track" ; } ; --*
lin cartwheel_2_N = variants {mkN "estrela" ; mkN "estrelinha" ; } ; --*
lin caruncle_1_N = mkN "carúncula" ; --*
lin carve_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "esculpir") ; } ; --*
lin carve_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "cortar") ; } ; --*
lin carve_3_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "up") ; } ; --*
lin carvedilol_N = mkN "Carvedilol" ; --*
lin carver_1_N = variants {mkN "George" ; mkN "Washington" ; } ; --*
lin carver_3_N = variants {mkN "escultor" ; mkN "maker" ; } ; --*
lin carve_up_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "fracionar") ; mkV2 (mkV "separar") ; mkV2 (mkV "up") ; } ; --*
lin carving_1_N = mkN "escultura" ; --*
lin carving_3_N = variants {mkN "escultura" ; mkN "talha" ; } ; --*
lin caryatid_N = variants {mkN "cariátide" ; mkN "Cariátide" ; } ; --*
lin casablanca_PN = mkPN "Casablanca" ; --*
lin cascade_1_V = variants {mkV "cair" ; mkV "down" ; } ; --*
lin case_11_N = variants {mkN "case" ; mkN "caso" ; } ; --*
lin case_13_N = mkN "figura" ; --*
lin case_14_N = mkN "família" ; --*
lin case_16_N = variants {mkN "caixa" ; mkN "carcaça" ; } ; --*
lin case_18_N = variants {mkN "caixa" ; mkN "case" ; } ; --*
lin case_1_N = variants {mkN "caso" ; mkN "exemplo" ; mkN "ocasião" ; mkN "ocorrência" ; } ; --*
lin case_20_N = variants {mkN "case" ; mkN "mostrador" ; mkN "vitrina" ; mkN "vitrine" ; } ; --*
lin case_3_N = variants {mkN "causa" ; mkN "pleito" ; mkN "processo" ; } ; --*
lin case_4_N = mkN "caso" ; --*
lin case_7_N = variants {mkN "cobaia" ; mkN "pig" ; } ; --*
lin casebook_N = mkN "livro" ; --*
lin case_hardened_A = mkA "endurecido" ; --*
lin case_history_N = mkN "history" ; --*
lin case_law_1_N = variants {mkN "direito" ; mkN "law" ; } ; --*
lin case_law_2_N = variants {mkN "direito" ; mkN "Jurisprudencia" ; mkN "jurisprudência" ; mkN "law" ; } ; --*
lin caseous_A = mkA "caseoso" ; --*
lin case_study_2_N = mkN "study" ; --*
lin cash_1_N = variants {mkN "cache" ; mkN "cash" ; mkN "currency" ; mkN "em" ; } ; --*
lin cash_2_N = variants {mkN "numerário" ; mkN "payment" ; } ; --*
lin cash_3_N = variants {mkN "Cash" ; mkN "Johnny" ; } ; --*
lin cashbox_N = variants {mkN "box" ; mkN "cofre" ; } ; --*
lin cashew_1_N = variants {mkN "caju" ; mkN "occidentale" ; mkN "tree" ; } ; --*
lin cashew_2_N = variants {mkN "caju" ; mkN "nut" ; } ; --*
lin cashier_1_N = variants {mkN "caixa" ; mkN "clerk" ; mkN "multibanco" ; } ; --*
lin cashmere_1_N = mkN "caxemira" ; --*
lin cashmere_2_N = mkN "caxemira" ; --*
lin cashmere_3_N = variants {mkN "and" ; mkN "Caxemira" ; } ; --*
lin cash_V2 = variants {mkV2 (mkV "descontar") ; mkV2 (mkV "in") ; } ; --*
lin casing_1_N = variants {mkN "caixa" ; mkN "carcaça" ; } ; --*
lin casino_1_N = variants {mkN "casino" ; mkN "Casino" ; mkN "Casinos" ; mkN "cassino" ; } ; --*
lin cask_2_N = variants {mkN "barril" ; mkN "Barril" ; } ; --*
lin casket_1_N = variants {mkN "ataúde" ; mkN "caixa" ; mkN "caixão" ; mkN "esquife" ; mkN "féretro" ; } ; --*
lin caspase_N = mkN "caspase" ; --*
lin cassava_1_N = variants {mkN "aipim" ; mkN "macaxeira" ; mkN "mandioca" ; mkN "starch" ; } ; --*
lin cassava_2_N = mkN "mandioca" ; --*
lin casserole_2_N = mkN "panela" ; --*
lin cassette_N = variants {mkN "cassete" ; mkN "gaveta" ; } ; --*
lin cassia_2_N = mkN "Cassia" ; --*
lin cassiterite_N = mkN "Cassiterita" ; --*
lin cassock_N = variants {mkN "batina" ; mkN "sotaina" ; } ; --*
lin cast_10_V2 = mkV2 (mkV "formular") ; --*
lin cast_11_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin cast_11_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin cast_1_N = variants {mkN "elenco" ; mkN "of" ; mkN "personae" ; } ; --*
lin cast_2_N = mkN "molde" ; --*
lin cast_2_V2 = mkV2 (mkV "depositar") ; --*
lin cast_3_V2 = variants {mkV2 (mkV "eleger") ; mkV2 (mkV "escolher") ; } ; --*
lin cast_4_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin cast_4_V = variants {mkV "arremessar" ; mkV "atirar" ; mkV "lançar" ; } ; --*
lin cast_5_N = variants {mkN "bandage" ; mkN "cast" ; mkN "gesso" ; } ; --*
lin cast_6_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "errar") ; mkV2 (mkV "perambular") ; mkV2 (mkV "transmigrar") ; mkV2 (mkV "vadiar") ; mkV2 (mkV "vagabundear") ; mkV2 (mkV "vagar") ; mkV2 (mkV "vaguear") ; } ; --*
lin cast_6_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin cast_8_N = mkN "fundição" ; --*
lin cast_8_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin cast_8_V = variants {mkV "away" ; mkV "jogar" ; mkV "off" ; } ; --*
lin cast_9_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "sortear") ; } ; --*
lin cast_aside_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin castaway_2_N = variants {mkN "náufrago" ; mkN "survivor" ; } ; --*
lin caste_1_N = mkN "kasta" ; --*
lin caste_2_N = variants {mkN "Casta" ; mkN "castas" ; } ; --*
lin caste_3_N = mkN "casta" ; --*
lin castigate_1_V2 = mkV2 (mkV "castigar") ; --*
lin castigate_2_V2 = mkV2 (mkV "castigar") ; --*
lin castigation_2_N = mkN "castigo" ; --*
lin casting_2_N = mkN "fundição" ; --*
lin casting_3_N = mkN "fundição" ; --*
lin cast_iron_A = variants {mkA "férreo" ; mkA "ferro" ; } ; --*
lin castle_1_N = variants {mkN "castelo" ; mkN "palácio" ; } ; --*
lin castle_2_N = mkN "castelo" ; --*
lin castle_3_N = mkN "torre" ; --*
lin castle_4_N = variants {mkN "fazerroque" ; mkN "roque" ; } ; --*
lin castle_V = mkV "rocar" ; --*
lin cast_off_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin cast_off_1_V = variants {mkV "away" ; mkV "jogar" ; mkV "off" ; } ; --*
lin cast_off_A = mkA "molde-fora" ; --*
lin castor_1_N = variants {mkN "Castor" ; mkN "Geminorum" ; } ; --*
lin castor_5_N = variants {mkN "castor" ; mkN "Castor" ; } ; --*
lin castor_oil_N = mkN "oil" ; --*
lin cast_out_1_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "ostracizar") ; mkV2 (mkV "out") ; } ; --*
lin cast_out_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin castrate_1_V2 = variants {mkV2 (mkV "castrar") ; mkV2 (mkV "emascular") ; } ; --*
lin castrate_2_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "expurgar") ; } ; --*
lin castrate_3_V2 = variants {mkV2 (mkV "capar") ; mkV2 (mkV "castrar") ; mkV2 (mkV "emascular") ; } ; --*
lin castration_1_N = mkN "castração" ; --*
lin castration_2_N = mkN "castração" ; --*
lin castration_3_N = mkN "castração" ; --*
lin castrato_N = mkN "castrato" ; --*
lin casual_4_A = variants {mkA "acidental" ; mkA "casual" ; } ; --*
lin casual_6_A = variants {mkA "eventual" ; mkA "ocasional" ; } ; --*
lin casual_9_A = mkA "casual" ; --*
lin casualness_N = mkN "familiaridade" ; --*
lin casualty_1_N = mkN "baixa" ; --*
lin casus_belli_N = mkN "belli" ; --*
lin cat_1_N = variants {mkN "cat" ; mkN "gato" ; } ; --*
lin cat_2_N = variants {mkN "cara" ; mkN "rapaz" ; mkN "tio" ; } ; --*
lin cat_4_N = variants {mkN "khat" ; mkN "tea" ; } ; --*
lin cat_5_N = variants {mkN "Gatos" ; mkN "Raça" ; } ; --*
lin cat_7_N = variants {mkN "cat" ; mkN "gato" ; } ; --*
lin catabolic_2_A = mkA "catabólico" ; --*
lin catabolism_1_N = variants {mkN "catabolismo" ; mkN "Catabolismo" ; mkN "metabolism" ; } ; --*
lin catachresis_N = variants {mkN "catacrese" ; mkN "Catacrese" ; } ; --*
lin cataclysm_1_N = mkN "cataclismo" ; --*
lin cataclysm_2_N = variants {mkN "calamidade" ; mkN "cataclismo" ; mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; mkN "flagelo" ; mkN "tragédia" ; } ; --*
lin catacomb_N = mkN "catacumba" ; --*
lin catafalque_N = mkN "catafalco" ; --*
lin catalan_1_A = mkA "catalão" ; --*
lin catalan_2_A = mkA "catalão" ; --*
lin catalanFem_N = mkN "catalão" ; --*
lin catalanMasc_N = mkN "catalão" ; --*
lin catalan_N = mkN "catalão" ; --*
lin catalase_N = variants {mkN "catalase" ; mkN "Catálase" ; } ; --*
lin catalepsy_N = variants {mkN "catalepsia" ; mkN "Catalepsia" ; } ; --*
lin catalog_1_N = mkN "catálogo" ; --*
lin catalog_1_V2 = mkV2 (mkV "catalogar") ; --*
lin catalog_2_N = variants {mkN "catalogação" ; mkN "catálogo" ; } ; --*
lin catalog_2_V2 = mkV2 (mkV "catalogar") ; --*
lin cataloger_1_N = mkN "catalogador" ; --*
lin catalogue_1_N = variants {mkN "catalogação" ; mkN "catálogo" ; } ; --*
lin catalogue_1_V2 = mkV2 (mkV "catalogar") ; --*
lin catalogue_2_N = mkN "catálogo" ; --*
lin catalogue_2_V2 = mkV2 (mkV "catalogar") ; --*
lin catalysis_N = variants {mkN "action" ; mkN "catálise" ; } ; --*
lin catalyst_1_N = mkN "catalisador" ; --*
lin catalyst_2_N = mkN "catalisadores" ; --*
lin catamaran_N = variants {mkN "Catamarã" ; mkN "catamaran" ; } ; --*
lin catamite_N = mkN "catamita" ; --*
lin catapult_1_N = variants {mkN "atiradeira" ; mkN "baladeira" ; mkN "bodoque" ; mkN "Bodoque" ; mkN "estilingue" ; mkN "fisga" ; mkN "funda" ; mkN "setra" ; } ; --*
lin catapult_2_N = mkN "catapulta" ; --*
lin catapult_3_N = variants {mkN "balista" ; mkN "catapulta" ; mkN "manganela" ; mkN "trabuco" ; } ; --*
lin cataract_1_N = variants {mkN "catarata" ; mkN "Catarata" ; } ; --*
lin cataract_2_N = mkN "catarata" ; --*
lin catarrh_N = variants {mkN "catarro" ; mkN "escarro" ; mkN "scarro" ; } ; --*
lin catastrophe_1_N = variants {mkN "calamidade" ; mkN "cataclismo" ; mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; mkN "flagelo" ; mkN "tragédia" ; } ; --*
lin catastrophe_2_N = variants {mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; } ; --*
lin catastrophe_3_N = mkN "cataclismo" ; --*
lin catastrophic_1_A = mkA "catastrófico" ; --*
lin catatonia_2_N = variants {mkN "catatonia" ; mkN "schizophrenia" ; mkN "type" ; } ; --*
lin catch_10_N = variants {mkN "arresto" ; mkN "into" ; } ; --*
lin catch_10_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "tomar") ; } ; --*
lin catch_11_V2 = variants {mkV2 (mkV "avaçar") ; mkV2 (mkV "up") ; } ; --*
lin catch_12_V2 = mkV2 (mkV "pegar") ; --*
lin catch_15_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "in") ; mkV2 (mkV "ver") ; } ; --*
lin catch_16_V2 = mkV2 (mkV "prender") ; --*
lin catch_17_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "up") ; } ; --*
lin catch_18_V2 = variants {mkV2 (mkV "comprender") ; mkV2 (mkV "entender") ; mkV2 (mkV "pegar") ; } ; --*
lin catch_1_N = variants {mkN "artifício" ; mkN "pegadinha" ; } ; --*
lin catch_1_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "pegar") ; } ; --*
lin catch_20_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "pegar") ; } ; --*
lin catch_23_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin catch_27_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "capturar") ; } ; --*
lin catch_28_V2 = variants {mkV2 (mkV "flagrar") ; mkV2 (mkV "pegar") ; } ; --*
lin catch_3_N = mkN "partido" ; --*
lin catch_4_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "hold") ; mkV2 (mkV "segurar") ; } ; --*
lin catch_5_V2 = variants {mkV2 (mkV "capturar") ; mkV2 (mkV "pegar") ; } ; --*
lin catch_6_V2 = mkV2 (mkV "prender") ; --*
lin catch_8_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "capturar") ; } ; --*
lin catch_9_N = variants {mkN "agarrão" ; mkN "pegada" ; mkN "pegar" ; } ; --*
lin catcher_1_N = variants {mkN "apanhador" ; mkN "coletor" ; mkN "receptor" ; } ; --*
lin catcher_2_N = mkN "receptor" ; --*
lin catching_2_N = mkN "detecção" ; --*
lin catchment_area_N = variants {mkN "albufeira" ; mkN "area" ; mkN "bacia" ; mkN "basin" ; } ; --*
lin catchment_basin_N = variants {mkN "albufeira" ; mkN "area" ; mkN "bacia" ; mkN "basin" ; } ; --*
lin catchment_N = mkN "reservatórios" ; --*
lin catch_on_1_V = variants {mkV "entender" ; mkV "it" ; mkV "on" ; mkV "onto" ; mkV "wise" ; } ; --*
lin catch_out_V2 = mkV2 (mkV "out") ; --*
lin catchphrase_1_N = variants {mkN "Bordão" ; mkN "phrase" ; } ; --*
lin catch_up_with_1_V2 = variants {mkV2 (mkV "avaçar") ; mkV2 (mkV "up") ; } ; --*
lin catch_up_with_3_V2 = mkV2 (mkV "up") ; --*
lin catchword_1_N = variants {mkN "cambial" ; mkN "lema" ; mkN "Lemas" ; mkN "mote" ; } ; --*
lin catchy_1_A = mkA "complicada" ; --*
lin catechesis_N = mkN "catequese" ; --*
lin catechism_1_N = mkN "catecismo" ; --*
lin catechism_2_N = variants {mkN "catecismo" ; mkN "catequismo" ; } ; --*
lin catechismal_A = mkA "catequismal" ; --*
lin catechize_1_V2 = mkV2 (mkV "catequizar") ; --*
lin catecholamine_N = mkN "catecolamina" ; --*
lin catechumen_N = mkN "Catecumenato" ; --*
lin categoric_1_A = mkA "categórico" ; --*
lin categoric_2_A = variants {mkA "categórico" ; mkA "incondicional" ; } ; --*
lin categorical_1_A = mkA "categórico" ; --*
lin categorical_2_A = variants {mkA "categórico" ; mkA "incondicional" ; } ; --*
lin categorization_1_N = variants {mkN "categorização" ; mkN "classe" ; mkN "classificação" ; } ; --*
lin categorization_2_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Classificação" ; } ; --*
lin categorization_3_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Sistemas" ; mkN "sortimento" ; } ; --*
lin categorize_1_V2 = mkV2 (mkV "categorizar") ; --*
lin category_1_N = variants {mkN "categoria" ; mkN "classe" ; mkN "família" ; mkN "grupo" ; } ; --*
lin category_2_N = variants {mkN "categoria" ; mkN "classe" ; mkN "família" ; } ; --*
lin catenary_N = mkN "catenária" ; --*
lin cater_1_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "provisionar") ; mkV2 (mkV "servir") ; } ; --*
lin cater_2_V = mkV "fornecer" ; --*
lin catering_N = mkN "Catering" ; --*
lin caterpillar_1_N = variants {mkN "lagarta" ; mkN "larva" ; } ; --*
lin caterwaul_V = mkV "gritar" ; --*
lin catfish_1_N = mkN "bagre" ; --*
lin catfish_3_N = variants {mkN "fish" ; mkN "Peixe" ; mkN "Peixe-gato" ; } ; --*
lin catgut_2_N = variants {mkN "catgut" ; mkN "Cat-gut" ; mkN "tripa" ; } ; --*
lin catharsis_1_N = mkN "catarse" ; --*
lin catharsis_2_N = mkN "catarse" ; --*
lin cathartic_N = mkN "laxante" ; --*
lin cathedral_1_N = mkN "catedral" ; --*
lin cathedral_2_N = variants {mkN "Catedrais" ; mkN "catedral" ; } ; --*
lin catherine_1_PN = variants {mkPN "Catarina" ; mkPN "of" ; } ; --*
lin catherine_2_PN = variants {mkPN "Catarina" ; mkPN "II" ; mkPN "the" ; } ; --*
lin catheterization_1_N = mkN "cateterismo" ; --*
lin catheter_N = mkN "cateter" ; --*
lin cathexis_N = mkN "catexia" ; --*
lin cathode_1_N = variants {mkN "catodo" ; mkN "Catodo" ; mkN "Cátodo" ; } ; --*
lin catholic_1_A = variants {mkA "católica" ; mkA "católico" ; } ; --*
lin catholic_2_A = variants {mkA "católico" ; mkA "universal" ; } ; --*
lin catholicFem_N = mkN "católico" ; --*
lin catholicism_N = variants {mkN "catolicismo" ; mkN "Catolicismo" ; } ; --*
lin catholicity_1_N = variants {mkN "catolicismo" ; mkN "Catolicismo" ; } ; --*
lin catholicity_2_N = mkN "universalidade" ; --*
lin catholicMasc_N = mkN "católico" ; --*
lin cation_N = variants {mkN "catião" ; mkN "cátion" ; } ; --*
lin catmint_N = variants {mkN "cataria" ; mkN "erva-de-gato" ; } ; --*
lin cat_nap_N = variants {mkN "sesta" ; mkN "sleep" ; mkN "soneca" ; mkN "winks" ; } ; --*
lin cat_o'_nine_tails_N = variants {mkN "Gatos" ; mkN "Raça" ; } ; --*
lin cat_sleep_N = variants {mkN "sesta" ; mkN "sleep" ; mkN "soneca" ; mkN "winks" ; } ; --*
lin catsup_N = variants {mkN "catchup" ; mkN "ketchup" ; } ; --*
lin cattalo_N = mkN "beefalo" ; --*
lin cattish_A = variants {mkA "calúnia" ; mkA "malvado" ; mkA "perversa" ; } ; --*
lin cattleman_2_N = variants {mkN "boiadeiro" ; mkN "cowboy" ; mkN "vaqueiro" ; } ; --*
lin cattle_N = variants {mkN "bovinos" ; mkN "gado" ; mkN "taurus" ; mkN "vaca" ; mkN "vacum" ; } ; --*
lin catty_A = variants {mkA "calúnia" ; mkA "malvado" ; mkA "perversa" ; } ; --*
lin catwalk_1_N = mkN "passarela" ; --*
lin catwalk_2_N = mkN "passarela" ; --*
lin caucasian_1_A = mkA "caucásico" ; --*
lin caucasian_2_A = variants {mkA "caucasiana" ; mkA "caucasiano" ; } ; --*
lin caucasianFem_1_N = variants {mkN "branco" ; mkN "caucasiana" ; mkN "person" ; } ; --*
lin caucasianFem_2_N = variants {mkN "language" ; mkN "Línguas" ; } ; --*
lin caucasianMasc_1_N = variants {mkN "branco" ; mkN "caucasiana" ; mkN "person" ; } ; --*
lin caucasianMasc_2_N = variants {mkN "language" ; mkN "Línguas" ; } ; --*
lin caucus_N = mkN "caucus" ; --*
lin caul_1_N = variants {mkN "omento" ; mkN "omentum" ; } ; --*
lin cauldron_N = variants {mkN "caldeirão" ; mkN "Caldeirão" ; } ; --*
lin cauliflower_1_N = variants {mkN "couve-flor" ; mkN "oleracea" ; } ; --*
lin cauliflower_2_N = variants {mkN "Couve" ; mkN "couve-flor" ; } ; --*
lin caulk_N = mkN "calafete" ; --*
lin causal_A = mkA "causal" ; --*
lin causality_N = mkN "causalidade" ; --*
lin causation_N = mkN "causalidade" ; --*
lin cause_1_N = mkN "causa" ; --*
lin cause_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "provocar") ; } ; --*
lin cause_2_V2V = mkV2V (mkV "induzir") ; --*
lin cause_3_N = variants {mkN "campanha" ; mkN "causa" ; } ; --*
lin cause_4_N = variants {mkN "agency" ; mkN "agent" ; mkN "causador" ; } ; --*
lin cause_5_N = variants {mkN "causa" ; mkN "pleito" ; mkN "processo" ; } ; --*
lin causeless_1_A = mkA "sem" ; --*
lin causeless_2_A = mkA "fortuito" ; --*
lin causerie_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin causing_N = mkN "causalidade" ; --*
lin caustic_1_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin caustic_2_A = variants {mkA "cáustico" ; mkA "corrosivo" ; } ; --*
lin cauterize_1_V2 = mkV2 (mkV "cauterizar") ; --*
lin cautery_2_N = mkN "cauterização" ; --*
lin caution_3_N = variants {mkN "cautela" ; mkN "precaução" ; mkN "prudência" ; } ; --*
lin caution_4_N = mkN "prudência" ; --*
lin caution_V2 = variants {mkV2 (mkV "admoestar") ; mkV2 (mkV "advertir") ; mkV2 (mkV "avisar") ; mkV2 (mkV "prevenir") ; } ; --*
lin caution_V2V = variants {mkV2V (mkV "admoestar") ; mkV2V (mkV "advertir") ; mkV2V (mkV "avisar") ; mkV2V (mkV "prevenir") ; } ; --*
lin caution_V = variants {mkV "admoestar" ; mkV "advertir" ; mkV "avisar" ; mkV "prevenir" ; } ; --*
lin caution_VS = variants {mkVS (mkV "admoestar") ; mkVS (mkV "advertir") ; mkVS (mkV "avisar") ; mkVS (mkV "prevenir") ; } ; --*
lin cautious_1_A = variants {mkA "atento" ; mkA "cauteloso" ; mkA "cauto" ; mkA "prudente" ; } ; --*
lin cautious_2_A = mkA "cauteloso" ; --*
lin cavalcade_N = variants {mkN "cavalgada" ; mkN "Cavalgada" ; } ; --*
lin cavalier_1_N = mkN "mais" ; --*
lin cavalier_2_N = mkN "Cavaliers" ; --*
lin cavalier_3_N = variants {mkN "Chevalier" ; mkN "Maurice" ; } ; --*
lin cavalry_1_N = variants {mkN "cavalaria" ; mkN "Cavalaria" ; mkN "cavalry" ; } ; --*
lin cave_dweller_N = variants {mkN "cavernícola" ; mkN "dweller" ; mkN "man" ; mkN "troglodita" ; } ; --*
lin cave_in_N = variants {mkN "in" ; mkN "subsidência" ; } ; --*
lin cave_in_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin caveman_1_N = variants {mkN "cavernícola" ; mkN "dweller" ; mkN "man" ; mkN "troglodita" ; } ; --*
lin cave_N = variants {mkN "caverna" ; mkN "Cavernas" ; mkN "furna" ; mkN "gruta" ; mkN "grutas" ; mkN "oca" ; } ; --*
lin cavern_2_N = variants {mkN "caverna" ; mkN "grutas" ; } ; --*
lin cavernous_1_A = mkA "cavernoso" ; --*
lin cavernous_2_A = mkA "erétil" ; --*
lin caviar_1_N = mkN "caviar" ; --*
lin cavity_1_N = variants {mkN "buraco" ; mkN "cavouco" ; mkN "fosso" ; mkN "poço" ; mkN "vala" ; } ; --*
lin cavity_2_N = variants {mkN "cavidade" ; mkN "space" ; } ; --*
lin cavity_3_N = variants {mkN "cárie" ; mkN "caries" ; mkN "decay" ; } ; --*
lin cavort_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin caw_V2 = variants {mkV2 (mkV "crocitar") ; mkV2 (mkV "grasnar") ; } ; --*
lin caw_V = variants {mkV "crocitar" ; mkV "grasnar" ; } ; --*
lin cayenne_1_N = variants {mkN "annuum" ; mkN "pepper" ; mkN "pimento" ; } ; --*
lin cayenne_2_N = variants {mkN "páprica" ; mkN "pepper" ; } ; --*
lin cayenne_pepper_1_N = variants {mkN "annuum" ; mkN "pepper" ; mkN "pimento" ; } ; --*
lin cayenne_pepper_2_N = variants {mkN "páprica" ; mkN "pepper" ; } ; --*
lin cc_N = variants {mkN "centimeter" ; mkN "centimetre" ; mkN "centímetro" ; } ; --*
lin cd_1_N = variants {mkN "Cadmio" ; mkN "cádmio" ; mkN "number" ; } ; --*
lin cd_2_N = variants {mkN "candela" ; mkN "candle" ; mkN "vela" ; } ; --*
lin cd_4_N = variants {mkN "CD" ; mkN "disc" ; mkN "disk" ; } ; --*
lin cease_1_V2 = variants {mkV2 (mkV "cessar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "descontinuar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin cease_2_V = variants {mkV "acabar" ; mkV "cessar" ; mkV "encerrar" ; mkV "finalizar" ; mkV "parar" ; mkV "terminar" ; } ; --*
lin cease_fire_N = variants {mkN "armistício" ; mkN "cessar-fogo" ; mkN "trégua" ; } ; --*
lin ceaseless_A = variants {mkA "constante" ; mkA "contínuo" ; mkA "incessante" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin cease_N = mkN "cessação" ; --*
lin cecal_1_A = mkA "cecal" ; --*
lin cecropia_1_N = variants {mkN "Cecropia" ; mkN "Embaúba" ; } ; --*
lin cecum_1_N = variants {mkN "ceco" ; mkN "Ceco" ; mkN "gut" ; } ; --*
lin cedar_1_N = variants {mkN "cedro" ; mkN "tree" ; } ; --*
lin cedar_2_N = mkN "cedro" ; --*
lin cedar_3_N = variants {mkN "cedar" ; mkN "cedro" ; mkN "tree" ; } ; --*
lin cede_1_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "submeter-se") ; mkV2 (mkV "sucumbir") ; } ; --*
lin cede_2_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "render-se") ; mkV2 (mkV "up") ; } ; --*
lin cedilla_N = variants {mkN "cedilha" ; mkN "til" ; } ; --*
lin cefadroxil_N = mkN "cefadroxil" ; --*
lin ceftriaxone_N = mkN "ceftriaxona" ; --*
lin cefuroxime_N = mkN "Cefuroxima" ; --*
lin ceibo_N = variants {mkN "coral" ; mkN "Corticeira" ; mkN "crista-galli" ; mkN "tree" ; } ; --*
lin ceiling_1_N = mkN "teto" ; --*
lin ceiling_3_N = mkN "teto" ; --*
lin ceiling_4_N = mkN "teto" ; --*
lin celebrate_1_V2 = variants {mkV2 (mkV "celebrar") ; mkV2 (mkV "festejar") ; mkV2 (mkV "solenizar") ; } ; --*
lin celebrate_2_V2 = mkV2 (mkV "celebrar") ; --*
lin celebrate_3_V2 = mkV2 (mkV "celebrar") ; --*
lin celebration_1_N = variants {mkN "celebração" ; mkN "festa" ; mkN "rotulagem" ; } ; --*
lin celebration_2_N = variants {mkN "celebração" ; mkN "festa" ; mkN "festividade" ; } ; --*
lin celebration_3_N = mkN "solenidade" ; --*
lin celebrity_1_N = variants {mkN "celebridade" ; mkN "person" ; } ; --*
lin celebrity_2_N = variants {mkN "celebridade" ; mkN "fama" ; mkN "glória" ; mkN "renome" ; } ; --*
lin celecoxib_N = mkN "celecoxib" ; --*
lin celerity_N = variants {mkN "celeridade" ; mkN "rapidez" ; } ; --*
lin celery_1_N = variants {mkN "celery" ; mkN "graveolens" ; mkN "salsão" ; } ; --*
lin celery_2_N = variants {mkN "aipo" ; mkN "ápio" ; mkN "Apium" ; mkN "celeri" ; mkN "salsão" ; } ; --*
lin celesta_N = mkN "celesta" ; --*
lin celestial_1_A = variants {mkA "celeste" ; mkA "celestial" ; } ; --*
lin celestial_2_A = variants {mkA "celeste" ; mkA "celestial" ; } ; --*
lin celestial_3_A = mkA "celeste" ; --*
lin celiac_1_A = mkA "celíaco" ; --*
lin celiac_2_A = mkA "celíaco" ; --*
lin celibacy_1_N = mkN "celibato" ; --*
lin celibacy_2_N = variants {mkN "abstention" ; mkN "castidade" ; mkN "celibato" ; mkN "pudicícia" ; } ; --*
lin celibate_N = mkN "celibatário" ; --*
lin cell_2_N = mkN "célula" ; --*
lin cell_3_N = variants {mkN "cell" ; mkN "célula" ; mkN "células" ; } ; --*
lin cell_4_N = variants {mkN "célula" ; mkN "células" ; } ; --*
lin cell_5_N = variants {mkN "celular" ; mkN "phone" ; mkN "telefone" ; mkN "telephone" ; } ; --*
lin cell_6_N = mkN "cela" ; --*
lin cell_7_N = variants {mkN "cela" ; mkN "cell" ; } ; --*
lin cellar_1_N = variants {mkN "cave" ; mkN "porão" ; } ; --*
lin cellar_2_N = variants {mkN "armário" ; mkN "cellar" ; } ; --*
lin cellar_3_N = variants {mkN "adega" ; mkN "cellar" ; } ; --*
lin cellistFem_N = mkN "violoncelista" ; --*
lin cellistMasc_N = mkN "violoncelista" ; --*
lin cello_N = variants {mkN "celo" ; mkN "violoncelo" ; } ; --*
lin cellophane_N = mkN "celofane" ; --*
lin cellular_2_A = mkA "celular" ; --*
lin cellularity_N = mkN "celularidade" ; --*
lin cellulite_N = mkN "celulite" ; --*
lin cellulitis_N = mkN "celulite" ; --*
lin celluloid_1_N = variants {mkN "celuloide" ; mkN "Celulóide" ; } ; --*
lin celluloid_2_N = variants {mkN "Chinês" ; mkN "cine" ; mkN "cinema" ; mkN "indústria" ; } ; --*
lin celluloid_A = mkA "sintético" ; --*
lin cellulose_N = variants {mkN "celulose" ; mkN "Celulose" ; } ; --*
lin celom_1_N = mkN "celoma" ; --*
lin celtic_A = variants {mkA "celta" ; mkA "céltica" ; mkA "céltico" ; mkA "gaélica" ; mkA "gaélico" ; } ; --*
lin celtic_N = variants {mkN "celta" ; mkN "language" ; mkN "línguas" ; mkN "Línguas" ; } ; --*
lin celt_N = variants {mkN "Celta" ; mkN "celtas" ; mkN "Celtas" ; } ; --*
lin cement_1_N = variants {mkN "betão" ; mkN "cimento" ; } ; --*
lin cement_2_N = variants {mkN "cimento" ; mkN "Cimento" ; } ; --*
lin cement_2_V2 = mkV2 (mkV "cimentar") ; --*
lin cement_3_N = mkN "cimento" ; --*
lin cement_5_N = mkN "cemento" ; --*
lin cement_mixer_N = mkN "mixer" ; --*
lin cementum_N = mkN "cemento" ; --*
lin cemetery_N = variants {mkN "cemitério" ; mkN "ground" ; mkN "necrópole" ; mkN "park" ; mkN "site" ; } ; --*
lin cenobite_1_N = mkN "cenobita" ; --*
lin cenogenetic_A = mkA "cenogenético" ; --*
lin cenotaph_N = variants {mkN "cenotáfio" ; mkN "tomb" ; } ; --*
lin censer_N = variants {mkN "incensário" ; mkN "turíbulo" ; } ; --*
lin censor_1_V2 = mkV2 (mkV "proibir") ; --*
lin censor_2_V2 = mkV2 (mkV "censurar") ; --*
lin censoring_1_N = variants {mkN "censura" ; mkN "review" ; } ; --*
lin censoring_2_N = mkN "censura" ; --*
lin censorious_A = variants {mkA "chicaneiro" ; mkA "trapaceiro" ; } ; --*
lin censorship_1_N = variants {mkN "censura" ; mkN "review" ; } ; --*
lin censorship_2_N = mkN "censura" ; --*
lin censure_1_N = mkN "reprovação" ; --*
lin censure_2_N = mkN "excomunhão" ; --*
lin censure_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "criticar") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; } ; --*
lin census_N = variants {mkN "censo" ; mkN "Censo" ; mkN "count" ; mkN "recenseamento" ; } ; --*
lin cent_1_N = variants {mkN "centavo" ; mkN "cêntimo" ; } ; --*
lin cent_2_N = variants {mkN "centavo" ; mkN "cêntimo" ; mkN "moeda" ; } ; --*
lin centaur_1_N = mkN "centauro" ; --*
lin centaur_2_N = variants {mkN "Centaurus" ; mkN "Constelação" ; } ; --*
lin centavo_N = mkN "centavo" ; --*
lin centenarian_A = mkA "centenário" ; --*
lin centenarian_N = variants {mkN "centenário" ; mkN "Centenários" ; } ; --*
lin centenary_A = mkA "centenário" ; --*
lin centenary_N = mkN "centenário" ; --*
lin centennial_A = mkA "centenário" ; --*
lin centennial_N = mkN "centenário" ; --*
lin centerline_N = variants {mkN "bissetriz" ; mkN "line" ; } ; --*
lin centesimal_1_A = mkA "centesimal" ; --*
lin centesimal_2_A = variants {mkA "centesimal" ; mkA "centésimo" ; } ; --*
lin centiliter_1_N = mkN "centilitro" ; --*
lin centime_2_N = variants {mkN "centavo" ; mkN "cêntimo" ; mkN "moeda" ; } ; --*
lin centimetre_1_N = mkN "centímetro" ; --*
lin centipede_N = variants {mkN "centípede" ; mkN "centopeia" ; mkN "quilópode" ; } ; --*
lin central_1_A = variants {mkA "básico" ; mkA "central" ; mkA "fundamental" ; } ; --*
lin central_2_A = mkA "central" ; --*
lin centralism_N = mkN "centralismo" ; --*
lin centrality_N = mkN "centralidade" ; --*
lin centralization_1_N = mkN "centralização" ; --*
lin centralization_2_N = mkN "centralização" ; --*
lin centralize_V2 = variants {mkV2 (mkV "centralizar") ; mkV2 (mkV "concentrar") ; } ; --*
lin central_N = variants {mkN "central" ; mkN "exchange" ; } ; --*
lin centre_16_N = variants {mkN "center" ; mkN "centre" ; mkN "centro" ; mkN "mall" ; mkN "shopping" ; } ; --*
lin centre_18_N = mkN "center" ; --*
lin centre_1_N = mkN "Centro" ; --*
lin centre_2_N = mkN "jazida" ; --*
lin centre_2_V = variants {mkV "centrar" ; mkV "concentrar" ; mkV "focar" ; } ; --*
lin centre_3_N = variants {mkN "centro" ; mkN "ponto" ; mkN "umbigo" ; } ; --*
lin centre_3_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "around") ; mkV2 (mkV "centrar") ; mkV2 (mkV "on") ; } ; --*
lin centre_6_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin centre_9_N = mkN "centro" ; --*
lin centric_1_A = mkA "central" ; --*
lin centrifugal_1_A = mkA "centrífugo" ; --*
lin centrifugal_3_A = variants {mkA "centrífugo" ; mkA "motor" ; } ; --*
lin centrifugation_N = mkN "centrifugação" ; --*
lin centrifuge_N = variants {mkN "centrifuga" ; mkN "separador" ; } ; --*
lin centriole_N = mkN "centríolo" ; --*
lin centripetal_1_A = mkA "centrípeto" ; --*
lin centripetal_3_A = variants {mkA "centrípeto" ; mkA "sensorial" ; } ; --*
lin centrism_N = mkN "centro" ; --*
lin centroid_N = variants {mkN "Centroide" ; mkN "Centróide" ; } ; --*
lin centromere_N = variants {mkN "Centromero" ; mkN "Centrómero" ; mkN "Centrômero" ; } ; --*
lin centrosome_N = variants {mkN "body" ; mkN "centrossoma" ; } ; --*
lin centurion_N = mkN "centurião" ; --*
lin century_1_N = variants {mkN "centúria" ; mkN "século" ; mkN "Século" ; mkN "Séculos" ; } ; --*
lin century_2_N = variants {mkN "100" ; mkN "C" ; mkN "cem" ; mkN "centena" ; } ; --*
lin cephalexin_N = mkN "cefalexina" ; --*
lin cephalic_A = mkA "cefálico" ; --*
lin cephalometry_N = variants {mkN "cefalometria" ; mkN "Cefalometria" ; } ; --*
lin cephalopod_N = variants {mkN "Cefalopodes" ; mkN "cefalópodes" ; mkN "mollusk" ; } ; --*
lin cephalosporin_N = mkN "cefalosporina" ; --*
lin cephalothin_N = mkN "cefalotina" ; --*
lin ceramic_A = mkA "cerâmico" ; --*
lin ceramic_N = mkN "cerâmica" ; --*
lin ceramics_N = mkN "cerâmica" ; --*
lin cereal_1_N = variants {mkN "cereal" ; mkN "grass" ; } ; --*
lin cereal_2_N = variants {mkN "cereais" ; mkN "cereal" ; mkN "grain" ; } ; --*
lin cereal_A = mkA "de" ; --*
lin cerebellar_A = mkA "cerebelar" ; --*
lin cerebellum_N = mkN "cerebelo" ; --*
lin cerebral_1_A = variants {mkA "cerebral" ; mkA "intelectual" ; } ; --*
lin cerebral_2_A = mkA "cerebral" ; --*
lin cerebration_N = variants {mkN "ideia" ; mkN "process" ; } ; --*
lin cerebrospinal_A = mkA "cérebro-espinhal" ; --*
lin cerebrum_N = mkN "cérebro" ; --*
lin ceremonial_A = mkA "solene" ; --*
lin ceremonial_N = variants {mkN "cerimónia" ; mkN "cerimônia" ; mkN "festa" ; mkN "occasion" ; } ; --*
lin ceremonious_2_A = variants {mkA "convencional" ; mkA "solene" ; } ; --*
lin ceremony_1_N = variants {mkN "cerimónia" ; mkN "cerimônia" ; mkN "festa" ; mkN "occasion" ; } ; --*
lin ceremony_2_N = mkN "cerimônia" ; --*
lin ceremony_3_N = mkN "cerimônia" ; --*
lin ceriman_1_N = variants {mkN "costela-de-adão" ; mkN "deliciosa" ; } ; --*
lin cerise_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin cerise_N = variants {mkN "cereja" ; mkN "red" ; } ; --*
lin cerium_N = variants {mkN "Cerio" ; mkN "cério" ; mkN "number" ; } ; --*
lin certain_2_A = mkA "certo" ; --*
lin certain_4_A = variants {mkA "certo" ; mkA "inevitável" ; mkA "seguro" ; } ; --*
lin certainty_1_N = variants {mkN "certeza" ; mkN "segurança" ; } ; --*
lin certainty_2_N = variants {mkN "certeza" ; mkN "conclusion" ; mkN "thing" ; } ; --*
lin certifiable_1_A = mkA "certificável" ; --*
lin certificate_1_N = variants {mkN "atestado" ; mkN "Certificado" ; mkN "escritura" ; mkN "instrumento" ; } ; --*
lin certificate_2_N = variants {mkN "certificado" ; mkN "garantia" ; } ; --*
lin certificate_2_V2 = mkV2 (mkV "certificar") ; --*
lin certification_2_N = mkN "corroboração" ; --*
lin certification_3_N = variants {mkN "atestado" ; mkN "Certificado" ; mkN "escritura" ; mkN "instrumento" ; } ; --*
lin certification_4_N = variants {mkN "autenticação" ; mkN "autentificação" ; mkN "certificação" ; mkN "Métodos" ; mkN "verificação" ; } ; --*
lin certified_2_A = mkA "certificável" ; --*
lin certify_1_V2 = variants {mkV2 (mkV "certificar") ; mkV2 (mkV "demonstrar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "provar") ; } ; --*
lin certify_2_V2 = mkV2 (mkV "certificar") ; --*
lin certify_2_V = mkV "certificar" ; --*
lin certify_3_V2 = variants {mkV2 (mkV "autorizar") ; mkV2 (mkV "certificar") ; mkV2 (mkV "licenciar") ; } ; --*
lin certify_4_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "aprovar") ; } ; --*
lin certify_5_V2 = mkV2 (mkV "certificar") ; --*
lin certify_5_V = mkV "certificar" ; --*
lin certitude_N = mkN "certeza" ; --*
lin cerulean_A = variants {mkA "azul" ; mkA "blue" ; mkA "cerúleo" ; } ; --*
lin cerumen_N = variants {mkN "cera" ; mkN "cerume" ; mkN "cerúmen" ; } ; --*
lin cervical_1_A = mkA "cervical" ; --*
lin cervical_2_A = mkA "cervical" ; --*
lin cervicitis_N = mkN "cervicite" ; --*
lin cervix_1_N = mkN "pescoço" ; --*
lin cervix_2_N = variants {mkN "cervix" ; mkN "cérvix" ; mkN "uteri" ; } ; --*
lin cesarean_1_A = mkA "cesereano" ; --*
lin cesium_1_N = variants {mkN "césio" ; mkN "number" ; } ; --*
lin cessation_N = mkN "cessação" ; --*
lin cession_N = mkN "cessão" ; --*
lin cetacean_N = variants {mkN "cetáceos" ; mkN "mammal" ; } ; --*
lin ceylon_2_PN = variants {mkPN "Ceilão" ; mkPN "Lanka" ; mkPN "Socialist" ; } ; --*
lin cf_1_PN = variants {mkPN "Californio" ; mkPN "califórnio" ; mkPN "number" ; } ; --*
lin cf_2_PN = variants {mkPN "disease" ; mkPN "fibrose" ; mkPN "Fibrose" ; mkPN "fibrosis" ; } ; --*
lin chad_1_N = mkN "Chade" ; --*
lin chad_2_PN = variants {mkPN "Chad" ; mkPN "Chade" ; } ; --*
lin chad_3_PN = variants {mkPN "Chade" ; mkPN "of" ; } ; --*
lin chad_4_N = variants {mkN "language" ; mkN "Línguas" ; } ; --*
lin chadian_A = variants {mkA "chadiano" ; mkA "chadiense" ; } ; --*
lin chador_1_N = mkN "xador" ; --*
lin chafe_2_N = mkN "irritação" ; --*
lin chafe_2_V2 = variants {mkV2 (mkV "enervar-se") ; mkV2 (mkV "irritar-se") ; } ; --*
lin chafe_3_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin chafe_4_V2 = mkV2 (mkV "escoriar") ; --*
lin chafe_5_V = mkV "arranhar" ; --*
lin chaff_1_N = mkN "palha" ; --*
lin chaffinch_N = variants {mkN "coelebs" ; mkN "tentilhão" ; } ; --*
lin chaff_V2 = variants {mkV2 (mkV "bulir") ; mkV2 (mkV "caçoar") ; } ; --*
lin chagrin_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "humilhar") ; mkV2 (mkV "mortificar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin chain_10_N = mkN "colar" ; --*
lin chain_1_V2 = mkV2 (mkV "encadenar") ; --*
lin chain_2_N = variants {mkN "cadeia" ; mkN "chain" ; } ; --*
lin chain_2_V2 = mkV2 (mkV "encadear") ; --*
lin chain_3_N = variants {mkN "cadeia" ; mkN "corrente" ; } ; --*
lin chain_4_N = mkN "cadeia" ; --*
lin chain_6_N = mkN "corrente" ; --*
lin chain_7_N = variants {mkN "Boris" ; mkN "Ernst" ; } ; --*
lin chain_8_N = variants {mkN "chain" ; mkN "cordilheira" ; mkN "of" ; mkN "range" ; mkN "serra" ; } ; --*
lin chain_9_N = mkN "corrente" ; --*
lin chain_armour_N = variants {mkN "armor" ; mkN "armour" ; mkN "mail" ; mkN "malha" ; } ; --*
lin chain_letter_N = mkN "letter" ; --*
lin chain_mail_N = variants {mkN "armor" ; mkN "armour" ; mkN "mail" ; mkN "malha" ; } ; --*
lin chair_1_N = variants {mkN "assento" ; mkN "cadeira" ; } ; --*
lin chair_2_N = mkN "cadeira" ; --*
lin chair_3_N = mkN "presidente" ; --*
lin chair_4_N = variants {mkN "cadeira" ; mkN "chair" ; mkN "seat" ; } ; --*
lin chairman_N = mkN "presidente" ; --*
lin chalazion_N = variants {mkN "calázio" ; mkN "cyst" ; } ; --*
lin chalcedony_1_N = variants {mkN "calcedónia" ; mkN "Calcedónia" ; mkN "calcedônia" ; } ; --*
lin chalcocite_N = variants {mkN "Calcocita" ; mkN "glance" ; } ; --*
lin chalcopyrite_N = variants {mkN "Calcopirita" ; mkN "pyrites" ; } ; --*
lin chalet_N = mkN "chalé" ; --*
lin chalice_N = variants {mkN "cálice" ; mkN "Cálice" ; mkN "copo" ; mkN "taça" ; } ; --*
lin chalk_1_N = mkN "cré" ; --*
lin chalk_2_N = mkN "cal" ; --*
lin chalk_3_N = variants {mkN "feed" ; mkN "hydrochloride" ; mkN "metanfetamina" ; mkN "Metanfetaminas" ; } ; --*
lin chalk_4_N = variants {mkN "giz" ; mkN "Giz" ; mkN "griz" ; } ; --*
lin chalk_out_V2 = variants {mkV2 (mkV "bosquejar") ; mkV2 (mkV "out") ; mkV2 (mkV "rascunhar") ; } ; --*
lin challenge_1_N = variants {mkN "desafio" ; mkN "repto" ; } ; --*
lin challenge_1_V2 = variants {mkV2 (mkV "desafiar") ; mkV2 (mkV "disputar") ; } ; --*
lin challenge_2_N = mkN "desafio" ; --*
lin challenge_2_V2 = mkV2 (mkV "desafiar") ; --*
lin challenge_3_N = mkN "desafio" ; --*
lin challenge_4_V2 = variants {mkV2 (mkV "contestar") ; mkV2 (mkV "exception") ; } ; --*
lin challenger_N = variants {mkN "adversário" ; mkN "competidor" ; mkN "concorrente" ; mkN "contendor" ; mkN "desafiante" ; mkN "inimigo" ; mkN "opositor" ; mkN "rival" ; } ; --*
lin challenge_V = variants {mkV "contestar" ; mkV "exception" ; } ; --*
lin chamber_1_N = mkN "estância" ; --*
lin chamber_2_N = mkN "câmara" ; --*
lin chamber_3_N = variants {mkN "câmara" ; mkN "sala" ; } ; --*
lin chamber_4_N = mkN "câmara" ; --*
lin chamber_5_N = variants {mkN "accommodation" ; mkN "câmara" ; mkN "habitação" ; mkN "quarto" ; mkN "room" ; } ; --*
lin chamberlain_1_N = variants {mkN "Chamberlain" ; mkN "Neville" ; } ; --*
lin chamberlain_3_N = mkN "camerlengo" ; --*
lin chamberpot_N = variants {mkN "mug" ; mkN "penico" ; } ; --*
lin chameleon_1_N = mkN "camaleão" ; --*
lin chameleon_2_N = variants {mkN "Chamaeleon" ; mkN "Constelação" ; } ; --*
lin chameleon_3_N = variants {mkN "camaleão" ; mkN "Chamaeleonidae" ; } ; --*
lin chammy_leather_N = variants {mkN "camurça" ; mkN "leather" ; } ; --*
lin chamois_1_N = variants {mkN "camurça" ; mkN "leather" ; } ; --*
lin chamois_2_N = variants {mkN "camurça" ; mkN "rupicapra" ; } ; --*
lin chamois_leather_N = variants {mkN "camurça" ; mkN "leather" ; } ; --*
lin champagne_1_N = variants {mkN "champagne" ; mkN "Champagne" ; mkN "champanha" ; mkN "champanhe" ; } ; --*
lin champagne_2_N = variants {mkN "Champanha-ardenas" ; mkN "Champanha-Ardenas" ; } ; --*
lin champion_1_N = mkN "campeão" ; --*
lin champion_2_N = variants {mkN "guerreiro" ; mkN "herói" ; mkN "paladino" ; } ; --*
lin champion_3_N = mkN "seguidor" ; --*
lin champion_4_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin championship_1_N = mkN "campeonato" ; --*
lin championship_3_N = variants {mkN "mecenato" ; mkN "proteção" ; } ; --*
lin champion_V2 = mkV2 (mkV "defender") ; --*
lin champ_N = mkN "campeão" ; --*
lin chance_1_N = variants {mkN "chance" ; mkN "oportunidade" ; } ; --*
lin chance_2_N = variants {mkN "azar" ; mkN "ensejo" ; mkN "sorte" ; } ; --*
lin chance_2_V = variants {mkV "a" ; mkV "arriscar" ; mkV "chances" ; } ; --*
lin chance_3_N = mkN "perigo" ; --*
lin chance_4_N = mkN "probabilidade" ; --*
lin chancellery_N = mkN "chancelaria" ; --*
lin chancellor_1_N = variants {mkN "chanceler" ; mkN "of" ; } ; --*
lin chancellor_2_N = variants {mkN "chanceler" ; mkN "minister" ; mkN "primeiro-ministro" ; } ; --*
lin chancellor_3_N = variants {mkN "chanceler" ; mkN "reitor" ; } ; --*
lin chancellorship_N = mkN "chancelaria" ; --*
lin chance_upon_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "across") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin chance_upon_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "trombar") ; } ; --*
lin chancy_1_A = mkA "incerto" ; --*
lin chandelier_N = variants {mkN "candeeiro" ; mkN "candelabro" ; mkN "lustre" ; mkN "mais" ; } ; --*
lin chandler_1_N = variants {mkN "Chandler" ; mkN "Raymond" ; mkN "Thornton" ; } ; --*
lin change_10_N = mkN "variedade" ; --*
lin change_1_N = variants {mkN "alteração" ; mkN "modificação" ; mkN "mudança" ; mkN "variação" ; } ; --*
lin change_1_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "modificar") ; mkV2 (mkV "mudar") ; } ; --*
lin change_2_N = mkN "mudança" ; --*
lin change_2_V = variants {mkV "alterar" ; mkV "mudar" ; } ; --*
lin change_3_N = mkN "mudança" ; --*
lin change_3_V = variants {mkV "alterar" ; mkV "modificar" ; mkV "mudar" ; mkV "variar" ; } ; --*
lin change_4_N = mkN "mudança" ; --*
lin change_4_V2 = mkV2 (mkV "mudar") ; --*
lin change_5_N = mkN "troco" ; --*
lin change_5_V2 = variants {mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin change_5_V = variants {mkV "mudar" ; mkV "trocar" ; } ; --*
lin change_6_V2 = variants {mkV2 (mkV "converter") ; mkV2 (mkV "mudar") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin change_7_V2 = mkV2 (mkV "trocar") ; --*
lin change_8_N = variants {mkN "cobre" ; mkN "moeda" ; } ; --*
lin change_8_V = variants {mkV "baldear" ; mkV "trocar" ; } ; --*
lin change_9_N = mkN "troco" ; --*
lin change_9_V = mkV "mudar" ; --*
lin changeable_1_A = variants {mkA "alterável" ; mkA "modificável" ; mkA "mutável" ; } ; --*
lin changeable_2_A = variants {mkA "mutável" ; mkA "variável" ; } ; --*
lin changeable_3_A = variants {mkA "instável" ; mkA "variável" ; } ; --*
lin changeable_4_A = mkA "iridescente" ; --*
lin changeableness_N = mkN "mutabilidade" ; --*
lin changeful_A = variants {mkA "mutável" ; mkA "variável" ; } ; --*
lin changeless_1_A = variants {mkA "imutável" ; mkA "inalterável" ; } ; --*
lin changeless_2_A = mkA "constante" ; --*
lin changeless_3_A = variants {mkA "imutável" ; mkA "invariável" ; } ; --*
lin changeling_1_N = variants {mkN "bobo" ; mkN "boboca" ; mkN "burro" ; mkN "cretino" ; mkN "débil" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "parvo" ; mkN "pateta" ; mkN "retardado" ; } ; --*
lin changeover_N = variants {mkN "mudança" ; mkN "transição" ; } ; --*
lin changing_A = variants {mkA "em" ; mkA "marcado" ; mkA "que" ; } ; --*
lin channel_1_N = variants {mkN "canal" ; mkN "canaleta" ; mkN "channel" ; } ; --*
lin channel_1_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin channel_2_V2 = mkV2 (mkV "canalizar") ; --*
lin channel_3_N = mkN "ranhura" ; --*
lin channel_3_V2 = mkV2 (mkV "transmitir") ; --*
lin channel_4_N = mkN "canal" ; --*
lin channel_5_N = variants {mkN "canal" ; mkN "channel" ; } ; --*
lin channel_6_N = variants {mkN "canal" ; mkN "duct" ; } ; --*
lin channel_7_N = variants {mkN "canal" ; mkN "channel" ; } ; --*
lin channelization_1_N = mkN "sistemas" ; --*
lin chant_1_V2 = variants {mkV2 (mkV "cantar") ; mkV2 (mkV "entoar") ; } ; --*
lin chant_N = mkN "canto" ; --*
lin chaos_1_N = variants {mkN "balbúrdia" ; mkN "caos" ; mkN "confusão" ; mkN "tumulto" ; } ; --*
lin chaos_2_N = mkN "caos" ; --*
lin chaos_3_N = mkN "Caos" ; --*
lin chaotic_1_A = mkA "caótico" ; --*
lin chaotic_2_A = mkA "caótico" ; --*
lin chap_1_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin chap_2_N = variants {mkN "abertura" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin chap_3_N = variants {mkN "fenda" ; mkN "fissura" ; mkN "rachadura" ; } ; --*
lin chap_4_N = variants {mkN "chaparreira" ; mkN "perneiras" ; } ; --*
lin chapatti_1_N = mkN "chapati" ; --*
lin chapel_1_N = variants {mkN "capela" ; mkN "Capelas" ; mkN "ermida" ; mkN "igreja" ; } ; --*
lin chaplain_N = variants {mkN "Capelania" ; mkN "capelão" ; } ; --*
lin chaplet_N = variants {mkN "coroa" ; mkN "grinalda" ; mkN "guirlanda" ; mkN "terço" ; } ; --*
lin chapman_1_N = variants {mkN "Appleseed" ; mkN "Chapman" ; mkN "Johnny" ; } ; --*
lin chapter_1_N = mkN "capítulo" ; --*
lin chapter_2_N = mkN "capítulo" ; --*
lin chapter_4_N = mkN "capítulo" ; --*
lin chapter_5_N = mkN "capítulo" ; --*
lin char_1_V2 = mkV2 (mkV "carbonizar") ; --*
lin char_2_V2 = mkV2 (mkV "abrasar") ; --*
lin charabanc_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin character_1_N = variants {mkN "character" ; mkN "personagem" ; } ; --*
lin character_2_N = mkN "qualidade" ; --*
lin character_3_N = variants {mkN "caráter" ; mkN "personalidade" ; } ; --*
lin character_4_N = variants {mkN "papel" ; mkN "personagem" ; mkN "role" ; } ; --*
lin character_5_N = mkN "figura" ; --*
lin character_6_N = mkN "caráter" ; --*
lin character_8_N = variants {mkN "grafema" ; mkN "letra" ; mkN "symbol" ; } ; --*
lin characteristic_1_A = variants {mkA "característico" ; mkA "caraterístico" ; } ; --*
lin characteristic_1_N = variants {mkN "carácter" ; mkN "característica" ; mkN "qualidade" ; } ; --*
lin characteristic_2_N = variants {mkN "característica" ; mkN "qualidade" ; } ; --*
lin characteristic_3_N = mkN "característica" ; --*
lin characterization_1_N = variants {mkN "caracterização" ; mkN "caraterização" ; mkN "descrição" ; mkN "picture" ; } ; --*
lin characterization_2_N = variants {mkN "caracterização" ; mkN "caraterização" ; } ; --*
lin characterization_3_N = mkN "caracterização" ; --*
lin characterize_1_V2 = variants {mkV2 (mkV "caracterizar") ; mkV2 (mkV "caraterizar") ; mkV2 (mkV "qualificar") ; } ; --*
lin characterize_2_V2 = variants {mkV2 (mkV "caracterizar") ; mkV2 (mkV "caraterizar") ; } ; --*
lin charade_1_N = mkN "charada" ; --*
lin charade_2_N = mkN "mascarada" ; --*
lin charcoal_1_N = variants {mkN "carvão" ; mkN "coal" ; } ; --*
lin charcoal_2_N = mkN "carvão" ; --*
lin charcoal_4_N = mkN "carvão" ; --*
lin charcoal_burner_1_N = mkN "burner" ; --*
lin chard_1_N = variants {mkN "acelga" ; mkN "beet" ; mkN "chard" ; mkN "plant" ; mkN "vulgaris" ; } ; --*
lin chard_1_PN = variants {mkPN "acelga" ; mkPN "beet" ; mkPN "chard" ; mkPN "plant" ; mkPN "vulgaris" ; } ; --*
lin chard_2_N = variants {mkN "acelga" ; mkN "beet" ; mkN "chard" ; } ; --*
lin chard_2_PN = variants {mkPN "acelga" ; mkPN "beet" ; mkPN "chard" ; } ; --*
lin charge_10_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin charge_10_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "enviar") ; mkV2 (mkV "institucionalizar") ; mkV2 (mkV "internar") ; } ; --*
lin charge_11_N = variants {mkN "facturação" ; mkN "faturação" ; } ; --*
lin charge_11_V2 = mkV2 (mkV "consignar") ; --*
lin charge_12_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "debitar") ; mkV2 (mkV "pagar") ; } ; --*
lin charge_13_N = mkN "acusação" ; --*
lin charge_17_V2 = mkV2 (mkV "fazer") ; --*
lin charge_21_V2 = mkV2 (mkV "culpar") ; --*
lin charge_22_V2 = mkV2 (mkV "cobrar") ; --*
lin charge_24_V2 = mkV2 (mkV "carregar") ; --*
lin charge_3_N = variants {mkN "custo" ; mkN "preço" ; mkN "preços" ; } ; --*
lin charge_3_V = mkV "cobrar" ; --*
lin charge_4_N = variants {mkN "Carga" ; mkN "charge" ; } ; --*
lin charge_5_N = variants {mkN "cuidado" ; mkN "tutela" ; } ; --*
lin charge_6_N = mkN "missão" ; --*
lin charge_7_V = mkV "denunciar" ; --*
lin charge_8_N = variants {mkN "imposto" ; mkN "impostos" ; mkN "taxa" ; } ; --*
lin charge_8_V2 = mkV2 (mkV "carregar") ; --*
lin charge_9_N = mkN "catexia" ; --*
lin charge_account_N = mkN "account" ; --*
lin charge_of_N2 = mkN2 (mkN "acusação") noPrep ; --*
lin charger_1_N = variants {mkN "carregador" ; mkN "corcel" ; } ; --*
lin charger_2_N = variants {mkN "Carregador" ; mkN "charger" ; } ; --*
lin charge_up_with_V3 = variants {mkV3 (mkV "agitar") ; mkV3 (mkV "excitar") ; mkV3 (mkV "on") ; mkV3 (mkV "up") ; } ; --*
lin charge_with_18_V3 = mkV3 (mkV "responsabilizar") ; --*
lin charge_with_2_V3 = variants {mkV3 (mkV "acusar") ; mkV3 (mkV "incriminar") ; } ; --*
lin charge_with_5_V3 = mkV3 (mkV "nomear") ; --*
lin chariot_1_N = variants {mkN "carroça" ; mkN "carruagem" ; mkN "charrete" ; } ; --*
lin chariot_2_N = mkN "biga" ; --*
lin charioteer_2_N = mkN "Auriga" ; --*
lin charisma_N = variants {mkN "appeal" ; mkN "carisma" ; mkN "magnetism" ; } ; --*
lin charismatic_A = variants {mkA "carismática" ; mkA "carismático" ; } ; --*
lin charitable_1_A = mkA "caridoso" ; --*
lin charitable_2_A = mkA "caridoso" ; --*
lin charitable_3_A = variants {mkA "benevolente" ; mkA "benévolo" ; mkA "bondoso" ; } ; --*
lin charity_2_N = variants {mkN "caridade" ; mkN "love" ; } ; --*
lin charity_3_N = variants {mkN "caridade" ; mkN "doação" ; } ; --*
lin charity_5_N = mkN "caridade" ; --*
lin charlatanism_N = mkN "charlatanismo" ; --*
lin charlatan_N = variants {mkN "capadócio" ; mkN "charlatão" ; mkN "curandeiro" ; mkN "impostor" ; } ; --*
lin charles_3_PN = variants {mkPN "Carlos" ; mkPN "I" ; mkPN "II" ; mkPN "the" ; } ; --*
lin charles_4_PN = variants {mkPN "Carlos" ; mkPN "II" ; } ; --*
lin charles_5_PN = variants {mkPN "Carlos" ; mkPN "I" ; mkPN "Stuart" ; } ; --*
lin charles_7_PN = variants {mkPN "Alexandre" ; mkPN "Charles" ; mkPN "Jacques" ; } ; --*
lin charles_8_PN = variants {mkPN "Carlos" ; mkPN "I" ; mkPN "the" ; } ; --*
lin charleston_1_N = variants {mkN "Charleston" ; mkN "of" ; } ; --*
lin charleston_2_N = mkN "Charleston" ; --*
lin charleston_3_N = mkN "Charleston" ; --*
lin charlotte_1_N = variants {mkN "Carlota" ; mkN "City" ; } ; --*
lin charlotte_1_PN = variants {mkPN "Carlota" ; mkPN "City" ; } ; --*
lin charm_1_N = mkN "charme" ; --*
lin charm_1_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin charm_2_N = variants {mkN "encantamento" ; mkN "feitiço" ; mkN "spell" ; } ; --*
lin charm_2_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "enfeitiçar") ; } ; --*
lin charm_2_V = variants {mkV "encantar" ; mkV "enfeitiçar" ; } ; --*
lin charm_3_N = variants {mkN "luck" ; mkN "talismã" ; } ; --*
lin charm_3_V2 = mkV2 (mkV "enfeitiçar") ; --*
lin charm_3_V = mkV "enfeitiçar" ; --*
lin charm_4_V2 = variants {mkV2 (mkV "influenciar") ; mkV2 (mkV "seduzir") ; } ; --*
lin charming_1_A = mkA "cativante" ; --*
lin charming_2_A = variants {mkA "mágico" ; mkA "que" ; } ; --*
lin chart_1_N = variants {mkN "carta" ; mkN "gráfico" ; } ; --*
lin chart_1_V2 = mkV2 (mkV "mapear") ; --*
lin chart_2_N = variants {mkN "gráfico" ; mkN "mapa" ; } ; --*
lin chart_3_V2 = mkV2 (mkV "fazer") ; --*
lin charter_1_N = variants {mkN "Foro" ; mkN "fretamento" ; } ; --*
lin charter_1_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin charter_3_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin chartism_N = mkN "cartismo" ; --*
lin chartreuse_1_N = mkN "Chartreuse" ; --*
lin charybdis_PN = variants {mkPN "Caribdis" ; mkPN "Caríbdis" ; } ; --*
lin chase_1_N = variants {mkN "caçada" ; mkN "perseguição" ; } ; --*
lin chase_1_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin chase_2_N = variants {mkN "P." ; mkN "Portland" ; mkN "Salmon" ; } ; --*
lin chase_4_V2 = mkV2 (mkV "sulcar") ; --*
lin chase_4_V = mkV "sulcar" ; --*
lin chasm_N = variants {mkN "abismo" ; mkN "boqueirão" ; mkN "fundão" ; mkN "pélago" ; mkN "precipício" ; mkN "sorvedouro" ; } ; --*
lin chassis_1_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin chassis_2_N = mkN "chassis" ; --*
lin chassis_3_N = variants {mkN "chassi" ; mkN "chassis" ; mkN "Chassis" ; } ; --*
lin chaste_1_A = variants {mkA "casta" ; mkA "casto" ; } ; --*
lin chaste_3_A = mkA "casto" ; --*
lin chasten_1_V2 = mkV2 (mkV "castigar") ; --*
lin chasten_2_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "moderar") ; } ; --*
lin chastisement_1_N = mkN "castigo" ; --*
lin chastisement_2_N = mkN "castigo" ; --*
lin chastise_V2 = mkV2 (mkV "castigar") ; --*
lin chastity_1_N = variants {mkN "abstention" ; mkN "castidade" ; mkN "celibato" ; mkN "pudicícia" ; } ; --*
lin chastity_2_N = variants {mkN "castidade" ; mkN "morality" ; mkN "virtude" ; } ; --*
lin chasuble_N = mkN "casula" ; --*
lin chat_1_N = variants {mkN "bate-papo" ; mkN "conversa" ; } ; --*
lin chateau_N = mkN "castelo" ; --*
lin chatter_3_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin chatter_4_V = mkV "tagarelar" ; --*
lin chatty_1_A = variants {mkA "conversador" ; mkA "loquaz" ; mkA "tagarela" ; } ; --*
lin chat_up_1_V2 = variants {mkV2 (mkV "passar") ; mkV2 (mkV "up") ; } ; --*
lin chat_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin chauffeur_N = variants {mkN "chofer" ; mkN "conductor" ; mkN "condutor" ; mkN "motorista" ; } ; --*
lin chauvinism_1_N = variants {mkN "chauvinismo" ; mkN "Jingoísmo" ; } ; --*
lin chauvinism_2_N = variants {mkN "chauvinism" ; mkN "chauvinismo" ; } ; --*
lin chauvinist_1_N = mkN "chauvinista" ; --*
lin chaw_bacon_N = variants {mkN "caipira" ; mkN "rústico" ; } ; --*
lin chaw_V2 = mkV2 (mkV "mascar") ; --*
lin cheap_1_A = variants {mkA "barata" ; mkA "barato" ; } ; --*
lin cheap_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin cheap_3_A = mkA "brega" ; --*
lin cheapen_V2 = variants {mkV2 (mkV "baratear") ; mkV2 (mkV "barganhar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "desvalorizar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin cheapen_V = variants {mkV "baratear" ; mkV "barganhar" ; mkV "degradar" ; mkV "desvalorizar" ; mkV "rebaixar" ; } ; --*
lin cheapjack_A = mkA "espalhafatoso" ; --*
lin cheapness_1_N = variants {mkN "price" ; mkN "rate" ; mkN "um" ; } ; --*
lin cheapskate_N = mkN "mão-de-vaca" ; --*
lin cheat_1_N = variants {mkN "darnel" ; mkN "joio" ; mkN "temulentum" ; } ; --*
lin cheat_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "off") ; mkV2 (mkV "trapacear") ; } ; --*
lin cheat_2_V2 = variants {mkV2 (mkV "roubar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "trapacear") ; } ; --*
lin cheat_2_V = variants {mkV "roubar" ; mkV "sacanear" ; mkV "trapacear" ; } ; --*
lin cheat_3_N = mkN "trapaceiro" ; --*
lin cheat_3_V2 = variants {mkV2 (mkV "tapear") ; mkV2 (mkV "trapacear") ; } ; --*
lin cheat_3_V = variants {mkV "tapear" ; mkV "trapacear" ; } ; --*
lin cheat_on_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "tapear") ; mkV2 (mkV "trair") ; } ; --*
lin check_10_N = mkN "xadrez" ; --*
lin check_11_N = mkN "freio" ; --*
lin check_13_N = variants {mkN "xeque" ; mkN "Xeque" ; } ; --*
lin check_17_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "conter-se") ; mkV2 (mkV "refrear") ; mkV2 (mkV "refrear-se") ; } ; --*
lin check_17_V = variants {mkV "conter" ; mkV "conter-se" ; mkV "refrear" ; mkV "refrear-se" ; } ; --*
lin check_18_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "resistir") ; } ; --*
lin check_1_N = variants {mkN "check" ; mkN "cheque" ; } ; --*
lin check_1_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "into") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin check_21_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin check_22_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "conferir") ; mkV2 (mkV "verificar") ; } ; --*
lin check_25_V2 = variants {mkV2 (mkV "partir") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "rachar") ; } ; --*
lin check_2_N = mkN "teste" ; --*
lin check_2_V2 = mkV2 (mkV "comprovar") ; --*
lin check_2_V = mkV "comprovar" ; --*
lin check_3_N = variants {mkN "conta" ; mkN "nota" ; } ; --*
lin check_3_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "to") ; mkV2 (mkV "verificar") ; } ; --*
lin check_4_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "limitar") ; mkV2 (mkV "refrear") ; } ; --*
lin check_5_N = variants {mkN "confirmação" ; mkN "crisma" ; mkN "verificação" ; } ; --*
lin check_6_N = variants {mkN "controle" ; mkN "inspeção" ; mkN "limite" ; mkN "procedure" ; } ; --*
lin check_6_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "verificar") ; } ; --*
lin check_7_N = variants {mkN "mark" ; mkN "sinal" ; } ; --*
lin check_7_V2 = mkV2 (mkV "atrasar") ; --*
lin check_8_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin check_9_N = mkN "lasca" ; --*
lin checkbook_N = mkN "talão" ; --*
lin checkerboard_N = variants {mkN "board" ; mkN "tabuleiro" ; } ; --*
lin checkers_N = variants {mkN "damas" ; mkN "jogo" ; } ; --*
lin checklist_N = mkN "lista" ; --*
lin checkmate_1_N = mkN "xeque-mate" ; --*
lin checkmate_2_N = mkN "xeque-mate" ; --*
lin checkmate_V2 = mkV2 (mkV "dar") ; --*
lin check_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "verificar") ; } ; --*
lin checkout_1_N = variants {mkN "controle" ; mkN "inspeção" ; mkN "limite" ; mkN "procedure" ; } ; --*
lin check_out_1_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "into") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin checkpoint_N = mkN "posto" ; --*
lin checksum_N = variants {mkN "checksum" ; mkN "soma" ; mkN "Soma" ; } ; --*
lin check_with_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "concordar") ; mkV2 (mkV "corresponder") ; } ; --*
lin cheddar_2_N = variants {mkN "cheddar" ; mkN "cheese" ; mkN "queijo" ; } ; --*
lin cheek_1_N = mkN "bochecha" ; --*
lin cheek_2_N = variants {mkN "descaramento" ; mkN "impertinência" ; mkN "insolência" ; } ; --*
lin cheek_3_N = variants {mkN "anca" ; mkN "banda" ; mkN "bunda" ; mkN "fundilhos" ; mkN "nádega" ; mkN "nalga" ; mkN "traseiro" ; } ; --*
lin cheek_4_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin cheekbone_N = variants {mkN "bone" ; mkN "zigoma" ; mkN "zigomático" ; mkN "zygomaticum" ; } ; --*
lin cheeky_A = mkA "insolente" ; --*
lin cheep_N = mkN "pio" ; --*
lin cheep_V = variants {mkV "chilrear" ; mkV "cricrilar" ; mkV "gorjear" ; mkV "piar" ; mkV "pipilar" ; mkV "trinar" ; } ; --*
lin cheer_1_N = mkN "aprovação" ; --*
lin cheer_1_V2 = variants {mkV2 (mkV "alentar") ; mkV2 (mkV "empolgar") ; mkV2 (mkV "encorajar") ; mkV2 (mkV "incentivar") ; } ; --*
lin cheer_1_V = variants {mkV "alentar" ; mkV "empolgar" ; mkV "encorajar" ; mkV "incentivar" ; } ; --*
lin cheer_2_V2 = mkV2 (mkV "aclamar") ; --*
lin cheer_4_V2 = variants {mkV2 (mkV "alegrar-se") ; mkV2 (mkV "animar") ; mkV2 (mkV "up") ; } ; --*
lin cheer_4_V = variants {mkV "alegrar-se" ; mkV "animar" ; mkV "up" ; } ; --*
lin cheer_5_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin cheerful_1_A = variants {mkA "animado" ; mkA "animador" ; mkA "contente" ; } ; --*
lin cheerful_2_A = mkA "alegre" ; --*
lin cheerleader_2_N = mkN "líder" ; --*
lin cheerless_A = mkA "triste" ; --*
lin cheer_up_1_V = variants {mkV "along" ; mkV "animar" ; mkV "up" ; } ; --*
lin cheer_up_2_V2 = variants {mkV2 (mkV "alegrar-se") ; mkV2 (mkV "animar") ; mkV2 (mkV "up") ; } ; --*
lin cheer_up_2_V = variants {mkV "alegrar-se" ; mkV "animar" ; mkV "up" ; } ; --*
lin cheery_A = mkA "ensolarado" ; --*
lin cheese_1_N = mkN "queijo" ; --*
lin cheese_2_N = variants {mkN "mallow" ; mkN "queijo" ; mkN "sylvestris" ; } ; --*
lin cheeseburger_N = variants {mkN "cheeseburguer" ; mkN "X" ; } ; --*
lin cheesecake_1_N = variants {mkN "bolo" ; mkN "cheesecake" ; mkN "queijada" ; } ; --*
lin cheetah_1_N = variants {mkN "chita" ; mkN "guepardo" ; mkN "jubatus" ; } ; --*
lin chef_d'oeuvre_N = variants {mkN "obra" ; mkN "obra-prima" ; } ; --*
lin chef_N = variants {mkN "chef" ; mkN "Chef" ; mkN "cozinheira" ; mkN "cozinheiro" ; mkN "Cozinheiros" ; } ; --*
lin chela_2_N = mkN "puã" ; --*
lin chelate_1_A = variants {mkA "quelado" ; mkA "quelatado" ; } ; --*
lin chelate_2_A = mkA "que" ; --*
lin chelation_1_N = mkN "quelação" ; --*
lin chelation_2_N = mkN "quelato" ; --*
lin cheliceral_1_A = mkA "quelíceras" ; --*
lin cheliferous_A = variants {mkA "com" ; mkA "que" ; } ; --*
lin chelyabinsk_PN = mkPN "Cheliabinsk" ; --*
lin chemical_1_A = variants {mkA "química" ; mkA "químico" ; } ; --*
lin chemical_2_A = variants {mkA "química" ; mkA "químico" ; } ; --*
lin chemical_N = variants {mkN "Química" ; mkN "substance" ; mkN "substância" ; mkN "substâncias" ; } ; --*
lin chemiluminescence_N = mkN "Quimioluminescência" ; --*
lin chemisorption_1_N = mkN "adsorpção" ; --*
lin chemistFem_1_N = variants {mkN "boticário" ; mkN "químico" ; } ; --*
lin chemistFem_2_N = variants {mkN "farmacêutico" ; mkN "pusher" ; mkN "roller" ; } ; --*
lin chemistMasc_1_N = variants {mkN "boticário" ; mkN "químico" ; } ; --*
lin chemistMasc_2_N = variants {mkN "farmacêutico" ; mkN "pusher" ; mkN "roller" ; } ; --*
lin chemistry_1_N = variants {mkN "química" ; mkN "science" ; } ; --*
lin chemistry_2_N = mkN "química" ; --*
lin chemistry_3_N = variants {mkN "alquimia" ; mkN "chemistry" ; mkN "química" ; } ; --*
lin chemosynthesis_N = mkN "quimiossíntese" ; --*
lin chemotaxis_N = variants {mkN "quimiotaxia" ; mkN "Quimiotaxia" ; } ; --*
lin chemotherapeutic_1_A = mkA "quimioterapêutico" ; --*
lin chemotherapy_N = mkN "quimioterapia" ; --*
lin chequebook_N = mkN "talão" ; --*
lin cheque_N = variants {mkN "check" ; mkN "cheque" ; } ; --*
lin cherimoya_2_N = variants {mkN "Cherimoia" ; mkN "Cherimóia" ; } ; --*
lin cherish_V2 = variants {mkV2 (mkV "adorar") ; mkV2 (mkV "apreciar") ; mkV2 (mkV "dear") ; mkV2 (mkV "for") ; } ; --*
lin cherry_1_N = mkN "cerejeira" ; --*
lin cherry_2_N = variants {mkN "cerejeira" ; mkN "tree" ; } ; --*
lin cherry_3_N = variants {mkN "cereja" ; mkN "ginja" ; } ; --*
lin cherry_4_N = variants {mkN "cereja" ; mkN "red" ; } ; --*
lin cherry_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin cherub_2_N = mkN "querubim" ; --*
lin cherubic_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin chervil_2_N = mkN "Cerefólio" ; --*
lin chess_2_N = variants {mkN "game" ; mkN "xadrez" ; } ; --*
lin chessboard_N = variants {mkN "board" ; mkN "tabuleiro" ; } ; --*
lin chessman_N = variants {mkN "peça" ; mkN "piece" ; } ; --*
lin chest_1_N = variants {mkN "peito" ; mkN "seio" ; } ; --*
lin chest_2_N = variants {mkN "arca" ; mkN "baú" ; mkN "mala" ; } ; --*
lin chest_3_N = variants {mkN "colo" ; mkN "peito" ; mkN "peitos" ; mkN "tórax" ; } ; --*
lin chest_4_N = variants {mkN "aparelhador" ; mkN "cómoda" ; mkN "cômodas" ; mkN "gaveteiro" ; mkN "of" ; } ; --*
lin chester_PN = mkPN "Chester" ; --*
lin chestnut_3_N = mkN "castanha" ; --*
lin chestnut_4_N = variants {mkN "castanho" ; mkN "marrom" ; } ; --*
lin chestnut_A = variants {mkA "castanho" ; mkA "marrom" ; } ; --*
lin chevron_2_N = mkN "sinal" ; --*
lin chew_2_N = mkN "mastigação" ; --*
lin chewable_A = mkA "mastigável" ; --*
lin chewing_gum_N = variants {mkN "chicla" ; mkN "goma" ; mkN "gum" ; } ; --*
lin chew_out_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin chew_up_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin chew_V2 = variants {mkV2 (mkV "mascar") ; mkV2 (mkV "mastigar") ; } ; --*
lin chi_1_N = variants {mkN "ki" ; mkN "KI" ; mkN "qui" ; } ; --*
lin chi_2_N = mkN "Χ" ; --*
lin chianti_N = mkN "Chianti" ; --*
lin chiaroscuro_N = variants {mkN "chiaroscuro" ; mkN "perspectiva" ; } ; --*
lin chiasma_1_N = mkN "quiasma" ; --*
lin chic_A = variants {mkA "chique" ; mkA "elegante" ; } ; --*
lin chicago_1_PN = variants {mkPN "Chicago" ; mkPN "City" ; } ; --*
lin chicane_3_N = variants {mkN "artimanha" ; mkN "astúcia" ; } ; --*
lin chicanery_N = variants {mkN "artimanha" ; mkN "astúcia" ; } ; --*
lin chichi_2_N = variants {mkN "estilo" ; mkN "garbo" ; mkN "modernidade" ; mkN "word" ; } ; --*
lin chick_1_N = variants {mkN "filhote" ; mkN "franguinha" ; mkN "pintainho" ; mkN "pintinho" ; mkN "pinto" ; } ; --*
lin chick_2_N = variants {mkN "brasa" ; mkN "franguinha" ; mkN "garota" ; mkN "gata" ; mkN "menina" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin chicken_1_N = variants {mkN "frango" ; mkN "galinha" ; } ; --*
lin chicken_2_N = variants {mkN "frango" ; mkN "gallus" ; mkN "galo" ; } ; --*
lin chickenpox_N = variants {mkN "catapora" ; mkN "varicela" ; } ; --*
lin chickpea_1_N = mkN "grão-de-bico" ; --*
lin chickpea_2_N = variants {mkN "arietinum" ; mkN "grão-de-bico" ; mkN "pea" ; mkN "plant" ; } ; --*
lin chickpea_3_N = mkN "grão-de-bico" ; --*
lin chicle_N = variants {mkN "chicle" ; mkN "gum" ; } ; --*
lin chic_N = variants {mkN "estilo" ; mkN "garbo" ; mkN "modernidade" ; mkN "word" ; } ; --*
lin chicory_1_N = variants {mkN "chicória" ; mkN "root" ; } ; --*
lin chide_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin chief_1_N = variants {mkN "cabeça" ; mkN "chefe" ; mkN "dog" ; mkN "responsável" ; } ; --*
lin chief_2_N = variants {mkN "chefe" ; mkN "supervisor" ; } ; --*
lin chief_3_N = variants {mkN "chefe" ; mkN "chief" ; } ; --*
lin chief_A = variants {mkA "principal" ; mkA "proficiente" ; } ; --*
lin chieftainFem_1_N = mkN "cacique" ; --*
lin chieftainFem_2_N = variants {mkN "chefe" ; mkN "chief" ; } ; --*
lin chieftainMasc_1_N = mkN "cacique" ; --*
lin chieftainMasc_2_N = variants {mkN "chefe" ; mkN "chief" ; } ; --*
lin chiffonier_N = mkN "cômoda" ; --*
lin chigoe_N = variants {mkN "Bicho-de-pé" ; mkN "flea" ; mkN "penetrans" ; } ; --*
lin child_1_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin child_2_N = variants {mkN "criança" ; mkN "filha" ; mkN "filho" ; mkN "menino" ; } ; --*
lin child_3_N = variants {mkN "criança" ; mkN "menina" ; mkN "menino" ; } ; --*
lin child_4_N = mkN "filho" ; --*
lin child_bearing_N = variants {mkN "birth" ; mkN "parto" ; } ; --*
lin childbirth_N = variants {mkN "birth" ; mkN "parto" ; } ; --*
lin childcare_1_N = variants {mkN "care" ; mkN "puericultura" ; } ; --*
lin childhood_1_N = mkN "infância" ; --*
lin childhood_2_N = variants {mkN "infância" ; mkN "Infância" ; } ; --*
lin childish_A = variants {mkA "imatura" ; mkA "imaturo" ; mkA "infantil" ; mkA "pueril" ; } ; --*
lin childless_A = mkA "sem" ; --*
lin child's_play_1_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin child's_play_2_N = variants {mkN "jogo" ; mkN "play" ; } ; --*
lin chilean_A = mkA "chileno" ; --*
lin chileanFem_N = mkN "chileno" ; --*
lin chileanMasc_N = mkN "chileno" ; --*
lin chile_PN = variants {mkPN "Chile" ; mkPN "of" ; } ; --*
lin chili_2_N = variants {mkN "Chili" ; mkN "pepper" ; mkN "pimento" ; mkN "piripiri" ; } ; --*
lin chill_1_N = mkN "frio" ; --*
lin chill_1_V2 = variants {mkV2 (mkV "deprimir") ; mkV2 (mkV "desestimular") ; } ; --*
lin chill_2_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin chill_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esfriar") ; mkV2 (mkV "refrigerar") ; mkV2 (mkV "resfriar") ; } ; --*
lin chill_3_N = mkN "arrepio" ; --*
lin chill_3_V = variants {mkV "arrefecer" ; mkV "down" ; mkV "esfriar" ; mkV "esfriar-se" ; mkV "resfriar" ; } ; --*
lin chilliness_1_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin chilliness_2_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin chill_out_V = variants {mkV "acalmar-se" ; mkV "down" ; mkV "it" ; mkV "off" ; mkV "out" ; } ; --*
lin chilly_2_A = mkA "frio" ; --*
lin chilly_3_A = mkA "frio" ; --*
lin chilly_N = variants {mkN "Chili" ; mkN "pepper" ; mkN "pimento" ; mkN "piripiri" ; } ; --*
lin chimaera_2_N = mkN "quimera" ; --*
lin chime_in_V = mkV "in" ; --*
lin chimera_2_N = mkN "quimera" ; --*
lin chimeric_1_A = mkA "quimérico" ; --*
lin chimerical_1_A = mkA "quimérico" ; --*
lin chimerical_2_A = mkA "quimérico" ; --*
lin chimney_1_N = variants {mkN "cano" ; mkN "chaminé" ; mkN "Chaminé" ; mkN "chaminés" ; } ; --*
lin chimneypiece_N = mkN "cornija" ; --*
lin chimpanzee_N = variants {mkN "chimpancé" ; mkN "chimpanzé" ; mkN "Chimpanzé" ; mkN "chimpanzé-comum" ; mkN "jocó" ; mkN "troglodytes" ; } ; --*
lin chimp_N = variants {mkN "chimpancé" ; mkN "chimpanzé" ; mkN "Chimpanzé" ; mkN "chimpanzé-comum" ; mkN "jocó" ; mkN "troglodytes" ; } ; --*
lin chin_1_N = variants {mkN "chinchilla" ; mkN "mento" ; mkN "queixo" ; } ; --*
lin china_1_N = variants {mkN "China" ; mkN "Republic" ; } ; --*
lin china_1_PN = variants {mkPN "China" ; mkPN "Republic" ; } ; --*
lin china_3_N = variants {mkN "China" ; mkN "Formosa" ; mkN "of" ; mkN "Taiwan" ; } ; --*
lin china_3_PN = variants {mkPN "China" ; mkPN "Formosa" ; mkPN "of" ; mkPN "Taiwan" ; } ; --*
lin chinaberry_1_N = variants {mkN "dogwood" ; mkN "Koelreuteria" ; mkN "saponaria" ; mkN "tree" ; } ; --*
lin chinaberry_2_N = variants {mkN "Amargoseira" ; mkN "azedarach" ; mkN "azederach" ; mkN "lilac" ; mkN "tree" ; } ; --*
lin chinchilla_3_N = variants {mkN "chinchila" ; mkN "laniger" ; } ; --*
lin chinese_1_A = variants {mkA "chinês" ; mkA "sino" ; } ; --*
lin chinese_2_A = mkA "taiwanês" ; --*
lin chineseFem_N = variants {mkN "chinês" ; mkN "chinesa" ; } ; --*
lin chineseMasc_N = variants {mkN "chinês" ; mkN "chinesa" ; } ; --*
lin chinese_N = variants {mkN "chinês" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin chink_1_N = mkN "chinês" ; --*
lin chink_2_N = mkN "fresta" ; --*
lin chink_2_V2 = mkV2 (mkV "calafetar") ; --*
lin chink_2_V = mkV "calafetar" ; --*
lin chinless_A = mkA "desqueixado" ; --*
lin chinook_5_N = variants {mkN "Oncorhynchus" ; mkN "salmon" ; mkN "tshawytscha" ; } ; --*
lin chin_wagging_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin chip_1_N = mkN "apara" ; --*
lin chip_1_V = variants {mkV "away" ; mkV "off" ; mkV "quebrar" ; } ; --*
lin chip_5_N = mkN "lasca" ; --*
lin chip_5_V2 = variants {mkV2 (mkV "lascar") ; mkV2 (mkV "off") ; } ; --*
lin chip_6_N = variants {mkN "chip" ; mkN "ficha" ; } ; --*
lin chip_7_N = variants {mkN "chip" ; mkN "microchip" ; } ; --*
lin chipboard_N = mkN "Hardboard" ; --*
lin chip_in_V = variants {mkV "contribuir" ; mkV "dar" ; mkV "in" ; mkV "outorgar" ; } ; --*
lin chipmunk_N = mkN "tâmia" ; --*
lin chipotle_N = mkN "chipotle" ; --*
lin chippendale_N = variants {mkN "Chippendale" ; mkN "Thomas" ; } ; --*
lin chipper_A = variants {mkA "alegre" ; mkA "animado" ; } ; --*
lin chips_N = variants {mkN "batata" ; mkN "batatas" ; mkN "fries" ; mkN "potatoes" ; } ; --*
lin chiropractic_N = mkN "Quiropraxia" ; --*
lin chirp_1_V = variants {mkV "chilrear" ; mkV "cricrilar" ; mkV "gorjear" ; mkV "piar" ; mkV "pipilar" ; mkV "trinar" ; } ; --*
lin chirp_2_V2 = variants {mkV2 (mkV "piar") ; mkV2 (mkV "trinar") ; } ; --*
lin chirp_2_V = variants {mkV "piar" ; mkV "trinar" ; } ; --*
lin chirp_N = variants {mkN "chilro" ; mkN "gorjeio" ; mkN "trinado" ; } ; --*
lin chirrup_V = variants {mkV "chilrear" ; mkV "cricrilar" ; mkV "gorjear" ; mkV "piar" ; mkV "pipilar" ; mkV "trinar" ; } ; --*
lin chisel_1_V2 = variants {mkV2 (mkV "tapear") ; mkV2 (mkV "trapacear") ; } ; --*
lin chisel_2_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "off") ; mkV2 (mkV "trapacear") ; } ; --*
lin chisel_3_V2 = variants {mkV2 (mkV "cinzelar") ; mkV2 (mkV "trabalhar") ; } ; --*
lin chiseller_1_N = mkN "canteiro" ; --*
lin chisel_N = variants {mkN "cinzel" ; mkN "Cinzel" ; mkN "entalhador" ; mkN "formão" ; } ; --*
lin chit_2_N = variants {mkN "conta" ; mkN "nota" ; } ; --*
lin chit_chat_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin chitchat_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin chitin_N = mkN "quitina" ; --*
lin chiton_2_N = variants {mkN "cradle" ; mkN "Polyplacophora" ; mkN "shell" ; } ; --*
lin chivalric_A = mkA "medieval" ; --*
lin chivalry_1_N = mkN "cortesia" ; --*
lin chivalry_2_N = mkN "Cavalaria" ; --*
lin chive_1_N = variants {mkN "cebola-de-todo-o-ano" ; mkN "cebolinho" ; mkN "schoenoprasum" ; } ; --*
lin chives_1_N = variants {mkN "cebola-de-todo-o-ano" ; mkN "cebolinho" ; mkN "schoenoprasum" ; } ; --*
lin chives_2_N = mkN "Allium" ; --*
lin chivvy_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin chlamydia_1_N = mkN "chlamydia" ; --*
lin chlamydia_2_N = mkN "chlamydia" ; --*
lin chlamys_2_N = mkN "clâmide" ; --*
lin chloasma_N = variants {mkN "melasma" ; mkN "of" ; } ; --*
lin chloramine_N = mkN "cloramina" ; --*
lin chloramphenicol_N = mkN "cloranfenicol" ; --*
lin chlorate_N = variants {mkN "clorato" ; mkN "Cloratos" ; } ; --*
lin chlordiazepoxide_N = mkN "Clorodiazepóxido" ; --*
lin chloride_1_N = mkN "cloreto" ; --*
lin chloride_2_N = variants {mkN "cloreto" ; mkN "Cloretos" ; } ; --*
lin chlorination_1_N = mkN "cloragem" ; --*
lin chlorination_2_N = mkN "cloragem" ; --*
lin chlorine_N = variants {mkN "cloro" ; mkN "number" ; } ; --*
lin chlorite_N = mkN "clorito" ; --*
lin chlorobenzene_N = mkN "clorobenzeno" ; --*
lin chlorofluorocarbon_N = variants {mkN "clorofluorcarboneto" ; mkN "Clorofluorcarboneto" ; mkN "clorofluorcarbonetos" ; } ; --*
lin chloroform_N = variants {mkN "clorofórmio" ; mkN "Clorofôrmio" ; } ; --*
lin chlorophyll_1_N = mkN "clorofila" ; --*
lin chloroplast_N = mkN "cloroplasto" ; --*
lin chloroprene_N = mkN "cloropreno" ; --*
lin chloroquine_N = variants {mkN "cloroquina" ; mkN "Cloroquina" ; } ; --*
lin chlorosis_N = mkN "clorose" ; --*
lin chlorpromazine_N = variants {mkN "clorpromazina" ; mkN "Clorpromazina" ; } ; --*
lin choanocyte_N = variants {mkN "cell" ; mkN "Coánocito" ; } ; --*
lin chock_N = mkN "cunha" ; --*
lin chocolate_1_N = variants {mkN "cacau" ; mkN "chocolate" ; } ; --*
lin chocolate_2_N = mkN "chocolate" ; --*
lin chocolate_3_N = variants {mkN "brown" ; mkN "chocolate" ; mkN "umber" ; } ; --*
lin choice_1_A = variants {mkA "fino" ; mkA "primordial" ; mkA "seleto" ; mkA "superior" ; } ; --*
lin choice_1_N = variants {mkN "escolha" ; mkN "selecção" ; } ; --*
lin choice_2_N = variants {mkN "escolha" ; mkN "seleção" ; mkN "selecção" ; } ; --*
lin choice_3_N = variants {mkN "alternativa" ; mkN "eleição" ; mkN "escolha" ; mkN "intercorrência" ; mkN "opção" ; } ; --*
lin choir_1_N = variants {mkN "coro" ; mkN "Coros" ; } ; --*
lin choir_3_N = variants {mkN "coro" ; mkN "Coro" ; } ; --*
lin choirmaster_N = mkN "Cantor" ; --*
lin choke_12_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "bater") ; mkV2 (mkV "dead") ; mkV2 (mkV "falecer") ; mkV2 (mkV "in") ; mkV2 (mkV "it") ; mkV2 (mkV "morrer") ; mkV2 (mkV "off") ; mkV2 (mkV "perecer") ; mkV2 (mkV "the") ; } ; --*
lin choke_12_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin choke_4_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "estrangular") ; } ; --*
lin choke_4_V = variants {mkV "asfixiar" ; mkV "estrangular" ; } ; --*
lin choke_5_V = variants {mkV "afogar" ; mkV "asfixiar" ; mkV "sufocar" ; } ; --*
lin choke_8_V2 = variants {mkV2 (mkV "entupir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin choke_9_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin chokehold_1_N = mkN "controle" ; --*
lin chokehold_2_N = variants {mkN "chave-de-braço" ; mkN "hold" ; } ; --*
lin choke_off_2_V2 = variants {mkV2 (mkV "entupir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin chokepoint_1_N = variants {mkN "constricção" ; mkN "ponto" ; } ; --*
lin choker_1_N = mkN "estrangulador" ; --*
lin choker_3_N = variants {mkN "colar" ; mkN "collar" ; } ; --*
lin choking_1_N = mkN "engasgo" ; --*
lin choking_2_N = mkN "estrangulamento" ; --*
lin cholangitis_N = variants {mkN "colangite" ; mkN "Colangite" ; } ; --*
lin cholecystectomy_N = mkN "colecistectomia" ; --*
lin cholecystitis_N = mkN "colecistite" ; --*
lin cholecystokinin_N = mkN "Colecistocinina" ; --*
lin cholelithiasis_N = mkN "colelitíase" ; --*
lin choler_1_N = mkN "irritabilidade" ; --*
lin choler_2_N = variants {mkN "cólera" ; mkN "ira" ; mkN "raiva" ; mkN "zanga" ; } ; --*
lin cholera_N = variants {mkN "cholera" ; mkN "cólera" ; } ; --*
lin choleric_1_A = mkA "colérico" ; --*
lin choleric_2_A = mkA "colérico" ; --*
lin choleric_3_A = mkA "colérico" ; --*
lin cholesterol_1_N = mkN "colesterol" ; --*
lin choline_N = mkN "Colina" ; --*
lin cholinergic_A = mkA "colinérgico" ; --*
lin chondrite_N = mkN "condrito" ; --*
lin chondrosarcoma_N = variants {mkN "condrossarcoma" ; mkN "Condrossarcoma" ; } ; --*
lin chondrule_N = mkN "côndrulo" ; --*
lin choose_1_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "selecionar") ; } ; --*
lin choose_2_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "optar") ; mkV2 (mkV "preferir") ; } ; --*
lin choose_3_V2 = mkV2 (mkV "escolher") ; --*
lin choose_up_V2 = mkV2 (mkV "up") ; --*
lin choose_up_V = mkV "up" ; --*
lin choosey_A = mkA "exigente" ; --*
lin choosy_A = mkA "exigente" ; --*
lin chop_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "picar") ; mkV2 (mkV "up") ; } ; --*
lin chop_5_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; } ; --*
lin chop_5_V = variants {mkV "cortar" ; mkV "dividir" ; } ; --*
lin chop_chop_Adv = variants {mkAdv "brevemente" ; mkAdv "rapidamente" ; mkAdv "rápidamente" ; mkAdv "rápido" ; mkAdv "vapt" ; } ; --*
lin chop_down_V2 = mkV2 (mkV "down") ; --*
lin chop_house_N = mkN "churrascaria" ; --*
lin chop_off_V = mkV "off" ; --*
lin chopper_3_N = variants {mkN "Helicoptero" ; mkN "helicóptero" ; mkN "Helicópteros" ; } ; --*
lin chopper_4_N = variants {mkN "cleaver" ; mkN "cutelo" ; } ; --*
lin choppy_2_A = mkA "encaracolado" ; --*
lin chopstick_N = variants {mkN "pausinho" ; mkN "pauzinho" ; } ; --*
lin chop_suey_N = mkN "suey" ; --*
lin chop_up_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "picar") ; mkV2 (mkV "up") ; } ; --*
lin choral_A = mkA "coral" ; --*
lin chord_1_N = mkN "corda" ; --*
lin chord_2_N = variants {mkN "acorde" ; mkN "Acordes" ; } ; --*
lin chordate_N = mkN "cordados" ; --*
lin chordophone_N = variants {mkN "instrumento" ; mkN "Instrumentos" ; } ; --*
lin chore_N = variants {mkN "incumbência" ; mkN "serviço" ; } ; --*
lin choreographer_N = mkN "coreógrafo" ; --*
lin choreographic_A = mkA "coreográfico" ; --*
lin choreography_1_N = variants {mkN "coreografia" ; mkN "dancing" ; } ; --*
lin choreography_2_N = mkN "coreografia" ; --*
lin choreography_3_N = mkN "coreografia" ; --*
lin chorionic_A = mkA "coriônico" ; --*
lin chorion_N = mkN "córion" ; --*
lin chorioretinitis_N = variants {mkN "corioretinite" ; mkN "Corioretinite" ; } ; --*
lin chorister_N = mkN "coralista" ; --*
lin chorizo_N = mkN "chouriço" ; --*
lin choroid_N = variants {mkN "coat" ; mkN "Coroide" ; } ; --*
lin chortle_V = variants {mkV "gracejar" ; mkV "softly" ; } ; --*
lin chorus_2_N = mkN "coro" ; --*
lin chorus_3_N = variants {mkN "coro" ; mkN "estribilho" ; mkN "refrão" ; mkN "Refrão" ; } ; --*
lin chorus_5_N = variants {mkN "chorus" ; mkN "coro" ; } ; --*
lin chosen_1_N = variants {mkN "escolhido" ; mkN "preferido" ; } ; --*
lin chosen_3_N = mkN "eleja" ; --*
lin chow_1_N = variants {mkN "Dinastia" ; mkN "dynasty" ; } ; --*
lin chrestomathy_N = mkN "coletânea" ; --*
lin christ_1_N = variants {mkN "Christ" ; mkN "Cristo" ; mkN "Jesus" ; mkN "Nazarene" ; mkN "of" ; mkN "Shepherd" ; } ; --*
lin christ_1_PN = variants {mkPN "Christ" ; mkPN "Cristo" ; mkPN "Jesus" ; mkPN "Nazarene" ; mkPN "of" ; mkPN "Shepherd" ; } ; --*
lin christ_2_N = mkN "messias" ; --*
lin christ_2_PN = mkPN "messias" ; --*
lin christchurch_PN = mkPN "Christchurch" ; --*
lin christendom_N = variants {mkN "cristandade" ; mkN "cristianismo" ; } ; --*
lin christening_N = variants {mkN "baptismo" ; mkN "batismo" ; } ; --*
lin christen_V2 = variants {mkV2 (mkV "baptizar") ; mkV2 (mkV "batizar") ; } ; --*
lin christian_1_A = mkA "cristão" ; --*
lin christian_2_A = mkA "cristão" ; --*
lin christianity_1_N = variants {mkN "cristianismo" ; mkN "religion" ; } ; --*
lin christianity_2_N = variants {mkN "cristandade" ; mkN "cristianismo" ; } ; --*
lin christianly_A = mkA "cristão" ; --*
lin christian_N = variants {mkN "cristã" ; mkN "cristão" ; mkN "Cristão" ; mkN "Cristãos" ; } ; --*
lin christian_PN = variants {mkPN "cristã" ; mkPN "cristão" ; mkPN "Cristão" ; mkPN "Cristãos" ; } ; --*
lin christmas_1_N = variants {mkN "Ciclo" ; mkN "Natal" ; } ; --*
lin christmas_1_PN = variants {mkPN "Ciclo" ; mkPN "Natal" ; } ; --*
lin christmas_2_N = variants {mkN "25" ; mkN "Day" ; mkN "Natal" ; } ; --*
lin christmas_2_PN = variants {mkPN "25" ; mkPN "Day" ; mkPN "Natal" ; } ; --*
lin christmastide_N = variants {mkN "Ciclo" ; mkN "Natal" ; } ; --*
lin christmastime_N = variants {mkN "Ciclo" ; mkN "Natal" ; } ; --*
lin christopher_PN = variants {mkPN "Christopher" ; mkPN "São" ; } ; --*
lin chromatic_2_A = mkA "cromático" ; --*
lin chromatic_3_A = mkA "cromático" ; --*
lin chromatid_N = mkN "Cromatídio" ; --*
lin chromatin_N = variants {mkN "cromatina" ; mkN "granule" ; } ; --*
lin chromatogram_N = mkN "cromatograma" ; --*
lin chromatographic_1_A = mkA "cromatográfico" ; --*
lin chromatography_N = mkN "cromatografia" ; --*
lin chrome_N = mkN "cromo" ; --*
lin chromite_N = mkN "cromita" ; --*
lin chromium_N = variants {mkN "Cromio" ; mkN "crómio" ; mkN "Crómio" ; mkN "cromo" ; mkN "number" ; } ; --*
lin chromolithography_N = mkN "Cromolitografia" ; --*
lin chromophore_N = mkN "cromóforo" ; --*
lin chromoplast_N = mkN "cromoplasto" ; --*
lin chromosomal_A = variants {mkA "cromossomal" ; mkA "cromossómico" ; } ; --*
lin chromosome_N = variants {mkN "cromossoma" ; mkN "Cromossomas" ; mkN "cromossomo" ; } ; --*
lin chromosphere_N = mkN "cromosfera" ; --*
lin chronic_1_A = variants {mkA "crónico" ; mkA "crônico" ; } ; --*
lin chronic_3_A = variants {mkA "crónico" ; mkA "crônico" ; mkA "inveterado" ; } ; --*
lin chronicle_N = variants {mkN "crónica" ; mkN "crônica" ; } ; --*
lin chronicler_N = mkN "cronista" ; --*
lin chronograph_N = variants {mkN "cronógrafo" ; mkN "Cronógrafo" ; } ; --*
lin chronological_A = mkA "cronológico" ; --*
lin chronology_1_N = mkN "cronologia" ; --*
lin chronology_2_N = mkN "cronologia" ; --*
lin chronology_3_N = variants {mkN "cronologia" ; mkN "Cronologia" ; } ; --*
lin chronometer_N = mkN "cronômetro" ; --*
lin chrysalis_N = variants {mkN "crisálida" ; mkN "crisálide" ; } ; --*
lin chrysanthemum_1_N = mkN "crisântemo" ; --*
lin chrysanthemum_2_N = mkN "crisântemo" ; --*
lin chrysoberyl_N = mkN "crisoberilo" ; --*
lin chrysoprase_N = mkN "crisoprase" ; --*
lin chrysotile_N = mkN "crisótilo" ; --*
lin chubby_A = variants {mkA "gorducho" ; mkA "rechonchudo" ; mkA "roliço" ; } ; --*
lin chuck_1_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin chuck_3_V2 = mkV2 (mkV "acariciar") ; --*
lin chuck_4_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin chuckle_V = variants {mkV "gracejar" ; mkV "softly" ; } ; --*
lin chuckle_VS = variants {mkVS (mkV "gracejar") ; mkVS (mkV "softly") ; } ; --*
lin chuck_out_1_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin chuck_out_2_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin chuckwalla_N = variants {mkN "obesus" ; mkN "Sauromalus" ; } ; --*
lin chufa_N = variants {mkN "almond" ; mkN "Cyperus" ; mkN "esculentus" ; mkN "nut" ; mkN "nutgrass" ; } ; --*
lin chum_1_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin chump_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin chungking_PN = mkPN "Chongqing" ; --*
lin chunk_1_N = variants {mkN "bola" ; mkN "grupo" ; mkN "torrão" ; } ; --*
lin chunnel_N = variants {mkN "Eurotúnel" ; mkN "Tunnel" ; } ; --*
lin church_1_N = variants {mkN "church" ; mkN "cristianismo" ; } ; --*
lin church_2_N = variants {mkN "building" ; mkN "igreja" ; mkN "templo" ; } ; --*
lin church_3_N = variants {mkN "service" ; mkN "serviço" ; } ; --*
lin churchman_N = variants {mkN "clérigo" ; mkN "Clérigo" ; mkN "eclesiástico" ; mkN "pastor" ; } ; --*
lin churchyard_N = variants {mkN "acre" ; mkN "cemitério" ; } ; --*
lin churl_1_N = mkN "indivíduo" ; --*
lin churl_2_N = variants {mkN "avarento" ; mkN "pão-duro" ; mkN "sovina" ; } ; --*
lin churl_3_N = mkN "pessoa" ; --*
lin churlish_1_A = mkA "rústico" ; --*
lin churlish_2_A = mkA "rústico" ; --*
lin churn_V2 = mkV2 (mkV "bater") ; --*
lin churn_V = variants {mkV "agitar" ; mkV "bater" ; } ; --*
lin chute_1_N = mkN "paraquedas" ; --*
lin chute_2_N = variants {mkN "Tremonha" ; mkN "trough" ; } ; --*
lin chutney_N = variants {mkN "chutney" ; mkN "relish" ; } ; --*
lin chylomicron_N = mkN "Quilomícrom" ; --*
lin chyme_N = mkN "quimo" ; --*
lin cia_N = variants {mkN "CIA" ; mkN "Intelligence" ; } ; --*
lin cicada_N = mkN "cigarra" ; --*
lin cicala_N = mkN "cigarra" ; --*
lin cicatrice_N = mkN "cicatriz" ; --*
lin cicatrix_N = mkN "cicatriz" ; --*
lin cicero_1_N = mkN "Cícero" ; --*
lin cicero_2_N = variants {mkN "Cicero" ; mkN "Cícero" ; mkN "Tullius" ; } ; --*
lin cicerone_N = mkN "cicerone" ; --*
lin cider_N = variants {mkN "cidra" ; mkN "sidra" ; } ; --*
lin cigarette_1_N = variants {mkN "cigarro" ; mkN "nail" ; } ; --*
lin cigarette_holder_N = mkN "holder" ; --*
lin cigarillo_N = mkN "Cigarrilha" ; --*
lin cigar_N = variants {mkN "charuto" ; mkN "cigarro" ; } ; --*
lin cigar_shaped_A = mkA "fusiforme" ; --*
lin ciliary_1_A = mkA "ciliar" ; --*
lin ciliary_3_A = mkA "ciliar" ; --*
lin ciliate_2_A = mkA "ciliar" ; --*
lin ciliate_N = variants {mkN "Ciliados" ; mkN "Ciliophora" ; mkN "protozoan" ; } ; --*
lin cilium_1_N = variants {mkN "cílio" ; mkN "Cílio" ; } ; --*
lin cilium_2_N = variants {mkN "celha" ; mkN "cílio" ; mkN "pestana" ; } ; --*
lin cimetidine_N = mkN "Cimetidina" ; --*
lin cinch_1_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin cinch_3_V2 = mkV2 (mkV "dominar") ; --*
lin cincinnati_PN = mkPN "Cincinnati" ; --*
lin cinderella_2_N = variants {mkN "Cinderela" ; mkN "GataBorralheira" ; } ; --*
lin cine_camera_N = variants {mkN "camera" ; mkN "câmera" ; } ; --*
lin cinema_1_N = variants {mkN "Chinês" ; mkN "cine" ; mkN "cinema" ; mkN "indústria" ; } ; --*
lin cinema_2_N = variants {mkN "cinema" ; mkN "house" ; mkN "palace" ; mkN "theater" ; mkN "theatre" ; } ; --*
lin cinematic_A = mkA "cinemático" ; --*
lin cinematographer_N = variants {mkN "cameraman" ; mkN "diretor" ; mkN "operator" ; } ; --*
lin cinematography_N = variants {mkN "Cinematografia" ; mkN "fotografia" ; mkN "photography" ; } ; --*
lin cine_projector_N = mkN "projector" ; --*
lin cinnabar_2_N = variants {mkN "cinábrio" ; mkN "jacobeae" ; mkN "moth" ; } ; --*
lin cinnamon_1_N = variants {mkN "bark" ; mkN "canela" ; } ; --*
lin cinnamon_2_N = variants {mkN "canela" ; mkN "cinnamon" ; mkN "zeylanicum" ; } ; --*
lin cinnamon_3_N = mkN "canela" ; --*
lin cipher_1_V2 = variants {mkV2 (mkV "codificar") ; mkV2 (mkV "criptografar") ; mkV2 (mkV "encriptar") ; mkV2 (mkV "in") ; } ; --*
lin cipher_1_V = variants {mkV "codificar" ; mkV "criptografar" ; mkV "encriptar" ; mkV "in" ; } ; --*
lin cipher_2_N = variants {mkN "número" ; mkN "zero" ; } ; --*
lin cipher_2_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "computar") ; mkV2 (mkV "out") ; } ; --*
lin cipher_2_V = variants {mkV "calcular" ; mkV "computar" ; mkV "out" ; } ; --*
lin cipher_3_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin cipher_4_N = mkN "nenhumapessoa" ; --*
lin cipher_5_N = variants {mkN "cifra" ; mkN "code" ; mkN "código" ; } ; --*
lin ciprofloxacin_N = mkN "Ciprofloxacina" ; --*
lin circadian_A = mkA "circadiano" ; --*
lin circle_1_N = mkN "círculo" ; --*
lin circle_1_V2 = mkV2 (mkV "circular") ; --*
lin circle_2_N = variants {mkN "círculo" ; mkN "grupo" ; mkN "ordem" ; } ; --*
lin circle_2_V = mkV "circular" ; --*
lin circle_3_V2 = mkV2 (mkV "circular") ; --*
lin circle_5_N = variants {mkN "circle" ; mkN "rotatória" ; } ; --*
lin circle_8_N = variants {mkN "círculo" ; mkN "Círculos" ; } ; --*
lin circuit_1_N = variants {mkN "circuit" ; mkN "circuito" ; } ; --*
lin circuit_2_N = variants {mkN "caminhada" ; mkN "turnê" ; } ; --*
lin circuit_3_N = mkN "circuito" ; --*
lin circular_1_A = variants {mkA "arredondado" ; mkA "circular" ; mkA "redondo" ; } ; --*
lin circular_2_A = mkA "circular" ; --*
lin circularize_4_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin circular_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin circulate_1_V = variants {mkV "around" ; mkV "circular" ; mkV "espalhar" ; } ; --*
lin circulate_2_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin circulate_3_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "lançar") ; mkV2 (mkV "on") ; } ; --*
lin circulate_4_V = mkV "circular" ; --*
lin circulation_2_N = mkN "circulação" ; --*
lin circulation_5_N = mkN "circulação" ; --*
lin circulatory_2_A = mkA "circulatório" ; --*
lin circumcise_2_V2 = mkV2 (mkV "circuncidar") ; --*
lin circumcision_2_N = mkN "circuncisão" ; --*
lin circumcision_3_N = variants {mkN "Circuncisao" ; mkN "circuncisão" ; mkN "Circuncisão" ; } ; --*
lin circumference_1_N = variants {mkN "circunferência" ; mkN "comprimento" ; mkN "perímetro" ; } ; --*
lin circumference_3_N = mkN "circunferência" ; --*
lin circumferential_A = mkA "circunferencial" ; --*
lin circumflex_N = variants {mkN "acento" ; mkN "circunflexo" ; } ; --*
lin circumlocution_2_N = variants {mkN "circunlóquio" ; mkN "expression" ; mkN "Perifrase" ; } ; --*
lin circumnavigation_N = variants {mkN "circum-navegação" ; mkN "Circumnavegação" ; } ; --*
lin circumscribe_2_V2 = variants {mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin circumspect_A = mkA "discreto" ; --*
lin circumspection_1_N = mkN "prudência" ; --*
lin circumspection_2_N = mkN "prudência" ; --*
lin circumstance_1_N = mkN "circunstância" ; --*
lin circumstance_2_N = variants {mkN "circunstância" ; mkN "contexto" ; } ; --*
lin circumstance_3_N = variants {mkN "circunstância" ; mkN "consideração" ; } ; --*
lin circumstance_5_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin circumstantial_A = mkA "circunstancial" ; --*
lin circumvent_1_V2 = variants {mkV2 (mkV "cercar") ; mkV2 (mkV "in") ; mkV2 (mkV "sitiar") ; } ; --*
lin circumvent_2_V2 = mkV2 (mkV "enganar") ; --*
lin circumvent_3_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin circumvolution_N = mkN "circunvolução" ; --*
lin circus_1_N = mkN "circo" ; --*
lin circus_2_N = variants {mkN "Artes" ; mkN "circo" ; } ; --*
lin circus_4_N = mkN "cruzamento" ; --*
lin circus_5_N = mkN "circo" ; --*
lin cirrhosis_N = variants {mkN "cirrose" ; mkN "of" ; } ; --*
lin cirrocumulus_N = variants {mkN "Cirrocumulus" ; mkN "cloud" ; } ; --*
lin cirrus_1_N = mkN "cirrus" ; --*
lin cirrus_2_N = variants {mkN "cirro" ; mkN "cirrus" ; mkN "cloud" ; } ; --*
lin cirrus_3_N = mkN "cirrus" ; --*
lin cissy_1_A = mkA "efeminado" ; --*
lin cistern_2_N = variants {mkN "cisterna" ; mkN "depósitos" ; mkN "tank" ; } ; --*
lin cistern_3_N = mkN "cisterna" ; --*
lin citadel_N = variants {mkN "baluarte" ; mkN "bastião" ; mkN "cidadela" ; } ; --*
lin citation_3_N = variants {mkN "citação" ; mkN "menção" ; mkN "referência" ; } ; --*
lin citation_4_N = variants {mkN "citação" ; mkN "frase" ; } ; --*
lin citation_5_N = mkN "citação" ; --*
lin cite_1_V2 = variants {mkV2 (mkV "aludir") ; mkV2 (mkV "citar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "up") ; } ; --*
lin cite_3_V2 = mkV2 (mkV "citar") ; --*
lin cite_4_V2 = mkV2 (mkV "citar") ; --*
lin cite_5_V2 = variants {mkV2 (mkV "citar") ; mkV2 (mkV "mencionar") ; } ; --*
lin cite_6_V2 = variants {mkV2 (mkV "aduzir") ; mkV2 (mkV "alegar") ; } ; --*
lin cite_7_V2 = mkV2 (mkV "convocar") ; --*
lin citizenFem_N = variants {mkN "cidadã" ; mkN "cidadão" ; } ; --*
lin citizenMasc_N = variants {mkN "cidadã" ; mkN "cidadão" ; } ; --*
lin citizenry_N = variants {mkN "cidadania" ; mkN "gente" ; mkN "população" ; mkN "povo" ; } ; --*
lin citizenship_1_N = mkN "cidadania" ; --*
lin citizenship_2_N = mkN "cidadania" ; --*
lin citrate_N = variants {mkN "citrato" ; mkN "Citrato" ; } ; --*
lin citron_1_N = mkN "cidra" ; --*
lin citron_2_N = variants {mkN "Cidra" ; mkN "medica" ; mkN "tree" ; } ; --*
lin citrous_2_A = mkA "cítrico" ; --*
lin citrulline_N = mkN "Citrulina" ; --*
lin citrus_1_N = variants {mkN "citrino" ; mkN "fruit" ; } ; --*
lin cittern_1_N = mkN "cítara" ; --*
lin city_1_N = variants {mkN "center" ; mkN "centro" ; mkN "cidade" ; mkN "metrópole" ; mkN "município" ; } ; --*
lin city_2_N = mkN "cidade" ; --*
lin city_3_N = variants {mkN "cidade" ; mkN "metrópole" ; mkN "metrópoles" ; } ; --*
lin civet_cat_1_N = variants {mkN "astutus" ; mkN "bassarisco" ; mkN "cat" ; mkN "fox" ; } ; --*
lin civic_1_A = mkA "civico" ; --*
lin civic_2_A = mkA "civil" ; --*
lin civies_1_N = mkN "roupa" ; --*
lin civil_1_A = variants {mkA "civil" ; mkA "civilizado" ; } ; --*
lin civil_2_A = variants {mkA "cortês" ; mkA "educado" ; mkA "polido" ; } ; --*
lin civil_3_A = mkA "civil" ; --*
lin civil_4_A = mkA "civil" ; --*
lin civil_6_A = mkA "civil" ; --*
lin civilian_A = mkA "civil" ; --*
lin civilian_N = mkN "civil" ; --*
lin civility_1_N = mkN "civilidade" ; --*
lin civility_2_N = mkN "civilidade" ; --*
lin civilization_1_N = mkN "civilização" ; --*
lin civilization_2_N = variants {mkN "civilização" ; mkN "Civilização" ; mkN "Civilizações" ; } ; --*
lin civilization_3_N = variants {mkN "civilização" ; mkN "cultura" ; } ; --*
lin civilize_1_V2 = variants {mkV2 (mkV "civilizar") ; mkV2 (mkV "educar") ; } ; --*
lin civilize_2_V2 = mkV2 (mkV "civilizar") ; --*
lin clack_2_V = mkV "cacarejar" ; --*
lin clack_3_V = mkV "tagarelar" ; --*
lin clade_N = mkN "clado" ; --*
lin cladistics_N = variants {mkN "analysis" ; mkN "Cladística" ; } ; --*
lin cladode_N = mkN "cladódio" ; --*
lin claim_1_VS = variants {mkVS (mkV "clamar") ; mkVS (mkV "declarar") ; } ; --*
lin claim_2_N = mkN "afirmação" ; --*
lin claim_2_VS = variants {mkVS (mkV "claim") ; mkVS (mkV "reclamar") ; } ; --*
lin claim_3_N = variants {mkN "sinistro" ; mkN "Sinistro" ; } ; --*
lin claim_3_V = mkV "reivindicar" ; --*
lin claim_4_N = variants {mkN "reclamo" ; mkN "reivindicação" ; } ; --*
lin claim_4_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "reivindicar") ; } ; --*
lin claim_5_N = mkN "título" ; --*
lin claim_5_VS = mkVS (mkV "custar") ; --*
lin clairvoyance_N = variants {mkN "clarividência" ; mkN "perception" ; mkN "sight" ; } ; --*
lin clairvoyant_2_A = mkA "que" ; --*
lin clam_1_N = variants {mkN "Ameijoa" ; mkN "Amêijoa" ; } ; --*
lin clam_2_N = variants {mkN "bill" ; mkN "dólar" ; mkN "dollar" ; } ; --*
lin clam_3_N = mkN "amêijoa" ; --*
lin clamant_1_A = mkA "clamoroso" ; --*
lin clamant_2_A = variants {mkA "insistente" ; mkA "urgente" ; } ; --*
lin clammy_A = mkA "pegajoso" ; --*
lin clamor_1_N = mkN "ruído" ; --*
lin clamor_2_N = variants {mkN "and" ; mkN "clamor" ; } ; --*
lin clamorous_A = mkA "clamoroso" ; --*
lin clamour_1_V2 = mkV2 (mkV "gritar") ; --*
lin clamour_1_V = mkV "gritar" ; --*
lin clamour_N = variants {mkN "and" ; mkN "clamor" ; } ; --*
lin clamp_down_on_V2 = mkV2 (mkV "down") ; --*
lin clamp_N = mkN "braçadeira" ; --*
lin clamshell_1_N = mkN "concha" ; --*
lin clandestine_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin clanger_N = mkN "gafe" ; --*
lin clan_N = variants {mkN "clã" ; mkN "familia" ; mkN "família" ; mkN "group" ; mkN "tribo" ; } ; --*
lin clannish_2_A = mkA "esnobe" ; --*
lin clannishness_N = mkN "exclusividade" ; --*
lin clap_1_N = variants {mkN "baterpalmas" ; mkN "explosão" ; } ; --*
lin clap_2_N = variants {mkN "blenorréia" ; mkN "gonorreia" ; mkN "gonorréia" ; mkN "Gonorréia" ; } ; --*
lin clap_3_V = variants {mkV "aclamar" ; mkV "aplaudir" ; mkV "bater" ; mkV "ovacionar" ; } ; --*
lin clap_4_V = variants {mkV "aplaudir" ; mkV "bater" ; } ; --*
lin clapper_2_N = mkN "língua" ; --*
lin clapperboard_N = mkN "claquete" ; --*
lin clarence_N = mkN "Clarence" ; --*
lin clarification_1_N = variants {mkN "aclaração" ; mkN "elucidação" ; mkN "esclarecimento" ; } ; --*
lin clarification_2_N = mkN "clarificação" ; --*
lin clarify_1_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "up") ; } ; --*
lin clarify_2_V2 = variants {mkV2 (mkV "clarear") ; mkV2 (mkV "clarificar") ; } ; --*
lin clarinetistFem_1_N = variants {mkN "clarineta" ; mkN "clarinetista" ; } ; --*
lin clarinetistMasc_1_N = variants {mkN "clarineta" ; mkN "clarinetista" ; } ; --*
lin clarinet_N = variants {mkN "clarineta" ; mkN "clarinete" ; } ; --*
lin clarion_N = mkN "clarim" ; --*
lin clarity_1_N = variants {mkN "lucidez" ; mkN "transparência" ; } ; --*
lin clarity_2_N = variants {mkN "clareza" ; mkN "claridade" ; mkN "transparência" ; } ; --*
lin clash_1_V = variants {mkV "chocar-se" ; mkV "entrar" ; mkV "ter" ; } ; --*
lin clash_2_N = variants {mkN "atrito" ; mkN "fricção" ; } ; --*
lin clash_2_V = variants {mkV "colidir" ; mkV "não" ; } ; --*
lin clash_3_V = mkV "dissentir" ; --*
lin clash_4_N = variants {mkN "conflito" ; mkN "disputa" ; } ; --*
lin clasp_1_V2 = mkV2 (mkV "agarrar") ; --*
lin clasp_1_V = mkV "agarrar" ; --*
lin clasp_2_V2 = mkV2 (mkV "acolchetar") ; --*
lin clasp_2_V = mkV "acolchetar" ; --*
lin clasp_3_V2 = mkV2 (mkV "afivelar") ; --*
lin clasp_3_V = mkV "afivelar" ; --*
lin clasp_4_V2 = mkV2 (mkV "agarrar") ; --*
lin class_1_N = variants {mkN "categoria" ; mkN "classe" ; mkN "família" ; mkN "grupo" ; } ; --*
lin class_2_N = variants {mkN "aula" ; mkN "classe" ; mkN "curso" ; } ; --*
lin class_3_N = variants {mkN "class" ; mkN "classe" ; mkN "estrato" ; } ; --*
lin class_4_N = variants {mkN "aula" ; mkN "curso" ; mkN "of" ; } ; --*
lin class_5_N = mkN "classe" ; --*
lin class_6_N = variants {mkN "ano" ; mkN "classe" ; mkN "curso" ; } ; --*
lin class_7_N = variants {mkN "classe" ; mkN "espécies" ; } ; --*
lin class_8_N = mkN "classe" ; --*
lin class_fellow_N = variants {mkN "colega" ; mkN "fellow" ; } ; --*
lin classic_1_A = mkA "clássico" ; --*
lin classic_1_N = mkN "clássico" ; --*
lin classic_2_N = mkN "clássico" ; --*
lin classical_1_A = mkA "clássico" ; --*
lin classical_2_A = mkA "clássico" ; --*
lin classical_3_A = mkA "clássico" ; --*
lin classical_7_A = mkA "clássico" ; --*
lin classicism_1_N = mkN "Classicismo" ; --*
lin classifiable_A = mkA "classificável" ; --*
lin classification_1_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Sistemas" ; mkN "sortimento" ; } ; --*
lin classification_2_N = variants {mkN "categorização" ; mkN "classe" ; mkN "classificação" ; } ; --*
lin classification_3_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Classificação" ; } ; --*
lin classificatory_A = mkA "classificatório" ; --*
lin classified_1_A = mkA "classificado" ; --*
lin classifier_1_N = mkN "classificador" ; --*
lin classify_1_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "out") ; } ; --*
lin classify_2_V2 = mkV2 (mkV "classificar") ; --*
lin classify_3_V2 = mkV2 (mkV "classificar") ; --*
lin classmate_N = variants {mkN "colega" ; mkN "fellow" ; } ; --*
lin classroom_N = variants {mkN "classe" ; mkN "Classe" ; mkN "sala" ; } ; --*
lin class_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "out") ; } ; --*
lin class_warfare_N = variants {mkN "struggle" ; mkN "war" ; mkN "warfare" ; } ; --*
lin classy_A = variants {mkA "chique" ; mkA "classudo" ; } ; --*
lin clause_1_N = variants {mkN "cláusula" ; mkN "oração" ; } ; --*
lin clause_2_N = variants {mkN "artigo" ; mkN "cláusula" ; } ; --*
lin claustrophobe_N = variants {mkN "claustrófoba" ; mkN "claustrófobo" ; } ; --*
lin claustrophobia_N = mkN "claustrofobia" ; --*
lin claustrum_N = mkN "Claustro" ; --*
lin clavichord_N = variants {mkN "clavicórdio" ; mkN "Clavicórdio" ; } ; --*
lin clavicle_N = variants {mkN "Clavicula" ; mkN "clavícula" ; } ; --*
lin claw_1_N = mkN "garra" ; --*
lin claw_3_N = mkN "puã" ; --*
lin claw_3_V2 = mkV2 (mkV "arranhar") ; --*
lin clawfoot_N = variants {mkN "cavus" ; mkN "Pé" ; } ; --*
lin clay_1_N = variants {mkN "argila" ; mkN "greda" ; } ; --*
lin clay_2_N = variants {mkN "lama" ; mkN "Lama" ; } ; --*
lin clay_4_N = variants {mkN "Clay" ; mkN "Great" ; mkN "Henry" ; } ; --*
lin clay_5_N = variants {mkN "cadáver" ; mkN "corpo" ; mkN "defunto" ; mkN "enchido" ; mkN "restos" ; } ; --*
lin clayey_1_A = mkA "argiloso" ; --*
lin claymore_1_N = mkN "claymore" ; --*
lin clean_10_V2 = mkV2 (mkV "descascar") ; --*
lin clean_12_A = variants {mkA "em" ; mkA "refletivo" ; } ; --*
lin clean_1_A = mkA "limpo" ; --*
lin clean_1_V2 = variants {mkV2 (mkV "assear") ; mkV2 (mkV "clean") ; mkV2 (mkV "limpar") ; } ; --*
lin clean_2_V2 = variants {mkV2 (mkV "limpar") ; mkV2 (mkV "tirar") ; } ; --*
lin clean_4_V2 = variants {mkV2 (mkV "lavar") ; mkV2 (mkV "limpar") ; } ; --*
lin clean_7_V2 = variants {mkV2 (mkV "limpar") ; mkV2 (mkV "sacar") ; mkV2 (mkV "tirar") ; } ; --*
lin clean_8_V2 = variants {mkV2 (mkV "lavar") ; mkV2 (mkV "limpar") ; mkV2 (mkV "sacar") ; mkV2 (mkV "tirar") ; } ; --*
lin clean_9_V2 = mkV2 (mkV "limpar") ; --*
lin cleanable_A = mkA "limpável" ; --*
lin cleaner_1_N = variants {mkN "agent" ; mkN "mais" ; } ; --*
lin cleaners_N = variants {mkN "cleaners" ; mkN "lavanderia" ; } ; --*
lin cleaning_1_N = variants {mkN "limpada" ; mkN "limpeza" ; } ; --*
lin cleanliness_2_N = variants {mkN "asseio" ; mkN "limpeza" ; } ; --*
lin cleanly_A = mkA "limpo" ; --*
lin cleanness_1_N = variants {mkN "asseio" ; mkN "limpeza" ; } ; --*
lin cleanness_2_N = mkN "limpeza" ; --*
lin cleanse_1_V2 = variants {mkV2 (mkV "lavar") ; mkV2 (mkV "limpar") ; } ; --*
lin cleanser_N = variants {mkN "agent" ; mkN "mais" ; } ; --*
lin clean_shaven_A = mkA "bem" ; --*
lin clean_up_1_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "away") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin clean_up_3_N = variants {mkN "limpada" ; mkN "limpeza" ; } ; --*
lin clean_up_4_V = mkV "up" ; --*
lin clear_10_A = variants {mkA "bem" ; mkA "claro" ; } ; --*
lin clear_10_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin clear_11_A = mkA "nítido" ; --*
lin clear_12_V2 = variants {mkV2 (mkV "limpar") ; mkV2 (mkV "purificar") ; } ; --*
lin clear_13_V2 = mkV2 (mkV "render") ; --*
lin clear_14_V2 = variants {mkV2 (mkV "lucrar") ; mkV2 (mkV "up") ; } ; --*
lin clear_15_A = mkA "legível" ; --*
lin clear_15_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin clear_18_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "inocentar") ; } ; --*
lin clear_1_V2 = variants {mkV2 (mkV "desobstruir") ; mkV2 (mkV "limpar") ; } ; --*
lin clear_20_V2 = mkV2 (mkV "clarear") ; --*
lin clear_21_V2 = mkV2 (mkV "limpar") ; --*
lin clear_22_V2 = mkV2 (mkV "remover") ; --*
lin clear_23_V2 = variants {mkV2 (mkV "esvaziar") ; mkV2 (mkV "limpar") ; } ; --*
lin clear_24_V2 = variants {mkV2 (mkV "tossir") ; mkV2 (mkV "up") ; } ; --*
lin clear_2_N = mkN "campos" ; --*
lin clear_3_V = variants {mkV "clarear" ; mkV "up" ; } ; --*
lin clear_4_V2 = variants {mkV2 (mkV "autorizar") ; mkV2 (mkV "permitir") ; } ; --*
lin clear_5_A = mkA "definido" ; --*
lin clear_5_V2 = variants {mkV2 (mkV "limpar") ; mkV2 (mkV "retirar") ; } ; --*
lin clear_8_V = variants {mkV "clarear" ; mkV "desaparecer" ; mkV "limpar" ; } ; --*
lin clearance_2_N = mkN "pé-direito" ; --*
lin clear_away_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; } ; --*
lin clear_away_V = variants {mkV "away" ; mkV "off" ; } ; --*
lin clearing_1_N = mkN "clareira" ; --*
lin clearing_3_N = mkN "clarificação" ; --*
lin clearness_1_N = variants {mkN "lucidez" ; mkN "transparência" ; } ; --*
lin clearness_2_N = variants {mkN "clareza" ; mkN "claridade" ; mkN "transparência" ; } ; --*
lin clear_off_V = variants {mkV "away" ; mkV "off" ; } ; --*
lin clear_sighted_1_A = mkA "clarividente" ; --*
lin clear_up_1_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "up") ; } ; --*
lin clear_up_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin clear_up_4_V = variants {mkV "clarear" ; mkV "up" ; } ; --*
lin clear_up_5_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin cleat_2_N = mkN "grampo" ; --*
lin cleats_N = mkN "chuteira" ; --*
lin cleavage_1_N = variants {mkN "decote" ; mkN "decotes" ; } ; --*
lin cleavage_3_N = mkN "segmentação" ; --*
lin cleavage_4_N = variants {mkN "decote" ; mkN "decotes" ; } ; --*
lin cleave_1_V2 = mkV2 (mkV "decepar") ; --*
lin cleave_3_V2 = variants {mkV2 (mkV "aderir") ; mkV2 (mkV "colar") ; } ; --*
lin cleaver_N = variants {mkN "cleaver" ; mkN "cutelo" ; } ; --*
lin cleave_V = variants {mkV "aderir" ; mkV "colar" ; } ; --*
lin clef_N = variants {mkN "clave" ; mkN "Clave" ; } ; --*
lin cleft_2_N = variants {mkN "fenda" ; mkN "fissura" ; mkN "fresta" ; mkN "greta" ; mkN "racha" ; } ; --*
lin clemency_2_N = variants {mkN "clemência" ; mkN "misericórdia" ; mkN "perdão" ; } ; --*
lin clement_1_A = mkA "clemente" ; --*
lin clement_2_A = mkA "clemente" ; --*
lin clench_1_V2 = mkV2 (mkV "agarrar") ; --*
lin clench_2_V2 = mkV2 (mkV "espremer") ; --*
lin clerestory_1_N = mkN "clerestório" ; --*
lin clergyman_N = variants {mkN "clérigo" ; mkN "of" ; mkN "pároco" ; mkN "sacerdote" ; } ; --*
lin clergy_N = mkN "clero" ; --*
lin clerical_1_A = mkA "eclesiástico" ; --*
lin clerical_2_A = mkA "eclesiástico" ; --*
lin cleric_N = variants {mkN "clérigo" ; mkN "Clérigo" ; mkN "eclesiástico" ; mkN "pastor" ; } ; --*
lin clerk_1_N = variants {mkN "balconista" ; mkN "caixeiro" ; } ; --*
lin clerk_2_N = variants {mkN "assistant" ; mkN "clerk" ; mkN "empregado" ; } ; --*
lin cleveland_1_PN = mkPN "Cleveland" ; --*
lin cleveland_2_PN = variants {mkPN "Cleveland" ; mkPN "Grover" ; } ; --*
lin clever_1_A = mkA "esperto" ; --*
lin clever_3_A = variants {mkA "astuto" ; mkA "engenhoso" ; mkA "genial" ; mkA "hábil" ; } ; --*
lin cleverness_1_N = variants {mkN "criatividade" ; mkN "talento" ; } ; --*
lin cleverness_2_N = variants {mkN "inteligência" ; mkN "talento" ; } ; --*
lin clew_2_N = variants {mkN "indício" ; mkN "pista" ; mkN "sugestão" ; } ; --*
lin click_2_N = variants {mkN "clique" ; mkN "stop" ; } ; --*
lin click_2_V = variants {mkV "clicar" ; mkV "estalar" ; } ; --*
lin click_3_N = mkN "prendedor" ; --*
lin click_4_N = variants {mkN "clicar" ; mkN "click" ; } ; --*
lin click_4_V = mkV "estalar" ; --*
lin click_6_V = mkV "cacarejar" ; --*
lin click_7_V = variants {mkV "across" ; mkV "clicar" ; mkV "despontar" ; mkV "entender" ; mkV "home" ; mkV "in" ; mkV "into" ; mkV "through" ; } ; --*
lin client_1_N = mkN "cliente" ; --*
lin client_2_N = variants {mkN "cliente" ; mkN "comprador" ; mkN "consumidor" ; mkN "freguês" ; } ; --*
lin clientele_N = variants {mkN "clientela" ; mkN "freguesia" ; } ; --*
lin cliff_hanger_2_N = mkN "cliffhanger" ; --*
lin cliff_N = variants {mkN "alcantilado" ; mkN "falésia" ; mkN "Falésia" ; mkN "Falésias" ; mkN "penhascos" ; } ; --*
lin climacteric_1_N = mkN "menopausa" ; --*
lin climacteric_2_N = variants {mkN "menopausa" ; mkN "of" ; } ; --*
lin climate_1_N = mkN "clima" ; --*
lin climate_2_N = variants {mkN "clima" ; mkN "Clima" ; mkN "humor" ; } ; --*
lin climatic_1_A = mkA "climático" ; --*
lin climatology_N = variants {mkN "climatologia" ; mkN "Climatologia" ; } ; --*
lin climax_2_N = mkN "climax" ; --*
lin climax_3_N = variants {mkN "climax" ; mkN "orgasmo" ; } ; --*
lin climax_4_N = mkN "clímax" ; --*
lin climax_5_N = mkN "Clímax" ; --*
lin climax_V = mkV "culminar" ; --*
lin climb_1_N = variants {mkN "aclive" ; mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "subida" ; } ; --*
lin climb_1_V = variants {mkV "galgar" ; mkV "montar" ; mkV "up" ; } ; --*
lin climb_2_N = variants {mkN "ascenção" ; mkN "escalada" ; mkN "montanhismo" ; } ; --*
lin climb_3_N = mkN "escalada" ; --*
lin climb_3_V = variants {mkV "crescer" ; mkV "subir" ; } ; --*
lin climb_6_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin climb_down_N = mkN "retirada" ; --*
lin climb_down_V = variants {mkV "descer" ; mkV "down" ; mkV "pousar" ; } ; --*
lin climber_4_N = mkN "alpinista" ; --*
lin clime_N = mkN "clima" ; --*
lin clinch_1_V2 = mkV2 (mkV "rebitar") ; --*
lin clinch_3_V2 = mkV2 (mkV "agarrar") ; --*
lin clinch_4_N = mkN "braçadeira" ; --*
lin clinch_4_V2 = mkV2 (mkV "agarrar") ; --*
lin clinch_4_V = mkV "agarrar" ; --*
lin clinch_5_N = mkN "abraço" ; --*
lin clinch_6_V2 = mkV2 (mkV "fechar") ; --*
lin cling_1_V = variants {mkV "aderir" ; mkV "colar" ; } ; --*
lin cling_2_V = variants {mkV "apegar" ; mkV "grudar" ; } ; --*
lin cling_3_V = mkV "agarrar" ; --*
lin cling_to_V2 = variants {mkV2 (mkV "aferrar") ; mkV2 (mkV "close") ; mkV2 (mkV "tight") ; mkV2 (mkV "to") ; } ; --*
lin clinic_1_N = variants {mkN "clínica" ; mkN "hospital" ; } ; --*
lin clinic_3_N = mkN "hospital" ; --*
lin clinical_1_A = mkA "clínico" ; --*
lin clinical_2_A = mkA "clínico" ; --*
lin clink_2_N = variants {mkN "cadeia" ; mkN "cana" ; mkN "cárcere" ; mkN "casa" ; mkN "grades" ; mkN "grande" ; mkN "penalidade" ; mkN "penálti" ; mkN "pênalti" ; mkN "penalty" ; mkN "presídio" ; mkN "prisão" ; mkN "prisno" ; mkN "xadrez" ; mkN "xilindró" ; } ; --*
lin clinker_2_N = variants {mkN "brick" ; mkN "Clínquer" ; } ; --*
lin clinometer_N = mkN "inclinômetro" ; --*
lin clip_1_N = variants {mkN "cartucho" ; mkN "clip" ; mkN "holder" ; } ; --*
lin clip_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "off") ; } ; --*
lin clip_2_N = mkN "vez" ; --*
lin clip_2_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "trotar") ; } ; --*
lin clip_4_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin clip_5_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "cercear") ; mkV2 (mkV "recortar") ; mkV2 (mkV "short") ; } ; --*
lin clipboard_N = variants {mkN "área" ; mkN "Prancheta" ; } ; --*
lin clipper_2_N = variants {mkN "clipper" ; mkN "ship" ; } ; --*
lin clipping_1_N = variants {mkN "clipping" ; mkN "cutting" ; mkN "recorte" ; } ; --*
lin clique_N = variants {mkN "camarilha" ; mkN "circle" ; } ; --*
lin cliquish_A = mkA "esnobe" ; --*
lin clitoral_1_A = mkA "clitórico" ; --*
lin clitoris_N = variants {mkN "berbigão" ; mkN "clitóris" ; mkN "clítoris" ; mkN "grelo" ; } ; --*
lin cloaca_1_N = mkN "cloaca" ; --*
lin cloaca_2_N = variants {mkN "esgoto" ; mkN "rede" ; } ; --*
lin cloak_1_N = mkN "capa" ; --*
lin cloak_1_V2 = mkV2 (mkV "esconder") ; --*
lin cloak_2_N = variants {mkN "capa" ; mkN "manto" ; } ; --*
lin cloak_2_V2 = variants {mkV2 (mkV "drapear") ; mkV2 (mkV "encapuzar") ; mkV2 (mkV "vestir") ; } ; --*
lin cloakroom_2_N = variants {mkN "guarda-roupa" ; mkN "vestiário" ; } ; --*
lin clobber_2_V2 = mkV2 (mkV "destruir") ; --*
lin clock_N = variants {mkN "pulso" ; mkN "relógio" ; mkN "Relógios" ; } ; --*
lin clocksmith_N = mkN "relojoeiro" ; --*
lin clock_V2 = mkV2 (mkV "cronometrar") ; --*
lin clockwise_Adv = mkAdv "sentido" ; --*
lin clockwork_N = mkN "corda" ; --*
lin clod_1_N = variants {mkN "bola" ; mkN "grupo" ; mkN "torrão" ; } ; --*
lin clod_2_N = mkN "bobo" ; --*
lin clofibrate_N = mkN "clofibrato" ; --*
lin clog_1_N = mkN "tamanco" ; --*
lin clog_1_V2 = variants {mkV2 (mkV "entupir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin clog_3_N = variants {mkN "dance" ; mkN "dancing" ; mkN "tamanco" ; } ; --*
lin clog_3_V2 = mkV2 (mkV "tolher") ; --*
lin clog_4_V2 = mkV2 (mkV "entupir") ; --*
lin clog_5_V = mkV "coagular" ; --*
lin clog_dance_N = variants {mkN "dance" ; mkN "dancing" ; mkN "tamanco" ; } ; --*
lin cloister_1_N = variants {mkN "claustro" ; mkN "residence" ; } ; --*
lin cloister_1_V2 = mkV2 (mkV "enclausurar") ; --*
lin cloister_2_N = mkN "claustro" ; --*
lin clomipramine_N = mkN "clomipramina" ; --*
lin clonal_A = mkA "clonal" ; --*
lin clone_2_N = mkN "clone" ; --*
lin clone_V2 = mkV2 (mkV "clonar") ; --*
lin clonic_A = mkA "clônico" ; --*
lin clonidine_N = mkN "clonidina" ; --*
lin cloning_N = variants {mkN "clonagem" ; mkN "Clonagem" ; } ; --*
lin clonus_N = mkN "Clônus" ; --*
lin close_11_V = variants {mkV "together" ; mkV "unir-se" ; } ; --*
lin close_12_A = mkA "justo" ; --*
lin close_15_A = mkA "reticente" ; --*
lin close_1_Adv = mkAdv "perto" ; --*
lin close_1_A = mkA "próximo" ; --*
lin close_1_N = variants {mkN "acabamento" ; mkN "conclusão" ; mkN "fim" ; mkN "final" ; mkN "point" ; } ; --*
lin close_1_V2 = variants {mkV2 (mkV "cerrar") ; mkV2 (mkV "fechar") ; } ; --*
lin close_2_A = mkA "próximo" ; --*
lin close_2_N = mkN "conclusão" ; --*
lin close_2_V = mkV "fechar" ; --*
lin close_3_A = variants {mkA "perto" ; mkA "próximo" ; mkA "vizinho" ; } ; --*
lin close_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "fechar") ; mkV2 (mkV "up") ; } ; --*
lin close_3_V = variants {mkV "down" ; mkV "fechar" ; mkV "up" ; } ; --*
lin close_4_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "terminar") ; } ; --*
lin close_5_A = mkA "fiel" ; --*
lin close_5_V = variants {mkV "acabar" ; mkV "terminar" ; } ; --*
lin close_6_V2 = mkV2 (mkV "terminar") ; --*
lin close_8_A = mkA "abafado" ; --*
lin close_9_V2 = mkV2 (mkV "fechar") ; --*
lin close_9_V = mkV "fechar" ; --*
lin closed_1_A = mkA "fechado" ; --*
lin closed_3_A = mkA "fechado" ; --*
lin closed_4_A = mkA "fechado" ; --*
lin closed_7_A = mkA "fechado" ; --*
lin closed_8_A = mkA "fechado" ; --*
lin closed_9_A = variants {mkA "fechado" ; mkA "in" ; } ; --*
lin close_down_N = variants {mkN "encerramento" ; mkN "fechamento" ; } ; --*
lin close_down_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "fechar") ; mkV2 (mkV "up") ; } ; --*
lin close_down_V = variants {mkV "down" ; mkV "fechar" ; mkV "up" ; } ; --*
lin close_fitting_A = mkA "justo" ; --*
lin closeness_1_N = variants {mkN "intimidade" ; mkN "proximidade" ; } ; --*
lin closeness_3_N = mkN "proximidade" ; --*
lin closeness_4_N = variants {mkN "parcimónia" ; mkN "Parcimônia" ; } ; --*
lin closeness_6_N = mkN "familiaridade" ; --*
lin close_on_V2 = mkV2 (mkV "terminar") ; --*
lin close_out_1_V2 = variants {mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin closet_1_N = variants {mkN "armário" ; mkN "estante" ; mkN "guarda-roupas" ; } ; --*
lin closet_2_N = variants {mkN "banheiro" ; mkN "closet" ; mkN "retrete" ; mkN "sanita" ; mkN "vaso" ; } ; --*
lin closet_3_N = variants {mkN "armário" ; mkN "estante" ; mkN "guarda-roupas" ; mkN "Guardarroupas" ; } ; --*
lin close_to_AdN = mkAdN "perto" ; --*
lin close_up_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "fechar") ; mkV2 (mkV "up") ; } ; --*
lin close_up_2_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "entupir") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "ocluir") ; mkV2 (mkV "tapar") ; mkV2 (mkV "trancar") ; mkV2 (mkV "up") ; } ; --*
lin closing_2_N = mkN "conclusão" ; --*
lin closing_4_N = variants {mkN "encerramento" ; mkN "fechamento" ; } ; --*
lin closing_5_N = variants {mkN "conclusão" ; mkN "culminação" ; mkN "finalização" ; mkN "up" ; } ; --*
lin closure_4_N = mkN "resolução" ; --*
lin closure_5_N = mkN "obstáculo" ; --*
lin closure_7_N = variants {mkN "encerramento" ; mkN "fechamento" ; } ; --*
lin clot_1_V = variants {mkV "coagular" ; mkV "coalhar" ; } ; --*
lin clot_2_V2 = variants {mkV2 (mkV "coagular") ; mkV2 (mkV "coalhar") ; } ; --*
lin clot_2_V = variants {mkV "coagular" ; mkV "coalhar" ; } ; --*
lin clot_3_V2 = mkV2 (mkV "coalhar") ; --*
lin clot_4_V = mkV "coagular" ; --*
lin clothe_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vestir") ; } ; --*
lin clothe_2_V2 = mkV2 (mkV "investir") ; --*
lin clothe_3_V2 = variants {mkV2 (mkV "drapear") ; mkV2 (mkV "encapuzar") ; mkV2 (mkV "vestir") ; } ; --*
lin clothes_hanger_N = mkN "hanger" ; --*
lin clotheshorse_2_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin clothesline_N = variants {mkN "estendal" ; mkN "varal" ; } ; --*
lin clothes_N = variants {mkN "apparel" ; mkN "roupa" ; mkN "roupas" ; mkN "vestido" ; mkN "vestuário" ; } ; --*
lin clothing_N = variants {mkN "of" ; mkN "roupa" ; mkN "traje" ; mkN "vestido" ; mkN "vestimenta" ; mkN "vestuário" ; } ; --*
lin cloth_N = variants {mkN "fazenda" ; mkN "pano" ; mkN "tecido" ; mkN "têxteis" ; } ; --*
lin clot_N = variants {mkN "Coagulação" ; mkN "coágulo" ; mkN "grumo" ; mkN "trombo" ; } ; --*
lin cloud_1_N = mkN "nuvem" ; --*
lin cloud_1_V2 = mkV2 (mkV "nublar") ; --*
lin cloud_1_V = mkV "nublar" ; --*
lin cloud_2_N = variants {mkN "nuvem" ; mkN "nuvens" ; mkN "Nuvens" ; } ; --*
lin cloud_4_V2 = mkV2 (mkV "deprimir") ; --*
lin cloud_5_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin cloud_6_N = variants {mkN "enxame" ; mkN "turma" ; } ; --*
lin cloudberry_N = variants {mkN "berry" ; mkN "chamaemorus" ; mkN "mulberry" ; mkN "Rubus" ; } ; --*
lin cloudburst_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin cloudiness_1_N = variants {mkN "cover" ; mkN "Nebulosidade" ; } ; --*
lin cloud_over_1_V = variants {mkV "nublar" ; mkV "over" ; mkV "up" ; } ; --*
lin cloudy_2_A = mkA "nublado" ; --*
lin clout_4_N = variants {mkN "murro" ; mkN "ponche" ; mkN "soco" ; } ; --*
lin clove_3_N = variants {mkN "clove" ; mkN "dente" ; } ; --*
lin clove_4_N = mkN "cravo" ; --*
lin clove_hitch_N = mkN "hitch" ; --*
lin cloven_A = mkA "dividido" ; --*
lin clover_N = mkN "trevo" ; --*
lin clown_1_N = mkN "bufão" ; --*
lin clown_2_N = variants {mkN "andrew" ; mkN "palhaço" ; mkN "Palhaços" ; } ; --*
lin clown_around_V = variants {mkV "agaiatar" ; mkV "around" ; } ; --*
lin clown_V = variants {mkV "agaiatar" ; mkV "around" ; } ; --*
lin club_1_V = variants {mkV "juntar" ; mkV "juntar-se" ; } ; --*
lin club_2_N = variants {mkN "club" ; mkN "clube" ; mkN "guilda" ; mkN "ordem" ; mkN "sociedade" ; } ; --*
lin club_2_V = variants {mkV "juntar" ; mkV "juntar-se" ; mkV "unir" ; mkV "unir-se" ; } ; --*
lin club_3_N = variants {mkN "Clava" ; mkN "porrete" ; } ; --*
lin club_3_V2 = mkV2 (mkV "cacetear") ; --*
lin club_3_V = mkV "cacetear" ; --*
lin club_4_N = mkN "clube" ; --*
lin club_5_N = variants {mkN "club" ; mkN "taco" ; } ; --*
lin club_6_N = mkN "paus" ; --*
lin club_7_N = variants {mkN "balada" ; mkN "boate" ; mkN "cabaré" ; mkN "club" ; } ; --*
lin clubbing_N = mkN "hipocratismo" ; --*
lin clubhouse_N = mkN "clube" ; --*
lin clubroom_N = mkN "tertúlia" ; --*
lin cluck_V = mkV "cacarejar" ; --*
lin clue_1_N = variants {mkN "dica" ; mkN "indício" ; } ; --*
lin clue_2_N = variants {mkN "indício" ; mkN "pista" ; mkN "sugestão" ; } ; --*
lin clueless_A = variants {mkA "perdido" ; mkA "sem" ; } ; --*
lin clump_1_N = variants {mkN "aglomerado" ; mkN "punhado" ; } ; --*
lin clump_2_N = variants {mkN "bola" ; mkN "grupo" ; mkN "torrão" ; } ; --*
lin clump_2_V2 = mkV2 (mkV "aglomerar") ; --*
lin clump_2_V = mkV "aglomerar" ; --*
lin clumsy_1_A = variants {mkA "atrapalhado" ; mkA "desajeitado" ; } ; --*
lin clumsy_2_A = mkA "desgracioso" ; --*
lin clumsy_4_A = mkA "incompetente" ; --*
lin clunky_1_A = variants {mkA "atrapalhado" ; mkA "desajeitado" ; } ; --*
lin cluster_1_V2 = mkV2 (mkV "aglomerar") ; --*
lin cluster_1_V = mkV "aglomerar" ; --*
lin cluster_N = variants {mkN "aglomerado" ; mkN "punhado" ; } ; --*
lin clutch_1_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "capturar") ; mkV2 (mkV "pegar") ; mkV2 (mkV "segurar") ; } ; --*
lin clutch_2_V = variants {mkV "aferrar" ; mkV "close" ; mkV "tight" ; mkV "to" ; } ; --*
lin clutch_3_N = mkN "ninhada" ; --*
lin clutch_3_V2 = variants {mkV2 (mkV "acometer") ; mkV2 (mkV "hold") ; mkV2 (mkV "tomar") ; } ; --*
lin clutch_4_N = mkN "grupo" ; --*
lin clutch_6_N = variants {mkN "embraiagem" ; mkN "pedal" ; } ; --*
lin clutch_7_N = variants {mkN "embraiagem" ; mkN "embreagem" ; } ; --*
lin clutter_1_N = variants {mkN "bagunça" ; mkN "nest" ; mkN "ninho" ; mkN "zona" ; } ; --*
lin clutter_V2 = variants {mkV2 (mkV "abarrotar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "up") ; } ; --*
lin cm_1_N = mkN "centímetro" ; --*
lin cm_2_N = variants {mkN "cúrio" ; mkN "number" ; } ; --*
lin co_1_N = variants {mkN "monoxide" ; mkN "monóxido" ; } ; --*
lin co_2_N = variants {mkN "cobalto" ; mkN "number" ; } ; --*
lin co_3_N = variants {mkN "objector" ; mkN "objetor" ; } ; --*
lin co_4_N = variants {mkN "Colorado" ; mkN "State" ; } ; --*
lin coach_1_N = variants {mkN "técnico" ; mkN "treinador" ; mkN "Treinador" ; mkN "Treinadores" ; } ; --*
lin coach_1_V2 = variants {mkV2 (mkV "praticar") ; mkV2 (mkV "treinar") ; } ; --*
lin coach_2_N = variants {mkN "instructor" ; mkN "tutor" ; mkN "tutoria" ; } ; --*
lin coach_3_N = variants {mkN "car" ; mkN "carruagem" ; mkN "vagão" ; } ; --*
lin coach_5_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin coach_builder_N = mkN "carroceiro" ; --*
lin coaching_N = variants {mkN "Coaching" ; mkN "job" ; } ; --*
lin coachman_N = mkN "cocheiro" ; --*
lin coadjutor_N = mkN "coadjutor" ; --*
lin coagulable_A = mkA "coagulável" ; --*
lin coagulase_N = mkN "coagulase" ; --*
lin coagulate_1_V = variants {mkV "coagular" ; mkV "coalhar" ; } ; --*
lin coagulate_2_V2 = variants {mkV2 (mkV "coagular") ; mkV2 (mkV "coalhar") ; } ; --*
lin coagulate_2_V = variants {mkV "coagular" ; mkV "coalhar" ; } ; --*
lin coagulation_N = mkN "coagulação" ; --*
lin coal_1_N = variants {mkN "carvão" ; mkN "hulha" ; } ; --*
lin coal_1_V2 = mkV2 (mkV "carbonizar") ; --*
lin coal_2_N = variants {mkN "carvão" ; mkN "rescaldo" ; } ; --*
lin coalesce_1_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin coalesce_2_V = mkV "coalescer" ; --*
lin coalescence_1_N = mkN "coalescência" ; --*
lin coalescent_A = mkA "coalescente" ; --*
lin coal_gas_N = mkN "gas" ; --*
lin coalition_1_N = variants {mkN "aliança" ; mkN "coalizão" ; mkN "coligação" ; } ; --*
lin coalition_2_N = variants {mkN "coalizão" ; mkN "coligação" ; mkN "fusão" ; } ; --*
lin coalition_3_N = mkN "coalescência" ; --*
lin coalpit_N = variants {mkN "hulheira" ; mkN "mine" ; } ; --*
lin coal_tar_N = mkN "tar" ; --*
lin coarctation_2_N = mkN "coarctação" ; --*
lin coarse_2_A = variants {mkA "agreste" ; mkA "grosseira" ; mkA "grosseiro" ; mkA "ríspido" ; mkA "rude" ; mkA "tosco" ; } ; --*
lin coarse_3_A = mkA "comum" ; --*
lin coarseness_2_N = variants {mkN "granularidade" ; mkN "Granularidade" ; } ; --*
lin coarseness_4_N = variants {mkN "grosseria" ; mkN "obscenidades" ; } ; --*
lin coast_1_N = variants {mkN "beira" ; mkN "beira-mar" ; mkN "costa" ; mkN "litoral" ; mkN "orla" ; } ; --*
lin coast_4_N = mkN "deslizamento" ; --*
lin coastal_2_A = variants {mkA "costeiro" ; mkA "litorâneo" ; } ; --*
lin coaster_2_N = mkN "navio" ; --*
lin coastguard_N = mkN "guarda" ; --*
lin coat_1_N = variants {mkN "casaco" ; mkN "sobretudo" ; } ; --*
lin coat_1_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "revestir") ; } ; --*
lin coat_2_N = mkN "capa" ; --*
lin coat_3_N = variants {mkN "cabelo" ; mkN "pelagem" ; mkN "pelo" ; mkN "pêlo" ; } ; --*
lin coat_3_V2 = mkV2 (mkV "cobrir") ; --*
lin coat_hanger_N = mkN "hanger" ; --*
lin coati_N = variants {mkN "cat" ; mkN "narica" ; mkN "quati" ; } ; --*
lin coating_1_N = mkN "capa" ; --*
lin coating_2_N = mkN "retoque" ; --*
lin coating_4_N = mkN "revestimento" ; --*
lin coax_V = mkV "adular" ; --*
lin cob_1_N = variants {mkN "avelã" ; mkN "Corylus" ; } ; --*
lin cob_2_N = mkN "pônei" ; --*
lin cobalt_N = variants {mkN "cobalto" ; mkN "number" ; } ; --*
lin cobble_N = variants {mkN "calçamento" ; mkN "paralelepípedo" ; } ; --*
lin cobbler_1_N = variants {mkN "sapateira" ; mkN "sapateiro" ; } ; --*
lin cobblestone_N = variants {mkN "calçamento" ; mkN "paralelepípedo" ; } ; --*
lin cobia_N = variants {mkN "canadum" ; mkN "fish" ; mkN "Rachycentridae" ; } ; --*
lin cob_nut_1_N = variants {mkN "avelã" ; mkN "avellana" ; } ; --*
lin cob_nut_2_N = variants {mkN "avelã" ; mkN "Corylus" ; } ; --*
lin cobra_N = mkN "cobra" ; --*
lin cobweb_3_N = variants {mkN "teia" ; mkN "teia-de-aranha" ; } ; --*
lin cobwebby_1_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin coca_1_N = variants {mkN "coca" ; mkN "plant" ; } ; --*
lin coca_3_N = mkN "coca" ; --*
lin cocaine_1_N = variants {mkN "Cocaina" ; mkN "cocaína" ; mkN "neve" ; } ; --*
lin coccidioidomycosis_N = variants {mkN "coccidioidomicose" ; mkN "fever" ; mkN "rheumatism" ; } ; --*
lin coccus_1_N = variants {mkN "bacteria" ; mkN "coco" ; } ; --*
lin coccyx_N = variants {mkN "bone" ; mkN "cóccix" ; } ; --*
lin cochineal_2_N = variants {mkN "coccus" ; mkN "cochonilha" ; mkN "insect" ; } ; --*
lin cochlea_N = variants {mkN "caracol" ; mkN "cóclea" ; mkN "Cóclea" ; } ; --*
lin cochlear_A = mkA "coclear" ; --*
lin cock_1_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin cock_2_N = mkN "torneira" ; --*
lin cock_3_V2 = mkV2 (mkV "desfilar") ; --*
lin cock_4_N = mkN "galo" ; --*
lin cockade_N = mkN "laço" ; --*
lin cock_a_doodle_doo_N = mkN "cocoricó" ; --*
lin cockateel_1_N = variants {mkN "calopsita" ; mkN "caturra" ; mkN "hollandicus" ; mkN "parrot" ; } ; --*
lin cockatoo_N = variants {mkN "cacatua" ; mkN "Cacatua" ; mkN "catatua" ; } ; --*
lin cock_crow_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin cocker_N = variants {mkN "cocker" ; mkN "spaniel" ; } ; --*
lin cockeyed_2_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin cockfight_N = variants {mkN "brigadegalo" ; mkN "rinha" ; mkN "Rinha" ; } ; --*
lin cockle_1_N = mkN "berbigão" ; --*
lin cockle_2_N = mkN "berbigão" ; --*
lin cockney_1_N = mkN "Cockney" ; --*
lin cockpit_1_N = mkN "cabine" ; --*
lin cockroach_N = variants {mkN "barata" ; mkN "baratas" ; mkN "Baratas" ; mkN "blata" ; mkN "carocha" ; } ; --*
lin cockscomb_1_N = variants {mkN "argentea" ; mkN "Celosia" ; mkN "cockscomb" ; mkN "cristata" ; } ; --*
lin cockscomb_4_N = mkN "crista" ; --*
lin cocksucker_2_N = variants {mkN "filha" ; mkN "filho" ; mkN "fucker" ; mkN "of" ; } ; --*
lin cocksure_A = mkA "presunçoso" ; --*
lin cocktail_1_N = variants {mkN "cocktail" ; mkN "coquetel" ; } ; --*
lin cocktail_2_N = variants {mkN "cocktail" ; mkN "Coquetéis" ; mkN "coquetel" ; mkN "Coquetel" ; } ; --*
lin cocoa_1_N = variants {mkN "cacau" ; mkN "chocolate" ; } ; --*
lin cocoa_2_N = mkN "cacau" ; --*
lin coco_N = variants {mkN "coco" ; mkN "coqueiro" ; mkN "nucifera" ; mkN "palm" ; mkN "tree" ; } ; --*
lin coconut_1_N = variants {mkN "côco" ; mkN "meat" ; } ; --*
lin coconut_2_N = variants {mkN "coco" ; mkN "côco" ; } ; --*
lin coconut_3_N = variants {mkN "coco" ; mkN "coqueiro" ; mkN "nucifera" ; mkN "palm" ; mkN "tree" ; } ; --*
lin cocooning_N = mkN "cocooning" ; --*
lin cocoon_N = variants {mkN "casulo" ; mkN "Casulo" ; } ; --*
lin cocotte_1_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin cod_1_N = mkN "vagem" ; --*
lin cod_1_PN = mkPN "vagem" ; --*
lin cod_2_N = variants {mkN "bacalhau" ; mkN "bacalhaus" ; } ; --*
lin cod_2_PN = variants {mkPN "bacalhau" ; mkPN "bacalhaus" ; } ; --*
lin cod_2_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin cod_3_N = mkN "bacalhau" ; --*
lin cod_3_PN = mkPN "bacalhau" ; --*
lin coda_N = mkN "Coda" ; --*
lin coddle_1_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin code_1_N = variants {mkN "Codificação" ; mkN "código" ; mkN "códigos" ; mkN "escrita" ; } ; --*
lin code_2_N = variants {mkN "Codificacao" ; mkN "Codificação" ; mkN "código" ; } ; --*
lin code_2_V2 = variants {mkV2 (mkV "codificar") ; mkV2 (mkV "criptografar") ; mkV2 (mkV "encriptar") ; mkV2 (mkV "in") ; } ; --*
lin code_3_N = variants {mkN "code" ; mkN "código" ; } ; --*
lin codex_2_N = variants {mkN "códice" ; mkN "Códice" ; } ; --*
lin codfish_1_N = variants {mkN "bacalhau" ; mkN "bacalhaus" ; } ; --*
lin codfish_2_N = mkN "bacalhau" ; --*
lin codicil_N = mkN "Codicilo" ; --*
lin codification_1_N = mkN "codificação" ; --*
lin codification_2_N = variants {mkN "Codificação" ; mkN "código" ; mkN "códigos" ; mkN "escrita" ; } ; --*
lin codify_V2 = mkV2 (mkV "codificar") ; --*
lin cod_liver_oil_N = variants {mkN "liver" ; mkN "oil" ; } ; --*
lin codon_N = variants {mkN "codão" ; mkN "códon" ; } ; --*
lin codpiece_N = mkN "braguilha" ; --*
lin coefficient_N = mkN "coeficiente" ; --*
lin coelacanth_N = variants {mkN "chalumnae" ; mkN "Latimeria" ; } ; --*
lin coelenterate_N = mkN "celenterados" ; --*
lin coeliac_A = mkA "celíaco" ; --*
lin coenzyme_N = mkN "coenzima" ; --*
lin coequal_A = mkA "co-igual" ; --*
lin coerce_V2 = variants {mkV2 (mkV "compelir") ; mkV2 (mkV "forçar") ; mkV2 (mkV "obrigar") ; } ; --*
lin coercion_1_N = mkN "coacção" ; --*
lin coercion_2_N = variants {mkN "coacção" ; mkN "coerção" ; } ; --*
lin coetaneous_A = mkA "contemporâneo" ; --*
lin coeval_A = mkA "contemporâneo" ; --*
lin coeval_N = mkN "contemporâneo" ; --*
lin co_exist_1_V = mkV "coexistir" ; --*
lin co_exist_2_V = mkV "coexistir" ; --*
lin coexistence_N = mkN "coexistência" ; --*
lin coexistent_A = mkA "coexistente" ; --*
lin cofactor_N = variants {mkN "cofator" ; mkN "Co-fator" ; } ; --*
lin coffee_1_N = mkN "café" ; --*
lin coffee_2_N = variants {mkN "café" ; mkN "tree" ; } ; --*
lin coffee_3_N = variants {mkN "bean" ; mkN "berry" ; mkN "café" ; } ; --*
lin coffee_4_N = variants {mkN "brown" ; mkN "chocolate" ; mkN "umber" ; } ; --*
lin coffee_house_N = variants {mkN "bar" ; mkN "café" ; mkN "Cafés" ; mkN "lanchonete" ; mkN "shop" ; } ; --*
lin coffer_1_N = mkN "caixotão" ; --*
lin coffin_N = variants {mkN "ataúde" ; mkN "caixa" ; mkN "caixão" ; mkN "esquife" ; mkN "féretro" ; } ; --*
lin cofounder_N = variants {mkN "co-fundador" ; mkN "incorporador" ; } ; --*
lin cogency_2_N = variants {mkN "rigor" ; mkN "validade" ; } ; --*
lin cogent_A = mkA "coerente" ; --*
lin cogitable_A = variants {mkA "cogitável" ; mkA "ponderavel" ; } ; --*
lin cogitate_1_V2 = mkV2 (mkV "cogitar") ; --*
lin cogitate_1_V = mkV "cogitar" ; --*
lin cogitate_2_V = variants {mkV "pensar" ; mkV "raciocínar" ; mkV "refletir" ; } ; --*
lin cogitation_1_N = mkN "cogitação" ; --*
lin cognac_N = variants {mkN "Cognac" ; mkN "conhaque" ; } ; --*
lin cognate_1_A = mkA "afim" ; --*
lin cognate_2_A = mkA "cognato" ; --*
lin cognate_2_N = variants {mkN "cognato" ; mkN "word" ; } ; --*
lin cognate_3_A = variants {mkA "cossangüineo" ; mkA "semelhante" ; } ; --*
lin cognition_N = variants {mkN "cognição" ; mkN "compreensão" ; mkN "conhecimento" ; mkN "noção" ; } ; --*
lin cognitive_A = mkA "cognitivo" ; --*
lin cognizance_1_N = variants {mkN "conhecimento" ; mkN "consciência" ; mkN "saber" ; mkN "sentimento" ; } ; --*
lin cognizant_of_A2 = variants {mkA2 (mkA "ciente") noPrep ; mkA2 (mkA "informado") noPrep ; } ; --*
lin cognomen_1_N = variants {mkN "alcunha" ; mkN "apelido" ; mkN "cognome" ; mkN "sobrenome" ; } ; --*
lin cognomen_2_N = variants {mkN "cognome" ; mkN "name" ; mkN "sobrenome" ; } ; --*
lin cogwheel_N = variants {mkN "engrenagem" ; mkN "wheel" ; } ; --*
lin cohabit_1_V = variants {mkV "coabitar" ; mkV "together" ; mkV "up" ; } ; --*
lin cohabit_2_V = mkV "coexistir" ; --*
lin cohabitation_N = variants {mkN "coabitação" ; mkN "contubérnio" ; } ; --*
lin cohere_1_V = variants {mkV "aderir" ; mkV "colar" ; } ; --*
lin coherence_1_N = variants {mkN "coerência" ; mkN "coesão" ; mkN "ligação" ; } ; --*
lin coherence_2_N = mkN "coerência" ; --*
lin coherency_1_N = variants {mkN "coerência" ; mkN "coesão" ; mkN "ligação" ; } ; --*
lin coherency_2_N = mkN "coerência" ; --*
lin coherent_1_A = variants {mkA "coerente" ; mkA "consequente" ; mkA "conseqüente" ; mkA "lógico" ; } ; --*
lin coherent_2_A = variants {mkA "coerente" ; mkA "lógico" ; } ; --*
lin coherent_4_A = variants {mkA "coerente" ; mkA "tenaz" ; } ; --*
lin cohesion_1_N = variants {mkN "coerência" ; mkN "coesão" ; mkN "ligação" ; } ; --*
lin cohesive_1_A = variants {mkA "coesivo" ; mkA "coeso" ; } ; --*
lin cohesiveness_1_N = variants {mkN "coerência" ; mkN "coesão" ; mkN "ligação" ; } ; --*
lin cohort_1_N = mkN "coorte" ; --*
lin cohort_2_N = mkN "coorte" ; --*
lin cohort_3_N = variants {mkN "bracket" ; mkN "coorte" ; mkN "group" ; } ; --*
lin coif_1_N = variants {mkN "corte" ; mkN "penteado" ; mkN "style" ; } ; --*
lin coiffeur_N = mkN "cabeleireiro" ; --*
lin coiffeuse_N = mkN "cabeleireiro" ; --*
lin coiffure_N = variants {mkN "corte" ; mkN "penteado" ; mkN "style" ; } ; --*
lin coil_1_N = variants {mkN "bobine" ; mkN "espiral" ; mkN "hélice" ; mkN "rosca" ; } ; --*
lin coil_3_V2 = variants {mkV2 (mkV "embobinar") ; mkV2 (mkV "enrolar") ; } ; --*
lin coil_3_V = variants {mkV "embobinar" ; mkV "enrolar" ; } ; --*
lin coin_1_V2 = mkV2 (mkV "cunhar") ; --*
lin coin_2_V2 = mkV2 (mkV "cunhar") ; --*
lin coinage_1_N = variants {mkN "moeda" ; mkN "money" ; } ; --*
lin coinage_2_N = mkN "neologismo" ; --*
lin coinage_3_N = mkN "neologismo" ; --*
lin coincide_1_V = mkV "coincidir" ; --*
lin coincide_2_V = mkV "coincidir" ; --*
lin coincide_3_V = mkV "combinar" ; --*
lin coincidence_1_N = mkN "coincidência" ; --*
lin coincidence_2_N = mkN "coincidência" ; --*
lin coincidence_3_N = variants {mkN "coincidência" ; mkN "conjunção" ; } ; --*
lin coincident_1_A = variants {mkA "coincidente" ; mkA "concorrente" ; mkA "simultânea" ; mkA "simultâneo" ; } ; --*
lin coincident_2_A = mkA "coincidente" ; --*
lin coincidental_A = variants {mkA "coincidente" ; mkA "concorrente" ; mkA "simultânea" ; mkA "simultâneo" ; } ; --*
lin coin_N = variants {mkN "divisa" ; mkN "moeda" ; mkN "peça" ; mkN "prata" ; } ; --*
lin coition_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; } ; --*
lin coitus_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; } ; --*
lin coke_1_N = mkN "coque" ; --*
lin coke_2_N = variants {mkN "Coca-cola" ; mkN "Cola" ; } ; --*
lin cola_2_N = variants {mkN "coca" ; mkN "cola" ; } ; --*
lin colander_N = variants {mkN "coador" ; mkN "passador" ; } ; --*
lin colchicine_N = mkN "colchicina" ; --*
lin cold_1_A = mkA "frio" ; --*
lin cold_1_N = variants {mkN "cold" ; mkN "gripa" ; mkN "gripe" ; mkN "resfriado" ; } ; --*
lin cold_2_A = mkA "frio" ; --*
lin cold_2_N = variants {mkN "frio" ; mkN "temperature" ; } ; --*
lin cold_3_N = variants {mkN "frieza" ; mkN "frio" ; } ; --*
lin cold_9_A = variants {mkA "A" ; mkA "desumano" ; mkA "inumano" ; } ; --*
lin cold_blooded_1_A = variants {mkA "A" ; mkA "desumano" ; mkA "inumano" ; } ; --*
lin coldness_1_N = variants {mkN "frieza" ; mkN "frio" ; } ; --*
lin coldness_2_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin coldness_3_N = variants {mkN "frio" ; mkN "temperature" ; } ; --*
lin cold_shoulder_V2 = mkV2 (mkV "esnobar") ; --*
lin coleus_N = variants {mkN "nettle" ; mkN "Solenostemon" ; } ; --*
lin colic_N = variants {mkN "colic" ; mkN "cólica" ; } ; --*
lin colitis_N = variants {mkN "bowel" ; mkN "colite" ; } ; --*
lin collaborate_1_V = variants {mkV "colaborar" ; mkV "cooperar" ; mkV "forces" ; mkV "together" ; } ; --*
lin collaboration_1_N = variants {mkN "coação" ; mkN "colaboração" ; mkN "cooperação" ; } ; --*
lin collaboration_2_N = mkN "colaboração" ; --*
lin collaborator_3_N = variants {mkN "colaborador" ; mkN "colega" ; mkN "parceiro" ; } ; --*
lin collage_1_N = mkN "colagem" ; --*
lin collage_2_N = mkN "colagem" ; --*
lin collagenase_N = mkN "colagenase" ; --*
lin collagen_N = mkN "colágeno" ; --*
lin collapse_1_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin collapse_2_N = variants {mkN "colapso" ; mkN "desabamento" ; mkN "desmoronamento" ; } ; --*
lin collapse_4_N = mkN "colapso" ; --*
lin collapse_4_V = variants {mkV "amarfanhar" ; mkV "desmoronar" ; mkV "down" ; mkV "esboroar" ; mkV "esfarelar" ; } ; --*
lin collapse_5_V2 = mkV2 (mkV "colapsar") ; --*
lin collapse_5_V = mkV "colapsar" ; --*
lin collapse_6_V2 = variants {mkV2 (mkV "pirar") ; mkV2 (mkV "up") ; } ; --*
lin collapse_6_V = variants {mkV "pirar" ; mkV "up" ; } ; --*
lin collar_1_N = variants {mkN "colarinho" ; mkN "gola" ; } ; --*
lin collar_1_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin collar_3_N = mkN "Gola" ; --*
lin collar_6_N = mkN "coleira" ; --*
lin collar_7_N = variants {mkN "colar" ; mkN "collar" ; } ; --*
lin collar_9_N = variants {mkN "arresto" ; mkN "into" ; } ; --*
lin collarbone_N = variants {mkN "Clavicula" ; mkN "clavícula" ; } ; --*
lin collards_N = variants {mkN "Couve-galega" ; mkN "greens" ; } ; --*
lin collate_1_V2 = mkV2 (mkV "comparar") ; --*
lin collateral_2_A = mkA "colateral" ; --*
lin collateral_3_A = mkA "colateral" ; --*
lin collateral_5_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin collation_1_N = variants {mkN "lanche" ; mkN "merenda" ; } ; --*
lin collation_2_N = mkN "Ordem" ; --*
lin colleague_1_N = variants {mkN "colega" ; mkN "worker" ; } ; --*
lin colleague_2_N = variants {mkN "colega" ; mkN "fellow" ; mkN "Fellow" ; } ; --*
lin collect_1_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin collect_2_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "coletar") ; mkV2 (mkV "in") ; mkV2 (mkV "recolher") ; } ; --*
lin collect_3_V2 = variants {mkV2 (mkV "coletar") ; mkV2 (mkV "coligir") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; } ; --*
lin collect_3_V = variants {mkV "coletar" ; mkV "coligir" ; mkV "juntar" ; mkV "reunir" ; mkV "together" ; } ; --*
lin collect_4_V2 = variants {mkV2 (mkV "colecionar") ; mkV2 (mkV "coletar") ; mkV2 (mkV "in") ; mkV2 (mkV "recolher") ; } ; --*
lin collect_4_V = variants {mkV "colecionar" ; mkV "coletar" ; mkV "in" ; mkV "recolher" ; } ; --*
lin collect_5_V2 = variants {mkV2 (mkV "coletar") ; mkV2 (mkV "for") ; mkV2 (mkV "up") ; } ; --*
lin collectible_1_A = variants {mkA "coletável" ; mkA "pagável" ; } ; --*
lin collectible_1_N = mkN "Coleção" ; --*
lin collection_1_N = variants {mkN "acúmulo" ; mkN "aglomeração" ; mkN "chusma" ; mkN "coleção" ; mkN "colecção" ; mkN "grupo" ; mkN "montão" ; mkN "ruma" ; } ; --*
lin collection_3_N = variants {mkN "apelo" ; mkN "coleção" ; mkN "solicitação" ; } ; --*
lin collection_4_N = variants {mkN "agregaçao" ; mkN "reunião" ; } ; --*
lin collective_1_A = variants {mkA "coletivo" ; mkA "corporativo" ; } ; --*
lin collective_2_A = variants {mkA "colectivo" ; mkA "coletivo" ; } ; --*
lin collective_3_A = variants {mkA "colectivo" ; mkA "coletivo" ; } ; --*
lin collectivism_1_N = mkN "coletivismo" ; --*
lin collectivism_2_N = mkN "coletivismo" ; --*
lin collectivist_A = variants {mkA "colectivizada" ; mkA "coletivista" ; } ; --*
lin collectivist_N = mkN "esquerdista" ; --*
lin collect_N = mkN "coleta" ; --*
lin collector_1_N = variants {mkN "agregador" ; mkN "coletor" ; } ; --*
lin collector_2_N = variants {mkN "coletor" ; mkN "recolhedor" ; } ; --*
lin college_1_N = variants {mkN "escola" ; mkN "faculdade" ; mkN "IES" ; mkN "instituição" ; mkN "instituto" ; mkN "universidade" ; } ; --*
lin college_2_N = variants {mkN "escola" ; mkN "Faculdade" ; mkN "instituto" ; mkN "universidade" ; } ; --*
lin collegial_2_A = variants {mkA "acadêmica" ; mkA "acadêmico" ; mkA "colegiado" ; mkA "universitária" ; mkA "universitário" ; } ; --*
lin collegiate_A = variants {mkA "acadêmica" ; mkA "acadêmico" ; mkA "colegiado" ; mkA "universitária" ; mkA "universitário" ; } ; --*
lin collide_1_V = variants {mkV "colidir" ; mkV "não" ; } ; --*
lin collide_2_V = mkV "colidir" ; --*
lin collide_3_V = variants {mkV "chocar-se" ; mkV "entrar" ; mkV "ter" ; } ; --*
lin colliery_N = mkN "mina" ; --*
lin colligation_1_N = variants {mkN "conjunção" ; mkN "ligação" ; } ; --*
lin collimator_2_N = mkN "colimador" ; --*
lin collins_1_N = variants {mkN "Collins" ; mkN "Wilkie" ; } ; --*
lin collision_1_N = mkN "colisão" ; --*
lin collision_2_N = variants {mkN "colisão" ; mkN "colisión" ; } ; --*
lin collocate_2_V = mkV "colocar" ; --*
lin collocation_1_N = mkN "colocação" ; --*
lin colloidal_A = mkA "coloidal" ; --*
lin colloid_N = variants {mkN "coloide" ; mkN "Colóide" ; } ; --*
lin colloquial_A = variants {mkA "coloquial" ; mkA "familiar" ; } ; --*
lin colloquium_2_N = mkN "colóquio" ; --*
lin collusion_2_N = mkN "conspiração" ; --*
lin collusive_A = mkA "conivente" ; --*
lin cologne_1_N = variants {mkN "Colónia" ; mkN "Colônia" ; } ; --*
lin cologne_1_PN = variants {mkPN "Colónia" ; mkPN "Colônia" ; } ; --*
lin cologne_2_N = variants {mkN "água" ; mkN "de" ; mkN "water" ; } ; --*
lin cologne_2_PN = variants {mkPN "água" ; mkPN "de" ; mkPN "water" ; } ; --*
lin colombian_A = mkA "colombiano" ; --*
lin colombian_N = mkN "colombiano" ; --*
lin colombia_PN = variants {mkPN "Colombia" ; mkPN "Colómbia" ; mkPN "of" ; } ; --*
lin colombo_PN = variants {mkPN "Colombo" ; mkPN "of" ; } ; --*
lin colon_1_N = mkN "cólon" ; --*
lin colon_3_N = variants {mkN "Colón" ; mkN "Rican" ; } ; --*
lin colon_5_N = mkN "dois" ; --*
lin colonel_N = mkN "coronel" ; --*
lin colonial_1_A = mkA "colonial" ; --*
lin colonial_2_A = mkA "colonial" ; --*
lin colonial_3_A = mkA "colonial" ; --*
lin colonialism_N = mkN "colonialismo" ; --*
lin colonic_A = mkA "colônico" ; --*
lin colonist_N = variants {mkN "colona" ; mkN "colonato" ; mkN "colono" ; } ; --*
lin colonization_1_N = mkN "colonização" ; --*
lin colonize_1_V2 = mkV2 (mkV "colonizar") ; --*
lin colonize_2_V2 = mkV2 (mkV "colonizar") ; --*
lin colonizer_1_N = mkN "colonizador" ; --*
lin colonnade_1_N = mkN "colunata" ; --*
lin colonnade_2_N = mkN "Arcada" ; --*
lin colonoscopy_N = variants {mkN "colonoscopia" ; mkN "Colonoscopia" ; } ; --*
lin colony_1_N = variants {mkN "assentamento" ; mkN "colônia" ; } ; --*
lin colony_5_N = variants {mkN "colónia" ; mkN "colônia" ; mkN "Colônia" ; } ; --*
lin colophon_N = variants {mkN "Colofon" ; mkN "cólofon" ; } ; --*
lin colorado_1_PN = variants {mkPN "Colorado" ; mkPN "State" ; } ; --*
lin colorado_2_PN = variants {mkPN "Colorado" ; mkPN "River" ; } ; --*
lin colorado_3_PN = variants {mkPN "Colorado" ; mkPN "River" ; } ; --*
lin coloration_1_N = mkN "timbre" ; --*
lin coloratura_1_N = mkN "soprano" ; --*
lin colorimeter_N = mkN "colorímetro" ; --*
lin colorimetric_1_A = mkA "colorimétrico" ; --*
lin colorimetry_N = variants {mkN "analysis" ; mkN "colorimetria" ; } ; --*
lin colossal_A = mkA "colossal" ; --*
lin colossus_1_N = variants {mkN "gigante" ; mkN "monstro" ; } ; --*
lin colossus_2_N = variants {mkN "gigante" ; mkN "monstro" ; mkN "titã" ; } ; --*
lin colostomy_N = mkN "colostomia" ; --*
lin colostrum_N = mkN "colostro" ; --*
lin colour_1_A = mkA "colorido(a)" ; --*
lin colour_1_N = variants {mkN "colorante" ; mkN "cor" ; mkN "material" ; mkN "tintas" ; } ; --*
lin colour_1_V2 = variants {mkV2 (mkV "colorir") ; mkV2 (mkV "matizar") ; } ; --*
lin colour_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "colorir") ; } ; --*
lin colour_3_N = mkN "cor" ; --*
lin colour_4_N = mkN "timbre" ; --*
lin colour_4_V2 = mkV2 (mkV "colorir") ; --*
lin colour_5_N = variants {mkN "cor" ; mkN "tez" ; } ; --*
lin colour_5_V2 = variants {mkV2 (mkV "colorir") ; mkV2 (mkV "colorizar") ; mkV2 (mkV "in") ; } ; --*
lin colour_6_N = mkN "aparência" ; --*
lin colour_6_V2A = variants {mkV2A (mkV "colorir") ; mkV2A (mkV "descolorir") ; } ; --*
lin colour_6_V2 = variants {mkV2 (mkV "colorir") ; mkV2 (mkV "descolorir") ; } ; --*
lin colour_6_V = variants {mkV "colorir" ; mkV "descolorir" ; } ; --*
lin colour_7_N = mkN "cor" ; --*
lin colour_blind_1_A = mkA "daltônico" ; --*
lin colour_blind_2_A = mkA "cor-cego" ; --*
lin coloured_1_A = mkA "colorido" ; --*
lin coloured_2_A = variants {mkA "parcial" ; mkA "tendencioso" ; } ; --*
lin colourful_1_A = mkA "colorido" ; --*
lin colourful_2_A = mkA "colorido" ; --*
lin colourful_3_A = mkA "colorido" ; --*
lin colouring_1_N = variants {mkN "color" ; mkN "coloring" ; mkN "colour" ; mkN "colouring" ; mkN "corante" ; mkN "tez" ; } ; --*
lin colouring_2_N = variants {mkN "cor" ; mkN "tez" ; } ; --*
lin colouring_3_N = mkN "tez" ; --*
lin colourless_1_A = variants {mkA "incolor" ; mkA "sem" ; } ; --*
lin colt_1_N = mkN "Potro" ; --*
lin coltish_A = mkA "traquinas" ; --*
lin coltsfoot_2_N = variants {mkN "farfara" ; mkN "tussilagem" ; mkN "unha-de-cavalo" ; } ; --*
lin columbarium_1_N = variants {mkN "pombal" ; mkN "Pombal" ; } ; --*
lin columbia_1_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin columbia_4_PN = mkPN "Columbia" ; --*
lin columbia_5_PN = variants {mkPN "Universidade" ; mkPN "University" ; } ; --*
lin columbine_N = variants {mkN "aquilégia" ; mkN "aqüilegio" ; } ; --*
lin columbus_1_PN = variants {mkPN "Columbus" ; mkPN "of" ; } ; --*
lin columbus_2_PN = variants {mkPN "Colombo" ; mkPN "Colon" ; mkPN "Columbus" ; mkPN "Cristovão" ; } ; --*
lin columbus_3_PN = mkPN "Columbo" ; --*
lin column_1_N = mkN "coluna" ; --*
lin column_3_N = variants {mkN "bicha" ; mkN "coluna" ; } ; --*
lin column_4_N = mkN "coluna" ; --*
lin column_5_N = variants {mkN "column" ; mkN "coluna" ; mkN "editorial" ; } ; --*
lin column_6_N = variants {mkN "coluna" ; mkN "pilar" ; } ; --*
lin column_7_N = variants {mkN "coluna" ; mkN "Coluna" ; mkN "pilar" ; } ; --*
lin columnistFem_N = variants {mkN "colunista" ; mkN "Colunistas" ; } ; --*
lin columnistMasc_N = variants {mkN "colunista" ; mkN "Colunistas" ; } ; --*
lin coma_1_N = mkN "coma" ; --*
lin comb_1_N = mkN "pente" ; --*
lin comb_2_N = mkN "crista" ; --*
lin comb_2_V2 = mkV2 (mkV "vasculhar") ; --*
lin comb_3_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "pentear") ; } ; --*
lin combat_1_N = variants {mkN "combat" ; mkN "combate" ; mkN "contenda" ; mkN "luta" ; } ; --*
lin combat_2_N = variants {mkN "batalha" ; mkN "combate" ; mkN "disputa" ; mkN "luta" ; mkN "peleja" ; mkN "pugna" ; } ; --*
lin combatant_A = variants {mkA "combatente" ; mkA "guerreiro" ; } ; --*
lin combatant_N = variants {mkN "combatente" ; mkN "guerreiro" ; mkN "lutador" ; mkN "lutadora" ; } ; --*
lin combative_3_A = mkA "belicoso" ; --*
lin combat_V2 = variants {mkV2 (mkV "batalhar") ; mkV2 (mkV "combater") ; mkV2 (mkV "lutar") ; } ; --*
lin combinable_A = variants {mkA "combinacional" ; mkA "combinatório" ; mkA "combinável" ; } ; --*
lin combination_1_N = mkN "combinação" ; --*
lin combination_3_N = mkN "combinação" ; --*
lin combination_4_N = mkN "combinação" ; --*
lin combination_6_N = mkN "combinação" ; --*
lin combination_7_N = mkN "combinação" ; --*
lin combinative_1_A = mkA "combinatório" ; --*
lin combinative_2_A = mkA "combinatório" ; --*
lin combinatorial_1_A = mkA "combinatório" ; --*
lin combinatorial_2_A = mkA "combinatório" ; --*
lin combine_2_N = variants {mkN "cartel" ; mkN "trust" ; } ; --*
lin combine_2_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "unir") ; } ; --*
lin combine_3_N = variants {mkN "combinação" ; mkN "mistura" ; } ; --*
lin combine_3_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "misturar") ; } ; --*
lin combine_5_V = mkV "combinar" ; --*
lin combine_6_V2 = mkV2 (mkV "agregar") ; --*
lin combine_6_V = mkV "agregar" ; --*
lin combine_6_VV = mkVV (mkV "agregar") ; --*
lin combine_7_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin combined_A = mkA "combinado" ; --*
lin combining_1_N = variants {mkN "combinação" ; mkN "mistura" ; } ; --*
lin combining_2_N = mkN "combinação" ; --*
lin combo_N = variants {mkN "band" ; mkN "group" ; mkN "jazzband" ; } ; --*
lin combustibility_N = mkN "inflamabilidade" ; --*
lin combustible_N = variants {mkN "combustível" ; mkN "material" ; } ; --*
lin combustion_1_N = mkN "combustão" ; --*
lin combustion_3_N = mkN "combustão" ; --*
lin come_12_V = variants {mkV "cair" ; mkV "entrar" ; mkV "estar" ; mkV "vir" ; } ; --*
lin come_14_V = variants {mkV "adicionar" ; mkV "up" ; } ; --*
lin come_15_V = variants {mkV "acontecer" ; mkV "ser" ; mkV "surgir" ; mkV "up" ; mkV "vir" ; } ; --*
lin come_17_V = variants {mkV "acontecer" ; mkV "terlugar" ; } ; --*
lin come_18_V = variants {mkV "derivar" ; mkV "descender" ; mkV "provir" ; mkV "vir" ; } ; --*
lin come_1_V = variants {mkV "up" ; mkV "vir" ; } ; --*
lin come_20_V = mkV "gozar" ; --*
lin come_21_V = mkV "vir" ; --*
lin come_2_V = variants {mkV "chegar" ; mkV "vir" ; } ; --*
lin come_3_V = mkV "vir" ; --*
lin come_4_V = variants {mkV "começar" ; mkV "ficar" ; } ; --*
lin come_5_V = mkV "provir" ; --*
lin come_about_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin come_across_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "across") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin come_across_3_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "into") ; mkV2 (mkV "ver") ; } ; --*
lin come_across_5_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "ser") ; } ; --*
lin come_across_5_V = variants {mkV "across" ; mkV "ser" ; } ; --*
lin come_along_1_V = variants {mkV "along" ; mkV "aparecer" ; } ; --*
lin come_along_2_V = variants {mkV "along" ; mkV "avançar" ; mkV "on" ; mkV "progredir" ; mkV "up" ; } ; --*
lin come_apart_V = variants {mkV "apart" ; mkV "desmoronar" ; mkV "separar" ; mkV "up" ; } ; --*
lin come_around_1_V = variants {mkV "around" ; mkV "round" ; } ; --*
lin come_at_able_1_A = variants {mkA "alcançável" ; mkA "atingível" ; } ; --*
lin come_away_1_V = variants {mkV "away" ; mkV "off" ; mkV "separar" ; } ; --*
lin comeback_1_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin come_back_1_V = variants {mkV "back" ; mkV "voltar" ; } ; --*
lin come_back_4_V = variants {mkV "back" ; mkV "replicar" ; mkV "retornar" ; mkV "retorquir" ; mkV "retortar" ; mkV "retrucar" ; mkV "ripostar" ; } ; --*
lin come_before_V2 = variants {mkV2 (mkV "before") ; mkV2 (mkV "preceder") ; } ; --*
lin comedian_1_N = variants {mkN "comediante" ; mkN "cómico" ; mkN "cômico" ; } ; --*
lin come_down_1_V = variants {mkV "cair" ; mkV "descer" ; mkV "down" ; } ; --*
lin come_down_3_V = variants {mkV "cair" ; mkV "down" ; mkV "precipitar" ; } ; --*
lin come_down_4_V = variants {mkV "adoecer" ; mkV "down" ; } ; --*
lin comedy_1_N = mkN "comédia" ; --*
lin comedy_2_N = mkN "comédia" ; --*
lin come_in_1_V2 = variants {mkV2 (mkV "entrar") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin come_in_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "interpor") ; } ; --*
lin come_in_5_V2 = variants {mkV2 (mkV "classificar-se") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin comely_1_A = variants {mkA "adequado" ; mkA "conveniente" ; mkA "decoroso" ; mkA "il" ; } ; --*
lin comely_2_A = variants {mkA "atraente" ; mkA "lindo" ; } ; --*
lin come_off_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; mkV2 (mkV "separar") ; } ; --*
lin come_off_2_V = variants {mkV "off" ; mkV "over" ; } ; --*
lin come_off_3_V = variants {mkV "away" ; mkV "off" ; mkV "quebrar" ; } ; --*
lin come_on_1_N = variants {mkN "adoçante" ; mkN "chamariz" ; mkN "engodo" ; } ; --*
lin come_on_1_V = variants {mkV "aparecer" ; mkV "on" ; mkV "out" ; mkV "up" ; } ; --*
lin come_on_2_N = mkN "atracção" ; --*
lin come_on_2_V = variants {mkV "aproximar-se" ; mkV "close" ; mkV "near" ; mkV "on" ; mkV "up" ; mkV "vir" ; } ; --*
lin come_on_5_V = mkV "on" ; --*
lin come_out_1_V = variants {mkV "aparecer" ; mkV "on" ; mkV "out" ; mkV "up" ; } ; --*
lin come_out_2_V = variants {mkV "out" ; mkV "sair" ; } ; --*
lin come_out_3_V = variants {mkV "aparecer" ; mkV "forth" ; mkV "out" ; mkV "sair" ; } ; --*
lin come_out_6_V = variants {mkV "classificar-se" ; mkV "in" ; mkV "out" ; } ; --*
lin come_out_9_V = variants {mkV "out" ; mkV "sair" ; } ; --*
lin come_round_V = variants {mkV "around" ; mkV "round" ; } ; --*
lin comestible_N = mkN "alimento" ; --*
lin come_through_3_V = variants {mkV "it" ; mkV "round" ; mkV "sobreviver" ; mkV "through" ; } ; --*
lin come_through_4_V = variants {mkV "atingir" ; mkV "home" ; mkV "suceder" ; mkV "the" ; mkV "through" ; } ; --*
lin comet_N = variants {mkN "cometa" ; mkN "Cometas" ; } ; --*
lin come_to_1_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin come_to_3_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin come_to_4_V = variants {mkV "acordar" ; mkV "to" ; } ; --*
lin come_up_10_V = variants {mkV "ascender" ; mkV "subir" ; mkV "up" ; } ; --*
lin come_up_12_V = variants {mkV "reagrupar" ; mkV "up" ; } ; --*
lin come_up_3_V = variants {mkV "up" ; mkV "vir" ; } ; --*
lin come_up_4_V = variants {mkV "emergir" ; mkV "up" ; } ; --*
lin come_up_5_V = variants {mkV "provir" ; mkV "up" ; } ; --*
lin come_up_6_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin come_up_8_V = variants {mkV "on" ; mkV "up" ; } ; --*
lin come_up_9_V = variants {mkV "achar" ; mkV "hold" ; mkV "up" ; } ; --*
lin come_up_to_V2 = variants {mkV2 (mkV "cumprimentar") ; mkV2 (mkV "up") ; } ; --*
lin come_with_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "to") ; mkV2 (mkV "with") ; } ; --*
lin comfort_1_N = mkN "conforto" ; --*
lin comfort_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "confortar") ; mkV2 (mkV "consolar") ; mkV2 (mkV "reconfortar") ; } ; --*
lin comfort_2_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "confortar") ; } ; --*
lin comfort_3_N = variants {mkN "conforto" ; mkN "consolação" ; mkN "consolo" ; } ; --*
lin comfort_4_N = mkN "conforto" ; --*
lin comfort_6_N = variants {mkN "coberta" ; mkN "colcha" ; mkN "edredon" ; } ; --*
lin comfortable_1_A = mkA "confortável" ; --*
lin comfortable_4_A = mkA "confortável" ; --*
lin comfortableness_1_N = mkN "conforto" ; --*
lin comforter_1_N = mkN "simpatizante" ; --*
lin comforter_3_N = variants {mkN "coberta" ; mkN "colcha" ; mkN "edredon" ; } ; --*
lin comforter_4_N = variants {mkN "chupeta" ; mkN "dummy" ; mkN "ring" ; } ; --*
lin comfortless_A = variants {mkA "desconfortável" ; mkA "sem" ; } ; --*
lin comfrey_2_N = variants {mkN "herb" ; mkN "Symphytum" ; } ; --*
lin comfy_A = mkA "confortável" ; --*
lin comic_1_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin comic_2_A = mkA "cômico" ; --*
lin comical_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin comic_N = variants {mkN "comediante" ; mkN "cómico" ; mkN "cômico" ; } ; --*
lin coming_1_N = mkN "aproximação" ; --*
lin coming_2_N = variants {mkN "advento" ; mkN "chegada" ; mkN "vinda" ; } ; --*
lin coming_4_N = variants {mkN "climax" ; mkN "orgasmo" ; } ; --*
lin coming_A = variants {mkA "iminente" ; mkA "próximo" ; mkA "que" ; } ; --*
lin comma_1_N = mkN "vírgula" ; --*
lin command_1_N = variants {mkN "Comando" ; mkN "ordem" ; } ; --*
lin command_2_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "dar") ; mkV2 (mkV "exigir") ; mkV2 (mkV "ordenar") ; } ; --*
lin command_2_V = variants {mkV "comandar" ; mkV "dar" ; mkV "exigir" ; mkV "ordenar" ; } ; --*
lin command_5_V2 = variants {mkV2 (mkV "governar") ; mkV2 (mkV "reger") ; } ; --*
lin command_6_N = variants {mkN "aptidão" ; mkN "controle" ; } ; --*
lin command_7_N = variants {mkN "instrução" ; mkN "Instrução" ; mkN "line" ; } ; --*
lin commandant_N = variants {mkN "comandante" ; mkN "officer" ; } ; --*
lin commandeer_V2 = variants {mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; } ; --*
lin commander_1_N = variants {mkN "comandante" ; mkN "officer" ; } ; --*
lin commander_2_N = mkN "comandante" ; --*
lin commander_3_N = mkN "comandante" ; --*
lin commander_4_N = variants {mkN "comandante" ; mkN "force" ; } ; --*
lin commandment_1_N = variants {mkN "mandamento" ; mkN "ordem" ; } ; --*
lin commandment_2_N = mkN "preceito" ; --*
lin commando_1_N = variants {mkN "ranger" ; mkN "Ranger" ; } ; --*
lin commando_2_N = mkN "comando" ; --*
lin commemorate_1_V2 = variants {mkV2 (mkV "comemorar") ; mkV2 (mkV "marcar") ; } ; --*
lin commemorate_2_V2 = mkV2 (mkV "rememorar") ; --*
lin commemorate_3_V2 = variants {mkV2 (mkV "comemorar") ; mkV2 (mkV "imortalizar") ; mkV2 (mkV "rememorar") ; } ; --*
lin commemoration_1_N = mkN "comemoração" ; --*
lin commemoration_2_N = mkN "comemoração" ; --*
lin commemorative_1_A = mkA "comemorativo" ; --*
lin commence_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; mkV2 (mkV "down") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "out") ; mkV2 (mkV "principiar") ; } ; --*
lin commence_1_V = variants {mkV "about" ; mkV "começar" ; mkV "down" ; mkV "iniciar" ; mkV "out" ; mkV "principiar" ; } ; --*
lin commence_2_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "off") ; } ; --*
lin commence_3_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin commencement_1_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; mkN "time" ; } ; --*
lin commencement_2_N = variants {mkN "ceremony" ; mkN "colação" ; mkN "exercise" ; } ; --*
lin commencement_3_N = variants {mkN "começo" ; mkN "início" ; } ; --*
lin commend_1_V2 = mkV2 (mkV "comendar") ; --*
lin commend_3_V2 = mkV2 (mkV "encarregar") ; --*
lin commend_4_V2 = variants {mkV2 (mkV "preconizar") ; mkV2 (mkV "recomendar") ; } ; --*
lin commendation_2_N = variants {mkN "aplauso" ; mkN "aprovação" ; } ; --*
lin commensal_A = mkA "comensal" ; --*
lin commensalism_N = mkN "comensalismo" ; --*
lin commensurable_A = mkA "comensurável" ; --*
lin comment_1_N = variants {mkN "comentário" ; mkN "cometário" ; mkN "comment" ; mkN "Comment" ; mkN "observação" ; mkN "reparo" ; mkN "tag" ; } ; --*
lin comment_1_V2 = variants {mkV2 (mkV "comentar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "out") ; } ; --*
lin comment_2_N = variants {mkN "anotação" ; mkN "comentário" ; mkN "nota" ; } ; --*
lin comment_2_V2 = mkV2 (mkV "comentar") ; --*
lin comment_2_V = mkV "comentar" ; --*
lin comment_2_VS = mkVS (mkV "comentar") ; --*
lin comment_3_N = variants {mkN "bisbilhotice" ; mkN "bisbolhetice" ; mkN "fofoca" ; } ; --*
lin comment_3_V2 = mkV2 (mkV "glossar") ; --*
lin commentary_N = variants {mkN "anotação" ; mkN "comentário" ; mkN "nota" ; } ; --*
lin commentator_1_N = variants {mkN "comentarista" ; mkN "observador" ; } ; --*
lin commentator_2_N = variants {mkN "comentarista" ; mkN "jornalista" ; } ; --*
lin commerce_1_N = variants {mkN "comercialismo" ; mkN "comércio" ; mkN "mercantilismo" ; } ; --*
lin commercial_1_A = mkA "comercial" ; --*
lin commercial_2_A = mkA "comercial" ; --*
lin commercial_3_A = mkA "comercial" ; --*
lin commercialism_N = variants {mkN "comercialismo" ; mkN "comércio" ; mkN "mercantilismo" ; } ; --*
lin commercialization_1_N = mkN "comercialização" ; --*
lin commercialize_1_V2 = mkV2 (mkV "comercializar") ; --*
lin commercialize_2_V2 = mkV2 (mkV "comercializar") ; --*
lin commercial_N = variants {mkN "anúncio" ; mkN "comercial" ; mkN "message" ; } ; --*
lin commingle_1_V2 = mkV2 (mkV "misturar") ; --*
lin commingle_2_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin commiserate_V = variants {mkV "comiserar" ; mkV "compadecer" ; mkV "compadecer-se" ; } ; --*
lin commiseration_1_N = variants {mkN "coisa" ; mkN "compaixão" ; mkN "piedade" ; } ; --*
lin commiseration_2_N = variants {mkN "condolência" ; mkN "pêsame" ; } ; --*
lin commissariat_N = variants {mkN "alimento" ; mkN "alimentos" ; mkN "comida" ; mkN "delegacia" ; mkN "produtos" ; } ; --*
lin commission_1_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "junta" ; } ; --*
lin commission_1_V2 = mkV2 (mkV "armar") ; --*
lin commission_1_V2V = mkV2V (mkV "armar") ; --*
lin commission_2_N = mkN "comissão" ; --*
lin commission_2_V2 = mkV2 (mkV "encarregar") ; --*
lin commission_2_V2V = mkV2V (mkV "encarregar") ; --*
lin commission_3_N = mkN "delegação" ; --*
lin commission_5_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "delegação" ; mkN "embaixada" ; mkN "missão" ; } ; --*
lin commission_7_N = variants {mkN "comissão" ; mkN "commission" ; } ; --*
lin commission_8_N = mkN "cometimento" ; --*
lin commission_9_N = mkN "missão" ; --*
lin commissure_N = mkN "comissura" ; --*
lin commit_1_V2 = variants {mkV2 (mkV "cometer") ; mkV2 (mkV "perpetrar") ; } ; --*
lin commit_2_V2 = variants {mkV2 (mkV "comprometer") ; mkV2 (mkV "dedicar") ; } ; --*
lin commit_3_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "enviar") ; mkV2 (mkV "institucionalizar") ; mkV2 (mkV "internar") ; } ; --*
lin commit_4_V2 = variants {mkV2 (mkV "comissionar") ; mkV2 (mkV "confiar") ; mkV2 (mkV "encarregar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "incumbir") ; mkV2 (mkV "ter") ; } ; --*
lin commit_5_V2 = mkV2 (mkV "investir") ; --*
lin commit_6_V2 = mkV2 (mkV "praticar") ; --*
lin commitment_1_N = mkN "engajamento" ; --*
lin commitment_2_N = mkN "dedicação" ; --*
lin committed_1_A = mkA "empenhado" ; --*
lin committed_2_A = mkA "empenhado" ; --*
lin committedness_N = mkN "engajamento" ; --*
lin committee_1_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "junta" ; } ; --*
lin committee_2_N = variants {mkN "comitê" ; mkN "committee" ; } ; --*
lin commode_1_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin commode_2_N = mkN "cômoda" ; --*
lin commodious_A = mkA "amplo" ; --*
lin commodity_N = variants {mkN "bem" ; mkN "Bens" ; mkN "fazenda" ; mkN "good" ; mkN "mercadoria" ; mkN "objecto" ; mkN "produto" ; } ; --*
lin commodore_N = mkN "comodoro" ; --*
lin common_1_A = mkA "comum" ; --*
lin common_2_A = mkA "comum" ; --*
lin common_3_A = variants {mkA "comum" ; mkA "mútuo" ; mkA "recíproco" ; } ; --*
lin common_4_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "usual" ; } ; --*
lin common_5_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "vernáculo" ; mkA "Vernáculo" ; } ; --*
lin common_6_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "popular" ; mkA "vulgar" ; } ; --*
lin common_7_A = mkA "comum" ; --*
lin common_8_A = variants {mkA "agreste" ; mkA "grosseira" ; mkA "grosseiro" ; mkA "ríspido" ; mkA "rude" ; mkA "tosco" ; } ; --*
lin commoner_N = variants {mkN "man" ; mkN "person" ; mkN "plebeu" ; } ; --*
lin common_N = variants {mkN "espaços" ; mkN "parque" ; } ; --*
lin commonness_2_N = variants {mkN "grosseria" ; mkN "obscenidades" ; } ; --*
lin commonplace_1_A = mkA "banal" ; --*
lin commonplace_3_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin commonplace_N = variants {mkN "banalidade" ; mkN "chavão" ; mkN "cliché" ; mkN "trivialidade" ; mkN "vulgaridade" ; } ; --*
lin common_room_N = mkN "room" ; --*
lin commons_1_N = variants {mkN "espaços" ; mkN "parque" ; } ; --*
lin commons_2_N = variants {mkN "Bens" ; mkN "land" ; } ; --*
lin commonwealth_2_N = variants {mkN "nação" ; mkN "país" ; mkN "politic" ; mkN "publica" ; mkN "república" ; mkN "união" ; } ; --*
lin commonwealth_4_N = variants {mkN "democracia" ; mkN "república" ; } ; --*
lin commotion_1_N = variants {mkN "bagunça" ; mkN "burly" ; mkN "comoção" ; mkN "confusão" ; mkN "zona" ; } ; --*
lin commotion_2_N = variants {mkN "escândalo" ; mkN "tumulto" ; } ; --*
lin communal_1_A = mkA "comunitário" ; --*
lin communal_2_A = mkA "comunitário" ; --*
lin commune_1_V = mkV "comungar" ; --*
lin communicable_1_A = variants {mkA "contagioso" ; mkA "transmissível" ; } ; --*
lin communicable_2_A = mkA "comunicável" ; --*
lin communicate_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "along") ; mkV2 (mkV "comunicar") ; mkV2 (mkV "on") ; mkV2 (mkV "transmitir") ; } ; --*
lin communicate_2_V2 = variants {mkV2 (mkV "comunicar") ; mkV2 (mkV "transmitir") ; } ; --*
lin communicate_3_V2 = mkV2 (mkV "enviar") ; --*
lin communication_1_N = variants {mkN "comunicação" ; mkN "comunicado" ; mkN "uma" ; } ; --*
lin communication_2_N = variants {mkN "comunicação" ; mkN "mensagem" ; } ; --*
lin communication_3_N = mkN "conexão" ; --*
lin communications_N = variants {mkN "Teoria" ; mkN "theory" ; } ; --*
lin communicative_1_A = mkA "comunicativo" ; --*
lin communicative_2_A = mkA "comunicativo" ; --*
lin communicator_N = mkN "comunicador" ; --*
lin communion_2_N = mkN "comunhão" ; --*
lin communism_1_N = mkN "comunismo" ; --*
lin communism_2_N = mkN "comunismo" ; --*
lin communist_1_N = mkN "comunista" ; --*
lin communist_2_N = variants {mkN "comunista" ; mkN "Comunistas" ; } ; --*
lin communist_A = mkA "comunista" ; --*
lin community_1_N = variants {mkN "comunidade" ; mkN "Comunidade" ; } ; --*
lin community_6_N = variants {mkN "area" ; mkN "áreas" ; mkN "district" ; } ; --*
lin community_7_N = variants {mkN "community" ; mkN "comunidade" ; } ; --*
lin communization_3_N = mkN "nacionalização" ; --*
lin commutability_1_N = mkN "reacções" ; --*
lin commutation_1_N = mkN "migrações" ; --*
lin commutation_4_N = variants {mkN "mudança" ; mkN "substituição" ; } ; --*
lin commutative_A = variants {mkA "comutativa" ; mkA "comutativo" ; } ; --*
lin commutator_N = variants {mkN "comutador" ; mkN "Comutador" ; mkN "interruptor" ; } ; --*
lin commute_3_V2 = mkV2 (mkV "transpor") ; --*
lin commute_4_V2 = mkV2 (mkV "trocar") ; --*
lin commute_4_V = mkV "trocar" ; --*
lin commute_5_V2 = variants {mkV2 (mkV "converter") ; mkV2 (mkV "mudar") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin commute_N = mkN "comute" ; --*
lin commuter_2_N = mkN "passageiro" ; --*
lin compact_1_A = variants {mkA "cerrado" ; mkA "compacto" ; } ; --*
lin compact_1_V2 = mkV2 (mkV "embalar") ; --*
lin compact_2_A = mkA "grosso" ; --*
lin compact_2_N = variants {mkN "concordata" ; mkN "pacto" ; mkN "tratado" ; } ; --*
lin compact_3_A = variants {mkA "compêndio" ; mkA "sucinto" ; mkA "sumário" ; } ; --*
lin compact_3_N = variants {mkN "car" ; mkN "compacto" ; } ; --*
lin compact_3_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "together") ; } ; --*
lin compact_4_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "contrair") ; } ; --*
lin compaction_1_N = mkN "compressão" ; --*
lin compaction_2_N = variants {mkN "compactação" ; mkN "esmagamento" ; } ; --*
lin compactness_1_N = variants {mkN "concentração" ; mkN "densidade" ; } ; --*
lin compactness_2_N = mkN "densidade" ; --*
lin companion_1_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; } ; --*
lin companion_2_N = variants {mkN "acompanhante" ; mkN "traveler" ; mkN "traveller" ; } ; --*
lin companionship_N = mkN "companherismo" ; --*
lin company_1_N = variants {mkN "companhia" ; mkN "empresas" ; } ; --*
lin company_2_N = mkN "companhia" ; --*
lin company_3_N = mkN "companherismo" ; --*
lin company_4_N = variants {mkN "companhia" ; mkN "elenco" ; mkN "pessoal" ; } ; --*
lin company_5_N = variants {mkN "companhia" ; mkN "visita" ; mkN "visitante" ; } ; --*
lin company_6_N = mkN "Comunidade" ; --*
lin comparability_N = mkN "comparação" ; --*
lin comparable_1_A = mkA "comparável" ; --*
lin comparable_2_A = variants {mkA "comparável" ; mkA "correspondente" ; mkA "equivalente" ; } ; --*
lin comparative_1_A = mkA "comparativo" ; --*
lin comparative_2_A = mkA "relativo" ; --*
lin comparative_N = variants {mkN "comparativo" ; mkN "degree" ; } ; --*
lin compare_1_V = mkV "comparar" ; --*
lin compare_2_V = mkV "comparar" ; --*
lin compare_3_V = mkV "equiparar" ; --*
lin compare_N = mkN "comparação" ; --*
lin comparison_1_N = mkN "comparação" ; --*
lin comparison_2_N = mkN "comparação" ; --*
lin comparison_3_N = mkN "comparação" ; --*
lin compartment_2_N = mkN "compartimento" ; --*
lin compartmentalization_2_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Sistemas" ; mkN "sortimento" ; } ; --*
lin compartmentalize_1_V2 = variants {mkV2 (mkV "compartimentar") ; mkV2 (mkV "up") ; } ; --*
lin compass_1_N = variants {mkN "Bussola" ; mkN "bússola" ; } ; --*
lin compass_2_N = variants {mkN "alcance" ; mkN "áreas" ; mkN "escopo" ; } ; --*
lin compass_3_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; mkV2 (mkV "the") ; } ; --*
lin compass_4_N = mkN "compasso" ; --*
lin compassion_1_N = variants {mkN "compaixão" ; mkN "piedade" ; } ; --*
lin compassion_2_N = variants {mkN "compaixão" ; mkN "misericórdia" ; mkN "piedade" ; } ; --*
lin compatibility_1_N = mkN "compatibilidade" ; --*
lin compatibility_2_N = mkN "compatibilidade" ; --*
lin compatible_1_A = mkA "compatível" ; --*
lin compatible_2_A = mkA "compatível" ; --*
lin compatible_3_A = mkA "compatível" ; --*
lin compatriotFem_N = variants {mkN "compatrício" ; mkN "compatriota" ; mkN "conterrâneo" ; mkN "patrício" ; } ; --*
lin compatriotMasc_N = variants {mkN "compatrício" ; mkN "compatriota" ; mkN "conterrâneo" ; mkN "patrício" ; } ; --*
lin compeer_N = variants {mkN "igual" ; mkN "par" ; mkN "pário" ; } ; --*
lin compel_1_V2V = variants {mkV2V (mkV "compelir") ; mkV2V (mkV "constranger") ; mkV2V (mkV "forçar") ; mkV2V (mkV "obrigar") ; } ; --*
lin compelling_1_A = mkA "constrangedor" ; --*
lin compelling_2_A = mkA "constrangedor" ; --*
lin compendious_A = variants {mkA "compêndio" ; mkA "sucinto" ; mkA "sumário" ; } ; --*
lin compendium_2_N = variants {mkN "compêndio" ; mkN "resumo" ; } ; --*
lin compensate_1_V2 = variants {mkV2 (mkV "contrabalançar") ; mkV2 (mkV "contrabalancear") ; mkV2 (mkV "corrigir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin compensate_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "indemnizar") ; mkV2 (mkV "indenizar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; } ; --*
lin compensate_4_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "corrigir") ; } ; --*
lin compensate_5_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin compensate_6_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; mkV2 (mkV "remunerar") ; } ; --*
lin compensation_1_N = variants {mkN "compensação" ; mkN "Compensação" ; mkN "remuneração" ; } ; --*
lin compensation_3_N = variants {mkN "compensação" ; mkN "Compensação" ; } ; --*
lin competence_1_N = variants {mkN "capacidade" ; mkN "competência" ; mkN "habilidade" ; } ; --*
lin competent_1_A = variants {mkA "competente" ; mkA "habilitado" ; } ; --*
lin compete_V = variants {mkV "competir" ; mkV "concorrer" ; } ; --*
lin competition_1_N = mkN "competição" ; --*
lin competition_2_N = variants {mkN "certame" ; mkN "competição" ; mkN "concurso" ; mkN "jogo" ; mkN "partida" ; mkN "torneio" ; } ; --*
lin competition_3_N = variants {mkN "competição" ; mkN "concorrência" ; } ; --*
lin competition_4_N = variants {mkN "adversário" ; mkN "competidor" ; mkN "concorrente" ; mkN "contendor" ; mkN "desafiante" ; mkN "inimigo" ; mkN "opositor" ; mkN "rival" ; } ; --*
lin competitive_1_A = mkA "competitivo" ; --*
lin competitive_2_A = mkA "competitivo" ; --*
lin competitive_3_A = mkA "competitivo" ; --*
lin competitiveness_N = mkN "competitividade" ; --*
lin competitor_N = variants {mkN "adversário" ; mkN "competidor" ; mkN "concorrente" ; mkN "contendor" ; mkN "desafiante" ; mkN "inimigo" ; mkN "opositor" ; mkN "rival" ; } ; --*
lin compilation_1_N = mkN "compilação" ; --*
lin compilation_2_N = mkN "compilação" ; --*
lin compile_1_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin compile_2_V2 = variants {mkV2 (mkV "compilar") ; mkV2 (mkV "compor") ; } ; --*
lin compile_3_V2 = mkV2 (mkV "compilar") ; --*
lin compiler_2_N = variants {mkN "compilador" ; mkN "program" ; } ; --*
lin complacent_A = variants {mkA "cheio" ; mkA "convencido" ; mkA "vaidoso" ; } ; --*
lin complain_1_V = variants {mkV "lamentar" ; mkV "off" ; mkV "reclamar" ; } ; --*
lin complain_2_V = variants {mkV "queixar" ; mkV "reclamar" ; } ; --*
lin complainant_N = mkN "querelante" ; --*
lin complaint_1_N = mkN "doença" ; --*
lin complaint_2_N = mkN "lamento" ; --*
lin complaint_3_N = mkN "queixa" ; --*
lin complaint_5_N = mkN "acusação" ; --*
lin complaisant_A = mkA "obsequioso" ; --*
lin complement_1_N = mkN "complemento" ; --*
lin complement_4_N = mkN "complemento" ; --*
lin complemental_A = mkA "complementar" ; --*
lin complementary_1_A = mkA "complementar" ; --*
lin complementary_2_A = mkA "complementar" ; --*
lin complement_V2 = variants {mkV2 (mkV "complementar") ; mkV2 (mkV "completar") ; } ; --*
lin complete_1_A = variants {mkA "completo" ; mkA "integral" ; mkA "totalizado" ; } ; --*
lin complete_1_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "encerrar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin complete_2_V2 = variants {mkV2 (mkV "completar") ; mkV2 (mkV "concluir") ; mkV2 (mkV "inteirar") ; } ; --*
lin complete_3_A = variants {mkA "cumplido" ; mkA "cumprido" ; mkA "realizado" ; } ; --*
lin complete_3_V2 = mkV2 (mkV "cumprir") ; --*
lin complete_5_V2 = variants {mkV2 (mkV "encorpar") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin completeness_1_N = variants {mkN "integralidade" ; mkN "inteireza" ; mkN "plenitude" ; } ; --*
lin completion_2_N = variants {mkN "conclusão" ; mkN "culminação" ; mkN "finalização" ; mkN "up" ; } ; --*
lin complex_1_A = variants {mkA "complexo" ; mkA "intrincado" ; } ; --*
lin complex_2_A = variants {mkA "complexo" ; mkA "complicado" ; } ; --*
lin complex_2_N = variants {mkN "composto" ; mkN "compound" ; } ; --*
lin complexion_1_N = variants {mkN "color" ; mkN "colour" ; mkN "tez" ; } ; --*
lin complexity_N = mkN "complexidade" ; --*
lin compliance_1_N = mkN "conformidade" ; --*
lin compliance_3_N = mkN "submissão" ; --*
lin compliant_A = variants {mkA "complacente" ; mkA "submisso" ; } ; --*
lin complicate_1_V2 = mkV2 (mkV "complicar") ; --*
lin complicate_2_V2 = variants {mkV2 (mkV "complicar") ; mkV2 (mkV "refinar") ; } ; --*
lin complicated_A = variants {mkA "complexo" ; mkA "complicado" ; } ; --*
lin complicatedness_N = mkN "complicação" ; --*
lin complication_1_N = mkN "complicação" ; --*
lin complication_2_N = mkN "complicação" ; --*
lin complication_3_N = mkN "complicação" ; --*
lin complication_4_N = mkN "ramificação" ; --*
lin complication_5_N = mkN "complicação" ; --*
lin complicity_N = mkN "cumplicidade" ; --*
lin compliment_1_V2 = mkV2 (mkV "parabenizar") ; --*
lin compliment_2_V2 = variants {mkV2 (mkV "cumprimentar") ; mkV2 (mkV "elogiar") ; } ; --*
lin complimentary_1_A = mkA "gratís" ; --*
lin complimentary_2_A = variants {mkA "de" ; mkA "gratís" ; mkA "grátis" ; mkA "gratuitamente" ; mkA "gratuito" ; } ; --*
lin compliment_N = variants {mkN "elogio" ; mkN "vénia" ; mkN "vênia" ; } ; --*
lin compline_N = variants {mkN "Completas" ; mkN "Oração" ; } ; --*
lin complin_N = variants {mkN "Completas" ; mkN "Oração" ; } ; --*
lin comply_V = variants {mkV "acatar" ; mkV "by" ; mkV "seguir" ; } ; --*
lin component_1_N = variants {mkN "componente" ; mkN "fator" ; mkN "parte" ; } ; --*
lin component_2_N = variants {mkN "categoria" ; mkN "componente" ; mkN "part" ; mkN "parte" ; mkN "porção" ; } ; --*
lin component_3_N = variants {mkN "componente" ; mkN "parte" ; } ; --*
lin comport_1_V = variants {mkV "comportar" ; mkV "comportar-se" ; mkV "portar-se" ; } ; --*
lin comport_2_V2 = variants {mkV2 (mkV "comportar-se") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "resistir") ; } ; --*
lin comport_2_V = variants {mkV "comportar-se" ; mkV "conduzir" ; mkV "resistir" ; } ; --*
lin comportment_N = variants {mkN "comportamento" ; mkN "presença" ; } ; --*
lin compose_2_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "escrever") ; } ; --*
lin compose_3_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "escrever") ; } ; --*
lin compose_4_V2 = variants {mkV2 (mkV "compilar") ; mkV2 (mkV "compor") ; } ; --*
lin compose_5_V = variants {mkV "compor" ; mkV "recompor" ; } ; --*
lin compose_6_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin composer_N = mkN "compositor" ; --*
lin composing_1_N = mkN "composição" ; --*
lin composing_2_N = mkN "composição" ; --*
lin composition_1_N = mkN "composição" ; --*
lin composition_2_N = variants {mkN "composição" ; mkN "composition" ; mkN "constituição" ; mkN "estrutura" ; } ; --*
lin composition_3_N = mkN "solução" ; --*
lin composition_4_N = variants {mkN "Composição" ; mkN "composition" ; mkN "of" ; } ; --*
lin composition_5_N = mkN "composição" ; --*
lin composition_6_N = mkN "autoria" ; --*
lin composition_7_N = variants {mkN "tipografia" ; mkN "Tipografia" ; mkN "trabalho" ; } ; --*
lin composition_8_N = variants {mkN "ensaio" ; mkN "relatório" ; } ; --*
lin composition_9_N = mkN "composição" ; --*
lin compositional_A = mkA "compositivo" ; --*
lin compositor_N = mkN "compositor" ; --*
lin compost_N = mkN "compostagem" ; --*
lin compost_V2 = variants {mkV2 (mkV "adubar") ; mkV2 (mkV "fazer") ; } ; --*
lin composure_N = variants {mkN "calma" ; mkN "equanimidade" ; } ; --*
lin compote_N = variants {mkN "compota" ; mkN "compote" ; } ; --*
lin compound_1_A = mkA "composto" ; --*
lin compound_1_N = variants {mkN "composição" ; mkN "Composição" ; mkN "composto" ; } ; --*
lin compound_1_V2 = variants {mkV2 (mkV "acirrar") ; mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; } ; --*
lin compound_2_N = variants {mkN "Composto" ; mkN "Compostos" ; mkN "compound" ; mkN "substância" ; } ; --*
lin compound_2_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "unir") ; } ; --*
lin compound_3_A = mkA "colonial" ; --*
lin compound_3_N = mkN "recinto" ; --*
lin compound_5_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "misturar") ; } ; --*
lin comprehend_1_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; mkV2 (mkV "the") ; } ; --*
lin comprehend_2_V2 = variants {mkV2 (mkV "aperceber") ; mkV2 (mkV "aperceber-se") ; mkV2 (mkV "entender") ; mkV2 (mkV "perceber") ; } ; --*
lin comprehend_3_V2 = variants {mkV2 (mkV "abarcar") ; mkV2 (mkV "circundar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "englobar") ; } ; --*
lin comprehensibility_N = mkN "compreensibilidade" ; --*
lin comprehensible_1_A = mkA "compreensível" ; --*
lin comprehension_1_N = mkN "compreensão" ; --*
lin comprehension_2_N = mkN "inclusão" ; --*
lin comprehensive_1_A = variants {mkA "abrangente" ; mkA "amplo" ; mkA "detalhado" ; mkA "exaustivo" ; mkA "extenso" ; } ; --*
lin comprehensiveness_1_N = mkN "plenitude" ; --*
lin compress_1_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "together") ; } ; --*
lin compress_2_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "contrair") ; } ; --*
lin compressibility_N = variants {mkN "compressibilidade" ; mkN "redutibilidade" ; } ; --*
lin compressible_1_A = mkA "compressível" ; --*
lin compression_1_N = mkN "compressão" ; --*
lin compression_2_N = variants {mkN "compressão" ; mkN "contração" ; } ; --*
lin compression_4_N = variants {mkN "compressão" ; mkN "pressão" ; } ; --*
lin compress_N = mkN "compressa" ; --*
lin compressor_N = mkN "compressor" ; --*
lin comprise_1_V2 = mkV2 (mkV "consistir") ; --*
lin comprise_2_V2 = variants {mkV2 (mkV "abranger") ; mkV2 (mkV "conter") ; } ; --*
lin comprise_3_V2 = variants {mkV2 (mkV "representar") ; mkV2 (mkV "up") ; } ; --*
lin compromise_1_N = variants {mkN "compromisso" ; mkN "contratos" ; mkN "media" ; mkN "meio-termo" ; } ; --*
lin compromise_1_V = variants {mkV "chegar" ; mkV "compactuar" ; mkV "comprometer" ; mkV "pactuar" ; } ; --*
lin compromise_2_N = variants {mkN "compromisso" ; mkN "conchavo" ; mkN "meio-termo" ; } ; --*
lin compromise_2_V2 = mkV2 (mkV "conceder") ; --*
lin compromise_2_V = mkV "conceder" ; --*
lin compromise_3_V2 = mkV2 (mkV "comprometer") ; --*
lin comptroller_N = variants {mkN "contabilista" ; mkN "contador" ; mkN "controlador" ; } ; --*
lin compulsion_1_N = variants {mkN "compulsão" ; mkN "impulse" ; } ; --*
lin compulsion_2_N = variants {mkN "compulsão" ; mkN "obsessão" ; } ; --*
lin compulsion_3_N = variants {mkN "coacção" ; mkN "coerção" ; } ; --*
lin compulsive_1_A = mkA "compulsivo" ; --*
lin compulsive_2_A = mkA "compulsivo" ; --*
lin compulsiveness_N = mkN "compulsividade" ; --*
lin compulsory_A = variants {mkA "compulsório" ; mkA "essencial" ; mkA "forçoso" ; mkA "imprescindível" ; mkA "obrigatório" ; } ; --*
lin compunction_N = mkN "remorso" ; --*
lin computable_A = mkA "computável" ; --*
lin computation_1_N = mkN "cálculo" ; --*
lin computation_2_N = mkN "cálculo" ; --*
lin computer_1_N = variants {mkN "computador" ; mkN "computer" ; mkN "device" ; mkN "machine" ; mkN "processing" ; mkN "processor" ; } ; --*
lin computer_2_N = variants {mkN "computador" ; mkN "estimador" ; } ; --*
lin computerize_1_V2 = variants {mkV2 (mkV "computadorizar") ; mkV2 (mkV "informatizar") ; } ; --*
lin computerize_2_V2 = variants {mkV2 (mkV "computarizar") ; mkV2 (mkV "informatizar") ; } ; --*
lin computerize_3_V2 = mkV2 (mkV "computadorizar") ; --*
lin computer_science_N = variants {mkN "informática" ; mkN "science" ; } ; --*
lin compute_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "computar") ; mkV2 (mkV "out") ; } ; --*
lin compute_V = variants {mkV "calcular" ; mkV "computar" ; mkV "out" ; } ; --*
lin computing_1_N = variants {mkN "informática" ; mkN "science" ; } ; --*
lin computing_2_N = mkN "cálculo" ; --*
lin comrade_1_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; } ; --*
lin comrade_3_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin con_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin con_2_N = variants {mkN "bird" ; mkN "condenado" ; } ; --*
lin con_2_V2 = variants {mkV2 (mkV "decorar") ; mkV2 (mkV "memorizar") ; mkV2 (mkV "saber") ; } ; --*
lin concatenation_1_N = mkN "concatenação" ; --*
lin concatenation_4_N = mkN "concatenação" ; --*
lin concave_A = variants {mkA "côncavo" ; mkA "oco" ; } ; --*
lin concavity_1_N = variants {mkN "concavidade" ; mkN "shape" ; } ; --*
lin concavity_2_N = mkN "concavidade" ; --*
lin conceal_1_V2 = variants {mkV2 (mkV "acobertar") ; mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "ocultar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "tampar") ; mkV2 (mkV "tapar") ; } ; --*
lin conceal_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "esconder") ; mkV2 (mkV "in") ; } ; --*
lin concealment_1_N = variants {mkN "clandestinidade" ; mkN "intimidade" ; mkN "privacidade" ; mkN "segredo" ; mkN "sigilo" ; } ; --*
lin concealment_2_N = variants {mkN "capa" ; mkN "cobertor" ; mkN "cobertura" ; mkN "envólucro" ; } ; --*
lin concealment_3_N = mkN "ocultação" ; --*
lin concede_1_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "confessar") ; } ; --*
lin concede_1_VS = variants {mkVS (mkV "admitir") ; mkVS (mkV "confessar") ; } ; --*
lin concede_2_V2 = mkV2 (mkV "conceder") ; --*
lin concede_2_V = mkV "conceder" ; --*
lin concede_2_VS = mkVS (mkV "conceder") ; --*
lin concede_3_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "submeter-se") ; mkV2 (mkV "sucumbir") ; } ; --*
lin concede_3_V = variants {mkV "ceder" ; mkV "conceder" ; mkV "entregar" ; mkV "submeter-se" ; mkV "sucumbir" ; } ; --*
lin concede_3_VS = variants {mkVS (mkV "ceder") ; mkVS (mkV "conceder") ; mkVS (mkV "entregar") ; mkVS (mkV "submeter-se") ; mkVS (mkV "sucumbir") ; } ; --*
lin concede_4_V = mkV "desistir" ; --*
lin conceit_1_N = variants {mkN "presunção" ; mkN "propre" ; mkN "vaidade" ; } ; --*
lin conceit_5_N = mkN "vaidade" ; --*
lin conceited_A = variants {mkA "convencido" ; mkA "egoísta" ; } ; --*
lin conceivable_A = mkA "imaginável" ; --*
lin conceive_1_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "conceitualizar") ; } ; --*
lin conceive_1_V = variants {mkV "conceber" ; mkV "conceitualizar" ; } ; --*
lin conceive_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "pensar") ; } ; --*
lin conceive_3_V = variants {mkV "conceber" ; mkV "engravidar" ; } ; --*
lin concentrate_1_V2 = mkV2 (mkV "concentrar") ; --*
lin concentrate_2_V = variants {mkV "centrar" ; mkV "concentrar" ; mkV "focar" ; } ; --*
lin concentrate_3_V2 = variants {mkV2 (mkV "centralizar") ; mkV2 (mkV "concentrar") ; } ; --*
lin concentrate_4_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; } ; --*
lin concentrate_5_V = variants {mkV "concentrar-se" ; mkV "contrair-se" ; } ; --*
lin concentrate_7_V = variants {mkV "diminuir" ; mkV "down" ; } ; --*
lin concentrate_8_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "ferver") ; mkV2 (mkV "reduzir") ; } ; --*
lin concentration_1_N = variants {mkN "concentração" ; mkN "concentrações" ; } ; --*
lin concentration_2_N = variants {mkN "concentração" ; mkN "densidade" ; } ; --*
lin concentration_3_N = mkN "concentração" ; --*
lin concentration_4_N = mkN "concentração" ; --*
lin concentration_5_N = mkN "concentração" ; --*
lin concentration_6_N = mkN "concentração" ; --*
lin concentration_7_N = variants {mkN "assiduidade" ; mkN "concentração" ; } ; --*
lin concentric_1_A = mkA "concêntrico" ; --*
lin conception_1_N = variants {mkN "conceito" ; mkN "concepção" ; mkN "ideia" ; mkN "idéia" ; } ; --*
lin conception_2_N = variants {mkN "concepção" ; mkN "engravidamento" ; } ; --*
lin conception_3_N = variants {mkN "concepção" ; mkN "criação" ; } ; --*
lin conception_4_N = variants {mkN "concepção" ; mkN "inovação" ; mkN "invenção" ; } ; --*
lin concept_N = variants {mkN "conceito" ; mkN "concepção" ; mkN "ideia" ; mkN "idéia" ; } ; --*
lin conceptual_A = variants {mkA "conceitual" ; mkA "conceptual" ; mkA "concetual" ; } ; --*
lin conceptualism_N = variants {mkN "conceitualismo" ; mkN "Conceitualismo" ; } ; --*
lin conceptualization_1_N = mkN "formulação" ; --*
lin conceptualization_2_N = mkN "formulação" ; --*
lin concern_1_N = variants {mkN "interesse" ; mkN "preocupação" ; } ; --*
lin concern_1_V2 = variants {mkV2 (mkV "concernir") ; mkV2 (mkV "doe") ; mkV2 (mkV "on") ; mkV2 (mkV "referir") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "to") ; } ; --*
lin concern_2_N = variants {mkN "medo" ; mkN "preocupação" ; mkN "temor" ; } ; --*
lin concern_2_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "preocupar") ; mkV2 (mkV "ter") ; } ; --*
lin concern_3_N = mkN "afeição" ; --*
lin concern_4_N = variants {mkN "dor-de-cabeça" ; mkN "preocupação" ; } ; --*
lin concern_5_N = variants {mkN "concern" ; mkN "empresas" ; mkN "organisation" ; mkN "organization" ; } ; --*
lin concerned_2_A = mkA "interessado" ; --*
lin concert_2_V2 = mkV2 (mkV "concertar") ; --*
lin concert_hall_N = mkN "hall" ; --*
lin concertina_2_N = mkN "concertina" ; --*
lin concert_N = variants {mkN "concerto" ; mkN "Concertos" ; mkN "show" ; } ; --*
lin concerto_N = variants {mkN "concerto" ; mkN "Concerto" ; } ; --*
lin concession_1_N = mkN "concessão" ; --*
lin concession_2_N = mkN "concessão" ; --*
lin concession_3_N = mkN "concessão" ; --*
lin conchology_N = variants {mkN "collecting" ; mkN "Conquiliologia" ; } ; --*
lin concierge_N = mkN "concierge" ; --*
lin conciliate_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "apaziguar") ; mkV2 (mkV "aplacar") ; mkV2 (mkV "pacificar") ; mkV2 (mkV "serenar") ; mkV2 (mkV "sossegar") ; mkV2 (mkV "tranquilizar") ; } ; --*
lin conciliate_2_V2 = variants {mkV2 (mkV "conciliar") ; mkV2 (mkV "reconciliar") ; mkV2 (mkV "up") ; } ; --*
lin conciliate_3_V2 = variants {mkV2 (mkV "ajustar") ; mkV2 (mkV "compatibilizar") ; mkV2 (mkV "conciliar") ; } ; --*
lin conciliation_3_N = mkN "conciliação" ; --*
lin conciliator_N = variants {mkN "conciliador" ; mkN "pacificador" ; } ; --*
lin conciliatory_1_A = mkA "flexível" ; --*
lin concise_A = variants {mkA "conciso" ; mkA "lacónico" ; mkA "lacônico" ; mkA "sucinto" ; } ; --*
lin conclave_N = mkN "conclave" ; --*
lin conclude_1_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "chegar") ; mkVS (mkV "concluir") ; mkVS (mkV "decidir") ; mkVS (mkV "inferir") ; mkVS (mkV "out") ; } ; --*
lin conclude_2_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "concluir") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin conclude_3_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "resolver") ; } ; --*
lin conclude_3_V = variants {mkV "concluir" ; mkV "resolver" ; } ; --*
lin conclude_3_VS = variants {mkVS (mkV "concluir") ; mkVS (mkV "resolver") ; } ; --*
lin conclude_4_V = variants {mkV "acabar" ; mkV "terminar" ; } ; --*
lin conclude_5_V2 = mkV2 (mkV "concluir") ; --*
lin conclusion_1_N = variants {mkN "decisão" ; mkN "determinação" ; mkN "resolução" ; mkN "resoluções" ; } ; --*
lin conclusion_3_N = variants {mkN "acabamento" ; mkN "conclusão" ; mkN "fim" ; mkN "final" ; mkN "point" ; } ; --*
lin conclusion_4_N = variants {mkN "chegada" ; mkN "conclusão" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin conclusion_5_N = mkN "conclusão" ; --*
lin conclusion_6_N = variants {mkN "conclusão" ; mkN "termino" ; } ; --*
lin conclusion_8_N = mkN "conclusão" ; --*
lin conclusion_9_N = variants {mkN "decisão" ; mkN "resolução" ; } ; --*
lin conclusive_A = mkA "conclusivo" ; --*
lin concoct_4_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "of") ; mkV2 (mkV "pensar") ; mkV2 (mkV "up") ; } ; --*
lin concoction_1_N = mkN "mistura" ; --*
lin concoction_2_N = mkN "beberagem" ; --*
lin concoction_4_N = mkN "confecção" ; --*
lin concomitance_N = mkN "concomitância" ; --*
lin concomitant_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin concord_1_N = variants {mkN "Concord" ; mkN "of" ; } ; --*
lin concord_2_N = variants {mkN "acordo" ; mkN "concórdia" ; mkN "conformidade" ; mkN "harmonia" ; mkN "paz" ; } ; --*
lin concord_3_N = mkN "concordância" ; --*
lin concord_5_N = variants {mkN "acordo" ; mkN "concórdia" ; mkN "conformidade" ; mkN "contratos" ; mkN "harmonia" ; } ; --*
lin concordance_1_N = variants {mkN "acordo" ; mkN "concórdia" ; mkN "conformidade" ; mkN "harmonia" ; mkN "paz" ; } ; --*
lin concordance_2_N = variants {mkN "acordo" ; mkN "concórdia" ; mkN "conformidade" ; mkN "contratos" ; mkN "harmonia" ; } ; --*
lin concordant_1_A = mkA "conforme" ; --*
lin concordant_2_A = variants {mkA "concorde" ; mkA "conforme" ; } ; --*
lin concordat_N = variants {mkN "concordata" ; mkN "pacto" ; mkN "tratado" ; } ; --*
lin concourse_1_N = variants {mkN "massa" ; mkN "multidão" ; mkN "povo" ; } ; --*
lin concourse_3_N = mkN "confluência" ; --*
lin concrete_1_A = mkA "concreto" ; --*
lin concrete_2_A = mkA "concreto" ; --*
lin concrete_N = variants {mkN "betão" ; mkN "concreto" ; mkN "Concreto" ; mkN "formigão" ; } ; --*
lin concretion_2_N = variants {mkN "Litíase" ; mkN "pedra" ; mkN "pedras" ; } ; --*
lin concretion_3_N = mkN "compressão" ; --*
lin concretion_4_N = mkN "coalescência" ; --*
lin concubine_N = variants {mkN "concubina" ; mkN "cortesã" ; mkN "odalisca" ; } ; --*
lin concupiscence_N = variants {mkN "attraction" ; mkN "concupiscência" ; mkN "desire" ; mkN "Eros" ; } ; --*
lin concur_1_V = variants {mkV "acordar" ; mkV "concordar" ; } ; --*
lin concur_2_V = mkV "coincidir" ; --*
lin concurrence_1_N = variants {mkN "acordo" ; mkN "conformidade" ; } ; --*
lin concurrence_3_N = variants {mkN "conformidade" ; mkN "of" ; } ; --*
lin concurrence_4_N = variants {mkN "coincidência" ; mkN "conjunção" ; } ; --*
lin concurrent_A = variants {mkA "coincidente" ; mkA "concorrente" ; mkA "simultânea" ; mkA "simultâneo" ; } ; --*
lin concussion_2_N = mkN "Concussão" ; --*
lin condemn_1_V2 = variants {mkV2 (mkV "condenar") ; mkV2 (mkV "desaprovar") ; mkV2 (mkV "reprovar") ; } ; --*
lin condemn_2_V2 = mkV2 (mkV "condenar") ; --*
lin condemn_4_V2 = mkV2 (mkV "condenar") ; --*
lin condemn_5_V2 = variants {mkV2 (mkV "amaldiçoar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "sentenciar") ; } ; --*
lin condemnable_A = mkA "repreensível" ; --*
lin condemnation_1_N = mkN "reprovação" ; --*
lin condemnation_3_N = variants {mkN "maldição" ; mkN "Maldição" ; } ; --*
lin condemnation_5_N = variants {mkN "condenação" ; mkN "of" ; } ; --*
lin condensate_2_N = mkN "condensação" ; --*
lin condensation_2_N = mkN "condensação" ; --*
lin condensation_3_N = mkN "condensação" ; --*
lin condensation_4_N = variants {mkN "compressão" ; mkN "contração" ; } ; --*
lin condensation_5_N = variants {mkN "abreviação" ; mkN "abreviatura" ; mkN "compendio" ; mkN "compêndio" ; mkN "resumo" ; mkN "sumário" ; } ; --*
lin condensation_6_N = mkN "compactação" ; --*
lin condense_1_V = variants {mkV "condensar" ; mkV "destilar" ; } ; --*
lin condense_2_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; } ; --*
lin condense_3_V2 = mkV2 (mkV "condensar") ; --*
lin condenser_1_N = variants {mkN "capacitor" ; mkN "condenser" ; } ; --*
lin condenser_2_N = mkN "Condensador" ; --*
lin condensing_N = mkN "compactação" ; --*
lin condescend_1_V = mkV "condescender" ; --*
lin condescend_2_V = variants {mkV "condescender" ; mkV "descer" ; } ; --*
lin condescend_4_V = mkV "condescender" ; --*
lin condescension_2_N = mkN "condescendência" ; --*
lin condign_A = mkA "capaz" ; --*
lin condiment_N = mkN "condimento" ; --*
lin condition_1_N = variants {mkN "condição" ; mkN "estado" ; mkN "Estado" ; mkN "situação" ; } ; --*
lin condition_2_N = variants {mkN "condição" ; mkN "estipulação" ; mkN "pré-condição" ; } ; --*
lin condition_3_N = mkN "estado" ; --*
lin condition_3_V2 = mkV2 (mkV "estipular") ; --*
lin condition_4_N = variants {mkN "circunstância" ; mkN "consideração" ; } ; --*
lin condition_5_V2 = mkV2 (mkV "condicionar") ; --*
lin condition_7_N = variants {mkN "condição" ; mkN "termo" ; } ; --*
lin conditional_1_A = mkA "condicionado" ; --*
lin conditional_2_A = mkA "condicionado" ; --*
lin conditioner_2_N = variants {mkN "preparador" ; mkN "treinador" ; } ; --*
lin conditioner_3_N = mkN "condicionador" ; --*
lin conditions_2_N = variants {mkN "condição" ; mkN "condições" ; } ; --*
lin conditions_3_N = variants {mkN "clima" ; mkN "condições" ; mkN "condition" ; mkN "vento" ; } ; --*
lin condolence_N = variants {mkN "condolência" ; mkN "pêsame" ; } ; --*
lin condole_V = mkV "prestar" ; --*
lin condominium_2_N = variants {mkN "Condominio" ; mkN "condomínio" ; } ; --*
lin condom_N = variants {mkN "camisa-de-vênus" ; mkN "camisinha" ; mkN "preservativo" ; } ; --*
lin condone_V2 = mkV2 (mkV "escusar") ; --*
lin condor_N = mkN "condor" ; --*
lin conducive_A = mkA "favorável" ; --*
lin conduct_1_N = variants {mkN "comportamento" ; mkN "conduta" ; } ; --*
lin conduct_1_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "lidar") ; mkV2 (mkV "on") ; } ; --*
lin conduct_2_N = variants {mkN "comportamento" ; mkN "conduta" ; mkN "maneira" ; mkN "procedimento" ; } ; --*
lin conduct_2_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "reger") ; } ; --*
lin conduct_3_V = variants {mkV "comportar-se" ; mkV "conduzir" ; mkV "resistir" ; } ; --*
lin conduct_4_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "levar") ; } ; --*
lin conduct_5_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin conduct_6_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "reger") ; } ; --*
lin conductance_N = mkN "condutância" ; --*
lin conducting_2_N = variants {mkN "maestro" ; mkN "Maestros" ; } ; --*
lin conduction_N = variants {mkN "condução" ; mkN "condutividade" ; } ; --*
lin conductivity_N = variants {mkN "condução" ; mkN "condutividade" ; } ; --*
lin conductor_1_N = variants {mkN "director" ; mkN "maestro" ; } ; --*
lin conductor_2_N = mkN "condutor" ; --*
lin conductor_3_N = mkN "condutor" ; --*
lin conductor_4_N = mkN "condutor" ; --*
lin conductress_N = mkN "condutora" ; --*
lin conduit_N = variants {mkN "aqueduto" ; mkN "canal" ; mkN "conduto" ; mkN "ducto" ; mkN "duto" ; } ; --*
lin cone_1_N = variants {mkN "casquinha" ; mkN "cone" ; mkN "Cone" ; } ; --*
lin cone_2_N = variants {mkN "cone" ; mkN "shape" ; } ; --*
lin cone_3_N = variants {mkN "estróbilo" ; mkN "pinha" ; } ; --*
lin cone_4_N = variants {mkN "cell" ; mkN "cone" ; } ; --*
lin coney_4_N = variants {mkN "coelho" ; mkN "lebre" ; } ; --*
lin confab_1_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin confab_2_V = variants {mkV "confabular" ; mkV "conferir" ; mkV "consultar" ; } ; --*
lin confab_N = variants {mkN "bate-papo" ; mkN "conversa" ; } ; --*
lin confabulate_1_V = mkV "confabular" ; --*
lin confabulate_2_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin confabulate_3_V = variants {mkV "confabular" ; mkV "conferir" ; mkV "consultar" ; } ; --*
lin confabulation_1_N = variants {mkN "bate-papo" ; mkN "conversa" ; } ; --*
lin confabulation_2_N = mkN "confabulação" ; --*
lin confection_2_N = mkN "confecção" ; --*
lin confectionery_2_N = variants {mkN "pastelaria" ; mkN "store" ; } ; --*
lin confederacy_1_N = variants {mkN "Estados" ; mkN "States" ; } ; --*
lin confederacy_2_N = variants {mkN "confederação" ; mkN "federação" ; mkN "união" ; } ; --*
lin confederate_2_A = variants {mkA "aliado" ; mkA "confederativo" ; } ; --*
lin confederate_2_V2 = variants {mkV2 (mkV "confederar") ; mkV2 (mkV "unir") ; } ; --*
lin confederate_2_V = variants {mkV "confederar" ; mkV "unir" ; } ; --*
lin confederate_3_N = mkN "cúmplice" ; --*
lin confederation_1_N = mkN "aliança" ; --*
lin confederation_2_N = variants {mkN "confederação" ; mkN "federação" ; mkN "união" ; } ; --*
lin confederation_3_N = variants {mkN "aliança" ; mkN "confederação" ; mkN "Confederação" ; } ; --*
lin confer_1_V = variants {mkV "confabular" ; mkV "conferir" ; mkV "consultar" ; } ; --*
lin confer_2_V = variants {mkV "conceder" ; mkV "conferir" ; mkV "outorgar" ; } ; --*
lin conference_1_N = mkN "conferência" ; --*
lin conference_2_N = variants {mkN "légua" ; mkN "liga" ; mkN "ordem" ; } ; --*
lin conference_3_N = variants {mkN "conferência" ; mkN "discussion" ; } ; --*
lin conferrer_1_N = variants {mkN "doador" ; mkN "patrocinador" ; } ; --*
lin confess_1_V2 = mkV2 (mkV "confessar") ; --*
lin confess_1_V = mkV "confessar" ; --*
lin confess_1_VS = mkVS (mkV "confessar") ; --*
lin confess_2_VS = variants {mkVS (mkV "admitir") ; mkVS (mkV "confessar") ; } ; --*
lin confess_3_V2 = mkV2 (mkV "confessar") ; --*
lin confess_3_V = mkV "confessar" ; --*
lin confess_3_VS = mkVS (mkV "confessar") ; --*
lin confessedly_Adv = mkAdv "reconhecidamente" ; --*
lin confession_1_N = mkN "confissão" ; --*
lin confession_2_N = mkN "confissão" ; --*
lin confession_3_N = mkN "confissão" ; --*
lin confessional_N = mkN "confessionário" ; --*
lin confessor_1_N = mkN "confessor" ; --*
lin confidantFem_N = mkN "confidente" ; --*
lin confidantMasc_N = mkN "confidente" ; --*
lin confide_1_V2 = mkV2 (mkV "confidenciar") ; --*
lin confide_1_V = mkV "confidenciar" ; --*
lin confide_1_VS = mkVS (mkV "confidenciar") ; --*
lin confide_2_V2 = variants {mkV2 (mkV "comissionar") ; mkV2 (mkV "confiar") ; mkV2 (mkV "encarregar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "incumbir") ; mkV2 (mkV "ter") ; } ; --*
lin confidence_1_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "certeza" ; mkN "desembaraço" ; mkN "fé" ; mkN "pose" ; } ; --*
lin confidence_2_N = mkN "confiança" ; --*
lin confidence_3_N = mkN "confiança" ; --*
lin confidence_4_N = mkN "fé" ; --*
lin confidence_5_N = mkN "confidência" ; --*
lin confident_1_A = mkA "confiante" ; --*
lin confidential_1_A = mkA "confidencial" ; --*
lin confidential_2_A = mkA "confidencial" ; --*
lin confidential_3_A = mkA "confidencial" ; --*
lin confidential_4_A = mkA "confidencial" ; --*
lin confidentiality_1_N = variants {mkN "caráter" ; mkN "confidencialidade" ; } ; --*
lin confidentiality_2_N = mkN "caráter" ; --*
lin configuration_1_N = variants {mkN "configuração" ; mkN "Configuração" ; } ; --*
lin configuration_2_N = mkN "contorno" ; --*
lin configurational_A = mkA "configuracional" ; --*
lin configure_V2 = mkV2 (mkV "configurar") ; --*
lin confine_1_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin confine_4_V2 = variants {mkV2 (mkV "confinar") ; mkV2 (mkV "deter") ; mkV2 (mkV "prender") ; } ; --*
lin confine_5_V2 = variants {mkV2 (mkV "confinar") ; mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; mkV2 (mkV "reter") ; } ; --*
lin confinement_2_N = mkN "confinamento" ; --*
lin confinement_3_N = mkN "confinamento" ; --*
lin confinement_4_N = mkN "restrição" ; --*
lin confirm_1_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "corroborar") ; mkV2 (mkV "provar") ; mkV2 (mkV "substanciar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; } ; --*
lin confirm_3_V2 = mkV2 (mkV "confirmar") ; --*
lin confirm_4_V2 = mkV2 (mkV "confirmar") ; --*
lin confirm_5_V2 = mkV2 (mkV "crismar") ; --*
lin confirmable_A = variants {mkA "capaz" ; mkA "confirmável" ; mkA "testável" ; } ; --*
lin confirmation_1_N = variants {mkN "confirmação" ; mkN "crisma" ; mkN "verificação" ; } ; --*
lin confirmation_2_N = variants {mkN "confirmação" ; mkN "ratificação" ; } ; --*
lin confirmation_3_N = mkN "ratificação" ; --*
lin confirmation_5_N = variants {mkN "confirmação" ; mkN "crisma" ; mkN "Crisma" ; } ; --*
lin confiscate_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "confiscar") ; } ; --*
lin confiscation_N = mkN "Confiscação" ; --*
lin conflagration_N = variants {mkN "fogo" ; mkN "incêndio" ; mkN "Incêndios" ; } ; --*
lin conflict_1_N = variants {mkN "conflito" ; mkN "luta" ; } ; --*
lin conflict_2_V = variants {mkV "afoul" ; mkV "infringir" ; } ; --*
lin conflict_3_N = variants {mkN "batalha" ; mkN "combate" ; mkN "luta" ; } ; --*
lin conflict_4_N = variants {mkN "conflito" ; mkN "confronto" ; mkN "recontro" ; } ; --*
lin conflict_5_N = variants {mkN "conflito" ; mkN "Conflitos" ; } ; --*
lin conflict_7_N = variants {mkN "controvérsia" ; mkN "discordância" ; mkN "disputa" ; mkN "of" ; mkN "querela" ; } ; --*
lin confluence_1_N = mkN "confluencia" ; --*
lin confluence_3_N = mkN "confluência" ; --*
lin conform_1_V2 = variants {mkV2 (mkV "amoldar") ; mkV2 (mkV "amoldar-se") ; mkV2 (mkV "conformar") ; mkV2 (mkV "conformar-se") ; } ; --*
lin conform_1_V = variants {mkV "amoldar" ; mkV "amoldar-se" ; mkV "conformar" ; mkV "conformar-se" ; } ; --*
lin conform_2_V = variants {mkV "adaptar-se" ; mkV "adequar-se" ; mkV "ajustar" ; } ; --*
lin conformable_3_A = mkA "conforme" ; --*
lin conformation_2_N = mkN "contorno" ; --*
lin conformation_3_N = mkN "conformidade" ; --*
lin conformist_N = mkN "conformista" ; --*
lin conformity_1_N = mkN "conformidade" ; --*
lin conformity_2_N = mkN "conformidade" ; --*
lin conformity_3_N = variants {mkN "conformidade" ; mkN "conformismo" ; } ; --*
lin conformity_4_N = variants {mkN "acordo" ; mkN "ajuste" ; mkN "concordância" ; mkN "conformidade" ; mkN "convenção" ; } ; --*
lin confound_1_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "enrolar") ; mkV2 (mkV "perplexar") ; } ; --*
lin confound_2_V2 = mkV2 (mkV "confundir") ; --*
lin confounding_A = mkA "contraditório" ; --*
lin confront_1_V2 = variants {mkV2 (mkV "confrontar") ; mkV2 (mkV "defrontar") ; mkV2 (mkV "encarar") ; } ; --*
lin confront_2_V2 = variants {mkV2 (mkV "confrontar") ; mkV2 (mkV "defrontar") ; mkV2 (mkV "enfrentar") ; mkV2 (mkV "up") ; } ; --*
lin confront_4_V2 = mkV2 (mkV "confrontar") ; --*
lin confrontation_1_N = variants {mkN "confrontação" ; mkN "confronto" ; } ; --*
lin confrontation_2_N = mkN "confronto" ; --*
lin confrontation_3_N = mkN "enfrentamento" ; --*
lin confrontation_4_N = variants {mkN "confronto" ; mkN "oposição" ; } ; --*
lin confront_with_V3 = variants {mkV3 (mkV "atacar") ; mkV3 (mkV "confrontar") ; mkV3 (mkV "deparar") ; } ; --*
lin confuse_1_V2 = mkV2 (mkV "confundir") ; --*
lin confuse_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "enrolar") ; mkV2 (mkV "perplexar") ; } ; --*
lin confuse_3_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "disconcertar") ; mkV2 (mkV "off") ; } ; --*
lin confuse_4_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "misturar") ; mkV2 (mkV "up") ; } ; --*
lin confuse_5_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "obnubilar") ; mkV2 (mkV "obscurecer") ; } ; --*
lin confused_1_A = variants {mkA "perplexo" ; mkA "sea" ; } ; --*
lin confused_2_A = variants {mkA "confundido" ; mkA "confuso" ; mkA "perplexo" ; } ; --*
lin confused_3_A = mkA "perplexo" ; --*
lin confused_4_A = mkA "perplexo" ; --*
lin confused_5_A = mkA "perplexo" ; --*
lin confusing_2_A = variants {mkA "confuso" ; mkA "desconcertante" ; mkA "intrigante" ; } ; --*
lin confusion_3_N = mkN "confusão" ; --*
lin confusion_5_N = mkN "confusão" ; --*
lin conga_1_N = mkN "conga" ; --*
lin congee_1_N = mkN "canja" ; --*
lin congener_3_N = mkN "congênere" ; --*
lin congeneric_1_A = variants {mkA "congénere" ; mkA "congênere" ; } ; --*
lin congenial_1_A = variants {mkA "congenial" ; mkA "útil" ; } ; --*
lin congenial_2_A = mkA "congenial" ; --*
lin congenital_A = variants {mkA "congénito" ; mkA "congênito" ; mkA "inata" ; mkA "inato" ; } ; --*
lin conger_eel_N = variants {mkN "congro" ; mkN "eel" ; } ; --*
lin conger_N = variants {mkN "congro" ; mkN "eel" ; } ; --*
lin congestion_1_N = mkN "congestão" ; --*
lin congestive_A = mkA "congestivo" ; --*
lin conglomerate_1_N = variants {mkN "conglomerado" ; mkN "stone" ; } ; --*
lin conglomerate_2_N = variants {mkN "conglomerado" ; mkN "império" ; } ; --*
lin conglomerate_V = variants {mkV "acumular" ; mkV "aglomerar" ; mkV "amontoar" ; mkV "conglomerar" ; mkV "up" ; } ; --*
lin conglomeration_2_N = variants {mkN "aglomeração" ; mkN "agregação" ; mkN "agregado" ; } ; --*
lin conglomeration_3_N = mkN "conglomeração" ; --*
lin congo_1_PN = variants {mkPN "Congo" ; mkPN "Congo-Kinshasa" ; mkPN "Republic" ; } ; --*
lin congo_2_PN = variants {mkPN "Congo" ; mkPN "River" ; } ; --*
lin congo_3_PN = variants {mkPN "Congo" ; mkPN "Congo-Brazzaville" ; mkPN "of" ; } ; --*
lin congolese_A = variants {mkA "congolense" ; mkA "congolês" ; } ; --*
lin congolese_N = variants {mkN "congolense" ; mkN "congolês" ; } ; --*
lin congratulate_1_V2 = mkV2 (mkV "parabenizar") ; --*
lin congratulate_2_V2 = variants {mkV2 (mkV "felicitar") ; mkV2 (mkV "parabenizar") ; } ; --*
lin congratulate_3_V2 = variants {mkV2 (mkV "congratular") ; mkV2 (mkV "orgulhar") ; } ; --*
lin congratulation_1_N = variants {mkN "congratulação" ; mkN "felicitação" ; mkN "parabéns" ; } ; --*
lin congregate_V = mkV "reunir-se" ; --*
lin congregation_1_N = mkN "congregação" ; --*
lin congregation_3_N = variants {mkN "congregação" ; mkN "reunião" ; } ; --*
lin congregational_2_A = mkA "congressional" ; --*
lin congress_1_N = variants {mkN "Congress" ; mkN "congresso" ; mkN "States" ; } ; --*
lin congress_2_N = variants {mkN "congresso" ; mkN "Congresso" ; mkN "congressos" ; mkN "Legislaturas" ; } ; --*
lin congress_3_N = mkN "congresso" ; --*
lin congress_4_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; mkN "reunião" ; mkN "together" ; } ; --*
lin congressman_N = variants {mkN "congressista" ; mkN "parlamentar" ; } ; --*
lin congresswoman_N = variants {mkN "congressista" ; mkN "parlamentar" ; } ; --*
lin congruent_2_A = variants {mkA "congruente" ; mkA "proporcionado" ; } ; --*
lin conic_A = variants {mkA "cónico" ; mkA "cônico" ; } ; --*
lin conical_A = variants {mkA "cónico" ; mkA "cônico" ; } ; --*
lin conidium_N = mkN "conídio" ; --*
lin conifer_N = variants {mkN "árvores" ; mkN "conífera" ; mkN "tree" ; } ; --*
lin conjectural_A = mkA "hipotético" ; --*
lin conjecture_1_N = variants {mkN "hipótese" ; mkN "suposição" ; } ; --*
lin conjecture_2_N = variants {mkN "conjectura" ; mkN "especulação" ; mkN "fazerdeconta" ; mkN "hipótese" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin conjecture_3_N = mkN "hipótese" ; --*
lin conjecture_V2 = variants {mkV2 (mkV "conjecturar") ; mkV2 (mkV "supor") ; mkV2 (mkV "teorizar") ; } ; --*
lin conjecture_V = variants {mkV "conjecturar" ; mkV "supor" ; mkV "teorizar" ; } ; --*
lin conjoin_1_V = variants {mkV "juntar" ; mkV "unir" ; } ; --*
lin conjoin_2_V2 = variants {mkV2 (mkV "casar") ; mkV2 (mkV "esposar") ; mkV2 (mkV "hitched") ; mkV2 (mkV "juntar") ; mkV2 (mkV "married") ; mkV2 (mkV "up") ; } ; --*
lin conjugal_A = mkA "conjugal" ; --*
lin conjugate_3_A = mkA "conjugado" ; --*
lin conjugation_1_N = variants {mkN "conjunção" ; mkN "ligação" ; } ; --*
lin conjugation_2_N = mkN "conjugação" ; --*
lin conjugation_5_N = variants {mkN "Acasalamento" ; mkN "acoplamento" ; mkN "Cópula" ; mkN "union" ; } ; --*
lin conjugation_6_N = variants {mkN "junção" ; mkN "unificação" ; } ; --*
lin conjunct_3_A = variants {mkA "consertado" ; mkA "cooperativo" ; } ; --*
lin conjunction_1_N = variants {mkN "coincidência" ; mkN "conjunção" ; } ; --*
lin conjunction_2_N = variants {mkN "conjunção" ; mkN "ligação" ; } ; --*
lin conjunction_3_N = variants {mkN "conectivo" ; mkN "conjunção" ; } ; --*
lin conjunction_4_N = mkN "conjunção" ; --*
lin conjunction_5_N = variants {mkN "conjunção" ; mkN "Conjunção" ; } ; --*
lin conjunction_6_N = variants {mkN "conjunção" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin conjunctiva_N = mkN "conjuntiva" ; --*
lin conjunctive_2_A = variants {mkA "consertado" ; mkA "cooperativo" ; } ; --*
lin conjunctive_N = variants {mkN "conectivo" ; mkN "conjunção" ; } ; --*
lin conjunctivitis_N = mkN "conjuntivite" ; --*
lin conjuration_1_N = variants {mkN "encantamento" ; mkN "feitiço" ; } ; --*
lin conjuration_2_N = variants {mkN "conjuração" ; mkN "conjuro" ; mkN "invocação" ; } ; --*
lin conjuration_3_N = variants {mkN "ilusão" ; mkN "magia" ; mkN "trick" ; mkN "truque" ; } ; --*
lin conjure_2_V2 = variants {mkV2 (mkV "implorar") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin conjure_3_V2 = variants {mkV2 (mkV "conchavar") ; mkV2 (mkV "conjurar") ; mkV2 (mkV "conspirar") ; mkV2 (mkV "maquinar") ; } ; --*
lin conjurer_1_N = variants {mkN "ilusionista" ; mkN "Magician" ; } ; --*
lin conjurer_2_N = variants {mkN "man" ; mkN "pagé" ; } ; --*
lin conjuring_N = variants {mkN "conjuração" ; mkN "conjuro" ; mkN "invocação" ; } ; --*
lin conjuror_1_N = variants {mkN "ilusionista" ; mkN "Magician" ; } ; --*
lin conjuror_2_N = variants {mkN "man" ; mkN "pagé" ; } ; --*
lin conk_1_V = mkV "parar" ; --*
lin conk_3_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin conk_4_V = variants {mkV "desfalecer" ; mkV "desmaiar" ; mkV "esvanecer" ; mkV "out" ; } ; --*
lin conk_out_1_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin con_man_N = variants {mkN "artist" ; mkN "man" ; } ; --*
lin connate_2_A = mkA "afim" ; --*
lin connect_1_V2 = variants {mkV2 (mkV "juntar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "unir") ; mkV2 (mkV "up") ; } ; --*
lin connect_2_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "in") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "up") ; } ; --*
lin connect_3_V2 = variants {mkV2 (mkV "conectar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "unir") ; mkV2 (mkV "up") ; } ; --*
lin connect_4_V = mkV "conectar" ; --*
lin connected_1_A = variants {mkA "afiliado" ; mkA "filiado" ; } ; --*
lin connecticut_1_PN = variants {mkPN "Connecticut" ; mkPN "State" ; } ; --*
lin connecticut_3_PN = mkPN "Connecticut" ; --*
lin connection_1_N = variants {mkN "ligação" ; mkN "relação" ; } ; --*
lin connection_2_N = variants {mkN "conexão" ; mkN "ligação" ; } ; --*
lin connection_3_N = variants {mkN "conector" ; mkN "ligação" ; } ; --*
lin connection_4_N = mkN "conexão" ; --*
lin connection_5_N = variants {mkN "associação" ; mkN "conexão" ; } ; --*
lin connection_6_N = mkN "ligação" ; --*
lin connection_8_N = variants {mkN "baldeação" ; mkN "conexão" ; } ; --*
lin connection_9_N = mkN "ligação" ; --*
lin connective_1_N = variants {mkN "conectivo" ; mkN "conjunção" ; } ; --*
lin connective_2_N = variants {mkN "conector" ; mkN "ligação" ; } ; --*
lin connectivity_N = mkN "conectividade" ; --*
lin connector_1_N = variants {mkN "conector" ; mkN "ligação" ; } ; --*
lin connexion_1_N = mkN "ligação" ; --*
lin connexion_2_N = variants {mkN "ligação" ; mkN "relação" ; } ; --*
lin connexion_3_N = variants {mkN "associação" ; mkN "conexão" ; } ; --*
lin connexion_4_N = variants {mkN "conector" ; mkN "ligação" ; } ; --*
lin connexion_5_N = variants {mkN "baldeação" ; mkN "conexão" ; } ; --*
lin connexion_6_N = mkN "ligação" ; --*
lin connivance_1_N = mkN "conspiração" ; --*
lin connivance_2_N = variants {mkN "approval" ; mkN "consent" ; mkN "conspiração" ; } ; --*
lin connive_1_V = mkV "conivir" ; --*
lin connive_2_V = mkV "intrigar" ; --*
lin connoisseur_N = variants {mkN "conhecedor" ; mkN "connaisseur" ; mkN "entendido" ; mkN "perito" ; } ; --*
lin connotation_1_N = mkN "significado" ; --*
lin connotation_2_N = mkN "conotação" ; --*
lin connotative_A = variants {mkA "conotativa" ; mkA "conotativo" ; } ; --*
lin connote_1_V2 = variants {mkV2 (mkV "conotar") ; mkV2 (mkV "implicar") ; } ; --*
lin connubial_A = mkA "conjugal" ; --*
lin conodont_2_N = variants {mkN "conodonta" ; mkN "Conodonta" ; } ; --*
lin conquer_1_V2 = variants {mkV2 (mkV "conquistar") ; mkV2 (mkV "down") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "sufocar") ; mkV2 (mkV "suprimir") ; } ; --*
lin conquer_2_V2 = variants {mkV2 (mkV "apropriar-se") ; mkV2 (mkV "capturar") ; mkV2 (mkV "conquistar") ; } ; --*
lin conquer_3_V2 = mkV2 (mkV "conquistar") ; --*
lin conqueror_N = mkN "conquistador" ; --*
lin conquest_1_N = mkN "conquista" ; --*
lin conquest_2_N = mkN "conquista" ; --*
lin conquest_3_N = variants {mkN "conquista" ; mkN "sedução" ; } ; --*
lin conquistador_N = variants {mkN "conquistador" ; mkN "Conquistadores" ; } ; --*
lin consanguinity_N = variants {mkN "consanguinidade" ; mkN "kinship" ; } ; --*
lin conscience_1_N = variants {mkN "consciência" ; mkN "of" ; mkN "sense" ; } ; --*
lin conscience_2_N = mkN "consciência" ; --*
lin conscienceless_A = mkA "sem" ; --*
lin conscientious_1_A = variants {mkA "consciencioso" ; mkA "consciensiosamente" ; } ; --*
lin conscious_1_A = mkA "consciente" ; --*
lin conscious_2_A = mkA "consciente" ; --*
lin consciousness_1_N = variants {mkN "consciência" ; mkN "Estudos" ; } ; --*
lin consciousness_2_N = variants {mkN "conhecimento" ; mkN "consciência" ; mkN "saber" ; mkN "sentimento" ; } ; --*
lin conscription_N = variants {mkN "alistamento" ; mkN "conscrição" ; mkN "service" ; } ; --*
lin conscript_N = mkN "recruta" ; --*
lin conscript_V2 = mkV2 (mkV "alistar") ; --*
lin consecrate_1_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "sagrar") ; } ; --*
lin consecrate_2_V2 = variants {mkV2 (mkV "comprometer") ; mkV2 (mkV "dedicar") ; } ; --*
lin consecrate_3_V2 = mkV2 (mkV "consagrar") ; --*
lin consecrate_4_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "santificar") ; } ; --*
lin consecration_2_N = mkN "consagração" ; --*
lin consecutive_2_A = variants {mkA "sequencial" ; mkA "seqüencial" ; mkA "sucessivo" ; } ; --*
lin consecutive_3_A = mkA "consecutivo" ; --*
lin consecutive_Adv = mkAdv "sequencialmente" ; --*
lin consensual_A = mkA "consensual" ; --*
lin consensus_N = variants {mkN "acordo" ; mkN "consenso" ; } ; --*
lin consentaneous_A = mkA "unânime" ; --*
lin consent_N = mkN "consentimento" ; --*
lin consent_V2V = variants {mkV2V (mkV "aceitar") ; mkV2V (mkV "aprovar") ; mkV2V (mkV "concordar") ; mkV2V (mkV "consentir") ; mkV2V (mkV "for") ; } ; --*
lin consent_V = variants {mkV "aceitar" ; mkV "aprovar" ; mkV "concordar" ; mkV "consentir" ; mkV "for" ; } ; --*
lin consequence_1_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin consequence_2_N = mkN "conseqüência" ; --*
lin consequence_3_N = variants {mkN "consequência" ; mkN "importância" ; } ; --*
lin consequent_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin conservation_1_N = mkN "conservação" ; --*
lin conservation_2_N = mkN "conservação" ; --*
lin conservatism_1_N = variants {mkN "conservadorismo" ; mkN "Conservadorismo" ; } ; --*
lin conservative_1_A = mkA "conservador" ; --*
lin conservative_1_N = mkN "conservador" ; --*
lin conservative_2_A = mkA "conservador" ; --*
lin conservative_3_A = mkA "cauteloso" ; --*
lin conservative_5_A = variants {mkA "burguês" ; mkA "burguesa" ; } ; --*
lin conservatoire_N = mkN "conservatório" ; --*
lin conservator_1_N = mkN "curador" ; --*
lin conservatory_1_N = mkN "conservatório" ; --*
lin conservatory_2_N = mkN "conservatório" ; --*
lin conservatory_3_N = variants {mkN "estufa" ; mkN "garden" ; mkN "viveiro" ; } ; --*
lin conserve_1_N = mkN "conservas" ; --*
lin conserve_1_V2 = mkV2 (mkV "conservar") ; --*
lin conserve_2_V2 = variants {mkV2 (mkV "acautelar") ; mkV2 (mkV "up") ; } ; --*
lin conserve_3_V2 = variants {mkV2 (mkV "economizar") ; mkV2 (mkV "poupar") ; } ; --*
lin consider_1_V2V = variants {mkV2V (mkV "achar") ; mkV2V (mkV "considerar") ; mkV2V (mkV "ver") ; } ; --*
lin consider_2_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "julgar") ; mkV2 (mkV "pensar") ; } ; --*
lin consider_3_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "considerar") ; } ; --*
lin consider_4_VS = variants {mkVS (mkV "considerar") ; mkVS (mkV "contar") ; mkVS (mkV "pesar") ; } ; --*
lin consider_5_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "deliberar") ; mkV2 (mkV "over") ; } ; --*
lin consider_6_V2A = variants {mkV2A (mkV "achar") ; mkV2A (mkV "pensar") ; } ; --*
lin consider_6_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "pensar") ; } ; --*
lin consider_6_V = variants {mkV "achar" ; mkV "pensar" ; } ; --*
lin consider_6_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "pensar") ; } ; --*
lin consider_7_V2A = variants {mkV2A (mkV "mirar") ; mkV2A (mkV "olhar") ; mkV2A (mkV "ver") ; } ; --*
lin consider_7_V2 = variants {mkV2 (mkV "mirar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin consider_7_V2V = variants {mkV2V (mkV "mirar") ; mkV2V (mkV "olhar") ; mkV2V (mkV "ver") ; } ; --*
lin consider_7_V3 = variants {mkV3 (mkV "mirar") ; mkV3 (mkV "olhar") ; mkV3 (mkV "ver") ; } ; --*
lin consider_7_V = variants {mkV "mirar" ; mkV "olhar" ; mkV "ver" ; } ; --*
lin consider_7_VS = variants {mkVS (mkV "mirar") ; mkVS (mkV "olhar") ; mkVS (mkV "ver") ; } ; --*
lin consider_7_VV = variants {mkVV (mkV "mirar") ; mkVV (mkV "olhar") ; mkVV (mkV "ver") ; } ; --*
lin consider_8_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "ver") ; } ; --*
lin consider_9_V2 = mkV2 (mkV "considerar") ; --*
lin considerable_A = mkA "considerável" ; --*
lin considerateness_N = mkN "consideração" ; --*
lin consideration_1_N = variants {mkN "consideração" ; mkN "reflexão" ; } ; --*
lin consideration_2_N = variants {mkN "circunstância" ; mkN "consideração" ; } ; --*
lin consideration_3_N = mkN "consideração" ; --*
lin consideration_4_N = mkN "consideração" ; --*
lin consign_2_V2 = mkV2 (mkV "consignar") ; --*
lin consignee_N = mkN "destinatário" ; --*
lin consignment_1_N = mkN "carga" ; --*
lin consignment_3_N = mkN "consignação" ; --*
lin consist_1_V = variants {mkV "existir" ; mkV "in" ; } ; --*
lin consist_4_V = mkV "consistir" ; --*
lin consistence_1_N = mkN "consistência" ; --*
lin consistence_2_N = variants {mkN "consistência" ; mkN "viscosidade" ; } ; --*
lin consistency_1_N = variants {mkN "consistência" ; mkN "viscosidade" ; } ; --*
lin consistency_2_N = mkN "consistência" ; --*
lin consistent_3_A = variants {mkA "coerente" ; mkA "consequente" ; mkA "conseqüente" ; mkA "lógico" ; } ; --*
lin consistent_with_A2 = mkA2 (mkA "consistente") noPrep ; --*
lin consolable_A = mkA "consolável" ; --*
lin consolation_1_N = mkN "consolo" ; --*
lin consolation_2_N = variants {mkN "conforto" ; mkN "consolação" ; mkN "consolo" ; } ; --*
lin console_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "confortar") ; mkV2 (mkV "consolar") ; mkV2 (mkV "reconfortar") ; } ; --*
lin consolidate_1_V = variants {mkV "consolidar" ; mkV "consolidar-se" ; } ; --*
lin consolidate_2_V2 = mkV2 (mkV "consolidar") ; --*
lin consolidate_3_V2 = mkV2 (mkV "consolidar") ; --*
lin consolidate_4_V = mkV "consolidar" ; --*
lin consolidate_5_V2 = mkV2 (mkV "consolidar") ; --*
lin consolidation_1_N = mkN "consolidação" ; --*
lin consolidation_2_N = mkN "integração" ; --*
lin consonant_1_A = mkA "consonante" ; --*
lin consonant_1_N = variants {mkN "consoante" ; mkN "Consoantes" ; } ; --*
lin consonant_2_A = mkA "conforme" ; --*
lin consonant_2_N = mkN "consoante" ; --*
lin consort_1_N = mkN "consorte" ; --*
lin consort_1_V = mkV "associar" ; --*
lin consort_2_V = variants {mkV "compatibilizar" ; mkV "concordar" ; mkV "estar" ; mkV "harmonizar" ; mkV "in" ; } ; --*
lin consort_3_V = mkV "consorciar" ; --*
lin consortium_N = variants {mkN "consórcio" ; mkN "sindicato" ; } ; --*
lin conspectus_N = variants {mkN "resumo" ; mkN "sumário" ; } ; --*
lin conspicuous_1_A = variants {mkA "conspícuo" ; mkA "proeminente" ; mkA "saliente" ; } ; --*
lin conspiracy_2_N = variants {mkN "conjuração" ; mkN "conspiração" ; } ; --*
lin conspirator_1_N = mkN "conspirado" ; --*
lin conspiratorial_A = mkA "conspiratório" ; --*
lin conspire_1_V2 = variants {mkV2 (mkV "conchavar") ; mkV2 (mkV "conjurar") ; mkV2 (mkV "conspirar") ; mkV2 (mkV "maquinar") ; } ; --*
lin conspire_2_V2V = mkV2V (mkV "conspirar") ; --*
lin constable_2_N = variants {mkN "Constable" ; mkN "John" ; } ; --*
lin constable_3_N = variants {mkN "Condestável" ; mkN "constable" ; } ; --*
lin constabulary_N = variants {mkN "force" ; mkN "lei" ; mkN "polícia" ; } ; --*
lin constance_1_PN = variants {mkPN "Constance" ; mkPN "Lago" ; } ; --*
lin constance_2_PN = variants {mkPN "Concílio" ; mkPN "of" ; } ; --*
lin constancy_3_N = mkN "constância" ; --*
lin constant_1_A = mkA "constante" ; --*
lin constant_2_A = mkA "constante" ; --*
lin constant_2_N = mkN "constante" ; --*
lin constant_3_A = variants {mkA "constante" ; mkA "contínuo" ; mkA "incessante" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin constantan_N = mkN "Konstantan" ; --*
lin constellation_1_N = variants {mkN "configuração" ; mkN "Configuração" ; } ; --*
lin constellation_2_N = mkN "constelação" ; --*
lin consternation_N = variants {mkN "consternação" ; mkN "estupefação" ; mkN "medo" ; } ; --*
lin constipate_1_V2 = mkV2 (mkV "entupir") ; --*
lin constipate_2_V2 = mkV2 (mkV "constipar") ; --*
lin constipation_1_N = variants {mkN "obstipação" ; mkN "prisão" ; mkN "Prisão" ; } ; --*
lin constituency_N = variants {mkN "constituintes" ; mkN "eleitores" ; mkN "votantes" ; } ; --*
lin constituent_1_N = variants {mkN "componente" ; mkN "parte" ; } ; --*
lin constituent_3_N = variants {mkN "categoria" ; mkN "componente" ; mkN "part" ; mkN "parte" ; mkN "porção" ; } ; --*
lin constituent_4_N = variants {mkN "constituent" ; mkN "constituinte" ; } ; --*
lin constituent_5_N = variants {mkN "componente" ; mkN "fator" ; mkN "parte" ; } ; --*
lin constituent_A = variants {mkA "constitucional" ; mkA "constituinte" ; mkA "orgânico" ; } ; --*
lin constitute_1_V2 = variants {mkV2 (mkV "representar") ; mkV2 (mkV "up") ; } ; --*
lin constitute_2_V2 = mkV2 (mkV "nomear") ; --*
lin constitute_3_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "constituir") ; mkV2 (mkV "enquadrar") ; mkV2 (mkV "estabelecer") ; } ; --*
lin constitute_4_V2 = variants {mkV2 (mkV "constituir") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fundar") ; } ; --*
lin constitution_1_N = variants {mkN "constituição" ; mkN "law" ; } ; --*
lin constitution_2_N = variants {mkN "constituição" ; mkN "estabelecimento" ; mkN "organização" ; } ; --*
lin constitution_3_N = variants {mkN "Constituição" ; mkN "Constitution" ; mkN "of" ; mkN "States" ; } ; --*
lin constitution_4_N = variants {mkN "composição" ; mkN "composition" ; mkN "constituição" ; mkN "estrutura" ; } ; --*
lin constitutional_1_A = mkA "constitucional" ; --*
lin constitutional_2_A = mkA "constitucional" ; --*
lin constitutional_3_A = mkA "inerente" ; --*
lin constitutional_4_A = variants {mkA "constitucional" ; mkA "constituinte" ; mkA "orgânico" ; } ; --*
lin constitutionalism_1_N = mkN "constitucionalismo" ; --*
lin constitutionalism_2_N = mkN "constitucionalismo" ; --*
lin constitutionalist_N = mkN "constitucionalista" ; --*
lin constitutionalize_2_V2 = mkV2 (mkV "constitucionalizar") ; --*
lin constitutive_A = variants {mkA "constitucional" ; mkA "constituinte" ; mkA "orgânico" ; } ; --*
lin constrain_1_V2 = variants {mkV2 (mkV "impor") ; mkV2 (mkV "obrigar") ; } ; --*
lin constrain_2_V2 = variants {mkV2 (mkV "confinar") ; mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; mkV2 (mkV "reter") ; } ; --*
lin constraint_1_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin constraint_2_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin constraint_3_N = mkN "restrição" ; --*
lin constrict_1_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "contrair") ; } ; --*
lin constrict_2_V2 = mkV2 (mkV "apertar") ; --*
lin constriction_1_N = variants {mkN "constricção" ; mkN "ponto" ; } ; --*
lin construct_1_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "edificar") ; } ; --*
lin construct_2_V2 = mkV2 (mkV "fabricar") ; --*
lin construct_6_V2 = variants {mkV2 (mkV "reconstruir") ; mkV2 (mkV "retraçar") ; } ; --*
lin construction_1_N = variants {mkN "construção" ; mkN "edificação" ; } ; --*
lin construction_4_N = variants {mkN "edifício" ; mkN "estrutura" ; mkN "tecido" ; } ; --*
lin construction_7_N = variants {mkN "construção" ; mkN "edifício" ; } ; --*
lin constructive_1_A = mkA "construtivo" ; --*
lin constructive_2_A = mkA "construtivo" ; --*
lin constructivism_N = variants {mkN "construtivismo" ; mkN "Construtivismo" ; } ; --*
lin constructivist_N = mkN "construtivista" ; --*
lin constructor_N = variants {mkN "constructor" ; mkN "construtor" ; mkN "empreiteiro" ; } ; --*
lin construe_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin consubstantial_A = mkA "consubstancial" ; --*
lin consubstantiation_N = mkN "Consubstanciação" ; --*
lin consulate_N = variants {mkN "cônsul" ; mkN "consulado" ; } ; --*
lin consul_N = mkN "cônsul" ; --*
lin consult_1_V2 = variants {mkV2 (mkV "consultar") ; mkV2 (mkV "with") ; } ; --*
lin consult_1_V = variants {mkV "consultar" ; mkV "with" ; } ; --*
lin consult_2_V2 = variants {mkV2 (mkV "consultar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "up") ; } ; --*
lin consult_3_V = variants {mkV "confabular" ; mkV "conferir" ; mkV "consultar" ; } ; --*
lin consult_4_V = mkV "consultar" ; --*
lin consultancy_N = variants {mkN "consultas" ; mkN "consultoria" ; } ; --*
lin consultant_N = variants {mkN "assessor" ; mkN "conselheiro" ; mkN "consultor" ; mkN "orientador" ; } ; --*
lin consultation_1_N = variants {mkN "audiência" ; mkN "entrevista" ; } ; --*
lin consultation_2_N = mkN "consulta" ; --*
lin consultation_3_N = mkN "consulta" ; --*
lin consultative_1_A = variants {mkA "aconselhador" ; mkA "consultivo" ; mkA "consultor" ; } ; --*
lin consume_1_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "consumir") ; mkV2 (mkV "devorar") ; mkV2 (mkV "through") ; } ; --*
lin consume_2_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "in") ; mkV2 (mkV "tomar") ; } ; --*
lin consume_3_V = variants {mkV "delapidar" ; mkV "desperdiçar" ; mkV "dilapidar" ; mkV "esbanjar" ; } ; --*
lin consume_5_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin consume_6_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "esgotar") ; } ; --*
lin consumerism_2_N = mkN "consumismo" ; --*
lin consumer_N = mkN "consumidor" ; --*
lin consummate_1_A = mkA "consumado" ; --*
lin consummate_1_V2 = mkV2 (mkV "consumar") ; --*
lin consummate_2_V2 = mkV2 (mkV "consumar") ; --*
lin consummation_2_N = mkN "consumação" ; --*
lin consumption_1_N = mkN "ingestão" ; --*
lin consumption_2_N = variants {mkN "disease" ; mkN "plague" ; mkN "tuberculose" ; mkN "tuberculosis" ; } ; --*
lin consumption_3_N = variants {mkN "consumo" ; mkN "consumption" ; mkN "of" ; } ; --*
lin consumption_4_N = variants {mkN "consumo" ; mkN "up" ; } ; --*
lin consumptive_2_A = mkA "tísico" ; --*
lin contact_1_N = variants {mkN "contato" ; mkN "ligação" ; } ; --*
lin contact_1_V2 = variants {mkV2 (mkV "contactar") ; mkV2 (mkV "contatar") ; mkV2 (mkV "estar") ; mkV2 (mkV "hold") ; mkV2 (mkV "manter") ; mkV2 (mkV "through") ; } ; --*
lin contact_2_V2 = variants {mkV2 (mkV "encostar") ; mkV2 (mkV "tocar") ; } ; --*
lin contact_3_N = variants {mkN "contacto" ; mkN "contato" ; } ; --*
lin contact_4_N = mkN "toque" ; --*
lin contact_5_N = mkN "intermediária" ; --*
lin contact_7_N = mkN "tangência" ; --*
lin contact_8_N = variants {mkN "contacto" ; mkN "contato" ; } ; --*
lin contact_9_N = variants {mkN "lens" ; mkN "lente" ; } ; --*
lin contagion_2_N = variants {mkN "contágio" ; mkN "infecção" ; mkN "spillover" ; } ; --*
lin contagion_3_N = mkN "infecção" ; --*
lin contagious_1_A = mkA "contagioso" ; --*
lin contagious_2_A = variants {mkA "contagioso" ; mkA "transmissível" ; } ; --*
lin contain_1_V2 = variants {mkV2 (mkV "abranger") ; mkV2 (mkV "conter") ; } ; --*
lin contain_2_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "incluir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "segurar") ; mkV2 (mkV "ter") ; } ; --*
lin contain_3_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "limitar") ; mkV2 (mkV "refrear") ; } ; --*
lin contain_5_V2 = mkV2 (mkV "conter") ; --*
lin contain_6_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "resistir") ; } ; --*
lin container_N = variants {mkN "caixa" ; mkN "contêiner" ; mkN "contentor" ; mkN "contentores" ; mkN "continente" ; mkN "jarro" ; mkN "vasilha" ; mkN "vaso" ; } ; --*
lin containment_3_N = mkN "contenção" ; --*
lin contaminant_N = mkN "contaminação" ; --*
lin contaminate_1_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "poluir") ; mkV2 (mkV "sujar") ; } ; --*
lin contaminate_2_V2 = mkV2 (mkV "contaminar") ; --*
lin contamination_1_N = variants {mkN "contaminação" ; mkN "poluição" ; } ; --*
lin contamination_2_N = mkN "contaminação" ; --*
lin contamination_3_N = variants {mkN "contaminação" ; mkN "poluição" ; } ; --*
lin contaminative_A = mkA "poluente" ; --*
lin contemn_V2 = variants {mkV2 (mkV "desdenhar") ; mkV2 (mkV "desprezar") ; mkV2 (mkV "menosprezar") ; } ; --*
lin contemplate_2_V2 = mkV2 (mkV "contemplar") ; --*
lin contemplate_3_V = variants {mkV "cogitar" ; mkV "contemplar" ; mkV "meditar" ; mkV "ponderar" ; } ; --*
lin contemplate_4_V2 = variants {mkV2 (mkV "contemplar") ; mkV2 (mkV "over") ; mkV2 (mkV "refletir") ; } ; --*
lin contemplate_4_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin contemplation_1_N = mkN "contemplação" ; --*
lin contemplation_2_N = variants {mkN "contemplação" ; mkN "especulação" ; mkN "meditação" ; mkN "pensamento" ; mkN "reflexão" ; } ; --*
lin contemporaneity_1_N = mkN "modernidade" ; --*
lin contemporaneous_1_A = variants {mkA "contemporânea" ; mkA "contemporâneo" ; mkA "moderna" ; } ; --*
lin contemporaneous_2_A = mkA "contemporâneo" ; --*
lin contemporary_1_A = mkA "contemporâneo" ; --*
lin contemporary_2_A = variants {mkA "atual" ; mkA "contemporâneo" ; mkA "hodierno" ; } ; --*
lin contemporary_3_A = variants {mkA "contemporânea" ; mkA "contemporâneo" ; mkA "moderna" ; } ; --*
lin contemporary_N = mkN "contemporâneo" ; --*
lin contempt_1_N = variants {mkN "desdém" ; mkN "desprezo" ; mkN "escárnio" ; } ; --*
lin contempt_2_N = mkN "desprezo" ; --*
lin contempt_3_N = mkN "desprezo" ; --*
lin contempt_4_N = mkN "desacato" ; --*
lin contemptible_A = mkA "desprezível" ; --*
lin contend_1_VS = variants {mkVS (mkV "afirmar") ; mkVS (mkV "postular") ; } ; --*
lin contend_2_V = variants {mkV "arguir" ; mkV "argüir" ; mkV "debater" ; mkV "discutir" ; } ; --*
lin contend_2_VS = variants {mkVS (mkV "arguir") ; mkVS (mkV "argüir") ; mkVS (mkV "debater") ; mkVS (mkV "discutir") ; } ; --*
lin contend_3_V = variants {mkV "candidatar" ; mkV "impugnar" ; } ; --*
lin contend_3_VS = variants {mkVS (mkV "candidatar") ; mkVS (mkV "impugnar") ; } ; --*
lin contend_4_V = variants {mkV "by" ; mkV "do" ; mkV "lidar" ; mkV "out" ; mkV "sobreviver" ; mkV "virar-se" ; } ; --*
lin contend_4_VS = variants {mkVS (mkV "by") ; mkVS (mkV "do") ; mkVS (mkV "lidar") ; mkVS (mkV "out") ; mkVS (mkV "sobreviver") ; mkVS (mkV "virar-se") ; } ; --*
lin contend_5_V = variants {mkV "competir" ; mkV "concorrer" ; } ; --*
lin contend_5_VS = variants {mkVS (mkV "competir") ; mkVS (mkV "concorrer") ; } ; --*
lin contend_6_V = variants {mkV "brigar" ; mkV "debater-se" ; mkV "lutar" ; } ; --*
lin contender_N = variants {mkN "adversário" ; mkN "competidor" ; mkN "concorrente" ; mkN "contendor" ; mkN "desafiante" ; mkN "inimigo" ; mkN "opositor" ; mkN "rival" ; } ; --*
lin content_1_V2 = variants {mkV2 (mkV "contentar") ; mkV2 (mkV "satisfazer") ; } ; --*
lin content_2_V2 = mkV2 (mkV "contentar") ; --*
lin content_4_N = variants {mkN "capacidade" ; mkN "conteúdo" ; mkN "teor" ; } ; --*
lin content_5_N = variants {mkN "content" ; mkN "object" ; mkN "objecto" ; } ; --*
lin content_6_N = mkN "contentamento" ; --*
lin content_7_N = variants {mkN "conteúdo" ; mkN "object" ; mkN "tópico" ; } ; --*
lin content_A = mkA "contente" ; --*
lin contentedness_N = mkN "contentamento" ; --*
lin contention_1_N = mkN "afirmacão" ; --*
lin contention_2_N = variants {mkN "contestação" ; mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; mkN "polémica" ; mkN "polêmica" ; } ; --*
lin contention_3_N = variants {mkN "competição" ; mkN "concorrência" ; } ; --*
lin contentious_2_A = variants {mkA "conflituoso" ; mkA "controverso" ; } ; --*
lin contentment_N = variants {mkN "contentamento" ; mkN "contente" ; mkN "realizado" ; mkN "satisfeito" ; } ; --*
lin contents_2_N = variants {mkN "conteúdo" ; mkN "índice" ; mkN "of" ; } ; --*
lin conterminous_1_A = mkA "contíguo" ; --*
lin conterminous_2_A = variants {mkA "adjacente" ; mkA "contíguo" ; mkA "junto" ; mkA "vizinho" ; } ; --*
lin contest_1_N = variants {mkN "certame" ; mkN "competição" ; mkN "concurso" ; mkN "jogo" ; mkN "partida" ; mkN "torneio" ; } ; --*
lin contest_2_N = mkN "contenda" ; --*
lin contestable_A = mkA "contestável" ; --*
lin contestant_1_N = mkN "contendor" ; --*
lin contestant_2_N = variants {mkN "dissidência" ; mkN "dissidente" ; } ; --*
lin contest_V2 = variants {mkV2 (mkV "candidatar") ; mkV2 (mkV "impugnar") ; } ; --*
lin context_1_N = variants {mkN "context" ; mkN "contexto" ; mkN "of" ; } ; --*
lin context_2_N = variants {mkN "circunstância" ; mkN "contexto" ; } ; --*
lin contextual_A = mkA "contextual" ; --*
lin contiguous_1_A = variants {mkA "contíguo" ; mkA "imediato" ; } ; --*
lin contiguous_2_A = mkA "contíguo" ; --*
lin contiguous_3_A = variants {mkA "adjacente" ; mkA "contíguo" ; mkA "junto" ; mkA "vizinho" ; } ; --*
lin continent_1_N = variants {mkN "continente" ; mkN "Continente" ; mkN "continentes" ; } ; --*
lin continent_2_N = mkN "Continentes" ; --*
lin continental_1_A = mkA "continental" ; --*
lin continental_2_A = mkA "continental" ; --*
lin continental_3_A = mkA "continental" ; --*
lin continental_4_A = mkA "continental" ; --*
lin contingency_1_N = variants {mkN "acontecimento" ; mkN "evento" ; mkN "eventualidade" ; } ; --*
lin contingency_2_N = mkN "eventualidade" ; --*
lin contingent_1_A = mkA "eventual" ; --*
lin contingent_1_N = mkN "contingente" ; --*
lin contingent_2_A = variants {mkA "incerto" ; mkA "on" ; mkA "upon" ; } ; --*
lin continual_1_A = mkA "contínuo" ; --*
lin continual_2_A = variants {mkA "constante" ; mkA "contínuo" ; } ; --*
lin continuance_1_N = variants {mkN "continuação" ; mkN "prosseguimento" ; } ; --*
lin continuance_2_N = variants {mkN "continuidade" ; mkN "duração" ; } ; --*
lin continuance_3_N = variants {mkN "continuidade" ; mkN "duração" ; mkN "permanência" ; } ; --*
lin continuation_1_N = variants {mkN "continuação" ; mkN "prosseguimento" ; } ; --*
lin continuation_2_N = variants {mkN "continuação" ; mkN "sequência" ; } ; --*
lin continuation_4_N = variants {mkN "continuação" ; mkN "prolongamento" ; } ; --*
lin continue_10_V2 = mkV2 (mkV "continuar") ; --*
lin continue_2_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "on") ; mkV2 (mkV "prosseguir") ; } ; --*
lin continue_2_V = variants {mkV "continuar" ; mkV "on" ; mkV "prosseguir" ; } ; --*
lin continue_3_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "manter") ; mkV2 (mkV "on") ; mkV2 (mkV "preservar") ; } ; --*
lin continue_4_V = variants {mkV "adiantar-se" ; mkV "continuar" ; mkV "forward" ; mkV "ir" ; mkV "progredir" ; mkV "prosseguir" ; mkV "seguir" ; } ; --*
lin continue_5_V2 = variants {mkV2 (mkV "durar") ; mkV2 (mkV "on") ; mkV2 (mkV "prolongar-se") ; } ; --*
lin continue_6_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "in") ; } ; --*
lin continue_7_V = mkV "continuar" ; --*
lin continue_8_V = variants {mkV "ficar" ; mkV "on" ; mkV "permanecer" ; } ; --*
lin continued_A = mkA "seguido" ; --*
lin continue_VV = variants {mkVV (mkV "along") ; mkVV (mkV "continuar") ; mkVV (mkV "on") ; mkVV (mkV "prosseguir") ; mkVV (mkV "seguir") ; } ; --*
lin continuity_1_N = mkN "continuidade" ; --*
lin continuity_3_N = mkN "continuidade" ; --*
lin continuous_1_A = mkA "contínuo" ; --*
lin continuous_2_A = mkA "contínuo" ; --*
lin continuum_N = mkN "contínuo" ; --*
lin contortion_1_N = mkN "deformação" ; --*
lin contortionist_N = mkN "contorcionista" ; --*
lin contort_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "empenar") ; } ; --*
lin contour_1_N = variants {mkN "curva" ; mkN "line" ; } ; --*
lin contour_2_N = mkN "contorno" ; --*
lin contour_V2 = mkV2 (mkV "contornar") ; --*
lin contraband_N = mkN "contrabando" ; --*
lin contrabass_A = mkA "contrabaixo" ; --*
lin contrabass_N = variants {mkN "bass" ; mkN "contrabaixo" ; mkN "fiddle" ; mkN "viol" ; } ; --*
lin contrabassoon_N = variants {mkN "bassoon" ; mkN "contrafagote" ; } ; --*
lin contraception_N = variants {mkN "contracepção" ; mkN "method" ; } ; --*
lin contraceptive_A = mkA "contraceptivo" ; --*
lin contract_1_N = variants {mkN "acordo" ; mkN "contrato" ; } ; --*
lin contract_1_V2 = mkV2 (mkV "contratar") ; --*
lin contract_1_V2V = mkV2V (mkV "contratar") ; --*
lin contract_1_V = mkV "contratar" ; --*
lin contract_2_N = mkN "Contrato" ; --*
lin contract_2_V2 = variants {mkV2 (mkV "contratar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin contract_3_N = variants {mkN "bridge" ; mkN "Bridge" ; } ; --*
lin contract_3_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "contrair") ; } ; --*
lin contract_4_V2 = variants {mkV2 (mkV "contagiar-se") ; mkV2 (mkV "contrair") ; } ; --*
lin contract_5_V = variants {mkV "contrair" ; mkV "contrair-se" ; mkV "encolher" ; mkV "murchar" ; } ; --*
lin contract_6_V2 = variants {mkV2 (mkV "contrair") ; mkV2 (mkV "encolher") ; } ; --*
lin contract_8_V2 = mkV2 (mkV "estreitar") ; --*
lin contract_8_V = mkV "estreitar" ; --*
lin contract_9_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin contractile_A = mkA "contrátil" ; --*
lin contraction_1_N = variants {mkN "Contracção" ; mkN "contraction" ; } ; --*
lin contraction_2_N = variants {mkN "compressão" ; mkN "contração" ; } ; --*
lin contraction_4_N = mkN "contracção" ; --*
lin contractor_3_N = mkN "contratador" ; --*
lin contractual_A = mkA "contratual" ; --*
lin contracture_N = variants {mkN "contratura" ; mkN "Contratura" ; } ; --*
lin contradict_1_V2 = mkV2 (mkV "desmentir") ; --*
lin contradict_2_V2 = variants {mkV2 (mkV "contradizer") ; mkV2 (mkV "desdizer") ; } ; --*
lin contradict_3_V2 = mkV2 (mkV "opor") ; --*
lin contradict_4_V2 = variants {mkV2 (mkV "contradizer") ; mkV2 (mkV "negar") ; } ; --*
lin contradiction_1_N = mkN "contradição" ; --*
lin contradiction_2_N = variants {mkN "contradição" ; mkN "in" ; } ; --*
lin contradiction_3_N = mkN "contradição" ; --*
lin contradictory_1_A = mkA "contraditório" ; --*
lin contradictory_2_A = mkA "contraditório" ; --*
lin contradictory_3_A = variants {mkA "contraditório" ; mkA "odds" ; } ; --*
lin contradictory_4_A = variants {mkA "contraditório" ; mkA "exclusive" ; } ; --*
lin contradistinguish_V2 = variants {mkV2 (mkV "contradistinguir") ; mkV2 (mkV "diferenciar") ; } ; --*
lin contrail_N = variants {mkN "Contrail" ; mkN "trail" ; } ; --*
lin contraindication_N = mkN "contraindicação" ; --*
lin contralateral_A = mkA "contralateral" ; --*
lin contralto_1_N = variants {mkN "coltralto" ; mkN "contralto" ; } ; --*
lin contralto_2_N = variants {mkN "contralto" ; mkN "Contralto" ; mkN "Contraltos" ; } ; --*
lin contraption_N = variants {mkN "apetrecho" ; mkN "engenhoca" ; mkN "ferramenta" ; mkN "gadget" ; mkN "objeto" ; mkN "troço" ; } ; --*
lin contrariwise_1_Adv = mkAdv "contrariamente" ; --*
lin contrariwise_2_Adv = variants {mkAdv "other" ; mkAdv "versa" ; mkAdv "vice-versa" ; } ; --*
lin contrariwise_3_Adv = variants {mkAdv "ao" ; mkAdv "mas" ; mkAdv "the" ; } ; --*
lin contrary_1_N = variants {mkN "contrário" ; mkN "oposto" ; mkN "reverso" ; } ; --*
lin contrary_2_A = mkA "contrário" ; --*
lin contrary_2_N = mkN "contrário" ; --*
lin contrast_1_N = variants {mkN "contrast" ; mkN "contraste" ; } ; --*
lin contrast_1_V2 = variants {mkV2 (mkV "aferir") ; mkV2 (mkV "contrastar") ; } ; --*
lin contrast_2_V = variants {mkV "contrapor" ; mkV "contrapor-se" ; mkV "contrastar" ; } ; --*
lin contrast_3_N = variants {mkN "demarcaçao" ; mkN "demarcação" ; mkN "line" ; } ; --*
lin contrastive_1_A = mkA "incompatível" ; --*
lin contravene_1_V2 = variants {mkV2 (mkV "afoul") ; mkV2 (mkV "infringir") ; } ; --*
lin contravene_2_V2 = variants {mkV2 (mkV "contradizer") ; mkV2 (mkV "desdizer") ; } ; --*
lin contravention_N = variants {mkN "contravenção" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin contribute_1_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "contribuir") ; } ; --*
lin contribute_1_V = variants {mkV "adicionar" ; mkV "contribuir" ; } ; --*
lin contribute_2_V = variants {mkV "contribuir" ; mkV "dar" ; mkV "in" ; mkV "outorgar" ; } ; --*
lin contribute_4_V2 = variants {mkV2 (mkV "contribuir") ; mkV2 (mkV "up") ; } ; --*
lin contribution_1_N = mkN "contribuição" ; --*
lin contribution_2_N = variants {mkN "contribuição" ; mkN "doação" ; mkN "donativo" ; } ; --*
lin contribution_3_N = variants {mkN "contributo" ; mkN "doação" ; } ; --*
lin contribution_4_N = mkN "contribuição" ; --*
lin contributor_1_N = variants {mkN "contribuinte" ; mkN "doador" ; } ; --*
lin contributory_A = mkA "favorável" ; --*
lin contrition_N = variants {mkN "contrição" ; mkN "remorso" ; } ; --*
lin contrivance_1_N = variants {mkN "apetrecho" ; mkN "engenhoca" ; mkN "ferramenta" ; mkN "gadget" ; mkN "objeto" ; mkN "troço" ; } ; --*
lin contrive_1_V2 = variants {mkV2 (mkV "arquitetar") ; mkV2 (mkV "inventar") ; mkV2 (mkV "planear") ; mkV2 (mkV "planejar") ; mkV2 (mkV "projetar") ; } ; --*
lin contrive_2_V2 = variants {mkV2 (mkV "forjar") ; mkV2 (mkV "formular") ; mkV2 (mkV "inventar") ; } ; --*
lin contriver_N = mkN "planejador" ; --*
lin control_1_V2 = variants {mkV2 (mkV "governar") ; mkV2 (mkV "reger") ; } ; --*
lin control_2_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "limitar") ; mkV2 (mkV "refrear") ; } ; --*
lin control_3_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "operar") ; } ; --*
lin control_4_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "manipular") ; } ; --*
lin control_5_N = variants {mkN "controle" ; mkN "controlo" ; } ; --*
lin control_5_V2 = variants {mkV2 (mkV "provar") ; mkV2 (mkV "verificar") ; } ; --*
lin control_6_N = variants {mkN "domínio" ; mkN "superioridade" ; } ; --*
lin control_6_V2 = variants {mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin control_7_N = mkN "controle" ; --*
lin control_7_V2 = mkV2 (mkV "controlar") ; --*
lin control_8_N = variants {mkN "aptidão" ; mkN "controle" ; } ; --*
lin control_8_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "to") ; mkV2 (mkV "verificar") ; } ; --*
lin control_9_N = mkN "controlador" ; --*
lin controllable_A = variants {mkA "controlável" ; mkA "governável" ; } ; --*
lin controlled_A = mkA "controlado" ; --*
lin controller_1_N = variants {mkN "contabilista" ; mkN "contador" ; mkN "controlador" ; } ; --*
lin controller_3_N = mkN "controlador" ; --*
lin controversial_A = variants {mkA "controverso" ; mkA "polémico" ; mkA "polêmico" ; } ; --*
lin controversy_N = variants {mkN "contestação" ; mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; mkN "polémica" ; mkN "polêmica" ; } ; --*
lin controvert_1_V2 = mkV2 (mkV "opor") ; --*
lin controvert_2_V2 = variants {mkV2 (mkV "desmentir") ; mkV2 (mkV "rebater") ; mkV2 (mkV "refutar") ; } ; --*
lin contumely_N = variants {mkN "injúria" ; mkN "insulto" ; } ; --*
lin contuse_V2 = mkV2 (mkV "contundir") ; --*
lin contusion_1_N = variants {mkN "contusão" ; mkN "Contusão" ; mkN "hematoma" ; mkN "inchaço" ; } ; --*
lin conundrum_N = variants {mkN "adivinha" ; mkN "adivinhação" ; mkN "adivinhas" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin conurbation_N = variants {mkN "conurbação" ; mkN "sprawl" ; } ; --*
lin convalescence_N = variants {mkN "convalescência" ; mkN "recuperação" ; } ; --*
lin convalescent_A = mkA "de" ; --*
lin convalescent_N = mkN "convalescente" ; --*
lin convalesce_V = variants {mkV "convalescer" ; mkV "melhorar" ; mkV "recuperar" ; } ; --*
lin convection_1_N = mkN "convecção" ; --*
lin convection_2_N = mkN "convecção" ; --*
lin convene_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "reunir") ; } ; --*
lin convene_V = variants {mkV "reunir" ; mkV "unir" ; } ; --*
lin convenience_1_N = mkN "conforto" ; --*
lin convenience_3_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "convenience" ; mkN "facility" ; mkN "lavatory" ; mkN "room" ; mkN "station" ; mkN "toilet" ; } ; --*
lin convenience_4_N = variants {mkN "apetrecho" ; mkN "engenhoca" ; mkN "ferramenta" ; mkN "gadget" ; mkN "objeto" ; mkN "troço" ; } ; --*
lin convenient_1_A = mkA "conveniente" ; --*
lin convenient_2_A = mkA "amplo" ; --*
lin convent_1_N = variants {mkN "convento" ; mkN "Conventos" ; } ; --*
lin convention_1_N = mkN "convenção" ; --*
lin convention_2_N = mkN "pauta" ; --*
lin convention_4_N = mkN "convenção" ; --*
lin conventional_1_A = variants {mkA "convencional" ; mkA "corriqueiro" ; } ; --*
lin conventional_2_A = mkA "convencional" ; --*
lin conventional_3_A = mkA "convencional" ; --*
lin conventional_4_A = mkA "convencional" ; --*
lin conventional_5_A = variants {mkA "convencional" ; mkA "esquemático" ; } ; --*
lin conventional_6_A = mkA "convencional" ; --*
lin conventional_7_A = variants {mkA "convencional" ; mkA "solene" ; } ; --*
lin conventionality_3_N = mkN "convenção" ; --*
lin converge_1_V = variants {mkV "afluir" ; mkV "convergir" ; mkV "encontrar" ; } ; --*
lin converge_2_V = mkV "convergir" ; --*
lin converge_3_V = mkV "convergir" ; --*
lin converge_4_V = mkV "convergir" ; --*
lin convergence_1_N = mkN "convergência" ; --*
lin convergence_2_N = mkN "convergência" ; --*
lin convergence_3_N = mkN "sobreposição" ; --*
lin convergence_4_N = mkN "convergência" ; --*
lin convergent_A = mkA "convergente" ; --*
lin conversational_A = variants {mkA "coloquial" ; mkA "familiar" ; } ; --*
lin conversation_N = variants {mkN "conversa" ; mkN "conversação" ; } ; --*
lin converse_1_A = mkA "inverso" ; --*
lin converse_2_A = mkA "inverso" ; --*
lin converse_V = mkV "conversar" ; --*
lin conversion_1_N = variants {mkN "mudança" ; mkN "transição" ; } ; --*
lin conversion_2_N = mkN "conversão" ; --*
lin conversion_6_N = mkN "mudança" ; --*
lin conversion_9_N = mkN "mudança" ; --*
lin convert_10_V2 = mkV2 (mkV "trocar") ; --*
lin convert_10_V = mkV "trocar" ; --*
lin convert_11_V = variants {mkV "converter" ; mkV "tornar-se" ; } ; --*
lin convert_2_V2 = variants {mkV2 (mkV "converter") ; mkV2 (mkV "transformar") ; mkV2 (mkV "transmudar") ; } ; --*
lin convert_3_V = mkV "converter" ; --*
lin convert_4_V2 = variants {mkV2 (mkV "converter") ; mkV2 (mkV "mudar") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin convert_5_V2 = mkV2 (mkV "converter") ; --*
lin convert_9_V2 = variants {mkV2 (mkV "convencer") ; mkV2 (mkV "over") ; } ; --*
lin converter_1_N = mkN "conversor" ; --*
lin convertible_1_N = mkN "conversível" ; --*
lin convertible_3_A = mkA "traduzível" ; --*
lin convertible_3_N = variants {mkN "bed" ; mkN "sofá-cama" ; } ; --*
lin convert_N = mkN "convertido" ; --*
lin convex_A = variants {mkA "convexo" ; mkA "envoltória" ; } ; --*
lin convexity_1_N = mkN "convexidade" ; --*
lin convexity_2_N = variants {mkN "convexidade" ; mkN "shape" ; } ; --*
lin convey_1_V2 = mkV2 (mkV "transmitir") ; --*
lin convey_2_V2 = mkV2 (mkV "transmitir") ; --*
lin convey_3_V2 = mkV2 (mkV "enviar") ; --*
lin convey_4_V2 = mkV2 (mkV "sair") ; --*
lin convey_5_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin convey_6_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "tirar") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin convey_7_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin conveyance_3_N = variants {mkN "meios" ; mkN "modo" ; mkN "veículo" ; } ; --*
lin conveyance_5_N = variants {mkN "transferência" ; mkN "transporte" ; } ; --*
lin conveyer_1_N = mkN "portador" ; --*
lin conveyer_2_N = variants {mkN "belt" ; mkN "correia" ; mkN "esteira" ; } ; --*
lin conveyer_belt_N = variants {mkN "belt" ; mkN "correia" ; mkN "esteira" ; } ; --*
lin conveyor_1_N = mkN "portador" ; --*
lin conveyor_2_N = variants {mkN "belt" ; mkN "correia" ; mkN "esteira" ; } ; --*
lin convict_1_N = variants {mkN "bird" ; mkN "condenado" ; } ; --*
lin convict_2_N = mkN "detento" ; --*
lin conviction_1_N = variants {mkN "belief" ; mkN "convicção" ; mkN "of" ; } ; --*
lin conviction_2_N = variants {mkN "condenação" ; mkN "of" ; } ; --*
lin convict_V2 = variants {mkV2 (mkV "condenar") ; mkV2 (mkV "provar") ; } ; --*
lin convince_V2 = variants {mkV2 (mkV "convencer") ; mkV2 (mkV "over") ; } ; --*
lin convincing_A = mkA "convincente" ; --*
lin conviviality_2_N = mkN "celebração" ; --*
lin convocation_1_N = variants {mkN "assembleia" ; mkN "convocação" ; } ; --*
lin convocation_2_N = variants {mkN "convocação" ; mkN "together" ; } ; --*
lin convoke_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "reunir") ; } ; --*
lin convolute_A = mkA "convoluto" ; --*
lin convoluted_1_A = mkA "convoluto" ; --*
lin convoluted_2_A = variants {mkA "convoluto" ; mkA "tortuoso" ; } ; --*
lin convolution_1_N = variants {mkN "redemoinho" ; mkN "turbilhão" ; mkN "vórtice" ; } ; --*
lin convolution_3_N = mkN "convolução" ; --*
lin convoy_1_N = mkN "comboio" ; --*
lin convoy_2_N = mkN "comboio" ; --*
lin convoy_V2 = variants {mkV2 (mkV "comboiar") ; mkV2 (mkV "escoltar") ; } ; --*
lin convulse_2_V2 = mkV2 (mkV "convulsionar") ; --*
lin convulse_3_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "debulhar") ; mkV2 (mkV "esbordoar") ; mkV2 (mkV "sovar") ; mkV2 (mkV "trilhar") ; } ; --*
lin convulse_6_V2 = mkV2 (mkV "convulsionar") ; --*
lin convulsion_1_N = variants {mkN "convulsão" ; mkN "crise" ; mkN "paroxismo" ; } ; --*
lin convulsion_2_N = mkN "convulsão" ; --*
lin convulsive_1_A = mkA "convulsivo" ; --*
lin convulsive_2_A = mkA "convulsivo" ; --*
lin cony_3_N = variants {mkN "coelho" ; mkN "lebre" ; } ; --*
lin coo_1_V = mkV "murmurar" ; --*
lin cook_1_N = variants {mkN "cozinheira" ; mkN "cozinheiro" ; } ; --*
lin cook_1_V = variants {mkV "cozinhar" ; mkV "preparar" ; } ; --*
lin cook_2_N = variants {mkN "Cook" ; mkN "James" ; } ; --*
lin cook_3_V = mkV "cozinhar" ; --*
lin cook_4_V2 = variants {mkV2 (mkV "deturpar") ; mkV2 (mkV "falsear") ; mkV2 (mkV "falsificar") ; } ; --*
lin cookbook_N = variants {mkN "book" ; mkN "Livro" ; } ; --*
lin cooker_N = variants {mkN "cozinha" ; mkN "panela" ; mkN "tacho" ; } ; --*
lin cookery_book_N = variants {mkN "book" ; mkN "Livro" ; } ; --*
lin cookery_N = variants {mkN "cozinha" ; mkN "culinária" ; mkN "preparação" ; } ; --*
lin cookie_1_N = variants {mkN "biscoito" ; mkN "bolacha" ; mkN "cookie" ; } ; --*
lin cooking_N = variants {mkN "cozinha" ; mkN "culinária" ; mkN "preparação" ; } ; --*
lin cook_V3 = variants {mkV3 (mkV "cozinhar") ; mkV3 (mkV "preparar") ; } ; --*
lin cooky_2_N = variants {mkN "biscoito" ; mkN "bolacha" ; mkN "cookie" ; } ; --*
lin cool_1_A = variants {mkA "fresco" ; mkA "frio" ; } ; --*
lin cool_1_N = mkN "frio" ; --*
lin cool_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esfriar") ; mkV2 (mkV "refrigerar") ; mkV2 (mkV "resfriar") ; } ; --*
lin cool_2_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "desembaraço" ; } ; --*
lin cool_2_V = variants {mkV "arrefecer" ; mkV "down" ; mkV "esfriar" ; mkV "esfriar-se" ; mkV "resfriar" ; } ; --*
lin cool_3_A = variants {mkA "frígido" ; mkA "safa" ; } ; --*
lin cool_3_V = variants {mkV "down" ; mkV "off" ; mkV "resfriar" ; } ; --*
lin cool_4_A = variants {mkA "frígido" ; mkA "frio" ; } ; --*
lin cool_5_A = variants {mkA "bem" ; mkA "bom" ; mkA "right" ; } ; --*
lin coolant_N = mkN "líquido" ; --*
lin cool_down_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esfriar") ; mkV2 (mkV "refrigerar") ; mkV2 (mkV "resfriar") ; } ; --*
lin cooler_1_N = variants {mkN "chest" ; mkN "cooler" ; mkN "refrigerador" ; } ; --*
lin coolie_1_N = mkN "coolie" ; --*
lin cooling_2_N = variants {mkN "arrefecimento" ; mkN "esfriamento" ; mkN "system" ; } ; --*
lin cooling_tower_N = mkN "tower" ; --*
lin coolness_2_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin coolness_4_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin cool_off_1_V = variants {mkV "acalmar-se" ; mkV "down" ; mkV "it" ; mkV "off" ; mkV "out" ; } ; --*
lin cool_off_3_V = mkV "off" ; --*
lin coop_1_N = variants {mkN "capoeira" ; mkN "coop" ; mkN "galinheiro" ; } ; --*
lin coop_2_N = variants {mkN "gaiola" ; mkN "jaula" ; } ; --*
lin cooper_2_N = variants {mkN "Cooper" ; mkN "Gary" ; } ; --*
lin cooper_3_N = variants {mkN "Fenimore" ; mkN "James" ; } ; --*
lin cooper_4_N = variants {mkN "maker" ; mkN "Tanoeiro" ; } ; --*
lin cooperate_V = variants {mkV "colaborar" ; mkV "cooperar" ; mkV "forces" ; mkV "together" ; } ; --*
lin cooperation_1_N = variants {mkN "colaboração" ; mkN "cooperação" ; } ; --*
lin cooperation_2_N = mkN "cooperação" ; --*
lin cooperative_1_A = variants {mkA "consertado" ; mkA "cooperativo" ; } ; --*
lin cooperative_2_A = mkA "cooperativo" ; --*
lin cooperative_2_N = variants {mkN "Cooperativas" ; mkN "cooperativismo" ; mkN "Cooperativismo" ; mkN "sociedade" ; } ; --*
lin cooperator_N = variants {mkN "colaborador" ; mkN "colega" ; mkN "parceiro" ; } ; --*
lin co_opt_3_V2 = mkV2 (mkV "alistar") ; --*
lin co_opt_4_V2 = mkV2 (mkV "cooptar") ; --*
lin coordinate_1_N = variants {mkN "coordenada" ; mkN "coordene" ; } ; --*
lin coordinate_1_V2 = variants {mkV2 (mkV "coordenar") ; mkV2 (mkV "organizar") ; } ; --*
lin coordinate_2_V2 = mkV2 (mkV "coordenar") ; --*
lin coordinate_3_V = mkV "coordenar" ; --*
lin coordination_1_N = mkN "coordenação" ; --*
lin coordination_2_N = mkN "coordenação" ; --*
lin coordination_3_N = variants {mkN "coordenação" ; mkN "Coordenação" ; } ; --*
lin coordinator_N = mkN "coordenador" ; --*
lin coot_N = mkN "galeirão" ; --*
lin cop_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "roubar") ; } ; --*
lin cop_2_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin copal_N = mkN "copal" ; --*
lin copartner_N = mkN "sócio" ; --*
lin cope_2_N = mkN "pluvial" ; --*
lin copeck_N = mkN "copeque" ; --*
lin copenhagen_PN = variants {mkPN "capital" ; mkPN "Copenhaga" ; mkPN "Copenhagen" ; } ; --*
lin copepod_N = variants {mkN "copépode" ; mkN "crustacean" ; } ; --*
lin cope_V = variants {mkV "by" ; mkV "do" ; mkV "lidar" ; mkV "out" ; mkV "sobreviver" ; mkV "virar-se" ; } ; --*
lin copious_1_A = mkA "abundante" ; --*
lin copious_2_A = variants {mkA "abundante" ; mkA "bastante" ; mkA "copioso" ; mkA "lauto" ; } ; --*
lin cop_N = variants {mkN "policial" ; mkN "tira" ; } ; --*
lin copolymer_N = mkN "Copolímero" ; --*
lin cop_out_V = mkV "out" ; --*
lin copper_1_N = variants {mkN "cobre" ; mkN "Cobre" ; mkN "number" ; } ; --*
lin copper_3_N = variants {mkN "policial" ; mkN "tira" ; } ; --*
lin coppersmith_N = mkN "funileiro" ; --*
lin coppice_N = mkN "arvoredo" ; --*
lin copra_N = mkN "copra" ; --*
lin coprolite_N = mkN "coprólito" ; --*
lin coprophagy_1_N = mkN "coprofagia" ; --*
lin copse_N = mkN "arvoredo" ; --*
lin copt_1_N = variants {mkN "copta" ; mkN "coptas" ; } ; --*
lin copt_2_N = mkN "copta" ; --*
lin coptic_N = variants {mkN "copta" ; mkN "língua" ; } ; --*
lin copula_N = variants {mkN "verb" ; mkN "verbo" ; } ; --*
lin copulate_V = variants {mkV "acasalar" ; mkV "copular" ; } ; --*
lin copulation_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; } ; --*
lin copulative_N = variants {mkN "verb" ; mkN "verbo" ; } ; --*
lin copy_1_N = mkN "cópia" ; --*
lin copy_1_V2 = mkV2 (mkV "transcrever") ; --*
lin copy_2_N = variants {mkN "cópia" ; mkN "reprodução" ; } ; --*
lin copy_2_V2 = variants {mkV2 (mkV "copiar") ; mkV2 (mkV "imitar") ; mkV2 (mkV "simular") ; } ; --*
lin copy_4_V2 = mkV2 (mkV "copiar") ; --*
lin copycat_N = variants {mkN "emulador" ; mkN "macaquice" ; } ; --*
lin copying_N = variants {mkN "acto" ; mkN "cópia" ; } ; --*
lin copyist_N = mkN "escriba" ; --*
lin copyright_N = variants {mkN "copyright" ; mkN "direito" ; mkN "of" ; } ; --*
lin copywriter_N = mkN "redator" ; --*
lin coquetry_N = mkN "flerte" ; --*
lin coquette_N = mkN "interesseira" ; --*
lin coracle_N = mkN "coracle" ; --*
lin coral_1_N = mkN "coral" ; --*
lin coral_2_N = variants {mkN "corais" ; mkN "coral" ; } ; --*
lin coral_3_N = mkN "coral" ; --*
lin coral_4_N = variants {mkN "coral" ; mkN "Coral" ; } ; --*
lin coral_A = mkA "coral" ; --*
lin coral_reef_N = mkN "reef" ; --*
lin coralwood_1_N = variants {mkN "carolina" ; mkN "Carolina" ; mkN "flower" ; mkN "pavonina" ; mkN "pride" ; mkN "sandalwood" ; } ; --*
lin cor_anglais_N = variants {mkN "anglais" ; mkN "horn" ; } ; --*
lin corbelled_A = mkA "misulado" ; --*
lin corbel_N = mkN "Mísula" ; --*
lin corchorus_2_N = mkN "Corchorus" ; --*
lin cord_1_N = mkN "corda" ; --*
lin cord_4_N = mkN "veludo" ; --*
lin cordial_1_A = variants {mkA "afável" ; mkA "amável" ; } ; --*
lin cordial_3_A = mkA "cordial" ; --*
lin cordiality_N = mkN "cordialidade" ; --*
lin cordial_N = variants {mkN "licor" ; mkN "Licores" ; } ; --*
lin cordite_N = mkN "cordite" ; --*
lin cordless_A = mkA "sem" ; --*
lin cordoba_3_PN = variants {mkPN "Córdoba" ; mkPN "Córdova" ; } ; --*
lin cordoba_4_PN = mkPN "Córdova" ; --*
lin corduroy_1_N = mkN "veludo" ; --*
lin core_2_N = variants {mkN "centro" ; mkN "coração" ; } ; --*
lin core_3_N = mkN "núcleo" ; --*
lin core_4_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin core_7_N = mkN "essência" ; --*
lin coriander_1_N = variants {mkN "coentro" ; mkN "parsley" ; mkN "plant" ; mkN "sativum" ; } ; --*
lin coriander_2_N = variants {mkN "coentro" ; mkN "seed" ; } ; --*
lin coriander_3_N = variants {mkN "coentro" ; mkN "parsley" ; } ; --*
lin corinthian_1_N = mkN "playboy" ; --*
lin corinthian_2_A = mkA "coríntio" ; --*
lin cork_1_N = mkN "cortiça" ; --*
lin cork_1_PN = mkPN "cortiça" ; --*
lin cork_3_N = mkN "Cork" ; --*
lin cork_3_PN = mkPN "Cork" ; --*
lin cork_4_N = variants {mkN "cork" ; mkN "rolha" ; } ; --*
lin cork_4_PN = variants {mkPN "cork" ; mkPN "rolha" ; } ; --*
lin corkscrew_N = variants {mkN "sacarolhas" ; mkN "screw" ; } ; --*
lin corm_N = mkN "Cormo" ; --*
lin cormorant_N = variants {mkN "carbo" ; mkN "cormorão" ; } ; --*
lin corn_1_N = variants {mkN "corn" ; mkN "mays" ; mkN "milho" ; mkN "Milho" ; } ; --*
lin corn_2_N = mkN "milho" ; --*
lin corn_3_N = variants {mkN "cereal" ; mkN "corn" ; } ; --*
lin corn_5_N = mkN "milho" ; --*
lin corncob_1_N = variants {mkN "cob" ; mkN "sabugo" ; } ; --*
lin cornea_N = mkN "córnea" ; --*
lin cornelian_N = variants {mkN "cornalina" ; mkN "Cornalina" ; } ; --*
lin corner_1_N = mkN "quina" ; --*
lin corner_1_V2 = mkV2 (mkV "controlar") ; --*
lin corner_2_V2 = variants {mkV2 (mkV "acuar") ; mkV2 (mkV "emboscar") ; mkV2 (mkV "encurralar") ; } ; --*
lin corner_2_V = variants {mkV "acuar" ; mkV "emboscar" ; mkV "encurralar" ; } ; --*
lin corner_3_N = variants {mkN "canto" ; mkN "quina" ; mkN "recanto" ; mkN "rincão" ; } ; --*
lin corner_3_V = mkV "virar" ; --*
lin corner_4_N = variants {mkN "chanfro" ; mkN "corner" ; mkN "point" ; } ; --*
lin corner_5_N = variants {mkN "canto" ; mkN "vértice" ; } ; --*
lin corner_6_N = mkN "nicho" ; --*
lin cornerback_N = mkN "cornerback" ; --*
lin corner_kick_N = mkN "kick" ; --*
lin cornerstone_1_N = variants {mkN "base" ; mkN "fundação" ; } ; --*
lin cornerstone_2_N = mkN "pedra" ; --*
lin cornet_N = variants {mkN "berimbau" ; mkN "corneta" ; mkN "harpa" ; mkN "trombeta" ; mkN "trompa" ; mkN "trompete" ; } ; --*
lin cornfield_N = variants {mkN "field" ; mkN "milharal" ; } ; --*
lin cornflour_N = variants {mkN "amido" ; mkN "Maisena" ; } ; --*
lin cornflower_2_N = variants {mkN "aciano" ; mkN "button" ; mkN "cyanus" ; } ; --*
lin cornice_2_N = mkN "cornija" ; --*
lin cornice_3_N = variants {mkN "cornija" ; mkN "Cornija" ; } ; --*
lin cornmeal_N = variants {mkN "Fubá" ; mkN "meal" ; } ; --*
lin cornstarch_N = variants {mkN "amido" ; mkN "Maisena" ; } ; --*
lin cornucopia_1_N = variants {mkN "cornucópia" ; mkN "of" ; } ; --*
lin cornucopia_2_N = variants {mkN "cornucópia" ; mkN "Cornucópia" ; mkN "riqueza" ; } ; --*
lin cornwall_PN = mkPN "Cornualha" ; --*
lin corolla_N = mkN "corola" ; --*
lin corollary_2_N = mkN "corolário" ; --*
lin corona_3_N = variants {mkN "discharge" ; mkN "Elmo's" ; mkN "Fogo" ; mkN "glow" ; mkN "Ulmo's" ; } ; --*
lin coronary_N = variants {mkN "coronária" ; mkN "thrombosis" ; } ; --*
lin coronation_N = mkN "coroação" ; --*
lin corporal_1_A = variants {mkA "corpóreo" ; mkA "somático" ; } ; --*
lin corporal_2_A = mkA "corporativo" ; --*
lin corporal_N = mkN "caporal" ; --*
lin corporate_1_A = mkA "corporativo" ; --*
lin corporate_2_A = mkA "corporativo" ; --*
lin corporate_3_A = variants {mkA "coletivo" ; mkA "corporativo" ; } ; --*
lin corporate_4_A = mkA "corporativo" ; --*
lin corporation_1_N = variants {mkN "corporação" ; mkN "empresas" ; } ; --*
lin corporation_2_N = variants {mkN "barriga" ; mkN "window" ; } ; --*
lin corporatism_N = mkN "Corporativismo" ; --*
lin corporeal_1_A = variants {mkA "corpórea" ; mkA "corpóreo" ; } ; --*
lin corporeal_2_A = variants {mkA "corpóreo" ; mkA "somático" ; } ; --*
lin corp_PN = variants {mkPN "corporação" ; mkPN "empresas" ; } ; --*
lin corps_1_N = variants {mkN "corpo" ; mkN "corps" ; } ; --*
lin corps_2_N = mkN "corpo" ; --*
lin corps_diplomatique_N = variants {mkN "corps" ; mkN "diplomatique" ; mkN "service" ; } ; --*
lin corpse_N = variants {mkN "cadáver" ; mkN "corpo" ; mkN "defunto" ; mkN "enchido" ; mkN "restos" ; } ; --*
lin corpulence_N = variants {mkN "corpulência" ; mkN "que" ; mkN "sobrepeso" ; } ; --*
lin corpulent_A = variants {mkA "corpulento" ; mkA "encorpado" ; mkA "espesso" ; mkA "gordo" ; mkA "grosso" ; mkA "obeso" ; } ; --*
lin corpus_3_N = mkN "corpo" ; --*
lin corpuscle_1_N = variants {mkN "átomo" ; mkN "partícula" ; } ; --*
lin corpuscle_2_N = variants {mkN "cell" ; mkN "corpuscle" ; mkN "corpúsculo" ; mkN "hemácia" ; } ; --*
lin corral_N = variants {mkN "cavalariça" ; mkN "pen" ; } ; --*
lin correct_1_A = variants {mkA "certo" ; mkA "correto" ; mkA "justo" ; } ; --*
lin correct_1_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "retificar") ; } ; --*
lin correct_2_A = mkA "bom" ; --*
lin correct_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "corrigir") ; } ; --*
lin correct_3_V2 = mkV2 (mkV "castigar") ; --*
lin correct_4_A = mkA "bom" ; --*
lin correct_4_V2 = variants {mkV2 (mkV "contrabalançar") ; mkV2 (mkV "contrabalancear") ; mkV2 (mkV "corrigir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin correct_5_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "disciplinar") ; mkV2 (mkV "out") ; } ; --*
lin correct_6_V = variants {mkV "corrigir" ; mkV "decair" ; mkV "declinar" ; } ; --*
lin correct_7_V2 = variants {mkV2 (mkV "acertar") ; mkV2 (mkV "ajustar") ; mkV2 (mkV "corrigir") ; } ; --*
lin correct_8_V = mkV "corrigir" ; --*
lin correction_1_N = variants {mkN "correção" ; mkN "retificação" ; } ; --*
lin correction_4_N = mkN "castigo" ; --*
lin correction_6_N = mkN "punição" ; --*
lin corrective_1_A = mkA "disciplinar" ; --*
lin corrective_2_A = mkA "corretivo" ; --*
lin correctness_1_N = variants {mkN "correcção" ; mkN "corretude" ; } ; --*
lin correlate_1_V = mkV "correlatar" ; --*
lin correlate_2_V2 = variants {mkV2 (mkV "correlacionar") ; mkV2 (mkV "correlatar") ; } ; --*
lin correlation_1_N = mkN "correlação" ; --*
lin correlation_2_N = variants {mkN "coefficient" ; mkN "correlação" ; mkN "of" ; } ; --*
lin correlational_A = mkA "correlacional" ; --*
lin correspond_1_V = variants {mkV "combinar" ; mkV "concordar" ; mkV "corresponder" ; } ; --*
lin correspond_2_V = mkV "equacionar" ; --*
lin correspond_3_V = variants {mkV "corresponder" ; mkV "corresponder-se" ; } ; --*
lin correspond_4_V = variants {mkV "corresponder" ; mkV "for" ; mkV "representar" ; } ; --*
lin correspondence_1_N = variants {mkN "comunicação" ; mkN "correspondência" ; } ; --*
lin correspondence_2_N = mkN "correspondência" ; --*
lin correspondence_4_N = mkN "simetria" ; --*
lin correspondence_5_N = variants {mkN "correspondência" ; mkN "paralelismo" ; mkN "semelhança" ; } ; --*
lin correspondent_1_N = variants {mkN "correspondente" ; mkN "writer" ; } ; --*
lin corresponding_1_A = mkA "correspondente" ; --*
lin corresponding_2_A = mkA "correspondente" ; --*
lin corresponding_3_A = variants {mkA "comparável" ; mkA "correspondente" ; mkA "equivalente" ; } ; --*
lin corridor_N = variants {mkN "corredor" ; mkN "passagem" ; } ; --*
lin corrigible_A = mkA "corrigível" ; --*
lin corroborate_1_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "corroborar") ; mkV2 (mkV "provar") ; mkV2 (mkV "substanciar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; } ; --*
lin corroborate_2_V2 = variants {mkV2 (mkV "corroborar") ; mkV2 (mkV "homologar") ; mkV2 (mkV "ratificar") ; } ; --*
lin corroborate_3_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "out") ; mkV2 (mkV "sustentar") ; } ; --*
lin corroboration_N = mkN "corroboração" ; --*
lin corroborative_A = mkA "colateral" ; --*
lin corrode_1_V2 = mkV2 (mkV "corroer") ; --*
lin corrode_2_V = mkV "corroer" ; --*
lin corrosion_1_N = mkN "corrosão" ; --*
lin corrosion_2_N = variants {mkN "corrosão" ; mkN "erosão" ; } ; --*
lin corrosive_1_A = variants {mkA "cáustico" ; mkA "corrosivo" ; } ; --*
lin corrosive_2_A = mkA "corrosivo" ; --*
lin corrugation_1_N = mkN "ondulação" ; --*
lin corrupt_1_A = mkA "corrupto" ; --*
lin corrupt_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin corrupt_2_A = mkA "corrupto" ; --*
lin corrupt_2_V2 = variants {mkV2 (mkV "corromper") ; mkV2 (mkV "one's") ; mkV2 (mkV "subornar") ; } ; --*
lin corrupt_3_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin corruptible_A = variants {mkA "corruptível" ; mkA "desonesto" ; mkA "venal" ; } ; --*
lin corruption_1_N = mkN "corrupção" ; --*
lin corruption_2_N = variants {mkN "corrupção" ; mkN "podridão" ; } ; --*
lin corruption_3_N = mkN "corrupção" ; --*
lin corruption_4_N = variants {mkN "corrupção" ; mkN "depravação" ; } ; --*
lin corruption_5_N = mkN "corrupção" ; --*
lin corruption_6_N = mkN "corrupção" ; --*
lin corruptness_1_N = mkN "corrupção" ; --*
lin corruptness_2_N = mkN "corrupção" ; --*
lin corsage_N = mkN "buquê" ; --*
lin corsair_1_N = variants {mkN "piratas" ; mkN "pirate" ; } ; --*
lin corse_1_N = variants {mkN "Corsega" ; mkN "Córsega" ; } ; --*
lin corse_2_N = mkN "Córsega" ; --*
lin corset_N = variants {mkN "corset" ; mkN "espartilho" ; mkN "Espartilho" ; } ; --*
lin cortege_1_N = mkN "cortejo" ; --*
lin cortege_2_N = variants {mkN "comitiva" ; mkN "séquito" ; } ; --*
lin cortex_1_N = variants {mkN "cortex" ; mkN "córtex" ; mkN "mantle" ; } ; --*
lin cortex_2_N = variants {mkN "cortex" ; mkN "córtex" ; } ; --*
lin corticosteroid_N = variants {mkN "cortical" ; mkN "Corticosteroide" ; mkN "Corticosteróide" ; } ; --*
lin corticosterone_N = mkN "corticosterona" ; --*
lin cortisone_N = variants {mkN "Acetate" ; mkN "Cortisona" ; } ; --*
lin corundom_N = variants {mkN "Corindon" ; mkN "coríndon" ; mkN "Coríndon" ; } ; --*
lin corundum_N = variants {mkN "Corindon" ; mkN "coríndon" ; mkN "Coríndon" ; } ; --*
lin corvette_N = variants {mkN "corveta" ; mkN "Corvetas" ; } ; --*
lin corvine_A = mkA "corvino" ; --*
lin corydalis_2_N = mkN "Corydalis" ; --*
lin cos_1_N = variants {mkN "coseno" ; mkN "co-seno" ; mkN "cosseno" ; } ; --*
lin cosecant_N = variants {mkN "co-secante" ; mkN "cossecante" ; } ; --*
lin cosigner_2_N = mkN "cosignatário" ; --*
lin cosine_N = variants {mkN "coseno" ; mkN "co-seno" ; mkN "cosseno" ; } ; --*
lin cosmetic_1_A = variants {mkA "cosmético" ; mkA "decorativo" ; mkA "ornamental" ; } ; --*
lin cosmetic_2_A = mkA "cosmético" ; --*
lin cosmetic_N = variants {mkN "cosmético" ; mkN "Cosméticos" ; } ; --*
lin cosmetology_N = mkN "cosmetologia" ; --*
lin cosmic_1_A = variants {mkA "cósmica" ; mkA "cósmico" ; } ; --*
lin cosmic_2_A = variants {mkA "cósmica" ; mkA "cósmico" ; } ; --*
lin cosmogony_1_N = variants {mkN "cosmologia" ; mkN "Cosmologia" ; } ; --*
lin cosmographer_N = mkN "cosmógrafo" ; --*
lin cosmography_1_N = mkN "Cosmografia" ; --*
lin cosmography_2_N = mkN "cosmografia" ; --*
lin cosmology_1_N = mkN "cosmologia" ; --*
lin cosmology_2_N = variants {mkN "cosmologia" ; mkN "Cosmologia" ; } ; --*
lin cosmonaut_N = variants {mkN "astronauta" ; mkN "cosmonauta" ; } ; --*
lin cosmopolitan_1_A = variants {mkA "cosmopolita" ; mkA "distributed" ; } ; --*
lin cosmopolitan_1_N = mkN "cosmopolita" ; --*
lin cosmopolitan_2_A = mkA "cosmopolita" ; --*
lin cosmopolitan_3_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin cosmos_1_N = variants {mkN "cosmo" ; mkN "criação" ; mkN "mundo" ; mkN "natureza" ; mkN "universo" ; mkN "Universo" ; } ; --*
lin cosmos_2_N = variants {mkN "cosmo" ; mkN "cosmos" ; } ; --*
lin co_sponsor_V2 = mkV2 (mkV "copatrocinar") ; --*
lin cosset_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin cost_1_N = variants {mkN "custo" ; mkN "custos" ; mkN "gastos" ; mkN "preço" ; } ; --*
lin cost_1_V2 = variants {mkV2 (mkV "custar") ; mkV2 (mkV "valer") ; } ; --*
lin cost_2_N = variants {mkN "custo" ; mkN "preço" ; mkN "preços" ; mkN "value" ; } ; --*
lin cost_2_V2 = mkV2 (mkV "custar") ; --*
lin cost_3_N = variants {mkN "custo" ; mkN "preço" ; } ; --*
lin costa_2_N = mkN "costela" ; --*
lin costal_A = mkA "costal" ; --*
lin co_star_1_V2 = variants {mkV2 (mkV "coadjuvar") ; mkV2 (mkV "coestrelar") ; } ; --*
lin co_star_1_V = variants {mkV "coadjuvar" ; mkV "coestrelar" ; } ; --*
lin costa_rican_A = mkA "Rican" ; --*
lin costa_rica_PN = variants {mkPN "of" ; mkPN "Rica" ; } ; --*
lin costly_1_A = mkA "caro" ; --*
lin costly_2_A = mkA "caro" ; --*
lin costume_1_N = variants {mkN "roupa" ; mkN "traje" ; mkN "vestido" ; } ; --*
lin costume_2_N = mkN "roupa" ; --*
lin costume_3_N = mkN "roupa" ; --*
lin costume_4_N = mkN "roupa" ; --*
lin cosy_1_N = variants {mkN "abafador" ; mkN "cosy" ; mkN "cozy" ; } ; --*
lin cosy_A = variants {mkA "acolhedor" ; mkA "confortável" ; mkA "íntimo" ; } ; --*
lin cot_2_N = mkN "berço" ; --*
lin cotangent_N = variants {mkN "cotangente" ; mkN "co-tangente" ; } ; --*
lin coterie_N = variants {mkN "camarilha" ; mkN "circle" ; } ; --*
lin cottage_N = variants {mkN "bangalô" ; mkN "casa" ; mkN "casinha" ; mkN "casinhola" ; mkN "chalé" ; } ; --*
lin cottar_2_N = mkN "chaveta" ; --*
lin cotter_3_N = mkN "chaveta" ; --*
lin cotton_1_N = variants {mkN "algodão" ; mkN "fiber" ; mkN "wool" ; } ; --*
lin cotton_2_N = mkN "algodão" ; --*
lin cotton_3_N = variants {mkN "algodão" ; mkN "plant" ; } ; --*
lin cotton_4_N = mkN "algodão" ; --*
lin cotton_plant_N = variants {mkN "algodão" ; mkN "plant" ; } ; --*
lin cotton_V = mkV "ligar" ; --*
lin cotton_wool_N = variants {mkN "algodão" ; mkN "fiber" ; mkN "wool" ; } ; --*
lin cotyledon_N = variants {mkN "cotilédone" ; mkN "leaf" ; } ; --*
lin couch_1_N = variants {mkN "canapé" ; mkN "sofá" ; } ; --*
lin couch_V2 = mkV2 (mkV "formular") ; --*
lin cougar_N = variants {mkN "concolor" ; mkN "leão-baio" ; mkN "lion" ; mkN "onça-parda" ; mkN "pantera" ; mkN "puma" ; mkN "suçuarana" ; } ; --*
lin cough_N = mkN "tosse" ; --*
lin cough_up_1_V2 = mkV2 (mkV "up") ; --*
lin cough_up_2_V2 = variants {mkV2 (mkV "expectorar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin cough_V = mkV "tossir" ; --*
lin coulisse_2_N = mkN "bastidores" ; --*
lin coulomb_1_N = mkN "coulomb" ; --*
lin coulomb_2_N = variants {mkN "Augustin" ; mkN "Charles-Augustin" ; } ; --*
lin council_1_N = mkN "conselho" ; --*
lin council_2_N = mkN "concílio" ; --*
lin council_3_N = mkN "concílio" ; --*
lin councillor_N = variants {mkN "member" ; mkN "vereador" ; } ; --*
lin counsel_1_N = variants {mkN "advogada" ; mkN "advogado" ; mkN "procurador" ; } ; --*
lin counsel_2_N = variants {mkN "aconselhamento" ; mkN "conselho" ; mkN "direção" ; } ; --*
lin counselling_1_N = variants {mkN "aconselhamento" ; mkN "conselho" ; mkN "direção" ; } ; --*
lin counsellor_2_N = mkN "conselheiro" ; --*
lin counsellor_3_N = variants {mkN "advogada" ; mkN "advogado" ; mkN "procurador" ; } ; --*
lin counselorship_1_N = mkN "assessoria" ; --*
lin counsel_V2 = variants {mkV2 (mkV "aconselhar") ; mkV2 (mkV "assessorar") ; mkV2 (mkV "avisar") ; mkV2 (mkV "opinar") ; } ; --*
lin count_1_N = variants {mkN "conta" ; mkN "contagem" ; } ; --*
lin count_1_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "enumerar") ; } ; --*
lin count_2_N = variants {mkN "conta" ; mkN "contagem" ; mkN "enumeração" ; } ; --*
lin count_2_V = variants {mkV "contar" ; mkV "importar" ; mkV "pesar" ; } ; --*
lin count_3_N = mkN "conde" ; --*
lin count_3_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "contar") ; mkV2 (mkV "pesar") ; } ; --*
lin count_3_V = variants {mkV "considerar" ; mkV "contar" ; mkV "pesar" ; } ; --*
lin count_4_V = mkV "contar" ; --*
lin count_5_V2 = mkV2 (mkV "contar") ; --*
lin count_6_V2 = mkV2 (mkV "contar") ; --*
lin countdown_N = variants {mkN "contagem" ; mkN "retrocontagem" ; } ; --*
lin countenance_1_N = variants {mkN "aparência" ; mkN "rosto" ; mkN "semblante" ; } ; --*
lin countenance_2_N = variants {mkN "aprovação" ; mkN "autorização" ; mkN "consentimento" ; mkN "Imprimatur" ; mkN "sanção" ; } ; --*
lin countenance_3_N = variants {mkN "face" ; mkN "Fisiognomia" ; mkN "fisionomia" ; mkN "rosto" ; } ; --*
lin countenance_V2 = variants {mkV2 (mkV "consentir") ; mkV2 (mkV "deixar") ; mkV2 (mkV "permitir") ; } ; --*
lin counter_1_N = mkN "balcão" ; --*
lin counter_1_V = mkV "replicar" ; --*
lin counter_2_N = mkN "ficha" ; --*
lin counter_2_V = variants {mkV "antecipar" ; mkV "antever" ; mkV "prever" ; } ; --*
lin counter_2_VS = variants {mkVS (mkV "antecipar") ; mkVS (mkV "antever") ; mkVS (mkV "prever") ; } ; --*
lin counter_4_N = variants {mkN "armário" ; mkN "bufete" ; mkN "prateleiras" ; } ; --*
lin counter_6_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin counteract_1_V2 = mkV2 (mkV "hostilizar") ; --*
lin counteract_3_V2 = variants {mkV2 (mkV "contrabalancear") ; mkV2 (mkV "neutralizar") ; } ; --*
lin counteract_4_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "sabotar") ; mkV2 (mkV "solapar") ; } ; --*
lin counteraction_N = mkN "neutralização" ; --*
lin counterargument_N = mkN "contra-argumento" ; --*
lin counterattack_1_N = mkN "contra-ataque" ; --*
lin counterattack_V2 = mkV2 (mkV "contra-atacar") ; --*
lin counterattack_V = mkV "contra-atacar" ; --*
lin counterbalance_1_N = mkN "contrapeso" ; --*
lin counterbalance_1_V2 = variants {mkV2 (mkV "contrabalançar") ; mkV2 (mkV "contrabalancear") ; mkV2 (mkV "corrigir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin counterbalance_2_N = variants {mkN "contrapeso" ; mkN "equilíbrio" ; } ; --*
lin counterbalance_2_V2 = variants {mkV2 (mkV "contrabalancear") ; mkV2 (mkV "contrapesar") ; } ; --*
lin counterbalance_3_N = mkN "contrapeso" ; --*
lin counterbalance_3_V2 = variants {mkV2 (mkV "contrabalancear") ; mkV2 (mkV "neutralizar") ; } ; --*
lin counterblow_N = mkN "contragolpe" ; --*
lin counterclockwise_Adv = mkAdv "no" ; --*
lin counterculture_N = mkN "Contracultura" ; --*
lin counterfeit_N = variants {mkN "coisa" ; mkN "contrafação" ; mkN "falsificação" ; mkN "forjar" ; mkN "moeda" ; } ; --*
lin counterfeit_V2 = variants {mkV2 (mkV "contrafazer") ; mkV2 (mkV "falsificar") ; } ; --*
lin counterglow_N = mkN "Gegenschein" ; --*
lin countermand_N = mkN "contra-ordem" ; --*
lin countermand_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin countermine_1_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "sabotar") ; mkV2 (mkV "solapar") ; } ; --*
lin counterpane_N = variants {mkN "colcha" ; mkN "cover" ; mkN "covering" ; } ; --*
lin counterpart_1_N = variants {mkN "contrapartida" ; mkN "number" ; mkN "sósia" ; } ; --*
lin counterpart_2_N = mkN "cópia" ; --*
lin counterpoint_N = mkN "contraponto" ; --*
lin counterpoise_N = mkN "contrapeso" ; --*
lin counter_revolutionary_1_A = mkA "contra-revolucionário" ; --*
lin counter_revolution_N = mkN "contra-revolução" ; --*
lin countersign_1_N = variants {mkN "contra-senha" ; mkN "palavra" ; mkN "password" ; mkN "senha" ; } ; --*
lin countersign_V2 = mkV2 (mkV "contra-assinar") ; --*
lin countersink_V2 = variants {mkV2 (mkV "escarear") ; mkV2 (mkV "pregar") ; } ; --*
lin counterspy_N = variants {mkN "espiã" ; mkN "espião" ; } ; --*
lin counterstain_N = mkN "Corante" ; --*
lin countertenor_1_N = variants {mkN "contratenor" ; mkN "Contra-tenor" ; } ; --*
lin countertenor_2_N = mkN "alto" ; --*
lin counterterrorism_N = variants {mkN "antiterrorismo" ; mkN "contra-terrorismo" ; } ; --*
lin countervail_1_V2 = mkV2 (mkV "compensar") ; --*
lin countervail_2_V2 = variants {mkV2 (mkV "contrabalancear") ; mkV2 (mkV "neutralizar") ; } ; --*
lin counterweight_N = mkN "contrapeso" ; --*
lin countess_N = mkN "condessa" ; --*
lin counting_house_N = mkN "escritório" ; --*
lin countless_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin count_on_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "avaliar") ; mkV2 (mkV "calcular") ; mkV2 (mkV "on") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin count_on_9_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "contar") ; } ; --*
lin count_on_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin country_1_N = variants {mkN "nação" ; mkN "país" ; mkN "politic" ; mkN "publica" ; mkN "república" ; mkN "união" ; } ; --*
lin country_2_N = variants {mkN "nação" ; mkN "país" ; mkN "terra" ; } ; --*
lin country_3_N = variants {mkN "gente" ; mkN "nação" ; mkN "povo" ; } ; --*
lin country_4_N = variants {mkN "area" ; mkN "campo" ; mkN "Zona" ; } ; --*
lin country_5_N = variants {mkN "ambiente" ; mkN "região" ; mkN "território" ; } ; --*
lin countryman_1_N = mkN "compatriota" ; --*
lin countryman_2_N = mkN "camponês" ; --*
lin countryside_N = variants {mkN "áreas" ; mkN "interior" ; mkN "roça" ; } ; --*
lin countrywoman_1_N = mkN "camponês" ; --*
lin county_1_N = variants {mkN "condado" ; mkN "Condados" ; } ; --*
lin county_2_N = variants {mkN "condado" ; mkN "Condado" ; } ; --*
lin coup_1_N = variants {mkN "d'etat" ; mkN "golpe" ; mkN "transferência" ; } ; --*
lin coup_d'etat_N = variants {mkN "d'etat" ; mkN "golpe" ; mkN "transferência" ; } ; --*
lin couple_1_N = variants {mkN "casal" ; mkN "dupla" ; } ; --*
lin couple_1_V2 = variants {mkV2 (mkV "acoplar") ; mkV2 (mkV "casar") ; mkV2 (mkV "emparelhar") ; } ; --*
lin couple_3_V = variants {mkV "emparelhar" ; mkV "juntar" ; mkV "off" ; } ; --*
lin couple_4_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin couple_4_V = variants {mkV "acasalar" ; mkV "copular" ; } ; --*
lin couplet_1_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin couplet_2_N = mkN "Dístico" ; --*
lin coupling_1_N = variants {mkN "canga" ; mkN "jugo" ; } ; --*
lin coupling_2_N = mkN "acoplamento" ; --*
lin coupling_3_N = variants {mkN "Acasalamento" ; mkN "acoplamento" ; mkN "Cópula" ; mkN "union" ; } ; --*
lin coupon_1_N = variants {mkN "bilhete" ; mkN "cupom" ; } ; --*
lin coupon_2_N = mkN "bónus" ; --*
lin courage_N = variants {mkN "ânimo" ; mkN "coragem" ; mkN "denodo" ; } ; --*
lin courageous_A = variants {mkA "afoito" ; mkA "arrojado" ; mkA "brava" ; mkA "bravo" ; mkA "corajoso" ; mkA "valente" ; mkA "valoroso" ; } ; --*
lin courgette_1_N = variants {mkN "abobrinha" ; mkN "Abobrinha" ; } ; --*
lin courgette_2_N = mkN "abobrinha" ; --*
lin courier_N = mkN "mensageiro" ; --*
lin course_1_N = variants {mkN "aula" ; mkN "curso" ; mkN "of" ; } ; --*
lin course_2_N = mkN "curso" ; --*
lin course_3_N = mkN "curso" ; --*
lin course_4_N = variants {mkN "caminho" ; mkN "conduta" ; mkN "curso" ; mkN "of" ; } ; --*
lin course_5_N = variants {mkN "caminho" ; mkN "curso" ; } ; --*
lin course_6_N = variants {mkN "aula" ; mkN "classe" ; mkN "curso" ; } ; --*
lin course_7_N = mkN "prato" ; --*
lin course_9_N = variants {mkN "campo" ; mkN "pista" ; } ; --*
lin courser_2_N = variants {mkN "carregador" ; mkN "corcel" ; } ; --*
lin course_V = variants {mkV "correr" ; mkV "fluir" ; mkV "manar" ; } ; --*
lin court_10_N = variants {mkN "pátio" ; mkN "terreiro" ; } ; --*
lin court_11_N = variants {mkN "homenagem" ; mkN "preito" ; } ; --*
lin court_1_N = mkN "tribunal" ; --*
lin court_1_V2 = variants {mkV2 (mkV "azarar") ; mkV2 (mkV "galantear") ; mkV2 (mkV "namorar") ; } ; --*
lin court_2_V2 = variants {mkV2 (mkV "cortejar") ; mkV2 (mkV "galantear") ; } ; --*
lin court_3_N = variants {mkN "corte" ; mkN "Cortes" ; mkN "court" ; } ; --*
lin court_5_N = variants {mkN "Court" ; mkN "Tribunais" ; } ; --*
lin court_8_N = variants {mkN "of" ; mkN "tribunal" ; mkN "Tribunal" ; } ; --*
lin court_card_N = mkN "card" ; --*
lin courteous_1_A = variants {mkA "cortês" ; mkA "gentil" ; } ; --*
lin courteous_2_A = mkA "cortês" ; --*
lin courtesan_N = variants {mkN "concubina" ; mkN "cortesã" ; mkN "odalisca" ; } ; --*
lin courtesy_1_N = mkN "cortesia" ; --*
lin courtesy_2_N = mkN "cortesia" ; --*
lin courtesy_3_N = variants {mkN "cortesia" ; mkN "manners" ; } ; --*
lin courtier_N = mkN "cortesão" ; --*
lin court_martial_2_N = mkN "corte" ; --*
lin courtship_N = variants {mkN "cortejamento" ; mkN "galanteio" ; } ; --*
lin courtyard_N = variants {mkN "pátio" ; mkN "terreiro" ; } ; --*
lin couscous_2_N = mkN "cuscuz" ; --*
lin cousin_N = variants {mkN "cousin" ; mkN "prima" ; mkN "primo" ; } ; --*
lin couturier_N = variants {mkN "costureiro" ; mkN "designer" ; } ; --*
lin covariance_N = variants {mkN "covariância" ; mkN "Co-variância" ; } ; --*
lin cove_1_N = mkN "enseada" ; --*
lin covenant_1_N = variants {mkN "concordata" ; mkN "pacto" ; mkN "tratado" ; } ; --*
lin covenant_2_N = variants {mkN "contrato" ; mkN "pacto" ; mkN "promessa" ; } ; --*
lin coven_N = variants {mkN "coven" ; mkN "Coven" ; } ; --*
lin coventry_1_PN = variants {mkPN "banimento" ; mkPN "desterro" ; mkPN "ostracismo" ; } ; --*
lin coventry_2_PN = mkPN "Coventry" ; --*
lin cover_10_V2 = mkV2 (mkV "cobrir") ; --*
lin cover_11_V2 = variants {mkV2 (mkV "esconder") ; mkV2 (mkV "up") ; } ; --*
lin cover_12_V2 = mkV2 (mkV "cobrir") ; --*
lin cover_14_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "proteger") ; } ; --*
lin cover_18_V2 = mkV2 (mkV "cobrir") ; --*
lin cover_19_V2 = variants {mkV2 (mkV "acobertar") ; mkV2 (mkV "cobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "ocultar") ; } ; --*
lin cover_1_N = variants {mkN "capa" ; mkN "cobertor" ; mkN "cobertura" ; mkN "envólucro" ; } ; --*
lin cover_1_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "tampar") ; } ; --*
lin cover_20_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "envolver") ; } ; --*
lin cover_22_V2 = variants {mkV2 (mkV "encapar") ; mkV2 (mkV "enfronhar") ; } ; --*
lin cover_25_V2 = mkV2 (mkV "eclodir") ; --*
lin cover_2_N = variants {mkN "coberta" ; mkN "cobertor" ; mkN "colcha" ; } ; --*
lin cover_2_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "over") ; } ; --*
lin cover_4_N = variants {mkN "binding" ; mkN "capa" ; } ; --*
lin cover_5_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "endereçar") ; mkV2 (mkV "falar") ; mkV2 (mkV "lidar") ; mkV2 (mkV "tratar") ; } ; --*
lin cover_6_N = mkN "tampa" ; --*
lin cover_6_V2 = variants {mkV2 (mkV "abarcar") ; mkV2 (mkV "circundar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "englobar") ; } ; --*
lin cover_7_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin cover_8_V2 = mkV2 (mkV "relatar") ; --*
lin cover_9_N = variants {mkN "cover" ; mkN "song" ; mkN "versão" ; mkN "version" ; } ; --*
lin coverage_1_N = variants {mkN "cobertura" ; mkN "coverage" ; } ; --*
lin coverage_3_N = variants {mkN "artigo" ; mkN "reportagem" ; } ; --*
lin covering_2_N = variants {mkN "capa" ; mkN "cobertura" ; } ; --*
lin covering_5_N = mkN "revestimento" ; --*
lin coverlet_N = mkN "cobertor" ; --*
lin covert_2_N = variants {mkN "capa" ; mkN "cobertor" ; mkN "cobertura" ; mkN "envólucro" ; } ; --*
lin covetous_1_A = variants {mkA "ciumento" ; mkA "invejosa" ; mkA "invejoso" ; } ; --*
lin covetous_2_A = variants {mkA "avaro" ; mkA "ávido" ; mkA "ganancioso" ; } ; --*
lin covetousness_2_N = variants {mkN "avareza" ; mkN "ganância" ; } ; --*
lin covetousness_3_N = variants {mkN "avareza" ; mkN "avarícia" ; mkN "avidez" ; mkN "cobiça" ; mkN "ganância" ; } ; --*
lin covet_V2 = variants {mkV2 (mkV "cobiçar") ; mkV2 (mkV "serávidopor") ; } ; --*
lin cow_1_N = mkN "vaca" ; --*
lin cow_2_N = mkN "vaca" ; --*
lin cow_3_N = variants {mkN "bruxa" ; mkN "vaca" ; } ; --*
lin coward_1_N = variants {mkN "covarde" ; mkN "medricas" ; } ; --*
lin coward_2_N = variants {mkN "Coward" ; mkN "Noel" ; mkN "Noël" ; } ; --*
lin cowardice_N = variants {mkN "cobardia" ; mkN "covardia" ; } ; --*
lin cowardly_A = variants {mkA "cobarde" ; mkA "covarde" ; mkA "covardemente" ; } ; --*
lin cowbarn_N = variants {mkN "barn" ; mkN "curral" ; } ; --*
lin cowbell_N = mkN "caneca" ; --*
lin cowberry_1_N = variants {mkN "cranberry" ; mkN "Vaccinium" ; mkN "vitis-idaea" ; } ; --*
lin cowboy_1_N = variants {mkN "boiadeiro" ; mkN "cowboy" ; mkN "vaqueiro" ; } ; --*
lin cower_2_V = variants {mkV "acovardar" ; mkV "acovardar-se" ; } ; --*
lin cowhand_N = variants {mkN "boiadeiro" ; mkN "cowboy" ; mkN "vaqueiro" ; } ; --*
lin cowherd_N = variants {mkN "boiadeiro" ; mkN "cowboy" ; mkN "vaqueiro" ; } ; --*
lin cowhouse_N = variants {mkN "barn" ; mkN "curral" ; } ; --*
lin cowl_1_N = variants {mkN "capô" ; mkN "capuz" ; mkN "coberta" ; } ; --*
lin cowl_2_N = variants {mkN "capuz" ; mkN "pano" ; } ; --*
lin cowling_N = variants {mkN "capô" ; mkN "capuz" ; mkN "coberta" ; } ; --*
lin cowman_N = variants {mkN "boiadeiro" ; mkN "cowboy" ; mkN "vaqueiro" ; } ; --*
lin cowpea_2_N = variants {mkN "pea" ; mkN "plant" ; mkN "sinensis" ; mkN "unguiculata" ; mkN "Vigna" ; } ; --*
lin cowpea_3_N = variants {mkN "Feijão" ; mkN "pea" ; } ; --*
lin cowpox_N = mkN "varíola" ; --*
lin cowrie_1_N = mkN "Cypraea" ; --*
lin cowshed_N = variants {mkN "barn" ; mkN "curral" ; } ; --*
lin cow_V2 = mkV2 (mkV "aterrorizar") ; --*
lin cox_2_N = mkN "Timoneiro" ; --*
lin coxcomb_3_N = mkN "crista" ; --*
lin coxswain_N = mkN "Timoneiro" ; --*
lin coyote_1_N = variants {mkN "coiote" ; mkN "latrans" ; mkN "wolf" ; } ; --*
lin coypu_N = variants {mkN "coypus" ; mkN "nútria" ; mkN "Ratão-do-banhado" ; } ; --*
lin cozen_1_V2 = variants {mkV2 (mkV "enganar") ; mkV2 (mkV "iludir") ; mkV2 (mkV "lograr") ; mkV2 (mkV "on") ; } ; --*
lin cozy_1_A = variants {mkA "acolhedor" ; mkA "confortável" ; mkA "íntimo" ; } ; --*
lin cozy_up_V = mkV "up" ; --*
lin crab_1_N = variants {mkN "caranguejo" ; mkN "siri" ; } ; --*
lin crab_3_V2 = mkV2 (mkV "pescar") ; --*
lin crab_3_V = mkV "pescar" ; --*
lin crab_4_N = variants {mkN "câncer" ; mkN "Câncer" ; mkN "the" ; } ; --*
lin crab_4_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin crab_5_N = mkN "caranguejo" ; --*
lin crab_6_N = variants {mkN "louse" ; mkN "Piolho" ; mkN "pubis" ; } ; --*
lin crack_10_N = variants {mkN "fractura" ; mkN "fratura" ; } ; --*
lin crack_1_N = variants {mkN "fenda" ; mkN "fissura" ; mkN "fresta" ; mkN "greta" ; mkN "racha" ; } ; --*
lin crack_1_V2 = variants {mkV2 (mkV "partir") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "rachar") ; } ; --*
lin crack_2_N = variants {mkN "buraco" ; mkN "fresta" ; mkN "racha" ; } ; --*
lin crack_3_N = variants {mkN "abertura" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin crack_4_N = mkN "estalo" ; --*
lin crack_5_V2 = variants {mkV2 (mkV "atravessar") ; mkV2 (mkV "through") ; } ; --*
lin crack_6_N = variants {mkN "chacota" ; mkN "gracejo" ; mkN "piada" ; mkN "xiste" ; } ; --*
lin crack_8_N = variants {mkN "cocaine" ; mkN "crack" ; } ; --*
lin crack_9_N = mkN "tentativa" ; --*
lin crack_9_V2 = variants {mkV2 (mkV "pirar") ; mkV2 (mkV "up") ; } ; --*
lin crack_down_V = mkV "down" ; --*
lin cracker_1_N = mkN "cream" ; --*
lin cracker_2_N = variants {mkN "caipira" ; mkN "Redneck" ; } ; --*
lin cracker_4_N = variants {mkN "panchão" ; mkN "Panchão" ; } ; --*
lin crackers_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin cracking_1_N = mkN "estalo" ; --*
lin cracking_2_N = variants {mkN "fractura" ; mkN "fratura" ; } ; --*
lin cracking_3_N = mkN "craqueamento" ; --*
lin crackle_1_N = mkN "creptação" ; --*
lin crackle_1_V = mkV "crepitar" ; --*
lin crackle_2_V = mkV "crepitar" ; --*
lin crackling_2_N = mkN "creptação" ; --*
lin crackpot_N = variants {mkN "aloprado" ; mkN "case" ; mkN "maluco" ; } ; --*
lin crack_up_1_V2 = variants {mkV2 (mkV "pirar") ; mkV2 (mkV "up") ; } ; --*
lin crack_up_1_V = variants {mkV "pirar" ; mkV "up" ; } ; --*
lin crack_up_2_V2 = mkV2 (mkV "up") ; --*
lin crack_up_2_V = mkV "up" ; --*
lin crack_up_N = mkN "colapso" ; --*
lin cradle_1_N = mkN "berço" ; --*
lin cradle_1_V2 = variants {mkV2 (mkV "ninar") ; mkV2 (mkV "segurar") ; } ; --*
lin cradle_2_N = variants {mkN "berço" ; mkN "of" ; mkN "origem" ; mkN "procedência" ; mkN "proveniência" ; } ; --*
lin cradle_3_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "ninar") ; } ; --*
lin cradle_6_V2 = mkV2 (mkV "correr") ; --*
lin craft_1_N = variants {mkN "arte" ; mkN "ofício" ; mkN "profissão" ; } ; --*
lin craft_2_N = mkN "navio" ; --*
lin craft_3_N = mkN "ordem" ; --*
lin craft_4_N = variants {mkN "arte" ; mkN "habilidade" ; } ; --*
lin craft_5_N = mkN "astúcia" ; --*
lin craftiness_1_N = mkN "astúcia" ; --*
lin craftsman_2_N = mkN "artesão" ; --*
lin craftsman_3_N = variants {mkN "artesão" ; mkN "artífice" ; } ; --*
lin craftsmanship_N = variants {mkN "arte" ; mkN "habilidade" ; } ; --*
lin craft_V2 = mkV2 (mkV "fazer") ; --*
lin crafty_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin cram_1_V2 = variants {mkV2 (mkV "lotar") ; mkV2 (mkV "up") ; } ; --*
lin cram_2_V2 = mkV2 (mkV "atochar") ; --*
lin cram_3_V = variants {mkV "away" ; mkV "marrar" ; mkV "up" ; } ; --*
lin cramp_1_N = variants {mkN "cãibra" ; mkN "espasmo" ; mkN "spasm" ; } ; --*
lin cramp_2_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "obstruir") ; } ; --*
lin cranberry_1_N = mkN "Oxicoco" ; --*
lin cranberry_2_N = variants {mkN "arando" ; mkN "mirtilo" ; mkN "oxicoco" ; mkN "uva-do-monte" ; } ; --*
lin crane_1_N = variants {mkN "Crane" ; mkN "Stephen" ; } ; --*
lin crane_3_N = variants {mkN "Constelação" ; mkN "Grus" ; } ; --*
lin crane_4_N = variants {mkN "guincho" ; mkN "guindaste" ; } ; --*
lin crane_5_N = variants {mkN "grou" ; mkN "grua" ; } ; --*
lin crane_V = variants {mkV "esticar" ; mkV "out" ; } ; --*
lin cranial_A = variants {mkA "cranial" ; mkA "craniano" ; } ; --*
lin craniology_N = mkN "craniologia" ; --*
lin craniometric_1_A = mkA "craniométrico" ; --*
lin craniometry_N = mkN "craniometria" ; --*
lin craniotomy_N = mkN "craniotomia" ; --*
lin cranium_N = variants {mkN "calota" ; mkN "crânio" ; } ; --*
lin crank_1_N = mkN "pessoa" ; --*
lin crank_1_V2 = mkV2 (mkV "ziguezaguear") ; --*
lin crank_2_N = variants {mkN "aloprado" ; mkN "case" ; mkN "maluco" ; } ; --*
lin crank_3_N = variants {mkN "feed" ; mkN "hydrochloride" ; mkN "metanfetamina" ; mkN "Metanfetaminas" ; } ; --*
lin crank_4_N = mkN "manivela" ; --*
lin crankcase_N = mkN "cárter" ; --*
lin crankshaft_N = mkN "cambota" ; --*
lin cranky_2_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin cranny_1_N = variants {mkN "abertura" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin crap_1_N = variants {mkN "bosta" ; mkN "cagalhão" ; mkN "cocô" ; mkN "merda" ; mkN "tolete" ; } ; --*
lin crap_2_N = variants {mkN "besteira" ; mkN "bosta" ; mkN "bull" ; mkN "merda" ; } ; --*
lin crape_2_N = mkN "crepe" ; --*
lin crap_V = variants {mkV "a" ; mkV "cagar" ; mkV "defecar" ; } ; --*
lin crash_10_V = mkV "quebrar" ; --*
lin crash_12_V = variants {mkV "cair" ; mkV "down" ; mkV "quebrar" ; } ; --*
lin crash_1_V = mkV "cair" ; --*
lin crash_2_N = mkN "acidente" ; --*
lin crash_2_V = mkV "bater" ; --*
lin crash_3_N = mkN "colapso" ; --*
lin crash_5_N = variants {mkN "crache" ; mkN "Travamento" ; } ; --*
lin crash_5_V = variants {mkV "apart" ; mkV "arrebentar" ; mkV "up" ; } ; --*
lin crash_8_V = variants {mkV "in" ; mkV "penetrar" ; } ; --*
lin crass_A = variants {mkA "crasso" ; mkA "grosseiro" ; } ; --*
lin crate_1_N = variants {mkN "cesta" ; mkN "cesto" ; mkN "engradado" ; } ; --*
lin crater_1_N = variants {mkN "crater" ; mkN "Cratera" ; } ; --*
lin crater_3_N = mkN "cratera" ; --*
lin crate_V2 = mkV2 (mkV "empacotar") ; --*
lin craton_N = variants {mkN "Craton" ; mkN "Cráton" ; } ; --*
lin crave_1_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "querer") ; mkV2 (mkV "ter") ; } ; --*
lin crave_1_V = variants {mkV "desejar" ; mkV "querer" ; mkV "ter" ; } ; --*
lin craven_N = variants {mkN "medricas" ; mkN "medroso" ; } ; --*
lin craving_N = variants {mkN "anseio" ; mkN "desejo" ; } ; --*
lin crawfish_1_N = variants {mkN "lagostas" ; mkN "lagostim" ; } ; --*
lin crawfish_2_N = mkN "caranguejo" ; --*
lin crawfish_3_N = variants {mkN "crawfish" ; mkN "lagosta" ; mkN "lobster" ; } ; --*
lin crawl_1_N = mkN "engatinhamento" ; --*
lin crawl_1_V = variants {mkV "engatinhar" ; mkV "gatinhar" ; mkV "rastejar" ; mkV "rastejar-se" ; mkV "serpear" ; } ; --*
lin crawl_2_N = variants {mkN "Australian" ; mkN "crawl" ; } ; --*
lin crawl_3_N = mkN "rastejamento" ; --*
lin crawl_4_V = variants {mkV "acovardar" ; mkV "acovardar-se" ; } ; --*
lin crawler_1_N = variants {mkN "adulador" ; mkN "bajulador" ; mkN "lambe-botas" ; mkN "puxa-saco" ; mkN "sicofanta" ; } ; --*
lin crawler_3_N = variants {mkN "minhoca" ; mkN "minhocas" ; mkN "worm" ; } ; --*
lin crayfish_1_N = variants {mkN "lagosta" ; mkN "lobster" ; } ; --*
lin crayfish_2_N = variants {mkN "lagostas" ; mkN "lagostim" ; } ; --*
lin crayfish_3_N = mkN "caranguejo" ; --*
lin crayfish_4_N = variants {mkN "crawfish" ; mkN "lagosta" ; mkN "lobster" ; } ; --*
lin crayon_N = variants {mkN "crayon" ; mkN "pastel" ; } ; --*
lin craze_1_N = variants {mkN "moda" ; mkN "voga" ; } ; --*
lin craze_2_N = variants {mkN "delírio" ; mkN "frenesi" ; mkN "loucura" ; } ; --*
lin craziness_1_N = mkN "insanidade" ; --*
lin craziness_2_N = variants {mkN "bobeira" ; mkN "loucura" ; mkN "maluquice" ; } ; --*
lin craziness_3_N = variants {mkN "idiotice" ; mkN "tolice" ; } ; --*
lin crazy_1_A = mkA "louco" ; --*
lin crazy_3_A = mkA "louco" ; --*
lin creak_N = mkN "rangido" ; --*
lin creaky_3_A = mkA "artrítico" ; --*
lin cream_1_N = variants {mkN "creme" ; mkN "nata" ; } ; --*
lin cream_2_N = variants {mkN "creme" ; mkN "nata" ; } ; --*
lin cream_2_V2 = mkV2 (mkV "destruir") ; --*
lin cream_3_N = mkN "creme" ; --*
lin cream_off_2_V2 = mkV2 (mkV "off") ; --*
lin crease_1_N = mkN "dobra" ; --*
lin crease_1_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; mkV2 (mkV "up") ; } ; --*
lin crease_2_N = variants {mkN "ruga" ; mkN "sulco" ; } ; --*
lin crease_2_V2 = variants {mkV2 (mkV "corrugar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; } ; --*
lin crease_4_V = mkV "amassar" ; --*
lin create_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "construir") ; mkV2 (mkV "criar") ; mkV2 (mkV "provocar") ; mkV2 (mkV "realizar") ; } ; --*
lin create_2_V2 = mkV2 (mkV "criar") ; --*
lin create_3_V = variants {mkV "criar" ; mkV "fazer" ; } ; --*
lin create_5_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "instituir") ; } ; --*
lin create_6_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "criar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin creatine_1_N = mkN "creatina" ; --*
lin creation_1_N = variants {mkN "activity" ; mkN "criação" ; } ; --*
lin creation_2_N = mkN "criação" ; --*
lin creation_3_N = variants {mkN "concepção" ; mkN "criação" ; } ; --*
lin creation_4_N = variants {mkN "criação" ; mkN "fundação" ; mkN "início" ; mkN "instituição" ; mkN "introdução" ; } ; --*
lin creation_6_N = variants {mkN "cosmo" ; mkN "criação" ; mkN "mundo" ; mkN "natureza" ; mkN "universo" ; mkN "Universo" ; } ; --*
lin creationism_N = variants {mkN "criacionismo" ; mkN "Criacionismo" ; } ; --*
lin creative_1_A = variants {mkA "criador" ; mkA "criativo" ; mkA "original" ; } ; --*
lin creative_2_A = mkA "criativo" ; --*
lin creativeness_N = variants {mkN "criatividade" ; mkN "Criatividade" ; mkN "thinking" ; } ; --*
lin creativity_N = variants {mkN "criatividade" ; mkN "Criatividade" ; mkN "thinking" ; } ; --*
lin creator_1_N = variants {mkN "Almighty" ; mkN "Senhor" ; mkN "Todo-Poderoso" ; } ; --*
lin creator_2_N = variants {mkN "creador" ; mkN "criador" ; } ; --*
lin creature_1_N = variants {mkN "animal" ; mkN "being" ; mkN "besta" ; mkN "bicho" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin creature_2_N = variants {mkN "criança" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin credence_1_N = mkN "aceitação" ; --*
lin credence_2_N = mkN "Aparador" ; --*
lin credenza_N = mkN "Aparador" ; --*
lin credibility_N = mkN "credibilidade" ; --*
lin credible_1_A = variants {mkA "acreditável" ; mkA "crível" ; } ; --*
lin credible_3_A = variants {mkA "credível" ; mkA "crível" ; } ; --*
lin credit_1_N = variants {mkN "crédito" ; mkN "reconhecimento" ; } ; --*
lin credit_1_V2 = mkV2 (mkV "dar") ; --*
lin credit_2_N = mkN "crédito" ; --*
lin credit_2_V2 = variants {mkV2 (mkV "agradecer") ; mkV2 (mkV "atribuir") ; mkV2 (mkV "dar") ; } ; --*
lin credit_3_N = variants {mkN "crédito" ; mkN "entry" ; } ; --*
lin credit_3_V2 = mkV2 (mkV "creditar") ; --*
lin credit_4_V2 = mkV2 (mkV "acreditar") ; --*
lin credit_5_N = variants {mkN "crédito" ; mkN "payment" ; } ; --*
lin credit_6_N = variants {mkN "credit" ; mkN "crédito" ; } ; --*
lin credit_7_N = variants {mkN "citação" ; mkN "menção" ; mkN "referência" ; } ; --*
lin credit_9_N = variants {mkN "Nota" ; mkN "rating" ; } ; --*
lin creditor_N = mkN "credor" ; --*
lin credit_worthy_A = mkA "responsável" ; --*
lin credo_N = variants {mkN "acto" ; mkN "credo" ; } ; --*
lin credulity_N = mkN "credulidade" ; --*
lin credulous_1_A = mkA "crédulo" ; --*
lin credulous_2_A = mkA "crédulo" ; --*
lin creed_1_N = variants {mkN "acto" ; mkN "credo" ; } ; --*
lin creed_2_N = variants {mkN "credo" ; mkN "doctrine" ; mkN "evangelho" ; } ; --*
lin creek_1_N = variants {mkN "corrente" ; mkN "enseadas" ; mkN "Esteiro" ; mkN "pequena" ; mkN "regatos" ; mkN "riacho" ; mkN "ribeiro" ; } ; --*
lin creek_2_N = variants {mkN "creek" ; mkN "Povo" ; } ; --*
lin creep_1_V = variants {mkV "engatinhar" ; mkV "gatinhar" ; mkV "rastejar" ; mkV "rastejar-se" ; mkV "serpear" ; } ; --*
lin creep_2_V = variants {mkV "esgueirar" ; mkV "ir" ; } ; --*
lin creep_4_N = mkN "rastejamento" ; --*
lin creep_4_V = variants {mkV "acovardar" ; mkV "acovardar-se" ; } ; --*
lin creepy_2_A = mkA "horripilante" ; --*
lin cremate_V2 = mkV2 (mkV "cremar") ; --*
lin cremation_N = mkN "cremação" ; --*
lin crematorium_1_N = mkN "crematório" ; --*
lin crematorium_2_N = variants {mkN "chamber" ; mkN "crematório" ; mkN "Forno" ; } ; --*
lin crematory_1_N = mkN "crematório" ; --*
lin crematory_2_N = variants {mkN "chamber" ; mkN "crematório" ; mkN "Forno" ; } ; --*
lin crenelation_1_N = mkN "ameia" ; --*
lin creosote_2_N = variants {mkN "creosote" ; mkN "creosoto" ; } ; --*
lin crepe_3_N = mkN "crepe" ; --*
lin crepitate_V = mkV "crepitar" ; --*
lin crepitation_N = mkN "creptação" ; --*
lin crepuscular_A = mkA "crepuscular" ; --*
lin crescent_N = mkN "crescente" ; --*
lin cresol_N = variants {mkN "cresol" ; mkN "phenol" ; } ; --*
lin cress_1_N = variants {mkN "mastruço" ; mkN "plant" ; } ; --*
lin cress_2_N = variants {mkN "agrião" ; mkN "agriões" ; mkN "mastruço" ; } ; --*
lin crest_1_N = mkN "crista" ; --*
lin crest_2_N = variants {mkN "cima" ; mkN "cume" ; mkN "pico" ; mkN "topo" ; } ; --*
lin crest_4_N = mkN "brasão" ; --*
lin crest_5_N = mkN "crista" ; --*
lin cretinism_N = mkN "Cretinismo" ; --*
lin cretin_N = variants {mkN "bobo" ; mkN "boboca" ; mkN "burro" ; mkN "cretino" ; mkN "débil" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "parvo" ; mkN "pateta" ; mkN "retardado" ; } ; --*
lin cretonne_N = mkN "Cretone" ; --*
lin crevasse_N = variants {mkN "crevasse" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin crevice_1_N = variants {mkN "abertura" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin crevice_2_N = variants {mkN "fenda" ; mkN "fissura" ; mkN "fresta" ; mkN "greta" ; mkN "racha" ; } ; --*
lin crew_1_N = variants {mkN "equipagem" ; mkN "equipe" ; mkN "tripulação" ; mkN "Tripulação" ; } ; --*
lin crew_2_N = variants {mkN "partida" ; mkN "party" ; } ; --*
lin crew_3_N = variants {mkN "gangue" ; mkN "quadrilha" ; } ; --*
lin crew_4_N = variants {mkN "equipe" ; mkN "tripulação" ; } ; --*
lin crewman_1_N = variants {mkN "marinheiro" ; mkN "marujo" ; mkN "tripulante" ; } ; --*
lin crewman_2_N = variants {mkN "member" ; mkN "tripulante" ; } ; --*
lin crew_V = mkV "tripular" ; --*
lin crib_1_N = mkN "berço" ; --*
lin cricket_1_N = variants {mkN "criquete" ; mkN "grillo" ; mkN "grilo" ; mkN "Grilos" ; } ; --*
lin cricket_2_N = variants {mkN "Criquete" ; mkN "críquete" ; mkN "Críquete" ; } ; --*
lin crime_1_N = variants {mkN "crime" ; mkN "ofensa" ; mkN "offence" ; mkN "offense" ; } ; --*
lin crime_2_N = variants {mkN "crime" ; mkN "crimes" ; mkN "Criminalidade" ; } ; --*
lin criminal_1_A = mkA "repreensível" ; --*
lin criminal_2_A = variants {mkA "criminal" ; mkA "criminoso" ; } ; --*
lin criminal_3_A = mkA "criminoso" ; --*
lin criminalism_N = variants {mkN "criminalidade" ; mkN "culpa" ; } ; --*
lin criminalize_1_V2 = mkV2 (mkV "criminalizar") ; --*
lin criminalize_2_V2 = variants {mkV2 (mkV "criminalizar") ; mkV2 (mkV "proscrever") ; } ; --*
lin criminal_N = variants {mkN "criminoso" ; mkN "fora-de-lei" ; } ; --*
lin criminology_N = variants {mkN "criminologia" ; mkN "Criminologia" ; } ; --*
lin crimp_1_N = mkN "dobra" ; --*
lin crimp_2_V2 = variants {mkV2 (mkV "encrespar") ; mkV2 (mkV "frisar") ; mkV2 (mkV "up") ; } ; --*
lin crimson_1_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin crimson_2_A = mkA "violento" ; --*
lin crimson_3_A = variants {mkA "escarlate" ; mkA "rúbeo" ; mkA "rubicundo" ; mkA "rúbido" ; mkA "rubro" ; mkA "rufo" ; mkA "rússeo" ; mkA "vermelho" ; } ; --*
lin crimson_N = variants {mkN "carmesim" ; mkN "carmim" ; mkN "red" ; } ; --*
lin crimson_V = variants {mkV "avermelhar" ; mkV "corar" ; mkV "enrubescer" ; mkV "rosar" ; mkV "ruborizar" ; } ; --*
lin cringe_1_V = mkV "recuar" ; --*
lin cringe_2_V = variants {mkV "acovardar" ; mkV "acovardar-se" ; } ; --*
lin cringle_N = variants {mkN "casa" ; mkN "ilhó" ; } ; --*
lin crinkle_1_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; mkV2 (mkV "up") ; } ; --*
lin crinkle_1_V = variants {mkV "amassar" ; mkV "dobrar" ; mkV "enrugar" ; mkV "up" ; } ; --*
lin crinkle_2_V = mkV "amassar" ; --*
lin crinkle_N = variants {mkN "ruga" ; mkN "sulco" ; } ; --*
lin crinoline_3_N = mkN "crinolina" ; --*
lin cripple_1_V2 = mkV2 (mkV "inutilizar") ; --*
lin cripple_2_V2 = mkV2 (mkV "aleijar") ; --*
lin cripple_N = mkN "coxo" ; --*
lin crisis_1_N = mkN "crise" ; --*
lin crisis_2_N = mkN "crise" ; --*
lin crisp_1_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; mkV2 (mkV "up") ; } ; --*
lin crisp_1_V = variants {mkV "amassar" ; mkV "dobrar" ; mkV "enrugar" ; mkV "up" ; } ; --*
lin crisp_2_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "tostar") ; } ; --*
lin crisp_4_A = variants {mkA "congelante" ; mkA "crocante" ; mkA "efervecente" ; mkA "estaladiço" ; } ; --*
lin crisp_5_A = variants {mkA "crespo" ; mkA "encaracolado" ; } ; --*
lin crisp_6_A = variants {mkA "curto" ; mkA "lacônico" ; } ; --*
lin crisscross_N = mkN "cruz" ; --*
lin cristobalite_N = mkN "cristobalita" ; --*
lin criterion_1_N = variants {mkN "critério" ; mkN "padrões" ; } ; --*
lin criterion_2_N = variants {mkN "padrão" ; mkN "standard" ; } ; --*
lin critic_1_N = mkN "crítico" ; --*
lin critic_2_N = mkN "crítico" ; --*
lin critic_3_N = mkN "crítico" ; --*
lin critical_1_A = mkA "crítico" ; --*
lin critical_2_A = mkA "crítico" ; --*
lin critical_3_A = mkA "crítico" ; --*
lin critical_4_A = variants {mkA "crítico" ; mkA "essencial" ; mkA "indispensável" ; } ; --*
lin critical_5_A = variants {mkA "crítico" ; mkA "decisivo" ; mkA "fundamental" ; } ; --*
lin critical_6_A = mkA "crítico" ; --*
lin critical_7_A = mkA "crítico" ; --*
lin criticism_1_N = variants {mkN "criticismo" ; mkN "judgment" ; } ; --*
lin criticism_2_N = mkN "crítica" ; --*
lin criticism_3_N = variants {mkN "crítica" ; mkN "criticism" ; } ; --*
lin criticize_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "criticar") ; } ; --*
lin criticize_2_V2 = mkV2 (mkV "criticar") ; --*
lin critique_1_N = variants {mkN "article" ; mkN "resenha" ; mkN "review" ; } ; --*
lin critique_2_N = mkN "crítica" ; --*
lin croak_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "bater") ; mkV2 (mkV "dead") ; mkV2 (mkV "falecer") ; mkV2 (mkV "in") ; mkV2 (mkV "it") ; mkV2 (mkV "morrer") ; mkV2 (mkV "off") ; mkV2 (mkV "perecer") ; mkV2 (mkV "the") ; } ; --*
lin croak_1_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin croak_2_V2 = mkV2 (mkV "rouquejar") ; --*
lin croak_2_V = mkV "rouquejar" ; --*
lin croak_3_V = variants {mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin croak_4_V2 = variants {mkV2 (mkV "grasnar") ; mkV2 (mkV "grasnir") ; } ; --*
lin croak_N = mkN "coaxar" ; --*
lin crocheting_1_N = variants {mkN "Croche" ; mkN "Croché" ; mkN "crochê" ; } ; --*
lin crochet_N = variants {mkN "Croche" ; mkN "Croché" ; mkN "crochê" ; } ; --*
lin crock_1_N = variants {mkN "black" ; mkN "fuligem" ; mkN "picumã" ; } ; --*
lin crockery_N = variants {mkN "faiença" ; mkN "louças" ; } ; --*
lin crocket_N = mkN "cogulho" ; --*
lin crocodile_N = variants {mkN "crocodilo" ; mkN "crocodilos" ; } ; --*
lin crocus_N = variants {mkN "açafrão" ; mkN "croco" ; } ; --*
lin croesus_1_PN = mkPN "Creso" ; --*
lin cromlech_N = variants {mkN "cromeleque" ; mkN "Dolmen" ; mkN "tomb" ; } ; --*
lin crone_N = variants {mkN "bruxa" ; mkN "coroa" ; } ; --*
lin cronyism_N = mkN "Fisiologismo" ; --*
lin crony_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin crook_1_N = variants {mkN "criminoso" ; mkN "fora-de-lei" ; } ; --*
lin crook_1_PN = variants {mkPN "criminoso" ; mkPN "fora-de-lei" ; } ; --*
lin crook_2_N = mkN "arco" ; --*
lin crook_2_PN = mkPN "arco" ; --*
lin crooked_1_A = mkA "escuso" ; --*
lin crooked_2_A = mkA "corrupto" ; --*
lin crooked_3_A = mkA "assimétrico" ; --*
lin crook_V2 = variants {mkV2 (mkV "curvar") ; mkV2 (mkV "dobrar") ; } ; --*
lin crooner_N = mkN "crooner" ; --*
lin croon_V2 = mkV2 (mkV "cantarolar") ; --*
lin croon_V = mkV "cantarolar" ; --*
lin crop_1_N = variants {mkN "colheita" ; mkN "colheitas" ; mkN "rendimento" ; mkN "safra" ; } ; --*
lin crop_1_V = mkV "cortar" ; --*
lin crop_2_V2 = mkV2 (mkV "cultivar") ; --*
lin crop_4_V2 = mkV2 (mkV "pastar") ; --*
lin crop_4_V = mkV "pastar" ; --*
lin crop_5_V = mkV "pastar" ; --*
lin crop_6_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin cropper_N = variants {mkN "arrendatário" ; mkN "farmer" ; } ; --*
lin croquet_N = variants {mkN "croquet" ; mkN "Cróquet" ; } ; --*
lin croquette_N = mkN "croquete" ; --*
lin crosby_PN = variants {mkPN "Bing" ; mkPN "Crosby" ; mkPN "Lillis" ; } ; --*
lin crosier_N = mkN "báculo" ; --*
lin cross_1_A = variants {mkA "birrento" ; mkA "mal" ; mkA "rabugento" ; } ; --*
lin cross_1_N = mkN "cruz" ; --*
lin cross_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin cross_2_A = variants {mkA "transversal" ; mkA "transverso" ; } ; --*
lin cross_2_N = mkN "cruz" ; --*
lin cross_2_V2 = variants {mkV2 (mkV "cruzar-se") ; mkV2 (mkV "intersectar") ; mkV2 (mkV "se") ; } ; --*
lin cross_2_V = variants {mkV "cruzar-se" ; mkV "intersectar" ; mkV "se" ; } ; --*
lin cross_3_N = mkN "cruz" ; --*
lin cross_3_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin cross_5_N = variants {mkN "híbrido" ; mkN "mestiço" ; } ; --*
lin cross_5_V2 = mkV2 (mkV "abranger") ; --*
lin cross_6_N = variants {mkN "hibridização" ; mkN "miscigenação" ; } ; --*
lin cross_6_V = mkV "cruzar" ; --*
lin cross_8_V2 = variants {mkV2 (mkV "cruzar") ; mkV2 (mkV "hibridizar") ; } ; --*
lin crossbar_2_N = mkN "listel" ; --*
lin crossbill_N = variants {mkN "cruza-bico" ; mkN "curvirostra" ; } ; --*
lin crossbow_N = variants {mkN "arco" ; mkN "besta" ; } ; --*
lin crossbreed_N = variants {mkN "híbrido" ; mkN "mestiço" ; } ; --*
lin crossbreed_V2 = variants {mkV2 (mkV "cruzar") ; mkV2 (mkV "hibridizar") ; } ; --*
lin crosscut_2_N = variants {mkN "atalho" ; mkN "tecla" ; } ; --*
lin crossfire_1_N = mkN "fogo" ; --*
lin crossfire_2_N = mkN "fogo" ; --*
lin cross_index_N = mkN "referência" ; --*
lin crossing_2_N = mkN "vau" ; --*
lin crossing_4_N = variants {mkN "cruzamento" ; mkN "encruzilhada" ; } ; --*
lin crossing_5_N = variants {mkN "faixa" ; mkN "passadeira" ; } ; --*
lin crossing_6_N = variants {mkN "hibridização" ; mkN "miscigenação" ; } ; --*
lin crossness_1_N = mkN "irritabilidade" ; --*
lin cross_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin cross_out_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin crossover_4_N = variants {mkN "faixa" ; mkN "passadeira" ; } ; --*
lin crosspatch_N = mkN "pessoa" ; --*
lin cross_reference_N = mkN "referência" ; --*
lin crossroad_N = variants {mkN "cruzamento" ; mkN "encruzilhada" ; } ; --*
lin crossroads_2_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin crosstalk_N = mkN "Crosstalk" ; --*
lin crosswalk_N = variants {mkN "faixa" ; mkN "passadeira" ; } ; --*
lin crosswise_1_Adv = mkAdv "transversalmente" ; --*
lin crosswise_1_A = mkA "transversal" ; --*
lin crosswise_2_Adv = mkAdv "transversalmente" ; --*
lin crosswise_2_A = mkA "transversal" ; --*
lin crossword_N = variants {mkN "Palavras" ; mkN "palavrascruzadas" ; mkN "puzzle" ; } ; --*
lin crotch_1_N = mkN "bifurcação" ; --*
lin crotch_2_N = variants {mkN "entreperna" ; mkN "virilha" ; } ; --*
lin crotch_3_N = variants {mkN "genitália" ; mkN "organ" ; mkN "parts" ; mkN "sexo" ; } ; --*
lin crotchet_1_N = variants {mkN "gancho" ; mkN "volta" ; } ; --*
lin crotchet_2_N = variants {mkN "note" ; mkN "semínima" ; } ; --*
lin crotchety_A = mkA "resmungão" ; --*
lin crouch_1_V = variants {mkV "agachar" ; mkV "dobrar" ; mkV "inclinar" ; } ; --*
lin crouch_2_V = variants {mkV "acocorar" ; mkV "acocorar-se" ; mkV "agachar" ; mkV "baixar-se" ; mkV "down" ; mkV "up" ; } ; --*
lin crouch_N = mkN "estardecócoras" ; --*
lin croup_1_N = variants {mkN "Laringotraqueobronquite" ; mkN "laryngitis" ; } ; --*
lin croup_2_N = variants {mkN "anca" ; mkN "culatra" ; mkN "garupa" ; mkN "rabo" ; mkN "traseira" ; mkN "traseiro" ; } ; --*
lin crouton_N = mkN "Crouton" ; --*
lin crow_1_N = mkN "corvo" ; --*
lin crow_1_V = variants {mkV "gabar" ; mkV "triunfar" ; } ; --*
lin crow_1_VS = variants {mkVS (mkV "gabar") ; mkVS (mkV "triunfar") ; } ; --*
lin crow_2_V = variants {mkV "gabar" ; mkV "gabar-se" ; } ; --*
lin crow_3_V = variants {mkV "cantar" ; mkV "corvejar" ; mkV "crocitar" ; mkV "grasnar" ; } ; --*
lin crow_4_N = variants {mkN "Constelação" ; mkN "Corvus" ; } ; --*
lin crowbar_N = variants {mkN "alavanca" ; mkN "bar" ; mkN "pé-de-cabra" ; } ; --*
lin crowberry_N = mkN "Empetrum" ; --*
lin crowd_1_N = variants {mkN "montão" ; mkN "multidão" ; mkN "turba" ; } ; --*
lin crowd_1_V2 = mkV2 (mkV "arrebanhar") ; --*
lin crowd_2_N = variants {mkN "gangue" ; mkN "quadrilha" ; } ; --*
lin crowd_3_V2 = variants {mkV2 (mkV "apinhar") ; mkV2 (mkV "together") ; } ; --*
lin crowd_4_V2 = mkV2 (mkV "chegar") ; --*
lin crowded_A = variants {mkA "aglomerado" ; mkA "cheio" ; mkA "movimentado" ; } ; --*
lin crown_1_N = mkN "coroa" ; --*
lin crown_2_V2 = mkV2 (mkV "culminar") ; --*
lin crown_3_V2 = mkV2 (mkV "coroar") ; --*
lin crown_4_N = variants {mkN "coroa" ; mkN "diadema" ; mkN "Diadema" ; } ; --*
lin crown_4_V2 = mkV2 (mkV "coroar") ; --*
lin crown_5_N = mkN "copa" ; --*
lin crown_8_N = variants {mkN "cima" ; mkN "cume" ; mkN "pico" ; mkN "topo" ; } ; --*
lin crow's_nest_N = mkN "nest" ; --*
lin crozier_N = mkN "báculo" ; --*
lin crucial_1_A = variants {mkA "crítico" ; mkA "crucial" ; mkA "importante" ; } ; --*
lin crucial_2_A = mkA "crucial" ; --*
lin crucial_3_A = variants {mkA "crucial" ; mkA "important" ; mkA "the" ; } ; --*
lin crucible_N = variants {mkN "crisol" ; mkN "Forno" ; mkN "pot" ; } ; --*
lin crucifix_1_N = variants {mkN "crucifixo" ; mkN "Crucifixo" ; } ; --*
lin crucifixion_1_N = mkN "crucificação" ; --*
lin crucifixion_3_N = mkN "crucificação" ; --*
lin crucify_1_V2 = mkV2 (mkV "crucificar") ; --*
lin crucify_2_V2 = variants {mkV2 (mkV "crucificar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "retalhar") ; mkV2 (mkV "tormentar") ; } ; --*
lin crucify_3_V2 = mkV2 (mkV "mortificar") ; --*
lin crucify_4_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "crucificar") ; } ; --*
lin cruddy_A = variants {mkA "obsceno" ; mkA "sujo" ; mkA "verde" ; } ; --*
lin crude_1_A = mkA "bronco" ; --*
lin crude_2_A = mkA "ordinário" ; --*
lin crude_3_A = variants {mkA "cru" ; mkA "não" ; } ; --*
lin crude_4_A = variants {mkA "primitiva" ; mkA "primitivo" ; } ; --*
lin crudeness_2_N = mkN "obscenidades" ; --*
lin crudity_2_N = mkN "obscenidades" ; --*
lin cruel_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin cruelty_1_N = variants {mkN "crueldade" ; mkN "treatment" ; } ; --*
lin cruelty_2_N = mkN "crueldade" ; --*
lin cruelty_3_N = mkN "crueldade" ; --*
lin cruet_1_N = mkN "galheteiro" ; --*
lin cruise_1_V = mkV "atravessar" ; --*
lin cruise_2_V = variants {mkV "atravessar" ; mkV "cruzar" ; } ; --*
lin cruise_N = mkN "cruzeiro" ; --*
lin cruiser_1_N = variants {mkN "car" ; mkN "Carro" ; mkN "cruiser" ; } ; --*
lin cruiser_2_N = variants {mkN "cruzador" ; mkN "Cruzadores" ; } ; --*
lin crumb_2_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin crumb_3_N = variants {mkN "miga" ; mkN "migalha" ; } ; --*
lin crumble_1_V = variants {mkV "amarfanhar" ; mkV "desmoronar" ; mkV "down" ; mkV "esboroar" ; mkV "esfarelar" ; } ; --*
lin crumble_2_V = variants {mkV "apart" ; mkV "desmoronar" ; } ; --*
lin crumble_3_V = variants {mkV "decair" ; mkV "desmoronar" ; mkV "esfacelar" ; } ; --*
lin crumbly_A = mkA "friável" ; --*
lin crumple_1_V = variants {mkV "amarfanhar" ; mkV "desmoronar" ; mkV "down" ; mkV "esboroar" ; mkV "esfarelar" ; } ; --*
lin crumple_3_V2 = mkV2 (mkV "amassar") ; --*
lin crumple_4_V = mkV "amassar" ; --*
lin crunch_1_V = mkV "crepitar" ; --*
lin crunch_3_N = variants {mkN "compactação" ; mkN "esmagamento" ; } ; --*
lin crunch_4_V2 = variants {mkV2 (mkV "moer") ; mkV2 (mkV "triturar") ; } ; --*
lin crusade_1_N = variants {mkN "campanha" ; mkN "causa" ; } ; --*
lin crusade_1_V = variants {mkV "advogar" ; mkV "agitar" ; mkV "fazer" ; mkV "lutar" ; } ; --*
lin crusade_2_N = variants {mkN "Batalhas" ; mkN "cruzada" ; mkN "Cruzada" ; } ; --*
lin crusader_1_N = variants {mkN "cruzado" ; mkN "reformador" ; mkN "reformer" ; } ; --*
lin crush_1_N = variants {mkN "esmagamento" ; mkN "leather" ; } ; --*
lin crush_1_V2 = mkV2 (mkV "oprimir") ; --*
lin crush_2_N = mkN "multidão" ; --*
lin crush_2_V2 = mkV2 (mkV "esmagar") ; --*
lin crush_3_N = variants {mkN "love" ; mkN "paixonite" ; } ; --*
lin crush_3_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "out") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin crush_4_N = variants {mkN "compactação" ; mkN "esmagamento" ; } ; --*
lin crush_5_V2 = mkV2 (mkV "esmagar") ; --*
lin crush_6_V2 = mkV2 (mkV "machucar") ; --*
lin crush_8_V = mkV "esmagar" ; --*
lin crust_1_N = variants {mkN "crosta" ; mkN "crust" ; } ; --*
lin crust_2_N = mkN "crosta" ; --*
lin crust_3_N = variants {mkN "atrevimento" ; mkN "imprudência" ; mkN "insolência" ; } ; --*
lin crustacean_N = variants {mkN "crustáceo" ; mkN "crustáceos" ; } ; --*
lin crutch_1_N = mkN "muleta" ; --*
lin crux_1_N = variants {mkN "Australis" ; mkN "Cross" ; mkN "crux" ; } ; --*
lin crux_2_N = variants {mkN "of" ; mkN "ponto" ; } ; --*
lin cry_1_N = variants {mkN "brado" ; mkN "chamada" ; mkN "grito" ; } ; --*
lin cry_1_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin cry_2_N = variants {mkN "berro" ; mkN "grito" ; } ; --*
lin cry_2_V = variants {mkV "choramingar" ; mkV "chorar" ; mkV "derramar" ; } ; --*
lin cry_3_N = variants {mkN "cry" ; mkN "lema" ; } ; --*
lin cry_3_V2 = variants {mkV2 (mkV "berrar") ; mkV2 (mkV "exclamar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "out") ; } ; --*
lin cry_3_V = variants {mkV "berrar" ; mkV "exclamar" ; mkV "gritar" ; mkV "out" ; } ; --*
lin cry_4_N = mkN "pranto" ; --*
lin cry_4_V2 = variants {mkV2 (mkV "berrar") ; mkV2 (mkV "out") ; } ; --*
lin cry_5_V = mkV "demandar" ; --*
lin crying_N = variants {mkN "choro" ; mkN "pranto" ; } ; --*
lin cryobiology_N = variants {mkN "criobiologia" ; mkN "Criobiologia" ; } ; --*
lin cryogenic_A = mkA "criogênico" ; --*
lin cryogenics_N = mkN "criogenia" ; --*
lin cryolite_N = variants {mkN "Criolita" ; mkN "spar" ; } ; --*
lin cryonics_N = variants {mkN "Criónica" ; mkN "criônica" ; } ; --*
lin cryosurgery_N = mkN "criocirurgia" ; --*
lin cry_out_V = variants {mkV "berrar" ; mkV "exclamar" ; mkV "gritar" ; mkV "out" ; } ; --*
lin cryptanalysis_1_N = variants {mkN "Cripto" ; mkN "Criptoanalise" ; mkN "criptoanálise" ; mkN "Cripto-análise" ; } ; --*
lin cryptanalytic_A = mkA "criptográfico" ; --*
lin cryptic_1_A = variants {mkA "misteriosa" ; mkA "misterioso" ; } ; --*
lin cryptic_2_A = variants {mkA "cabalístico" ; mkA "enigmático" ; } ; --*
lin crypt_N = mkN "Cripta" ; --*
lin cryptobiosis_N = mkN "Criptobiose" ; --*
lin cryptococcosis_N = mkN "Criptococose" ; --*
lin cryptogam_N = variants {mkN "Criptógama" ; mkN "Criptógamas" ; mkN "criptogâmicas" ; } ; --*
lin cryptogram_N = variants {mkN "Criptograma" ; mkN "writing" ; } ; --*
lin cryptograph_1_N = variants {mkN "cifra" ; mkN "code" ; mkN "código" ; } ; --*
lin cryptograph_2_N = variants {mkN "Criptograma" ; mkN "writing" ; } ; --*
lin cryptographic_1_A = mkA "criptográfico" ; --*
lin cryptography_1_N = variants {mkN "Cripto" ; mkN "Criptoanalise" ; mkN "criptoanálise" ; mkN "Cripto-análise" ; } ; --*
lin cryptography_2_N = variants {mkN "criptografia" ; mkN "Criptografia" ; mkN "programação" ; mkN "writing" ; } ; --*
lin cryptorchidy_1_N = variants {mkN "criptorquia" ; mkN "Criptorquia" ; mkN "criptorquidia" ; } ; --*
lin crystal_1_N = mkN "cristal" ; --*
lin crystal_2_N = mkN "cristal" ; --*
lin crystal_3_N = mkN "cristal" ; --*
lin crystal_4_N = variants {mkN "cristal" ; mkN "glass" ; mkN "silica" ; } ; --*
lin crystal_5_N = mkN "cristal" ; --*
lin crystalline_3_A = variants {mkA "clear" ; mkA "límpido" ; mkA "transparente" ; } ; --*
lin crystallization_1_N = mkN "cristalização" ; --*
lin crystallization_2_N = mkN "cristal" ; --*
lin crystallization_3_N = mkN "cristalização" ; --*
lin crystallize_1_V2 = mkV2 (mkV "cristalizar") ; --*
lin crystallize_2_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin crystallize_3_V2 = mkV2 (mkV "cristalizar") ; --*
lin crystallize_4_V2 = mkV2 (mkV "cristalizar") ; --*
lin crystallize_4_V = mkV "cristalizar" ; --*
lin crystallography_N = variants {mkN "cristalografia" ; mkN "Cristalografia" ; } ; --*
lin cub_1_N = variants {mkN "novato" ; mkN "Rookie" ; } ; --*
lin cub_2_N = variants {mkN "boy" ; mkN "filho" ; mkN "garoto" ; mkN "menino" ; mkN "moço" ; } ; --*
lin cub_3_N = variants {mkN "carnivore" ; mkN "filhote" ; } ; --*
lin cuba_1_PN = variants {mkPN "Cuba" ; mkPN "of" ; } ; --*
lin cuba_2_PN = mkPN "Cuba" ; --*
lin cuban_A = mkA "cubano" ; --*
lin cuban_N = variants {mkN "cubano" ; mkN "Cubano" ; } ; --*
lin cube_1_N = variants {mkN "cubo" ; mkN "hexahedron" ; } ; --*
lin cube_1_V2 = variants {mkV2 (mkV "cubar") ; mkV2 (mkV "elevar") ; } ; --*
lin cube_2_N = variants {mkN "bloco" ; mkN "cubo" ; } ; --*
lin cube_3_N = variants {mkN "cubo" ; mkN "power" ; } ; --*
lin cubelike_A = variants {mkA "cúbico" ; mkA "cubóide" ; } ; --*
lin cubic_2_A = variants {mkA "cúbico" ; mkA "tridimensional" ; } ; --*
lin cubical_A = variants {mkA "cúbico" ; mkA "cubóide" ; } ; --*
lin cubicle_1_N = mkN "cela" ; --*
lin cubicle_3_N = variants {mkN "cabine" ; mkN "quiosque" ; } ; --*
lin cubism_N = mkN "cubismo" ; --*
lin cubist_A = mkA "cubista" ; --*
lin cubist_N = mkN "cubista" ; --*
lin cubital_A = mkA "cubital" ; --*
lin cubit_N = mkN "côvado" ; --*
lin cubitus_1_N = variants {mkN "cotovelo" ; mkN "cubiti" ; mkN "elbow" ; mkN "joint" ; } ; --*
lin cuckold_N = variants {mkN "chifrudo" ; mkN "corno" ; mkN "cuckold" ; mkN "por" ; } ; --*
lin cuckold_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "tapear") ; mkV2 (mkV "trair") ; } ; --*
lin cuckoo_1_N = variants {mkN "asno" ; mkN "estúpido" ; mkN "idiota" ; } ; --*
lin cuckoo_2_N = variants {mkN "cuco" ; mkN "Cuculidae" ; } ; --*
lin cuckoopint_N = variants {mkN "arão" ; mkN "maculatum" ; mkN "taioba" ; } ; --*
lin cucumber_1_N = variants {mkN "pepino" ; mkN "sativus" ; mkN "vine" ; } ; --*
lin cucumber_2_N = variants {mkN "pepineiro" ; mkN "pepino" ; } ; --*
lin cuddle_N = mkN "carícia" ; --*
lin cuddle_V2 = mkV2 (mkV "acariciar") ; --*
lin cuddle_V = variants {mkV "acomodar" ; mkV "close" ; } ; --*
lin cudgel_N = mkN "cacete" ; --*
lin cue_2_N = variants {mkN "indício" ; mkN "pista" ; mkN "sugestão" ; } ; --*
lin cue_3_N = variants {mkN "estímulo" ; mkN "stimulus" ; } ; --*
lin cue_4_N = variants {mkN "cue" ; mkN "stick" ; mkN "taco" ; } ; --*
lin cuff_1_N = mkN "punho" ; --*
lin cuff_1_V2 = mkV2 (mkV "esbofetear") ; --*
lin cuff_2_N = variants {mkN "algema" ; mkN "Algemas" ; } ; --*
lin cuff_2_V2 = mkV2 (mkV "algemar") ; --*
lin cufflink_N = variants {mkN "abotoadura" ; mkN "Abotoadura" ; } ; --*
lin cuirassier_N = mkN "Couraceiro" ; --*
lin cuirass_N = mkN "couraça" ; --*
lin cuisine_N = variants {mkN "art" ; mkN "cozinha" ; } ; --*
lin cul_de_sac_1_N = variants {mkN "de" ; mkN "end" ; mkN "rua" ; } ; --*
lin culinary_A = variants {mkA "culinária" ; mkA "culinário" ; } ; --*
lin cull_2_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "catar") ; mkV2 (mkV "colhar") ; mkV2 (mkV "colher") ; } ; --*
lin cullender_N = variants {mkN "coador" ; mkN "passador" ; } ; --*
lin cull_N = mkN "rejeição" ; --*
lin culminate_1_V = mkV "culminar" ; --*
lin culminate_2_V2 = mkV2 (mkV "culminar") ; --*
lin culminate_3_V2 = mkV2 (mkV "culminar") ; --*
lin culminate_3_V = mkV "culminar" ; --*
lin culminate_4_V2 = mkV2 (mkV "culminar") ; --*
lin culminate_4_V = mkV "culminar" ; --*
lin culminate_5_V = mkV "culminar" ; --*
lin culmination_1_N = variants {mkN "culminação" ; mkN "culminância" ; } ; --*
lin culmination_3_N = mkN "climax" ; --*
lin culmination_4_N = variants {mkN "conclusão" ; mkN "culminação" ; mkN "finalização" ; mkN "up" ; } ; --*
lin cul_N = variants {mkN "de" ; mkN "end" ; mkN "rua" ; } ; --*
lin culpable_A = variants {mkA "censurável" ; mkA "culpável" ; mkA "repreensível" ; mkA "reprovável" ; } ; --*
lin culprit_N = variants {mkN "culpado" ; mkN "responsável" ; mkN "réu" ; } ; --*
lin cult_2_N = variants {mkN "moda" ; mkN "voga" ; } ; --*
lin cultism_2_N = variants {mkN "adorar" ; mkN "veneração" ; } ; --*
lin cultivable_1_A = variants {mkA "arável" ; mkA "cultivável" ; } ; --*
lin cultivar_N = mkN "cultivar" ; --*
lin cultivate_1_V2 = variants {mkV2 (mkV "amanhar") ; mkV2 (mkV "cultivar") ; mkV2 (mkV "plantar") ; } ; --*
lin cultivate_2_V2 = mkV2 (mkV "cultivar") ; --*
lin cultivate_3_V2 = variants {mkV2 (mkV "civilizar") ; mkV2 (mkV "educar") ; } ; --*
lin cultivate_4_V2 = variants {mkV2 (mkV "cultivar") ; mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin cultivation_2_N = mkN "cultivo" ; --*
lin cultivation_3_N = mkN "refinamento" ; --*
lin cultivation_5_N = mkN "cultivo" ; --*
lin cultivator_1_N = variants {mkN "agricultor" ; mkN "agricultora" ; mkN "agrônomo" ; mkN "cultivador" ; mkN "engenheiro" ; } ; --*
lin cultivator_2_N = mkN "cultivador" ; --*
lin cultural_1_A = mkA "cultural" ; --*
lin cultural_2_A = variants {mkA "cultural" ; mkA "etnia" ; mkA "étnica" ; mkA "étnico" ; } ; --*
lin cultural_3_A = mkA "cultural" ; --*
lin cultural_4_A = mkA "cultural" ; --*
lin culture_1_N = variants {mkN "civilização" ; mkN "cultura" ; } ; --*
lin culture_2_N = mkN "cultura" ; --*
lin culture_3_N = variants {mkN "aculturação" ; mkN "cultura" ; } ; --*
lin culture_4_N = mkN "cultura" ; --*
lin culture_5_N = mkN "refinamento" ; --*
lin culture_6_N = mkN "cultura" ; --*
lin culture_7_N = variants {mkN "cultivo" ; mkN "cultura" ; } ; --*
lin cultured_A = variants {mkA "cultivado" ; mkA "gentil" ; mkA "refinado" ; } ; --*
lin culvert_N = mkN "Galeria" ; --*
lin cum_1_N = variants {mkN "esperma" ; mkN "fluid" ; mkN "gozo" ; mkN "sémen" ; mkN "sêmen" ; mkN "Sêmen" ; } ; --*
lin cumberland_2_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin cumbersome_1_A = variants {mkA "empecilhante" ; mkA "trabalhoso" ; } ; --*
lin cumbersome_2_A = mkA "desgracioso" ; --*
lin cumber_V2 = variants {mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; } ; --*
lin cumbria_2_PN = variants {mkPN "Cumbria" ; mkPN "Cúmbria" ; } ; --*
lin cumbrous_A = variants {mkA "empecilhante" ; mkA "trabalhoso" ; } ; --*
lin cumin_1_N = variants {mkN "cominho" ; mkN "cyminum" ; } ; --*
lin cumin_2_N = variants {mkN "cominho" ; mkN "seed" ; } ; --*
lin cumulative_A = mkA "cumulativo" ; --*
lin cumulus_1_N = variants {mkN "cloud" ; mkN "cúmulo" ; mkN "Cumulus" ; } ; --*
lin cumulus_2_N = variants {mkN "acúmulo" ; mkN "cúmulo" ; mkN "grupo" ; mkN "montão" ; mkN "monte" ; mkN "pilha" ; } ; --*
lin cuneiform_N = variants {mkN "cuneiforme" ; mkN "escrita" ; } ; --*
lin cunnilingus_1_N = mkN "cunilíngua" ; --*
lin cunning_1_A = variants {mkA "bonita" ; mkA "linda" ; } ; --*
lin cunning_1_N = mkN "astúcia" ; --*
lin cunning_2_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin cunning_3_A = variants {mkA "astuto" ; mkA "engenhoso" ; mkA "genial" ; mkA "hábil" ; } ; --*
lin cunt_1_N = variants {mkN "puta" ; mkN "vadia" ; mkN "vagabunda" ; } ; --*
lin cunt_2_N = variants {mkN "boceta" ; mkN "buceta" ; mkN "conas" ; mkN "rata" ; mkN "vagina" ; mkN "xana" ; mkN "xavasca" ; mkN "xoxota" ; } ; --*
lin cup_1_N = variants {mkN "taça" ; mkN "xícara" ; } ; --*
lin cup_2_N = mkN "chávena" ; --*
lin cup_7_N = mkN "buraco" ; --*
lin cup_8_N = variants {mkN "cup" ; mkN "taça" ; } ; --*
lin cupboard_N = variants {mkN "armário" ; mkN "estante" ; mkN "guarda-roupas" ; } ; --*
lin cup_final_N = mkN "final" ; --*
lin cupful_N = mkN "chávena" ; --*
lin cupid_1_N = variants {mkN "Amor" ; mkN "Cupido" ; } ; --*
lin cupid_1_PN = variants {mkPN "Amor" ; mkPN "Cupido" ; } ; --*
lin cupidity_N = variants {mkN "avareza" ; mkN "ganância" ; } ; --*
lin cupola_2_N = variants {mkN "cúpula" ; mkN "domo" ; mkN "redoma" ; mkN "zimbório" ; } ; --*
lin cuppa_1_N = variants {mkN "chá" ; mkN "Chá" ; } ; --*
lin cupric_A = mkA "cúprico" ; --*
lin cuprite_N = mkN "Cuprita" ; --*
lin cupro_nickel_N = mkN "cuproníquel" ; --*
lin cur_1_N = variants {mkN "rafeiro" ; mkN "vira-lata" ; } ; --*
lin curable_1_A = mkA "curável" ; --*
lin curable_2_A = mkA "curável" ; --*
lin curacao_1_N = mkN "Curaçao" ; --*
lin curate_N = variants {mkN "cura" ; mkN "ministro" ; mkN "of" ; mkN "pároco" ; mkN "pastor" ; mkN "reitor" ; mkN "sacerdate" ; mkN "vigário" ; } ; --*
lin curative_A = variants {mkA "curativo" ; mkA "terapêutico" ; } ; --*
lin curator_N = mkN "curador" ; --*
lin curb_1_N = variants {mkN "guia" ; mkN "meio-fio" ; } ; --*
lin curb_1_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "limitar") ; mkV2 (mkV "refrear") ; } ; --*
lin curb_3_N = variants {mkN "American" ; mkN "Stock" ; } ; --*
lin curb_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "cercear") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin curb_4_N = mkN "freio" ; --*
lin curd_2_N = mkN "coalhada" ; --*
lin curdle_1_V2 = mkV2 (mkV "coalhar") ; --*
lin curdle_3_V = mkV "coalhar" ; --*
lin curdling_N = mkN "coagulação" ; --*
lin cure_1_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "curar") ; mkV2 (mkV "sarar") ; } ; --*
lin cure_all_N = variants {mkN "panaceia" ; mkN "panacéia" ; } ; --*
lin cure_N = variants {mkN "medicamento" ; mkN "produtos" ; mkN "remédio" ; mkN "terapia" ; } ; --*
lin curettage_N = mkN "curetagem" ; --*
lin curette_1_N = mkN "cureta" ; --*
lin curfew_1_N = mkN "toque" ; --*
lin curfew_2_N = mkN "toque" ; --*
lin curfew_3_N = mkN "toque" ; --*
lin curie_1_N = mkN "Curie" ; --*
lin curie_2_N = variants {mkN "Curie" ; mkN "Pierre" ; } ; --*
lin curie_3_N = variants {mkN "Curie" ; mkN "Marie" ; mkN "Sklodowska" ; } ; --*
lin curio_N = variants {mkN "curiosidade" ; mkN "raridade" ; } ; --*
lin curiosity_1_N = variants {mkN "curiosidade" ; mkN "Curiosidade" ; } ; --*
lin curiosity_2_N = variants {mkN "curiosidade" ; mkN "raridade" ; } ; --*
lin curious_1_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin curious_2_A = mkA "curioso" ; --*
lin curiousness_1_N = mkN "curiosidade" ; --*
lin curitiba_PN = mkPN "Curitiba" ; --*
lin curium_N = variants {mkN "cúrio" ; mkN "number" ; } ; --*
lin curl_1_V = mkV "curvar" ; --*
lin curl_2_N = variants {mkN "Curl" ; mkN "F." ; mkN "Floyd" ; mkN "Jr." ; } ; --*
lin curl_3_N = variants {mkN "anel" ; mkN "cacho" ; } ; --*
lin curl_3_V = variants {mkV "embobinar" ; mkV "enrolar" ; } ; --*
lin curling_N = mkN "Curling" ; --*
lin curl_V2 = mkV2 (mkV "enrolar") ; --*
lin curly_A = variants {mkA "cacheado" ; mkA "encaracolado" ; } ; --*
lin curmudgeon_N = variants {mkN "casmurro" ; mkN "rabugento" ; } ; --*
lin currant_1_N = variants {mkN "groselha" ; mkN "passa" ; } ; --*
lin currant_2_N = variants {mkN "bush" ; mkN "groselheira" ; } ; --*
lin currency_1_N = variants {mkN "cobre" ; mkN "dinheiro" ; mkN "divisa" ; mkN "moeda" ; } ; --*
lin current_1_N = variants {mkN "corrente" ; mkN "current" ; } ; --*
lin current_2_N = mkN "corrente" ; --*
lin current_3_N = mkN "curso" ; --*
lin current_A = variants {mkA "actual" ; mkA "atual" ; mkA "corrente" ; } ; --*
lin curricular_A = mkA "curricular" ; --*
lin curriculum_N = variants {mkN "curricula" ; mkN "currículo" ; mkN "ementa" ; mkN "matéria" ; mkN "of" ; mkN "programa" ; } ; --*
lin curriculum_vitae_N = variants {mkN "resumo" ; mkN "sumário" ; mkN "vitae" ; } ; --*
lin curry_N = variants {mkN "caril" ; mkN "Caril" ; mkN "curry" ; } ; --*
lin curse_1_N = variants {mkN "expletivo" ; mkN "palavrão" ; mkN "word" ; } ; --*
lin curse_1_V = variants {mkV "desbocar" ; mkV "insultar" ; mkV "xingar" ; } ; --*
lin curse_2_N = variants {mkN "maldição" ; mkN "Maldição" ; } ; --*
lin curse_2_V2 = mkV2 (mkV "insultar") ; --*
lin curse_3_N = variants {mkN "azaração" ; mkN "maldição" ; } ; --*
lin curse_3_V2 = mkV2 (mkV "amaldiçoar") ; --*
lin curse_4_N = variants {mkN "arquiinimigo" ; mkN "calamidade" ; mkN "desgraça" ; mkN "Deusa" ; mkN "nêmese" ; } ; --*
lin curse_4_V2 = mkV2 (mkV "excomungar") ; --*
lin cursor_N = mkN "cursor" ; --*
lin curst_A = variants {mkA "maldita" ; mkA "maldito" ; } ; --*
lin curt_1_A = variants {mkA "brusca" ; mkA "brusco" ; } ; --*
lin curt_2_A = variants {mkA "curto" ; mkA "lacônico" ; } ; --*
lin curtail_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "cercear") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin curtail_2_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "cercear") ; mkV2 (mkV "recortar") ; mkV2 (mkV "short") ; } ; --*
lin curtain_1_N = variants {mkN "cortina" ; mkN "reposteiro" ; } ; --*
lin curtain_V2 = variants {mkV2 (mkV "acortinar") ; mkV2 (mkV "encortinar") ; } ; --*
lin curtsey_N = variants {mkN "mesura" ; mkN "reverência" ; } ; --*
lin curtsey_V = mkV "cortejar" ; --*
lin curtsy_1_V = mkV "cortejar" ; --*
lin curtsy_N = variants {mkN "mesura" ; mkN "reverência" ; } ; --*
lin curvature_3_N = mkN "curvatura" ; --*
lin curve_1_N = variants {mkN "curva" ; mkN "shape" ; } ; --*
lin curve_1_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin curve_2_N = variants {mkN "curva" ; mkN "Curvas" ; } ; --*
lin curve_3_V = variants {mkV "arquear" ; mkV "curvar" ; } ; --*
lin curve_4_N = mkN "curvatura" ; --*
lin curve_4_V = variants {mkV "curvar" ; mkV "dobrar" ; } ; --*
lin curve_5_N = mkN "curva" ; --*
lin curve_5_V = mkV "curvar" ; --*
lin curvilineal_1_A = mkA "curvilíneo" ; --*
lin curvy_2_A = mkA "peituda" ; --*
lin cushion_1_N = variants {mkN "absorber" ; mkN "amortecedor" ; } ; --*
lin cushion_3_N = mkN "almofada" ; --*
lin cushion_V2 = mkV2 (mkV "amortecer") ; --*
lin cusp_2_N = mkN "folder" ; --*
lin cuspidor_N = variants {mkN "cuspideira" ; mkN "cuspidor" ; mkN "escarradeira" ; } ; --*
lin cuss_1_N = mkN "peste" ; --*
lin cuss_2_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin cuss_3_N = variants {mkN "expletivo" ; mkN "palavrão" ; mkN "word" ; } ; --*
lin custodian_N = variants {mkN "guardião" ; mkN "tutor" ; } ; --*
lin custody_1_N = variants {mkN "custódia" ; mkN "detenção" ; } ; --*
lin custody_2_N = mkN "custódia" ; --*
lin custom_1_N = variants {mkN "costume" ; mkN "emprego" ; mkN "hábito" ; } ; --*
lin custom_2_N = variants {mkN "costume" ; mkN "costumes" ; mkN "hábito" ; mkN "tradição" ; mkN "Tradições" ; } ; --*
lin custom_3_N = variants {mkN "aduana" ; mkN "alfândega" ; mkN "duty" ; } ; --*
lin custom_4_N = mkN "personalizado" ; --*
lin customary_1_A = mkA "habitual" ; --*
lin customary_2_A = variants {mkA "costumado" ; mkA "habituado" ; mkA "habitual" ; mkA "usual" ; } ; --*
lin customerFem_N = variants {mkN "cliente" ; mkN "comprador" ; mkN "consumidor" ; mkN "freguês" ; } ; --*
lin customerMasc_N = variants {mkN "cliente" ; mkN "comprador" ; mkN "consumidor" ; mkN "freguês" ; } ; --*
lin customize_2_V2 = mkV2 (mkV "personalizar") ; --*
lin custom_made_A = mkA "personalizado" ; --*
lin customs_N = variants {mkN "aduana" ; mkN "alfândega" ; mkN "duty" ; } ; --*
lin cut_12_N = variants {mkN "desprezo" ; mkN "esnobada" ; mkN "shoulder" ; } ; --*
lin cut_12_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "gerenciar") ; mkV2 (mkV "lidar") ; } ; --*
lin cut_15_V = mkV "atravessar" ; --*
lin cut_16_N = variants {mkN "cortamento" ; mkN "corte" ; } ; --*
lin cut_16_V2 = mkV2 (mkV "cortar") ; --*
lin cut_19_N = mkN "corte" ; --*
lin cut_1_N = mkN "participação" ; --*
lin cut_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; } ; --*
lin cut_22_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "recortar") ; } ; --*
lin cut_24_V = mkV "talhar" ; --*
lin cut_26_V2 = mkV2 (mkV "cortar") ; --*
lin cut_26_V = mkV "cortar" ; --*
lin cut_27_V2 = variants {mkV2 (mkV "desligar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin cut_30_V = mkV "cortar" ; --*
lin cut_31_V2 = variants {mkV2 (mkV "desconsiderar") ; mkV2 (mkV "esnobar") ; mkV2 (mkV "ignorar") ; } ; --*
lin cut_35_V = variants {mkV "diminuir" ; mkV "reduzir" ; } ; --*
lin cut_37_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin cut_38_V2 = variants {mkV2 (mkV "diluir") ; mkV2 (mkV "out") ; } ; --*
lin cut_3_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin cut_4_V = variants {mkV "cortar" ; mkV "incisar" ; } ; --*
lin cut_5_N = mkN "corte" ; --*
lin cut_6_N = variants {mkN "corte" ; mkN "of" ; } ; --*
lin cut_9_N = mkN "exérese" ; --*
lin cut_across_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin cutaneous_A = mkA "cutâneo" ; --*
lin cut_back_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin cut_back_3_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin cut_back_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "cercear") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin cutback_N = variants {mkN "abatimento" ; mkN "contracção" ; mkN "diminuição" ; } ; --*
lin cut_down_2_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "down") ; } ; --*
lin cut_down_2_V = variants {mkV "cortar" ; mkV "down" ; } ; --*
lin cut_down_5_V2 = variants {mkV2 (mkV "ceifar") ; mkV2 (mkV "down") ; mkV2 (mkV "foiçar") ; mkV2 (mkV "roçar") ; } ; --*
lin cut_down_6_V2 = variants {mkV2 (mkV "abater") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; } ; --*
lin cute_1_A = variants {mkA "bonita" ; mkA "linda" ; } ; --*
lin cute_2_A = mkA "precioso" ; --*
lin cuticle_2_N = mkN "epiderme" ; --*
lin cuticle_3_N = variants {mkN "carapaça" ; mkN "concha" ; mkN "Cuticula" ; mkN "cutícula" ; } ; --*
lin cuticular_A = variants {mkA "dérmico" ; mkA "epidérmico" ; } ; --*
lin cutlassfish_N = variants {mkN "fish" ; mkN "Trichiuridae" ; } ; --*
lin cutlery_1_N = variants {mkN "cortador" ; mkN "tool" ; } ; --*
lin cutlery_2_N = variants {mkN "talheres" ; mkN "utensil" ; } ; --*
lin cutlet_N = variants {mkN "costeleta" ; mkN "costoleta" ; mkN "escalope" ; } ; --*
lin cut_off_1_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "up") ; } ; --*
lin cutoff_2_N = variants {mkN "atalho" ; mkN "tecla" ; } ; --*
lin cut_off_3_V2 = mkV2 (mkV "off") ; --*
lin cut_off_5_V2 = variants {mkV2 (mkV "lascar") ; mkV2 (mkV "off") ; } ; --*
lin cut_off_6_V2 = variants {mkV2 (mkV "amputar") ; mkV2 (mkV "off") ; } ; --*
lin cut_out_1_V2 = mkV2 (mkV "out") ; --*
lin cut_out_4_V2 = mkV2 (mkV "out") ; --*
lin cutpurse_N = variants {mkN "batedor" ; mkN "trombadinha" ; } ; --*
lin cutter_4_N = variants {mkN "boat" ; mkN "pinaça" ; } ; --*
lin cutter_6_N = variants {mkN "cortador" ; mkN "tool" ; } ; --*
lin cut_throat_A = mkA "feroz" ; --*
lin cutting_1_N = variants {mkN "editing" ; mkN "montagem" ; } ; --*
lin cutting_5_N = variants {mkN "clipping" ; mkN "cutting" ; mkN "recorte" ; } ; --*
lin cutting_8_N = variants {mkN "cortamento" ; mkN "corte" ; } ; --*
lin cuttlefish_N = mkN "choco" ; --*
lin cut_up_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "up") ; } ; --*
lin cut_up_2_V2 = variants {mkV2 (mkV "desfigurar") ; mkV2 (mkV "mutilar") ; mkV2 (mkV "up") ; } ; --*
lin cut_up_3_V2 = variants {mkV2 (mkV "compartimentar") ; mkV2 (mkV "up") ; } ; --*
lin cyanamide_2_N = mkN "Cianamida" ; --*
lin cyanide_1_N = variants {mkN "cianeto" ; mkN "Nitrila" ; mkN "Nitrilas" ; } ; --*
lin cyanide_2_N = variants {mkN "cianeto" ; mkN "Cianetos" ; mkN "cianureto" ; } ; --*
lin cyan_N = variants {mkN "ciano" ; mkN "turquesa" ; } ; --*
lin cyanobacteria_N = variants {mkN "algae" ; mkN "Cyanobacteria" ; } ; --*
lin cyanogen_N = mkN "cianogênio" ; --*
lin cyanosis_N = mkN "cianose" ; --*
lin cyberculture_N = variants {mkN "Cibercultura" ; mkN "Cultura" ; } ; --*
lin cybernetic_A = mkA "cibernético" ; --*
lin cybernetics_N = variants {mkN "cibernética" ; mkN "Cibernética" ; } ; --*
lin cyberpunk_1_N = mkN "hacker" ; --*
lin cyberpunk_3_N = variants {mkN "cyberpunk" ; mkN "Cyberpunk" ; } ; --*
lin cyborg_N = variants {mkN "Ciborgue" ; mkN "man" ; mkN "woman" ; } ; --*
lin cyclamen_N = variants {mkN "ciclame" ; mkN "purpurascens" ; } ; --*
lin cycle_1_N = mkN "ciclo" ; --*
lin cycle_3_N = mkN "ciclo" ; --*
lin cycle_4_N = variants {mkN "hertz" ; mkN "per" ; } ; --*
lin cycle_6_N = variants {mkN "bici" ; mkN "bicicleta" ; mkN "bicicletas" ; mkN "biciclo" ; mkN "roda" ; } ; --*
lin cyclic_1_A = mkA "cíclico" ; --*
lin cyclic_2_A = variants {mkA "ciclíco" ; mkA "cíclico" ; } ; --*
lin cyclic_3_A = mkA "cíclico" ; --*
lin cyclic_4_A = mkA "cíclico" ; --*
lin cyclic_5_A = mkA "cíclico" ; --*
lin cyclical_A = mkA "cíclico" ; --*
lin cycling_N = variants {mkN "ciclismo" ; mkN "Ciclismo" ; } ; --*
lin cyclist_1_N = mkN "ciclista" ; --*
lin cyclohexanol_N = variants {mkN "cicloexanol" ; mkN "Cicloexanol" ; } ; --*
lin cycloid_N = variants {mkN "Cicloide" ; mkN "ciclóide" ; mkN "Ciclóide" ; } ; --*
lin cyclone_1_N = mkN "ciclone" ; --*
lin cyclone_2_N = variants {mkN "ciclone" ; mkN "Ciclones" ; } ; --*
lin cyclonic_2_A = mkA "ciclônico" ; --*
lin cyclopaedia_1_N = variants {mkN "enciclopédia" ; mkN "enciclopédias" ; } ; --*
lin cyclops_1_N = variants {mkN "ciclope" ; mkN "Ciclope" ; mkN "Cíclope" ; } ; --*
lin cyclops_2_N = variants {mkN "ciclope" ; mkN "flea" ; } ; --*
lin cycloserine_N = mkN "Oxamicina" ; --*
lin cyclotron_N = variants {mkN "ciclotrão" ; mkN "Ciclotron" ; mkN "cíclotron" ; } ; --*
lin cyder_N = variants {mkN "cidra" ; mkN "sidra" ; } ; --*
lin cylinder_1_N = mkN "cilindro" ; --*
lin cylinder_2_N = mkN "cilindro" ; --*
lin cylinder_3_N = variants {mkN "chamber" ; mkN "cilindro" ; } ; --*
lin cylinder_4_N = mkN "cilindro" ; --*
lin cylindrical_1_A = mkA "cilíndrico" ; --*
lin cymbal_N = variants {mkN "címbalo" ; mkN "prato" ; } ; --*
lin cynic_1_N = mkN "cínico" ; --*
lin cynic_2_N = mkN "cinismo" ; --*
lin cynical_A = mkA "cínico" ; --*
lin cynicism_N = mkN "cinismo" ; --*
lin cynodont_N = mkN "Cynodontia" ; --*
lin cynophobia_N = mkN "cinofobia" ; --*
lin cynthia_PN = variants {mkPN "Artemis" ; mkPN "Artémis" ; mkPN "Artêmis" ; mkPN "Ártemis" ; mkPN "Artemisa" ; mkPN "Cíntia" ; } ; --*
lin cypher_1_N = variants {mkN "número" ; mkN "zero" ; } ; --*
lin cypher_1_V2 = variants {mkV2 (mkV "codificar") ; mkV2 (mkV "criptografar") ; mkV2 (mkV "encriptar") ; mkV2 (mkV "in") ; } ; --*
lin cypher_1_V = variants {mkV "codificar" ; mkV "criptografar" ; mkV "encriptar" ; mkV "in" ; } ; --*
lin cypher_2_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin cypher_2_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "computar") ; mkV2 (mkV "out") ; } ; --*
lin cypher_2_V = variants {mkV "calcular" ; mkV "computar" ; mkV "out" ; } ; --*
lin cypher_3_N = mkN "nenhumapessoa" ; --*
lin cypher_4_N = variants {mkN "cifra" ; mkN "code" ; mkN "código" ; } ; --*
lin cypress_2_N = variants {mkN "cipreste" ; mkN "tree" ; } ; --*
lin cyprian_1_A = mkA "cipriota" ; --*
lin cypriot_1_A = mkA "cipriota" ; --*
lin cypriot_2_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin cyproheptadine_N = mkN "Cipro-heptadina" ; --*
lin cyprus_1_PN = variants {mkPN "Chipre" ; mkPN "of" ; } ; --*
lin cyprus_2_PN = mkPN "Chipre" ; --*
lin cyrillic_A = mkA "cirílico" ; --*
lin cyril_PN = variants {mkPN "Cyril" ; mkPN "São" ; } ; --*
lin cyst_1_N = variants {mkN "cisto" ; mkN "Cisto" ; mkN "quisto" ; } ; --*
lin cyst_2_N = mkN "vesícula" ; --*
lin cysteine_N = variants {mkN "Cisteina" ; mkN "cisteína" ; } ; --*
lin cystic_2_A = mkA "cístico" ; --*
lin cystine_N = mkN "cistina" ; --*
lin cystitis_N = variants {mkN "cistite" ; mkN "Cistite" ; } ; --*
lin cytochrome_N = mkN "citocromo" ; --*
lin cytokine_N = variants {mkN "citocina" ; mkN "Citocinas" ; } ; --*
lin cytokinesis_N = mkN "citocinese" ; --*
lin cytological_1_A = mkA "citológico" ; --*
lin cytologist_N = mkN "citologista" ; --*
lin cytology_N = mkN "citologia" ; --*
lin cytomegalovirus_N = variants {mkN "Citomegalovirus" ; mkN "citomegalovírus" ; mkN "Citomegalovírus" ; } ; --*
lin cytophotometry_N = mkN "citofotometria" ; --*
lin cytoplasm_N = mkN "citoplasma" ; --*
lin cytosine_N = mkN "Citosina" ; --*
lin cytoskeleton_N = mkN "Citoesqueleto" ; --*
lin cytosol_N = variants {mkN "citosol" ; mkN "hialoplasma" ; } ; --*
lin cytostome_N = variants {mkN "Citostoma" ; mkN "Citóstoma" ; } ; --*
lin cytotoxic_A = mkA "citóxico" ; --*
lin cytotoxicity_N = variants {mkN "citotoxicidade" ; mkN "citoxicidade" ; } ; --*
lin czar_1_N = variants {mkN "czar" ; mkN "tsar" ; } ; --*
lin czarina_1_N = mkN "tsarina" ; --*
lin czarist_1_A = mkA "czarista" ; --*
lin czech_1_N = variants {mkN "Tcheca" ; mkN "Tcheco" ; } ; --*
lin czech_2_N = variants {mkN "checoslovaco" ; mkN "tchecoslovaco" ; } ; --*
lin czech_3_N = variants {mkN "checo" ; mkN "Língua" ; mkN "tcheco" ; } ; --*
lin czech_A = mkA "tcheco" ; --*
lin czechoslovakian_A = mkA "tcheco" ; --*
lin czechoslovakian_N = variants {mkN "checoslovaco" ; mkN "tchecoslovaco" ; } ; --*
lin czechoslovakia_PN = variants {mkPN "Checoslovaquia" ; mkPN "Checoslováquia" ; mkPN "Tcheco-Eslováquia" ; mkPN "Tchecoslováquia" ; } ; --*
lin czechoslovak_N = variants {mkN "checoslovaco" ; mkN "tchecoslovaco" ; } ; --*
lin dab_1_N = mkN "baterdeleve" ; --*
lin dab_2_V2 = mkV2 (mkV "dar") ; --*
lin dabbler_1_N = mkN "diletante" ; --*
lin dacca_PN = variants {mkPN "Daca" ; mkPN "of" ; } ; --*
lin dachshund_N = variants {mkN "dachshund" ; mkN "Dachshund" ; mkN "dog" ; } ; --*
lin dacite_N = variants {mkN "dacito" ; mkN "Dacito" ; } ; --*
lin dacryocystitis_N = mkN "dacriocistite" ; --*
lin dactyl_2_N = variants {mkN "dedo" ; mkN "dígito" ; } ; --*
lin dada_1_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "papai" ; } ; --*
lin dada_2_N = mkN "dadaísmo" ; --*
lin daddy_longlegs_2_N = variants {mkN "aranha-alho" ; mkN "aranha-bailarina" ; mkN "aranha-fedorenta" ; mkN "bodum" ; mkN "frade-fedorento" ; mkN "longlegs" ; mkN "opilio" ; } ; --*
lin daddy_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "papai" ; } ; --*
lin dad_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "papai" ; } ; --*
lin daemon_1_N = variants {mkN "cão" ; mkN "capeta" ; mkN "demo" ; mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; } ; --*
lin daemon_2_N = variants {mkN "deus" ; mkN "semideus" ; } ; --*
lin daffodil_N = variants {mkN "narciso" ; mkN "pseudonarcissus" ; } ; --*
lin daft_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin dagga_N = variants {mkN "dagga" ; mkN "Leonotis" ; mkN "leonurus" ; } ; --*
lin dagger_1_N = variants {mkN "adaga" ; mkN "punhal" ; } ; --*
lin dagger_2_N = mkN "obelisco" ; --*
lin daguerreotype_N = variants {mkN "Daguerreotipo" ; mkN "daguerreótipo" ; } ; --*
lin dahlia_N = variants {mkN "dália" ; mkN "pinnata" ; } ; --*
lin dail_eireann_N = variants {mkN "Dáil" ; mkN "Eireann" ; } ; --*
lin daily_1_A = mkA "diário" ; --*
lin daily_1_Adv = variants {mkAdv "diariamente" ; mkAdv "diáriamente" ; } ; --*
lin daily_2_Adv = variants {mkAdv "by" ; mkAdv "diariamente" ; } ; --*
lin daily_N = mkN "diário" ; --*
lin daintiness_N = variants {mkN "delicadeza" ; mkN "garbo" ; } ; --*
lin dainty_N = mkN "guloseima" ; --*
lin dairy_farm_N = variants {mkN "exploração" ; mkN "farm" ; mkN "lacticínios" ; mkN "leitaria" ; mkN "leiteria" ; } ; --*
lin dairymaid_N = variants {mkN "leiteira" ; mkN "ordenhadora" ; } ; --*
lin dairy_N = variants {mkN "exploração" ; mkN "farm" ; mkN "lacticínios" ; mkN "leitaria" ; mkN "leiteria" ; } ; --*
lin dais_N = variants {mkN "cátedra" ; mkN "estrado" ; mkN "pódio" ; mkN "púlpito" ; mkN "tribuna" ; } ; --*
lin daisy_N = variants {mkN "mal-me-quer" ; mkN "margarida" ; mkN "margarida-vulgar" ; mkN "margaridinha" ; } ; --*
lin daisy_PN = variants {mkPN "mal-me-quer" ; mkPN "margarida" ; mkPN "margarida-vulgar" ; mkPN "margaridinha" ; } ; --*
lin dakar_PN = variants {mkPN "Dakar" ; mkPN "of" ; } ; --*
lin dale_N = mkN "vale" ; --*
lin dallas_PN = variants {mkPN "Dallas" ; mkPN "Texas" ; } ; --*
lin dalliance_2_N = mkN "flerte" ; --*
lin dally_1_V = variants {mkV "brincar" ; mkV "folgar" ; mkV "jogar" ; } ; --*
lin dally_3_V = variants {mkV "passar" ; mkV "up" ; } ; --*
lin dally_4_V = mkV "brincar" ; --*
lin dalmatian_2_N = variants {mkN "dálmata" ; mkN "dog" ; } ; --*
lin dalton_PN = variants {mkPN "Dalton" ; mkPN "John" ; } ; --*
lin dam_1_N = variants {mkN "barragem" ; mkN "Barragem" ; mkN "barragens" ; mkN "dique" ; mkN "diques" ; mkN "quebra-mar" ; mkN "represa" ; } ; --*
lin dam_2_N = variants {mkN "decâmetro" ; mkN "Múltiplos" ; } ; --*
lin damage_1_N = variants {mkN "avaria" ; mkN "dano" ; mkN "estrago" ; mkN "prejuízo" ; } ; --*
lin damage_1_V2 = variants {mkV2 (mkV "avariar") ; mkV2 (mkV "danificar") ; } ; --*
lin damage_3_N = variants {mkN "danificação" ; mkN "deterioração" ; } ; --*
lin damage_4_N = variants {mkN "custo" ; mkN "preço" ; mkN "preços" ; } ; --*
lin damage_5_N = variants {mkN "injúria" ; mkN "injury" ; } ; --*
lin damages_N = mkN "indemnizações" ; --*
lin damaging_A = mkA "negativo" ; --*
lin damaging_to_A2 = variants {mkA2 (mkA "danoso") noPrep ; mkA2 (mkA "prejudicial") noPrep ; } ; --*
lin damascene_1_A = variants {mkA "damasceno" ; mkA "damasquino" ; } ; --*
lin damascus_PN = variants {mkPN "Damasco" ; mkPN "of" ; } ; --*
lin damask_2_N = mkN "damasco" ; --*
lin dame_1_N = variants {mkN "brasa" ; mkN "franguinha" ; mkN "garota" ; mkN "gata" ; mkN "menina" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin dame_2_N = variants {mkN "dama" ; mkN "madame" ; mkN "senhora" ; } ; --*
lin damn_A = variants {mkA "amaldiçoado" ; mkA "condenado" ; mkA "maldito" ; } ; --*
lin damnation_1_N = variants {mkN "danação" ; mkN "maldição" ; } ; --*
lin damnation_2_N = variants {mkN "Condenação" ; mkN "damnation" ; } ; --*
lin damn_N = variants {mkN "cent" ; mkN "dam" ; mkN "damn" ; mkN "droga" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin damn_V2 = mkV2 (mkV "amaldiçoar") ; --*
lin damocles_PN = variants {mkPN "Damocles" ; mkPN "Dâmocles" ; } ; --*
lin damp_1_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "amortecer") ; mkV2 (mkV "down") ; } ; --*
lin damp_1_V = variants {mkV "abafar" ; mkV "amortecer" ; mkV "down" ; } ; --*
lin damp_2_V2 = mkV2 (mkV "desanimar") ; --*
lin damp_4_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "suavizar") ; } ; --*
lin damp_A = variants {mkA "húmida" ; mkA "húmido" ; mkA "molhado" ; mkA "Quase" ; mkA "úmida" ; mkA "úmido" ; } ; --*
lin dampen_1_V2 = mkV2 (mkV "amortecer") ; --*
lin dampen_2_V2 = mkV2 (mkV "umedecer") ; --*
lin dampen_3_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "amortecer") ; mkV2 (mkV "down") ; } ; --*
lin dampen_3_V = variants {mkV "abafar" ; mkV "amortecer" ; mkV "down" ; } ; --*
lin dampen_7_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "suavizar") ; } ; --*
lin dampish_A = variants {mkA "húmida" ; mkA "húmido" ; mkA "molhado" ; mkA "Quase" ; mkA "úmida" ; mkA "úmido" ; } ; --*
lin dampness_N = mkN "umidade" ; --*
lin damp_N = mkN "umidade" ; --*
lin damsel_1_N = mkN "donzela" ; --*
lin damselfish_N = mkN "Castanheta" ; --*
lin damselfly_N = mkN "Zygoptera" ; --*
lin dam_V2 = variants {mkV2 (mkV "represar") ; mkV2 (mkV "up") ; } ; --*
lin dance_1_N = variants {mkN "baile" ; mkN "dança" ; } ; --*
lin dance_1_V = mkV "dançar" ; --*
lin dance_2_V = variants {mkV "dançar" ; mkV "the" ; } ; --*
lin dance_3_N = variants {mkN "baile" ; mkN "dança" ; } ; --*
lin dance_3_V = variants {mkV "bailar" ; mkV "dançar" ; } ; --*
lin dance_4_N = mkN "baile" ; --*
lin dance_hall_N = variants {mkN "hall" ; mkN "palace" ; mkN "salão" ; } ; --*
lin dancer_1_N = variants {mkN "bailarina" ; mkN "bailarino" ; mkN "dançarino" ; mkN "dancer" ; } ; --*
lin dancing_N = variants {mkN "baile" ; mkN "dança" ; } ; --*
lin dandelion_N = mkN "dente-de-leão" ; --*
lin dandified_A = mkA "demasiado" ; --*
lin dandle_1_V2 = mkV2 (mkV "embalar") ; --*
lin dandruff_2_N = variants {mkN "caspa" ; mkN "Caspa" ; } ; --*
lin dandy_1_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin dandy_2_N = mkN "yawl" ; --*
lin dandy_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin dane_N = variants {mkN "danês" ; mkN "dinamarquês" ; } ; --*
lin danger_1_N = variants {mkN "perigo" ; mkN "perigos" ; } ; --*
lin danger_2_N = variants {mkN "perigo" ; mkN "risco" ; } ; --*
lin danger_3_N = variants {mkN "ameaça" ; mkN "perigo" ; mkN "risco" ; } ; --*
lin dangerous_1_A = mkA "perigoso" ; --*
lin dangerous_2_A = variants {mkA "grave" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin daniel_1_PN = mkPN "Daniel" ; --*
lin daniel_2_PN = mkPN "Daniel" ; --*
lin daniel_3_PN = variants {mkPN "Livro" ; mkPN "of" ; } ; --*
lin danish_1_N = variants {mkN "danês" ; mkN "dinamarquês" ; mkN "língua" ; } ; --*
lin danish_A = variants {mkA "danês" ; mkA "dinamarquês" ; mkA "dinamarquesa" ; } ; --*
lin dank_A = mkA "pegajoso" ; --*
lin danse_macabre_N = variants {mkN "macabre" ; mkN "of" ; } ; --*
lin danseur_N = variants {mkN "bailarino" ; mkN "noble" ; } ; --*
lin daphne_2_N = mkN "Dafne" ; --*
lin daphne_2_PN = mkPN "Dafne" ; --*
lin dapsone_N = mkN "Dapsona" ; --*
lin daraf_N = variants {mkN "daraf" ; mkN "Daraf" ; } ; --*
lin dare_2_VV = variants {mkVV (mkV "atrever") ; mkVV (mkV "atrever-se") ; mkVV (mkV "ousar") ; } ; --*
lin daredevil_A = mkA "temerário" ; --*
lin dare_N = variants {mkN "aposta" ; mkN "desafio" ; } ; --*
lin dare_V2 = mkV2 (mkV "desafiar") ; --*
lin daring_1_N = variants {mkN "aposta" ; mkN "desafio" ; } ; --*
lin daring_2_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin dark_1_A = mkA "escuro" ; --*
lin dark_1_N = variants {mkN "escuridão" ; mkN "trevas" ; } ; --*
lin dark_2_A = mkA "escuro" ; --*
lin dark_2_N = variants {mkN "iniqüidade" ; mkN "maldade" ; } ; --*
lin dark_3_A = mkA "escuro" ; --*
lin dark_3_N = variants {mkN "escuridão" ; mkN "sombra" ; } ; --*
lin dark_4_N = variants {mkN "fim" ; mkN "noitada" ; mkN "noite" ; mkN "tarde" ; } ; --*
lin dark_5_A = mkA "obscuro" ; --*
lin dark_5_N = variants {mkN "escuridão" ; mkN "ignorância" ; } ; --*
lin dark_6_A = mkA "taciturno" ; --*
lin dark_8_A = mkA "obscuro" ; --*
lin dark_9_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin darken_3_V2 = mkV2 (mkV "escurecer") ; --*
lin darken_V = mkV "escurecer" ; --*
lin darkling_2_A = mkA "escuro" ; --*
lin darkness_1_N = variants {mkN "escuridão" ; mkN "trevas" ; } ; --*
lin darkness_2_N = variants {mkN "escuridão" ; mkN "sombra" ; } ; --*
lin darkness_3_N = variants {mkN "iniqüidade" ; mkN "maldade" ; } ; --*
lin darkness_4_N = variants {mkN "escuridão" ; mkN "ignorância" ; } ; --*
lin darkness_5_N = variants {mkN "escuridade" ; mkN "escuridão" ; } ; --*
lin darling_2_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin darmstadtium_N = variants {mkN "110" ; mkN "Darmstádio" ; mkN "darmstádtio" ; mkN "number" ; } ; --*
lin darn_1_N = variants {mkN "cent" ; mkN "dam" ; mkN "damn" ; mkN "droga" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin darnel_N = variants {mkN "darnel" ; mkN "joio" ; mkN "temulentum" ; } ; --*
lin darning_needle_2_N = variants {mkN "darning" ; mkN "doctor" ; mkN "feeder" ; mkN "hawk" ; mkN "libélula" ; mkN "needle" ; } ; --*
lin darn_V2 = mkV2 (mkV "cerzir") ; --*
lin dart_1_N = variants {mkN "dardo" ; mkN "flecha" ; mkN "seta" ; } ; --*
lin dart_1_V = variants {mkV "borboletear" ; mkV "esvoaçar" ; } ; --*
lin dart_3_N = mkN "dardo" ; --*
lin dart_3_V = mkV "dardejar" ; --*
lin dartmouth_PN = variants {mkPN "College" ; mkPN "Faculdade" ; } ; --*
lin darts_N = mkN "dardos" ; --*
lin dash_1_N = variants {mkN "elegância" ; mkN "estilo" ; } ; --*
lin dash_2_N = mkN "carreira" ; --*
lin dash_2_V = mkV "quebrar" ; --*
lin dash_3_V = mkV "quebrar" ; --*
lin dash_4_N = variants {mkN "hífen" ; mkN "traço-de-união" ; } ; --*
lin dash_5_V = variants {mkV "assustar" ; mkV "away" ; mkV "desalentar" ; mkV "intimidar" ; mkV "off" ; } ; --*
lin dashboard_2_N = mkN "painel" ; --*
lin dash_off_1_V2 = mkV2 (mkV "off") ; --*
lin dash_off_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "off") ; } ; --*
lin database_N = variants {mkN "banco" ; mkN "base" ; } ; --*
lin data_N = variants {mkN "dados" ; mkN "informação" ; } ; --*
lin date_1_N = variants {mkN "data" ; mkN "date" ; mkN "of" ; } ; --*
lin date_2_N = variants {mkN "acompanhante" ; mkN "ficante" ; } ; --*
lin date_2_V2 = variants {mkV2 (mkV "datar") ; mkV2 (mkV "stamp") ; } ; --*
lin date_3_N = variants {mkN "compromisso" ; mkN "hora" ; } ; --*
lin date_3_V2 = variants {mkV2 (mkV "aprazar") ; mkV2 (mkV "datar") ; } ; --*
lin date_4_N = mkN "hoje" ; --*
lin date_5_N = mkN "data" ; --*
lin date_5_V2 = mkV2 (mkV "datar") ; --*
lin date_6_N = mkN "data" ; --*
lin date_7_N = mkN "tâmara" ; --*
lin dateless_4_A = variants {mkA "impróprio" ; mkA "interminável" ; mkA "prematuro" ; mkA "sempiterno" ; } ; --*
lin dateline_1_N = variants {mkN "Date" ; mkN "line" ; mkN "Linha" ; } ; --*
lin dating_N = variants {mkN "datação" ; mkN "dating" ; } ; --*
lin dative_N = variants {mkN "case" ; mkN "dativo" ; } ; --*
lin datum_N = variants {mkN "datum" ; mkN "informação" ; mkN "point" ; } ; --*
lin daub_1_V2 = variants {mkV2 (mkV "emassar") ; mkV2 (mkV "engessar") ; } ; --*
lin daub_2_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin daub_2_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "passar") ; } ; --*
lin daub_3_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "emassar") ; } ; --*
lin daughter_in_law_N = mkN "nora" ; --*
lin daughter_N = mkN "filha" ; --*
lin daunting_A = variants {mkA "desalentador" ; mkA "desencorajador" ; } ; --*
lin dauntless_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "intrépido" ; mkA "ousado" ; } ; --*
lin daunt_V2 = variants {mkV2 (mkV "assustar") ; mkV2 (mkV "away") ; mkV2 (mkV "desalentar") ; mkV2 (mkV "intimidar") ; mkV2 (mkV "off") ; } ; --*
lin david_1_PN = mkPN "David" ; --*
lin david_2_PN = variants {mkPN "Jacques-Louis" ; mkPN "Louis" ; } ; --*
lin david_3_PN = mkPN "David" ; --*
lin davit_N = variants {mkN "serviola" ; mkN "turco" ; } ; --*
lin dawn_1_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin dawn_1_V = variants {mkV "across" ; mkV "clicar" ; mkV "despontar" ; mkV "entender" ; mkV "home" ; mkV "in" ; mkV "into" ; mkV "through" ; } ; --*
lin dawn_2_N = mkN "madrugada" ; --*
lin dawn_2_V = variants {mkV "alvorecer" ; mkV "despontar" ; mkV "raiar" ; } ; --*
lin dawn_3_V = variants {mkV "alumiar" ; mkV "amanhecer" ; } ; --*
lin daw_N = variants {mkN "gralha" ; mkN "gralha-de-nuca-cinzenta" ; mkN "monedula" ; } ; --*
lin day_1_N = variants {mkN "day" ; mkN "dia" ; mkN "hour" ; mkN "hours" ; mkN "interval" ; mkN "solar" ; } ; --*
lin day_2_N = mkN "dia" ; --*
lin day_3_N = mkN "dia" ; --*
lin day_4_N = variants {mkN "dia" ; mkN "jornada" ; } ; --*
lin day_5_N = mkN "dia" ; --*
lin day_6_N = variants {mkN "era" ; mkN "período" ; } ; --*
lin day_7_N = mkN "dia" ; --*
lin day_8_N = variants {mkN "day" ; mkN "dia" ; } ; --*
lin daybreak_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin daycare_1_N = variants {mkN "care" ; mkN "creche" ; } ; --*
lin daydream_1_V = variants {mkV "desejar" ; mkV "devanear" ; mkV "fantasiar" ; mkV "sonhar" ; } ; --*
lin daydream_N = variants {mkN "castle" ; mkN "devaneio" ; mkN "in" ; mkN "sonho" ; mkN "viagem" ; } ; --*
lin day_labourer_N = variants {mkN "laborer" ; mkN "labourer" ; } ; --*
lin daylight_1_N = variants {mkN "dia" ; mkN "jornada" ; } ; --*
lin daylight_2_N = mkN "luz" ; --*
lin daylong_Adv = variants {mkAdv "day" ; mkAdv "diurnamente" ; } ; --*
lin day_off_CN = UseN (mkN "off") ; --*
lin days_N = variants {mkN "dia-a-dia" ; mkN "dias" ; mkN "vida" ; } ; --*
lin dayspring_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin daytime_N = variants {mkN "dia" ; mkN "jornada" ; } ; --*
lin daze_1_N = variants {mkN "choque" ; mkN "estupor" ; } ; --*
lin daze_1_V2 = variants {mkV2 (mkV "cegar") ; mkV2 (mkV "encandear") ; } ; --*
lin daze_2_N = variants {mkN "bruma" ; mkN "confusão" ; } ; --*
lin daze_2_V2 = variants {mkV2 (mkV "atordoar") ; mkV2 (mkV "entontecer") ; } ; --*
lin dazzle_1_V2 = variants {mkV2 (mkV "cegar") ; mkV2 (mkV "encandear") ; } ; --*
lin dazzle_2_V2 = variants {mkV2 (mkV "deslumbrar") ; mkV2 (mkV "fascinar") ; mkV2 (mkV "impressionar") ; } ; --*
lin dazzling_1_A = mkA "fulgurante" ; --*
lin dazzling_2_A = mkA "deslumbrante" ; --*
lin d_day_PN = variants {mkPN "dia" ; mkPN "June" ; } ; --*
lin ddt_N = variants {mkN "Ddt" ; mkN "DDT" ; mkN "diclorodifeniltricloretano" ; } ; --*
lin deacon_1_N = variants {mkN "deacon" ; mkN "diácono" ; } ; --*
lin deactivate_2_V2 = variants {mkV2 (mkV "desactivar") ; mkV2 (mkV "desativar") ; mkV2 (mkV "inativar") ; } ; --*
lin deactivation_2_N = mkN "desativação" ; --*
lin dead_1_Adv = variants {mkAdv "abruptamente" ; mkAdv "de" ; mkAdv "precipitadamente" ; mkAdv "repentinamente" ; mkAdv "subitamente" ; } ; --*
lin dead_1_A = variants {mkA "morto" ; mkA "semvida" ; } ; --*
lin dead_2_Adv = variants {mkAdv "absolutamente" ; mkAdv "cem" ; mkAdv "completamente" ; mkAdv "de" ; mkAdv "inteiramente" ; mkAdv "totalmente" ; } ; --*
lin deaden_3_V2 = mkV2 (mkV "amortecer") ; --*
lin deaden_6_V2 = variants {mkV2 (mkV "amortecer") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin deadline_N = variants {mkN "data" ; mkN "prazo" ; } ; --*
lin deadliness_N = mkN "letalidade" ; --*
lin deadlock_N = variants {mkN "end" ; mkN "estancamento" ; mkN "impasse" ; } ; --*
lin deadly_1_A = mkA "mortal" ; --*
lin deadly_2_A = variants {mkA "fatal" ; mkA "letal" ; mkA "mortal" ; } ; --*
lin deadly_3_A = variants {mkA "venenosa" ; mkA "venenoso" ; mkA "virulento" ; } ; --*
lin deadly_4_A = mkA "mortal" ; --*
lin deadly_5_A = variants {mkA "perniciosa" ; mkA "pernicioso" ; } ; --*
lin deadly_6_A = mkA "mortal" ; --*
lin deadpan_A = variants {mkA "inexpressível" ; mkA "sem" ; } ; --*
lin deaf_A = mkA "surdo" ; --*
lin deafen_1_V2 = mkV2 (mkV "ensurdecer") ; --*
lin deafen_2_V2 = mkV2 (mkV "ensurdecer") ; --*
lin deafen_3_V2 = mkV2 (mkV "ensurdecer") ; --*
lin deafening_A = mkA "ensurdecedor" ; --*
lin deafness_N = variants {mkN "loss" ; mkN "surdez" ; } ; --*
lin deaf_to_A2 = mkA2 (mkA "surdo") noPrep ; --*
lin deal_10_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "lidar") ; mkV2 (mkV "on") ; } ; --*
lin deal_1_N = variants {mkN "comércio" ; mkN "deal" ; mkN "negócio" ; } ; --*
lin deal_1_V = variants {mkV "cobrir" ; mkV "endereçar" ; mkV "falar" ; mkV "lidar" ; mkV "tratar" ; } ; --*
lin deal_2_N = mkN "pacto" ; --*
lin deal_2_PN = mkPN "pacto" ; --*
lin deal_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "considerar") ; } ; --*
lin deal_4_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "do") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; mkV2 (mkV "sobreviver") ; mkV2 (mkV "virar-se") ; } ; --*
lin deal_5_N = mkN "bosque" ; --*
lin deal_5_PN = mkPN "bosque" ; --*
lin deal_5_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; } ; --*
lin deal_6_N = mkN "mão" ; --*
lin deal_6_PN = mkPN "mão" ; --*
lin deal_6_V = mkV "vender" ; --*
lin deal_7_V = variants {mkV "conduzir" ; mkV "dirigir" ; mkV "governar" ; mkV "guiar" ; mkV "lidar" ; } ; --*
lin deal_8_N = variants {mkN "carteamento" ; mkN "carteio" ; mkN "distribuição" ; } ; --*
lin deal_8_PN = variants {mkPN "carteamento" ; mkPN "carteio" ; mkPN "distribuição" ; } ; --*
lin deal_9_V = mkV "cartear" ; --*
lin dealer_1_N = variants {mkN "comerciante" ; mkN "mercador" ; mkN "negociante" ; } ; --*
lin dealing_2_N = mkN "transação" ; --*
lin dealings_2_N = mkN "relação" ; --*
lin dealings_3_N = mkN "transação" ; --*
lin deal_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin dean_1_N = variants {mkN "deão" ; mkN "decano" ; mkN "reitor" ; } ; --*
lin dean_1_PN = variants {mkPN "deão" ; mkPN "decano" ; mkPN "reitor" ; } ; --*
lin dean_2_N = variants {mkN "Byron" ; mkN "Dean" ; mkN "James" ; } ; --*
lin dean_2_PN = variants {mkPN "Byron" ; mkPN "Dean" ; mkPN "James" ; } ; --*
lin dean_4_N = variants {mkN "deão" ; mkN "Deão" ; } ; --*
lin dean_4_PN = variants {mkPN "deão" ; mkPN "Deão" ; } ; --*
lin dear_1_A = variants {mkA "caro" ; mkA "prezado" ; mkA "querida" ; mkA "querido" ; } ; --*
lin dear_1_N = variants {mkN "amante" ; mkN "amor" ; } ; --*
lin dear_2_A = mkA "querido" ; --*
lin dear_3_A = mkA "sincero" ; --*
lin dear_4_A = mkA "caro" ; --*
lin dearest_N = variants {mkN "amante" ; mkN "amor" ; } ; --*
lin dearth_1_N = variants {mkN "carência" ; mkN "escassez" ; mkN "falta" ; mkN "fome" ; mkN "grande" ; mkN "penúria" ; } ; --*
lin dearth_2_N = mkN "escassez" ; --*
lin death_1_N = mkN "morte" ; --*
lin death_2_N = mkN "morte" ; --*
lin death_3_N = mkN "morte" ; --*
lin death_4_N = variants {mkN "fim" ; mkN "morte" ; mkN "queda" ; } ; --*
lin death_5_N = mkN "morte" ; --*
lin death_6_N = mkN "Morte" ; --*
lin death_7_N = variants {mkN "destruição" ; mkN "morte" ; } ; --*
lin death_8_N = mkN "morte" ; --*
lin deathbed_1_N = mkN "leito" ; --*
lin deathless_A = mkA "imortal" ; --*
lin deathly_2_Adv = variants {mkAdv "demasiado" ; mkAdv "excessivo" ; mkAdv "extremamente" ; mkAdv "muito" ; } ; --*
lin deathly_2_A = mkA "mortal" ; --*
lin death_mask_N = mkN "mask" ; --*
lin death_rate_1_N = variants {mkN "mortalidade" ; mkN "rate" ; } ; --*
lin debar_2_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin debar_3_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "proibir") ; } ; --*
lin debarkation_N = mkN "desembarque" ; --*
lin debark_V = variants {mkV "desembarcar-se" ; mkV "down" ; } ; --*
lin debase_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin debase_2_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin debase_3_V2 = variants {mkV2 (mkV "adulterar") ; mkV2 (mkV "aviltar") ; mkV2 (mkV "diluir") ; } ; --*
lin debasement_1_N = mkN "adulteração" ; --*
lin debasement_2_N = mkN "degradação" ; --*
lin debasing_A = mkA "degradante" ; --*
lin debatable_1_A = mkA "problemático" ; --*
lin debatable_2_A = mkA "discutível" ; --*
lin debatable_3_A = mkA "discutível" ; --*
lin debate_1_N = variants {mkN "debate" ; mkN "discussão" ; } ; --*
lin debate_1_V2 = mkV2 (mkV "debater") ; --*
lin debate_2_N = variants {mkN "debate" ; mkN "disputa" ; } ; --*
lin debate_2_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "deliberar") ; mkV2 (mkV "over") ; } ; --*
lin debate_3_V2 = variants {mkV2 (mkV "debater") ; mkV2 (mkV "deliberar") ; } ; --*
lin debate_3_V = variants {mkV "debater" ; mkV "deliberar" ; } ; --*
lin debate_4_V2 = variants {mkV2 (mkV "arguir") ; mkV2 (mkV "argüir") ; mkV2 (mkV "debater") ; mkV2 (mkV "discutir") ; } ; --*
lin debate_4_V = variants {mkV "arguir" ; mkV "argüir" ; mkV "debater" ; mkV "discutir" ; } ; --*
lin debaucheeFem_N = variants {mkN "depravado" ; mkN "libertino" ; } ; --*
lin debaucheeMasc_N = variants {mkN "depravado" ; mkN "libertino" ; } ; --*
lin debauchery_N = variants {mkN "deboche" ; mkN "dissipação" ; mkN "farra" ; mkN "orgia" ; mkN "revelry" ; mkN "viveremfarra" ; } ; --*
lin debauch_N = variants {mkN "deboche" ; mkN "dissipação" ; mkN "farra" ; mkN "orgia" ; mkN "revelry" ; mkN "viveremfarra" ; } ; --*
lin debauch_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin debenture_2_N = mkN "debênture" ; --*
lin debilitate_V2 = variants {mkV2 (mkV "debilitar") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin debility_N = variants {mkN "debilidade" ; mkN "fraqueza" ; } ; --*
lin debit_N = variants {mkN "débito" ; mkN "entry" ; } ; --*
lin debit_V2 = mkV2 (mkV "debitar") ; --*
lin debonair_2_A = variants {mkA "alegre" ; mkA "animado" ; } ; --*
lin debridement_N = mkN "desbridamento" ; --*
lin debrief_V2 = mkV2 (mkV "interrogar") ; --*
lin debris_N = variants {mkN "destroços" ; mkN "entulho" ; mkN "escombros" ; mkN "restos" ; mkN "ruínas" ; } ; --*
lin debt_2_N = variants {mkN "Débito" ; mkN "dívida" ; mkN "Dívida" ; mkN "dívidas" ; } ; --*
lin debtor_1_N = variants {mkN "devedor" ; mkN "Devedor" ; mkN "devedora" ; } ; --*
lin debugger_N = variants {mkN "depurador" ; mkN "Depuradores" ; } ; --*
lin debunk_V2 = variants {mkV2 (mkV "desacreditar") ; mkV2 (mkV "ridicularizar") ; } ; --*
lin debut_1_N = variants {mkN "appearance" ; mkN "apresentação" ; mkN "introdução" ; mkN "lançamento" ; } ; --*
lin debut_1_V2 = mkV2 (mkV "debutar") ; --*
lin debut_2_N = mkN "apresentação" ; --*
lin debut_2_V2 = mkV2 (mkV "estrear") ; --*
lin debut_3_V2 = variants {mkV2 (mkV "lançado") ; mkV2 (mkV "ser") ; } ; --*
lin dec_1_PN = variants {mkPN "dez" ; mkPN "dezembro" ; mkPN "Dezembro" ; } ; --*
lin dec_2_PN = variants {mkPN "declinação" ; mkPN "latitude" ; } ; --*
lin decade_1_N = variants {mkN "década" ; mkN "decênio" ; } ; --*
lin decade_2_N = variants {mkN "10" ; mkN "dez" ; mkN "dezena" ; } ; --*
lin decadence_1_N = variants {mkN "decadência" ; mkN "degeneração" ; } ; --*
lin decadent_1_A = mkA "decadente" ; --*
lin decagon_N = mkN "decágono" ; --*
lin decalcification_N = mkN "descalcificação" ; --*
lin decalcomania_1_N = mkN "decalcomania" ; --*
lin decal_N = mkN "decalcomania" ; --*
lin decalogue_N = variants {mkN "Commandments" ; mkN "Dez" ; } ; --*
lin decameter_1_N = variants {mkN "decâmetro" ; mkN "Múltiplos" ; } ; --*
lin decamp_2_V = variants {mkV "desaparecer" ; mkV "escapar" ; mkV "esconder-se" ; mkV "off" ; mkV "sumir" ; } ; --*
lin decantation_N = variants {mkN "decantação" ; mkN "Decantação" ; } ; --*
lin decanter_N = variants {mkN "decanter" ; mkN "garrafa" ; mkN "jarra" ; } ; --*
lin decant_V2 = variants {mkV2 (mkV "decantar") ; mkV2 (mkV "out") ; mkV2 (mkV "servir") ; } ; --*
lin decapitate_V2 = variants {mkV2 (mkV "decapitar") ; mkV2 (mkV "degolar") ; } ; --*
lin decapitation_1_N = mkN "decapitação" ; --*
lin decapitation_2_N = mkN "decapitação" ; --*
lin decarboxylation_N = variants {mkN "descarboxilação" ; mkN "Descar-boxilação" ; } ; --*
lin decasyllabic_A = mkA "decassilábico" ; --*
lin decasyllable_N = mkN "decassílabo" ; --*
lin decathlon_N = mkN "decatlo" ; --*
lin decay_1_N = variants {mkN "apodrecimento" ; mkN "decomposição" ; mkN "deterioração" ; mkN "putrefação" ; } ; --*
lin decay_1_V = variants {mkV "decair" ; mkV "dividir" ; mkV "putrefazer" ; } ; --*
lin decay_2_N = mkN "decadência" ; --*
lin decay_2_V = variants {mkV "decair" ; mkV "desmoronar" ; mkV "esfacelar" ; } ; --*
lin decay_3_N = mkN "decomposição" ; --*
lin decay_3_V = mkV "putrefazer" ; --*
lin decay_4_N = mkN "decadência" ; --*
lin decay_5_N = variants {mkN "decay" ; mkN "Desintegração" ; mkN "Radioatividade" ; } ; --*
lin decayed_A = mkA "podre" ; --*
lin deceased_A = variants {mkA "falecido" ; mkA "morto" ; mkA "peace" ; mkA "rest" ; } ; --*
lin decease_N = mkN "morte" ; --*
lin decease_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin deceit_2_N = mkN "engano" ; --*
lin deceit_3_N = variants {mkN "dissimulação" ; mkN "enganação" ; } ; --*
lin deceitful_1_A = mkA "enganoso" ; --*
lin deceive_1_V2 = variants {mkV2 (mkV "enganar") ; mkV2 (mkV "iludir") ; mkV2 (mkV "lograr") ; mkV2 (mkV "on") ; } ; --*
lin deceive_2_V2 = variants {mkV2 (mkV "astray") ; mkV2 (mkV "enganar") ; mkV2 (mkV "trair") ; } ; --*
lin deceiver_N = mkN "trapaceiro" ; --*
lin decelerate_1_V = variants {mkV "desacelerar" ; mkV "down" ; mkV "reduzir" ; mkV "up" ; } ; --*
lin decelerate_2_V2 = variants {mkV2 (mkV "desacelerar") ; mkV2 (mkV "down") ; } ; --*
lin deceleration_1_N = mkN "desaceleração" ; --*
lin deceleration_2_N = mkN "desaceleração" ; --*
lin decency_1_N = variants {mkN "decência" ; mkN "decoro" ; } ; --*
lin decent_1_A = mkA "bom" ; --*
lin decent_2_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "conveniente" ; mkA "decoroso" ; mkA "il" ; } ; --*
lin decent_6_A = variants {mkA "aceitável" ; mkA "satisfatório" ; } ; --*
lin decentralization_2_N = mkN "descentralização" ; --*
lin decentralize_1_V2 = variants {mkV2 (mkV "descentralizar") ; mkV2 (mkV "desconcentrar") ; } ; --*
lin deception_1_N = mkN "engano" ; --*
lin deception_2_N = variants {mkN "dissimulação" ; mkN "enganação" ; } ; --*
lin deception_3_N = variants {mkN "ilusão" ; mkN "magia" ; mkN "trick" ; mkN "truque" ; } ; --*
lin deceptive_2_A = variants {mkA "enganador" ; mkA "enganoso" ; mkA "equivocado" ; mkA "ilusório" ; } ; --*
lin decibel_N = variants {mkN "decibéis" ; mkN "decibel" ; } ; --*
lin decide_1_V2 = mkV2 (mkV "decidir") ; --*
lin decide_2_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "decidir") ; mkV2 (mkV "resolver") ; } ; --*
lin decide_3_V2 = variants {mkV2 (mkV "decidir") ; mkV2 (mkV "fazer") ; } ; --*
lin decided_A = variants {mkA "evidente" ; mkA "peremptório" ; } ; --*
lin decide_V = variants {mkV "decidir" ; mkV "resolver" ; mkV "up" ; } ; --*
lin decide_VS = variants {mkVS (mkV "decidir") ; mkVS (mkV "resolver") ; mkVS (mkV "up") ; } ; --*
lin decide_VV = variants {mkVV (mkV "decidir") ; mkVV (mkV "resolver") ; mkVV (mkV "up") ; } ; --*
lin decigram_N = mkN "decigrama" ; --*
lin deciliter_1_N = mkN "decilitro" ; --*
lin decimal_1_N = variants {mkN "decimal" ; mkN "fraction" ; } ; --*
lin decimal_2_N = variants {mkN "decimal" ; mkN "Sistema" ; } ; --*
lin decimal_A = mkA "decimal" ; --*
lin decimate_1_V2 = mkV2 (mkV "dizimar") ; --*
lin decimate_2_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin decimeter_1_N = variants {mkN "decímetro" ; mkN "Decímetro" ; } ; --*
lin decipher_1_V2 = variants {mkV2 (mkV "decifrar") ; mkV2 (mkV "descodificar") ; } ; --*
lin decipherable_A = mkA "legível" ; --*
lin decipherer_2_N = mkN "decifrador" ; --*
lin decision_1_N = variants {mkN "decisão" ; mkN "resolução" ; } ; --*
lin decision_2_N = variants {mkN "decisão" ; mkN "determinação" ; mkN "resolução" ; mkN "resoluções" ; } ; --*
lin decision_4_N = mkN "resultado" ; --*
lin decision_5_N = mkN "decisão" ; --*
lin decision_making_N = variants {mkN "making" ; mkN "tomada" ; mkN "Tomada" ; } ; --*
lin decisive_1_A = mkA "decisivo" ; --*
lin decisive_2_A = variants {mkA "decidido" ; mkA "decisivo" ; mkA "resoluto" ; } ; --*
lin decisive_4_A = variants {mkA "crítico" ; mkA "decisivo" ; mkA "fundamental" ; } ; --*
lin decisiveness_1_N = mkN "decisão" ; --*
lin deck_1_N = variants {mkN "convés" ; mkN "Convés" ; } ; --*
lin deck_1_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "ornamentar") ; } ; --*
lin deck_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "enfeitar") ; } ; --*
lin deck_3_N = variants {mkN "baralho" ; mkN "of" ; } ; --*
lin deck_out_V = variants {mkV "arrumar" ; mkV "out" ; mkV "up" ; mkV "vestir" ; } ; --*
lin declaim_1_V2 = variants {mkV2 (mkV "citar") ; mkV2 (mkV "declamar") ; mkV2 (mkV "recitar") ; } ; --*
lin declaim_1_V = variants {mkV "citar" ; mkV "declamar" ; mkV "recitar" ; } ; --*
lin declamatory_A = mkA "bombástico" ; --*
lin declarable_A = mkA "declarável" ; --*
lin declaration_1_N = variants {mkN "asserção" ; mkN "declaração" ; } ; --*
lin declaration_2_N = mkN "declaração" ; --*
lin declaration_3_N = mkN "declaração" ; --*
lin declaration_4_N = mkN "Contrato" ; --*
lin declaration_5_N = variants {mkN "anunciação" ; mkN "anúncio" ; mkN "declaracão" ; mkN "declaração" ; mkN "pregão" ; mkN "proclamação" ; mkN "promulgação" ; } ; --*
lin declaration_6_N = mkN "resolução" ; --*
lin declarative_2_A = mkA "indicativo" ; --*
lin declare_1_VS = mkVS (mkV "declarar") ; --*
lin declare_2_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "declarar") ; } ; --*
lin declare_3_VS = mkVS (mkV "declarar") ; --*
lin declare_4_V2 = variants {mkV2 (mkV "declarar") ; mkV2 (mkV "julgar") ; } ; --*
lin declare_5_V2 = mkV2 (mkV "declarar") ; --*
lin declassification_N = mkN "Desconfidencialização" ; --*
lin declassify_V2 = mkV2 (mkV "reclassificar") ; --*
lin declension_1_N = mkN "declinação" ; --*
lin declension_2_N = variants {mkN "deterioração" ; mkN "in" ; } ; --*
lin declension_3_N = variants {mkN "barranco" ; mkN "declínio" ; mkN "declividade" ; mkN "descida" ; } ; --*
lin declension_4_N = variants {mkN "declinação" ; mkN "Declinação" ; } ; --*
lin declination_2_N = variants {mkN "barranco" ; mkN "declínio" ; mkN "declividade" ; mkN "descida" ; } ; --*
lin declination_3_N = variants {mkN "declinação" ; mkN "latitude" ; } ; --*
lin decline_1_V = variants {mkV "decair" ; mkV "piorar" ; } ; --*
lin decline_2_V2 = variants {mkV2 (mkV "declinar") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; mkV2 (mkV "up") ; } ; --*
lin decline_3_N = mkN "decadência" ; --*
lin decline_3_VV = variants {mkVV (mkV "recusar") ; mkVV (mkV "rejeitar") ; } ; --*
lin decline_4_N = variants {mkN "barranco" ; mkN "declínio" ; mkN "declividade" ; mkN "descida" ; } ; --*
lin decline_4_V = variants {mkV "diminuir" ; mkV "down" ; mkV "minguar" ; } ; --*
lin decline_5_V = mkV "diminuir" ; --*
lin decline_6_V = variants {mkV "corrigir" ; mkV "decair" ; mkV "declinar" ; } ; --*
lin declivity_N = variants {mkN "barranco" ; mkN "declínio" ; mkN "declividade" ; mkN "descida" ; } ; --*
lin decoction_N = variants {mkN "decocção" ; mkN "Decocção" ; } ; --*
lin decoder_2_N = mkN "decodificador" ; --*
lin decode_V2 = variants {mkV2 (mkV "decifrar") ; mkV2 (mkV "descodificar") ; } ; --*
lin decoding_N = variants {mkN "Decifração" ; mkN "descodificação" ; } ; --*
lin decolonization_1_N = mkN "descolonização" ; --*
lin decolonize_1_V2 = mkV2 (mkV "descolonizar") ; --*
lin decompose_2_V = variants {mkV "decair" ; mkV "dividir" ; mkV "putrefazer" ; } ; --*
lin decompose_3_V = variants {mkV "apodrecer" ; mkV "putrefazer" ; } ; --*
lin decomposition_4_N = variants {mkN "decomposição" ; mkN "putrefação" ; } ; --*
lin decomposition_5_N = mkN "decomposição" ; --*
lin decompress_2_V2 = variants {mkV2 (mkV "descompactar") ; mkV2 (mkV "despressurizar") ; } ; --*
lin decompress_3_V = variants {mkV "descontrair" ; mkV "down" ; mkV "pegar" ; mkV "relaxar" ; mkV "up" ; } ; --*
lin decompression_2_N = mkN "descompressão" ; --*
lin deconstruction_N = variants {mkN "desconstrução" ; mkN "Desconstrução" ; } ; --*
lin decontaminate_V2 = mkV2 (mkV "descontaminar") ; --*
lin decontamination_N = mkN "descontaminação" ; --*
lin decontrol_V2 = mkV2 (mkV "liberar") ; --*
lin decorate_1_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "empetecar") ; mkV2 (mkV "enfeitar") ; mkV2 (mkV "ornamentar") ; mkV2 (mkV "ornar") ; } ; --*
lin decorate_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "ornamentar") ; } ; --*
lin decorate_3_V2 = mkV2 (mkV "condecorar") ; --*
lin decorate_4_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; } ; --*
lin decoration_1_N = variants {mkN "adorno" ; mkN "decoração" ; mkN "ornamento" ; mkN "ornato" ; } ; --*
lin decoration_2_N = variants {mkN "condecoração" ; mkN "medalha" ; mkN "wreath" ; } ; --*
lin decoration_3_N = mkN "decoração" ; --*
lin decorative_A = variants {mkA "cosmético" ; mkA "decorativo" ; mkA "ornamental" ; } ; --*
lin decorator_1_N = variants {mkN "decorador" ; mkN "decorator" ; mkN "desenhador" ; mkN "designer" ; } ; --*
lin decorator_2_N = mkN "decorador" ; --*
lin decorous_2_A = variants {mkA "adequado" ; mkA "conveniente" ; mkA "decoroso" ; mkA "il" ; } ; --*
lin decorum_N = variants {mkN "decência" ; mkN "decoro" ; } ; --*
lin decoy_2_N = variants {mkN "Ardil" ; mkN "isca" ; } ; --*
lin decoy_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "engodar") ; mkV2 (mkV "seduzir") ; } ; --*
lin decrease_1_N = variants {mkN "abatimento" ; mkN "decréscimo" ; } ; --*
lin decrease_1_V = variants {mkV "decrescer" ; mkV "desabar" ; mkV "diminuir" ; mkV "minguar" ; } ; --*
lin decrease_2_N = variants {mkN "abatimento" ; mkN "diminuição" ; } ; --*
lin decrease_2_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "reduzir") ; } ; --*
lin decrease_4_N = variants {mkN "diminuição" ; mkN "redução" ; } ; --*
lin decree_1_V2 = mkV2 (mkV "decretar") ; --*
lin decree_2_V2 = mkV2 (mkV "decretar") ; --*
lin decree_N = variants {mkN "acta" ; mkN "decreto" ; } ; --*
lin decrepit_2_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin decry_V2 = variants {mkV2 (mkV "condenar") ; mkV2 (mkV "desaprovar") ; mkV2 (mkV "reprovar") ; } ; --*
lin dedicate_1_V2 = variants {mkV2 (mkV "comprometer") ; mkV2 (mkV "dedicar") ; } ; --*
lin dedicate_3_V2 = mkV2 (mkV "dedicar") ; --*
lin dedicate_4_V2 = mkV2 (mkV "dedicar") ; --*
lin dedicated_1_A = variants {mkA "dedicado" ; mkA "entregue" ; } ; --*
lin dedicated_2_A = mkA "dedicado" ; --*
lin dedication_5_N = mkN "dedicação" ; --*
lin dedifferentiation_N = mkN "desdiferenciação" ; --*
lin deduce_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "depreender") ; mkV2 (mkV "inferir") ; } ; --*
lin deduce_2_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "inferir") ; } ; --*
lin deducible_A = mkA "deduzível" ; --*
lin deduct_1_V2 = variants {mkV2 (mkV "deduzir") ; mkV2 (mkV "off") ; mkV2 (mkV "subtrair") ; } ; --*
lin deduct_2_V2 = variants {mkV2 (mkV "reter") ; mkV2 (mkV "segurar") ; } ; --*
lin deduct_3_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "depreender") ; mkV2 (mkV "inferir") ; } ; --*
lin deduction_2_N = mkN "desconto" ; --*
lin deduction_3_N = variants {mkN "acarretamento" ; mkN "dedução" ; } ; --*
lin deduction_4_N = variants {mkN "dedução" ; mkN "método" ; mkN "reasoning" ; } ; --*
lin deduction_5_N = variants {mkN "subtração" ; mkN "subtracção" ; } ; --*
lin deduction_6_N = variants {mkN "desconto" ; mkN "disconto" ; mkN "reduction" ; } ; --*
lin deed_1_N = variants {mkN "ato" ; mkN "contrato" ; mkN "escritura" ; mkN "feito" ; mkN "of" ; } ; --*
lin deed_2_N = variants {mkN "ação" ; mkN "action" ; mkN "activity" ; mkN "ato" ; } ; --*
lin deed_box_N = variants {mkN "caixa-forte" ; mkN "cofre" ; } ; --*
lin deem_V2 = variants {mkV2 (mkV "as") ; mkV2 (mkV "considerar") ; mkV2 (mkV "for") ; mkV2 (mkV "julgar") ; } ; --*
lin deep_13_A = variants {mkA "misteriosa" ; mkA "misterioso" ; } ; --*
lin deep_14_A = variants {mkA "abstracto" ; mkA "abstrato" ; mkA "abstruso" ; mkA "recôndito" ; } ; --*
lin deep_1_Adv = mkAdv "profundamente" ; --*
lin deep_1_A = mkA "profunda" ; --*
lin deep_3_A = variants {mkA "fundo" ; mkA "profundo" ; } ; --*
lin deepen_1_V2 = variants {mkV2 (mkV "acirrar") ; mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; } ; --*
lin deepen_2_V = mkV "intensificar" ; --*
lin deepen_4_V = mkV "mudar" ; --*
lin deep_freeze_1_N = variants {mkN "congelador" ; mkN "freezer" ; } ; --*
lin deep_freeze_V2 = mkV2 (mkV "freeze") ; --*
lin deepness_3_N = variants {mkN "fundura" ; mkN "profundeza" ; mkN "profundidade" ; } ; --*
lin deer_N = variants {mkN "Cervidae" ; mkN "cervídeos" ; mkN "cervo" ; mkN "cervos" ; mkN "veado" ; mkN "veados" ; } ; --*
lin de_escalate_1_V2 = mkV2 (mkV "diminuir") ; --*
lin de_escalate_2_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin defacement_N = variants {mkN "desfiguração" ; mkN "desfiguramento" ; } ; --*
lin deface_V2 = mkV2 (mkV "desfigurar") ; --*
lin defalcation_2_N = variants {mkN "apropriação" ; mkN "Apropriação" ; mkN "peculato" ; } ; --*
lin defamation_2_N = variants {mkN "calúnia" ; mkN "difamação" ; } ; --*
lin defamatory_A = variants {mkA "calunioso" ; mkA "difamatório" ; mkA "infamante" ; } ; --*
lin defamer_N = variants {mkN "caluniador" ; mkN "difamador" ; } ; --*
lin defame_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin default_1_N = variants {mkN "descuido" ; mkN "falta" ; mkN "negligência" ; mkN "omissão" ; } ; --*
lin default_2_N = mkN "inadimplência" ; --*
lin default_3_N = mkN "Moratória" ; --*
lin default_4_N = variants {mkN "default" ; mkN "option" ; } ; --*
lin defeat_1_N = variants {mkN "derrota" ; mkN "perda" ; mkN "vencimento" ; } ; --*
lin defeat_1_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "the") ; mkV2 (mkV "vencer") ; } ; --*
lin defeat_2_N = variants {mkN "derrota" ; mkN "frustação" ; mkN "frustração" ; } ; --*
lin defeatism_N = mkN "derrotismo" ; --*
lin defecate_V = variants {mkV "a" ; mkV "cagar" ; mkV "defecar" ; } ; --*
lin defecation_N = variants {mkN "defecação" ; mkN "merda" ; } ; --*
lin defect_1_N = mkN "defeito" ; --*
lin defect_2_N = variants {mkN "carência" ; mkN "defeito" ; mkN "deficiência" ; mkN "limitação" ; } ; --*
lin defect_3_N = variants {mkN "defeito" ; mkN "erro" ; mkN "falha" ; mkN "Flaw" ; } ; --*
lin defect_4_N = mkN "defeito" ; --*
lin defection_1_N = mkN "deserção" ; --*
lin defection_2_N = variants {mkN "apostasia" ; mkN "renúncia" ; } ; --*
lin defective_1_A = mkA "defeituoso" ; --*
lin defective_2_A = mkA "defeituoso" ; --*
lin defective_3_A = mkA "defeituoso" ; --*
lin defector_N = mkN "desertor" ; --*
lin defect_V = mkV "abandonar" ; --*
lin defence_10_N = variants {mkN "defesa" ; mkN "escudo" ; } ; --*
lin defence_12_N = variants {mkN "Departamento" ; mkN "Department" ; mkN "of" ; mkN "States" ; } ; --*
lin defence_1_N = variants {mkN "Ajustamentos" ; mkN "mechanism" ; mkN "reaction" ; } ; --*
lin defence_4_N = variants {mkN "force" ; mkN "guarda" ; } ; --*
lin defence_6_N = variants {mkN "defesa" ; mkN "justificação" ; } ; --*
lin defence_9_N = variants {mkN "defesa" ; mkN "measure" ; mkN "proteção" ; } ; --*
lin defenceless_1_A = variants {mkA "desabrigado" ; mkA "indefeso" ; mkA "inerme" ; } ; --*
lin defenceless_2_A = mkA "indefeso" ; --*
lin defend_1_V2 = variants {mkV2 (mkV "defender") ; mkV2 (mkV "for") ; mkV2 (mkV "suportar") ; } ; --*
lin defend_2_V2 = mkV2 (mkV "defender") ; --*
lin defend_3_V2 = mkV2 (mkV "defender") ; --*
lin defend_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "brigar") ; mkV2 (mkV "down") ; mkV2 (mkV "lutar") ; mkV2 (mkV "opor") ; } ; --*
lin defend_5_V2 = mkV2 (mkV "defender") ; --*
lin defend_6_V2 = mkV2 (mkV "representar") ; --*
lin defend_7_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "defender") ; mkV2 (mkV "manter") ; } ; --*
lin defendable_A = variants {mkA "defendível" ; mkA "defensável" ; } ; --*
lin defendant_N = variants {mkN "acusado" ; mkN "argüido" ; mkN "ré" ; mkN "réu" ; mkN "suspeito" ; } ; --*
lin defenderFem_1_N = variants {mkN "defensor" ; mkN "guarda" ; mkN "guardião" ; mkN "protetor" ; mkN "tutor" ; } ; --*
lin defenderMasc_1_N = variants {mkN "defensor" ; mkN "guarda" ; mkN "guardião" ; mkN "protetor" ; mkN "tutor" ; } ; --*
lin defenestration_N = mkN "defenestração" ; --*
lin defense_1_N = variants {mkN "defesa" ; mkN "measure" ; mkN "proteção" ; } ; --*
lin defense_2_N = variants {mkN "defesa" ; mkN "escudo" ; } ; --*
lin defense_4_N = variants {mkN "defesa" ; mkN "justificação" ; } ; --*
lin defense_5_N = variants {mkN "Ajustamentos" ; mkN "mechanism" ; mkN "reaction" ; } ; --*
lin defense_6_N = variants {mkN "Departamento" ; mkN "Department" ; mkN "of" ; mkN "States" ; } ; --*
lin defense_9_N = variants {mkN "force" ; mkN "guarda" ; } ; --*
lin defenseless_1_A = variants {mkA "desabrigado" ; mkA "indefeso" ; mkA "inerme" ; } ; --*
lin defenseless_2_A = mkA "indefeso" ; --*
lin defenseless_3_A = mkA "indefeso" ; --*
lin defensible_A = variants {mkA "defendível" ; mkA "defensável" ; } ; --*
lin defensive_2_A = mkA "defensivo" ; --*
lin defer_1_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin defer_2_V = variants {mkV "aceder" ; mkV "in" ; } ; --*
lin deference_1_N = variants {mkN "respeito" ; mkN "reverência" ; } ; --*
lin deference_2_N = mkN "deferência" ; --*
lin deferent_A = mkA "deferente" ; --*
lin deferential_A = mkA "deferente" ; --*
lin deferment_N = mkN "adiamento" ; --*
lin deferral_1_N = mkN "pausa" ; --*
lin deferral_2_N = mkN "adiamento" ; --*
lin defiance_2_N = mkN "desafio" ; --*
lin defiance_3_N = mkN "desafio" ; --*
lin defiant_A = mkA "desafiador" ; --*
lin defibrillation_N = mkN "desfibrilação" ; --*
lin defibrillator_N = mkN "desfibrilador" ; --*
lin deficiency_1_N = variants {mkN "ausência" ; mkN "carência" ; mkN "deficiência" ; mkN "escassez" ; mkN "falta" ; } ; --*
lin deficiency_2_N = variants {mkN "carência" ; mkN "deficiência" ; } ; --*
lin deficient_1_A = mkA "insuficiente" ; --*
lin deficient_2_A = mkA "insuficiente" ; --*
lin deficit_1_N = variants {mkN "carência" ; mkN "deficiência" ; mkN "deficit" ; } ; --*
lin deficit_2_N = variants {mkN "carência" ; mkN "deficiência" ; } ; --*
lin deficit_4_N = mkN "déficit" ; --*
lin defile_1_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin defile_2_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin define_1_V2 = mkV2 (mkV "especificar") ; --*
lin define_1_V = mkV "especificar" ; --*
lin define_2_V2 = mkV2 (mkV "definir") ; --*
lin define_3_V2 = mkV2 (mkV "determinar") ; --*
lin define_4_V2 = mkV2 (mkV "delinear") ; --*
lin define_5_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "especificar") ; } ; --*
lin definite_A = mkA "definitivo" ; --*
lin definition_1_N = mkN "definição" ; --*
lin definition_2_N = mkN "definição" ; --*
lin definitive_1_A = mkA "inequívoco" ; --*
lin definitive_2_A = mkA "clássico" ; --*
lin definitive_3_A = variants {mkA "decisivo" ; mkA "definitivo" ; } ; --*
lin deflagration_N = mkN "Deflagração" ; --*
lin deflate_3_V2 = variants {mkV2 (mkV "deflacionar") ; mkV2 (mkV "desinchar") ; } ; --*
lin deflate_4_V2 = mkV2 (mkV "desinflar") ; --*
lin deflation_2_N = mkN "deflação" ; --*
lin deflation_3_N = mkN "deflação" ; --*
lin deflect_1_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin deflect_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "curvar") ; mkV2 (mkV "virar") ; } ; --*
lin deflect_2_V = variants {mkV "away" ; mkV "curvar" ; mkV "virar" ; } ; --*
lin deflect_4_V2 = variants {mkV2 (mkV "desviar") ; mkV2 (mkV "distrair") ; } ; --*
lin deflect_5_V2 = variants {mkV2 (mkV "bloquear") ; mkV2 (mkV "defletir") ; mkV2 (mkV "impedir") ; } ; --*
lin deflection_2_N = variants {mkN "refração" ; mkN "refracção" ; } ; --*
lin deflection_5_N = variants {mkN "digressão" ; mkN "Digressão" ; } ; --*
lin deflective_A = mkA "refrativo" ; --*
lin deflower_1_V2 = variants {mkV2 (mkV "deflorar") ; mkV2 (mkV "desflorar") ; mkV2 (mkV "desvirginar") ; } ; --*
lin deflower_2_V2 = variants {mkV2 (mkV "deteriorar") ; mkV2 (mkV "estragar") ; } ; --*
lin defoliate_A = mkA "desfolhado" ; --*
lin defoliate_V2 = mkV2 (mkV "desfolhar") ; --*
lin defoliation_1_N = mkN "desfoliação" ; --*
lin defoliation_2_N = mkN "desfoliação" ; --*
lin deforestation_1_N = variants {mkN "desflorestação" ; mkN "desmatamento" ; } ; --*
lin deforestation_2_N = mkN "desflorestação" ; --*
lin deform_1_V2 = mkV2 (mkV "deformar") ; --*
lin deform_2_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "empenar") ; } ; --*
lin deform_3_V2 = mkV2 (mkV "torcer") ; --*
lin deform_4_V2 = mkV2 (mkV "deformar") ; --*
lin deform_5_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "distorcer") ; } ; --*
lin deform_6_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "form") ; mkV2 (mkV "shape") ; } ; --*
lin deformation_1_N = mkN "deformação" ; --*
lin deformation_2_N = mkN "deformação" ; --*
lin deformation_3_N = mkN "deformação" ; --*
lin deformity_1_N = variants {mkN "deformidade" ; mkN "malformação" ; } ; --*
lin deformity_2_N = mkN "deformidade" ; --*
lin defraud_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin defrayal_N = mkN "pagamento" ; --*
lin defrayment_N = mkN "pagamento" ; --*
lin defrost_V2 = mkV2 (mkV "descongelar") ; --*
lin deft_A = variants {mkA "hábil" ; mkA "jeitoso" ; } ; --*
lin deftness_N = variants {mkN "competência" ; mkN "facilidade" ; mkN "habilidade" ; } ; --*
lin defy_1_V2 = variants {mkV2 (mkV "afrontar") ; mkV2 (mkV "aguentar") ; mkV2 (mkV "arrostar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "relutar") ; mkV2 (mkV "up") ; } ; --*
lin defy_2_V2 = variants {mkV2 (mkV "recusar") ; mkV2 (mkV "resistir") ; } ; --*
lin defy_3_V2 = mkV2 (mkV "desafiar") ; --*
lin degauss_V2 = mkV2 (mkV "desmagnetizar") ; --*
lin degeneracy_1_N = variants {mkN "decadência" ; mkN "degeneração" ; } ; --*
lin degeneracy_2_N = variants {mkN "corrupção" ; mkN "depravação" ; } ; --*
lin degenerate_A = variants {mkA "devasso" ; mkA "libertino" ; } ; --*
lin degenerate_N = mkN "pervertido" ; --*
lin degenerate_V = variants {mkV "degenerar" ; mkV "degradar" ; mkV "deteriorar" ; mkV "piorar" ; } ; --*
lin degeneration_2_N = variants {mkN "decadência" ; mkN "degeneração" ; } ; --*
lin degeneration_3_N = mkN "degeneração" ; --*
lin degenerative_A = mkA "degenerativo" ; --*
lin degradation_1_N = mkN "degradação" ; --*
lin degradation_2_N = variants {mkN "aviltamento" ; mkN "decadência" ; mkN "rebaixe" ; } ; --*
lin degrade_1_V2 = mkV2 (mkV "degradar") ; --*
lin degrade_2_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin degrade_3_V2 = variants {mkV2 (mkV "baratear") ; mkV2 (mkV "barganhar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "desvalorizar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin degree_1_N = mkN "grau" ; --*
lin degree_2_N = variants {mkN "ápice" ; mkN "fase" ; mkN "grau" ; mkN "nível" ; } ; --*
lin degree_3_N = variants {mkN "degree" ; mkN "Grau" ; } ; --*
lin degree_4_N = mkN "grau" ; --*
lin degree_5_N = mkN "Grau" ; --*
lin degree_6_N = mkN "grau" ; --*
lin degree_7_N = mkN "grau" ; --*
lin dehiscence_N = mkN "deiscência" ; --*
lin dehumanization_1_N = mkN "desumanização" ; --*
lin dehumanize_1_V2 = mkV2 (mkV "desumanizar") ; --*
lin dehydrate_1_V2 = mkV2 (mkV "desidratar") ; --*
lin dehydration_1_N = variants {mkN "desidratação" ; mkN "dessecação" ; mkN "secagem" ; } ; --*
lin dehydration_2_N = mkN "desidratação" ; --*
lin dehydration_3_N = variants {mkN "desidratação" ; mkN "ressecação" ; mkN "up" ; } ; --*
lin de_ice_1_V2 = mkV2 (mkV "descongelar") ; --*
lin deification_3_N = variants {mkN "apoteose" ; mkN "exaltação" ; } ; --*
lin deify_1_V2 = variants {mkV2 (mkV "deificar") ; mkV2 (mkV "deusificar") ; mkV2 (mkV "idolatrar") ; } ; --*
lin deify_2_V2 = variants {mkV2 (mkV "deificar") ; mkV2 (mkV "endeusar") ; } ; --*
lin deign_V = variants {mkV "condescender" ; mkV "descer" ; } ; --*
lin deism_N = variants {mkN "Deismo" ; mkN "Deísmo" ; mkN "thought" ; } ; --*
lin deist_N = mkN "deísta" ; --*
lin deity_N = variants {mkN "deidade" ; mkN "Deidades" ; mkN "deus" ; mkN "Deus" ; mkN "deusa" ; mkN "divindade" ; mkN "divinidade" ; } ; --*
lin dejection_2_N = variants {mkN "fezes" ; mkN "Fezes" ; mkN "matter" ; mkN "merda" ; } ; --*
lin deject_V2 = variants {mkV2 (mkV "dejectar") ; mkV2 (mkV "dejetar") ; mkV2 (mkV "deprimir") ; mkV2 (mkV "desanimar") ; mkV2 (mkV "desmoralizar") ; mkV2 (mkV "down") ; } ; --*
lin de_jure_Adv = variants {mkAdv "jure" ; mkAdv "legalmente" ; } ; --*
lin dekaliter_1_N = mkN "decalitro" ; --*
lin delavirdine_N = mkN "Delavirdina" ; --*
lin delaware_1_PN = variants {mkPN "Delaware" ; mkPN "Rio" ; mkPN "River" ; } ; --*
lin delaware_3_PN = mkPN "Delaware" ; --*
lin delaware_4_PN = variants {mkPN "Delaware" ; mkPN "State" ; } ; --*
lin delaware_5_PN = mkPN "lenapes" ; --*
lin delay_1_N = variants {mkN "adiamento" ; mkN "demora" ; mkN "lag" ; mkN "pausa" ; } ; --*
lin delay_1_V2 = variants {mkV2 (mkV "atrasar") ; mkV2 (mkV "up") ; } ; --*
lin delay_2_N = variants {mkN "adiar" ; mkN "atraso" ; mkN "retardar" ; } ; --*
lin delay_2_V2 = mkV2 (mkV "adiar") ; --*
lin delay_3_V = mkV "atrasar" ; --*
lin delay_4_V2 = mkV2 (mkV "atrasar") ; --*
lin delayer_N = variants {mkN "atrasador" ; mkN "moroso" ; mkN "procrastinador" ; } ; --*
lin delectable_1_A = variants {mkA "apetitoso" ; mkA "delicioso" ; mkA "gostoso" ; mkA "saboroso" ; } ; --*
lin delectation_1_N = variants {mkN "alegria" ; mkN "deleite" ; mkN "prazer" ; } ; --*
lin delectation_2_N = mkN "divertimento" ; --*
lin delegacy_1_N = mkN "delegação" ; --*
lin delegacy_2_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "delegação" ; mkN "embaixada" ; mkN "missão" ; } ; --*
lin delegacy_3_N = mkN "delegação" ; --*
lin delegate_1_V2 = variants {mkV2 (mkV "delegar") ; mkV2 (mkV "deputar") ; } ; --*
lin delegate_2_V2 = mkV2 (mkV "delegar") ; --*
lin delegate_N = variants {mkN "delegada" ; mkN "delegado" ; mkN "representante" ; } ; --*
lin delegating_1_N = mkN "delegação" ; --*
lin delegation_1_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "delegação" ; mkN "embaixada" ; mkN "missão" ; } ; --*
lin delegation_2_N = mkN "delegação" ; --*
lin delete_1_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "deletar") ; mkV2 (mkV "eliminar") ; } ; --*
lin delete_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "deletar") ; } ; --*
lin deleterious_A = variants {mkA "deletério" ; mkA "injuriante" ; } ; --*
lin deletion_2_N = mkN "Deleção" ; --*
lin deletion_3_N = mkN "exérese" ; --*
lin deletion_4_N = variants {mkN "deleção" ; mkN "deletamento" ; mkN "exclusão" ; } ; --*
lin delhi_PN = variants {mkPN "capital" ; mkPN "Delhi" ; mkPN "Deli" ; mkPN "of" ; } ; --*
lin deliberate_1_A = mkA "deliberado" ; --*
lin deliberate_1_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "deliberar") ; mkV2 (mkV "over") ; } ; --*
lin deliberate_2_V2 = variants {mkV2 (mkV "debater") ; mkV2 (mkV "deliberar") ; } ; --*
lin deliberate_2_V = variants {mkV "debater" ; mkV "deliberar" ; } ; --*
lin deliberate_3_A = variants {mkA "intencional" ; mkA "premeditado" ; mkA "proposital" ; } ; --*
lin deliberation_1_N = mkN "debate" ; --*
lin deliberation_2_N = variants {mkN "pesada" ; mkN "ponderação" ; } ; --*
lin deliberation_3_N = variants {mkN "cálculo" ; mkN "deliberação" ; } ; --*
lin deliberation_4_N = variants {mkN "lentidão" ; mkN "vagarosidade" ; } ; --*
lin deliberation_5_N = mkN "deliberação" ; --*
lin delicacy_1_N = variants {mkN "delicadeza" ; mkN "garbo" ; } ; --*
lin delicacy_2_N = mkN "guloseima" ; --*
lin delicacy_3_N = mkN "discrição" ; --*
lin delicacy_6_N = mkN "diplomacia" ; --*
lin delicate_1_A = mkA "delicado" ; --*
lin delicate_3_A = variants {mkA "delicado" ; mkA "frágil" ; mkA "quebradiço" ; } ; --*
lin delicate_4_A = mkA "mole" ; --*
lin delicate_6_A = variants {mkA "cócegozo" ; mkA "sensitivo" ; } ; --*
lin delicious_1_A = variants {mkA "deleitoso" ; mkA "delicioso" ; } ; --*
lin delicious_2_A = variants {mkA "apetitoso" ; mkA "delicioso" ; mkA "gostoso" ; mkA "saboroso" ; } ; --*
lin delight_1_N = variants {mkN "alegria" ; mkN "deleite" ; mkN "prazer" ; } ; --*
lin delight_1_V2 = variants {mkV2 (mkV "agradar") ; mkV2 (mkV "aprazer") ; mkV2 (mkV "comprazer") ; mkV2 (mkV "embevecer") ; mkV2 (mkV "encantar") ; mkV2 (mkV "gostar") ; mkV2 (mkV "satisfazer") ; } ; --*
lin delight_2_N = variants {mkN "alegria" ; mkN "deleite" ; mkN "prazer" ; } ; --*
lin delight_2_V = variants {mkV "desfrutar" ; mkV "gozar" ; } ; --*
lin delight_3_V2 = mkV2 (mkV "encantar") ; --*
lin delight_3_V = mkV "encantar" ; --*
lin delighted_1_A = mkA "deleitado" ; --*
lin delightful_A = variants {mkA "deleitoso" ; mkA "delicioso" ; } ; --*
lin delimit_1_V2 = mkV2 (mkV "especificar") ; --*
lin delimit_2_V2 = mkV2 (mkV "delimitar") ; --*
lin delimit_3_V2 = variants {mkV2 (mkV "delimitar") ; mkV2 (mkV "demarcar") ; } ; --*
lin delimitate_1_V2 = mkV2 (mkV "especificar") ; --*
lin delimitate_2_V2 = variants {mkV2 (mkV "delimitar") ; mkV2 (mkV "demarcar") ; } ; --*
lin delimitation_N = variants {mkN "borda" ; mkN "delimitação" ; mkN "fronteira" ; mkN "limite" ; mkN "line" ; } ; --*
lin delineate_1_V2 = mkV2 (mkV "delinear") ; --*
lin delineate_2_V2 = mkV2 (mkV "especificar") ; --*
lin delineate_3_V2 = mkV2 (mkV "delinear") ; --*
lin delineate_4_V2 = variants {mkV2 (mkV "delinear") ; mkV2 (mkV "traçar") ; } ; --*
lin delineate_5_V2 = mkV2 (mkV "delinear") ; --*
lin delineation_1_N = variants {mkN "caracterização" ; mkN "caraterização" ; mkN "descrição" ; mkN "picture" ; } ; --*
lin delinquency_2_N = variants {mkN "deliquência" ; mkN "neglect" ; mkN "negligência" ; } ; --*
lin delinquency_3_N = variants {mkN "Delinquência" ; mkN "delinquency" ; } ; --*
lin delinquent_2_A = mkA "negligente" ; --*
lin delinquent_3_A = mkA "que" ; --*
lin delinquent_N = variants {mkN "delinquent" ; mkN "delinquente" ; } ; --*
lin delirious_1_A = mkA "delirante" ; --*
lin delirious_2_A = variants {mkA "delirante" ; mkA "frenético" ; } ; --*
lin delirium_1_N = variants {mkN "delírio" ; mkN "frenesi" ; mkN "loucura" ; } ; --*
lin delirium_2_N = mkN "delírio" ; --*
lin delirium_tremens_N = variants {mkN "delirium" ; mkN "tremens" ; } ; --*
lin deliver_10_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "render-se") ; mkV2 (mkV "up") ; } ; --*
lin deliver_12_V2 = variants {mkV2 (mkV "birth") ; mkV2 (mkV "dar") ; mkV2 (mkV "parir") ; mkV2 (mkV "ter") ; } ; --*
lin deliver_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "presentar") ; mkV2 (mkV "pronunciar") ; } ; --*
lin deliver_2_V = variants {mkV "entregar" ; mkV "remeter" ; } ; --*
lin deliver_3_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "in") ; mkV2 (mkV "livrar") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin deliver_4_V2 = variants {mkV2 (mkV "resgatar") ; mkV2 (mkV "salvar") ; } ; --*
lin deliver_4_V = variants {mkV "resgatar" ; mkV "salvar" ; } ; --*
lin deliver_5_V2 = variants {mkV2 (mkV "deportar") ; mkV2 (mkV "extraditar") ; } ; --*
lin deliver_8_V2 = mkV2 (mkV "redimir") ; --*
lin deliver_8_V = mkV "redimir" ; --*
lin deliver_9_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "home") ; } ; --*
lin deliverable_N = mkN "que" ; --*
lin deliverance_N = variants {mkN "salvação" ; mkN "salvamento" ; } ; --*
lin deliverer_1_N = variants {mkN "Christ" ; mkN "Cristo" ; mkN "Jesus" ; mkN "Nazarene" ; mkN "of" ; mkN "Shepherd" ; } ; --*
lin deliverer_2_N = mkN "salvador" ; --*
lin deliverer_3_N = variants {mkN "boy" ; mkN "entregador" ; } ; --*
lin delivery_1_N = mkN "entrega" ; --*
lin delivery_3_N = variants {mkN "fala" ; mkN "of" ; } ; --*
lin delivery_5_N = mkN "arremesso" ; --*
lin delivery_6_N = variants {mkN "salvação" ; mkN "salvamento" ; } ; --*
lin delivery_7_N = variants {mkN "delivery" ; mkN "parto" ; } ; --*
lin deliveryman_N = variants {mkN "boy" ; mkN "entregador" ; } ; --*
lin delphic_1_A = variants {mkA "délfico" ; mkA "delfiniano" ; } ; --*
lin delta_1_N = variants {mkN "delta" ; mkN "deltas" ; } ; --*
lin delta_3_N = variants {mkN "delta" ; mkN "deltas" ; mkN "Δ" ; } ; --*
lin deltoid_A = mkA "deltóide" ; --*
lin deltoid_N = variants {mkN "deltóide" ; mkN "deltoideus" ; mkN "muscle" ; } ; --*
lin delude_V2 = variants {mkV2 (mkV "enganar") ; mkV2 (mkV "iludir") ; mkV2 (mkV "lograr") ; mkV2 (mkV "on") ; } ; --*
lin deluge_1_N = mkN "dilúvio" ; --*
lin deluge_1_V2 = variants {mkV2 (mkV "alagar") ; mkV2 (mkV "encharcar") ; mkV2 (mkV "inundar") ; } ; --*
lin deluge_2_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin deluge_3_N = variants {mkN "aluvião" ; mkN "cheia" ; mkN "dilúvio" ; mkN "enchente" ; mkN "inundação" ; mkN "temporal" ; } ; --*
lin deluge_3_V2 = mkV2 (mkV "inundar") ; --*
lin delusion_3_N = variants {mkN "delírio" ; mkN "game" ; mkN "ilusão" ; } ; --*
lin delusional_A = variants {mkA "delirante" ; mkA "enganador" ; mkA "enganoso" ; mkA "fantasioso" ; mkA "ilusório" ; } ; --*
lin deluxe_1_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin deluxe_2_A = variants {mkA "luxe" ; mkA "luxuoso" ; mkA "luxuriante" ; } ; --*
lin de_luxe_A = variants {mkA "luxe" ; mkA "luxuoso" ; mkA "luxuriante" ; } ; --*
lin delve_V2 = variants {mkV2 (mkV "cavar") ; mkV2 (mkV "into") ; mkV2 (mkV "over") ; } ; --*
lin delve_V = variants {mkV "cavar" ; mkV "into" ; mkV "over" ; } ; --*
lin demagnetization_1_N = mkN "desmagnetização" ; --*
lin demagnetize_1_V2 = mkV2 (mkV "desmagnetizar") ; --*
lin demagnetize_2_V2 = mkV2 (mkV "desmagnetizar") ; --*
lin demagogic_1_A = mkA "demagógico" ; --*
lin demagogue_1_N = mkN "demagogo" ; --*
lin demagoguery_N = variants {mkN "demagogia" ; mkN "Demagogia" ; } ; --*
lin demagogy_N = variants {mkN "demagogia" ; mkN "Demagogia" ; } ; --*
lin demand_1_N = mkN "demanda" ; --*
lin demand_1_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "exigir") ; } ; --*
lin demand_2_N = variants {mkN "demanda" ; mkN "pedido" ; } ; --*
lin demand_2_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin demand_3_N = variants {mkN "exigência" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin demand_3_V2 = mkV2 (mkV "exigir") ; --*
lin demand_4_N = variants {mkN "demanda" ; mkN "procura" ; } ; --*
lin demand_5_N = variants {mkN "carência" ; mkN "necessidade" ; } ; --*
lin demand_6_V2 = mkV2 (mkV "pedir") ; --*
lin demander_N = mkN "demandante" ; --*
lin demarcate_1_V2 = mkV2 (mkV "demarcar") ; --*
lin demarcate_2_V2 = variants {mkV2 (mkV "delimitar") ; mkV2 (mkV "demarcar") ; } ; --*
lin demarcation_1_N = variants {mkN "fronteira" ; mkN "limite" ; mkN "line" ; } ; --*
lin demarcation_2_N = variants {mkN "demarcaçao" ; mkN "demarcação" ; mkN "line" ; } ; --*
lin demeaning_A = mkA "degradante" ; --*
lin demeanor_N = variants {mkN "comportamento" ; mkN "conduta" ; mkN "maneira" ; mkN "procedimento" ; } ; --*
lin demeanour_N = variants {mkN "comportamento" ; mkN "conduta" ; mkN "maneira" ; mkN "procedimento" ; } ; --*
lin demean_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin demented_A = mkA "louco" ; --*
lin dementia_N = variants {mkN "demência" ; mkN "insanidade" ; } ; --*
lin demesne_1_N = variants {mkN "estate" ; mkN "fazenda" ; } ; --*
lin demesne_2_N = mkN "domínio" ; --*
lin demigod_1_N = variants {mkN "semideus" ; mkN "super-homem" ; } ; --*
lin demigod_2_N = variants {mkN "deus" ; mkN "semideus" ; } ; --*
lin demijohn_N = mkN "garrafão" ; --*
lin demilitarize_2_V2 = mkV2 (mkV "desarmar") ; --*
lin demineralization_1_N = mkN "desmineralização" ; --*
lin demise_N = variants {mkN "fim" ; mkN "morte" ; mkN "queda" ; } ; --*
lin demobilization_1_N = mkN "desmobilização" ; --*
lin demobilize_1_V2 = variants {mkV2 (mkV "inactivar") ; mkV2 (mkV "inativar") ; } ; --*
lin demobilize_2_V2 = mkV2 (mkV "desmobilizar") ; --*
lin demob_V2 = mkV2 (mkV "desmobilizar") ; --*
lin democracy_1_N = mkN "democracia" ; --*
lin democracy_2_N = variants {mkN "democracia" ; mkN "república" ; } ; --*
lin democracy_3_N = variants {mkN "democracia" ; mkN "rule" ; } ; --*
lin democrat_1_N = mkN "democrata" ; --*
lin democrat_2_N = mkN "democrata" ; --*
lin democratic_1_A = mkA "democrático" ; --*
lin democratic_2_A = mkA "democrático" ; --*
lin democratic_3_A = mkA "democrático" ; --*
lin democratization_1_N = mkN "democratização" ; --*
lin democratize_1_V2 = mkV2 (mkV "democratizar") ; --*
lin democratize_2_V2 = mkV2 (mkV "democratizar") ; --*
lin demodulation_N = mkN "Demodulação" ; --*
lin demographic_A = mkA "demográfico" ; --*
lin demography_N = variants {mkN "Demografia" ; mkN "ecologia" ; mkN "ecology" ; } ; --*
lin demolish_1_V2 = variants {mkV2 (mkV "destruir") ; mkV2 (mkV "pulverizar") ; } ; --*
lin demolish_3_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "consumir") ; mkV2 (mkV "devorar") ; mkV2 (mkV "through") ; } ; --*
lin demolish_4_V2 = variants {mkV2 (mkV "demolir") ; mkV2 (mkV "destruir") ; } ; --*
lin demolition_1_N = variants {mkN "demolição" ; mkN "desolação" ; mkN "destruição" ; } ; --*
lin demolition_2_N = variants {mkN "demolição" ; mkN "escombro" ; } ; --*
lin demon_1_N = variants {mkN "cão" ; mkN "capeta" ; mkN "demo" ; mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; } ; --*
lin demon_2_N = variants {mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; mkN "monstro" ; mkN "ogro" ; } ; --*
lin demo_N = variants {mkN "demo" ; mkN "demonstração" ; mkN "software" ; } ; --*
lin demonic_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin demonstrability_N = mkN "demonstrabilidade" ; --*
lin demonstrable_1_A = mkA "demonstrável" ; --*
lin demonstrable_2_A = mkA "demonstrável" ; --*
lin demonstrate_1_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "mostrar") ; } ; --*
lin demonstrate_2_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "validar") ; } ; --*
lin demonstrate_3_V2 = variants {mkV2 (mkV "certificar") ; mkV2 (mkV "demonstrar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "provar") ; } ; --*
lin demonstrate_4_V = mkV "manifestar-se" ; --*
lin demonstration_1_N = variants {mkN "apresentação" ; mkN "demonstração" ; } ; --*
lin demonstration_3_N = mkN "manifestação" ; --*
lin demonstration_5_N = variants {mkN "demo" ; mkN "demonstração" ; mkN "software" ; } ; --*
lin demonstrative_1_A = variants {mkA "demonstrativo" ; mkA "expressivo" ; } ; --*
lin demonstrative_2_A = mkA "demonstrativo" ; --*
lin demonstrator_1_N = mkN "demonstrador" ; --*
lin demonstrator_2_N = variants {mkN "demonstrator" ; mkN "representante" ; } ; --*
lin demonstrator_3_N = mkN "manifestante" ; --*
lin demoralization_1_N = mkN "desmoralização" ; --*
lin demoralize_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin demoralize_2_V2 = variants {mkV2 (mkV "dejectar") ; mkV2 (mkV "dejetar") ; mkV2 (mkV "deprimir") ; mkV2 (mkV "desanimar") ; mkV2 (mkV "desmoralizar") ; mkV2 (mkV "down") ; } ; --*
lin demoralize_3_V2 = mkV2 (mkV "desmoralizar") ; --*
lin demote_V2 = variants {mkV2 (mkV "demover") ; mkV2 (mkV "despromover") ; mkV2 (mkV "downstairs") ; mkV2 (mkV "relegar") ; } ; --*
lin den_1_N = variants {mkN "antro" ; mkN "covil" ; mkN "toca" ; } ; --*
lin den_2_N = mkN "esconderijo" ; --*
lin den_4_N = variants {mkN "gabinete" ; mkN "sala" ; } ; --*
lin denary_1_A = mkA "denário" ; --*
lin denary_2_A = mkA "decimal" ; --*
lin denationalization_1_N = mkN "privatização" ; --*
lin denationalize_1_V2 = mkV2 (mkV "privatizar") ; --*
lin denazification_1_N = mkN "Desnazificação" ; --*
lin dendrite_N = variants {mkN "dendrite" ; mkN "dendrito" ; } ; --*
lin dendritic_A = mkA "dendrítico" ; --*
lin dengue_N = variants {mkN "Dengue" ; mkN "fever" ; } ; --*
lin deniable_A = variants {mkA "negável" ; mkA "que" ; } ; --*
lin denial_1_N = mkN "negação" ; --*
lin denial_2_N = mkN "negação" ; --*
lin denial_3_N = mkN "negação" ; --*
lin denial_4_N = mkN "abnegação" ; --*
lin denigrate_1_V2 = variants {mkV2 (mkV "denegrir") ; mkV2 (mkV "depreciar") ; mkV2 (mkV "minimizar") ; } ; --*
lin denigrate_2_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin denigration_2_N = variants {mkN "calúnia" ; mkN "difamação" ; } ; --*
lin denim_1_N = variants {mkN "jean" ; mkN "jeans" ; } ; --*
lin denim_2_N = mkN "Denim" ; --*
lin denizen_1_N = variants {mkN "habitante" ; mkN "morador" ; } ; --*
lin denmark_PN = variants {mkPN "Dinamarca" ; mkPN "of" ; } ; --*
lin denominate_V2 = variants {mkV2 (mkV "denominar") ; mkV2 (mkV "designar") ; } ; --*
lin denomination_3_N = variants {mkN "antenome" ; mkN "denominação" ; mkN "nome" ; mkN "prenome" ; mkN "primeiro" ; mkN "título" ; } ; --*
lin denominationalism_1_N = mkN "sectarismo" ; --*
lin denominationalism_2_N = mkN "Denominacionalismo" ; --*
lin denominator_N = mkN "denominador" ; --*
lin denotative_1_A = mkA "denotativo" ; --*
lin denotative_2_A = mkA "explícito" ; --*
lin denote_1_V2 = mkV2 (mkV "intencionar") ; --*
lin denote_2_V2 = variants {mkV2 (mkV "denotar") ; mkV2 (mkV "significar") ; } ; --*
lin denote_3_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "mostrar") ; } ; --*
lin denounce_1_V2 = variants {mkV2 (mkV "delatar") ; mkV2 (mkV "denunciar") ; } ; --*
lin denounce_2_V2 = variants {mkV2 (mkV "denunciar") ; mkV2 (mkV "estigmatizar") ; } ; --*
lin denounce_3_V2 = mkV2 (mkV "denunciar") ; --*
lin dense_1_A = mkA "denso" ; --*
lin dense_2_A = mkA "denso" ; --*
lin dense_4_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "fátuo" ; mkA "idiota" ; mkA "imbecil" ; } ; --*
lin denseness_2_N = variants {mkN "concentração" ; mkN "densidade" ; } ; --*
lin denseness_3_N = variants {mkN "concentração" ; mkN "densidade" ; mkN "Densidade" ; mkN "Massa" ; } ; --*
lin densitometry_N = mkN "densitometria" ; --*
lin density_1_N = variants {mkN "concentração" ; mkN "densidade" ; mkN "Densidade" ; mkN "Massa" ; } ; --*
lin density_2_N = variants {mkN "concentração" ; mkN "densidade" ; } ; --*
lin dent_1_N = mkN "mossa" ; --*
lin dent_3_N = mkN "amassado" ; --*
lin dental_1_A = mkA "dentário" ; --*
lin dental_2_A = mkA "dentário" ; --*
lin dentifrice_N = variants {mkN "creme" ; mkN "dentifrício" ; mkN "dentífrico" ; mkN "pasta" ; } ; --*
lin dentine_1_N = mkN "dentina" ; --*
lin dentine_2_N = mkN "dentina" ; --*
lin dentist_N = variants {mkN "dentista" ; mkN "doctor" ; mkN "practitioner" ; } ; --*
lin dentistry_N = variants {mkN "medicine" ; mkN "odontologia" ; mkN "Odontologia" ; } ; --*
lin dentition_2_N = variants {mkN "dentadura" ; mkN "dentama" ; mkN "dentição" ; } ; --*
lin denture_N = variants {mkN "dentadura" ; mkN "plate" ; } ; --*
lin dent_V2 = mkV2 (mkV "amassar") ; --*
lin denudation_N = mkN "denudação" ; --*
lin denude_1_V2 = mkV2 (mkV "desnudar") ; --*
lin denunciation_N = mkN "denúncia" ; --*
lin denver_PN = variants {mkPN "City" ; mkPN "Denver" ; mkPN "of" ; } ; --*
lin deny_1_V2 = variants {mkV2 (mkV "contradizer") ; mkV2 (mkV "declarar") ; mkV2 (mkV "negar") ; } ; --*
lin deny_2_V2 = variants {mkV2 (mkV "negar") ; mkV2 (mkV "recusar") ; } ; --*
lin deny_3_V2 = variants {mkV2 (mkV "denegar") ; mkV2 (mkV "negar") ; mkV2 (mkV "proibir") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin deny_3_V3 = variants {mkV3 (mkV "denegar") ; mkV3 (mkV "negar") ; mkV3 (mkV "proibir") ; mkV3 (mkV "recusar") ; mkV3 (mkV "rejeitar") ; } ; --*
lin deny_4_V3 = mkV3 (mkV "negar") ; --*
lin deodar_N = variants {mkN "cedar" ; mkN "Cedro" ; mkN "deodara" ; } ; --*
lin deodorant_1_N = variants {mkN "desodorante" ; mkN "desodorizante" ; } ; --*
lin deoxyadenosine_N = mkN "desoxiadenosina" ; --*
lin deoxycytidine_N = mkN "Citidina" ; --*
lin deoxyguanosine_N = mkN "Desoxiguanosina" ; --*
lin deoxyribose_N = mkN "desoxirribose" ; --*
lin deoxythymidine_N = mkN "timidina" ; --*
lin depart_1_V = variants {mkV "afastar" ; mkV "ausentar-se" ; mkV "away" ; mkV "ir-se" ; mkV "partir" ; } ; --*
lin depart_2_V = variants {mkV "desviar" ; mkV "variar" ; } ; --*
lin depart_3_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin depart_4_V = variants {mkV "deixar" ; mkV "leave" ; mkV "partir" ; mkV "sair" ; } ; --*
lin depart_5_V = variants {mkV "abandonar" ; mkV "partir" ; mkV "sair" ; mkV "up" ; } ; --*
lin depart_6_V = mkV "digressar" ; --*
lin departed_2_A = variants {mkA "falecido" ; mkA "morto" ; mkA "peace" ; mkA "rest" ; } ; --*
lin departed_N = variants {mkN "falecido" ; mkN "morte" ; mkN "person" ; mkN "soul" ; } ; --*
lin department_1_N = variants {mkN "departamento" ; mkN "Departamento" ; } ; --*
lin departure_1_N = variants {mkN "away" ; mkN "partida" ; } ; --*
lin departure_2_N = mkN "diferença" ; --*
lin departure_3_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin dependability_N = mkN "fiabilidade" ; --*
lin dependable_1_A = variants {mkA "confiável" ; mkA "de" ; mkA "digno" ; mkA "fiável" ; mkA "fidedigno" ; } ; --*
lin dependable_2_A = variants {mkA "confiável" ; mkA "digno" ; mkA "fiável" ; } ; --*
lin dependable_4_A = mkA "digno" ; --*
lin dependence_1_N = variants {mkN "dependência" ; mkN "território" ; } ; --*
lin dependence_2_N = mkN "dependência" ; --*
lin dependency_1_N = variants {mkN "dependência" ; mkN "território" ; } ; --*
lin dependency_2_N = mkN "dependência" ; --*
lin dependency_3_N = variants {mkN "colónia" ; mkN "colônia" ; mkN "Colônia" ; } ; --*
lin dependent_1_A = mkA "dependente" ; --*
lin dependent_2_A = mkA "dependente" ; --*
lin dependent_4_A = mkA "suspenso" ; --*
lin dependent_5_A = mkA "súdito" ; --*
lin dependent_6_A = mkA "dependente" ; --*
lin depend_on_1_V2 = mkV2 (mkV "depender") ; --*
lin depend_on_2_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin depend_V = mkV "depender" ; --*
lin depersonalization_1_N = variants {mkN "despersonalização" ; mkN "disorder" ; mkN "neurosis" ; } ; --*
lin depersonalization_3_N = variants {mkN "reificação" ; mkN "Reificação" ; } ; --*
lin depict_2_V2 = mkV2 (mkV "descrever") ; --*
lin depict_3_V2 = mkV2 (mkV "representar") ; --*
lin depiction_1_N = variants {mkN "caracterização" ; mkN "caraterização" ; mkN "descrição" ; mkN "picture" ; } ; --*
lin depigmentation_N = mkN "despigmentação" ; --*
lin depilation_2_N = mkN "depilação" ; --*
lin depilatory_A = mkA "depilatório" ; --*
lin deplete_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin depletion_1_N = variants {mkN "abatimento" ; mkN "depleção" ; mkN "diminuição" ; } ; --*
lin deplorable_1_A = variants {mkA "deplorável" ; mkA "lamentável" ; } ; --*
lin deplorable_2_A = variants {mkA "lamentável" ; mkA "miserável" ; } ; --*
lin deplorable_3_A = mkA "repreensível" ; --*
lin deplore_1_V2 = mkV2 (mkV "deplorar") ; --*
lin deplore_2_V2 = variants {mkV2 (mkV "lamentar") ; mkV2 (mkV "lastimar") ; mkV2 (mkV "queixar-se") ; } ; --*
lin deploy_1_V2 = mkV2 (mkV "alinhar") ; --*
lin deploy_1_V = mkV "alinhar" ; --*
lin deploy_2_V2 = variants {mkV2 (mkV "despregar") ; mkV2 (mkV "distribuir") ; } ; --*
lin depolarization_1_N = variants {mkN "despolarização" ; mkN "Despolarização" ; } ; --*
lin depopulate_V2 = mkV2 (mkV "despovoar") ; --*
lin deport_1_V2 = variants {mkV2 (mkV "comportar-se") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "resistir") ; } ; --*
lin deport_2_V2 = variants {mkV2 (mkV "deportar") ; mkV2 (mkV "extraditar") ; } ; --*
lin deport_3_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "degredar") ; mkV2 (mkV "deportar") ; mkV2 (mkV "desterrar") ; mkV2 (mkV "exilar") ; mkV2 (mkV "expatriar") ; mkV2 (mkV "expulsar") ; } ; --*
lin deportation_1_N = variants {mkN "deportação" ; mkN "exílio" ; } ; --*
lin deportation_2_N = mkN "deportação" ; --*
lin deportee_N = variants {mkN "exilado" ; mkN "proscrito" ; } ; --*
lin deportment_N = variants {mkN "comportamento" ; mkN "conduta" ; mkN "maneira" ; mkN "procedimento" ; } ; --*
lin depose_2_V2 = mkV2 (mkV "depor") ; --*
lin depose_2_V = mkV "depor" ; --*
lin deposit_1_N = variants {mkN "aluvião" ; mkN "sedimentação" ; } ; --*
lin deposit_1_V2 = mkV2 (mkV "colocar") ; --*
lin deposit_2_N = variants {mkN "depósito" ; mkN "sedimento" ; mkN "sedimentos" ; } ; --*
lin deposit_2_V2 = mkV2 (mkV "depositar") ; --*
lin deposit_3_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "situar") ; } ; --*
lin deposit_4_N = variants {mkN "deposit" ; mkN "depósito" ; } ; --*
lin deposit_5_N = variants {mkN "payment" ; mkN "sinal" ; } ; --*
lin deposit_9_N = variants {mkN "colocação" ; mkN "depósito" ; } ; --*
lin deposition_3_N = variants {mkN "colocação" ; mkN "depósito" ; } ; --*
lin deposition_4_N = mkN "deposição" ; --*
lin depositor_N = mkN "depositante" ; --*
lin depot_1_N = mkN "estação" ; --*
lin depot_2_N = variants {mkN "depósito" ; mkN "аrmazenagem" ; } ; --*
lin deprave_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin depravity_1_N = variants {mkN "corrupção" ; mkN "depravação" ; } ; --*
lin deprecate_1_V2 = variants {mkV2 (mkV "depreciar") ; mkV2 (mkV "desaprovar") ; } ; --*
lin deprecate_2_V2 = mkV2 (mkV "depreciar") ; --*
lin depreciate_1_V2 = mkV2 (mkV "depreciar") ; --*
lin depreciate_3_V = mkV "desvalorizar" ; --*
lin depreciation_1_N = mkN "desvalorização" ; --*
lin depreciation_2_N = variants {mkN "and" ; mkN "depreciação" ; } ; --*
lin depredation_1_N = mkN "depredação" ; --*
lin depredation_2_N = variants {mkN "depredação" ; mkN "devastação" ; } ; --*
lin depress_1_V2 = variants {mkV2 (mkV "dejectar") ; mkV2 (mkV "dejetar") ; mkV2 (mkV "deprimir") ; mkV2 (mkV "desanimar") ; mkV2 (mkV "desmoralizar") ; mkV2 (mkV "down") ; } ; --*
lin depress_3_V2 = variants {mkV2 (mkV "baixar") ; mkV2 (mkV "diminuir") ; } ; --*
lin depress_4_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "pressionar") ; } ; --*
lin depressed_2_A = variants {mkA "amolgado" ; mkA "deprimido" ; } ; --*
lin depressed_3_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin depressing_A = mkA "triste" ; --*
lin depression_1_N = mkN "depressão" ; --*
lin depression_2_N = variants {mkN "crisis" ; mkN "depressão" ; mkN "recessão" ; } ; --*
lin depression_3_N = variants {mkN "depressão" ; mkN "depression" ; } ; --*
lin depression_5_N = variants {mkN "Depression" ; mkN "Grande" ; } ; --*
lin depression_7_N = variants {mkN "depressão" ; mkN "depression" ; mkN "disorder" ; } ; --*
lin depression_8_N = mkN "impressão" ; --*
lin deprivation_1_N = variants {mkN "pobreza" ; mkN "privação" ; } ; --*
lin deprivation_2_N = variants {mkN "perda" ; mkN "prejuízo" ; mkN "privação" ; } ; --*
lin deprivation_3_N = mkN "privação" ; --*
lin deprive_1_V2 = mkV2 (mkV "privar") ; --*
lin deprive_2_V2 = mkV2 (mkV "privar") ; --*
lin deprive_3_V2 = mkV2 (mkV "privar") ; --*
lin depth_1_N = variants {mkN "fundura" ; mkN "profundeza" ; mkN "profundidade" ; } ; --*
lin depth_bomb_N = variants {mkN "bomb" ; mkN "charge" ; } ; --*
lin depth_charge_N = variants {mkN "bomb" ; mkN "charge" ; } ; --*
lin deputation_1_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "delegação" ; mkN "embaixada" ; mkN "missão" ; } ; --*
lin deputation_2_N = mkN "delegação" ; --*
lin depute_1_V2 = variants {mkV2 (mkV "delegar") ; mkV2 (mkV "deputar") ; } ; --*
lin depute_2_V2 = mkV2 (mkV "substituir") ; --*
lin depute_3_V2 = mkV2 (mkV "delegar") ; --*
lin deputize_1_V = variants {mkV "in" ; mkV "substituir" ; } ; --*
lin deputize_2_V = mkV "substituir" ; --*
lin deputy_2_N = variants {mkN "substituto" ; mkN "suplente" ; } ; --*
lin deputy_3_N = mkN "deputado" ; --*
lin deputy_4_N = variants {mkN "representante" ; mkN "substituto" ; } ; --*
lin derail_1_V2 = mkV2 (mkV "descarrilhar") ; --*
lin derail_2_V2 = variants {mkV2 (mkV "descarrilar") ; mkV2 (mkV "descarrilhar") ; } ; --*
lin derange_1_V2 = mkV2 (mkV "desarranjar") ; --*
lin derangement_1_N = variants {mkN "desarranjo" ; mkN "unsoundness" ; } ; --*
lin derangement_2_N = mkN "desarranjo" ; --*
lin derby_N = variants {mkN "chapéu-coco" ; mkN "hat" ; } ; --*
lin derby_PN = variants {mkPN "chapéu-coco" ; mkPN "hat" ; } ; --*
lin deregulate_V2 = variants {mkV2 (mkV "desregulamentar") ; mkV2 (mkV "desregular") ; } ; --*
lin deregulation_N = variants {mkN "desregulação" ; mkN "desregulamentação" ; mkN "Desregulamentação" ; } ; --*
lin derelict_2_A = variants {mkA "abandonado" ; mkA "derelito" ; mkA "derrelicto" ; mkA "derrelito" ; } ; --*
lin derelict_3_A = mkA "negligente" ; --*
lin derelict_4_A = variants {mkA "dilapidada" ; mkA "dilapidadas" ; mkA "dilapidado" ; mkA "dilapidados" ; mkA "malcuidada" ; mkA "malcuidado" ; } ; --*
lin dereliction_1_N = variants {mkN "deliquência" ; mkN "neglect" ; mkN "negligência" ; } ; --*
lin dereliction_2_N = mkN "negligência" ; --*
lin deride_V2 = variants {mkV2 (mkV "escarnecer") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "zombar") ; } ; --*
lin derision_1_N = mkN "ridicularização" ; --*
lin derisive_A = variants {mkA "escarnecedor" ; mkA "zombador" ; } ; --*
lin derisory_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin derivation_1_N = mkN "derivação" ; --*
lin derivation_2_N = mkN "derivação" ; --*
lin derivation_3_N = mkN "derivação" ; --*
lin derivation_4_N = mkN "derivação" ; --*
lin derivation_5_N = variants {mkN "ascendência" ; mkN "origem" ; } ; --*
lin derivation_7_N = mkN "derivação" ; --*
lin derivative_1_N = variants {mkN "coefficient" ; mkN "derivada" ; mkN "derivative" ; mkN "function" ; } ; --*
lin derivative_2_N = mkN "Derivado" ; --*
lin derivative_3_N = variants {mkN "derivativo" ; mkN "instrument" ; } ; --*
lin derivative_4_N = mkN "derivado" ; --*
lin derive_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "depreender") ; mkV2 (mkV "inferir") ; } ; --*
lin derive_1_V = variants {mkV "concluir" ; mkV "deduzir" ; mkV "depreender" ; mkV "inferir" ; } ; --*
lin derive_3_V = mkV "vir" ; --*
lin derive_4_V2 = mkV2 (mkV "derivar") ; --*
lin derive_5_V2 = variants {mkV2 (mkV "derivar") ; mkV2 (mkV "descender") ; mkV2 (mkV "provir") ; mkV2 (mkV "vir") ; } ; --*
lin derive_5_V = variants {mkV "derivar" ; mkV "descender" ; mkV "provir" ; mkV "vir" ; } ; --*
lin deriving_N = mkN "derivação" ; --*
lin dermal_1_A = variants {mkA "dérmico" ; mkA "epidérmico" ; } ; --*
lin dermal_2_A = variants {mkA "dérmico" ; mkA "epidérmico" ; } ; --*
lin dermal_3_A = mkA "cutâneo" ; --*
lin dermatitis_N = variants {mkN "dermatite" ; mkN "Dermatite" ; } ; --*
lin dermatologic_1_A = mkA "dermatológico" ; --*
lin dermatologistFem_N = variants {mkN "dermatologista" ; mkN "doctor" ; } ; --*
lin dermatologistMasc_N = variants {mkN "dermatologista" ; mkN "doctor" ; } ; --*
lin dermatology_N = variants {mkN "dermatologia" ; mkN "Dermatologia" ; } ; --*
lin dermatomycosis_N = mkN "dermatofitose" ; --*
lin dermatomyositis_N = variants {mkN "dermatomiosite" ; mkN "Dermatomiosite" ; } ; --*
lin dermis_1_N = variants {mkN "cútis" ; mkN "derme" ; mkN "Derme" ; } ; --*
lin derogate_V = variants {mkV "denegrir" ; mkV "depreciar" ; mkV "minimizar" ; } ; --*
lin derogative_A = mkA "depreciativo" ; --*
lin derogatory_A = mkA "depreciativo" ; --*
lin derrick_2_N = variants {mkN "Derrick" ; mkN "grou" ; } ; --*
lin dervish_N = mkN "dervixe" ; --*
lin desalinate_V2 = variants {mkV2 (mkV "dessalgar") ; mkV2 (mkV "dessalinizar") ; } ; --*
lin desalination_N = mkN "dessalinização" ; --*
lin desalinization_1_N = mkN "dessalinização" ; --*
lin desalinize_1_V2 = variants {mkV2 (mkV "dessalgar") ; mkV2 (mkV "dessalinizar") ; } ; --*
lin desalt_V2 = variants {mkV2 (mkV "dessalgar") ; mkV2 (mkV "dessalinizar") ; } ; --*
lin descant_1_N = mkN "Discantus" ; --*
lin descant_2_V = mkV "cantar" ; --*
lin descend_1_V = variants {mkV "cair" ; mkV "descer" ; mkV "down" ; } ; --*
lin descend_2_V2 = variants {mkV2 (mkV "derivar") ; mkV2 (mkV "descender") ; mkV2 (mkV "provir") ; mkV2 (mkV "vir") ; } ; --*
lin descend_3_V2 = variants {mkV2 (mkV "condescender") ; mkV2 (mkV "descer") ; } ; --*
lin descend_3_V = variants {mkV "condescender" ; mkV "descer" ; } ; --*
lin descend_4_V = variants {mkV "cair" ; mkV "descer" ; } ; --*
lin descendant_2_A = mkA "descendente" ; --*
lin descendants_N = mkN "posteridade" ; --*
lin descent_1_N = variants {mkN "descenso" ; mkN "descida" ; mkN "fallout" ; mkN "rebaixamento" ; } ; --*
lin descent_2_N = variants {mkN "extração" ; mkN "origem" ; } ; --*
lin descent_3_N = mkN "descensão" ; --*
lin descent_4_N = variants {mkN "descendência" ; mkN "linhagem" ; mkN "of" ; } ; --*
lin descent_5_N = variants {mkN "barranco" ; mkN "declínio" ; mkN "declividade" ; mkN "descida" ; } ; --*
lin descent_6_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin describe_1_V2 = mkV2 (mkV "descrever") ; --*
lin describe_2_V2 = variants {mkV2 (mkV "descrever") ; mkV2 (mkV "relatar") ; } ; --*
lin describe_3_V2 = variants {mkV2 (mkV "delinear") ; mkV2 (mkV "traçar") ; } ; --*
lin describe_4_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "out") ; } ; --*
lin describe_4_VS = variants {mkVS (mkV "identificar") ; mkVS (mkV "out") ; } ; --*
lin description_1_N = variants {mkN "descrição" ; mkN "description" ; } ; --*
lin description_2_N = mkN "descrição" ; --*
lin description_3_N = mkN "descrição" ; --*
lin descriptive_1_A = mkA "descritivo" ; --*
lin descriptive_2_A = mkA "descritivo" ; --*
lin descriptivism_2_N = mkN "descritivismo" ; --*
lin descriptor_1_N = variants {mkN "form" ; mkN "forma" ; } ; --*
lin descry_V2 = mkV2 (mkV "ver") ; --*
lin desecrate_1_V2 = variants {mkV2 (mkV "dessacralizar") ; mkV2 (mkV "profanar") ; mkV2 (mkV "violar") ; } ; --*
lin desecration_N = variants {mkN "blasfémia" ; mkN "blasfêmia" ; mkN "profanação" ; mkN "Profanação" ; mkN "sacrilégio" ; } ; --*
lin desegregate_V2 = mkV2 (mkV "integrar") ; --*
lin desegregation_N = mkN "integração" ; --*
lin desensitization_1_N = mkN "dessensibilização" ; --*
lin desensitize_2_V2 = mkV2 (mkV "dessensibilizar") ; --*
lin desert_1_N = variants {mkN "deserto" ; mkN "tapera" ; } ; --*
lin desert_1_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desamparar") ; mkV2 (mkV "desertar") ; } ; --*
lin desert_2_V2 = mkV2 (mkV "abandonar") ; --*
lin desert_3_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desertar") ; } ; --*
lin deserter_1_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin deserter_2_N = mkN "desertor" ; --*
lin desertification_N = variants {mkN "desertificação" ; mkN "Desertificação" ; } ; --*
lin desertion_1_N = mkN "deserção" ; --*
lin desertion_2_N = variants {mkN "abandono" ; mkN "desamparo" ; mkN "deserção" ; } ; --*
lin deserve_V2 = variants {mkV2 (mkV "merecer") ; mkV2 (mkV "valer") ; } ; --*
lin deservingness_N = variants {mkN "merecimento" ; mkN "mérito" ; } ; --*
lin desiccant_N = variants {mkN "agent" ; mkN "dessecante" ; } ; --*
lin desiccate_1_V2 = mkV2 (mkV "desidratar") ; --*
lin design_1_N = variants {mkN "desenho" ; mkN "projeto" ; } ; --*
lin design_1_V2 = variants {mkV2 (mkV "arquitetar") ; mkV2 (mkV "inventar") ; mkV2 (mkV "planear") ; mkV2 (mkV "planejar") ; mkV2 (mkV "projetar") ; } ; --*
lin design_2_N = variants {mkN "esquema" ; mkN "plano" ; } ; --*
lin design_2_V2 = variants {mkV2 (mkV "arquitetar") ; mkV2 (mkV "planejar") ; } ; --*
lin design_3_N = variants {mkN "desenho" ; mkN "esquema" ; mkN "figura" ; mkN "ilustração" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin design_3_V2 = variants {mkV2 (mkV "arquitetar") ; mkV2 (mkV "criar") ; } ; --*
lin design_4_N = mkN "ornamento" ; --*
lin design_4_V2 = variants {mkV2 (mkV "desenhar") ; mkV2 (mkV "esboçar") ; mkV2 (mkV "projetar") ; } ; --*
lin design_5_N = variants {mkN "finalidade" ; mkN "intenção" ; mkN "intento" ; mkN "objectivo" ; mkN "objetivo" ; mkN "propósito" ; } ; --*
lin design_5_V = variants {mkV "arquitetar" ; mkV "criar" ; mkV "desenhar" ; } ; --*
lin design_6_N = variants {mkN "desenho" ; mkN "design" ; } ; --*
lin design_6_V2 = mkV2 (mkV "inventar") ; --*
lin design_7_N = variants {mkN "concepção" ; mkN "inovação" ; mkN "invenção" ; } ; --*
lin design_7_V = variants {mkV "planejar" ; mkV "pretender" ; } ; --*
lin designate_1_V2 = variants {mkV2 (mkV "denominar") ; mkV2 (mkV "designar") ; } ; --*
lin designate_1_V2V = variants {mkV2V (mkV "denominar") ; mkV2V (mkV "designar") ; } ; --*
lin designate_1_V = variants {mkV "denominar" ; mkV "designar" ; } ; --*
lin designate_1_VS = variants {mkVS (mkV "denominar") ; mkVS (mkV "designar") ; } ; --*
lin designate_2_V2 = mkV2 (mkV "delegar") ; --*
lin designate_2_V2V = mkV2V (mkV "delegar") ; --*
lin designate_2_V = mkV "delegar" ; --*
lin designate_2_VS = mkVS (mkV "delegar") ; --*
lin designate_3_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "mostrar") ; } ; --*
lin designate_3_V = variants {mkV "apontar" ; mkV "indicar" ; mkV "mostrar" ; } ; --*
lin designate_4_V2 = variants {mkV2 (mkV "designar") ; mkV2 (mkV "destinar") ; } ; --*
lin designate_5_V2V = mkV2V (mkV "destinar") ; --*
lin designation_1_N = variants {mkN "antenome" ; mkN "denominação" ; mkN "nome" ; mkN "prenome" ; mkN "primeiro" ; mkN "título" ; } ; --*
lin designation_2_N = variants {mkN "designação" ; mkN "nomeação" ; } ; --*
lin designation_3_N = mkN "identificação" ; --*
lin designedly_Adv = variants {mkAdv "choice" ; mkAdv "deliberadamente" ; mkAdv "design" ; mkAdv "intencionalmente" ; mkAdv "nomeadamente" ; mkAdv "por" ; mkAdv "purpose" ; } ; --*
lin designer_1_N = variants {mkN "decorador" ; mkN "decorator" ; mkN "desenhador" ; mkN "designer" ; } ; --*
lin designer_2_N = variants {mkN "arquitecto" ; mkN "arquiteto" ; mkN "designer" ; } ; --*
lin designer_3_N = mkN "designer" ; --*
lin designer_4_N = mkN "cabeça" ; --*
lin designer_5_N = variants {mkN "costureiro" ; mkN "designer" ; } ; --*
lin designing_N = variants {mkN "desenho" ; mkN "projeto" ; } ; --*
lin desirable_1_A = mkA "desejável" ; --*
lin desirable_2_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "capaz" ; mkA "conveniente" ; mkA "desejável" ; } ; --*
lin desire_1_N = variants {mkN "anseio" ; mkN "apetite" ; mkN "desejo" ; mkN "pretensão" ; } ; --*
lin desire_1_V2 = variants {mkV2 (mkV "ansiar") ; mkV2 (mkV "desejar") ; mkV2 (mkV "querer") ; } ; --*
lin desire_2_N = mkN "desejo" ; --*
lin desire_2_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "esperançar") ; mkV2 (mkV "esperar") ; mkV2 (mkV "pretender") ; mkV2 (mkV "querer") ; } ; --*
lin desire_3_N = variants {mkN "desejo" ; mkN "deseo" ; } ; --*
lin desire_3_V2 = mkV2 (mkV "desejar") ; --*
lin desist_V = variants {mkV "abster" ; mkV "abster-se" ; mkV "privar" ; mkV "privar-se" ; } ; --*
lin desk_N = variants {mkN "escrivaninha" ; mkN "mesa" ; mkN "secretária" ; } ; --*
lin desolate_1_A = variants {mkA "árido" ; mkA "desolado" ; mkA "estéril" ; } ; --*
lin desolate_1_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desamparar") ; mkV2 (mkV "desertar") ; } ; --*
lin desolate_2_A = mkA "desolado" ; --*
lin desolate_2_V2 = mkV2 (mkV "despovoar") ; --*
lin desolate_3_V2 = variants {mkV2 (mkV "assolar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "devastar") ; mkV2 (mkV "waste") ; } ; --*
lin desolation_1_N = variants {mkN "desolação" ; mkN "devastação" ; } ; --*
lin desolation_2_N = mkN "desolação" ; --*
lin desolation_3_N = variants {mkN "Solidao" ; mkN "solidão" ; } ; --*
lin desolation_4_N = variants {mkN "desolação" ; mkN "devastação" ; } ; --*
lin desorption_N = mkN "dessorção" ; --*
lin despair_1_N = variants {mkN "desespero" ; mkN "perderaesperança" ; } ; --*
lin despair_2_N = mkN "desespero" ; --*
lin despairingly_Adv = mkAdv "desesperadamente" ; --*
lin despair_V = mkV "desesperar" ; --*
lin despatch_1_N = mkN "despacho" ; --*
lin despatch_4_N = variants {mkN "despacho" ; mkN "envio" ; mkN "expedição" ; } ; --*
lin despatch_V2 = variants {mkV2 (mkV "aviar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "off") ; } ; --*
lin desperado_N = variants {mkN "bandido" ; mkN "criminal" ; } ; --*
lin desperate_2_A = mkA "vital" ; --*
lin desperate_3_A = variants {mkA "desesperado(a)" ; mkA "desesperador" ; } ; --*
lin desperate_4_A = mkA "heróico" ; --*
lin desperate_5_A = mkA "desesperado" ; --*
lin desperate_6_A = mkA "adoentado" ; --*
lin desperation_1_N = variants {mkN "desespero" ; mkN "perderaesperança" ; } ; --*
lin despicable_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin despisal_N = mkN "desprezo" ; --*
lin despise_V2 = variants {mkV2 (mkV "desdenhar") ; mkV2 (mkV "desprezar") ; mkV2 (mkV "menosprezar") ; } ; --*
lin despite_1_N = variants {mkN "desdém" ; mkN "desprezo" ; mkN "escárnio" ; } ; --*
lin despiteful_A = variants {mkA "danoso" ; mkA "maldoso" ; mkA "malévolo" ; } ; --*
lin despoil_1_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin despondent_A = mkA "deprimido" ; --*
lin despotic_2_A = mkA "despótico" ; --*
lin despotic_3_A = variants {mkA "autocrático" ; mkA "ditatorial" ; } ; --*
lin despotism_1_N = variants {mkN "despotismo" ; mkN "Despotismo" ; } ; --*
lin despotism_2_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; mkN "rule" ; mkN "stalinismo" ; mkN "Stalinismo" ; } ; --*
lin despot_N = variants {mkN "autocrata" ; mkN "autócrata" ; mkN "déspota" ; mkN "ditador" ; mkN "tirano" ; } ; --*
lin desquamation_N = mkN "descamação" ; --*
lin dessert_N = mkN "sobremesa" ; --*
lin destalinization_3_N = mkN "desestalinização" ; --*
lin destination_1_N = mkN "destino" ; --*
lin destination_2_N = mkN "destino" ; --*
lin destination_3_N = variants {mkN "and" ; mkN "destino" ; } ; --*
lin destine_1_V2 = variants {mkV2 (mkV "designar") ; mkV2 (mkV "destinar") ; } ; --*
lin destine_2_V2V = mkV2V (mkV "destinar") ; --*
lin destiny_1_N = variants {mkN "destino" ; mkN "fado" ; mkN "sorte" ; } ; --*
lin destiny_2_N = mkN "destino" ; --*
lin destiny_3_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin destitute_1_A = mkA "indigente" ; --*
lin destitute_2_A = mkA "destituído" ; --*
lin destitution_N = mkN "destituição" ; --*
lin destroy_1_V2 = mkV2 (mkV "destruir") ; --*
lin destroy_2_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "destroçar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "detonar") ; mkV2 (mkV "estraçalhar") ; } ; --*
lin destroy_3_V2 = variants {mkV2 (mkV "demolir") ; mkV2 (mkV "destruir") ; } ; --*
lin destroyer_1_N = variants {mkN "contratorpedeiro" ; mkN "Contratorpedeiros" ; mkN "destróier" ; mkN "missile" ; } ; --*
lin destroyer_2_N = mkN "destruidor" ; --*
lin destructible_A = mkA "destrutível" ; --*
lin destruction_1_N = variants {mkN "destruição" ; mkN "devastação" ; } ; --*
lin destruction_2_N = variants {mkN "demolição" ; mkN "desolação" ; mkN "destruição" ; } ; --*
lin destruction_3_N = variants {mkN "destruição" ; mkN "morte" ; } ; --*
lin destructive_A = mkA "destrutivo" ; --*
lin desultory_A = mkA "incoerente" ; --*
lin detach_1_V2 = variants {mkV2 (mkV "destacar") ; mkV2 (mkV "desvincular") ; mkV2 (mkV "separar") ; } ; --*
lin detach_2_V2 = variants {mkV2 (mkV "desanexar") ; mkV2 (mkV "separar") ; } ; --*
lin detach_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; mkV2 (mkV "separar") ; } ; --*
lin detachable_A = variants {mkA "destacável" ; mkA "removível" ; } ; --*
lin detachment_1_N = variants {mkN "desapego" ; mkN "distância" ; } ; --*
lin detachment_3_N = variants {mkN "isolação" ; mkN "isolamento" ; } ; --*
lin detachment_4_N = mkN "destacamento" ; --*
lin detachment_5_N = mkN "dispersão" ; --*
lin detail_1_N = mkN "detalhe" ; --*
lin detail_1_V2 = variants {mkV2 (mkV "detalhar") ; mkV2 (mkV "pormenorizar") ; } ; --*
lin detail_2_N = variants {mkN "componente" ; mkN "elemento" ; } ; --*
lin detail_3_N = mkN "detalhe" ; --*
lin detailed_A = variants {mkA "circunstanciado" ; mkA "elaborada" ; mkA "elaborado" ; mkA "minucioso" ; mkA "pormenorizado" ; } ; --*
lin detain_1_V2 = variants {mkV2 (mkV "confinar") ; mkV2 (mkV "deter") ; mkV2 (mkV "prender") ; } ; --*
lin detain_2_V2 = mkV2 (mkV "atrasar") ; --*
lin detain_3_V2 = variants {mkV2 (mkV "atrasar") ; mkV2 (mkV "up") ; } ; --*
lin detainee_N = variants {mkN "detainee" ; mkN "detido" ; } ; --*
lin detectable_2_A = mkA "detectável" ; --*
lin detection_1_N = mkN "detecção" ; --*
lin detection_2_N = mkN "detecção" ; --*
lin detection_3_N = variants {mkN "detecção" ; mkN "detection" ; } ; --*
lin detective_1_N = variants {mkN "detective" ; mkN "detetive" ; } ; --*
lin detective_2_N = mkN "detetive" ; --*
lin detector_1_N = variants {mkN "element" ; mkN "sensor" ; } ; --*
lin detector_3_N = mkN "detector" ; --*
lin detect_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "detectar") ; mkV2 (mkV "ver") ; } ; --*
lin detention_1_N = variants {mkN "custódia" ; mkN "detenção" ; } ; --*
lin detention_2_N = variants {mkN "detenção" ; mkN "prisão" ; } ; --*
lin deter_1_V2 = mkV2 (mkV "desanimar") ; --*
lin deter_2_V2 = mkV2 (mkV "dissuadir") ; --*
lin detergent_1_N = mkN "detergentes" ; --*
lin detergent_2_N = variants {mkN "detergente" ; mkN "detergentes" ; mkN "Produtos" ; } ; --*
lin deteriorate_1_V = mkV "deteriorar" ; --*
lin deteriorate_2_V = variants {mkV "degenerar" ; mkV "degradar" ; mkV "deteriorar" ; mkV "piorar" ; } ; --*
lin deterioration_1_N = mkN "piora" ; --*
lin deterioration_2_N = variants {mkN "deterioração" ; mkN "in" ; } ; --*
lin determinable_A = mkA "determinável" ; --*
lin determinant_1_N = variants {mkN "condicionante" ; mkN "factor" ; } ; --*
lin determinant_2_N = variants {mkN "determinant" ; mkN "Epitopo" ; mkN "epítopo" ; } ; --*
lin determinant_3_N = mkN "determinante" ; --*
lin determinant_A = variants {mkA "decisivo" ; mkA "determinante" ; } ; --*
lin determinate_3_A = variants {mkA "decisivo" ; mkA "definitivo" ; } ; --*
lin determination_1_N = mkN "achado" ; --*
lin determination_2_N = variants {mkN "determinação" ; mkN "resolução" ; } ; --*
lin determination_3_N = variants {mkN "decisão" ; mkN "determinação" ; mkN "resolução" ; mkN "resoluções" ; } ; --*
lin determination_5_N = variants {mkN "decisão" ; mkN "resolução" ; } ; --*
lin determinative_2_N = variants {mkN "condicionante" ; mkN "factor" ; } ; --*
lin determinative_A = variants {mkA "decisivo" ; mkA "determinante" ; } ; --*
lin determine_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "determinar") ; mkV2 (mkV "out") ; } ; --*
lin determine_2_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "influenciar") ; mkV2 (mkV "moldar") ; } ; --*
lin determine_3_V2 = mkV2 (mkV "determinar") ; --*
lin determine_4_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "especificar") ; } ; --*
lin determine_5_V = variants {mkV "decidir" ; mkV "resolver" ; mkV "up" ; } ; --*
lin determine_5_VS = variants {mkVS (mkV "decidir") ; mkVS (mkV "resolver") ; mkVS (mkV "up") ; } ; --*
lin determine_5_VV = variants {mkVV (mkV "decidir") ; mkVV (mkV "resolver") ; mkVV (mkV "up") ; } ; --*
lin determine_6_V2 = mkV2 (mkV "determinar") ; --*
lin determine_7_V2 = variants {mkV2 (mkV "decidir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin determine_8_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin determined_1_A = mkA "determinado" ; --*
lin determined_5_A = mkA "compulsivo" ; --*
lin determiner_3_N = variants {mkN "condicionante" ; mkN "factor" ; } ; --*
lin determinism_N = mkN "determinismo" ; --*
lin deterrence_1_N = mkN "desincentivo" ; --*
lin deterrent_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin detestable_1_A = variants {mkA "abominoso" ; mkA "aborrecivel" ; mkA "repugnante" ; } ; --*
lin detestable_2_A = variants {mkA "abominável" ; mkA "detestável" ; mkA "Detestável" ; mkA "execrável" ; mkA "odioso" ; } ; --*
lin detestation_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "detestação" ; mkN "execração" ; mkN "horror" ; mkN "ódio" ; mkN "repugnância" ; mkN "repulsa" ; mkN "repulsão" ; } ; --*
lin detest_V2 = variants {mkV2 (mkV "detestar") ; mkV2 (mkV "odiar") ; } ; --*
lin dethronement_N = mkN "deposição" ; --*
lin detonate_1_V = variants {mkV "detonar" ; mkV "off" ; mkV "up" ; } ; --*
lin detonate_2_V = variants {mkV "detonar" ; mkV "up" ; } ; --*
lin detonation_1_N = mkN "explosão" ; --*
lin detonation_2_N = mkN "detonação" ; --*
lin detonator_N = variants {mkN "detonador" ; mkN "device" ; } ; --*
lin detour_N = variants {mkN "desvio" ; mkN "way" ; } ; --*
lin detoxification_1_N = mkN "desintoxicação" ; --*
lin detoxification_2_N = variants {mkN "desintoxicação" ; mkN "Desintoxicação" ; } ; --*
lin detrimental_to_A2 = variants {mkA2 (mkA "danoso") noPrep ; mkA2 (mkA "prejudicial") noPrep ; } ; --*
lin detriment_N = variants {mkN "detrimento" ; mkN "prejuízo" ; } ; --*
lin detritus_1_N = variants {mkN "destroços" ; mkN "entulho" ; mkN "escombros" ; mkN "restos" ; mkN "ruínas" ; } ; --*
lin detritus_2_N = mkN "Detrito" ; --*
lin detroit_PN = variants {mkPN "City" ; mkPN "Detroit" ; } ; --*
lin deuce_1_N = mkN "iguais" ; --*
lin deuce_2_N = variants {mkN "dois" ; mkN "Dois" ; mkN "duas" ; } ; --*
lin deuce_3_N = variants {mkN "demônio" ; mkN "diabos" ; mkN "mas" ; } ; --*
lin deuce_4_N = mkN "dois" ; --*
lin deuced_A = variants {mkA "amaldiçoado" ; mkA "condenado" ; mkA "maldito" ; } ; --*
lin deuterium_N = variants {mkN "Deuterio" ; mkN "hydrogen" ; } ; --*
lin deutschmark_N = variants {mkN "Marco" ; mkN "mark" ; mkN "Mark" ; } ; --*
lin devaluate_1_V2 = mkV2 (mkV "desvalorizar") ; --*
lin devaluate_2_V2 = mkV2 (mkV "desvalorizar") ; --*
lin devaluation_1_N = mkN "devaliação" ; --*
lin devaluation_2_N = variants {mkN "desvalorização" ; mkN "devaliação" ; } ; --*
lin devalue_1_V2 = mkV2 (mkV "desvalorizar") ; --*
lin devalue_2_V2 = mkV2 (mkV "desvalorizar") ; --*
lin devalue_3_V2 = mkV2 (mkV "desvalorizar") ; --*
lin devastate_1_V2 = variants {mkV2 (mkV "assolar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "devastar") ; mkV2 (mkV "waste") ; } ; --*
lin devastation_1_N = variants {mkN "desolação" ; mkN "devastação" ; } ; --*
lin devastation_3_N = variants {mkN "desolação" ; mkN "devastação" ; } ; --*
lin devastation_4_N = mkN "devastação" ; --*
lin devastation_5_N = variants {mkN "destruição" ; mkN "devastação" ; } ; --*
lin develop_10_V = variants {mkV "desenvolver" ; mkV "progredir" ; } ; --*
lin develop_11_V = mkV "modernizar" ; --*
lin develop_14_V = mkV "acontecer" ; --*
lin develop_15_V2 = mkV2 (mkV "revelar") ; --*
lin develop_1_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "desenvolver") ; mkV2 (mkV "fazer") ; } ; --*
lin develop_20_V = variants {mkV "acontecer" ; mkV "desenvolver" ; mkV "recrudescer" ; } ; --*
lin develop_2_V2 = variants {mkV2 (mkV "desenvolver") ; mkV2 (mkV "elaborar") ; } ; --*
lin develop_3_V2 = mkV2 (mkV "desenvolver") ; --*
lin develop_4_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "crescer") ; mkV2 (mkV "ganhar") ; } ; --*
lin develop_5_V = variants {mkV "originar-se" ; mkV "provir" ; mkV "surgir" ; mkV "up" ; } ; --*
lin develop_7_V2 = mkV2 (mkV "formular") ; --*
lin develop_8_V2 = variants {mkV2 (mkV "instruir") ; mkV2 (mkV "treinar") ; } ; --*
lin developer_1_N = variants {mkN "construtor" ; mkN "desenvolvedor" ; } ; --*
lin development_1_N = mkN "desenvolvimento" ; --*
lin development_2_N = mkN "evolução" ; --*
lin development_3_N = variants {mkN "crescimento" ; mkN "ontogénese" ; mkN "ontogenia" ; } ; --*
lin development_5_N = variants {mkN "desenvolvimento" ; mkN "exploração" ; } ; --*
lin deviant_1_A = mkA "aberrante" ; --*
lin deviant_1_N = mkN "pervertido" ; --*
lin deviate_1_V2 = mkV2 (mkV "desviar") ; --*
lin deviate_V = variants {mkV "desviar" ; mkV "variar" ; } ; --*
lin deviation_1_N = mkN "diferença" ; --*
lin deviation_3_N = mkN "erro" ; --*
lin deviation_4_N = variants {mkN "Comportamento" ; mkN "Sociologia" ; } ; --*
lin deviation_5_N = variants {mkN "digressão" ; mkN "Digressão" ; } ; --*
lin device_1_N = variants {mkN "aparato" ; mkN "aparelho" ; mkN "dispositivo" ; mkN "equipamento" ; mkN "ferramenta" ; mkN "instrumento" ; mkN "mecanismo" ; } ; --*
lin device_2_N = mkN "dispositivo" ; --*
lin device_3_N = variants {mkN "artimanha" ; mkN "truque" ; } ; --*
lin devil_1_N = variants {mkN "diabo" ; mkN "Lúcifer" ; mkN "Nick" ; mkN "of" ; mkN "Satanás" ; mkN "Tempter" ; } ; --*
lin devil_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin devil_2_N = variants {mkN "cão" ; mkN "capeta" ; mkN "demo" ; mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; } ; --*
lin devil_3_N = variants {mkN "demônio" ; mkN "diabos" ; mkN "mas" ; } ; --*
lin devil_5_N = variants {mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; mkN "monstro" ; mkN "ogro" ; } ; --*
lin devilish_1_A = mkA "diabólico" ; --*
lin devilry_1_N = mkN "maldade" ; --*
lin deviltry_1_N = mkN "maldade" ; --*
lin devious_2_A = mkA "desleal" ; --*
lin devise_1_V2 = variants {mkV2 (mkV "forjar") ; mkV2 (mkV "formular") ; mkV2 (mkV "inventar") ; } ; --*
lin devise_2_V2 = variants {mkV2 (mkV "confabular") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin devising_N = variants {mkN "fabricação" ; mkN "fabrico" ; } ; --*
lin devitalize_1_V2 = mkV2 (mkV "desvitalizar") ; --*
lin devoid_A = mkA "destituído" ; --*
lin devolution_2_N = mkN "devolução" ; --*
lin devolve_1_V2 = variants {mkV2 (mkV "delegar") ; mkV2 (mkV "passar") ; } ; --*
lin devolve_3_V2 = variants {mkV2 (mkV "degenerar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "deteriorar") ; mkV2 (mkV "piorar") ; } ; --*
lin devon_1_PN = mkPN "Devon" ; --*
lin devote_1_V2 = variants {mkV2 (mkV "comprometer") ; mkV2 (mkV "dedicar") ; } ; --*
lin devote_2_V2 = mkV2 (mkV "prestar") ; --*
lin devoted_A = mkA "devotado" ; --*
lin devoted_to_A2 = mkA2 (mkA "devotado") noPrep ; --*
lin devotee_N = mkN "amante" ; --*
lin devotion_3_N = variants {mkN "adorar" ; mkN "veneração" ; } ; --*
lin devour_3_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "consumir") ; mkV2 (mkV "devorar") ; mkV2 (mkV "through") ; } ; --*
lin devour_4_V2 = mkV2 (mkV "devorar") ; --*
lin devourer_N = mkN "devorador" ; --*
lin devout_1_A = variants {mkA "devoto" ; mkA "piedoso" ; } ; --*
lin devout_2_A = mkA "sincero" ; --*
lin devoutness_N = variants {mkN "devoção" ; mkN "religiosidade" ; } ; --*
lin devries_N = variants {mkN "De" ; mkN "deVries" ; mkN "Hugo" ; mkN "Vries" ; } ; --*
lin dew_N = variants {mkN "orvalho" ; mkN "riço" ; mkN "rocio" ; } ; --*
lin dexamethasone_N = variants {mkN "dexametasona" ; mkN "Intensol" ; } ; --*
lin dexterous_A = variants {mkA "hábil" ; mkA "jeitoso" ; } ; --*
lin dextrin_N = mkN "dextrina" ; --*
lin dextrocardia_N = mkN "Dextrocardia" ; --*
lin dextrorotary_1_A = mkA "dextrogiro" ; --*
lin dextrose_N = variants {mkN "dextrose" ; mkN "sugar" ; } ; --*
lin dextrous_A = variants {mkA "hábil" ; mkA "jeitoso" ; } ; --*
lin dg_PN = mkPN "decigrama" ; --*
lin dhow_N = mkN "dhows" ; --*
lin diabetes_N = variants {mkN "diabete" ; mkN "diabetes" ; } ; --*
lin diabetic_1_A = mkA "diabético" ; --*
lin diabetic_2_A = mkA "diabético" ; --*
lin diabolic_1_A = mkA "diabólico" ; --*
lin diabolic_2_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin diabolical_1_A = mkA "diabólico" ; --*
lin diabolical_2_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin diabolism_N = variants {mkN "satanismo" ; mkN "Satanismo" ; } ; --*
lin diachronic_A = variants {mkA "diacrónico" ; mkA "diacrônico" ; } ; --*
lin diacritic_N = variants {mkN "diacrítico" ; mkN "mark" ; } ; --*
lin diadem_N = variants {mkN "coroa" ; mkN "diadema" ; mkN "Diadema" ; } ; --*
lin diadromous_A = mkA "diádromo" ; --*
lin diaeresis_N = variants {mkN "diérese" ; mkN "trema" ; } ; --*
lin diagnosable_A = mkA "diagnosticável" ; --*
lin diagnose_1_V2 = mkV2 (mkV "diagnosticar") ; --*
lin diagnose_2_V2 = mkV2 (mkV "diagnosticar") ; --*
lin diagnosis_N = variants {mkN "diagnose" ; mkN "diagnóstico" ; } ; --*
lin diagnostic_1_A = mkA "diagnóstico" ; --*
lin diagnostic_2_A = mkA "sintomático" ; --*
lin diagnostician_N = mkN "patologista" ; --*
lin diagonal_1_A = mkA "diagonal" ; --*
lin diagonal_1_N = mkN "diagonal" ; --*
lin diagonal_2_A = variants {mkA "enviesado" ; mkA "esguelhado" ; mkA "oblíqua" ; } ; --*
lin diagonal_2_N = variants {mkN "diagonais" ; mkN "diagonal" ; } ; --*
lin diagonalizable_A = mkA "diagonalizável" ; --*
lin diagram_N = variants {mkN "diagrama" ; mkN "Diagrama" ; mkN "Diagramas" ; mkN "esquema" ; mkN "figura" ; mkN "imagem" ; mkN "plano" ; mkN "planta" ; } ; --*
lin dial_1_N = mkN "mostrador" ; --*
lin dial_1_V2 = mkV2 (mkV "discar") ; --*
lin dialectal_A = mkA "dialectal" ; --*
lin dialectic_1_N = variants {mkN "dialéctica" ; mkN "Dialetica" ; mkN "dialética" ; } ; --*
lin dialect_N = variants {mkN "dialecto" ; mkN "dialeto" ; mkN "Dialetos" ; mkN "idioma" ; mkN "língua" ; } ; --*
lin dialectology_N = mkN "dialetologia" ; --*
lin dialog_1_N = variants {mkN "conversa" ; mkN "conversação" ; mkN "diálogo" ; } ; --*
lin dialog_2_N = mkN "diálogo" ; --*
lin dialog_3_N = variants {mkN "diálogo" ; mkN "Diálogo" ; } ; --*
lin dialogue_1_N = variants {mkN "conversa" ; mkN "conversação" ; mkN "diálogo" ; } ; --*
lin dialogue_2_N = mkN "diálogo" ; --*
lin dialogue_3_N = variants {mkN "diálogo" ; mkN "Diálogo" ; } ; --*
lin dialogue_4_N = variants {mkN "conversa" ; mkN "negociação" ; mkN "tramitação" ; } ; --*
lin dialysis_N = mkN "diálise" ; --*
lin diamagnetic_A = mkA "diamagnético" ; --*
lin diamagnetism_N = mkN "diamagnetismo" ; --*
lin diamante_1_N = mkN "lantejoula" ; --*
lin diameter_1_N = variants {mkN "calibre" ; mkN "diâmetro" ; } ; --*
lin diameter_2_N = variants {mkN "Diamêtro" ; mkN "diâmetro" ; } ; --*
lin diamine_N = mkN "diamina" ; --*
lin diamond_1_N = mkN "diamante" ; --*
lin diamond_2_N = variants {mkN "adamantino" ; mkN "diamante" ; } ; --*
lin diamond_3_N = mkN "losango" ; --*
lin diamond_4_N = variants {mkN "diamante" ; mkN "ouros" ; } ; --*
lin diamond_5_N = variants {mkN "diamante" ; mkN "diamond" ; } ; --*
lin diana_1_PN = variants {mkPN "Diana" ; mkPN "of" ; mkPN "Princesa" ; } ; --*
lin diana_2_PN = mkPN "Diana" ; --*
lin diapedesis_N = mkN "diapedese" ; --*
lin diaper_1_N = variants {mkN "cueiro" ; mkN "fralda" ; } ; --*
lin diaphanous_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin diaphragm_1_N = mkN "diafragma" ; --*
lin diaphragm_2_N = variants {mkN "diafragma" ; mkN "membrana" ; } ; --*
lin diaphragm_3_N = variants {mkN "diafragma" ; mkN "diaphragm" ; } ; --*
lin diaphragm_4_N = mkN "diafragma" ; --*
lin diaphysis_N = mkN "diáfise" ; --*
lin diapir_N = variants {mkN "diapiro" ; mkN "Diápiro" ; } ; --*
lin diapsid_N = variants {mkN "Diapsida" ; mkN "reptile" ; } ; --*
lin diarchy_N = mkN "diarquia" ; --*
lin diarist_N = variants {mkN "jornalista" ; mkN "keeper" ; } ; --*
lin diarrhea_N = variants {mkN "diarreia" ; mkN "diarréia" ; mkN "of" ; } ; --*
lin diarrhoea_N = variants {mkN "diarreia" ; mkN "diarréia" ; mkN "of" ; } ; --*
lin diary_1_N = variants {mkN "diário" ; mkN "Diários" ; } ; --*
lin diaspora_2_N = variants {mkN "diáspora" ; mkN "Diáspora" ; mkN "Diásporas" ; } ; --*
lin diaspora_3_N = mkN "diáspora" ; --*
lin diastema_N = variants {mkN "diastema" ; mkN "Diastema" ; } ; --*
lin diastole_N = variants {mkN "diástole" ; mkN "Diástole" ; } ; --*
lin diastolic_A = mkA "diastólico" ; --*
lin diathesis_N = mkN "diátese" ; --*
lin diatom_N = variants {mkN "diatomácea" ; mkN "diatomáceas" ; } ; --*
lin diatribe_N = mkN "diatribe" ; --*
lin diazepam_N = variants {mkN "diazepam" ; mkN "Diazepam" ; } ; --*
lin dice_2_V2 = mkV2 (mkV "jogar") ; --*
lin dice_2_V = mkV "jogar" ; --*
lin dice_N = mkN "dado" ; --*
lin dicey_A = mkA "incerto" ; --*
lin dichlorodiphenyltrichloroethane_N = variants {mkN "Ddt" ; mkN "DDT" ; mkN "diclorodifeniltricloretano" ; } ; --*
lin dichotomy_N = variants {mkN "dicotomia" ; mkN "dualidade" ; } ; --*
lin dichromacy_1_N = mkN "Dicromatismo" ; --*
lin dichromatic_2_A = mkA "bicolor" ; --*
lin dick_2_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin dick_2_PN = variants {mkPN "cacete" ; mkPN "caralho" ; mkPN "jeba" ; mkPN "pau" ; mkPN "pénis" ; mkPN "pica" ; mkPN "picha" ; mkPN "pinto" ; mkPN "piroca" ; mkPN "rola" ; mkPN "vara" ; mkPN "verga" ; } ; --*
lin dickens_1_N = variants {mkN "demônio" ; mkN "diabos" ; mkN "mas" ; } ; --*
lin dickens_2_N = variants {mkN "Charles" ; mkN "Dickens" ; mkN "John" ; } ; --*
lin dicker_V = variants {mkV "pechinchar" ; mkV "regatear" ; } ; --*
lin dicloxacillin_N = mkN "Dicloxacilina" ; --*
lin dicot_N = variants {mkN "Dicotiledonea" ; mkN "dicotiledónea" ; mkN "Dicotiledônea" ; } ; --*
lin dictaphone_N = mkN "Ditafone" ; --*
lin dictate_1_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "ditar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "prescrever") ; mkV2 (mkV "receitar") ; } ; --*
lin dictate_2_N = variants {mkN "ditado" ; mkN "ditame" ; } ; --*
lin dictate_2_V2 = mkV2 (mkV "ditar") ; --*
lin dictate_3_V2 = mkV2 (mkV "ditar") ; --*
lin dictate_3_V = mkV "ditar" ; --*
lin dictate_3_VS = mkVS (mkV "ditar") ; --*
lin dictation_1_N = variants {mkN "Comando" ; mkN "ordem" ; } ; --*
lin dictator_2_N = variants {mkN "autocrata" ; mkN "autócrata" ; mkN "ditador" ; } ; --*
lin dictator_3_N = mkN "ditador" ; --*
lin dictatorial_1_A = mkA "ditatorial" ; --*
lin dictatorial_2_A = variants {mkA "autoritário" ; mkA "ditatorial" ; } ; --*
lin dictatorial_3_A = variants {mkA "autocrático" ; mkA "ditatorial" ; } ; --*
lin dictatorship_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; mkN "rule" ; mkN "stalinismo" ; mkN "Stalinismo" ; } ; --*
lin diction_1_N = mkN "dicção" ; --*
lin diction_2_N = variants {mkN "dicção" ; mkN "Dicção" ; mkN "fraseologia" ; mkN "of" ; } ; --*
lin dictionary_N = variants {mkN "array" ; mkN "Dicionario" ; mkN "dicionário" ; mkN "Dicionários" ; mkN "léxico" ; mkN "vocabulário" ; } ; --*
lin dictum_2_N = variants {mkN "dictum" ; mkN "obiter" ; } ; --*
lin dicynodont_N = mkN "Dicynodontia" ; --*
lin didactic_1_A = variants {mkA "didáctico" ; mkA "didática" ; mkA "didático" ; } ; --*
lin diddle_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin diddle_2_V2 = mkV2 (mkV "brincar") ; --*
lin die_10_V = variants {mkV "falecer" ; mkV "morrer" ; } ; --*
lin die_1_N = mkN "dado" ; --*
lin die_1_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin die_2_N = mkN "dado" ; --*
lin die_3_V = mkV "morrer" ; --*
lin die_4_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin die_5_V = mkV "morrer" ; --*
lin die_6_V = mkV "morrer" ; --*
lin die_9_V = variants {mkV "ficar" ; mkV "flat" ; } ; --*
lin die_away_V = variants {mkV "abater" ; mkV "amainar" ; mkV "away" ; mkV "enfraquecer" ; mkV "off" ; mkV "up" ; } ; --*
lin dieresis_N = variants {mkN "diérese" ; mkN "trema" ; } ; --*
lin diesel_1_N = variants {mkN "Christian" ; mkN "Diesel" ; mkN "Rudolf" ; } ; --*
lin diesel_2_N = variants {mkN "diesel" ; mkN "engine" ; mkN "motor" ; mkN "Motor" ; mkN "motores" ; } ; --*
lin diet_1_N = variants {mkN "dieta" ; mkN "Dieta" ; mkN "Dietas" ; } ; --*
lin diet_2_V2 = variants {mkV2 (mkV "estar") ; mkV2 (mkV "fazer") ; } ; --*
lin diet_2_V = variants {mkV "estar" ; mkV "fazer" ; } ; --*
lin diet_4_N = mkN "dieta" ; --*
lin dietary_A = mkA "dietético" ; --*
lin dietary_N = mkN "dieta" ; --*
lin dietician_N = mkN "dietista" ; --*
lin dietitian_N = mkN "dietista" ; --*
lin differ_1_V = mkV "ser" ; --*
lin differ_2_V = variants {mkV "diferir" ; mkV "discordar" ; mkV "divergir" ; mkV "issue" ; } ; --*
lin difference_1_N = variants {mkN "diferença" ; mkN "discordância" ; } ; --*
lin difference_2_N = mkN "diferença" ; --*
lin difference_3_N = variants {mkN "controvérsia" ; mkN "discordância" ; mkN "disputa" ; mkN "of" ; mkN "querela" ; } ; --*
lin difference_4_N = mkN "diferença" ; --*
lin difference_5_N = mkN "diferença" ; --*
lin different_1_A = mkA "diferente" ; --*
lin different_2_A = variants {mkA "diferente" ; mkA "díspar" ; mkA "outro" ; } ; --*
lin different_3_A = mkA "diferente" ; --*
lin different_4_A = mkA "diferente" ; --*
lin differentiable_1_A = mkA "diferenciável" ; --*
lin differentiable_2_A = mkA "diferenciável" ; --*
lin differential_1_A = mkA "diferencial" ; --*
lin differential_1_N = variants {mkN "coefficient" ; mkN "derivada" ; mkN "derivative" ; mkN "function" ; } ; --*
lin differential_2_A = mkA "diferencial" ; --*
lin differential_2_N = mkN "diferencial" ; --*
lin differential_3_N = variants {mkN "diferencial" ; mkN "gear" ; } ; --*
lin differentiate_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; mkV2 (mkV "separar") ; } ; --*
lin differentiate_2_V2 = variants {mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; } ; --*
lin differentiate_3_V2 = mkV2 (mkV "diferenciar") ; --*
lin differentiate_3_V = mkV "diferenciar" ; --*
lin differentiate_6_V2 = mkV2 (mkV "diferenciar") ; --*
lin differentiate_6_V = mkV "diferenciar" ; --*
lin differentiation_1_N = mkN "diferenciação" ; --*
lin differentiation_3_N = mkN "especialização" ; --*
lin difficult_1_A = variants {mkA "árduo" ; mkA "difícil" ; mkA "foda" ; mkA "intrincado" ; } ; --*
lin difficulty_1_N = mkN "dificuldade" ; --*
lin difficulty_2_N = variants {mkN "dificuldade" ; mkN "obstáculo" ; mkN "problema" ; } ; --*
lin difficulty_3_N = variants {mkN "dificuldade" ; mkN "problema" ; } ; --*
lin difficulty_4_N = mkN "dificuldade" ; --*
lin diffident_2_A = variants {mkA "inseguro" ; mkA "tímido" ; } ; --*
lin diffraction_N = mkN "difração" ; --*
lin diffuse_1_A = mkA "difuso" ; --*
lin diffuse_1_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "out") ; } ; --*
lin diffuse_2_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "permear") ; } ; --*
lin diffuse_3_A = mkA "difuso" ; --*
lin diffuse_3_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin diffuser_2_N = mkN "difusor" ; --*
lin diffusion_1_N = mkN "difusão" ; --*
lin diffusion_2_N = mkN "difusão" ; --*
lin diffusion_3_N = variants {mkN "difusão" ; mkN "disseminação" ; } ; --*
lin diffusion_4_N = variants {mkN "desagregação" ; mkN "disseminação" ; } ; --*
lin diflunisal_N = mkN "diflunisal" ; --*
lin dig_1_N = variants {mkN "escavação" ; mkN "site" ; } ; --*
lin dig_1_V = variants {mkV "cavar" ; mkV "into" ; mkV "over" ; } ; --*
lin dig_2_V2 = variants {mkV2 (mkV "cavar") ; mkV2 (mkV "out") ; } ; --*
lin dig_3_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin dig_4_N = variants {mkN "movimentação" ; mkN "terraplenagem" ; } ; --*
lin dig_6_V2 = mkV2 (mkV "escavar") ; --*
lin dig_7_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "cotovelar") ; mkV2 (mkV "cutucar") ; } ; --*
lin dig_8_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; mkV2 (mkV "the") ; } ; --*
lin digest_1_V2 = mkV2 (mkV "digerir") ; --*
lin digest_2_N = mkN "compilação" ; --*
lin digest_2_V2 = mkV2 (mkV "digerir") ; --*
lin digest_3_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin digest_4_V2 = variants {mkV2 (mkV "digerir") ; mkV2 (mkV "fazer") ; } ; --*
lin digest_7_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; } ; --*
lin digestible_A = mkA "digerível" ; --*
lin digestion_1_N = mkN "digestão" ; --*
lin digestion_2_N = mkN "digestão" ; --*
lin digestive_A = mkA "digestivo" ; --*
lin digestive_N = mkN "digestivo" ; --*
lin digger_2_N = variants {mkN "Escavadeira" ; mkN "escavadora" ; mkN "shovel" ; } ; --*
lin digging_N = variants {mkN "movimentação" ; mkN "terraplenagem" ; } ; --*
lin dig_in_1_V = variants {mkV "entrincheirar" ; mkV "in" ; } ; --*
lin digit_1_N = variants {mkN "algarismo" ; mkN "dígito" ; mkN "número" ; } ; --*
lin digit_2_N = variants {mkN "breadth" ; mkN "dedo" ; } ; --*
lin digit_3_N = variants {mkN "dedo" ; mkN "dígito" ; } ; --*
lin digital_1_A = mkA "digital" ; --*
lin digital_2_A = mkA "digital" ; --*
lin digital_3_A = mkA "digital" ; --*
lin digitalis_2_N = variants {mkN "dedaleira" ; mkN "digital" ; mkN "erva-dedal" ; } ; --*
lin digitizer_1_N = variants {mkN "Conversor" ; mkN "converter" ; } ; --*
lin digitoxin_N = mkN "Digitoxina" ; --*
lin dignify_1_V2 = mkV2 (mkV "dignificar") ; --*
lin dignify_2_V2 = mkV2 (mkV "dignificar") ; --*
lin dignitary_N = variants {mkN "dignitário" ; mkN "important" ; mkN "muckamuck" ; mkN "personalidade" ; mkN "Vip" ; mkN "VIP" ; } ; --*
lin dignity_1_N = variants {mkN "auto-estima" ; mkN "brio" ; mkN "dignidade" ; mkN "pundonor" ; } ; --*
lin dignity_2_N = mkN "dignidade" ; --*
lin dignity_3_N = mkN "dignidade" ; --*
lin digoxin_N = mkN "digoxina" ; --*
lin digraph_N = variants {mkN "digrafo" ; mkN "Digrafo" ; mkN "dígrafo" ; mkN "digrama" ; mkN "grafo" ; } ; --*
lin digress_1_V = mkV "divagar" ; --*
lin digress_2_V = mkV "digressar" ; --*
lin digression_1_N = variants {mkN "excurso" ; mkN "parêntese" ; } ; --*
lin digression_2_N = variants {mkN "digressão" ; mkN "Digressão" ; } ; --*
lin digression_3_N = mkN "excursão" ; --*
lin digressive_1_A = mkA "tangencial" ; --*
lin dijon_PN = mkPN "Dijon" ; --*
lin dike_1_N = variants {mkN "fufa" ; mkN "sapatão" ; } ; --*
lin dike_2_N = variants {mkN "barragem" ; mkN "Barragem" ; mkN "barragens" ; mkN "dique" ; mkN "diques" ; mkN "quebra-mar" ; mkN "represa" ; } ; --*
lin dilapidated_A = variants {mkA "dilapidada" ; mkA "dilapidadas" ; mkA "dilapidado" ; mkA "dilapidados" ; mkA "malcuidada" ; mkA "malcuidado" ; } ; --*
lin dilapidation_2_N = mkN "ruína" ; --*
lin dilatation_1_N = mkN "distensão" ; --*
lin dilatation_2_N = mkN "dilatação" ; --*
lin dilate_1_V2 = variants {mkV2 (mkV "dilatar") ; mkV2 (mkV "expandir") ; } ; --*
lin dilate_2_V = variants {mkV "elaborar" ; mkV "elocubrar" ; mkV "expandir" ; mkV "expor" ; mkV "out" ; } ; --*
lin dilation_2_N = mkN "dilatação" ; --*
lin dilator_3_N = mkN "dilatador" ; --*
lin dilatoriness_N = mkN "morosidade" ; --*
lin dilemma_N = mkN "dilema" ; --*
lin dilettante_N = mkN "diletante" ; --*
lin diligence_1_N = mkN "diligência" ; --*
lin diligence_2_N = mkN "diligência" ; --*
lin diligence_3_N = mkN "diligência" ; --*
lin diligent_1_A = mkA "diligente" ; --*
lin diligent_2_A = mkA "diligente" ; --*
lin dill_1_N = variants {mkN "endro" ; mkN "graveolens" ; } ; --*
lin dill_2_N = variants {mkN "endro" ; mkN "Endro" ; mkN "weed" ; } ; --*
lin dilly_dally_1_V = variants {mkV "adiar" ; mkV "enrolar" ; mkV "one's" ; mkV "procrastinar" ; } ; --*
lin diltiazem_N = mkN "Diltiazem" ; --*
lin dilutant_1_N = mkN "diluente" ; --*
lin dilute_1_V2 = variants {mkV2 (mkV "diluir") ; mkV2 (mkV "out") ; } ; --*
lin dilute_2_V2 = variants {mkV2 (mkV "adulterar") ; mkV2 (mkV "aviltar") ; mkV2 (mkV "diluir") ; } ; --*
lin dilute_A = mkA "diluído" ; --*
lin dim_4_A = variants {mkA "escalvado" ; mkA "pálida" ; mkA "sombrio" ; } ; --*
lin dim_5_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "fátuo" ; mkA "idiota" ; mkA "imbecil" ; } ; --*
lin dimenhydrinate_N = mkN "dimenidrinato" ; --*
lin dimension_1_N = variants {mkN "amplidão" ; mkN "dimensão" ; mkN "extensão" ; mkN "magnitude" ; } ; --*
lin dimension_2_N = variants {mkN "atributos" ; mkN "carácter" ; mkN "qualidade" ; } ; --*
lin dimension_3_N = mkN "dimensão" ; --*
lin dimension_4_N = variants {mkN "dimensão" ; mkN "extensão" ; mkN "magnitude" ; mkN "proporção" ; mkN "tamanho" ; } ; --*
lin dimensional_1_A = mkA "dimensional" ; --*
lin dimensional_2_A = mkA "dimensional" ; --*
lin dimer_N = mkN "dímero" ; --*
lin diminish_1_V = variants {mkV "decrescer" ; mkV "desabar" ; mkV "diminuir" ; mkV "minguar" ; } ; --*
lin diminish_2_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "minguar") ; mkV2 (mkV "minimizar") ; mkV2 (mkV "reduzir") ; } ; --*
lin diminution_3_N = variants {mkN "diminuição" ; mkN "redução" ; } ; --*
lin diminutive_A = variants {mkA "diminuto" ; mkA "minúsculo" ; mkA "nanico" ; mkA "pequeno" ; } ; --*
lin diminutive_N = mkN "diminutivo" ; --*
lin dimmer_N = variants {mkN "dímer" ; mkN "dimmer" ; } ; --*
lin dimple_1_V2 = mkV2 (mkV "ondear") ; --*
lin dimple_3_N = mkN "covinha" ; --*
lin dimwit_N = mkN "idiota" ; --*
lin din_1_N = mkN "ruído" ; --*
lin din_2_N = variants {mkN "escândalo" ; mkN "tumulto" ; } ; --*
lin dinar_5_N = variants {mkN "dinar" ; mkN "Dinar" ; } ; --*
lin dinar_6_N = variants {mkN "dinar" ; mkN "Dinar" ; } ; --*
lin dinar_7_N = variants {mkN "dinar" ; mkN "Dinar" ; } ; --*
lin dinar_9_N = variants {mkN "dinar" ; mkN "Dinar" ; } ; --*
lin dine_1_V = mkV "jantar" ; --*
lin dine_2_V = mkV "jantar" ; --*
lin ding_2_N = mkN "amassado" ; --*
lin dinghy_N = variants {mkN "bote" ; mkN "pequeno" ; } ; --*
lin dingo_N = mkN "dingo" ; --*
lin dingy_1_A = variants {mkA "encardido" ; mkA "grudento" ; mkA "sujo" ; } ; --*
lin dingy_3_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin dining_room_N = variants {mkN "room" ; mkN "Sala" ; } ; --*
lin dining_table_N = variants {mkN "mesa" ; mkN "table" ; } ; --*
lin dinner_1_N = variants {mkN "almoço" ; mkN "ceia" ; mkN "jantar" ; mkN "refeição" ; } ; --*
lin dinner_2_N = variants {mkN "jantar" ; mkN "party" ; } ; --*
lin dinner_jacket_N = variants {mkN "jacket" ; mkN "smoking" ; mkN "tie" ; } ; --*
lin dinner_party_N = variants {mkN "jantar" ; mkN "party" ; } ; --*
lin dinnertime_N = mkN "hora" ; --*
lin dinosaur_N = variants {mkN "dinossáurio" ; mkN "dinossauro" ; } ; --*
lin diocese_N = variants {mkN "diocese" ; mkN "Diocese" ; } ; --*
lin diode_1_N = variants {mkN "diodo" ; mkN "tube" ; mkN "valve" ; } ; --*
lin dioecious_A = variants {mkA "dioicia" ; mkA "Dioicia" ; } ; --*
lin diol_N = variants {mkN "alcohol" ; mkN "Diol" ; } ; --*
lin diopter_1_N = variants {mkN "dioptria" ; mkN "Dioptria" ; mkN "grau" ; } ; --*
lin diorite_N = mkN "Diorito" ; --*
lin dioxide_N = variants {mkN "bióxido" ; mkN "dióxido" ; } ; --*
lin dioxin_N = mkN "dioxina" ; --*
lin dip_1_V2 = mkV2 (mkV "imergir") ; --*
lin dip_2_V2 = variants {mkV2 (mkV "imergir") ; mkV2 (mkV "mergulhar") ; } ; --*
lin dip_3_N = variants {mkN "batedor" ; mkN "trombadinha" ; } ; --*
lin dip_8_N = mkN "mergulho" ; --*
lin dip_9_V = mkV "cair" ; --*
lin diphenylhydantoin_N = mkN "Fenitoína" ; --*
lin diphtheria_N = mkN "difteria" ; --*
lin diphthong_N = mkN "ditongo" ; --*
lin diplegia_N = mkN "Diplegia" ; --*
lin diplodocus_N = mkN "diplodoco" ; --*
lin diploid_A = mkA "diplóide" ; --*
lin diploidy_N = mkN "diploidia" ; --*
lin diplomacy_1_N = variants {mkN "diplomacia" ; mkN "Diplomácia" ; mkN "negotiations" ; } ; --*
lin diplomacy_2_N = mkN "diplomacia" ; --*
lin diplomacy_3_N = mkN "diplomacia" ; --*
lin diploma_N = variants {mkN "auto" ; mkN "diploma" ; mkN "escritura" ; } ; --*
lin diplomat_1_N = variants {mkN "diplomata" ; mkN "embaixador" ; } ; --*
lin diplomat_2_N = mkN "diplomata" ; --*
lin diplomatic_1_A = mkA "diplomático" ; --*
lin diplomatic_2_A = mkA "diplomático" ; --*
lin diplomatist_N = variants {mkN "diplomata" ; mkN "embaixador" ; } ; --*
lin diplopia_N = variants {mkN "Diplopia" ; mkN "vision" ; } ; --*
lin dipole_1_N = mkN "dipolo" ; --*
lin dipsomaniac_N = variants {mkN "alcoólatra" ; mkN "bêbado" ; mkN "borracho" ; } ; --*
lin dipsomania_N = variants {mkN "alcoolismo" ; mkN "Dipsomania" ; } ; --*
lin dire_1_A = mkA "adoentado" ; --*
lin dire_2_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin direct_10_V2 = mkV2 (mkV "direcionar") ; --*
lin direct_10_V = mkV "direcionar" ; --*
lin direct_11_V2 = variants {mkV2 (mkV "canalizar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; } ; --*
lin direct_13_V2 = variants {mkV2 (mkV "engenhar") ; mkV2 (mkV "organizar") ; mkV2 (mkV "orquestrar") ; } ; --*
lin direct_1_A = mkA "directo" ; --*
lin direct_1_V2 = mkV2 (mkV "dirigir") ; --*
lin direct_2_V = variants {mkV "apontar" ; mkV "direcionar" ; mkV "dirigir" ; } ; --*
lin direct_3_V2 = mkV2 (mkV "dirigir") ; --*
lin direct_3_V = mkV "dirigir" ; --*
lin direct_4_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; } ; --*
lin direct_4_V = variants {mkV "conduzir" ; mkV "dirigir" ; } ; --*
lin direct_5_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "levar") ; } ; --*
lin direct_6_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "lançar") ; } ; --*
lin direct_7_V2 = variants {mkV2 (mkV "aim") ; mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "mirar") ; } ; --*
lin direct_8_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "reger") ; } ; --*
lin direct_9_V2 = mkV2 (mkV "direcionar") ; --*
lin direct_Adv = mkAdv "imediatamente" ; --*
lin direction_1_N = variants {mkN "curso" ; mkN "direção" ; mkN "direcção" ; mkN "rumo" ; } ; --*
lin direction_2_N = mkN "curso" ; --*
lin direction_3_N = mkN "direção" ; --*
lin direction_4_N = variants {mkN "aconselhamento" ; mkN "conselho" ; mkN "direção" ; } ; --*
lin direction_5_N = variants {mkN "administração" ; mkN "gestão" ; } ; --*
lin direction_6_N = variants {mkN "código" ; mkN "instrução" ; } ; --*
lin direction_7_N = mkN "orientação" ; --*
lin directional_1_A = mkA "direcional" ; --*
lin directive_N = variants {mkN "directiva" ; mkN "directivas" ; mkN "diretiva" ; mkN "diretriz" ; } ; --*
lin directness_2_N = mkN "franqueza" ; --*
lin director_1_N = variants {mkN "director" ; mkN "diretor" ; mkN "dirigente" ; mkN "gerente" ; } ; --*
lin director_2_N = variants {mkN "director" ; mkN "diretor" ; } ; --*
lin director_3_N = variants {mkN "director" ; mkN "encenador" ; } ; --*
lin director_4_N = variants {mkN "director" ; mkN "Diretor" ; } ; --*
lin director_5_N = variants {mkN "director" ; mkN "maestro" ; } ; --*
lin directorate_N = variants {mkN "diretoria" ; mkN "of" ; } ; --*
lin directory_1_N = variants {mkN "diretório" ; mkN "lista" ; } ; --*
lin direful_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin dirge_N = variants {mkN "pranto" ; mkN "réquiem" ; } ; --*
lin dirigible_N = variants {mkN "aeronave" ; mkN "dirigível" ; } ; --*
lin dirt_1_N = variants {mkN "solo" ; mkN "Solo" ; mkN "terra" ; } ; --*
lin dirt_2_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin dirt_3_N = variants {mkN "bosta" ; mkN "cagalhão" ; mkN "cocô" ; mkN "merda" ; mkN "tolete" ; } ; --*
lin dirtiness_1_N = mkN "sujeira" ; --*
lin dirtiness_2_N = mkN "sujeira" ; --*
lin dirtiness_3_N = mkN "obscenidade" ; --*
lin dirty_10_A = mkA "sujo" ; --*
lin dirty_1_A = variants {mkA "suja" ; mkA "sujado" ; mkA "sujo" ; } ; --*
lin dirty_2_A = variants {mkA "suja" ; mkA "sujo" ; } ; --*
lin dirty_3_A = mkA "sujo" ; --*
lin dirty_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; mkV2 (mkV "sujar") ; } ; --*
lin disability_N = variants {mkN "Deficiencia" ; mkN "deficiência" ; mkN "Deficiência" ; mkN "Deficiente" ; mkN "discapacidade" ; mkN "inabilidade" ; mkN "incapacidade" ; } ; --*
lin disable_1_V2 = variants {mkV2 (mkV "desabilitar") ; mkV2 (mkV "incapacitar") ; } ; --*
lin disabled_A = mkA "deficiente" ; --*
lin disablement_N = variants {mkN "Deficiencia" ; mkN "deficiência" ; mkN "Deficiência" ; mkN "Deficiente" ; mkN "discapacidade" ; mkN "inabilidade" ; mkN "incapacidade" ; } ; --*
lin disabuse_V2 = mkV2 (mkV "desabusar") ; --*
lin disaccharide_N = mkN "dissacarídeo" ; --*
lin disadvantage_N = mkN "desvantagem" ; --*
lin disadvantageous_A = variants {mkA "desfavorável" ; mkA "desvantajoso" ; } ; --*
lin disaffected_A = mkA "rebelde" ; --*
lin disaffection_1_N = variants {mkN "alheamento" ; mkN "alienação" ; } ; --*
lin disagree_2_V2 = variants {mkV2 (mkV "desencontrar") ; mkV2 (mkV "discordar") ; } ; --*
lin disagree_2_V = variants {mkV "desencontrar" ; mkV "discordar" ; } ; --*
lin disagree_2_VS = variants {mkVS (mkV "desencontrar") ; mkVS (mkV "discordar") ; } ; --*
lin disagreement_1_N = variants {mkN "desacordo" ; mkN "discordância" ; mkN "discordo" ; } ; --*
lin disagreement_2_N = variants {mkN "discordância" ; mkN "discrepância" ; } ; --*
lin disagreement_3_N = variants {mkN "desacordo" ; mkN "discordância" ; mkN "discórdia" ; mkN "discordo" ; mkN "discrepância" ; } ; --*
lin disagree_with_1_V2 = variants {mkV2 (mkV "diferir") ; mkV2 (mkV "discordar") ; mkV2 (mkV "divergir") ; mkV2 (mkV "issue") ; } ; --*
lin disallow_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin disambiguation_N = mkN "desambiguação" ; --*
lin disappear_1_V = variants {mkV "away" ; mkV "desaparecer" ; mkV "sumir" ; } ; --*
lin disappear_2_V = variants {mkV "away" ; mkV "desaparecer" ; mkV "esvair" ; } ; --*
lin disappear_3_V = mkV "desaparecer" ; --*
lin disappearance_1_N = mkN "desaparição" ; --*
lin disappearance_3_N = mkN "desaparecimento" ; --*
lin disappointing_A = mkA "decepcionante" ; --*
lin disappointment_1_N = variants {mkN "deceção" ; mkN "decepção" ; mkN "desapontamento" ; } ; --*
lin disappointment_2_N = variants {mkN "decepção" ; mkN "hopes" ; } ; --*
lin disappoint_V2 = variants {mkV2 (mkV "decepcionar") ; mkV2 (mkV "desapontar") ; mkV2 (mkV "down") ; } ; --*
lin disapprobation_N = mkN "reprovação" ; --*
lin disapproval_1_N = mkN "desaprovação" ; --*
lin disapprove_1_V2 = mkV2 (mkV "desaprovar") ; --*
lin disapprove_1_V = mkV "desaprovar" ; --*
lin disapprove_2_V = variants {mkV "desaprovar" ; mkV "rejeitar" ; } ; --*
lin disarm_1_V2 = mkV2 (mkV "desarmar") ; --*
lin disarm_1_V = mkV "desarmar" ; --*
lin disarm_2_V2 = mkV2 (mkV "desarmar") ; --*
lin disarm_3_V2 = mkV2 (mkV "desarmar") ; --*
lin disarm_3_V = mkV "desarmar" ; --*
lin disarmament_N = mkN "desarmamento" ; --*
lin disarming_N = mkN "desarmamento" ; --*
lin disarrange_2_V2 = mkV2 (mkV "disarranjar") ; --*
lin disarray_V2 = mkV2 (mkV "bagunçar") ; --*
lin disassociate_V2 = variants {mkV2 (mkV "descasar") ; mkV2 (mkV "dissociar") ; mkV2 (mkV "separar") ; } ; --*
lin disassociation_2_N = mkN "dissociação" ; --*
lin disaster_1_N = variants {mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; } ; --*
lin disaster_2_N = variants {mkN "calamidade" ; mkN "cataclismo" ; mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; mkN "flagelo" ; mkN "tragédia" ; } ; --*
lin disaster_3_N = mkN "desastre" ; --*
lin disastrous_A = mkA "desastroso" ; --*
lin disavowal_N = mkN "negação" ; --*
lin disavow_V2 = variants {mkV2 (mkV "desassociar") ; mkV2 (mkV "repudiar") ; } ; --*
lin disband_1_V2 = variants {mkV2 (mkV "debandar") ; mkV2 (mkV "desbandar") ; } ; --*
lin disband_2_V = variants {mkV "debandar" ; mkV "dissolver" ; } ; --*
lin disbelief_1_N = variants {mkN "descrença" ; mkN "dúvida" ; mkN "rejection" ; } ; --*
lin disbelief_2_N = mkN "descrença" ; --*
lin disbelieve_V2 = variants {mkV2 (mkV "desacreditar") ; mkV2 (mkV "descrer") ; } ; --*
lin disbelieve_V = variants {mkV "desacreditar" ; mkV "descrer" ; } ; --*
lin disbursement_1_N = variants {mkN "custo" ; mkN "despesa" ; } ; --*
lin disburse_V2 = variants {mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; } ; --*
lin disburse_V = variants {mkV "gastar" ; mkV "out" ; } ; --*
lin disc_1_N = variants {mkN "disco" ; mkN "record" ; mkN "recording" ; } ; --*
lin disc_2_N = mkN "disco" ; --*
lin disc_3_N = variants {mkN "disc" ; mkN "disco" ; mkN "disk" ; } ; --*
lin disc_4_N = mkN "disco" ; --*
lin discard_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin discernible_3_A = variants {mkA "evidente" ; mkA "observável" ; } ; --*
lin discernment_1_N = variants {mkN "compreensão" ; mkN "Compreensão" ; mkN "discernimento" ; } ; --*
lin discernment_2_N = mkN "sabor" ; --*
lin discernment_5_N = mkN "prudência" ; --*
lin discern_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin discharge_11_V = mkV "esvaziar" ; --*
lin discharge_1_V2 = mkV2 (mkV "cumprir") ; --*
lin discharge_3_N = mkN "emissão" ; --*
lin discharge_3_V2 = mkV2 (mkV "liberar") ; --*
lin discharge_3_V = mkV "liberar" ; --*
lin discharge_4_N = mkN "expulsão" ; --*
lin discharge_5_N = variants {mkN "arc" ; mkN "arco" ; mkN "discharge" ; } ; --*
lin discharge_6_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "inocentar") ; } ; --*
lin discharge_7_N = mkN "demissão" ; --*
lin discharge_7_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "expelir") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "liberar") ; } ; --*
lin discharge_8_N = variants {mkN "desistência" ; mkN "renúncia" ; } ; --*
lin discharge_9_V2 = mkV2 (mkV "atirar") ; --*
lin disciple_N = variants {mkN "adepto" ; mkN "aluno" ; mkN "apóstolo" ; mkN "discípulo" ; mkN "estudante" ; mkN "seguidor" ; } ; --*
lin disciplinary_1_A = mkA "disciplinar" ; --*
lin disciplinary_2_A = mkA "disciplinar" ; --*
lin disciplinary_3_A = mkA "disciplinar" ; --*
lin discipline_1_N = variants {mkN "area" ; mkN "campo" ; mkN "disciplina" ; mkN "domínio" ; mkN "field" ; mkN "of" ; mkN "terreno" ; } ; --*
lin discipline_2_N = mkN "disciplina" ; --*
lin discipline_2_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "disciplinar") ; mkV2 (mkV "out") ; } ; --*
lin discipline_3_N = variants {mkN "disciplina" ; mkN "modalidade" ; } ; --*
lin discipline_4_N = mkN "disciplina" ; --*
lin discipline_5_N = mkN "punição" ; --*
lin disclaimer_1_N = mkN "aviso" ; --*
lin disclaimer_2_N = mkN "negação" ; --*
lin disclose_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin disclose_2_V2 = variants {mkV2 (mkV "descerrar") ; mkV2 (mkV "expor") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "revelar") ; } ; --*
lin disclosure_N = mkN "revelação" ; --*
lin disco_1_N = variants {mkN "Disco" ; mkN "music" ; mkN "Música" ; } ; --*
lin disco_2_N = mkN "discoteca" ; --*
lin discography_N = variants {mkN "discografia" ; mkN "Discografias" ; } ; --*
lin discolour_1_V2 = variants {mkV2 (mkV "colorir") ; mkV2 (mkV "descolorir") ; } ; --*
lin discolour_3_V2 = mkV2 (mkV "descolorir") ; --*
lin discolour_V = variants {mkV "colorir" ; mkV "descolorir" ; } ; --*
lin discombobulated_A = mkA "desconcertado" ; --*
lin discomfit_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "perturbar") ; } ; --*
lin discomfort_1_N = variants {mkN "desconforto" ; mkN "mal-estar" ; } ; --*
lin discommode_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin discompose_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "perturbar") ; } ; --*
lin disconcert_1_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "disconcertar") ; mkV2 (mkV "off") ; } ; --*
lin disconcert_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "perturbar") ; } ; --*
lin disconcerting_A = mkA "desconcertante" ; --*
lin disconfirming_1_A = mkA "negativo" ; --*
lin disconnect_2_V2 = mkV2 (mkV "desconectar") ; --*
lin disconnection_1_N = variants {mkN "desconexão" ; mkN "disjunção" ; } ; --*
lin disconnection_3_N = mkN "disjunção" ; --*
lin disconsolate_1_A = mkA "inconsolável" ; --*
lin disconsolate_2_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin discontentment_N = mkN "discontentamento" ; --*
lin discontent_N = mkN "discontentamento" ; --*
lin discontent_V2 = mkV2 (mkV "descontentar") ; --*
lin discontinuance_N = variants {mkN "descontinuação" ; mkN "interrupção" ; } ; --*
lin discontinue_1_V2 = variants {mkV2 (mkV "cessar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "descontinuar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin discontinue_2_V = mkV "interromper" ; --*
lin discontinue_3_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "suspender") ; } ; --*
lin discontinuity_N = variants {mkN "descontinuidade" ; mkN "falha" ; } ; --*
lin discord_1_N = mkN "discórdia" ; --*
lin discord_2_N = variants {mkN "discordância" ; mkN "discórdia" ; } ; --*
lin discord_3_N = mkN "discórdia" ; --*
lin discord_4_N = mkN "discórdia" ; --*
lin discordance_1_N = mkN "discórdia" ; --*
lin discordance_2_N = mkN "discórdia" ; --*
lin discordant_1_A = mkA "discordante" ; --*
lin discotheque_N = mkN "discoteca" ; --*
lin discount_1_N = variants {mkN "desconto" ; mkN "disconto" ; mkN "reduction" ; } ; --*
lin discount_1_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "descartar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "off") ; } ; --*
lin discount_2_V2 = mkV2 (mkV "descontar") ; --*
lin discount_3_N = variants {mkN "abatimento" ; mkN "desconto" ; } ; --*
lin discount_4_N = mkN "desconto" ; --*
lin discountenance_1_V2 = mkV2 (mkV "desaprovar") ; --*
lin discourage_1_V2 = mkV2 (mkV "desanimar") ; --*
lin discourage_2_V2 = variants {mkV2 (mkV "desanimar") ; mkV2 (mkV "dissuadir") ; } ; --*
lin discourage_3_V2 = variants {mkV2 (mkV "admoestar") ; mkV2 (mkV "advertir") ; mkV2 (mkV "avisar") ; mkV2 (mkV "desaconselhar") ; mkV2 (mkV "prevenir") ; } ; --*
lin discouragement_1_N = variants {mkN "desalento" ; mkN "desânimo" ; } ; --*
lin discouraging_1_A = mkA "desencorajante" ; --*
lin discourse_1_V = variants {mkV "about" ; mkV "discorrer" ; mkV "discursar" ; mkV "discutir" ; } ; --*
lin discourse_2_N = variants {mkN "prédica" ; mkN "pregação" ; mkN "sermão" ; } ; --*
lin discourse_2_V = mkV "conversar" ; --*
lin discourse_3_N = variants {mkN "discurso" ; mkN "discussão" ; } ; --*
lin discourteous_2_A = mkA "descortês" ; --*
lin discourtesy_2_N = mkN "descortesia" ; --*
lin discourtesy_3_N = variants {mkN "activity" ; mkN "desfeita" ; mkN "injúria" ; mkN "ofensa" ; } ; --*
lin discover_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "detectar") ; mkV2 (mkV "ver") ; } ; --*
lin discover_2_VS = variants {mkVS (mkV "a") ; mkVS (mkV "achar") ; mkVS (mkV "descobrir") ; mkVS (mkV "informar-se") ; mkVS (mkV "out") ; mkVS (mkV "up") ; mkVS (mkV "wind") ; mkVS (mkV "word") ; } ; --*
lin discover_3_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; } ; --*
lin discover_4_V = mkV "descobrir" ; --*
lin discover_5_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "across") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin discover_6_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin discover_7_V2 = mkV2 (mkV "descobrir") ; --*
lin discover_8_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "out") ; } ; --*
lin discover_8_V = variants {mkV "identificar" ; mkV "out" ; } ; --*
lin discover_8_VS = variants {mkVS (mkV "identificar") ; mkVS (mkV "out") ; } ; --*
lin discovererFem_1_N = variants {mkN "artífice" ; mkN "descobridor" ; mkN "inventor" ; mkN "Inventor" ; mkN "Inventores" ; } ; --*
lin discovererFem_2_N = mkN "descobridor" ; --*
lin discovererMasc_1_N = variants {mkN "artífice" ; mkN "descobridor" ; mkN "inventor" ; mkN "Inventor" ; mkN "Inventores" ; } ; --*
lin discovererMasc_2_N = mkN "descobridor" ; --*
lin discovery_1_N = variants {mkN "descoberta" ; mkN "descobrimento" ; } ; --*
lin discovery_3_N = variants {mkN "achado" ; mkN "descoberta" ; } ; --*
lin discredit_1_V2 = variants {mkV2 (mkV "desabonar") ; mkV2 (mkV "desacreditar") ; mkV2 (mkV "desprestigiar") ; } ; --*
lin discredit_3_V2 = variants {mkV2 (mkV "desacreditar") ; mkV2 (mkV "descrer") ; } ; --*
lin discreditable_A = mkA "mal" ; --*
lin discredit_N = mkN "descrédito" ; --*
lin discreet_1_A = mkA "discreto" ; --*
lin discreet_3_A = mkA "discreto" ; --*
lin discrepancy_1_N = variants {mkN "discordância" ; mkN "discrepância" ; } ; --*
lin discrepancy_2_N = mkN "discrepância" ; --*
lin discrepant_1_A = mkA "incompatível" ; --*
lin discrepant_2_A = mkA "discrepante" ; --*
lin discrete_A = variants {mkA "diferente" ; mkA "distinguido" ; mkA "distinto" ; mkA "individual" ; mkA "separado" ; } ; --*
lin discretion_2_N = mkN "prudência" ; --*
lin discretion_3_N = mkN "discrição" ; --*
lin discretion_4_N = variants {mkN "discrição" ; mkN "will" ; } ; --*
lin discretion_5_N = mkN "prudência" ; --*
lin discriminate_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "diferenciar") ; mkV2 (mkV "discriminar") ; } ; --*
lin discriminate_1_V = variants {mkV "apart" ; mkV "diferenciar" ; mkV "discriminar" ; } ; --*
lin discriminate_2_V2 = variants {mkV2 (mkV "discriminar") ; mkV2 (mkV "out") ; } ; --*
lin discriminate_2_V = variants {mkV "discriminar" ; mkV "out" ; } ; --*
lin discriminate_3_V2 = mkV2 (mkV "discriminar") ; --*
lin discrimination_1_N = mkN "discriminação" ; --*
lin discrimination_2_N = variants {mkN "discriminação" ; mkN "Discriminação" ; } ; --*
lin discriminative_1_A = mkA "discriminativo" ; --*
lin discriminatory_3_A = mkA "discriminativo" ; --*
lin discuss_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "discorrer") ; mkV2 (mkV "discursar") ; mkV2 (mkV "discutir") ; } ; --*
lin discuss_2_V2 = variants {mkV2 (mkV "discutir") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; } ; --*
lin discussion_1_N = variants {mkN "discurso" ; mkN "discussão" ; } ; --*
lin discussion_2_N = variants {mkN "debate" ; mkN "discussão" ; } ; --*
lin disdain_1_N = variants {mkN "desdém" ; mkN "desprezo" ; mkN "escárnio" ; } ; --*
lin disdain_1_V2 = variants {mkV2 (mkV "desdenhar") ; mkV2 (mkV "desprezar") ; mkV2 (mkV "menosprezar") ; } ; --*
lin disdain_2_N = mkN "condescendência" ; --*
lin disdain_2_V2 = variants {mkV2 (mkV "desprezar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin disdainful_2_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin diseased_A = variants {mkA "mórbido" ; mkA "patológico" ; } ; --*
lin disease_N = variants {mkN "doença" ; mkN "doenças" ; } ; --*
lin disembarkation_N = mkN "desembarque" ; --*
lin disembark_V = variants {mkV "desembarcar-se" ; mkV "down" ; } ; --*
lin disembarrass_V2 = variants {mkV2 (mkV "desimpedir") ; mkV2 (mkV "livrar") ; mkV2 (mkV "remover") ; } ; --*
lin disembowel_V2 = variants {mkV2 (mkV "desentranhar") ; mkV2 (mkV "destripar") ; mkV2 (mkV "desventrar") ; mkV2 (mkV "desviscerar") ; mkV2 (mkV "estripar") ; mkV2 (mkV "esventrar") ; } ; --*
lin disenchantment_N = variants {mkN "desencantamento" ; mkN "desilusão" ; } ; --*
lin disenchant_V2 = variants {mkV2 (mkV "desencantar") ; mkV2 (mkV "desiludir") ; } ; --*
lin disencumber_V2 = variants {mkV2 (mkV "desenredar") ; mkV2 (mkV "soltar") ; } ; --*
lin disengage_2_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "limpar") ; mkV2 (mkV "livrar") ; } ; --*
lin disengage_3_V = mkV "desligar" ; --*
lin disengagement_2_N = mkN "retirada" ; --*
lin disentangle_1_V2 = variants {mkV2 (mkV "desenredar") ; mkV2 (mkV "soltar") ; } ; --*
lin disentangle_3_V = mkV "desvencilhar" ; --*
lin disentangle_4_V2 = mkV2 (mkV "desembaraçar") ; --*
lin disentangle_4_V = mkV "desembaraçar" ; --*
lin disentangle_5_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "pentear") ; } ; --*
lin disentanglement_N = mkN "desenrascanço" ; --*
lin disequilibrium_N = mkN "desequilíbrio" ; --*
lin disfavour_1_V2 = variants {mkV2 (mkV "desavantajar") ; mkV2 (mkV "desfavorecer") ; mkV2 (mkV "prejudicar") ; } ; --*
lin disfigurement_1_N = mkN "deformidade" ; --*
lin disfigurement_2_N = variants {mkN "desfiguração" ; mkN "desfiguramento" ; } ; --*
lin disfigure_V2 = mkV2 (mkV "desfigurar") ; --*
lin disgorge_1_V2 = mkV2 (mkV "verter") ; --*
lin disgorge_2_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin disgrace_1_V2 = variants {mkV2 (mkV "desgraçar") ; mkV2 (mkV "desonrar") ; } ; --*
lin disgrace_2_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin disgraceful_1_A = mkA "infamante" ; --*
lin disgraceful_2_A = variants {mkA "desgraçado" ; mkA "ignominioso" ; mkA "torpe" ; } ; --*
lin disgrace_N = variants {mkN "desgraça" ; mkN "ignomínia" ; mkN "vergonha" ; } ; --*
lin disgruntled_A = mkA "descontente" ; --*
lin disguise_1_N = mkN "camuflagem" ; --*
lin disguise_2_N = mkN "disfarce" ; --*
lin disguise_3_N = mkN "camuflagem" ; --*
lin disguise_V2 = variants {mkV2 (mkV "disfarçar") ; mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "mascarar") ; } ; --*
lin disgust_1_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "out") ; mkV2 (mkV "repugnar") ; } ; --*
lin disgust_2_V2 = variants {mkV2 (mkV "indignar") ; mkV2 (mkV "nausear") ; mkV2 (mkV "repugnar") ; mkV2 (mkV "revoltar") ; mkV2 (mkV "up") ; } ; --*
lin disgusting_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin disgust_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "náusea" ; mkN "nojo" ; mkN "repugnância" ; mkN "repulsa" ; } ; --*
lin dish_1_N = variants {mkN "louça" ; mkN "prato" ; } ; --*
lin dish_1_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "out") ; mkV2 (mkV "servir") ; mkV2 (mkV "up") ; } ; --*
lin dish_2_N = mkN "prato" ; --*
lin dish_4_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin dish_5_N = variants {mkN "aerial" ; mkN "antena" ; mkN "antenna" ; } ; --*
lin disharmony_N = mkN "desarmonia" ; --*
lin disheartenment_1_N = variants {mkN "desalento" ; mkN "desânimo" ; } ; --*
lin dishearten_V2 = variants {mkV2 (mkV "desentusiasmar") ; mkV2 (mkV "esmorecer") ; mkV2 (mkV "off") ; mkV2 (mkV "tirar") ; } ; --*
lin dishonest_1_A = mkA "desonroso" ; --*
lin dishonest_2_A = variants {mkA "corruptível" ; mkA "desonesto" ; mkA "venal" ; } ; --*
lin dishonesty_1_N = mkN "desonestidade" ; --*
lin dishonesty_2_N = mkN "desonestidade" ; --*
lin dishonorable_1_A = variants {mkA "desonroso" ; mkA "imoral" ; } ; --*
lin dishonorable_2_A = mkA "desonroso" ; --*
lin dishonour_1_N = variants {mkN "desonra" ; mkN "vergonha" ; } ; --*
lin dishonour_1_V2 = variants {mkV2 (mkV "desgraçar") ; mkV2 (mkV "desonrar") ; } ; --*
lin dishonour_2_N = variants {mkN "desonra" ; mkN "vergonha" ; } ; --*
lin dishonour_2_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atentar") ; mkV2 (mkV "estuprar") ; mkV2 (mkV "violentar") ; } ; --*
lin dishonourable_A = variants {mkA "desonroso" ; mkA "imoral" ; } ; --*
lin dish_out_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "out") ; mkV2 (mkV "servir") ; mkV2 (mkV "up") ; } ; --*
lin dish_up_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "out") ; mkV2 (mkV "servir") ; mkV2 (mkV "up") ; } ; --*
lin dishwasher_1_N = variants {mkN "lavalouça" ; mkN "machine" ; mkN "washer" ; } ; --*
lin dishwater_N = mkN "água" ; --*
lin disillusionment_N = variants {mkN "desencantamento" ; mkN "desilusão" ; } ; --*
lin disillusion_N = variants {mkN "desencantamento" ; mkN "desilusão" ; } ; --*
lin disillusion_V2 = variants {mkV2 (mkV "desencantar") ; mkV2 (mkV "desiludir") ; } ; --*
lin disincentive_N = mkN "desincentivo" ; --*
lin disinclination_1_N = mkN "aversão" ; --*
lin disinclination_2_N = variants {mkN "aversão" ; mkN "hesitação" ; } ; --*
lin disinfectant_A = variants {mkA "bactericida" ; mkA "desinfectantes" ; } ; --*
lin disinfectant_N = variants {mkN "desinfectante" ; mkN "desinfetante" ; mkN "germicida" ; } ; --*
lin disinfection_N = mkN "desinfecção" ; --*
lin disinfect_V2 = variants {mkV2 (mkV "desinfectar") ; mkV2 (mkV "desinfetar") ; } ; --*
lin disinformation_N = variants {mkN "Contrainformação" ; mkN "Contra-informação" ; } ; --*
lin disingenuous_A = mkA "astuto" ; --*
lin disinherit_V2 = mkV2 (mkV "deserdar") ; --*
lin disintegrate_1_V = variants {mkV "desintegrar" ; mkV "separar" ; } ; --*
lin disintegrate_2_V2 = mkV2 (mkV "desintegrar") ; --*
lin disintegrate_2_V = mkV "desintegrar" ; --*
lin disintegrate_3_V = variants {mkV "decair" ; mkV "dividir" ; mkV "putrefazer" ; } ; --*
lin disintegration_3_N = mkN "desintegração" ; --*
lin disintegration_4_N = variants {mkN "decay" ; mkN "Desintegração" ; mkN "Radioatividade" ; } ; --*
lin disintegration_5_N = variants {mkN "aniquilação" ; mkN "aniquilamento" ; mkN "desintegração" ; } ; --*
lin disinterest_N = mkN "neutralidade" ; --*
lin disinterment_N = variants {mkN "exumação" ; mkN "up" ; } ; --*
lin disinter_V2 = mkV2 (mkV "exumar") ; --*
lin disjoint_1_V2 = variants {mkV2 (mkV "descasar") ; mkV2 (mkV "dissociar") ; mkV2 (mkV "separar") ; } ; --*
lin disjoint_2_V2 = mkV2 (mkV "desarticular") ; --*
lin disjoint_3_V2 = mkV2 (mkV "separar") ; --*
lin disjoint_4_V2 = variants {mkV2 (mkV "desunir") ; mkV2 (mkV "separar") ; } ; --*
lin disjoint_A = mkA "disjunto" ; --*
lin disjunct_3_A = mkA "isolado" ; --*
lin disjunction_1_N = variants {mkN "desconexão" ; mkN "disjunção" ; } ; --*
lin disjunction_2_N = mkN "disjunção" ; --*
lin disk_1_N = mkN "disco" ; --*
lin disk_2_N = mkN "disco" ; --*
lin disk_3_N = variants {mkN "disco" ; mkN "record" ; mkN "recording" ; } ; --*
lin disk_4_N = variants {mkN "disc" ; mkN "disco" ; mkN "disk" ; } ; --*
lin diskette_N = variants {mkN "disco" ; mkN "disk" ; mkN "disquete" ; } ; --*
lin dislike_of_N2 = mkN2 (mkN "aversão") noPrep ; --*
lin dislike_V2 = variants {mkV2 (mkV "antipatizar") ; mkV2 (mkV "desgostar") ; mkV2 (mkV "não") ; } ; --*
lin dislocate_1_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "deslocar-se") ; } ; --*
lin dislocate_2_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "luxar") ; } ; --*
lin dislodge_1_V2 = variants {mkV2 (mkV "desalojar") ; mkV2 (mkV "desprender") ; } ; --*
lin dislodge_2_V2 = mkV2 (mkV "deslocar") ; --*
lin dislodge_3_V2 = variants {mkV2 (mkV "desalojar") ; mkV2 (mkV "remover") ; } ; --*
lin disloyalty_N = mkN "deslealdade" ; --*
lin dismal_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin dismantle_1_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin dismantle_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "desfazer") ; mkV2 (mkV "desmantelar") ; mkV2 (mkV "up") ; } ; --*
lin dismantle_3_V2 = variants {mkV2 (mkV "desmanchar") ; mkV2 (mkV "desmantelar") ; mkV2 (mkV "remover") ; mkV2 (mkV "retirar") ; } ; --*
lin dismay_1_N = variants {mkN "desalento" ; mkN "desânimo" ; } ; --*
lin dismay_1_V2 = variants {mkV2 (mkV "dejectar") ; mkV2 (mkV "dejetar") ; mkV2 (mkV "deprimir") ; mkV2 (mkV "desanimar") ; mkV2 (mkV "desmoralizar") ; mkV2 (mkV "down") ; } ; --*
lin dismay_2_N = variants {mkN "consternação" ; mkN "estupefação" ; mkN "medo" ; } ; --*
lin dismay_2_V2 = mkV2 (mkV "horrorizar") ; --*
lin dismember_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "desmembrar") ; } ; --*
lin dismemberment_N = variants {mkN "apart" ; mkN "desmembramento" ; } ; --*
lin dismiss_1_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "descartar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "off") ; } ; --*
lin dismiss_2_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "out") ; } ; --*
lin dismiss_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "despedir") ; mkV2 (mkV "packing") ; } ; --*
lin dismiss_4_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "demitir") ; mkV2 (mkV "despedir") ; mkV2 (mkV "destituir") ; mkV2 (mkV "notice") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; } ; --*
lin dismissal_2_N = variants {mkN "demissão" ; mkN "slip" ; } ; --*
lin dismissal_4_N = mkN "demissão" ; --*
lin dismount_N = mkN "desmonte" ; --*
lin dismount_V2 = variants {mkV2 (mkV "apear") ; mkV2 (mkV "apear-se") ; mkV2 (mkV "desmontar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; } ; --*
lin dismount_V = variants {mkV "apear" ; mkV "apear-se" ; mkV "desmontar" ; mkV "down" ; mkV "off" ; } ; --*
lin disobedience_1_N = mkN "desobediência" ; --*
lin disobedience_2_N = mkN "desobediência" ; --*
lin disobedient_1_A = mkA "desobediente" ; --*
lin disobedient_2_A = mkA "desobediente" ; --*
lin disobey_V2 = variants {mkV2 (mkV "desacatar") ; mkV2 (mkV "desobedecer") ; } ; --*
lin disoblige_1_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin disorder_1_N = variants {mkN "bagunça" ; mkN "distúrbio" ; mkN "doença" ; mkN "transtorno" ; } ; --*
lin disorder_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "transtornar") ; } ; --*
lin disorder_2_N = mkN "bagunça" ; --*
lin disorder_2_V2 = mkV2 (mkV "bagunçar") ; --*
lin disorder_3_N = variants {mkN "bagunça" ; mkN "desordem" ; } ; --*
lin disorderliness_1_N = mkN "bagunça" ; --*
lin disorderly_3_A = mkA "caótico" ; --*
lin disorganization_2_N = mkN "desorganização" ; --*
lin disorganize_1_V2 = mkV2 (mkV "desorganizar") ; --*
lin disorientate_V2 = mkV2 (mkV "desorientar") ; --*
lin disorientation_2_N = mkN "desorientação" ; --*
lin disorient_V2 = mkV2 (mkV "desorientar") ; --*
lin disown_1_V2 = mkV2 (mkV "deserdar") ; --*
lin disown_2_V2 = variants {mkV2 (mkV "renunciar") ; mkV2 (mkV "repudiar") ; } ; --*
lin disparage_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "minimizar") ; } ; --*
lin disparity_N = mkN "disparidade" ; --*
lin dispatch_1_N = mkN "despacho" ; --*
lin dispatch_1_V2 = variants {mkV2 (mkV "aviar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "off") ; } ; --*
lin dispatch_1_V2V = variants {mkV2V (mkV "aviar") ; mkV2V (mkV "despachar") ; mkV2V (mkV "noticiar") ; mkV2V (mkV "off") ; } ; --*
lin dispatch_2_N = variants {mkN "despacho" ; mkN "envio" ; mkN "expedição" ; } ; --*
lin dispatch_2_V2 = mkV2 (mkV "cumprir") ; --*
lin dispatch_3_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin dispatch_5_V2 = mkV2 (mkV "assassinar") ; --*
lin dispel_1_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin dispel_2_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "dissipar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "up") ; } ; --*
lin dispensable_A = variants {mkA "dispensável" ; mkA "que" ; } ; --*
lin dispensation_3_N = mkN "destinação" ; --*
lin dispense_1_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; } ; --*
lin dispense_3_V2 = variants {mkV2 (mkV "administrar") ; mkV2 (mkV "dispensar") ; } ; --*
lin dispersal_N = variants {mkN "desagregação" ; mkN "disseminação" ; } ; --*
lin disperse_1_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "salpicar") ; } ; --*
lin disperse_2_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "dissipar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "up") ; } ; --*
lin disperse_4_V = variants {mkV "dispersar" ; mkV "espalhar" ; mkV "out" ; } ; --*
lin disperse_6_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin dispersion_2_N = mkN "dispersão" ; --*
lin dispersion_3_N = variants {mkN "desagregação" ; mkN "disseminação" ; } ; --*
lin dispirit_V2 = variants {mkV2 (mkV "dejectar") ; mkV2 (mkV "dejetar") ; mkV2 (mkV "deprimir") ; mkV2 (mkV "desanimar") ; mkV2 (mkV "desmoralizar") ; mkV2 (mkV "down") ; } ; --*
lin displace_2_V2 = mkV2 (mkV "substituir") ; --*
lin displace_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "demitir") ; mkV2 (mkV "despedir") ; mkV2 (mkV "destituir") ; mkV2 (mkV "notice") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; } ; --*
lin displace_4_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "mover") ; } ; --*
lin displacement_2_N = mkN "deslocamento" ; --*
lin displacement_3_N = mkN "deslocamento" ; --*
lin display_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "exibir") ; mkV2 (mkV "expor") ; mkV2 (mkV "mostrar") ; } ; --*
lin display_2_N = variants {mkN "exibição" ; mkN "exposição" ; } ; --*
lin display_3_N = mkN "apresentação" ; --*
lin displease_V2 = variants {mkV2 (mkV "desagradar") ; mkV2 (mkV "desgostar") ; } ; --*
lin disport_1_V2 = variants {mkV2 (mkV "divertir") ; mkV2 (mkV "entreter") ; } ; --*
lin disport_2_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "around") ; mkV2 (mkV "curvetear") ; mkV2 (mkV "garotar") ; mkV2 (mkV "traquinar") ; } ; --*
lin disposable_1_A = mkA "descartável" ; --*
lin disposable_2_A = mkA "descartável" ; --*
lin disposable_N = variants {mkN "descartável" ; mkN "Descartável" ; } ; --*
lin disposal_1_N = mkN "controle" ; --*
lin disposal_2_N = variants {mkN "administração" ; mkN "gerenciamento" ; mkN "gestão" ; } ; --*
lin disposal_3_N = mkN "eliminação" ; --*
lin dispose_1_V = mkV "dispor" ; --*
lin dispose_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin dispose_3_V2 = variants {mkV2 (mkV "dispor") ; mkV2 (mkV "inclinar") ; mkV2 (mkV "predispor") ; } ; --*
lin dispose_4_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "dispor") ; } ; --*
lin dispose_5_V2 = mkV2 (mkV "qualificar") ; --*
lin disposition_1_N = variants {mkN "disposição" ; mkN "temperamento" ; } ; --*
lin disposition_2_N = mkN "eliminação" ; --*
lin disposition_3_N = mkN "tendência" ; --*
lin disposition_4_N = mkN "tendência" ; --*
lin dispossession_2_N = variants {mkN "exorcismo" ; mkN "Exorcismo" ; } ; --*
lin disproof_1_N = mkN "refutação" ; --*
lin disproportionate_1_A = mkA "desproporcionado" ; --*
lin disproportionate_2_A = mkA "desproporcionado" ; --*
lin disproportion_N = mkN "desproporção" ; --*
lin disputable_1_A = mkA "discutível" ; --*
lin disputable_2_A = mkA "discutível" ; --*
lin disputation_1_N = variants {mkN "debate" ; mkN "disputa" ; } ; --*
lin disputation_2_N = variants {mkN "contestação" ; mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; mkN "polémica" ; mkN "polêmica" ; } ; --*
lin dispute_1_N = variants {mkN "controvérsia" ; mkN "discordância" ; mkN "disputa" ; mkN "of" ; mkN "querela" ; } ; --*
lin dispute_1_V2 = variants {mkV2 (mkV "desafiar") ; mkV2 (mkV "disputar") ; } ; --*
lin dispute_2_N = variants {mkN "contravenção" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin dispute_2_V2 = variants {mkV2 (mkV "altercar") ; mkV2 (mkV "disputar") ; mkV2 (mkV "indispor-se") ; mkV2 (mkV "porfiar") ; mkV2 (mkV "querelar") ; } ; --*
lin disqualification_1_N = mkN "desqualificação" ; --*
lin disqualify_1_V2 = variants {mkV2 (mkV "desqualificar") ; mkV2 (mkV "dyskwalifikować") ; mkV2 (mkV "inabilitar") ; } ; --*
lin disqualify_2_V2 = mkV2 (mkV "desqualificar") ; --*
lin disquiet_1_N = variants {mkN "ansiedade" ; mkN "inquietação" ; } ; --*
lin disquiet_2_N = mkN "inquietação" ; --*
lin disquietude_N = mkN "inquietude" ; --*
lin disquiet_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "transtornar") ; } ; --*
lin disquisition_N = mkN "dissertação" ; --*
lin disregard_1_V2 = variants {mkV2 (mkV "desconsiderar") ; mkV2 (mkV "esnobar") ; mkV2 (mkV "ignorar") ; } ; --*
lin disregard_2_N = variants {mkN "descuido" ; mkN "negligência" ; } ; --*
lin disregard_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "descartar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "off") ; } ; --*
lin disregard_3_V2 = variants {mkV2 (mkV "desatender") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "negligenciar") ; } ; --*
lin disreputable_A = mkA "mal" ; --*
lin disrepute_N = mkN "descrédito" ; --*
lin disrespect_3_N = mkN "desprezo" ; --*
lin disrespectful_1_A = mkA "desrespeitoso" ; --*
lin disrespectful_2_A = mkA "desrespeitoso" ; --*
lin disrobe_V2 = variants {mkV2 (mkV "desnudar") ; mkV2 (mkV "despir") ; mkV2 (mkV "despojar") ; mkV2 (mkV "down") ; } ; --*
lin disrobe_V = variants {mkV "desnudar" ; mkV "despir" ; mkV "despojar" ; mkV "down" ; } ; --*
lin disrupt_1_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "up") ; } ; --*
lin disrupt_3_V2 = variants {mkV2 (mkV "impedir") ; mkV2 (mkV "interromper") ; } ; --*
lin disruption_1_N = variants {mkN "interrupção" ; mkN "pausa" ; } ; --*
lin disruption_2_N = variants {mkN "bagunça" ; mkN "burly" ; mkN "comoção" ; mkN "confusão" ; mkN "zona" ; } ; --*
lin disruptive_A = mkA "tumultuoso" ; --*
lin dissatisfy_V2 = mkV2 (mkV "desagradar") ; --*
lin dissect_1_V2 = mkV2 (mkV "dissecar") ; --*
lin dissect_2_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "apart") ; mkV2 (mkV "down") ; } ; --*
lin dissection_1_N = mkN "dissecção" ; --*
lin dissemble_1_V2 = variants {mkV2 (mkV "aparentar") ; mkV2 (mkV "fingir") ; mkV2 (mkV "pretextar") ; mkV2 (mkV "simular") ; } ; --*
lin dissemble_2_V2 = mkV2 (mkV "esconder") ; --*
lin dissemble_3_V = mkV "fingir" ; --*
lin dissembler_N = variants {mkN "hipócrita" ; mkN "tartufo" ; } ; --*
lin disseminate_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin dissemination_2_N = variants {mkN "difusão" ; mkN "disseminação" ; } ; --*
lin dissemination_3_N = variants {mkN "desagregação" ; mkN "disseminação" ; } ; --*
lin dissension_1_N = variants {mkN "discordância" ; mkN "discórdia" ; } ; --*
lin dissension_2_N = variants {mkN "desacordo" ; mkN "discordância" ; mkN "discordo" ; } ; --*
lin dissent_1_V = variants {mkV "discordar" ; mkV "dissentir" ; } ; --*
lin dissent_2_V = mkV "protestar" ; --*
lin dissent_3_N = mkN "protesto" ; --*
lin dissent_3_V = variants {mkV "diferir" ; mkV "discordar" ; mkV "divergir" ; mkV "issue" ; } ; --*
lin dissenter_N = variants {mkN "dissidência" ; mkN "dissidente" ; } ; --*
lin dissertation_N = variants {mkN "dissertação" ; mkN "tese" ; mkN "teses" ; } ; --*
lin dissever_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "fracionar") ; mkV2 (mkV "separar") ; mkV2 (mkV "up") ; } ; --*
lin dissident_1_A = mkA "herético" ; --*
lin dissident_N = variants {mkN "dissidência" ; mkN "dissidente" ; } ; --*
lin dissimilar_1_A = mkA "diferente" ; --*
lin dissimilar_2_A = mkA "diferente" ; --*
lin dissimilation_2_N = variants {mkN "catabolismo" ; mkN "Catabolismo" ; mkN "metabolism" ; } ; --*
lin dissimilitude_N = variants {mkN "desigualdade" ; mkN "diferença" ; mkN "dissimilitude" ; } ; --*
lin dissimulate_V2 = mkV2 (mkV "dissimular") ; --*
lin dissimulate_V = mkV "dissimular" ; --*
lin dissimulation_N = variants {mkN "dissimulação" ; mkN "enganação" ; } ; --*
lin dissipate_1_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "dissipar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "up") ; } ; --*
lin dissipate_2_V = variants {mkV "dispersar" ; mkV "espalhar" ; mkV "out" ; } ; --*
lin dissipate_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desperdiçar") ; } ; --*
lin dissipation_2_N = variants {mkN "devassidão" ; mkN "dissolução" ; } ; --*
lin dissipation_3_N = mkN "desperdício" ; --*
lin dissociable_A = mkA "separável" ; --*
lin dissociate_1_V2 = variants {mkV2 (mkV "descasar") ; mkV2 (mkV "dissociar") ; mkV2 (mkV "separar") ; } ; --*
lin dissociate_2_V2 = variants {mkV2 (mkV "desassociar") ; mkV2 (mkV "dissociar") ; } ; --*
lin dissociate_3_V2 = mkV2 (mkV "dissociar") ; --*
lin dissociation_2_N = mkN "dissociação" ; --*
lin dissociation_3_N = variants {mkN "dissociação" ; mkN "Dissociação" ; } ; --*
lin dissolubility_N = mkN "solubilidade" ; --*
lin dissolute_A = variants {mkA "devasso" ; mkA "libertino" ; } ; --*
lin dissolution_1_N = mkN "desintegração" ; --*
lin dissolution_3_N = variants {mkN "devassidão" ; mkN "dissolução" ; } ; --*
lin dissolution_4_N = mkN "protelação" ; --*
lin dissolve_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "dissolver") ; mkV2 (mkV "out") ; } ; --*
lin dissolve_1_V = variants {mkV "away" ; mkV "dissolver" ; mkV "out" ; } ; --*
lin dissolve_2_V2 = variants {mkV2 (mkV "dissolver") ; mkV2 (mkV "up") ; } ; --*
lin dissolve_4_V = variants {mkV "debandar" ; mkV "dissolver" ; } ; --*
lin dissolve_5_V2 = variants {mkV2 (mkV "desintegrar") ; mkV2 (mkV "desmoronar") ; } ; --*
lin dissolve_6_V2 = mkV2 (mkV "dissolver") ; --*
lin dissolve_9_V = variants {mkV "amolecer" ; mkV "degelar" ; mkV "derreter" ; mkV "descongelar" ; } ; --*
lin dissolve_N = mkN "dissolva" ; --*
lin dissonance_1_N = variants {mkN "desacordo" ; mkN "discordância" ; mkN "discordo" ; } ; --*
lin dissonance_2_N = variants {mkN "algazarra" ; mkN "barulho" ; } ; --*
lin dissonance_3_N = mkN "dissonância" ; --*
lin dissonant_1_A = mkA "dissonante" ; --*
lin dissuade_V2 = mkV2 (mkV "dissuadir") ; --*
lin dissuasion_2_N = mkN "dissuasão" ; --*
lin distal_1_A = mkA "distal" ; --*
lin distal_2_A = mkA "distal" ; --*
lin distance_1_N = variants {mkN "distância" ; mkN "Distância" ; } ; --*
lin distance_2_N = mkN "distância" ; --*
lin distance_2_V2 = mkV2 (mkV "distanciar") ; --*
lin distance_3_N = mkN "distância" ; --*
lin distance_4_N = mkN "afastamento" ; --*
lin distant_1_A = mkA "distante" ; --*
lin distant_2_A = variants {mkA "distante" ; mkA "longínquo" ; } ; --*
lin distant_3_A = variants {mkA "afastado" ; mkA "alijado" ; mkA "distante" ; } ; --*
lin distant_4_A = variants {mkA "distante" ; mkA "longínquo" ; mkA "remoto" ; } ; --*
lin distant_5_A = mkA "distante" ; --*
lin distasteful_1_A = mkA "repugnante" ; --*
lin distasteful_2_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin distaste_N = variants {mkN "antipatia" ; mkN "aversão" ; mkN "ódio" ; mkN "ojeriza" ; mkN "quezília" ; } ; --*
lin distemper_2_N = variants {mkN "baço" ; mkN "humor" ; mkN "humour" ; } ; --*
lin distend_V2 = mkV2 (mkV "distender") ; --*
lin distend_V3 = mkV3 (mkV "distender") ; --*
lin distend_V = variants {mkV "dilatar" ; mkV "expandir" ; } ; --*
lin distension_1_N = mkN "distensão" ; --*
lin distension_2_N = mkN "distensão" ; --*
lin distention_1_N = mkN "distensão" ; --*
lin distention_2_N = mkN "distensão" ; --*
lin distil_1_V2 = variants {mkV2 (mkV "condensar") ; mkV2 (mkV "destilar") ; } ; --*
lin distil_1_V = variants {mkV "condensar" ; mkV "destilar" ; } ; --*
lin distil_2_V2 = variants {mkV2 (mkV "destilar") ; mkV2 (mkV "extrair") ; } ; --*
lin distil_3_V2 = variants {mkV2 (mkV "destilar") ; mkV2 (mkV "distilar") ; mkV2 (mkV "purificar") ; } ; --*
lin distil_3_V = variants {mkV "destilar" ; mkV "distilar" ; mkV "purificar" ; } ; --*
lin distil_5_V2 = variants {mkV2 (mkV "destilar") ; mkV2 (mkV "pure") ; mkV2 (mkV "purificar") ; mkV2 (mkV "sublimar") ; } ; --*
lin distillate_N = variants {mkN "destilação" ; mkN "destilado" ; } ; --*
lin distillation_1_N = variants {mkN "destilação" ; mkN "purificação" ; } ; --*
lin distillation_2_N = variants {mkN "destilação" ; mkN "destilado" ; } ; --*
lin distiller_N = mkN "destilador" ; --*
lin distillery_N = mkN "destilaria" ; --*
lin distinct_2_A = mkA "inconfundível" ; --*
lin distinct_3_A = variants {mkA "diferente" ; mkA "distinguido" ; mkA "distinto" ; mkA "individual" ; mkA "separado" ; } ; --*
lin distinct_4_A = variants {mkA "evidente" ; mkA "peremptório" ; } ; --*
lin distinction_1_N = mkN "diferenciação" ; --*
lin distinction_3_N = variants {mkN "diferença" ; mkN "distinção" ; } ; --*
lin distinction_4_N = variants {mkN "carácter" ; mkN "distinção" ; } ; --*
lin distinctive_1_A = variants {mkA "distintivo" ; mkA "típico" ; } ; --*
lin distinctive_2_A = mkA "classificável" ; --*
lin distinctiveness_1_N = mkN "especialidade" ; --*
lin distinctness_3_N = mkN "alteridade" ; --*
lin distinguish_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; mkV2 (mkV "separar") ; } ; --*
lin distinguish_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin distinguish_3_V2 = variants {mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; } ; --*
lin distinguish_5_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "out") ; } ; --*
lin distinguish_5_V = variants {mkV "identificar" ; mkV "out" ; } ; --*
lin distinguishable_A = variants {mkA "distiguivel" ; mkA "que" ; } ; --*
lin distinguished_1_A = variants {mkA "distinto" ; mkA "notável" ; } ; --*
lin distinguished_2_A = mkA "distinto" ; --*
lin distort_1_V2 = mkV2 (mkV "distorcer") ; --*
lin distort_2_V2 = mkV2 (mkV "torcer") ; --*
lin distort_3_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "empenar") ; } ; --*
lin distort_4_V2 = mkV2 (mkV "colorir") ; --*
lin distort_5_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "distorcer") ; } ; --*
lin distortion_1_N = mkN "deformação" ; --*
lin distortion_3_N = variants {mkN "Aberração" ; mkN "aberration" ; } ; --*
lin distortion_6_N = mkN "distorção" ; --*
lin distract_1_V2 = variants {mkV2 (mkV "desviar") ; mkV2 (mkV "distrair") ; } ; --*
lin distract_2_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "transtornar") ; } ; --*
lin distraction_2_N = variants {mkN "distração" ; mkN "distracção" ; } ; --*
lin distraction_3_N = variants {mkN "distração" ; mkN "distracção" ; mkN "divertimento" ; } ; --*
lin distraught_A = variants {mkA "perturbado" ; mkA "transtornado" ; } ; --*
lin distress_1_N = variants {mkN "dor" ; mkN "sofrimento" ; } ; --*
lin distress_2_V2 = variants {mkV2 (mkV "afligir") ; mkV2 (mkV "angustiar") ; } ; --*
lin distressful_A = variants {mkA "doloroso" ; mkA "lamentável" ; } ; --*
lin distressing_1_A = variants {mkA "doloroso" ; mkA "lamentável" ; } ; --*
lin distressing_2_A = variants {mkA "deplorável" ; mkA "lamentável" ; } ; --*
lin distributary_N = mkN "distributário" ; --*
lin distribute_10_V2 = variants {mkV2 (mkV "distribuir") ; mkV2 (mkV "escalonar") ; } ; --*
lin distribute_1_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; } ; --*
lin distribute_2_V2 = variants {mkV2 (mkV "disseminar") ; mkV2 (mkV "distribuir") ; mkV2 (mkV "espalhar") ; } ; --*
lin distribute_4_V2 = variants {mkV2 (mkV "distribuir") ; mkV2 (mkV "out") ; } ; --*
lin distribute_5_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "lançar") ; mkV2 (mkV "on") ; } ; --*
lin distribute_6_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin distribution_2_N = mkN "dispersão" ; --*
lin distribution_3_N = mkN "distribuição" ; --*
lin distribution_4_N = variants {mkN "distribuição" ; mkN "Distribuição" ; } ; --*
lin distributor_1_N = variants {mkN "distribuidor" ; mkN "revendedor" ; } ; --*
lin distributor_2_N = mkN "distribuidor" ; --*
lin distributor_3_N = mkN "distribuidor" ; --*
lin distributor_4_N = variants {mkN "distribuidor" ; mkN "distributor" ; } ; --*
lin district_N = variants {mkN "circunscrição" ; mkN "comarca" ; mkN "condado" ; mkN "districto" ; mkN "distrito" ; mkN "domínio" ; mkN "dominion" ; mkN "país" ; mkN "território" ; } ; --*
lin distrust_1_N = variants {mkN "desconfiança" ; mkN "receio" ; } ; --*
lin distrust_2_N = variants {mkN "desconfiam" ; mkN "desconfiança" ; } ; --*
lin distrustfulness_N = variants {mkN "desconfiam" ; mkN "desconfiança" ; } ; --*
lin distrust_V2 = mkV2 (mkV "desconfiar") ; --*
lin disturb_1_V2 = variants {mkV2 (mkV "disturbar") ; mkV2 (mkV "perturbar") ; } ; --*
lin disturb_2_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "up") ; } ; --*
lin disturb_3_V2 = variants {mkV2 (mkV "mexer") ; mkV2 (mkV "tocar") ; } ; --*
lin disturb_4_V2 = variants {mkV2 (mkV "disturbar") ; mkV2 (mkV "interromper") ; mkV2 (mkV "perturbar") ; } ; --*
lin disturb_5_V2 = mkV2 (mkV "danificar") ; --*
lin disturbance_2_N = mkN "transtorno" ; --*
lin disturbance_3_N = variants {mkN "bagunça" ; mkN "burly" ; mkN "comoção" ; mkN "confusão" ; mkN "zona" ; } ; --*
lin disturbance_4_N = mkN "contenda" ; --*
lin disturbance_6_N = variants {mkN "disorder" ; mkN "disturbance" ; mkN "Doença" ; } ; --*
lin disturbance_7_N = variants {mkN "estrondo" ; mkN "ruído" ; } ; --*
lin disturbing_A = variants {mkA "doloroso" ; mkA "lamentável" ; } ; --*
lin disulfiram_N = mkN "dissulfiram" ; --*
lin disunite_1_V2 = variants {mkV2 (mkV "descasar") ; mkV2 (mkV "dissociar") ; mkV2 (mkV "separar") ; } ; --*
lin disunite_2_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "partir") ; mkV2 (mkV "separar") ; } ; --*
lin disunity_N = mkN "discordância" ; --*
lin disused_A = variants {mkA "obsoleta" ; mkA "obsoleto" ; } ; --*
lin disuse_N = mkN "falta" ; --*
lin disyllabic_A = mkA "dissílabo" ; --*
lin ditch_1_N = variants {mkN "fossa" ; mkN "trincheira" ; mkN "vala" ; } ; --*
lin ditch_1_V2 = mkV2 (mkV "abandonar") ; --*
lin ditch_3_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "mandar") ; } ; --*
lin ditch_6_V2 = mkV2 (mkV "valar") ; --*
lin dither_1_V = mkV "titubear" ; --*
lin dither_2_V = mkV "incomodar" ; --*
lin dither_N = mkN "rebuliço" ; --*
lin dithyramb_2_N = mkN "ditirambo" ; --*
lin ditto_N = variants {mkN "dito" ; mkN "mark" ; } ; --*
lin diuresis_N = variants {mkN "diurese" ; mkN "Diurese" ; } ; --*
lin divagate_V = mkV "divagar" ; --*
lin divagation_1_N = variants {mkN "excurso" ; mkN "parêntese" ; } ; --*
lin divagation_2_N = variants {mkN "digressão" ; mkN "Digressão" ; } ; --*
lin divan_1_N = variants {mkN "divã" ; mkN "Divã" ; } ; --*
lin diva_N = variants {mkN "donna" ; mkN "primeira-dama" ; } ; --*
lin dive_1_V = mkV "mergulhar" ; --*
lin dive_2_N = mkN "Salto" ; --*
lin dive_2_V = mkV "mergulhar" ; --*
lin dive_3_V = mkV "mergulhar" ; --*
lin diver_2_N = mkN "mergulhador" ; --*
lin diver_3_N = variants {mkN "Gaviidae" ; mkN "mobelha" ; } ; --*
lin diverge_3_V = mkV "divergir" ; --*
lin diverge_4_V = variants {mkV "desviar" ; mkV "variar" ; } ; --*
lin divergence_1_N = mkN "divergência" ; --*
lin divergence_2_N = mkN "diferença" ; --*
lin divergence_3_N = mkN "divergência" ; --*
lin divergence_4_N = variants {mkN "discordância" ; mkN "discrepância" ; } ; --*
lin divergency_1_N = mkN "divergência" ; --*
lin divergency_2_N = mkN "divergência" ; --*
lin divergent_1_A = variants {mkA "anômalo" ; mkA "divergente" ; } ; --*
lin divergent_2_A = mkA "divergente" ; --*
lin divers_A = variants {mkA "diferente" ; mkA "distinto" ; mkA "diverso" ; mkA "que" ; } ; --*
lin diverse_1_A = variants {mkA "diferente" ; mkA "distinto" ; mkA "diverso" ; mkA "que" ; } ; --*
lin diverse_2_A = variants {mkA "diverso" ; mkA "vários" ; } ; --*
lin diverseness_N = mkN "diversidade" ; --*
lin diversification_1_N = mkN "diversificação" ; --*
lin diversify_1_V2 = mkV2 (mkV "diversificar") ; --*
lin diversify_2_V = variants {mkV "diversificar" ; mkV "irradiar" ; } ; --*
lin diversify_3_V = variants {mkV "diversificar" ; mkV "out" ; } ; --*
lin diversion_1_N = variants {mkN "diversão" ; mkN "recreaçao" ; } ; --*
lin diversion_2_N = variants {mkN "digressão" ; mkN "Digressão" ; } ; --*
lin diversity_1_N = mkN "diversidade" ; --*
lin diversity_2_N = mkN "diversidade" ; --*
lin divert_1_V2 = mkV2 (mkV "desviar") ; --*
lin divert_3_V2 = variants {mkV2 (mkV "divertir") ; mkV2 (mkV "entreter") ; } ; --*
lin diverticulitis_N = variants {mkN "diverticulite" ; mkN "Diverticulite" ; } ; --*
lin diverticulosis_N = mkN "diverticulose" ; --*
lin diverticulum_N = mkN "divertículo" ; --*
lin divertimento_N = mkN "serenata" ; --*
lin divest_1_V2 = mkV2 (mkV "privar") ; --*
lin divest_4_V2 = variants {mkV2 (mkV "desnudar-se") ; mkV2 (mkV "despir-se") ; } ; --*
lin dividable_A = mkA "divisível" ; --*
lin divide_1_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "fracionar") ; mkV2 (mkV "separar") ; mkV2 (mkV "up") ; } ; --*
lin divide_2_N = variants {mkN "cumeeira" ; mkN "divisória" ; mkN "horário" ; mkN "parting" ; } ; --*
lin divide_2_V2 = mkV2 (mkV "dividir") ; --*
lin divide_3_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin divide_4_V = variants {mkV "dividir" ; mkV "separar" ; } ; --*
lin divide_5_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin divide_5_V = variants {mkV "dividir" ; mkV "separar" ; } ; --*
lin divide_6_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "partir") ; mkV2 (mkV "separar") ; } ; --*
lin dividend_1_N = mkN "dividendo" ; --*
lin dividend_2_N = mkN "dividendo" ; --*
lin dividend_3_N = mkN "dividendo" ; --*
lin divider_3_N = variants {mkN "divisória" ; mkN "parede" ; mkN "paredes" ; } ; --*
lin divination_2_N = variants {mkN "profecia" ; mkN "Profecia" ; mkN "Profecias" ; } ; --*
lin divination_3_N = variants {mkN "Artes" ; mkN "divinação" ; mkN "telling" ; } ; --*
lin divinatory_2_A = mkA "hipotético" ; --*
lin divine_1_A = mkA "divino" ; --*
lin divine_1_N = variants {mkN "Almighty" ; mkN "Senhor" ; mkN "Todo-Poderoso" ; } ; --*
lin divine_1_V2 = mkV2 (mkV "adivinhar") ; --*
lin divine_1_V = mkV "adivinhar" ; --*
lin divine_2_A = mkA "divino" ; --*
lin divine_2_N = variants {mkN "clérigo" ; mkN "Clérigo" ; mkN "eclesiástico" ; mkN "pastor" ; } ; --*
lin divine_3_A = mkA "divino" ; --*
lin divine_4_A = mkA "divino" ; --*
lin divine_5_A = mkA "divino" ; --*
lin divine_6_A = variants {mkA "divino" ; mkA "sublime" ; } ; --*
lin diviner_N = variants {mkN "adivinhadeiro" ; mkN "adivinhador" ; } ; --*
lin diving_2_N = mkN "Salto" ; --*
lin diving_board_N = mkN "board" ; --*
lin diving_dress_N = variants {mkN "dress" ; mkN "suit" ; } ; --*
lin diving_suit_N = variants {mkN "dress" ; mkN "suit" ; } ; --*
lin divinity_1_N = variants {mkN "deidade" ; mkN "Deidades" ; mkN "deus" ; mkN "Deus" ; mkN "deusa" ; mkN "divindade" ; mkN "divinidade" ; } ; --*
lin divinity_2_N = mkN "divindade" ; --*
lin divinity_4_N = mkN "teologia" ; --*
lin divisible_A = mkA "divisível" ; --*
lin division_11_N = mkN "divisão" ; --*
lin division_12_N = variants {mkN "divisão" ; mkN "partição" ; mkN "segmentação" ; mkN "separação" ; } ; --*
lin division_1_N = mkN "Divisão" ; --*
lin division_2_N = mkN "componente" ; --*
lin division_3_N = mkN "divisão" ; --*
lin division_4_N = variants {mkN "departamento" ; mkN "divisão" ; } ; --*
lin division_5_N = mkN "divisão" ; --*
lin division_6_N = mkN "classe" ; --*
lin divisional_2_A = mkA "divisório" ; --*
lin divisor_1_N = mkN "divisor" ; --*
lin divisor_2_N = mkN "divisor" ; --*
lin divorce_1_V2 = variants {mkV2 (mkV "descasar") ; mkV2 (mkV "dissociar") ; mkV2 (mkV "separar") ; } ; --*
lin divorce_2_V2 = variants {mkV2 (mkV "divorciar") ; mkV2 (mkV "up") ; } ; --*
lin divorce_N = variants {mkN "Divorcio" ; mkN "divórcio" ; } ; --*
lin divulgence_N = mkN "revelação" ; --*
lin divulge_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin dixie_1_N = variants {mkN "Estados" ; mkN "States" ; } ; --*
lin dizygotic_A = mkA "dizigótico" ; --*
lin dizziness_N = variants {mkN "tontura" ; mkN "Tontura" ; mkN "vertigem" ; } ; --*
lin dizzy_1_A = variants {mkA "com" ; mkA "que" ; mkA "tonto" ; mkA "vertiginoso" ; } ; --*
lin dizzy_2_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin dizzy_V2 = mkV2 (mkV "tontear") ; --*
lin djibouti_1_PN = variants {mkPN "Djibouti" ; mkPN "Djibuti" ; mkPN "Jibuti" ; mkPN "of" ; } ; --*
lin djibouti_2_PN = variants {mkPN "and" ; mkPN "Djibouti" ; mkPN "Jibuti" ; mkPN "of" ; } ; --*
lin djiboutian_A = variants {mkA "djibutiano" ; mkA "djibutiense" ; mkA "jibutiano" ; mkA "jibutiense" ; } ; --*
lin djinn_1_N = variants {mkN "Génio" ; mkN "gênio" ; mkN "Gênio" ; } ; --*
lin dj_N = variants {mkN "DJ" ; mkN "jockey" ; } ; --*
lin djs_N = variants {mkN "DJ" ; mkN "jockey" ; } ; --*
lin dm_1_N = variants {mkN "diabetes" ; mkN "Diabetes" ; mkN "mellitus" ; } ; --*
lin dm_2_N = variants {mkN "decímetro" ; mkN "Decímetro" ; } ; --*
lin dna_N = variants {mkN "acid" ; mkN "DNA" ; } ; --*
lin do_10_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "servir") ; } ; --*
lin do_11_V2 = variants {mkV2 (mkV "administrar") ; mkV2 (mkV "safar-se") ; } ; --*
lin do_1_N = mkN "festa" ; --*
lin do_2_N = mkN "dó" ; --*
lin do_2_V2 = variants {mkV2 (mkV "desempenhar") ; mkV2 (mkV "executar") ; mkV2 (mkV "fazer") ; } ; --*
lin do_3_V2 = variants {mkV2 (mkV "cumprir") ; mkV2 (mkV "desempenhar") ; mkV2 (mkV "realizar") ; } ; --*
lin do_5_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "provocar") ; } ; --*
lin do_6_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "praticar") ; } ; --*
lin do_7_V = variants {mkV "bastar" ; mkV "ser" ; } ; --*
lin do_8_V2 = mkV2 (mkV "fazer") ; --*
lin do_9_V2 = variants {mkV2 (mkV "agir") ; mkV2 (mkV "atuar") ; mkV2 (mkV "comportar-se") ; mkV2 (mkV "fazer") ; mkV2 (mkV "parecer") ; } ; --*
lin dobra_N = mkN "dobra" ; --*
lin docent_N = mkN "docente" ; --*
lin docile_1_A = mkA "dócil" ; --*
lin docile_2_A = mkA "dócil" ; --*
lin docile_3_A = mkA "dócil" ; --*
lin docility_N = mkN "docilidade" ; --*
lin dock_1_N = mkN "recolheràgaragem" ; --*
lin dock_3_N = variants {mkN "ancoradouro" ; mkN "molhe" ; mkN "píer" ; mkN "plataforma" ; } ; --*
lin dock_5_N = variants {mkN "doca" ; mkN "facility" ; } ; --*
lin dockage_2_N = variants {mkN "doca" ; mkN "facility" ; } ; --*
lin docker_N = variants {mkN "carregador" ; mkN "estivador" ; mkN "worker" ; } ; --*
lin docket_2_N = variants {mkN "cronograma" ; mkN "horário" ; mkN "ordem" ; mkN "plano" ; mkN "programa" ; } ; --*
lin doctor_1_N = variants {mkN "doutor" ; mkN "médico" ; } ; --*
lin doctor_1_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "batizar") ; mkV2 (mkV "up") ; } ; --*
lin doctor_2_N = variants {mkN "doutor" ; mkN "Doutor" ; mkN "of" ; } ; --*
lin doctor_2_V2 = mkV2 (mkV "medicar") ; --*
lin doctor_3_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "emendar") ; mkV2 (mkV "on") ; mkV2 (mkV "reparar") ; mkV2 (mkV "up") ; } ; --*
lin doctor_4_N = variants {mkN "doutor" ; mkN "Dr." ; mkN "Ph.D." ; } ; --*
lin doctorate_N = variants {mkN "degree" ; mkN "doutor" ; mkN "doutorado" ; mkN "Doutorado" ; } ; --*
lin doctrine_N = variants {mkN "doutrina" ; mkN "filosofia" ; mkN "of" ; mkN "system" ; } ; --*
lin document_1_N = variants {mkN "document" ; mkN "documento" ; mkN "documentos" ; } ; --*
lin document_1_V2 = mkV2 (mkV "documentar") ; --*
lin document_2_N = variants {mkN "documento" ; mkN "documentos" ; } ; --*
lin document_2_V2 = mkV2 (mkV "documentar") ; --*
lin document_3_N = mkN "documento" ; --*
lin document_4_N = variants {mkN "arquivo" ; mkN "file" ; } ; --*
lin documentary_1_A = mkA "documental" ; --*
lin documentary_2_A = mkA "documental" ; --*
lin documentary_N = variants {mkN "Documentario" ; mkN "film" ; } ; --*
lin documentation_1_N = mkN "corroboração" ; --*
lin documentation_2_N = variants {mkN "documentação" ; mkN "documentation" ; } ; --*
lin documentation_3_N = mkN "documentação" ; --*
lin doddery_A = mkA "senil" ; --*
lin dodecagon_N = mkN "dodecágono" ; --*
lin dodecahedron_N = mkN "dodecaedro" ; --*
lin dodge_3_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin dodger_1_N = mkN "raposo" ; --*
lin dodgy_1_A = mkA "incerto" ; --*
lin dodgy_2_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin dodo_1_N = variants {mkN "fósseis" ; mkN "fóssil" ; } ; --*
lin dodo_2_N = variants {mkN "cucullatus" ; mkN "Dodo" ; mkN "dodó" ; mkN "dodô" ; } ; --*
lin doe_1_N = variants {mkN "Department" ; mkN "Energia" ; mkN "of" ; } ; --*
lin doer_N = variants {mkN "agente" ; mkN "fazedor" ; mkN "realizador" ; mkN "trabalhador" ; } ; --*
lin dog_1_N = variants {mkN "cão" ; mkN "dog" ; mkN "familiaris" ; } ; --*
lin dog_5_N = variants {mkN "cachorro-quente" ; mkN "dog" ; mkN "salsicha" ; } ; --*
lin dog_6_N = mkN "prendedor" ; --*
lin dog_collar_3_N = variants {mkN "colar" ; mkN "collar" ; } ; --*
lin doge_N = mkN "doge" ; --*
lin dogfight_2_N = variants {mkN "batalha" ; mkN "briga" ; mkN "combate" ; mkN "luta" ; } ; --*
lin dogfight_3_N = variants {mkN "Dogfight" ; mkN "Dog-fight" ; } ; --*
lin dogfish_1_N = variants {mkN "Amia" ; mkN "calva" ; } ; --*
lin dogfish_2_N = mkN "cação" ; --*
lin doggedness_N = variants {mkN "empenho" ; mkN "persistência" ; mkN "tenacidade" ; } ; --*
lin doghouse_1_N = variants {mkN "canil" ; mkN "casota" ; mkN "house" ; } ; --*
lin dogma_1_N = mkN "dogma" ; --*
lin dogma_2_N = mkN "dogma" ; --*
lin dogmatic_1_A = mkA "dogmático" ; --*
lin dogmatic_2_A = mkA "dogmático" ; --*
lin dogmatic_3_A = mkA "dogmático" ; --*
lin dogmatism_N = variants {mkN "fanatismo" ; mkN "preconceito" ; } ; --*
lin dogtooth_2_N = variants {mkN "dente" ; mkN "tooth" ; } ; --*
lin dog_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin dogwood_1_N = variants {mkN "cornus" ; mkN "tree" ; } ; --*
lin dogwood_2_N = mkN "cornus" ; --*
lin doh_N = mkN "dó" ; --*
lin dol_2_N = variants {mkN "Department" ; mkN "of" ; mkN "trabalho" ; mkN "Trabalho" ; } ; --*
lin doldrums_2_N = mkN "zona" ; --*
lin dole_1_N = mkN "esmola" ; --*
lin doleful_A = variants {mkA "lutuoso" ; mkA "triste" ; } ; --*
lin dolichocephalic_A = mkA "dolicocefálico" ; --*
lin dolichocephaly_N = mkN "dolicocefalia" ; --*
lin doll_1_N = variants {mkN "boneca" ; mkN "boneco" ; mkN "Bonecos" ; } ; --*
lin doll_2_N = variants {mkN "brasa" ; mkN "franguinha" ; mkN "garota" ; mkN "gata" ; mkN "menina" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin dollar_1_N = variants {mkN "dólar" ; mkN "Dólar" ; } ; --*
lin dollar_2_N = variants {mkN "bill" ; mkN "dólar" ; mkN "dollar" ; } ; --*
lin dollar_3_N = mkN "dólar" ; --*
lin dollar_4_N = variants {mkN "dólar" ; mkN "mark" ; mkN "sign" ; } ; --*
lin dollhouse_2_N = variants {mkN "casa" ; mkN "house" ; } ; --*
lin dolly_3_N = variants {mkN "boneca" ; mkN "boneco" ; mkN "Bonecos" ; } ; --*
lin dolly_3_PN = variants {mkPN "boneca" ; mkPN "boneco" ; mkPN "Bonecos" ; } ; --*
lin dolmen_N = variants {mkN "cromeleque" ; mkN "Dolmen" ; mkN "tomb" ; } ; --*
lin dolomite_2_N = variants {mkN "dolomita" ; mkN "spar" ; } ; --*
lin dolor_N = mkN "dor" ; --*
lin dolour_N = mkN "dor" ; --*
lin dolphin_1_N = mkN "golfinho" ; --*
lin dolphin_2_N = variants {mkN "boto" ; mkN "delfim" ; mkN "Delphinidae" ; mkN "golfinho" ; } ; --*
lin dolphinfish_2_N = mkN "golfinho" ; --*
lin dolt_N = variants {mkN "estúpido" ; mkN "fish" ; mkN "head" ; mkN "idiota" ; mkN "imbecil" ; mkN "person" ; } ; --*
lin domain_1_N = variants {mkN "domínio" ; mkN "esfera" ; } ; --*
lin domain_2_N = mkN "domínio" ; --*
lin domain_3_N = variants {mkN "domínio" ; mkN "of" ; } ; --*
lin domain_5_N = variants {mkN "base" ; mkN "domain" ; mkN "saber" ; } ; --*
lin dome_4_N = variants {mkN "cúpula" ; mkN "domo" ; } ; --*
lin domestic_1_A = variants {mkA "doméstica" ; mkA "domesticada" ; mkA "domesticado" ; } ; --*
lin domestic_2_A = variants {mkA "doméstica" ; mkA "doméstico" ; } ; --*
lin domestic_3_A = variants {mkA "caseiro" ; mkA "doméstico" ; } ; --*
lin domesticate_1_V2 = variants {mkV2 (mkV "cultivar") ; mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin domesticate_2_V2 = variants {mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin domesticate_3_V2 = mkV2 (mkV "domesticar") ; --*
lin domestication_1_N = mkN "domesticação" ; --*
lin domestication_2_N = mkN "domesticação" ; --*
lin domestication_3_N = mkN "domesticação" ; --*
lin domestic_N = variants {mkN "doméstico" ; mkN "help" ; mkN "servant" ; } ; --*
lin domicile_1_N = variants {mkN "domicílio" ; mkN "residence" ; } ; --*
lin domicile_2_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "habitação" ; mkN "house" ; mkN "lar" ; mkN "morada" ; mkN "moradia" ; mkN "residência" ; } ; --*
lin domiciliary_A = mkA "domiciliário" ; --*
lin dominance_1_N = variants {mkN "dominância" ; mkN "Lateralidade" ; } ; --*
lin dominance_2_N = variants {mkN "domínio" ; mkN "superioridade" ; } ; --*
lin dominance_4_N = mkN "autorização" ; --*
lin dominant_1_A = mkA "dominante" ; --*
lin dominant_1_N = mkN "dominante" ; --*
lin dominant_2_A = mkA "dominante" ; --*
lin dominant_3_A = mkA "predominante" ; --*
lin dominate_1_V = variants {mkV "comandar" ; mkV "dominar" ; mkV "mandar" ; mkV "predominar" ; mkV "reinar" ; } ; --*
lin dominate_2_V2 = mkV2 (mkV "dominar") ; --*
lin dominate_3_V2 = variants {mkV2 (mkV "dirigir") ; mkV2 (mkV "dominar") ; mkV2 (mkV "reger") ; } ; --*
lin dominate_4_V2 = mkV2 (mkV "eclipsar") ; --*
lin domination_1_N = mkN "dominação" ; --*
lin domination_2_N = mkN "supremacia" ; --*
lin dominatrix_N = variants {mkN "dominatrix" ; mkN "Dominatrix" ; } ; --*
lin domineer_V = variants {mkV "dominar" ; mkV "tiranizar" ; } ; --*
lin dominica_1_PN = variants {mkPN "Domingos" ; mkPN "Dominica" ; mkPN "Domínica" ; mkPN "of" ; } ; --*
lin dominical_2_A = variants {mkA "do" ; mkA "dominical" ; } ; --*
lin dominican_1_A = mkA "dominicano" ; --*
lin dominican_1_N = variants {mkN "Friar" ; mkN "preacher" ; mkN "Religiosos" ; } ; --*
lin dominic_PN = variants {mkPN "de" ; mkPN "Domingos" ; mkPN "Dominic" ; } ; --*
lin dominion_1_N = mkN "domínio" ; --*
lin dominion_2_N = variants {mkN "circunscrição" ; mkN "comarca" ; mkN "condado" ; mkN "districto" ; mkN "distrito" ; mkN "domínio" ; mkN "dominion" ; mkN "país" ; mkN "território" ; } ; --*
lin dominion_3_N = mkN "domínio" ; --*
lin domino_1_N = variants {mkN "Domino" ; mkN "Fats" ; } ; --*
lin domino_2_N = mkN "dominó" ; --*
lin domino_4_N = mkN "dominó" ; --*
lin dominoes_1_N = mkN "dominó" ; --*
lin don_1_N = mkN "senhor" ; --*
lin don_2_N = variants {mkN "preceptor" ; mkN "Preceptor" ; } ; --*
lin don_5_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin donate_V2 = variants {mkV2 (mkV "brindar") ; mkV2 (mkV "dar") ; mkV2 (mkV "doar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "oferecer") ; mkV2 (mkV "presentear") ; } ; --*
lin donation_1_N = variants {mkN "contribuição" ; mkN "doação" ; mkN "donativo" ; } ; --*
lin donation_2_N = variants {mkN "contributo" ; mkN "doação" ; } ; --*
lin donetsk_PN = mkPN "Donetsk" ; --*
lin dongle_N = mkN "dongle" ; --*
lin donjon_N = variants {mkN "torre" ; mkN "Torre" ; } ; --*
lin donkey_2_N = variants {mkN "asinus" ; mkN "ass" ; mkN "burro" ; mkN "jegue" ; mkN "jumento" ; } ; --*
lin donkey_work_N = mkN "trabalho" ; --*
lin donnish_A = variants {mkA "pedante" ; mkA "petimetre" ; } ; --*
lin donor_1_N = variants {mkN "doador" ; mkN "patrocinador" ; } ; --*
lin donor_2_N = mkN "doador" ; --*
lin don_V2 = variants {mkV2 (mkV "caber") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "pôr") ; mkV2 (mkV "usar") ; mkV2 (mkV "vestir") ; } ; --*
lin doodad_N = variants {mkN "coisa" ; mkN "coisas" ; mkN "negócio" ; mkN "troço" ; } ; --*
lin doodlebug_2_N = variants {mkN "bomb" ; mkN "bomba" ; } ; --*
lin doom_1_V2 = variants {mkV2 (mkV "designar") ; mkV2 (mkV "destinar") ; } ; --*
lin doom_2_V2 = variants {mkV2 (mkV "amaldiçoar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "sentenciar") ; } ; --*
lin doom_N = variants {mkN "dia" ; mkN "fim" ; mkN "of" ; } ; --*
lin doomsday_1_PN = variants {mkPN "Day" ; mkPN "dia" ; mkPN "Judgement" ; mkPN "Judgment" ; mkPN "of" ; } ; --*
lin doomsday_2_PN = variants {mkPN "dia" ; mkPN "fim" ; mkPN "of" ; } ; --*
lin door_1_N = variants {mkN "porta" ; mkN "portão" ; mkN "Portas" ; } ; --*
lin door_2_N = variants {mkN "access" ; mkN "acesso" ; mkN "porta" ; mkN "portão" ; mkN "pórtico" ; } ; --*
lin door_5_N = variants {mkN "porta" ; mkN "portão" ; } ; --*
lin doorbell_N = mkN "campainha" ; --*
lin doorhandle_N = mkN "maçaneta" ; --*
lin doorjamb_N = variants {mkN "portal" ; mkN "umbral" ; } ; --*
lin doorkeeper_3_N = variants {mkN "guard" ; mkN "porteiro" ; mkN "porter" ; } ; --*
lin doorknob_N = mkN "maçaneta" ; --*
lin doorlock_N = mkN "fechadura" ; --*
lin doorman_N = variants {mkN "guard" ; mkN "porteiro" ; mkN "porter" ; } ; --*
lin doorpost_N = variants {mkN "portal" ; mkN "umbral" ; } ; --*
lin doorsill_N = variants {mkN "limiar" ; mkN "umbral" ; } ; --*
lin doorstep_N = variants {mkN "limiar" ; mkN "umbral" ; } ; --*
lin doorway_N = variants {mkN "access" ; mkN "acesso" ; mkN "porta" ; mkN "portão" ; mkN "pórtico" ; } ; --*
lin dopamine_N = mkN "dopamina" ; --*
lin dope_1_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin dope_1_V2 = variants {mkV2 (mkV "dopar") ; mkV2 (mkV "drogar") ; } ; --*
lin dope_2_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; } ; --*
lin dope_2_V2 = mkV2 (mkV "dopar") ; --*
lin dope_3_N = variants {mkN "coca" ; mkN "cola" ; } ; --*
lin dope_3_V2 = variants {mkV2 (mkV "drogar") ; mkV2 (mkV "up") ; } ; --*
lin dopey_1_A = mkA "estúpido" ; --*
lin doric_A = mkA "dórico" ; --*
lin doris_1_PN = variants {mkPN "Doris" ; mkPN "Dóris" ; } ; --*
lin dormancy_2_N = mkN "dormência" ; --*
lin dormitory_1_N = variants {mkN "dormitório" ; mkN "hall" ; mkN "residence" ; } ; --*
lin dormitory_2_N = variants {mkN "dormitório" ; mkN "room" ; } ; --*
lin dorm_N = variants {mkN "dormitório" ; mkN "hall" ; mkN "residence" ; } ; --*
lin dormouse_N = variants {mkN "arganaz" ; mkN "lirăo" ; } ; --*
lin dorsal_1_A = variants {mkA "crista" ; mkA "dorsal" ; } ; --*
lin dorsal_2_A = mkA "dorsal" ; --*
lin dorsum_1_N = variants {mkN "coluna" ; mkN "costas" ; mkN "lombo" ; } ; --*
lin dorsum_2_N = mkN "dorso" ; --*
lin dortmund_PN = mkPN "Dortmund" ; --*
lin dory_1_N = variants {mkN "bote" ; mkN "pequeno" ; } ; --*
lin dosage_1_N = variants {mkN "dosagem" ; mkN "dosagens" ; mkN "dose" ; mkN "Dose" ; } ; --*
lin dosage_2_N = mkN "dose" ; --*
lin dose_1_N = mkN "dose" ; --*
lin dose_1_V2 = mkV2 (mkV "dosar") ; --*
lin dose_2_N = variants {mkN "dosagem" ; mkN "dosagens" ; mkN "dose" ; mkN "Dose" ; } ; --*
lin dose_2_V2 = variants {mkV2 (mkV "dopar") ; mkV2 (mkV "drogar") ; mkV2 (mkV "narcotizar") ; } ; --*
lin dose_3_N = variants {mkN "curse" ; mkN "disease" ; mkN "Doença" ; mkN "infection" ; mkN "itch" ; mkN "transmitted" ; } ; --*
lin dose_4_N = variants {mkN "breaker" ; mkN "in" ; mkN "Lucy" ; mkN "pane" ; mkN "toons" ; } ; --*
lin dosemeter_1_N = mkN "dosímetro" ; --*
lin dosimetry_N = mkN "dosimetria" ; --*
lin dossier_N = mkN "dossiê" ; --*
lin dot_1_N = mkN "ponto" ; --*
lin dot_2_N = variants {mkN "of" ; mkN "Transporte" ; } ; --*
lin dot_2_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "salpicar") ; } ; --*
lin dot_3_N = mkN "ponto" ; --*
lin dot_4_N = variants {mkN "breaker" ; mkN "in" ; mkN "Lucy" ; mkN "pane" ; mkN "toons" ; } ; --*
lin dotage_N = variants {mkN "childhood" ; mkN "senilidade" ; } ; --*
lin dote_2_V = mkV "adorar" ; --*
lin dotty_1_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin double_1_A = variants {mkA "dúplice" ; mkA "duplo" ; } ; --*
lin double_1_N = variants {mkN "hit" ; mkN "Rebatida" ; } ; --*
lin double_1_V = variants {mkV "duplicar" ; mkV "multiplicar" ; } ; --*
lin double_2_A = mkA "binário" ; --*
lin double_2_N = variants {mkN "dublê" ; mkN "man" ; mkN "woman" ; } ; --*
lin double_3_A = mkA "duplo" ; --*
lin double_3_N = mkN "sósia" ; --*
lin double_4_N = mkN "dobro" ; --*
lin double_5_A = mkA "bivalente" ; --*
lin double_6_V2 = mkV2 (mkV "replicar") ; --*
lin double_check_V2 = variants {mkV2 (mkV "rechecar") ; mkV2 (mkV "reexaminar") ; mkV2 (mkV "reverificar") ; } ; --*
lin double_dealer_N = variants {mkN "informante" ; mkN "traição" ; mkN "traidor" ; } ; --*
lin double_decker_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin double_think_N = mkN "duplipensar" ; --*
lin double_up_3_V = variants {mkV "dobrar" ; mkV "up" ; } ; --*
lin doubt_1_N = variants {mkN "dúvida" ; mkN "incerteza" ; } ; --*
lin doubt_1_VS = variants {mkVS (mkV "duvidar") ; mkVS (mkV "estar") ; mkVS (mkV "ter") ; } ; --*
lin doubt_2_N = variants {mkN "dúvida" ; mkN "questão" ; } ; --*
lin doubt_2_V2 = mkV2 (mkV "duvidar") ; --*
lin doubtful_1_A = variants {mkA "duvidoso" ; mkA "question" ; } ; --*
lin doubtful_2_A = mkA "duvidoso" ; --*
lin doubting_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin doubtless_1_Adv = variants {mkAdv "indubitável" ; mkAdv "indubitavelmente" ; mkAdv "indubitàvelmente" ; mkAdv "sem" ; } ; --*
lin douche_2_N = variants {mkN "lavagem" ; mkN "Lavagem" ; } ; --*
lin dough_1_N = variants {mkN "massa" ; mkN "pasta" ; } ; --*
lin dough_2_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin doughnut_1_N = variants {mkN "anel" ; mkN "ring" ; } ; --*
lin doughnut_2_N = variants {mkN "rosca" ; mkN "rosquinha" ; mkN "sonho" ; } ; --*
lin douglas_PN = variants {mkPN "A." ; mkPN "Arnold" ; mkPN "Giant" ; mkPN "Stephen" ; } ; --*
lin dour_1_A = variants {mkA "porfiado" ; mkA "teimoso" ; mkA "tenaz" ; } ; --*
lin dour_3_A = mkA "taciturno" ; --*
lin douroucouli_N = variants {mkN "Aotus" ; mkN "trivirgatus" ; } ; --*
lin douse_1_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin douse_4_V2 = mkV2 (mkV "imergir") ; --*
lin douse_7_V2 = variants {mkV2 (mkV "demolhar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "molhar") ; } ; --*
lin dove_1_N = mkN "pombo" ; --*
lin dove_4_N = mkN "pombo" ; --*
lin dovecote_N = variants {mkN "pombal" ; mkN "Pombal" ; } ; --*
lin dowdy_2_A = variants {mkA "antiquado" ; mkA "démodé" ; mkA "ultrapassado" ; } ; --*
lin dower_1_N = mkN "dote" ; --*
lin dower_V2 = mkV2 (mkV "dotar") ; --*
lin down_1_A = mkA "abaixo" ; --*
lin down_1_Adv = variants {mkAdv "abaixo" ; mkAdv "de" ; mkAdv "juso" ; mkAdv "para" ; } ; --*
lin down_1_N = variants {mkN "feather" ; mkN "pena" ; } ; --*
lin down_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin down_2_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "consumir") ; mkV2 (mkV "devorar") ; mkV2 (mkV "through") ; } ; --*
lin down_4_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin down_5_N = mkN "madeixa" ; --*
lin down_6_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; mkV2 (mkV "refinar") ; } ; --*
lin downcast_2_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin downfall_1_N = variants {mkN "queda" ; mkN "ruína" ; } ; --*
lin downfall_2_N = mkN "precipitação" ; --*
lin downfall_3_N = mkN "perda" ; --*
lin downgrade_V2 = mkV2 (mkV "rebaixar") ; --*
lin downhearted_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin downhill_1_N = mkN "descente" ; --*
lin downhill_2_N = variants {mkN "descida" ; mkN "Descida" ; } ; --*
lin downplay_1_V2 = mkV2 (mkV "minimizar") ; --*
lin downpour_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin downright_2_A = variants {mkA "absoluto" ; mkA "completo" ; mkA "total" ; } ; --*
lin downright_Adv = mkAdv "francamente" ; --*
lin downsize_2_V2 = mkV2 (mkV "redimensionar") ; --*
lin downtown_A = mkA "central" ; --*
lin downward_Adv = variants {mkAdv "abaixo" ; mkAdv "de" ; mkAdv "juso" ; mkAdv "para" ; } ; --*
lin downwards_Adv = variants {mkAdv "abaixo" ; mkAdv "de" ; mkAdv "juso" ; mkAdv "para" ; } ; --*
lin downy_1_A = variants {mkA "fofa" ; mkA "fofo" ; } ; --*
lin downy_2_A = mkA "pubescente" ; --*
lin dowry_1_N = mkN "dote" ; --*
lin dowse_4_V2 = variants {mkV2 (mkV "demolhar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "molhar") ; } ; --*
lin dowsing_N = mkN "radiestesia" ; --*
lin doxology_N = mkN "doxologia" ; --*
lin doxorubicin_N = mkN "doxorrubicina" ; --*
lin doxycycline_N = mkN "doxiciclina" ; --*
lin doze_N = variants {mkN "cochilo" ; mkN "sesta" ; mkN "soneca" ; } ; --*
lin dozen_N = variants {mkN "12" ; mkN "doze" ; mkN "dúzia" ; } ; --*
lin doze_off_V = variants {mkV "asleep" ; mkV "off" ; mkV "out" ; } ; --*
lin doze_V = variants {mkV "cochilar" ; mkV "dormitar" ; mkV "tirar" ; } ; --*
lin drab_2_A = mkA "sóbrio" ; --*
lin drab_4_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin drachma_2_N = variants {mkN "drachma" ; mkN "dracma" ; } ; --*
lin draft_1_N = variants {mkN "cheque" ; mkN "of" ; } ; --*
lin draft_2_N = mkN "corrente" ; --*
lin draft_3_N = variants {mkN "drawing" ; mkN "esboço" ; } ; --*
lin draft_5_N = variants {mkN "copy" ; mkN "rascunho" ; } ; --*
lin draft_6_N = mkN "calado" ; --*
lin draft_8_N = variants {mkN "gole" ; mkN "trago" ; } ; --*
lin draft_9_N = variants {mkN "alistamento" ; mkN "conscrição" ; mkN "service" ; } ; --*
lin draftee_N = mkN "recruta" ; --*
lin draftsman_1_N = variants {mkN "desenhador" ; mkN "projectista" ; } ; --*
lin draftsman_2_N = mkN "desenhista" ; --*
lin drag_1_N = variants {mkN "arrasto" ; mkN "force" ; } ; --*
lin drag_1_V2 = mkV2 (mkV "arrastar") ; --*
lin drag_1_V = mkV "arrastar" ; --*
lin drag_2_V2 = variants {mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin drag_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "ser") ; mkV2 (mkV "up") ; } ; --*
lin drag_5_V = variants {mkV "back" ; mkV "behind" ; mkV "ficar" ; } ; --*
lin drag_7_V2 = mkV2 (mkV "tirar") ; --*
lin drag_9_V2 = variants {mkV2 (mkV "procurar") ; mkV2 (mkV "revirar") ; } ; --*
lin drag_9_V = variants {mkV "procurar" ; mkV "revirar" ; } ; --*
lin dragnet_2_N = variants {mkN "net" ; mkN "rasca" ; } ; --*
lin dragon_1_N = mkN "dragão" ; --*
lin dragon_2_N = mkN "dragão" ; --*
lin dragon_3_N = variants {mkN "dragão" ; mkN "Dragão" ; mkN "Dragões" ; } ; --*
lin dragon_4_N = variants {mkN "dragão" ; mkN "dragon" ; mkN "lizard" ; } ; --*
lin dragonet_N = mkN "Callionymidae" ; --*
lin dragonfly_N = variants {mkN "darning" ; mkN "doctor" ; mkN "feeder" ; mkN "hawk" ; mkN "libélula" ; mkN "needle" ; } ; --*
lin drain_1_N = variants {mkN "águas" ; mkN "drenagem" ; mkN "dreno" ; } ; --*
lin drain_2_V2 = mkV2 (mkV "drenar") ; --*
lin drain_3_N = variants {mkN "escoadouro" ; mkN "pipe" ; } ; --*
lin drain_3_V2 = mkV2 (mkV "drenar") ; --*
lin drain_4_V2 = variants {mkV2 (mkV "debilitar") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin drainage_basin_N = variants {mkN "albufeira" ; mkN "area" ; mkN "bacia" ; mkN "basin" ; } ; --*
lin drainage_N = variants {mkN "águas" ; mkN "drenagem" ; mkN "dreno" ; } ; --*
lin drainpipe_N = variants {mkN "escoadouro" ; mkN "pipe" ; } ; --*
lin drake_1_N = variants {mkN "Drake" ; mkN "Francis" ; } ; --*
lin drake_2_N = mkN "pato" ; --*
lin dram_5_N = variants {mkN "drachm" ; mkN "dracma" ; mkN "dram" ; } ; --*
lin dram_6_N = variants {mkN "drachma" ; mkN "dracma" ; } ; --*
lin drama_1_N = variants {mkN "drama" ; mkN "play" ; mkN "teatro" ; } ; --*
lin drama_2_N = variants {mkN "drama" ; mkN "event" ; } ; --*
lin drama_3_N = mkN "drama" ; --*
lin dramatic_1_A = mkA "dramático" ; --*
lin dramatic_2_A = variants {mkA "acertado" ; mkA "dramático" ; mkA "espectacular" ; mkA "espetacular" ; mkA "impressionante" ; } ; --*
lin dramatic_3_A = mkA "dramático" ; --*
lin dramatic_4_A = mkA "dramático" ; --*
lin dramatics_2_N = variants {mkN "art" ; mkN "dramaturgia" ; mkN "Dramaturgia" ; mkN "teatro" ; } ; --*
lin dramatist_N = variants {mkN "dramaturgo" ; mkN "Dramaturgo" ; mkN "Dramaturgos" ; } ; --*
lin dramatization_1_N = mkN "dramatização" ; --*
lin dramatization_2_N = mkN "dramatização" ; --*
lin dramatize_2_V2 = mkV2 (mkV "dramatizar") ; --*
lin dramatize_3_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin dramaturgy_N = variants {mkN "art" ; mkN "dramaturgia" ; mkN "Dramaturgia" ; mkN "teatro" ; } ; --*
lin drape_1_N = variants {mkN "cortina" ; mkN "reposteiro" ; } ; --*
lin drape_1_V2 = variants {mkV2 (mkV "drapear") ; mkV2 (mkV "drapejar") ; mkV2 (mkV "guarnecer") ; } ; --*
lin drape_2_V2 = variants {mkV2 (mkV "acomodar") ; mkV2 (mkV "colocar") ; } ; --*
lin drape_3_V2 = variants {mkV2 (mkV "drapear") ; mkV2 (mkV "encapuzar") ; mkV2 (mkV "vestir") ; } ; --*
lin drape_4_V2 = mkV2 (mkV "drapear") ; --*
lin drapery_1_N = variants {mkN "cortina" ; mkN "reposteiro" ; } ; --*
lin drastic_1_A = variants {mkA "drástico" ; mkA "enérgico" ; mkA "violento" ; } ; --*
lin draught_3_N = mkN "corrente" ; --*
lin draught_4_N = mkN "calado" ; --*
lin draught_5_N = variants {mkN "gole" ; mkN "trago" ; } ; --*
lin draughtsman_N = variants {mkN "desenhador" ; mkN "projectista" ; } ; --*
lin draughts_N = variants {mkN "damas" ; mkN "jogo" ; } ; --*
lin draw_10_V2 = mkV2 (mkV "atrair") ; --*
lin draw_13_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin draw_14_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "sortear") ; } ; --*
lin draw_16_V2 = mkV2 (mkV "conduzir") ; --*
lin draw_17_V2 = variants {mkV2 (mkV "sacar") ; mkV2 (mkV "tirar") ; } ; --*
lin draw_1_V2 = variants {mkV2 (mkV "arredar") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin draw_20_V2 = mkV2 (mkV "tirar") ; --*
lin draw_24_V = mkV "forçar" ; --*
lin draw_25_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin draw_27_V2 = mkV2 (mkV "enfileirar") ; --*
lin draw_29_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "passar") ; } ; --*
lin draw_2_N = variants {mkN "atração" ; mkN "card" ; } ; --*
lin draw_30_V2 = mkV2 (mkV "empatar") ; --*
lin draw_34_V2 = variants {mkV2 (mkV "desentranhar") ; mkV2 (mkV "destripar") ; mkV2 (mkV "desventrar") ; mkV2 (mkV "desviscerar") ; mkV2 (mkV "estripar") ; mkV2 (mkV "esventrar") ; } ; --*
lin draw_35_V2 = mkV2 (mkV "moldar") ; --*
lin draw_3_N = mkN "empate" ; --*
lin draw_3_V2 = variants {mkV2 (mkV "delinear") ; mkV2 (mkV "traçar") ; } ; --*
lin draw_5_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin draw_6_V2 = mkV2 (mkV "desenhar") ; --*
lin draw_7_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin draw_8_N = variants {mkN "poker" ; mkN "Pôquer" ; } ; --*
lin draw_8_V2 = mkV2 (mkV "descrever") ; --*
lin draw_9_V2 = mkV2 (mkV "extrair") ; --*
lin draw_back_1_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "afastar-se") ; mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "recuar") ; mkV2 (mkV "retroceder") ; } ; --*
lin drawback_N = variants {mkN "desvantagem" ; mkN "obstáculo" ; } ; --*
lin drawbridge_N = variants {mkN "bridge" ; mkN "ponte" ; } ; --*
lin drawer_1_N = variants {mkN "caixa" ; mkN "gaveta" ; } ; --*
lin drawer_3_N = mkN "desenhista" ; --*
lin drawers_1_N = mkN "calças" ; --*
lin drawers_2_N = variants {mkN "calça" ; mkN "calcinha" ; mkN "roupa" ; } ; --*
lin draw_in_26_V = variants {mkV "atrair" ; mkV "in" ; } ; --*
lin draw_in_5_V = mkV "in" ; --*
lin drawing_1_N = mkN "desenho" ; --*
lin drawing_2_N = variants {mkN "desenho" ; mkN "figura" ; mkN "ilustração" ; mkN "imagem" ; mkN "pintura" ; } ; --*
lin drawing_4_N = mkN "loteria" ; --*
lin draw_off_V = variants {mkV "off" ; mkV "out" ; mkV "tirar" ; } ; --*
lin draw_out_2_V2 = variants {mkV2 (mkV "extender") ; mkV2 (mkV "out") ; mkV2 (mkV "prolongar") ; } ; --*
lin draw_out_3_V2 = mkV2 (mkV "out") ; --*
lin draw_out_4_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin draw_out_6_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin draw_up_4_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin dreadful_1_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin dreadful_2_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin dreadful_3_A = variants {mkA "horrível" ; mkA "pavoroso" ; mkA "terrível" ; } ; --*
lin dreadlock_N = mkN "Dreadlocks" ; --*
lin dread_N = variants {mkN "consternação" ; mkN "dor" ; mkN "medo" ; mkN "pavor" ; mkN "temor" ; } ; --*
lin dread_V2 = variants {mkV2 (mkV "apavorar") ; mkV2 (mkV "recear") ; mkV2 (mkV "temer") ; mkV2 (mkV "ter") ; } ; --*
lin dream_1_N = mkN "sonho" ; --*
lin dream_1_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "devanear") ; mkV2 (mkV "fantasiar") ; mkV2 (mkV "sonhar") ; } ; --*
lin dream_1_V = variants {mkV "desejar" ; mkV "devanear" ; mkV "fantasiar" ; mkV "sonhar" ; } ; --*
lin dream_2_N = mkN "sonho" ; --*
lin dream_2_V = mkV "sonhar" ; --*
lin dream_3_N = variants {mkN "ambição" ; mkN "aspiração" ; mkN "pretensão" ; } ; --*
lin dream_4_N = variants {mkN "dream" ; mkN "sonho" ; } ; --*
lin dreamer_2_N = mkN "idealista" ; --*
lin dreamland_N = variants {mkN "land" ; mkN "terra" ; } ; --*
lin dreamworld_N = variants {mkN "land" ; mkN "terra" ; } ; --*
lin dreamy_1_A = mkA "sonhador" ; --*
lin dreamy_2_A = mkA "lânguido" ; --*
lin drear_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin dreariness_N = variants {mkN "insipidez" ; mkN "tédio" ; } ; --*
lin dreary_2_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin dredge_2_V2 = variants {mkV2 (mkV "procurar") ; mkV2 (mkV "revirar") ; } ; --*
lin dredge_2_V = variants {mkV "procurar" ; mkV "revirar" ; } ; --*
lin dredge_3_V2 = mkV2 (mkV "dragar") ; --*
lin dredge_3_V = mkV "dragar" ; --*
lin dredge_up_V2 = mkV2 (mkV "up") ; --*
lin dregs_N = mkN "borra" ; --*
lin drench_1_V2 = variants {mkV2 (mkV "afundar") ; mkV2 (mkV "encharcar") ; } ; --*
lin drench_4_V2 = variants {mkV2 (mkV "demolhar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "molhar") ; } ; --*
lin drenching_N = mkN "impregnação" ; --*
lin dresden_PN = mkPN "Dresden" ; --*
lin dress_11_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin dress_1_N = mkN "vestido" ; --*
lin dress_1_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "dressed") ; mkV2 (mkV "vestir-se") ; } ; --*
lin dress_1_V = variants {mkV "arrumar" ; mkV "dressed" ; mkV "vestir-se" ; } ; --*
lin dress_2_N = variants {mkN "roupa" ; mkN "traje" ; mkN "vestido" ; mkN "vestuário" ; } ; --*
lin dress_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vestir") ; } ; --*
lin dress_3_N = variants {mkN "apparel" ; mkN "roupa" ; mkN "roupas" ; mkN "vestido" ; mkN "vestuário" ; } ; --*
lin dress_8_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "enfeitar") ; } ; --*
lin dress_8_V = variants {mkV "adornar" ; mkV "enfeitar" ; } ; --*
lin dress_9_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; } ; --*
lin dressage_N = variants {mkN "adestramento" ; mkN "escola" ; } ; --*
lin dress_down_1_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin dresser_1_N = variants {mkN "aparelhador" ; mkN "cómoda" ; mkN "cômodas" ; mkN "gaveteiro" ; mkN "of" ; } ; --*
lin dress_hanger_N = mkN "hanger" ; --*
lin dressing_2_N = mkN "recheio" ; --*
lin dressing_3_N = variants {mkN "Fecundaçao" ; mkN "fecundação" ; mkN "fertilização" ; } ; --*
lin dressing_4_N = variants {mkN "curativo" ; mkN "dressing" ; } ; --*
lin dressing_7_N = mkN "curativo" ; --*
lin dressing_case_N = mkN "case" ; --*
lin dressing_gown_N = variants {mkN "gown" ; mkN "robe" ; mkN "roupão" ; } ; --*
lin dressmaker_N = variants {mkN "costureiro" ; mkN "estilista" ; mkN "modista" ; } ; --*
lin dress_up_1_V = variants {mkV "arrumar" ; mkV "out" ; mkV "up" ; mkV "vestir" ; } ; --*
lin dress_up_2_V2 = variants {mkV2 (mkV "up") ; mkV2 (mkV "vestir") ; } ; --*
lin dress_up_5_V = variants {mkV "up" ; mkV "vestir" ; } ; --*
lin dribble_1_N = mkN "drible" ; --*
lin dribble_1_V = mkV "correr" ; --*
lin dribble_2_N = mkN "baba" ; --*
lin dribble_2_V2 = variants {mkV2 (mkV "gotejar") ; mkV2 (mkV "pingar") ; } ; --*
lin dribble_3_N = mkN "drible" ; --*
lin dribble_4_V = mkV "babar" ; --*
lin driblet_N = mkN "gota" ; --*
lin drier_1_N = variants {mkN "agent" ; mkN "dessecante" ; } ; --*
lin drier_2_N = mkN "secador" ; --*
lin drift_1_N = variants {mkN "arrancada" ; mkN "impulsão" ; } ; --*
lin drift_1_V = variants {mkV "adrift" ; mkV "nadar" ; mkV "vagar" ; } ; --*
lin drift_2_N = mkN "desvio" ; --*
lin drift_2_V = variants {mkV "errar" ; mkV "vagar" ; } ; --*
lin drift_3_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin drift_4_N = mkN "amontoado" ; --*
lin drift_5_N = mkN "tendência" ; --*
lin drift_apart_V = variants {mkV "apart" ; mkV "away" ; } ; --*
lin driftfish_2_N = mkN "Nomeidae" ; --*
lin drifting_N = mkN "drift" ; --*
lin drift_off_V = variants {mkV "asleep" ; mkV "off" ; mkV "out" ; } ; --*
lin drill_1_N = mkN "furadeira" ; --*
lin drill_1_V2 = variants {mkV2 (mkV "cavar") ; mkV2 (mkV "furar") ; mkV2 (mkV "perfurar") ; } ; --*
lin drill_1_V = variants {mkV "cavar" ; mkV "furar" ; mkV "perfurar" ; } ; --*
lin drill_2_V2 = mkV2 (mkV "instruir") ; --*
lin drill_2_V = mkV "instruir" ; --*
lin drill_3_N = variants {mkN "exercício" ; mkN "prática" ; mkN "session" ; } ; --*
lin drill_3_V2 = mkV2 (mkV "praticar") ; --*
lin drill_4_N = variants {mkN "marcha" ; mkN "ordem" ; } ; --*
lin drill_4_V2 = mkV2 (mkV "ensinar") ; --*
lin drill_4_V = mkV "ensinar" ; --*
lin drill_5_V2 = mkV2 (mkV "fazer") ; --*
lin drill_5_V = mkV "fazer" ; --*
lin drilling_2_N = variants {mkN "perfuração" ; mkN "production" ; } ; --*
lin drink_1_N = mkN "bebida" ; --*
lin drink_1_V2 = variants {mkV2 (mkV "beber") ; mkV2 (mkV "tomar") ; } ; --*
lin drink_2_N = mkN "bebida" ; --*
lin drink_2_V = variants {mkV "beber" ; mkV "tomar" ; } ; --*
lin drink_3_N = mkN "bebida" ; --*
lin drink_3_V = mkV "brindar" ; --*
lin drink_4_N = mkN "bebida" ; --*
lin drink_5_N = mkN "deglutição" ; --*
lin drink_5_V = variants {mkV "beber" ; mkV "tomar" ; } ; --*
lin drinkable_A = mkA "potável" ; --*
lin drinker_1_N = mkN "alcoolatra" ; --*
lin drinking_1_N = mkN "bebida" ; --*
lin drinking_2_N = mkN "bebida" ; --*
lin drinking_fountain_N = variants {mkN "bebedouro" ; mkN "fountain" ; } ; --*
lin drinking_water_N = mkN "water" ; --*
lin drink_up_V2 = variants {mkV2 (mkV "the") ; mkV2 (mkV "up") ; } ; --*
lin drip_1_N = mkN "drible" ; --*
lin drip_1_V = variants {mkV "gotejar" ; mkV "pingar" ; } ; --*
lin drip_2_N = mkN "ensopado" ; --*
lin drip_2_V2 = variants {mkV2 (mkV "gotejar") ; mkV2 (mkV "pingar") ; } ; --*
lin dripping_2_N = mkN "ensopado" ; --*
lin drippy_3_A = mkA "sentimental" ; --*
lin drive_10_V = variants {mkV "esforçar" ; mkV "esforçar-se" ; mkV "pressionar" ; } ; --*
lin drive_1_N = variants {mkN "empurrão" ; mkN "forca" ; mkN "force" ; mkN "impulso" ; } ; --*
lin drive_1_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; } ; --*
lin drive_2_V = variants {mkV "dirigir" ; mkV "ir" ; } ; --*
lin drive_3_N = variants {mkN "campanha" ; mkN "causa" ; } ; --*
lin drive_3_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "guiar") ; } ; --*
lin drive_4_N = variants {mkN "caminho" ; mkN "entrada" ; mkN "road" ; } ; --*
lin drive_5_N = mkN "disposição" ; --*
lin drive_8_N = mkN "passeio" ; --*
lin drive_away_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin drive_back_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "repelir") ; } ; --*
lin drive_in_N = variants {mkN "Drive" ; mkN "drive-in" ; } ; --*
lin drivel_1_N = variants {mkN "besteira" ; mkN "bobagem" ; } ; --*
lin drivel_2_N = mkN "baba" ; --*
lin drivel_V = mkV "babar" ; --*
lin drive_out_2_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "out") ; } ; --*
lin driverFem_1_N = variants {mkN "chofer" ; mkN "conductor" ; mkN "condutor" ; mkN "motorista" ; } ; --*
lin driverMasc_1_N = variants {mkN "chofer" ; mkN "conductor" ; mkN "condutor" ; mkN "motorista" ; } ; --*
lin driver_N = variants {mkN "controlador" ; mkN "driver" ; } ; --*
lin driveway_N = variants {mkN "caminho" ; mkN "entrada" ; mkN "road" ; } ; --*
lin driving_2_N = mkN "condução" ; --*
lin drizzle_1_N = variants {mkN "chuvisco" ; mkN "garoa" ; } ; --*
lin drizzle_1_V = variants {mkV "borrifar" ; mkV "chuviscar" ; } ; --*
lin drizzle_2_V = variants {mkV "borrifar" ; mkV "umeceder" ; mkV "umectar" ; } ; --*
lin drogue_2_N = variants {mkN "biruta" ; mkN "cone" ; mkN "sleeve" ; mkN "sock" ; } ; --*
lin drollery_1_N = mkN "comédia" ; --*
lin dromedary_N = variants {mkN "camel" ; mkN "dromedário" ; mkN "dromedarius" ; } ; --*
lin drone_1_N = variants {mkN "abelha-macha" ; mkN "zangão" ; } ; --*
lin drone_1_V = variants {mkV "zinir" ; mkV "zumbir" ; } ; --*
lin drone_2_V = variants {mkV "falar" ; mkV "on" ; } ; --*
lin drone_on_V = variants {mkV "falar" ; mkV "on" ; } ; --*
lin drool_1_N = mkN "mexerico" ; --*
lin drool_1_V = mkV "babar" ; --*
lin drool_2_N = mkN "baba" ; --*
lin drool_2_V = mkV "babar" ; --*
lin droop_1_V2 = mkV2 (mkV "afundar") ; --*
lin droop_1_V = mkV "afundar" ; --*
lin droop_2_V = mkV "pender" ; --*
lin droop_N = mkN "flambagem" ; --*
lin drop_11_V2 = variants {mkV2 (mkV "despender") ; mkV2 (mkV "gastar") ; } ; --*
lin drop_12_V2 = variants {mkV2 (mkV "baixar") ; mkV2 (mkV "cair") ; } ; --*
lin drop_12_V = variants {mkV "baixar" ; mkV "cair" ; } ; --*
lin drop_14_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "despedir") ; mkV2 (mkV "packing") ; } ; --*
lin drop_15_V2 = variants {mkV2 (mkV "gotejar") ; mkV2 (mkV "pingar") ; } ; --*
lin drop_16_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin drop_16_V = variants {mkV "away" ; mkV "jogar" ; mkV "off" ; } ; --*
lin drop_18_V2 = mkV2 (mkV "comer") ; --*
lin drop_19_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "escapar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; mkV2 (mkV "preterir") ; } ; --*
lin drop_1_N = variants {mkN "gota" ; mkN "pérola" ; } ; --*
lin drop_1_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "largar") ; mkV2 (mkV "soltar") ; } ; --*
lin drop_20_V2 = mkV2 (mkV "nivelar") ; --*
lin drop_22_V2 = variants {mkV2 (mkV "degenerar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "deteriorar") ; mkV2 (mkV "piorar") ; } ; --*
lin drop_22_V = variants {mkV "degenerar" ; mkV "degradar" ; mkV "deteriorar" ; mkV "piorar" ; } ; --*
lin drop_2_N = mkN "gota" ; --*
lin drop_2_V2 = mkV2 (mkV "cair") ; --*
lin drop_3_V = variants {mkV "baixar" ; mkV "cair" ; mkV "descer" ; mkV "diminuir" ; } ; --*
lin drop_4_N = variants {mkN "alcantilado" ; mkN "falésia" ; mkN "Falésia" ; mkN "Falésias" ; mkN "penhascos" ; } ; --*
lin drop_4_V = variants {mkV "afundar" ; mkV "down" ; } ; --*
lin drop_6_N = mkN "queda" ; --*
lin drop_6_V2 = mkV2 (mkV "soltar") ; --*
lin drop_7_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "off") ; } ; --*
lin drop_9_V2 = variants {mkV2 (mkV "abater") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; } ; --*
lin drop_away_V = variants {mkV "away" ; mkV "decair" ; mkV "off" ; } ; --*
lin drop_back_2_V = variants {mkV "back" ; mkV "behind" ; mkV "ficar" ; } ; --*
lin droplet_N = variants {mkN "gota" ; mkN "gotícula" ; mkN "gotinha" ; } ; --*
lin drop_off_1_V = mkV "off" ; --*
lin drop_off_2_V = variants {mkV "asleep" ; mkV "off" ; mkV "out" ; } ; --*
lin drop_off_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "behind") ; mkV2 (mkV "off") ; mkV2 (mkV "receder") ; } ; --*
lin drop_off_4_V = variants {mkV "back" ; mkV "behind" ; mkV "off" ; mkV "receder" ; } ; --*
lin drop_off_5_V = variants {mkV "away" ; mkV "decair" ; mkV "off" ; } ; --*
lin drop_out_1_V = variants {mkV "abandonar" ; mkV "by" ; mkV "in" ; mkV "out" ; mkV "up" ; } ; --*
lin droppings_N = variants {mkN "bosta" ; mkN "cocô" ; mkN "esterco" ; mkN "excremento" ; mkN "fezes" ; mkN "matéria" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin dropsical_A = mkA "edematoso" ; --*
lin dropsy_N = variants {mkN "edema" ; mkN "hidropisia" ; } ; --*
lin drosophila_N = variants {mkN "Drosophila" ; mkN "melanogaster" ; } ; --*
lin dross_1_N = mkN "impureza" ; --*
lin dross_2_N = variants {mkN "escória" ; mkN "jorra" ; } ; --*
lin drought_1_N = variants {mkN "seca" ; mkN "secas" ; } ; --*
lin drought_2_N = variants {mkN "seca" ; mkN "secas" ; mkN "Secas" ; } ; --*
lin drove_2_N = variants {mkN "horda" ; mkN "legião" ; mkN "leva" ; mkN "massa" ; mkN "multidão" ; mkN "turba" ; } ; --*
lin drove_3_N = variants {mkN "chisel" ; mkN "cinzel" ; } ; --*
lin drover_N = variants {mkN "pastor" ; mkN "pegureiro" ; } ; --*
lin drown_1_V2 = variants {mkV2 (mkV "afogar") ; mkV2 (mkV "submergir") ; } ; --*
lin drown_2_V2 = mkV2 (mkV "afogar") ; --*
lin drown_3_V = variants {mkV "afogar" ; mkV "afogar-se" ; } ; --*
lin drown_4_V2 = mkV2 (mkV "afogar") ; --*
lin drown_5_V = mkV "nadar" ; --*
lin drown_out_2_V2 = variants {mkV2 (mkV "afogar") ; mkV2 (mkV "submergir") ; } ; --*
lin drowse_1_V2 = variants {mkV2 (mkV "cochilar") ; mkV2 (mkV "dormitar") ; mkV2 (mkV "tirar") ; } ; --*
lin drowse_1_V = variants {mkV "cochilar" ; mkV "dormitar" ; mkV "tirar" ; } ; --*
lin drowse_N = variants {mkN "cochilo" ; mkN "sesta" ; mkN "soneca" ; } ; --*
lin drowsiness_N = mkN "sonolência" ; --*
lin drowsy_A = mkA "sonolento" ; --*
lin drubbing_1_N = mkN "surra" ; --*
lin drubbing_2_N = mkN "surra" ; --*
lin drub_V2 = mkV2 (mkV "destruir") ; --*
lin drudge_2_N = variants {mkN "peão" ; mkN "slave" ; } ; --*
lin drudgery_N = mkN "trabalho" ; --*
lin drudge_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin drug_1_V2 = variants {mkV2 (mkV "dopar") ; mkV2 (mkV "drogar") ; mkV2 (mkV "narcotizar") ; } ; --*
lin drug_2_V2 = variants {mkV2 (mkV "drogar") ; mkV2 (mkV "drugs") ; } ; --*
lin druggist_N = variants {mkN "farmacêutico" ; mkN "pusher" ; mkN "roller" ; } ; --*
lin drug_N = variants {mkN "droga" ; mkN "entorpecente" ; mkN "medicamento" ; mkN "narcótico" ; mkN "produtos" ; mkN "remédio" ; mkN "sonífero" ; } ; --*
lin drugstore_N = variants {mkN "botica" ; mkN "drograria" ; mkN "Farmacia" ; mkN "shop" ; } ; --*
lin druidism_N = mkN "druidismo" ; --*
lin druid_N = mkN "druida" ; --*
lin drum_1_N = variants {mkN "membranofone" ; mkN "Membranofone" ; mkN "Membranofones" ; mkN "tambor" ; mkN "tímpano" ; } ; --*
lin drum_1_V = variants {mkV "bater" ; mkV "batucar" ; } ; --*
lin drum_3_N = mkN "tambor" ; --*
lin drum_3_V = variants {mkV "away" ; mkV "marrar" ; mkV "up" ; } ; --*
lin drum_5_N = variants {mkN "drum" ; mkN "tambor" ; } ; --*
lin drumbeat_2_N = mkN "batida" ; --*
lin drumlin_N = mkN "drumlin" ; --*
lin drummer_N = variants {mkN "baterista" ; mkN "Baterista" ; mkN "Bateristas" ; mkN "tambor" ; } ; --*
lin drum_out_V2 = variants {mkV2 (mkV "enxotar") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin drumstick_2_N = mkN "baqueta" ; --*
lin drunk_1_A = variants {mkA "bêbado" ; mkA "bêbedo" ; mkA "ébrio" ; mkA "embriagado" ; } ; --*
lin drunk_1_N = variants {mkN "bêbado" ; mkN "beberrão" ; mkN "borracho" ; } ; --*
lin drunk_2_A = variants {mkA "bêbado" ; mkA "ébrio" ; mkA "embriagado" ; } ; --*
lin drunkard_N = variants {mkN "bêbado" ; mkN "beberrão" ; mkN "borracho" ; } ; --*
lin drunkenness_1_N = variants {mkN "bebedeira" ; mkN "ebriedade" ; mkN "embriaguez" ; } ; --*
lin drunkenness_2_N = variants {mkN "addiction" ; mkN "alcoolismo" ; mkN "Alcoolismo" ; } ; --*
lin drunkenness_3_N = mkN "bebida" ; --*
lin drupe_N = variants {mkN "Drupa" ; mkN "fruit" ; } ; --*
lin dry_1_A = mkA "seco" ; --*
lin dry_1_V = variants {mkV "out" ; mkV "secar" ; } ; --*
lin dry_2_A = mkA "irônico" ; --*
lin dry_2_V = variants {mkV "dry" ; mkV "out" ; } ; --*
lin dry_cleaning_N = mkN "cleaning" ; --*
lin dryer_N = mkN "secador" ; --*
lin dryness_1_N = variants {mkN "aridez" ; mkN "secas" ; mkN "secura" ; } ; --*
lin dry_out_1_V = variants {mkV "out" ; mkV "secar" ; } ; --*
lin dry_out_2_V = variants {mkV "dry" ; mkV "out" ; } ; --*
lin dry_out_3_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "secar") ; } ; --*
lin dry_up_2_V2 = variants {mkV2 (mkV "mumificar") ; mkV2 (mkV "up") ; } ; --*
lin dry_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "secar") ; } ; --*
lin dual_1_A = mkA "binário" ; --*
lin dual_2_A = variants {mkA "dúplice" ; mkA "duplo" ; } ; --*
lin dual_3_A = mkA "dual" ; --*
lin dualism_N = mkN "dualismo" ; --*
lin dualistic_A = mkA "dualístico" ; --*
lin dualist_N = mkN "dualista" ; --*
lin duality_1_N = variants {mkN "dicotomia" ; mkN "dualidade" ; } ; --*
lin duality_2_N = variants {mkN "dualidade" ; mkN "duality" ; } ; --*
lin duality_3_N = mkN "dualidade" ; --*
lin dub_1_V2 = variants {mkV2 (mkV "alcunhar") ; mkV2 (mkV "apelidar") ; mkV2 (mkV "batizar") ; } ; --*
lin dub_1_V3 = variants {mkV3 (mkV "alcunhar") ; mkV3 (mkV "apelidar") ; mkV3 (mkV "batizar") ; } ; --*
lin dub_2_V2 = mkV2 (mkV "dublar") ; --*
lin dub_2_V3 = mkV3 (mkV "dublar") ; --*
lin dubiety_N = variants {mkN "dúvida" ; mkN "incerteza" ; } ; --*
lin dubious_1_A = mkA "duvidoso" ; --*
lin dubious_2_A = variants {mkA "duvidoso" ; mkA "question" ; } ; --*
lin dubiousness_1_N = variants {mkN "dúvida" ; mkN "incerteza" ; } ; --*
lin dubiousness_2_N = variants {mkN "dúvida" ; mkN "questão" ; } ; --*
lin dubliner_N = mkN "Dublinenses" ; --*
lin dublin_PN = variants {mkPN "capital" ; mkPN "Dublin" ; mkPN "of" ; } ; --*
lin dubnium_N = variants {mkN "105" ; mkN "Dubnio" ; mkN "dúbnio" ; mkN "Dúbnio" ; mkN "number" ; } ; --*
lin ducat_N = mkN "ducado" ; --*
lin duchess_N = variants {mkN "duque" ; mkN "duquesa" ; } ; --*
lin duchy_N = mkN "ducado" ; --*
lin duck_1_N = variants {mkN "anás" ; mkN "Anatidae" ; mkN "pata" ; mkN "pato" ; } ; --*
lin duck_2_N = variants {mkN "egg" ; mkN "pata" ; } ; --*
lin duck_3_N = mkN "pato" ; --*
lin duck_4_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin ducking_2_N = mkN "imersão" ; --*
lin duckling_2_N = mkN "patinho" ; --*
lin duct_1_N = variants {mkN "canal" ; mkN "duct" ; } ; --*
lin duct_3_N = variants {mkN "canal" ; mkN "ducto" ; mkN "duto" ; } ; --*
lin ductile_1_A = mkA "maleável" ; --*
lin ductile_2_A = variants {mkA "dúctil" ; mkA "maleável" ; } ; --*
lin ductility_N = mkN "ductilidade" ; --*
lin dud_2_N = mkN "gasto" ; --*
lin dud_A = mkA "imprestável" ; --*
lin dude_1_N = variants {mkN "gajo" ; mkN "homem" ; } ; --*
lin dude_2_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin due_1_A = variants {mkA "devido" ; mkA "vencido" ; } ; --*
lin due_4_A = mkA "atribuível" ; --*
lin due_Adv = mkAdv "exatamente" ; --*
lin duel_1_N = variants {mkN "d'honneur" ; mkN "duelo" ; } ; --*
lin duel_2_N = mkN "duelo" ; --*
lin duel_V = mkV "duelar" ; --*
lin duet_1_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin duet_3_N = variants {mkN "casal" ; mkN "dupla" ; } ; --*
lin dugong_N = variants {mkN "dugon" ; mkN "dugongo" ; } ; --*
lin dugout_2_N = variants {mkN "canoe" ; mkN "piroga" ; } ; --*
lin duke_1_N = mkN "duque" ; --*
lin duke_2_N = mkN "duque" ; --*
lin dukedom_1_N = variants {mkN "ducado" ; mkN "território" ; mkN "título" ; } ; --*
lin dukedom_2_N = mkN "ducado" ; --*
lin dulcimer_1_N = variants {mkN "dulcimer" ; mkN "saltério" ; } ; --*
lin dulcimer_2_N = mkN "dulcimer" ; --*
lin dull_1_A = variants {mkA "chato" ; mkA "desinteressante" ; mkA "monótono" ; } ; --*
lin dull_2_A = mkA "maçante" ; --*
lin dull_2_V = mkV "perder" ; --*
lin dull_3_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "amortecer") ; mkV2 (mkV "down") ; } ; --*
lin dull_3_V = variants {mkV "abafar" ; mkV "amortecer" ; mkV "down" ; } ; --*
lin dull_4_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin dull_4_V2 = mkV2 (mkV "anestesiar") ; --*
lin dull_5_V2 = variants {mkV2 (mkV "desamolar") ; mkV2 (mkV "perder") ; } ; --*
lin dull_7_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "fátuo" ; mkA "idiota" ; mkA "imbecil" ; } ; --*
lin dull_7_V2 = variants {mkV2 (mkV "amortecer") ; mkV2 (mkV "desanimar") ; } ; --*
lin dull_8_A = mkA "lento" ; --*
lin dull_9_A = mkA "cego" ; --*
lin dullard_1_N = variants {mkN "estúpido" ; mkN "fish" ; mkN "head" ; mkN "idiota" ; mkN "imbecil" ; mkN "person" ; } ; --*
lin dullness_2_N = mkN "tédio" ; --*
lin duly_Adv = variants {mkAdv "adequadamente" ; mkAdv "apropiadamente" ; mkAdv "apropriadamente" ; mkAdv "convenientemente" ; } ; --*
lin duly_AdV = variants {mkAdV "adequadamente" ; mkAdV "apropiadamente" ; mkAdV "apropriadamente" ; mkAdV "convenientemente" ; } ; --*
lin dumb_1_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "fátuo" ; mkA "idiota" ; mkA "imbecil" ; } ; --*
lin dumb_2_A = variants {mkA "calado" ; mkA "mudo" ; } ; --*
lin dumb_3_A = mkA "mudo" ; --*
lin dumb_4_A = variants {mkA "muda" ; mkA "mudo" ; } ; --*
lin dumbbell_1_N = variants {mkN "halter" ; mkN "haltere" ; mkN "Haltere" ; } ; --*
lin dumbbell_2_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; } ; --*
lin dumbfound_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin dummy_2_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; } ; --*
lin dummy_4_N = variants {mkN "festim" ; mkN "shell" ; } ; --*
lin dump_1_N = mkN "merda" ; --*
lin dump_1_V = variants {mkV "jogar" ; mkV "livrar-se" ; } ; --*
lin dump_2_N = variants {mkN "depósito" ; mkN "dump" ; mkN "monturo" ; } ; --*
lin dump_2_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "mandar") ; } ; --*
lin dumper_N = variants {mkN "Dumper" ; mkN "lorry" ; mkN "tombador" ; mkN "truck" ; } ; --*
lin dumping_N = mkN "descargas" ; --*
lin dun_1_V2 = variants {mkV2 (mkV "crucificar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "retalhar") ; mkV2 (mkV "tormentar") ; } ; --*
lin duncan_PN = variants {mkPN "Duncan" ; mkPN "Isadora" ; } ; --*
lin dunce_N = mkN "cabeça" ; --*
lin dunderhead_N = mkN "cabeça" ; --*
lin dune_N = variants {mkN "duna" ; mkN "dunas" ; mkN "dune" ; } ; --*
lin dungeon_1_N = variants {mkN "torre" ; mkN "Torre" ; } ; --*
lin dungeon_2_N = variants {mkN "calabouço" ; mkN "masmorra" ; mkN "Masmorra" ; } ; --*
lin dunghill_2_N = mkN "sambaqui" ; --*
lin dung_N = variants {mkN "bosta" ; mkN "cocô" ; mkN "esterco" ; mkN "excremento" ; mkN "fezes" ; mkN "matéria" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin dunk_1_V2 = mkV2 (mkV "imergir") ; --*
lin dunk_3_V2 = variants {mkV2 (mkV "imergir") ; mkV2 (mkV "mergulhar") ; } ; --*
lin dunkirk_1_PN = mkPN "Dunquerque" ; --*
lin dunkirk_2_PN = mkPN "Dunquerque" ; --*
lin duo_1_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin duo_3_N = variants {mkN "casal" ; mkN "dupla" ; } ; --*
lin duodenal_A = variants {mkA "do" ; mkA "duodenal" ; } ; --*
lin duodenum_N = mkN "duodeno" ; --*
lin duologue_1_N = variants {mkN "conversa" ; mkN "conversação" ; mkN "diálogo" ; } ; --*
lin dupe_N = mkN "vítima" ; --*
lin duplicate_1_V2 = mkV2 (mkV "replicar") ; --*
lin duplicate_2_A = mkA "gemelar" ; --*
lin duplicate_2_N = variants {mkN "duplicação" ; mkN "duplicata" ; } ; --*
lin duplicate_4_V2 = variants {mkV2 (mkV "duplicar") ; mkV2 (mkV "multiplicar") ; } ; --*
lin duplication_1_N = variants {mkN "duplicação" ; mkN "duplicata" ; } ; --*
lin duplication_2_N = variants {mkN "duplicação" ; mkN "replicação" ; } ; --*
lin duplicity_1_N = mkN "duplicidade" ; --*
lin durability_N = mkN "durabilidade" ; --*
lin durable_1_A = variants {mkA "duradouro" ; mkA "longevo" ; } ; --*
lin durable_2_A = variants {mkA "duradoiro" ; mkA "duradouro" ; mkA "durável" ; } ; --*
lin durable_3_A = mkA "perdurável" ; --*
lin durables_N = variants {mkN "bens" ; mkN "durables" ; mkN "goods" ; } ; --*
lin duration_1_N = variants {mkN "continuidade" ; mkN "duração" ; } ; --*
lin duration_2_N = variants {mkN "continuidade" ; mkN "duração" ; mkN "permanência" ; } ; --*
lin duration_3_N = mkN "duração" ; --*
lin durban_PN = mkPN "Durban" ; --*
lin durian_1_N = variants {mkN "durião" ; mkN "durio" ; mkN "tree" ; mkN "zibethinus" ; } ; --*
lin durmast_N = variants {mkN "petraea" ; mkN "Quercus" ; mkN "sessiliflora" ; } ; --*
lin dusk_N = variants {mkN "anoitecer" ; mkN "crepúsculo" ; mkN "pôr" ; } ; --*
lin dusky_1_A = mkA "crepuscular" ; --*
lin dusseldorf_PN = variants {mkPN "Dusseldorf" ; mkPN "Düsseldorf" ; } ; --*
lin dust_1_N = variants {mkN "pó" ; mkN "poeira" ; mkN "poeiras" ; } ; --*
lin dust_1_V2 = variants {mkV2 (mkV "desempoeirar") ; mkV2 (mkV "limpar") ; } ; --*
lin dust_2_N = variants {mkN "destroços" ; mkN "entulho" ; mkN "escombros" ; mkN "restos" ; mkN "ruínas" ; } ; --*
lin dust_2_V2 = mkV2 (mkV "esmaecer") ; --*
lin dust_3_V2 = mkV2 (mkV "polvilhar") ; --*
lin dust_4_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "salpicar") ; } ; --*
lin dustbin_N = variants {mkN "barrel" ; mkN "bin" ; mkN "can" ; mkN "cesto" ; mkN "lixeira" ; } ; --*
lin dustcart_N = variants {mkN "caminhão" ; mkN "truck" ; } ; --*
lin dust_coat_N = variants {mkN "coat" ; mkN "gabardina" ; } ; --*
lin duster_1_N = variants {mkN "storm" ; mkN "tempestade" ; mkN "Tempestade" ; } ; --*
lin duster_2_N = variants {mkN "coat" ; mkN "gabardina" ; } ; --*
lin dustman_N = variants {mkN "carter" ; mkN "collector" ; mkN "hauler" ; mkN "lixeiro" ; mkN "man" ; } ; --*
lin dustpan_2_N = mkN "pá" ; --*
lin dust_up_N = variants {mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin dusty_1_A = variants {mkA "empoeirada" ; mkA "empoeirado" ; } ; --*
lin dutch_A = variants {mkA "holandês" ; mkA "neerlandês" ; } ; --*
lin dutchFem_1_N = variants {mkN "Neerlandeses" ; mkN "people" ; } ; --*
lin dutchMasc_0_N = variants {mkN "holandês" ; mkN "Holandês" ; mkN "neerlandês" ; } ; --*
lin dutchMasc_1_N = variants {mkN "Neerlandeses" ; mkN "people" ; } ; --*
lin dutch_N = variants {mkN "holandês" ; mkN "língua" ; mkN "neerlandês" ; } ; --*
lin duty_1_N = variants {mkN "dever" ; mkN "responsabilidade" ; } ; --*
lin duty_2_N = variants {mkN "dever" ; mkN "obrigação" ; } ; --*
lin duty_3_N = mkN "tarifas" ; --*
lin duvet_N = variants {mkN "edredom" ; mkN "quilt" ; } ; --*
lin dwarf_1_N = variants {mkN "anã" ; mkN "anão" ; } ; --*
lin dwarf_2_N = variants {mkN "anão" ; mkN "Gnomo" ; } ; --*
lin dwarf_2_V2 = mkV2 (mkV "sobrepujar") ; --*
lin dwarf_3_N = mkN "anão" ; --*
lin dwarfish_A = mkA "anão" ; --*
lin dwarfism_N = mkN "nanismo" ; --*
lin dwell_1_V = mkV "remoer" ; --*
lin dwell_2_V = variants {mkV "existir" ; mkV "in" ; } ; --*
lin dwell_3_V = variants {mkV "habitar" ; mkV "morar" ; mkV "povoar" ; mkV "viver" ; } ; --*
lin dwell_4_V = mkV "habitar" ; --*
lin dweller_N = variants {mkN "habitante" ; mkN "morador" ; } ; --*
lin dwelling_house_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "habitação" ; mkN "house" ; mkN "lar" ; mkN "morada" ; mkN "moradia" ; mkN "residência" ; } ; --*
lin dwelling_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "habitação" ; mkN "house" ; mkN "lar" ; mkN "morada" ; mkN "moradia" ; mkN "residência" ; } ; --*
lin dwell_on_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "over") ; } ; --*
lin dwindle_away_V = variants {mkV "away" ; mkV "diminuir" ; mkV "down" ; } ; --*
lin dwindle_down_V = variants {mkV "away" ; mkV "diminuir" ; mkV "down" ; } ; --*
lin dwindle_V = variants {mkV "away" ; mkV "diminuir" ; mkV "down" ; } ; --*
lin dwindling_N = variants {mkN "abatimento" ; mkN "away" ; } ; --*
lin dyarchy_N = mkN "diarquia" ; --*
lin dyeing_N = mkN "tingimento" ; --*
lin dye_N = variants {mkN "cor" ; mkN "corante" ; mkN "corantes" ; mkN "Corantes" ; mkN "tintura" ; } ; --*
lin dyer_N = mkN "tintureiro" ; --*
lin dyestuff_N = variants {mkN "cor" ; mkN "corante" ; mkN "corantes" ; mkN "Corantes" ; mkN "tintura" ; } ; --*
lin dye_V2 = mkV2 (mkV "tingir") ; --*
lin dyke_1_N = variants {mkN "fufa" ; mkN "sapatão" ; } ; --*
lin dyke_2_N = variants {mkN "barragem" ; mkN "Barragem" ; mkN "barragens" ; mkN "dique" ; mkN "diques" ; mkN "quebra-mar" ; mkN "represa" ; } ; --*
lin dynamic_1_A = mkA "dinâmico" ; --*
lin dynamic_2_A = mkA "dinâmico" ; --*
lin dynamic_N = variants {mkN "força" ; mkN "force" ; } ; --*
lin dynamics_N = mkN "dinâmica" ; --*
lin dynamism_2_N = variants {mkN "força" ; mkN "vigor" ; } ; --*
lin dynamism_3_N = mkN "dinamismo" ; --*
lin dynamite_N = mkN "dinamite" ; --*
lin dynamometer_N = variants {mkN "dinamómetro" ; mkN "dinamômetro" ; } ; --*
lin dynamo_N = variants {mkN "Dinamo" ; mkN "dínamo" ; mkN "Dínamo" ; } ; --*
lin dynasty_N = variants {mkN "dinastia" ; mkN "Dinastias" ; } ; --*
lin dyne_N = mkN "Dina" ; --*
lin dysarthria_N = variants {mkN "disartria" ; mkN "Disartria" ; } ; --*
lin dyscalculia_N = mkN "discalculia" ; --*
lin dyscrasia_N = mkN "discrasia" ; --*
lin dysentery_N = mkN "disenteria" ; --*
lin dysfunction_1_N = variants {mkN "disfunção" ; mkN "mal" ; } ; --*
lin dysfunctional_1_A = mkA "disfuncional" ; --*
lin dysfunctional_2_A = mkA "disfuncional" ; --*
lin dysgenesis_N = mkN "disgenesia" ; --*
lin dysgraphia_N = mkN "Agrafia" ; --*
lin dyskinesia_N = variants {mkN "discinesia" ; mkN "Discinesia" ; } ; --*
lin dyslexia_N = variants {mkN "dislexia" ; mkN "Dislexia" ; } ; --*
lin dyslogistic_1_A = mkA "pejorativo" ; --*
lin dysmenorrhea_N = variants {mkN "Dismenorreia" ; mkN "dismenorréia" ; mkN "Dismenorréia" ; } ; --*
lin dyspepsia_N = variants {mkN "dispepsia" ; mkN "indigestão" ; mkN "stomach" ; mkN "upset" ; } ; --*
lin dysphagia_N = mkN "disfagia" ; --*
lin dysphasia_N = mkN "disfasia" ; --*
lin dysphemism_N = mkN "disfemismo" ; --*
lin dysphonia_N = variants {mkN "disfonia" ; mkN "Disfonia" ; } ; --*
lin dysphoria_N = mkN "Disforia" ; --*
lin dysphoric_A = mkA "triste" ; --*
lin dysplasia_N = variants {mkN "displasia" ; mkN "Displasia" ; } ; --*
lin dysplastic_A = mkA "displásico" ; --*
lin dyspnea_1_N = variants {mkN "dispneia" ; mkN "dispnéia" ; } ; --*
lin dysprosium_N = variants {mkN "Disprosio" ; mkN "disprósio" ; mkN "number" ; } ; --*
lin dysthymia_N = variants {mkN "depression" ; mkN "distimia" ; } ; --*
lin dystopia_2_N = mkN "distopia" ; --*
lin dystopian_1_A = mkA "distópico" ; --*
lin dystrophy_1_N = variants {mkN "distrofia" ; mkN "dystrophy" ; } ; --*
lin dysuria_N = mkN "disúria" ; --*
lin each_Adv = variants {mkAdv "cada" ; mkAdv "each" ; } ; --*
lin eager_A = mkA "ávido" ; --*
lin eagerness_1_N = variants {mkN "anseio" ; mkN "ânsia" ; } ; --*
lin eagle_1_N = variants {mkN "águia" ; mkN "Águias" ; mkN "of" ; } ; --*
lin eagle_3_N = mkN "águia" ; --*
lin eagle_4_N = mkN "águia" ; --*
lin ear_1_N = mkN "orelha" ; --*
lin ear_2_N = mkN "ouvido" ; --*
lin ear_3_N = mkN "orelha" ; --*
lin ear_5_N = mkN "espiga" ; --*
lin earache_N = variants {mkN "dor" ; mkN "otalgia" ; mkN "Otalgia" ; } ; --*
lin eardrum_N = variants {mkN "gabionada" ; mkN "Membrana" ; mkN "membrane" ; mkN "tímpano" ; } ; --*
lin earldom_2_N = mkN "condado" ; --*
lin earlier_1_Adv = variants {mkAdv "antes" ; mkAdv "dantes" ; } ; --*
lin earlier_2_Adv = mkAdv "mais" ; --*
lin earlier_3_Adv = variants {mkAdv "begin" ; mkAdv "originalmente" ; mkAdv "the" ; } ; --*
lin earlier_A = variants {mkA "anterior" ; mkA "mais" ; mkA "o" ; } ; --*
lin earliness_N = mkN "precocidade" ; --*
lin earl_N = mkN "conde" ; --*
lin earlobe_1_N = variants {mkN "lobe" ; mkN "lóbulo" ; } ; --*
lin early_1_A = variants {mkA "cedo" ; mkA "precoce" ; mkA "temporão" ; } ; --*
lin early_2_A = variants {mkA "cedo" ; mkA "temporão" ; } ; --*
lin early_2_Adv = variants {mkAdv "cedo" ; mkAdv "of" ; mkAdv "soon" ; } ; --*
lin early_4_A = variants {mkA "cedo" ; mkA "temporão" ; } ; --*
lin earmark_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "reservar") ; mkV2 (mkV "separar") ; } ; --*
lin earmuff_N = mkN "abafador" ; --*
lin earn_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin earn_2_V2 = mkV2 (mkV "ganhar") ; --*
lin earnest_1_A = mkA "sincero" ; --*
lin earnest_2_A = mkA "sincero" ; --*
lin earnest_3_A = mkA "sério" ; --*
lin earnestness_1_N = mkN "sinceridade" ; --*
lin earnestness_2_N = mkN "seriedade" ; --*
lin earnings_1_N = variants {mkN "ganancia" ; mkN "income" ; mkN "profit" ; mkN "rendimento" ; } ; --*
lin earnings_2_N = variants {mkN "ordenado" ; mkN "remuneração" ; mkN "retribuição" ; mkN "salário" ; } ; --*
lin earphone_1_N = variants {mkN "auricular" ; mkN "estetoscópio" ; mkN "fone" ; } ; --*
lin earpiece_N = variants {mkN "auricular" ; mkN "estetoscópio" ; mkN "fone" ; } ; --*
lin earplug_2_N = mkN "Protetor" ; --*
lin earring_N = mkN "brinco" ; --*
lin earth_1_N = variants {mkN "globo" ; mkN "mundo" ; mkN "Terra" ; } ; --*
lin earth_2_N = mkN "solo" ; --*
lin earth_3_N = variants {mkN "chão" ; mkN "firma" ; mkN "ground" ; mkN "land" ; mkN "solo" ; mkN "terra" ; } ; --*
lin earth_4_N = mkN "Terra" ; --*
lin earth_5_N = mkN "terra" ; --*
lin earth_7_N = mkN "terra" ; --*
lin earthbound_1_A = mkA "terrestre" ; --*
lin earthbound_2_A = mkA "prosaico" ; --*
lin earthen_A = mkA "argiloso" ; --*
lin earthenware_N = variants {mkN "faiança" ; mkN "objecto" ; } ; --*
lin earthnut_1_N = mkN "trufa" ; --*
lin earthnut_3_N = variants {mkN "amendoim" ; mkN "ginguba" ; mkN "nut" ; mkN "pea" ; } ; --*
lin earthnut_4_N = mkN "trufa" ; --*
lin earthquake_1_N = variants {mkN "sismo" ; mkN "sismos" ; mkN "Sismos" ; mkN "terramoto" ; mkN "terremoto" ; mkN "Terremotos" ; mkN "tremor" ; } ; --*
lin earthworm_N = variants {mkN "minhoca" ; mkN "minhocas" ; mkN "worm" ; } ; --*
lin earthy_1_A = mkA "ordinário" ; --*
lin ear_trumpet_N = variants {mkN "aid" ; mkN "trumpet" ; } ; --*
lin earwax_N = variants {mkN "cera" ; mkN "cerume" ; mkN "cerúmen" ; } ; --*
lin earwig_N = variants {mkN "bichas-cadelas" ; mkN "Dermaptera" ; } ; --*
lin ease_1_N = variants {mkN "facilidade" ; mkN "naturalidade" ; } ; --*
lin ease_2_N = mkN "conforto" ; --*
lin ease_2_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "confortar") ; } ; --*
lin ease_3_N = mkN "alívio" ; --*
lin ease_3_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "facilitar") ; } ; --*
lin ease_4_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "aquietar") ; mkV2 (mkV "pacificar") ; } ; --*
lin ease_5_N = variants {mkN "relaxação" ; mkN "repouso" ; } ; --*
lin easel_N = variants {mkN "armação" ; mkN "bastidor" ; mkN "cavalete" ; mkN "Cavalete" ; } ; --*
lin easement_1_N = mkN "servidão" ; --*
lin easement_2_N = mkN "alívio" ; --*
lin ease_off_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin easiness_1_N = mkN "relaxamento" ; --*
lin easiness_2_N = variants {mkN "facilidade" ; mkN "naturalidade" ; } ; --*
lin easing_2_N = mkN "alívio" ; --*
lin east_1_N = variants {mkN "east" ; mkN "este" ; mkN "L" ; } ; --*
lin east_2_N = variants {mkN "Do" ; mkN "levante" ; mkN "nascente" ; mkN "oriente" ; mkN "Oriente" ; } ; --*
lin east_Adv = mkAdv "para" ; --*
lin east_A = mkA "oriental" ; --*
lin easter_1_N = variants {mkN "Pascoa" ; mkN "Páscoa" ; } ; --*
lin easter_1_PN = variants {mkPN "Pascoa" ; mkPN "Páscoa" ; } ; --*
lin easterly_1_A = mkA "oriental" ; --*
lin eastern_1_A = mkA "oriental" ; --*
lin eastern_3_A = mkA "oriental" ; --*
lin eastern_4_A = mkA "oriental" ; --*
lin easy_10_A = variants {mkA "devasso" ; mkA "promíscuo" ; } ; --*
lin easy_12_A = mkA "fácil" ; --*
lin easy_1_Adv = mkAdv "fàcilmente" ; --*
lin easy_1_A = mkA "fácil" ; --*
lin easy_2_Adv = variants {mkAdv "devagar" ; mkAdv "lentamente" ; mkAdv "vagarosamente" ; } ; --*
lin eat_1_V = mkV "comer" ; --*
lin eat_2_V = mkV "comer" ; --*
lin eat_3_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "alimentar-se") ; mkV2 (mkV "comer") ; } ; --*
lin eat_4_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "on") ; } ; --*
lin eat_5_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin eat_6_V2 = mkV2 (mkV "corroer") ; --*
lin eatable_A = mkA "comestível" ; --*
lin eatable_N = mkN "alimento" ; --*
lin eatage_N = variants {mkN "pasto" ; mkN "pastos" ; } ; --*
lin eat_away_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "corroer") ; mkV2 (mkV "erodir") ; } ; --*
lin eater_1_N = mkN "comedor" ; --*
lin eating_apple_N = mkN "apple" ; --*
lin eating_house_N = variants {mkN "house" ; mkN "place" ; mkN "restaurante" ; } ; --*
lin eating_N = mkN "Alimentação" ; --*
lin eat_into_V2 = variants {mkV2 (mkV "corroer") ; mkV2 (mkV "into") ; mkV2 (mkV "magoar") ; } ; --*
lin eat_in_V = mkV "in" ; --*
lin eat_up_1_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin eat_up_2_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin eau_de_cologne_N = variants {mkN "água" ; mkN "de" ; mkN "water" ; } ; --*
lin eavesdrop_V = variants {mkV "grampear" ; mkV "in" ; } ; --*
lin ebb_1_N = variants {mkN "abatimento" ; mkN "diminuição" ; } ; --*
lin ebb_1_V = variants {mkV "away" ; mkV "down" ; mkV "off" ; mkV "out" ; mkV "vazar" ; } ; --*
lin ebony_1_N = variants {mkN "black" ; mkN "Ébano" ; } ; --*
lin ebony_2_N = mkN "ébano" ; --*
lin ebony_3_N = variants {mkN "ébano" ; mkN "ebenum" ; mkN "tree" ; } ; --*
lin eccentric_1_A = variants {mkA "bizarro" ; mkA "bizzaro" ; mkA "estranho" ; } ; --*
lin eccentric_1_N = variants {mkN "excêntrico" ; mkN "geek" ; mkN "person" ; } ; --*
lin eccentric_2_A = variants {mkA "excêntrica" ; mkA "excêntricas" ; mkA "excêntrico" ; mkA "excêntricos" ; } ; --*
lin eccentric_2_N = mkN "figura" ; --*
lin eccentricity_1_N = mkN "excentricidade" ; --*
lin eccentricity_3_N = mkN "excentricidade" ; --*
lin ecchymosis_2_N = mkN "equimose" ; --*
lin ecclesiastical_1_A = mkA "eclesiástico" ; --*
lin ecclesiastic_N = variants {mkN "clérigo" ; mkN "Clérigo" ; mkN "eclesiástico" ; mkN "pastor" ; } ; --*
lin ecclesiology_N = variants {mkN "eclesiologia" ; mkN "Eclesiologia" ; } ; --*
lin eccles_PN = variants {mkPN "Eccles" ; mkPN "John" ; } ; --*
lin echidna_2_N = variants {mkN "anteater" ; mkN "equidna" ; } ; --*
lin echinococcosis_N = variants {mkN "disease" ; mkN "equinococose" ; } ; --*
lin echinoderm_N = variants {mkN "equinodermo" ; mkN "equinodermos" ; } ; --*
lin echo_1_N = variants {mkN "eco" ; mkN "reflection" ; mkN "reverberação" ; } ; --*
lin echo_1_V2 = variants {mkV2 (mkV "eco") ; mkV2 (mkV "ecoar") ; mkV2 (mkV "repetir") ; } ; --*
lin echo_2_N = mkN "Eco" ; --*
lin echo_2_V = variants {mkV "ecoar" ; mkV "ressoar" ; mkV "reverberar" ; } ; --*
lin echo_3_N = mkN "eco" ; --*
lin echocardiogram_N = mkN "ecocardiograma" ; --*
lin echocardiography_N = mkN "ecocardiografia" ; --*
lin echolalia_1_N = mkN "ecolalia" ; --*
lin echolalia_2_N = variants {mkN "ecolalia" ; mkN "Ecolalia" ; } ; --*
lin echo_sounder_N = variants {mkN "sonar" ; mkN "Sonar" ; mkN "sounder" ; } ; --*
lin eclampsia_N = variants {mkN "eclampsia" ; mkN "eclâmpsia" ; mkN "Eclâmpsia" ; } ; --*
lin eclectic_A = mkA "eclético" ; --*
lin eclipse_1_V2 = mkV2 (mkV "eclipsar") ; --*
lin eclipse_2_V2 = variants {mkV2 (mkV "eclipsar") ; mkV2 (mkV "ocultar") ; } ; --*
lin eclipse_N = variants {mkN "eclipse" ; mkN "ocultação" ; } ; --*
lin ecliptic_N = mkN "eclíptica" ; --*
lin eclogue_N = mkN "idílio" ; --*
lin ec_N = variants {mkN "Community" ; mkN "Economic" ; mkN "Market" ; mkN "UE" ; mkN "União" ; mkN "Union" ; } ; --*
lin ecological_1_A = mkA "ecológico" ; --*
lin ecological_2_A = mkA "ecológico" ; --*
lin ecologist_N = variants {mkN "ecologista" ; mkN "ecólogo" ; } ; --*
lin ecology_2_N = variants {mkN "ecologia" ; mkN "Ecologia" ; mkN "science" ; } ; --*
lin econometric_A = mkA "econométrico" ; --*
lin econometrics_N = variants {mkN "econometria" ; mkN "Econometria" ; } ; --*
lin economic_1_A = variants {mkA "económico" ; mkA "econômico" ; } ; --*
lin economic_2_A = variants {mkA "económico" ; mkA "econômico" ; } ; --*
lin economic_3_A = variants {mkA "económico" ; mkA "econômico" ; } ; --*
lin economic_5_A = variants {mkA "económico" ; mkA "econômico" ; } ; --*
lin economical_1_A = variants {mkA "económico" ; mkA "econômico" ; } ; --*
lin economical_2_A = variants {mkA "económico" ; mkA "econômico" ; } ; --*
lin economical_3_A = variants {mkA "económico" ; mkA "econômico" ; mkA "frugal" ; } ; --*
lin economics_N = variants {mkN "economia" ; mkN "economy" ; mkN "science" ; } ; --*
lin economist_N = variants {mkN "economista" ; mkN "expert" ; } ; --*
lin economize_V2 = variants {mkV2 (mkV "economizar") ; mkV2 (mkV "poupar") ; } ; --*
lin economize_V = variants {mkV "amealhar" ; mkV "economizar" ; mkV "poupar" ; } ; --*
lin economy_1_N = variants {mkN "economia" ; mkN "sistemas" ; mkN "system" ; } ; --*
lin economy_2_N = variants {mkN "economia" ; mkN "poupança" ; } ; --*
lin economy_3_N = mkN "economia" ; --*
lin economy_4_N = mkN "economia" ; --*
lin ecosystem_N = variants {mkN "ecossistema" ; mkN "ecossistemas" ; mkN "Ecossistemas" ; } ; --*
lin ecoterrorism_N = variants {mkN "ecoterrorismo" ; mkN "terrorism" ; mkN "warfare" ; } ; --*
lin ecotourism_N = variants {mkN "ecoturismo" ; mkN "eco-turismo" ; } ; --*
lin ecphonesis_N = mkN "exclamação" ; --*
lin ecstasy_1_N = variants {mkN "embevecimento" ; mkN "enlevo" ; mkN "êxtase" ; } ; --*
lin ecstatic_1_A = mkA "extático" ; --*
lin ectasia_1_N = mkN "ectasia" ; --*
lin ectoderm_1_N = variants {mkN "ectoderma" ; mkN "ectoderme" ; mkN "exoderma" ; } ; --*
lin ectoparasite_N = mkN "ectoparasita" ; --*
lin ectopia_N = mkN "ectopia" ; --*
lin ectoplasm_1_N = mkN "ectoplasma" ; --*
lin ectrodactyly_N = mkN "Ectrodactilia" ; --*
lin ecuadorian_1_N = mkN "equatoriano" ; --*
lin ecuadorian_A = mkA "equatoriano" ; --*
lin ecuador_PN = variants {mkPN "Equador" ; mkPN "of" ; } ; --*
lin ecumenic_1_A = variants {mkA "ecuménico" ; mkA "ecumênico" ; } ; --*
lin ecumenical_1_A = variants {mkA "ecuménico" ; mkA "ecumênico" ; } ; --*
lin ecumenical_2_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin ecumenism_2_N = variants {mkN "ecumenismo" ; mkN "Ecumenismo" ; } ; --*
lin eczema_N = mkN "eczema" ; --*
lin edacious_A = mkA "voraz" ; --*
lin eddy_N = variants {mkN "redemoinho" ; mkN "remoinho" ; mkN "vórtice" ; } ; --*
lin eddy_PN = variants {mkPN "Baker" ; mkPN "Mary" ; mkPN "Morse" ; } ; --*
lin eddy_V = mkV "redemoinhar" ; --*
lin edelweiss_N = variants {mkN "alpinum" ; mkN "Edelweiß" ; } ; --*
lin edema_1_N = variants {mkN "edema" ; mkN "hidropisia" ; } ; --*
lin edematous_A = mkA "edematoso" ; --*
lin eden_1_PN = variants {mkPN "alturas" ; mkPN "céu" ; mkPN "land" ; mkPN "olimpo" ; mkPN "paraíso" ; mkPN "Paraíso" ; } ; --*
lin eden_2_PN = variants {mkPN "Eden" ; mkPN "Éden" ; mkPN "of" ; } ; --*
lin edge_1_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "margem" ; } ; --*
lin edge_1_V = variants {mkV "aproximar" ; mkV "aproximar-se" ; } ; --*
lin edge_2_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "margem" ; } ; --*
lin edge_4_V2 = mkV2 (mkV "afiar") ; --*
lin edge_5_N = mkN "pequena" ; --*
lin edge_6_N = variants {mkN "aba" ; mkN "borda" ; mkN "fronteira" ; mkN "limite" ; } ; --*
lin edginess_N = mkN "inquietude" ; --*
lin edgy_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin edibility_N = mkN "comestibilidade" ; --*
lin edible_A = mkA "comestível" ; --*
lin edible_N = mkN "alimento" ; --*
lin edict_1_N = mkN "edito" ; --*
lin edict_2_N = variants {mkN "acta" ; mkN "decreto" ; } ; --*
lin edification_N = mkN "edificação" ; --*
lin edifice_N = variants {mkN "edifício" ; mkN "prédio" ; } ; --*
lin edifying_A = mkA "edificador" ; --*
lin edify_V2 = variants {mkV2 (mkV "clarificar") ; mkV2 (mkV "edificar") ; mkV2 (mkV "esclarecer") ; } ; --*
lin edinburgh_PN = mkPN "Edimburgo" ; --*
lin edit_1_V2 = mkV2 (mkV "redigir") ; --*
lin editing_N = variants {mkN "Edição" ; mkN "redação" ; mkN "redacção" ; } ; --*
lin edition_1_N = mkN "edição" ; --*
lin edition_2_N = mkN "edição" ; --*
lin edition_3_N = mkN "edição" ; --*
lin edition_4_N = variants {mkN "variante" ; mkN "versão" ; } ; --*
lin editor_1_N = variants {mkN "chefe" ; mkN "in" ; mkN "redator" ; } ; --*
lin editorial_2_A = mkA "editorial" ; --*
lin editorial_N = variants {mkN "column" ; mkN "coluna" ; mkN "editorial" ; } ; --*
lin ed_PN = variants {mkPN "disfunção" ; mkPN "dysfunction" ; mkPN "erecticle" ; } ; --*
lin educate_1_V2 = variants {mkV2 (mkV "educar") ; mkV2 (mkV "ensinar") ; } ; --*
lin educate_2_V2 = variants {mkV2 (mkV "instruir") ; mkV2 (mkV "treinar") ; } ; --*
lin educate_3_V2 = variants {mkV2 (mkV "civilizar") ; mkV2 (mkV "educar") ; } ; --*
lin education_1_N = variants {mkN "activity" ; mkN "didáctica" ; mkN "educação" ; mkN "Educação" ; mkN "ensino" ; mkN "formação" ; mkN "instrução" ; } ; --*
lin education_2_N = variants {mkN "educação" ; mkN "instrução" ; } ; --*
lin education_3_N = variants {mkN "educação" ; mkN "ensino" ; } ; --*
lin education_4_N = mkN "pedagogia" ; --*
lin education_5_N = variants {mkN "educação" ; mkN "instrução" ; } ; --*
lin education_6_N = variants {mkN "Department" ; mkN "Educação" ; mkN "of" ; } ; --*
lin educational_1_A = variants {mkA "educacional" ; mkA "educativo" ; } ; --*
lin educational_2_A = mkA "educativo" ; --*
lin educationalist_N = mkN "educador" ; --*
lin educationist_N = mkN "educador" ; --*
lin educative_A = mkA "educativo" ; --*
lin educator_N = variants {mkN "educacionista" ; mkN "educador" ; mkN "pedagogo" ; } ; --*
lin educe_1_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin educe_2_V2 = mkV2 (mkV "derivar") ; --*
lin edutainment_N = mkN "Edutainment" ; --*
lin edward_2_PN = variants {mkPN "Eduardo" ; mkPN "Edward" ; mkPN "VII" ; } ; --*
lin edward_8_PN = variants {mkPN "Eduardo" ; mkPN "I" ; } ; --*
lin edwardian_N = variants {mkN "alguém" ; mkN "eduardiano" ; } ; --*
lin eec_N = variants {mkN "Community" ; mkN "Economic" ; mkN "Market" ; mkN "UE" ; mkN "União" ; mkN "Union" ; } ; --*
lin eeg_N = variants {mkN "eletroencefalografia" ; mkN "Eletroencefalografia" ; mkN "eletroencefalograma" ; mkN "encefalograma" ; } ; --*
lin eel_1_N = variants {mkN "anguia" ; mkN "enguia" ; } ; --*
lin eel_2_N = variants {mkN "Anguilliformes" ; mkN "enguia" ; } ; --*
lin eelworm_N = mkN "anguilula" ; --*
lin e'er_Adv = mkAdv "sempre" ; --*
lin eerie_2_A = variants {mkA "assustador" ; mkA "esquisito" ; mkA "estranho" ; } ; --*
lin eery_A = variants {mkA "assustador" ; mkA "esquisito" ; mkA "estranho" ; } ; --*
lin efface_2_V2 = mkV2 (mkV "apagar") ; --*
lin efface_3_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin effacement_2_N = mkN "esfacelamento" ; --*
lin effect_1_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin effect_1_V2 = variants {mkV2 (mkV "efetuar") ; mkV2 (mkV "provocar") ; mkV2 (mkV "up") ; } ; --*
lin effect_2_N = variants {mkN "impressao" ; mkN "impressão" ; } ; --*
lin effect_2_V2 = variants {mkV2 (mkV "efectivar") ; mkV2 (mkV "efectuar") ; mkV2 (mkV "efetivar") ; mkV2 (mkV "efetuar") ; } ; --*
lin effect_4_N = mkN "essência" ; --*
lin effective_1_A = variants {mkA "efetivo" ; mkA "eficaz" ; mkA "eficiente" ; } ; --*
lin effective_2_A = variants {mkA "eficaz" ; mkA "eficiente" ; } ; --*
lin effectiveness_1_N = variants {mkN "efetividade" ; mkN "eficácia" ; mkN "eficiência" ; } ; --*
lin effectiveness_2_N = variants {mkN "eficácia" ; mkN "força" ; mkN "potencia" ; mkN "potência" ; } ; --*
lin effectual_1_A = variants {mkA "efetivo" ; mkA "eficaz" ; mkA "eficiente" ; } ; --*
lin effectual_2_A = mkA "legal" ; --*
lin effectuality_N = variants {mkN "efetividade" ; mkN "eficácia" ; mkN "eficiência" ; } ; --*
lin effectualness_N = variants {mkN "efetividade" ; mkN "eficácia" ; mkN "eficiência" ; } ; --*
lin effeminate_A = mkA "efeminado" ; --*
lin effervescence_1_N = mkN "efervescência" ; --*
lin effervescent_1_A = variants {mkA "efervescente" ; mkA "espumante" ; } ; --*
lin effervescent_2_A = mkA "efervescente" ; --*
lin effervesce_V = variants {mkV "bubbles" ; mkV "espumar" ; mkV "espumejar" ; mkV "ferver" ; } ; --*
lin efficacious_1_A = variants {mkA "eficaz" ; mkA "eficiente" ; } ; --*
lin efficacious_2_A = variants {mkA "efetivo" ; mkA "eficaz" ; mkA "eficiente" ; } ; --*
lin efficacy_N = variants {mkN "eficácia" ; mkN "Eficácia" ; } ; --*
lin efficiency_1_N = mkN "níveis" ; --*
lin efficiency_2_N = mkN "eficiência" ; --*
lin efficient_1_A = mkA "eficiente" ; --*
lin efficient_2_A = variants {mkA "eficaz" ; mkA "eficiente" ; } ; --*
lin effigy_N = variants {mkN "desenho" ; mkN "efígie" ; mkN "figura" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin efflorescence_1_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin efflorescence_3_N = mkN "floração" ; --*
lin efflorescence_4_N = mkN "Eflorescência" ; --*
lin effluent_N = variants {mkN "águas" ; mkN "efluentes" ; mkN "water" ; } ; --*
lin efflux_N = mkN "efluxo" ; --*
lin effort_1_N = variants {mkN "esforço" ; mkN "tentativa" ; } ; --*
lin effort_2_N = variants {mkN "empenho" ; mkN "esforço" ; mkN "grease" ; } ; --*
lin effort_3_N = variants {mkN "façanha" ; mkN "feito" ; mkN "proeza" ; mkN "realização" ; } ; --*
lin effort_4_N = variants {mkN "campanha" ; mkN "causa" ; } ; --*
lin effortless_2_A = mkA "casual" ; --*
lin effulgence_N = variants {mkN "brilho" ; mkN "luminosidade" ; mkN "Radiança" ; mkN "refulgência" ; } ; --*
lin effulgent_A = variants {mkA "radiante" ; mkA "refulgente" ; } ; --*
lin effusion_1_N = mkN "ebulição" ; --*
lin effusion_2_N = mkN "efusão" ; --*
lin eff_V = variants {mkV "a" ; mkV "comer" ; mkV "foder" ; mkV "in" ; mkV "intercourse" ; mkV "intimate" ; mkV "it" ; mkV "laid" ; mkV "love" ; mkV "meter" ; mkV "montar" ; mkV "out" ; mkV "pinar" ; mkV "sex" ; mkV "together" ; mkV "transar" ; mkV "trepar" ; mkV "with" ; } ; --*
lin egalitarianism_1_N = variants {mkN "igualitarismo" ; mkN "Igualitarismo" ; } ; --*
lin egg_1_N = variants {mkN "ovo" ; mkN "óvulo" ; } ; --*
lin egg_2_N = mkN "ovo" ; --*
lin egg_3_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin egg_beater_1_N = variants {mkN "Helicoptero" ; mkN "helicóptero" ; mkN "Helicópteros" ; } ; --*
lin egg_cup_1_N = variants {mkN "cup" ; mkN "oveira" ; } ; --*
lin eggnog_N = variants {mkN "eggnog" ; mkN "Eggnog" ; } ; --*
lin egg_on_V2 = variants {mkV2 (mkV "incitar") ; mkV2 (mkV "on") ; mkV2 (mkV "provocar") ; } ; --*
lin eggplant_1_N = variants {mkN "apple" ; mkN "beringela" ; mkN "berinjela" ; } ; --*
lin eggplant_2_N = variants {mkN "apple" ; mkN "beringela" ; mkN "berinjela" ; mkN "bush" ; mkN "egg" ; mkN "melongena" ; } ; --*
lin eggshell_N = mkN "casca" ; --*
lin ego_1_N = mkN "egoísmo" ; --*
lin ego_2_N = mkN "o" ; --*
lin egocentric_A = mkA "egocêntrico" ; --*
lin egoism_2_N = variants {mkN "egocentrismo" ; mkN "egoísmo" ; } ; --*
lin egoist_1_N = mkN "egoísta" ; --*
lin egoistic_A = mkA "egocêntrico" ; --*
lin egoistical_A = mkA "egocêntrico" ; --*
lin egomania_N = mkN "egomania" ; --*
lin egotism_2_N = mkN "egoísmo" ; --*
lin egotistic_1_A = mkA "egoísta" ; --*
lin egotistic_2_A = variants {mkA "convencido" ; mkA "egoísta" ; } ; --*
lin egotist_N = mkN "egoísta" ; --*
lin egress_3_N = mkN "emergência" ; --*
lin egypt_1_PN = variants {mkPN "Arab" ; mkPN "Egipto" ; mkPN "Egito" ; mkPN "Republic" ; } ; --*
lin egypt_2_PN = variants {mkPN "Egito" ; mkPN "Empire" ; } ; --*
lin egyptian_1_N = mkN "egípcio" ; --*
lin egyptian_2_N = variants {mkN "egípcio" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin egyptian_A = mkA "egípcio" ; --*
lin eiderdown_1_N = variants {mkN "edredom" ; mkN "quilt" ; } ; --*
lin eiderdown_2_N = mkN "edredão" ; --*
lin eidetic_A = mkA "eidético" ; --*
lin eigenvalue_N = variants {mkN "of" ; mkN "root" ; mkN "valor" ; } ; --*
lin eightsome_1_N = mkN "octeto" ; --*
lin eindhoven_PN = mkPN "Eindhoven" ; --*
lin einsteinium_N = variants {mkN "einstânio" ; mkN "einsteinio" ; mkN "einstêinio" ; mkN "einstênio" ; mkN "number" ; } ; --*
lin either_Adv = variants {mkAdv "também" ; mkAdv "um" ; } ; --*
lin ejaculate_1_V2 = variants {mkV2 (mkV "ejacular") ; mkV2 (mkV "out") ; } ; --*
lin ejaculate_2_V2 = mkV2 (mkV "ejacular") ; --*
lin ejaculation_1_N = mkN "interjeição" ; --*
lin ejaculation_2_N = mkN "ejaculação" ; --*
lin ejaculator_1_N = mkN "ejaculador" ; --*
lin eject_1_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin eject_2_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "expelir") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "liberar") ; } ; --*
lin eject_4_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "out") ; } ; --*
lin ejection_1_N = variants {mkN "ejeção" ; mkN "expulsão" ; mkN "out" ; } ; --*
lin ejection_2_N = variants {mkN "exclusão" ; mkN "expulsão" ; } ; --*
lin ejector_seat_N = variants {mkN "Assento" ; mkN "seat" ; } ; --*
lin elaborate_1_V = variants {mkV "elaborar" ; mkV "elocubrar" ; mkV "expandir" ; mkV "expor" ; mkV "out" ; } ; --*
lin elaborate_2_A = variants {mkA "circunstanciado" ; mkA "elaborada" ; mkA "elaborado" ; mkA "minucioso" ; mkA "pormenorizado" ; } ; --*
lin elaborate_2_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "elaborar") ; } ; --*
lin elaborate_3_V2 = variants {mkV2 (mkV "complicar") ; mkV2 (mkV "refinar") ; } ; --*
lin elaborate_4_V2 = variants {mkV2 (mkV "elaborar") ; mkV2 (mkV "out") ; } ; --*
lin elaborateness_1_N = variants {mkN "complexidade" ; mkN "elaboração" ; } ; --*
lin elaborateness_2_N = mkN "elaboração" ; --*
lin elaboration_1_N = mkN "amplificação" ; --*
lin elaboration_4_N = variants {mkN "complexidade" ; mkN "elaboração" ; } ; --*
lin elaboration_5_N = variants {mkN "elaboração" ; mkN "out" ; } ; --*
lin elapse_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin elastase_N = mkN "elastase" ; --*
lin elastic_1_A = mkA "elástico" ; --*
lin elastic_1_N = variants {mkN "band" ; mkN "elástico" ; } ; --*
lin elastic_2_A = variants {mkA "elástico" ; mkA "flexível" ; } ; --*
lin elasticity_N = mkN "elasticidade" ; --*
lin elastin_N = mkN "elastina" ; --*
lin elastomer_N = variants {mkN "Elastómero" ; mkN "elastômero" ; mkN "Elastômero" ; } ; --*
lin elate_V2 = variants {mkV2 (mkV "elevar") ; mkV2 (mkV "intoxicar") ; mkV2 (mkV "up") ; } ; --*
lin elation_1_N = mkN "euforia" ; --*
lin elation_2_N = variants {mkN "euforia" ; mkN "spirits" ; } ; --*
lin elbow_1_N = variants {mkN "cotovelo" ; mkN "cubiti" ; mkN "elbow" ; mkN "joint" ; } ; --*
lin elbow_1_V2 = mkV2 (mkV "acotovelar") ; --*
lin elbow_2_N = mkN "cotovelo" ; --*
lin elbow_2_V2 = mkV2 (mkV "acotovelar") ; --*
lin elbow_3_N = mkN "cotovelo" ; --*
lin elbow_4_N = mkN "cotovelo" ; --*
lin elbow_5_N = mkN "cotovelo" ; --*
lin elder_1_N = variants {mkN "anciã" ; mkN "ancião" ; mkN "pessoa" ; mkN "senior" ; } ; --*
lin elder_3_N = mkN "ancião" ; --*
lin elder_A = mkA "ancião" ; --*
lin elderberry_1_N = variants {mkN "elder" ; mkN "nigra" ; mkN "Sambucus" ; } ; --*
lin elderly_A = mkA "idosa" ; --*
lin eldritch_A = variants {mkA "barroco" ; mkA "bizarro" ; mkA "esquisito" ; mkA "estranho" ; mkA "extravagante" ; mkA "misterioso" ; } ; --*
lin elecampane_N = variants {mkN "Helénio" ; mkN "helenium" ; } ; --*
lin elect_1_V3 = variants {mkV3 (mkV "designar") ; mkV3 (mkV "eleger") ; mkV3 (mkV "escolher") ; mkV3 (mkV "nomear") ; } ; --*
lin elect_2_V = variants {mkV "eleger" ; mkV "escolher" ; } ; --*
lin elected_A = mkA "eleito" ; --*
lin election_1_N = mkN "eleição" ; --*
lin election_2_N = variants {mkN "eleição" ; mkN "escolha" ; } ; --*
lin electioneering_2_N = variants {mkN "campaign" ; mkN "Campanha" ; mkN "candidatura" ; } ; --*
lin elective_1_A = mkA "eleito" ; --*
lin elective_2_A = mkA "facultativo" ; --*
lin elector_1_N = variants {mkN "eleitor" ; mkN "votante" ; } ; --*
lin electoral_1_A = mkA "eleitoral" ; --*
lin electoral_2_A = mkA "eleitoral" ; --*
lin electorate_N = mkN "eleitorado" ; --*
lin electric_1_A = variants {mkA "eléctrico" ; mkA "elétrico" ; mkA "eletrizante" ; } ; --*
lin electric_3_A = variants {mkA "elétrico" ; mkA "eletrizante" ; } ; --*
lin electrical_1_A = mkA "elétrico" ; --*
lin electrical_2_A = variants {mkA "eléctrico" ; mkA "elétrico" ; mkA "eletrizante" ; } ; --*
lin electrician_N = mkN "electricista" ; --*
lin electricity_1_N = variants {mkN "electricidade" ; mkN "eletricidade" ; } ; --*
lin electricity_2_N = variants {mkN "electricidade" ; mkN "eletricidade" ; mkN "energia" ; mkN "energy" ; mkN "potência" ; } ; --*
lin electricity_3_N = variants {mkN "electricidade" ; mkN "eletricidade" ; } ; --*
lin electrification_2_N = variants {mkN "eletrificação" ; mkN "Eletrificação" ; } ; --*
lin electrify_1_V2 = variants {mkV2 (mkV "electrificar") ; mkV2 (mkV "eletrificar") ; } ; --*
lin electrify_2_V2 = variants {mkV2 (mkV "electrificar") ; mkV2 (mkV "electrizar") ; mkV2 (mkV "eletrificar") ; mkV2 (mkV "eletrizar") ; } ; --*
lin electrify_3_V2 = mkV2 (mkV "eletrificar") ; --*
lin electrocardiogram_N = variants {mkN "cardiograma" ; mkN "electrocardiograma" ; mkN "eletrocardiograma" ; } ; --*
lin electrocardiographic_A = mkA "eletrocardiográfico" ; --*
lin electrochemical_A = mkA "eletroquímico" ; --*
lin electrochemistry_N = mkN "eletroquímica" ; --*
lin electrocute_1_V2 = variants {mkV2 (mkV "electrocutar") ; mkV2 (mkV "eletrocutar") ; } ; --*
lin electrocute_2_V2 = variants {mkV2 (mkV "electrocutar") ; mkV2 (mkV "eletrocutar") ; } ; --*
lin electrocution_2_N = variants {mkN "electrocussão" ; mkN "eletrocução" ; } ; --*
lin electrode_N = mkN "eletrodo" ; --*
lin electroencephalogram_N = variants {mkN "eletroencefalografia" ; mkN "Eletroencefalografia" ; mkN "eletroencefalograma" ; mkN "encefalograma" ; } ; --*
lin electrologist_N = mkN "electrologista" ; --*
lin electrolysis_1_N = variants {mkN "electrólise" ; mkN "eletrólise" ; mkN "Eletrólise" ; } ; --*
lin electrolyte_N = mkN "eletrólito" ; --*
lin electrolytic_N = variants {mkN "capacitor" ; mkN "condenser" ; } ; --*
lin electromagnetic_A = mkA "eletromagnético" ; --*
lin electromagnetism_1_N = mkN "electromagnetismo" ; --*
lin electromagnetism_2_N = variants {mkN "electromagnetismo" ; mkN "Electromagnetismo" ; } ; --*
lin electromagnet_N = variants {mkN "Eletroíma" ; mkN "eletroímã" ; mkN "Eletroímã" ; } ; --*
lin electromyography_N = mkN "eletromiografia" ; --*
lin electronegativity_N = mkN "eletronegatividade" ; --*
lin electronic_1_A = variants {mkA "electrónico" ; mkA "electrônico" ; mkA "eletrónico" ; mkA "eletrônico" ; } ; --*
lin electronic_2_A = variants {mkA "electrónico" ; mkA "electrônico" ; mkA "eletrônico" ; } ; --*
lin electronics_N = variants {mkN "electrónica" ; mkN "Eletronica" ; mkN "Eletrónica" ; mkN "eletrônica" ; mkN "Eletrônica" ; } ; --*
lin electron_N = variants {mkN "electrão" ; mkN "eléctron" ; mkN "electrônio" ; mkN "Eletron" ; mkN "elétron" ; } ; --*
lin electrophoresis_N = mkN "Eletroforese" ; --*
lin electroscope_N = mkN "eletroscópio" ; --*
lin electrostatic_1_A = mkA "eletrostático" ; --*
lin electrostatics_N = variants {mkN "electrostática" ; mkN "eletrostática" ; } ; --*
lin electrum_N = variants {mkN "electrum" ; mkN "Electrum" ; } ; --*
lin elegance_1_N = mkN "Elegância" ; --*
lin elegant_1_A = variants {mkA "airoso" ; mkA "elegante" ; mkA "esbelto" ; mkA "garboso" ; mkA "gracioso" ; } ; --*
lin elegant_2_A = variants {mkA "elegante" ; mkA "esbelto" ; mkA "gracioso" ; } ; --*
lin elegant_3_A = mkA "elegante" ; --*
lin elegy_N = variants {mkN "elegia" ; mkN "lamento" ; } ; --*
lin element_1_N = variants {mkN "componente" ; mkN "fator" ; mkN "parte" ; } ; --*
lin element_2_N = variants {mkN "componente" ; mkN "parte" ; } ; --*
lin element_3_N = variants {mkN "element" ; mkN "elemento" ; } ; --*
lin element_5_N = mkN "elemento" ; --*
lin elemental_1_A = mkA "elementar" ; --*
lin elemental_3_A = variants {mkA "elementar" ; mkA "rudimentar" ; } ; --*
lin elementary_3_A = variants {mkA "elementar" ; mkA "rudimentar" ; } ; --*
lin elephant_1_N = variants {mkN "elefanta" ; mkN "elefante" ; } ; --*
lin elephantiasis_N = mkN "elefantíase" ; --*
lin elephantine_A = variants {mkA "descomunal" ; mkA "elefântico" ; mkA "elefantino" ; mkA "gigantesco" ; } ; --*
lin elevate_1_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "upstairs") ; } ; --*
lin elevate_2_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "elevar") ; mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin elevate_3_V2 = mkV2 (mkV "elevar") ; --*
lin elevation_1_N = mkN "levantamento" ; --*
lin elevation_2_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin elevation_3_N = mkN "altitude" ; --*
lin elevation_4_N = variants {mkN "elevação" ; mkN "elevation" ; } ; --*
lin elevation_5_N = variants {mkN "altitude" ; mkN "altura" ; } ; --*
lin elevation_8_N = variants {mkN "enaltecimento" ; mkN "engrandecimento" ; } ; --*
lin elevator_1_N = variants {mkN "ascensor" ; mkN "elevador" ; } ; --*
lin elevator_2_N = variants {mkN "elevador" ; mkN "profundor" ; } ; --*
lin elf_1_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin elfin_3_A = mkA "élfico" ; --*
lin elicit_1_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin elicit_2_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin elicit_3_V2 = mkV2 (mkV "elicitar") ; --*
lin elide_V2 = mkV2 (mkV "elidir") ; --*
lin eligibility_N = mkN "elegibilidade" ; --*
lin eligible_A = mkA "elegível" ; --*
lin eliminate_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "eliminar") ; mkV2 (mkV "extinguir") ; mkV2 (mkV "rid") ; } ; --*
lin eliminate_3_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin eliminate_4_V2 = variants {mkV2 (mkV "eliminar") ; mkV2 (mkV "out") ; mkV2 (mkV "rejeitar") ; } ; --*
lin eliminate_5_V2 = mkV2 (mkV "expelir") ; --*
lin elimination_2_N = variants {mkN "evacuação" ; mkN "excreção" ; mkN "Excreção" ; } ; --*
lin elimination_4_N = mkN "eliminação" ; --*
lin elision_1_N = mkN "elisão" ; --*
lin elision_2_N = variants {mkN "elisão" ; mkN "exceção" ; mkN "excepção" ; mkN "exclusão" ; } ; --*
lin elite_N = variants {mkN "elite" ; mkN "group" ; } ; --*
lin elitism_N = mkN "elitismo" ; --*
lin elixir_1_N = variants {mkN "elixir" ; mkN "Elixir" ; } ; --*
lin elixir_2_N = variants {mkN "Pedra" ; mkN "stone" ; } ; --*
lin elizabeth_1_PN = variants {mkPN "II" ; mkPN "Isabel" ; } ; --*
lin elk_1_N = variants {mkN "alce" ; mkN "alces" ; mkN "elk" ; mkN "grã-besta" ; } ; --*
lin elk_2_N = variants {mkN "elaphus" ; mkN "elk" ; mkN "uapiti" ; } ; --*
lin elk_3_N = variants {mkN "cervo" ; mkN "deer" ; mkN "elaphus" ; mkN "elk" ; mkN "veado" ; } ; --*
lin ellipse_N = variants {mkN "elipse" ; mkN "oval" ; } ; --*
lin ellipsis_1_N = variants {mkN "elipse" ; mkN "Elipse" ; } ; --*
lin ellipsoid_N = variants {mkN "Elipsoide" ; mkN "elipsóide" ; mkN "Elipsóide" ; } ; --*
lin elliptic_1_A = mkA "elíptico" ; --*
lin elliptic_2_A = variants {mkA "elíptico" ; mkA "oval" ; mkA "ovalado" ; mkA "ovóide" ; } ; --*
lin elliptic_3_A = mkA "elíptico" ; --*
lin elliptical_1_A = variants {mkA "elíptico" ; mkA "oval" ; mkA "ovalado" ; mkA "ovóide" ; } ; --*
lin elliptical_2_A = mkA "elíptico" ; --*
lin elm_1_N = variants {mkN "olmo" ; mkN "tree" ; mkN "ulmo" ; } ; --*
lin elm_2_N = variants {mkN "olmo" ; mkN "ulmeiro" ; } ; --*
lin elocution_N = mkN "elocução" ; --*
lin elongate_V2 = variants {mkV2 (mkV "alongar") ; mkV2 (mkV "esticar") ; mkV2 (mkV "extender") ; } ; --*
lin elongation_2_N = mkN "alongamento" ; --*
lin elope_V = variants {mkV "fugir" ; mkV "off" ; } ; --*
lin eloquence_N = variants {mkN "eloquência" ; mkN "eloqüência" ; } ; --*
lin eloquent_A = variants {mkA "eloquente" ; mkA "eloqüente" ; mkA "expressivo" ; } ; --*
lin el_salvador_PN = variants {mkPN "of" ; mkPN "Salvador" ; } ; --*
lin elsewhere_Adv = variants {mkAdv "alhures" ; mkAdv "em" ; } ; --*
lin elucidate_1_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "up") ; } ; --*
lin elucidate_2_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin elucidation_2_N = variants {mkN "aclaração" ; mkN "elucidação" ; mkN "esclarecimento" ; } ; --*
lin elude_1_V2 = variants {mkV2 (mkV "escapar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "safar") ; } ; --*
lin elude_2_V2 = mkV2 (mkV "escapar") ; --*
lin elude_3_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin elusive_3_A = mkA "subtil" ; --*
lin elusive_4_A = mkA "frustrante" ; --*
lin elver_1_N = mkN "enguia" ; --*
lin elysian_2_A = variants {mkA "divino" ; mkA "sublime" ; } ; --*
lin elysium_1_PN = mkPN "Elísio" ; --*
lin elysium_2_PN = variants {mkPN "Campos" ; mkPN "Fields" ; } ; --*
lin em_1_N = variants {mkN "eme" ; mkN "quad" ; } ; --*
lin em_2_N = variants {mkN "em" ; mkN "eme" ; mkN "paica" ; } ; --*
lin emaciate_1_V2 = mkV2 (mkV "emaciar") ; --*
lin e_mail_N = variants {mkN "email" ; mkN "e-mail" ; mkN "mail" ; } ; --*
lin emanate_1_V = mkV "emanar" ; --*
lin emanate_2_V = variants {mkV "emanar" ; mkV "forth" ; } ; --*
lin emanation_2_N = mkN "emanação" ; --*
lin emanation_3_N = mkN "procissão" ; --*
lin emancipate_1_V2 = mkV2 (mkV "emancipar") ; --*
lin emancipate_2_V2 = variants {mkV2 (mkV "alforriar") ; mkV2 (mkV "emancipar") ; } ; --*
lin emancipation_N = mkN "emancipação" ; --*
lin emasculate_1_V2 = variants {mkV2 (mkV "castrar") ; mkV2 (mkV "emascular") ; } ; --*
lin emasculate_2_V2 = variants {mkV2 (mkV "capar") ; mkV2 (mkV "castrar") ; mkV2 (mkV "emascular") ; } ; --*
lin emasculation_2_N = mkN "castração" ; --*
lin embalm_V2 = mkV2 (mkV "embalsamar") ; --*
lin embankment_N = mkN "Terrapleno" ; --*
lin embargo_1_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "embargar") ; } ; --*
lin embargo_2_V2 = mkV2 (mkV "embargar") ; --*
lin embargo_N = variants {mkN "embargo" ; mkN "stoppage" ; } ; --*
lin embark_1_V2 = variants {mkV2 (mkV "embarcar") ; mkV2 (mkV "embarcar-se") ; } ; --*
lin embark_1_V = variants {mkV "embarcar" ; mkV "embarcar-se" ; } ; --*
lin embark_2_V = variants {mkV "abraçar" ; mkV "começar" ; mkV "embarcar" ; } ; --*
lin embark_3_V = variants {mkV "aventurar" ; mkV "embarcar" ; } ; --*
lin embarkation_N = mkN "embarque" ; --*
lin embark_on_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin embarrass_1_V2 = variants {mkV2 (mkV "constrangir") ; mkV2 (mkV "descompor") ; mkV2 (mkV "embaraçar") ; mkV2 (mkV "envergonhar") ; mkV2 (mkV "inferiorizar") ; } ; --*
lin embarrass_2_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin embarrassed_A = variants {mkA "acanhado" ; mkA "confundido" ; mkA "envergonhado" ; mkA "vergonhoso" ; } ; --*
lin embarrassing_1_A = variants {mkA "desconcertante" ; mkA "difícil" ; } ; --*
lin embarrassment_1_N = mkN "vergonha" ; --*
lin embarrassment_4_N = variants {mkN "excesso" ; mkN "pletora" ; mkN "superabundância" ; } ; --*
lin embassy_1_N = mkN "embaixada" ; --*
lin embassy_2_N = mkN "embaixada" ; --*
lin embed_1_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "embutir") ; mkV2 (mkV "encaixar") ; mkV2 (mkV "implantar") ; } ; --*
lin embellish_1_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin embellish_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "ornamentar") ; } ; --*
lin embellish_3_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "empetecar") ; mkV2 (mkV "enfeitar") ; mkV2 (mkV "ornamentar") ; mkV2 (mkV "ornar") ; } ; --*
lin embellish_4_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "embonecar") ; mkV2 (mkV "empetecar") ; } ; --*
lin embellishment_3_N = variants {mkN "decoração" ; mkN "ornamento" ; } ; --*
lin ember_N = variants {mkN "carvão" ; mkN "rescaldo" ; } ; --*
lin embezzlement_N = variants {mkN "apropriação" ; mkN "Apropriação" ; mkN "peculato" ; } ; --*
lin embitter_V2 = variants {mkV2 (mkV "amargar") ; mkV2 (mkV "amargurar") ; mkV2 (mkV "envenenar") ; } ; --*
lin emblazon_1_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "colorir") ; } ; --*
lin emblazon_2_V2 = mkV2 (mkV "adornar") ; --*
lin emblem_1_N = variants {mkN "emblema" ; mkN "naipe" ; } ; --*
lin emblem_2_N = variants {mkN "emblema" ; mkN "símbolo" ; } ; --*
lin emblematic_1_A = mkA "simbólico" ; --*
lin emblematic_2_A = mkA "emblemático" ; --*
lin embodiment_1_N = mkN "personificação" ; --*
lin embodiment_3_N = mkN "personificação" ; --*
lin embody_1_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "representar") ; } ; --*
lin embody_2_V2 = variants {mkV2 (mkV "encarnar") ; mkV2 (mkV "incorporar") ; mkV2 (mkV "personificar") ; mkV2 (mkV "representar") ; } ; --*
lin embody_3_V2 = variants {mkV2 (mkV "personificar") ; mkV2 (mkV "representar") ; } ; --*
lin embolden_V2 = variants {mkV2 (mkV "alentar") ; mkV2 (mkV "empolgar") ; mkV2 (mkV "encorajar") ; mkV2 (mkV "incentivar") ; } ; --*
lin embolism_1_N = mkN "intercalação" ; --*
lin embolism_2_N = variants {mkN "embolia" ; mkN "embolismo" ; } ; --*
lin embolus_N = mkN "êmbolo" ; --*
lin embonpoint_A = variants {mkA "gorducho" ; mkA "rechonchudo" ; mkA "roliço" ; } ; --*
lin embrace_1_N = mkN "abraço" ; --*
lin embrace_1_V2 = variants {mkV2 (mkV "abarcar") ; mkV2 (mkV "circundar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "englobar") ; } ; --*
lin embrace_2_V = variants {mkV "abraçar" ; mkV "acariciar" ; } ; --*
lin embrace_3_V2 = variants {mkV2 (mkV "abraçar") ; mkV2 (mkV "up") ; } ; --*
lin embrasure_N = mkN "capialço" ; --*
lin embroider_1_V2 = variants {mkV2 (mkV "bordar") ; mkV2 (mkV "recamar") ; } ; --*
lin embroider_1_V = variants {mkV "bordar" ; mkV "recamar" ; } ; --*
lin embroider_2_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin embroider_2_V = variants {mkV "embelezar" ; mkV "engrandecer" ; mkV "up" ; } ; --*
lin embroidery_2_N = mkN "bordado" ; --*
lin embroil_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "ser") ; mkV2 (mkV "up") ; } ; --*
lin embryo_1_N = mkN "embrião" ; --*
lin embryo_2_N = variants {mkN "egg" ; mkN "embrião" ; mkN "embriões" ; } ; --*
lin embryology_N = variants {mkN "embriologia" ; mkN "Embriologia" ; } ; --*
lin emeer_N = mkN "emir" ; --*
lin emend_V2 = variants {mkV2 (mkV "emendar") ; mkV2 (mkV "melhorar") ; } ; --*
lin emerald_1_N = mkN "esmeralda" ; --*
lin emerald_2_N = mkN "esmeralda" ; --*
lin emerald_3_N = mkN "esmeralda" ; --*
lin emerge_1_V = variants {mkV "destacar-se" ; mkV "emergir" ; mkV "publicar-se" ; mkV "sair" ; } ; --*
lin emerge_2_V = variants {mkV "aparecer" ; mkV "forth" ; mkV "out" ; mkV "sair" ; } ; --*
lin emerge_3_V = variants {mkV "aparecer" ; mkV "surgir" ; } ; --*
lin emerge_4_V = variants {mkV "emergir" ; mkV "surgir" ; } ; --*
lin emergence_1_N = variants {mkN "crescimento" ; mkN "emergência" ; } ; --*
lin emergence_3_N = mkN "emergência" ; --*
lin emergence_4_N = mkN "emergência" ; --*
lin emergency_1_N = variants {mkN "emergência" ; mkN "urgência" ; } ; --*
lin emergent_2_A = mkA "emergente" ; --*
lin emeritus_A = mkA "Professor" ; --*
lin emery_N = variants {mkN "esmeril" ; mkN "Esmeril" ; } ; --*
lin emigrant_N = mkN "emigrante" ; --*
lin emigrate_V = mkV "emigrar" ; --*
lin emigration_N = variants {mkN "emigração" ; mkN "expatriação" ; } ; --*
lin eminence_2_N = mkN "eminência" ; --*
lin eminent_1_A = variants {mkA "alto" ; mkA "Sumô" ; } ; --*
lin eminent_2_A = variants {mkA "alto" ; mkA "elevado" ; mkA "eminente" ; mkA "magestoso" ; } ; --*
lin emir_N = mkN "emir" ; --*
lin emissary_N = variants {mkN "emissário" ; mkN "representante" ; } ; --*
lin emission_1_N = mkN "emanação" ; --*
lin emission_2_N = mkN "emissão" ; --*
lin emission_3_N = variants {mkN "emissão" ; mkN "emissões" ; } ; --*
lin emission_4_N = mkN "expulsão" ; --*
lin emit_2_V2 = variants {mkV2 (mkV "emitir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin emit_3_V2 = variants {mkV2 (mkV "emitir") ; mkV2 (mkV "loose") ; mkV2 (mkV "out") ; mkV2 (mkV "soltar") ; } ; --*
lin emitter_N = mkN "emissor" ; --*
lin emmetropia_N = mkN "Emetropia" ; --*
lin emolument_N = mkN "emolumento" ; --*
lin emoticon_N = variants {mkN "emoticon" ; mkN "smiley" ; } ; --*
lin emotional_1_A = mkA "emocional" ; --*
lin emotional_2_A = mkA "emocional" ; --*
lin emotional_3_A = mkA "emocional" ; --*
lin emotional_4_A = variants {mkA "emocional" ; mkA "excitado" ; mkA "up" ; } ; --*
lin emotionlessness_1_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin emotion_N = variants {mkN "abalo" ; mkN "comoção" ; mkN "emoção" ; mkN "sentimento" ; } ; --*
lin emotive_A = mkA "afetivo" ; --*
lin empanel_1_V2 = mkV2 (mkV "listar") ; --*
lin empanel_2_V2 = mkV2 (mkV "selecionar") ; --*
lin empathize_1_V = mkV "entender" ; --*
lin empathy_N = mkN "empatia" ; --*
lin emperor_1_N = mkN "imperador" ; --*
lin emperor_4_N = variants {mkN "butterfly" ; mkN "Imperador" ; } ; --*
lin emphasis_1_N = variants {mkN "acento" ; mkN "ênfase" ; mkN "tonicidade" ; } ; --*
lin emphasis_2_N = variants {mkN "ênfase" ; mkN "veemência" ; } ; --*
lin emphasis_3_N = mkN "ênfase" ; --*
lin emphasis_4_N = variants {mkN "acento" ; mkN "acentuação" ; mkN "ênfase" ; } ; --*
lin emphasize_1_V2 = variants {mkV2 (mkV "acentuar") ; mkV2 (mkV "enfatizar") ; mkV2 (mkV "pontuar") ; } ; --*
lin emphasize_2_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "grifar") ; mkV2 (mkV "sublinhar") ; } ; --*
lin emphatic_2_A = mkA "enfático" ; --*
lin emphatic_3_A = variants {mkA "enérgico" ; mkA "enfático" ; } ; --*
lin emphysema_N = variants {mkN "emphysema" ; mkN "enfisema" ; } ; --*
lin empire_1_N = mkN "império" ; --*
lin empire_2_N = mkN "império" ; --*
lin empire_3_N = mkN "império" ; --*
lin empire_4_N = variants {mkN "conglomerado" ; mkN "império" ; } ; --*
lin empire_5_N = variants {mkN "Imperio" ; mkN "Império" ; mkN "Impérios" ; } ; --*
lin empiric_1_A = mkA "empírico" ; --*
lin empiric_2_A = mkA "empírico" ; --*
lin empirical_1_A = mkA "empírico" ; --*
lin empirical_2_A = mkA "empírico" ; --*
lin empiricism_1_N = variants {mkN "empirismo" ; mkN "philosophy" ; } ; --*
lin empiricism_2_N = mkN "empirismo" ; --*
lin empiricism_3_N = mkN "empirismo" ; --*
lin empiricist_N = mkN "empirista" ; --*
lin emplacement_2_N = variants {mkN "colocação" ; mkN "posicionamento" ; } ; --*
lin emplane_V2 = mkV2 (mkV "embarcar") ; --*
lin emplane_V = mkV "embarcar" ; --*
lin employ_1_V2 = variants {mkV2 (mkV "empregar") ; mkV2 (mkV "usar") ; mkV2 (mkV "utilizar") ; } ; --*
lin employ_2_V2 = variants {mkV2 (mkV "assalariar") ; mkV2 (mkV "contratar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "tomar") ; } ; --*
lin employee_N = variants {mkN "assalariado" ; mkN "empregado" ; mkN "operário" ; } ; --*
lin employer_N = mkN "empregador" ; --*
lin employment_1_N = variants {mkN "emprego" ; mkN "serviço" ; } ; --*
lin employment_2_N = variants {mkN "biscate" ; mkN "emprego" ; mkN "ocupação" ; mkN "trabalho" ; } ; --*
lin employment_3_N = mkN "contratação" ; --*
lin employment_4_N = variants {mkN "uso" ; mkN "utilização" ; } ; --*
lin employ_N = variants {mkN "emprego" ; mkN "serviço" ; } ; --*
lin emporium_N = variants {mkN "loja" ; mkN "store" ; } ; --*
lin empower_1_V2 = mkV2 (mkV "autorizar") ; --*
lin empower_2_V2 = variants {mkV2 (mkV "dotar") ; mkV2 (mkV "investir") ; } ; --*
lin empower_2_V2V = variants {mkV2V (mkV "dotar") ; mkV2V (mkV "investir") ; } ; --*
lin empress_N = mkN "imperatriz" ; --*
lin emptiness_3_N = variants {mkN "vacância" ; mkN "vácuo" ; mkN "vaga" ; mkN "vazio" ; } ; --*
lin emptiness_4_N = mkN "vaidade" ; --*
lin empty_1_A = mkA "vazio" ; --*
lin empty_1_V2 = variants {mkV2 (mkV "esvaziar") ; mkV2 (mkV "evaziar") ; } ; --*
lin empty_2_V = mkV "esvaziar" ; --*
lin empty_3_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desocupar") ; mkV2 (mkV "evacuar") ; } ; --*
lin empty_4_V2 = mkV2 (mkV "esvaziar") ; --*
lin empty_headed_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin emptying_N = mkN "evacuação" ; --*
lin empty_out_V = mkV "esvaziar" ; --*
lin empyema_N = mkN "empiema" ; --*
lin empyreal_1_A = mkA "empíreo" ; --*
lin empyrean_1_A = mkA "empíreo" ; --*
lin empyrean_N = variants {mkN "céu" ; mkN "esfera" ; mkN "firmamento" ; mkN "of" ; mkN "sphere" ; } ; --*
lin emu_2_N = variants {mkN "emu" ; mkN "novaehollandiae" ; } ; --*
lin emulate_1_V2 = variants {mkV2 (mkV "copiar") ; mkV2 (mkV "emular") ; mkV2 (mkV "imitar") ; } ; --*
lin emulate_2_V2 = mkV2 (mkV "imitar") ; --*
lin emulation_3_N = mkN "emulação" ; --*
lin emulator_N = variants {mkN "emulador" ; mkN "macaquice" ; } ; --*
lin emulous_1_A = variants {mkA "emolutivo" ; mkA "êmulo" ; } ; --*
lin emulsify_1_V2 = mkV2 (mkV "emulsionar") ; --*
lin emulsify_2_V2 = mkV2 (mkV "emulsionar") ; --*
lin emulsion_1_N = mkN "emulsão" ; --*
lin emulsion_2_N = variants {mkN "emulsão" ; mkN "emulsion" ; } ; --*
lin enable_V2V = variants {mkV2V (mkV "habilitar") ; mkV2V (mkV "oportunizar") ; mkV2V (mkV "possibilitar") ; } ; --*
lin enact_1_V2 = variants {mkV2 (mkV "decretar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "promulgar") ; } ; --*
lin enact_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "reencenar") ; } ; --*
lin enact_2_V2V = variants {mkV2V (mkV "out") ; mkV2V (mkV "reencenar") ; } ; --*
lin enactment_2_N = mkN "ato" ; --*
lin enactment_3_N = mkN "caracterização" ; --*
lin enalapril_N = mkN "enalapril" ; --*
lin enamel_1_N = variants {mkN "enamel" ; mkN "esmalte" ; } ; --*
lin enamel_4_N = mkN "esmalte" ; --*
lin enamel_V2 = mkV2 (mkV "esmaltar") ; --*
lin enamine_N = mkN "enamina" ; --*
lin enamored_A = variants {mkA "apaixonado" ; mkA "enfatuado" ; mkA "enfeitiçado" ; mkA "love" ; mkA "on" ; mkA "with" ; } ; --*
lin enamour_1_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin enantiomorph_N = variants {mkN "Enantiómero" ; mkN "enantiômero" ; } ; --*
lin encampment_1_N = variants {mkN "acampamento" ; mkN "area" ; mkN "campismo" ; mkN "ground" ; mkN "parques" ; mkN "site" ; } ; --*
lin encampment_2_N = mkN "acampamento" ; --*
lin encampment_3_N = mkN "acampamento" ; --*
lin encamp_V2 = variants {mkV2 (mkV "acampar") ; mkV2 (mkV "out") ; } ; --*
lin encapsulation_1_N = variants {mkN "encapsulação" ; mkN "encapsulamento" ; } ; --*
lin encephalitis_1_N = variants {mkN "encefalite" ; mkN "Encefalites" ; } ; --*
lin encephalocele_N = mkN "Encefalocele" ; --*
lin encephalogram_1_N = variants {mkN "eletroencefalografia" ; mkN "Eletroencefalografia" ; mkN "eletroencefalograma" ; mkN "encefalograma" ; } ; --*
lin encephalography_N = mkN "encefalografia" ; --*
lin enchant_1_V2 = mkV2 (mkV "encantar") ; --*
lin enchant_2_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin enchant_3_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "enfeitiçar") ; } ; --*
lin enchanter_N = mkN "feiticeiro" ; --*
lin enchantment_1_N = mkN "fascinação" ; --*
lin enchantment_2_N = variants {mkN "hipnose" ; mkN "Trance" ; } ; --*
lin enchantress_1_N = variants {mkN "fatale" ; mkN "mulher" ; } ; --*
lin enchantress_2_N = variants {mkN "feiticeira" ; mkN "feiticeiro" ; mkN "mágico" ; mkN "mago" ; } ; --*
lin enchilada_N = mkN "Enchilada" ; --*
lin encircle_1_V2 = mkV2 (mkV "circular") ; --*
lin encirclement_N = mkN "bloqueio" ; --*
lin enclave_N = mkN "enclave" ; --*
lin enclose_1_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "embrulhar") ; mkV2 (mkV "empacotar") ; mkV2 (mkV "encobrir") ; } ; --*
lin enclose_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin encode_V2 = mkV2 (mkV "codificar") ; --*
lin encoding_N = variants {mkN "codificação" ; mkN "encriptação" ; } ; --*
lin encomium_N = variants {mkN "elogio" ; mkN "panegírico" ; } ; --*
lin encompass_V2 = variants {mkV2 (mkV "abarcar") ; mkV2 (mkV "circundar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "englobar") ; } ; --*
lin encore_N = mkN "bis" ; --*
lin encounter_1_N = variants {mkN "conflito" ; mkN "disputa" ; } ; --*
lin encounter_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "into") ; mkV2 (mkV "ver") ; } ; --*
lin encounter_2_N = mkN "encontro" ; --*
lin encounter_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "trombar") ; } ; --*
lin encounter_4_N = mkN "enfrentamento" ; --*
lin encounter_4_V2 = variants {mkV2 (mkV "encontrar") ; mkV2 (mkV "receber") ; } ; --*
lin encourage_1_V2 = variants {mkV2 (mkV "encorajar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "promover") ; } ; --*
lin encourage_2_V2 = variants {mkV2 (mkV "alentar") ; mkV2 (mkV "encorajar") ; } ; --*
lin encourage_2_V2V = variants {mkV2V (mkV "alentar") ; mkV2V (mkV "encorajar") ; } ; --*
lin encourage_3_V2V = mkV2V (mkV "encorajar") ; --*
lin encouraging_1_A = mkA "encorajador" ; --*
lin encroachment_1_N = mkN "invasão" ; --*
lin encroachment_2_N = variants {mkN "intrusão" ; mkN "invasão" ; mkN "violação" ; } ; --*
lin encroachment_3_N = mkN "usurpação" ; --*
lin encrust_1_V2 = mkV2 (mkV "encrostar") ; --*
lin encrust_1_V = mkV "encrostar" ; --*
lin encrust_2_V2 = mkV2 (mkV "incrustar") ; --*
lin encrust_2_V = mkV "incrustar" ; --*
lin encrust_3_V2 = mkV2 (mkV "encrostar") ; --*
lin encrust_3_V = mkV "encrostar" ; --*
lin encryption_N = variants {mkN "codificação" ; mkN "encriptação" ; } ; --*
lin encrypt_V2 = variants {mkV2 (mkV "codificar") ; mkV2 (mkV "criptografar") ; mkV2 (mkV "encriptar") ; mkV2 (mkV "in") ; } ; --*
lin encumber_V2 = variants {mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; } ; --*
lin encumbrance_1_N = variants {mkN "carga" ; mkN "fardo" ; mkN "preocupação" ; } ; --*
lin encumbrance_3_N = mkN "obstáculo" ; --*
lin encyclical_N = variants {mkN "Encíclicas" ; mkN "letter" ; } ; --*
lin encyclopaedia_N = variants {mkN "enciclopédia" ; mkN "enciclopédias" ; } ; --*
lin encyclopedia_N = variants {mkN "enciclopédia" ; mkN "enciclopédias" ; } ; --*
lin end_12_N = mkN "conclusão" ; --*
lin end_13_N = variants {mkN "resto" ; mkN "sobra" ; } ; --*
lin end_1_N = mkN "traseiro" ; --*
lin end_1_V = variants {mkV "acabar" ; mkV "cessar" ; mkV "encerrar" ; mkV "finalizar" ; mkV "parar" ; mkV "terminar" ; } ; --*
lin end_2_N = variants {mkN "cabo" ; mkN "conclusão" ; mkN "fim" ; mkN "término" ; } ; --*
lin end_2_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "encerrar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin end_3_N = variants {mkN "fim" ; mkN "final" ; mkN "stage" ; } ; --*
lin end_3_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "findar") ; } ; --*
lin end_4_N = variants {mkN "alvo" ; mkN "intenção" ; mkN "meta" ; mkN "objectivo" ; } ; --*
lin end_4_V2 = variants {mkV2 (mkV "findar") ; mkV2 (mkV "terminar") ; } ; --*
lin end_5_N = mkN "traseiro" ; --*
lin end_6_N = variants {mkN "destruição" ; mkN "morte" ; } ; --*
lin end_7_N = mkN "lado" ; --*
lin end_9_N = variants {mkN "borda" ; mkN "fronteira" ; } ; --*
lin endanger_1_V2 = variants {mkV2 (mkV "ameaçar") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "imperilar") ; mkV2 (mkV "perigar") ; } ; --*
lin endanger_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "comprometer") ; } ; --*
lin endearment_N = mkN "ternura" ; --*
lin endear_V2 = mkV2 (mkV "encarecer") ; --*
lin endeavour_1_N = variants {mkN "esforço" ; mkN "tarefa" ; mkN "tentativa" ; mkN "trabalho" ; } ; --*
lin endeavour_1_V = variants {mkV "dar-se" ; mkV "empenhar" ; mkV "empenhar-se" ; mkV "esforçar" ; mkV "esforçar-se" ; mkV "perseguir" ; mkV "tentar" ; } ; --*
lin endeavour_2_N = variants {mkN "esforço" ; mkN "tentativa" ; } ; --*
lin endemic_1_A = variants {mkA "endémico" ; mkA "endêmico" ; } ; --*
lin endemic_1_N = variants {mkN "disease" ; mkN "endemia" ; } ; --*
lin endemic_2_A = mkA "endêmico" ; --*
lin endemic_3_A = variants {mkA "endémico" ; mkA "endêmico" ; mkA "oriundo" ; } ; --*
lin ending_1_N = mkN "sufixo" ; --*
lin ending_2_N = variants {mkN "conclusão" ; mkN "termino" ; } ; --*
lin ending_3_N = variants {mkN "cabo" ; mkN "conclusão" ; mkN "fim" ; mkN "término" ; } ; --*
lin ending_4_N = variants {mkN "chegada" ; mkN "conclusão" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin ending_5_N = mkN "conclusão" ; --*
lin endive_2_N = variants {mkN "endívia" ; mkN "Escarola" ; mkN "escarole" ; } ; --*
lin endless_1_A = variants {mkA "incessante" ; mkA "infindável" ; mkA "infinita" ; mkA "infinito" ; mkA "interminável" ; } ; --*
lin endless_2_A = variants {mkA "infindável" ; mkA "infinita" ; } ; --*
lin endocarditis_N = mkN "endocardite" ; --*
lin endocardium_N = variants {mkN "endocárdio" ; mkN "Endocárdio" ; } ; --*
lin endocrinologist_N = mkN "endocrinòleg" ; --*
lin endocrinology_N = variants {mkN "endocrinologia" ; mkN "Endocrinologia" ; } ; --*
lin endodontics_1_N = mkN "endodontia" ; --*
lin endogamy_N = variants {mkN "endogamia" ; mkN "Endogamia" ; } ; --*
lin endogenic_1_A = mkA "endógeno" ; --*
lin endogenous_1_A = mkA "endógeno" ; --*
lin endogenous_2_A = mkA "endógeno" ; --*
lin endolymph_N = variants {mkN "endolinfa" ; mkN "Endolinfa" ; } ; --*
lin endometriosis_N = variants {mkN "adenomiose" ; mkN "endometriose" ; } ; --*
lin endometrium_N = mkN "endométrio" ; --*
lin endoplasm_N = mkN "endoplasma" ; --*
lin endorphin_N = mkN "endorfina" ; --*
lin endorse_1_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "for") ; } ; --*
lin endorse_2_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "endossar") ; mkV2 (mkV "secundar") ; } ; --*
lin endorse_3_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "aprovar") ; } ; --*
lin endorse_4_V2 = mkV2 (mkV "endossar") ; --*
lin endorsement_2_N = mkN "aceite" ; --*
lin endorsement_3_N = variants {mkN "aprovação" ; mkN "autorização" ; mkN "consentimento" ; mkN "Imprimatur" ; mkN "sanção" ; } ; --*
lin endorsement_4_N = mkN "endosso" ; --*
lin endorsement_5_N = mkN "endosso" ; --*
lin endorser_2_N = mkN "endossante" ; --*
lin endoscope_N = mkN "endoscópio" ; --*
lin endoscopic_A = mkA "endoscópico" ; --*
lin endoscopy_N = variants {mkN "endoscopia" ; mkN "Endoscopia" ; } ; --*
lin endoskeleton_N = variants {mkN "endoesqueleto" ; mkN "Endosqueleto" ; } ; --*
lin endosperm_N = mkN "endosperma" ; --*
lin endothelial_A = mkA "endotelial" ; --*
lin endothelium_N = variants {mkN "endotélio" ; mkN "Endotélio" ; } ; --*
lin endothermic_1_A = mkA "endotérmico" ; --*
lin endotoxin_N = variants {mkN "endotoxina" ; mkN "Endotoxina" ; } ; --*
lin endow_1_V2 = variants {mkV2 (mkV "dotar") ; mkV2 (mkV "investir") ; } ; --*
lin endow_2_V2 = mkV2 (mkV "dotar") ; --*
lin endowment_1_N = variants {mkN "dom" ; mkN "endowment" ; mkN "presente" ; mkN "talento" ; } ; --*
lin endowment_2_N = variants {mkN "dotação" ; mkN "fund" ; } ; --*
lin endue_V2 = variants {mkV2 (mkV "dotar") ; mkV2 (mkV "investir") ; } ; --*
lin endurable_A = variants {mkA "suportável" ; mkA "tolerável" ; } ; --*
lin endurance_2_N = mkN "sobrevivência" ; --*
lin endure_1_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin endure_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resistir") ; } ; --*
lin endure_3_V = variants {mkV "on" ; mkV "out" ; mkV "perseverar" ; mkV "resistir" ; mkV "sobreviver" ; mkV "up" ; } ; --*
lin endure_4_V2 = mkV2 (mkV "sofrer") ; --*
lin endure_5_V = variants {mkV "out" ; mkV "resistir" ; mkV "usar" ; } ; --*
lin endure_6_V = mkV "durar" ; --*
lin endure_7_V = variants {mkV "hard" ; mkV "perdurar" ; } ; --*
lin enduring_1_A = variants {mkA "duradouro" ; mkA "eterno" ; mkA "perpétuo" ; } ; --*
lin enema_N = variants {mkN "clister" ; mkN "enema" ; } ; --*
lin enemy_1_N = mkN "inimigo" ; --*
lin enemy_2_N = mkN "inimigo" ; --*
lin enemy_3_N = mkN "inimigo" ; --*
lin enemy_4_N = variants {mkN "inimigo" ; mkN "opositor" ; } ; --*
lin energetic_1_A = variants {mkA "energético" ; mkA "enérgico" ; } ; --*
lin energetic_2_A = mkA "diligente" ; --*
lin energid_N = mkN "Protoplasto" ; --*
lin energizing_1_A = mkA "cinético" ; --*
lin energy_1_N = variants {mkN "energia" ; mkN "energy" ; } ; --*
lin energy_2_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin energy_3_N = mkN "energia" ; --*
lin energy_4_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin energy_5_N = variants {mkN "energia" ; mkN "vitalidade" ; } ; --*
lin energy_6_N = mkN "energia" ; --*
lin energy_7_N = variants {mkN "Department" ; mkN "Energia" ; mkN "of" ; } ; --*
lin enervate_1_V2 = mkV2 (mkV "debilitar") ; --*
lin enervate_2_V2 = variants {mkV2 (mkV "descontrolar") ; mkV2 (mkV "perturbar") ; } ; --*
lin enervation_1_N = mkN "debilidade" ; --*
lin enfeeble_V2 = variants {mkV2 (mkV "debilitar") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin enflurane_N = mkN "Enflurano" ; --*
lin enfold_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "embrulhar") ; mkV2 (mkV "empacotar") ; mkV2 (mkV "encobrir") ; } ; --*
lin enforce_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "forçar") ; } ; --*
lin enforce_2_V2 = variants {mkV2 (mkV "impor") ; mkV2 (mkV "obrigar") ; } ; --*
lin enforcement_N = variants {mkN "aplicação" ; mkN "coerção" ; mkN "cumprimento" ; mkN "execução" ; mkN "imposição" ; mkN "observação" ; } ; --*
lin engage_10_V = variants {mkV "engajar" ; mkV "engatar" ; } ; --*
lin engage_1_V = variants {mkV "continuar" ; mkV "engajar" ; mkV "prosseguir" ; } ; --*
lin engage_2_V2 = mkV2 (mkV "ocupar") ; --*
lin engage_3_V2 = variants {mkV2 (mkV "assalariar") ; mkV2 (mkV "contratar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "tomar") ; } ; --*
lin engage_5_V2 = variants {mkV2 (mkV "noivar") ; mkV2 (mkV "prometer") ; } ; --*
lin engage_5_V = variants {mkV "noivar" ; mkV "prometer" ; } ; --*
lin engage_7_V2 = mkV2 (mkV "conduzir") ; --*
lin engage_8_V2 = variants {mkV2 (mkV "empregar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "enlistar") ; } ; --*
lin engage_9_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin engagement_1_N = variants {mkN "batalha" ; mkN "combate" ; mkN "luta" ; } ; --*
lin engagement_2_N = variants {mkN "compromisso" ; mkN "hora" ; } ; --*
lin engagement_3_N = variants {mkN "casamento" ; mkN "noivado" ; } ; --*
lin engagement_4_N = mkN "contratação" ; --*
lin engagement_7_N = mkN "participação" ; --*
lin engender_1_V2 = variants {mkV2 (mkV "desovar") ; mkV2 (mkV "fazer") ; } ; --*
lin engender_2_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin engine_1_N = variants {mkN "máquina" ; mkN "motor" ; mkN "motores" ; } ; --*
lin engine_2_N = mkN "motor" ; --*
lin engine_3_N = variants {mkN "engine" ; mkN "locomotiva" ; mkN "locomotive" ; mkN "máquina" ; } ; --*
lin engine_driver_N = variants {mkN "driver" ; mkN "engineer" ; mkN "maquinista" ; } ; --*
lin engineer_1_N = variants {mkN "engenheiro" ; mkN "scientist" ; } ; --*
lin engineer_1_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "engendrar") ; mkV2 (mkV "projetar") ; } ; --*
lin engineer_2_N = variants {mkN "driver" ; mkN "engineer" ; mkN "maquinista" ; } ; --*
lin engineer_2_V2 = variants {mkV2 (mkV "engenhar") ; mkV2 (mkV "organizar") ; mkV2 (mkV "orquestrar") ; } ; --*
lin engineering_1_N = variants {mkN "engenharia" ; mkN "tecnologia" ; } ; --*
lin engineering_2_N = variants {mkN "ciências" ; mkN "engenharia" ; mkN "science" ; mkN "tecnologia" ; } ; --*
lin england_PN = mkPN "Inglaterra" ; --*
lin english_1_A = mkA "inglês" ; --*
lin english_2_A = mkA "inglês" ; --*
lin englishFem_N = mkN "inglesa" ; --*
lin englishMasc_N = variants {mkN "inglês" ; mkN "Inglês" ; } ; --*
lin engraft_1_V2 = mkV2 (mkV "enxertar") ; --*
lin engraft_2_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "embutir") ; mkV2 (mkV "encaixar") ; mkV2 (mkV "implantar") ; } ; --*
lin engram_N = variants {mkN "engrama" ; mkN "trace" ; } ; --*
lin engrave_1_V2 = mkV2 (mkV "estampar") ; --*
lin engrave_2_V2 = mkV2 (mkV "gravar") ; --*
lin engrave_3_V2 = variants {mkV2 (mkV "entalhar") ; mkV2 (mkV "gravar") ; } ; --*
lin engraver_1_N = variants {mkN "entalhador" ; mkN "gravurista" ; } ; --*
lin engraver_2_N = variants {mkN "gravador" ; mkN "serigrafista" ; } ; --*
lin engraving_1_N = mkN "gravura" ; --*
lin engraving_3_N = mkN "água-forte" ; --*
lin engross_1_V2 = variants {mkV2 (mkV "focar") ; mkV2 (mkV "up") ; } ; --*
lin engross_2_V2 = mkV2 (mkV "ocupar") ; --*
lin engulf_1_V2 = variants {mkV2 (mkV "focar") ; mkV2 (mkV "up") ; } ; --*
lin enhance_1_V2 = mkV2 (mkV "aumentar") ; --*
lin enhance_2_V2 = variants {mkV2 (mkV "aprimorar") ; mkV2 (mkV "melhorar") ; } ; --*
lin enhanced_A = variants {mkA "melhorado" ; mkA "realçado" ; mkA "salientado" ; } ; --*
lin enhancement_N = variants {mkN "aprimoramento" ; mkN "melhoramento" ; mkN "melhoria" ; } ; --*
lin enigma_1_N = variants {mkN "book" ; mkN "misterio" ; mkN "mistério" ; } ; --*
lin enigma_2_N = variants {mkN "adivinha" ; mkN "adivinhação" ; mkN "adivinhas" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin enigmatic_1_A = mkA "enigmático" ; --*
lin enigmatic_2_A = mkA "enigmático" ; --*
lin enjambment_1_N = mkN "Enjambement" ; --*
lin enjoin_1_V2 = mkV2 (mkV "intimar") ; --*
lin enjoin_2_V2 = variants {mkV2 (mkV "impetrar") ; mkV2 (mkV "intimar") ; mkV2 (mkV "mandar") ; mkV2 (mkV "ordenar") ; } ; --*
lin enjoy_1_V2 = variants {mkV2 (mkV "agradar-se") ; mkV2 (mkV "saborear") ; } ; --*
lin enjoy_2_V2 = variants {mkV2 (mkV "desfrutar") ; mkV2 (mkV "gozar") ; } ; --*
lin enjoy_3_V2 = variants {mkV2 (mkV "aproveitar") ; mkV2 (mkV "cultuar") ; mkV2 (mkV "desfrutar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "gostar") ; mkV2 (mkV "gozar") ; } ; --*
lin enjoy_4_V2 = mkV2 (mkV "aproveitar") ; --*
lin enjoy_5_V2 = variants {mkV2 (mkV "desfrutar") ; mkV2 (mkV "gozar") ; } ; --*
lin enjoy_5_VV = variants {mkVV (mkV "desfrutar") ; mkVV (mkV "gozar") ; } ; --*
lin enjoyable_A = variants {mkA "agradável" ; mkA "ameno" ; mkA "aprazível" ; } ; --*
lin enjoyment_1_N = mkN "alegria" ; --*
lin enjoyment_2_N = mkN "divertimento" ; --*
lin enkindle_1_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "conflagrar") ; } ; --*
lin enkindle_2_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin enlarge_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "estender") ; } ; --*
lin enlarge_2_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "up") ; } ; --*
lin enlarge_3_V2 = mkV2 (mkV "aumentar") ; --*
lin enlarge_3_V = mkV "aumentar" ; --*
lin enlarge_4_V = variants {mkV "elaborar" ; mkV "elocubrar" ; mkV "expandir" ; mkV "expor" ; mkV "out" ; } ; --*
lin enlargement_1_N = variants {mkN "ampliação" ; mkN "aumento" ; mkN "expansão" ; } ; --*
lin enlargement_4_N = variants {mkN "alargamento" ; mkN "ampliação" ; } ; --*
lin enlarger_N = mkN "ampliador" ; --*
lin enlighten_1_V2 = variants {mkV2 (mkV "clarificar") ; mkV2 (mkV "edificar") ; mkV2 (mkV "esclarecer") ; } ; --*
lin enlighten_3_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin enlightening_1_A = variants {mkA "iluminante" ; mkA "informativo" ; mkA "noticioso" ; } ; --*
lin enlightening_2_A = mkA "edificador" ; --*
lin enlightenment_1_N = mkN "esclarecimento" ; --*
lin enlightenment_2_N = mkN "nirvana" ; --*
lin enlightenment_3_N = variants {mkN "iluminismo" ; mkN "of" ; } ; --*
lin enlist_1_V2 = variants {mkV2 (mkV "alistar-se") ; mkV2 (mkV "engajar-se") ; } ; --*
lin enlist_1_V = variants {mkV "alistar-se" ; mkV "engajar-se" ; } ; --*
lin enlist_2_V2 = variants {mkV2 (mkV "empregar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "enlistar") ; } ; --*
lin enliven_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "inspirar") ; } ; --*
lin enliven_2_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "envigorar") ; mkV2 (mkV "up") ; } ; --*
lin enmesh_V2 = variants {mkV2 (mkV "enredar") ; mkV2 (mkV "laçar") ; } ; --*
lin enmity_1_N = variants {mkN "hostilidade" ; mkN "inimizade" ; } ; --*
lin enmity_2_N = variants {mkN "aversão" ; mkN "hostilidade" ; mkN "inimizade" ; mkN "ressentimento" ; mkN "will" ; } ; --*
lin en_N = mkN "ene" ; --*
lin ennoble_1_V2 = mkV2 (mkV "dignificar") ; --*
lin ennoble_2_V2 = variants {mkV2 (mkV "enobrecer") ; mkV2 (mkV "nobilitar") ; } ; --*
lin ennui_N = variants {mkN "aborrecimento" ; mkN "apatia" ; mkN "enfado" ; mkN "fastio" ; mkN "tedio" ; mkN "tédio" ; } ; --*
lin enol_N = mkN "enol" ; --*
lin enologist_1_N = mkN "enólogo" ; --*
lin enology_1_N = variants {mkN "enologia" ; mkN "Enologia" ; } ; --*
lin enormity_4_N = mkN "atrocidade" ; --*
lin enormous_A = variants {mkA "enorme" ; mkA "imenso" ; mkA "muitogrande" ; mkA "tremendo" ; mkA "vasto" ; } ; --*
lin enormousness_N = variants {mkN "enormidade" ; mkN "grandeza" ; mkN "imensidade" ; mkN "imensidão" ; } ; --*
lin enoughPl_Card = variants {} ; --*
lin enoughSg_Card = variants {} ; --*
lin enplane_V2 = mkV2 (mkV "embarcar") ; --*
lin enplane_V = mkV "embarcar" ; --*
lin enquire_1_V2 = variants {mkV2 (mkV "indagar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "questionar") ; } ; --*
lin enquire_1_V = variants {mkV "indagar" ; mkV "perguntar" ; mkV "questionar" ; } ; --*
lin enquire_2_V2 = mkV2 (mkV "investigar") ; --*
lin enquire_3_V2 = variants {mkV2 (mkV "interrogar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "perguntar-se") ; mkV2 (mkV "ponderar") ; mkV2 (mkV "questionar") ; } ; --*
lin enquire_3_V = variants {mkV "interrogar" ; mkV "perguntar" ; mkV "perguntar-se" ; mkV "ponderar" ; mkV "questionar" ; } ; --*
lin enquiry_1_N = variants {mkN "indagação" ; mkN "inquérito" ; mkN "interrogação" ; mkN "pergunta" ; mkN "perguntar" ; mkN "questão" ; } ; --*
lin enquiry_2_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "pesquisa" ; mkN "Pesquisa" ; } ; --*
lin enquiry_3_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "questionamento" ; } ; --*
lin enrage_V2 = mkV2 (mkV "enfurecer") ; --*
lin enrapture_V2 = mkV2 (mkV "encantar") ; --*
lin enrich_1_V2 = mkV2 (mkV "enriquecer") ; --*
lin enrich_2_V2 = mkV2 (mkV "enriquecer") ; --*
lin enrichment_1_N = mkN "enriquecimento" ; --*
lin enrichment_2_N = mkN "enriquecimento" ; --*
lin enrollee_N = mkN "estudante" ; --*
lin enrollment_1_N = variants {mkN "inscrição" ; mkN "matricula" ; mkN "matrícula" ; mkN "registro" ; } ; --*
lin enroll_V2 = variants {mkV2 (mkV "inscrever") ; mkV2 (mkV "recrutar") ; mkV2 (mkV "registrar") ; } ; --*
lin enrolment_N = variants {mkN "inscrição" ; mkN "matricula" ; mkN "matrícula" ; mkN "registro" ; } ; --*
lin enrol_V2 = variants {mkV2 (mkV "inscrever") ; mkV2 (mkV "recrutar") ; mkV2 (mkV "registrar") ; } ; --*
lin en_route_Adv = variants {mkAdv "route" ; mkAdv "the" ; } ; --*
lin ensconce_V2 = variants {mkV2 (mkV "assentar") ; mkV2 (mkV "instalar") ; } ; --*
lin enshrine_1_V2 = mkV2 (mkV "consacrar") ; --*
lin enshrine_2_V2 = mkV2 (mkV "santificar") ; --*
lin enshroud_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "envolver") ; } ; --*
lin ensign_2_N = variants {mkN "Bandeira" ; mkN "flag" ; } ; --*
lin enslavement_1_N = mkN "cativeiro" ; --*
lin enslave_V2 = mkV2 (mkV "escravizar") ; --*
lin ensnare_1_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "up") ; } ; --*
lin ensnare_2_V2 = variants {mkV2 (mkV "arapucar") ; mkV2 (mkV "armadilhar") ; } ; --*
lin ensue_in_V2 = variants {mkV2 (mkV "redundar") ; mkV2 (mkV "resultar") ; mkV2 (mkV "seguir") ; mkV2 (mkV "seguir-se") ; mkV2 (mkV "sobrevir") ; mkV2 (mkV "suceder") ; } ; --*
lin ensure_1_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "assegurar-se") ; mkV2 (mkV "certificar-se") ; mkV2 (mkV "garantir") ; mkV2 (mkV "ter") ; } ; --*
lin ensure_2_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "to") ; mkV2 (mkV "verificar") ; } ; --*
lin ensure_2_VS = variants {mkVS (mkV "assegurar") ; mkVS (mkV "to") ; mkVS (mkV "verificar") ; } ; --*
lin entail_2_V2 = variants {mkV2 (mkV "enredar") ; mkV2 (mkV "entranhar") ; } ; --*
lin entangle_1_V2 = mkV2 (mkV "aprisionar") ; --*
lin entangle_2_V2 = variants {mkV2 (mkV "emaranhar") ; mkV2 (mkV "misturar") ; } ; --*
lin entanglement_N = mkN "entrelaçamento" ; --*
lin entasis_N = mkN "entasis" ; --*
lin entente_2_N = variants {mkN "cordiale" ; mkN "prática" ; } ; --*
lin entente_cordiale_2_N = variants {mkN "cordiale" ; mkN "prática" ; } ; --*
lin enter_1_V2 = variants {mkV2 (mkV "entrar") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin enter_1_V = variants {mkV "entrar" ; mkV "in" ; mkV "into" ; } ; --*
lin enter_2_V2 = mkV2 (mkV "entrar") ; --*
lin enter_3_V2 = variants {mkV2 (mkV "inscrever") ; mkV2 (mkV "recrutar") ; mkV2 (mkV "registrar") ; } ; --*
lin enter_4_V = variants {mkV "entrar" ; mkV "figurar" ; } ; --*
lin enter_5_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "registar") ; mkV2 (mkV "registrar") ; } ; --*
lin enter_6_V2 = mkV2 (mkV "entrar") ; --*
lin enter_6_V = mkV "entrar" ; --*
lin enter_7_V2 = mkV2 (mkV "aceder") ; --*
lin enter_8_V2 = variants {mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin enter_9_V = variants {mkV "abraçar" ; mkV "começar" ; mkV "embarcar" ; } ; --*
lin enteric_1_A = mkA "entérico" ; --*
lin enteric_2_A = variants {mkA "do" ; mkA "entérico" ; mkA "intestinal" ; } ; --*
lin enteritis_N = mkN "Enterite" ; --*
lin enterotoxin_N = mkN "enterotoxina" ; --*
lin enterovirus_N = variants {mkN "Enterovirus" ; mkN "enterovírus" ; mkN "Enterovírus" ; } ; --*
lin enterprise_1_N = variants {mkN "esforço" ; mkN "tarefa" ; mkN "tentativa" ; mkN "trabalho" ; } ; --*
lin enterprise_2_N = variants {mkN "companhia" ; mkN "empresa" ; } ; --*
lin enterprise_3_N = mkN "iniciativa" ; --*
lin enterprising_A = mkA "empreendedor" ; --*
lin entertain_1_V2 = variants {mkV2 (mkV "divertir") ; mkV2 (mkV "entreter") ; } ; --*
lin entertain_2_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "entreter") ; mkV2 (mkV "of") ; mkV2 (mkV "with") ; } ; --*
lin entertain_3_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "sustentar") ; } ; --*
lin entertainer_N = mkN "artista" ; --*
lin entertaining_A = variants {mkA "divertido" ; mkA "recreativo" ; } ; --*
lin entertainment_N = variants {mkN "diversão" ; mkN "divertimento" ; mkN "entretenimento" ; mkN "entreterimento" ; } ; --*
lin enthrall_V2 = mkV2 (mkV "encantar") ; --*
lin enthral_V2 = mkV2 (mkV "encantar") ; --*
lin enthrone_1_V2 = variants {mkV2 (mkV "entronar") ; mkV2 (mkV "investir") ; } ; --*
lin enthrone_2_V2 = mkV2 (mkV "entronar") ; --*
lin enthronement_N = mkN "coroação" ; --*
lin enthuse_1_V = mkV "entusiasmar" ; --*
lin enthuse_2_V = variants {mkV "entusiasmar" ; mkV "exclamar" ; } ; --*
lin enthusiasm_1_N = mkN "entusiasmo" ; --*
lin enthusiasm_3_N = mkN "entusiasmo" ; --*
lin enthusiast_2_N = variants {mkN "amador" ; mkN "diletanto" ; mkN "entusiasta" ; mkN "mais" ; mkN "não" ; } ; --*
lin enthusiastic_1_A = variants {mkA "entusiasta" ; mkA "entusiástico" ; } ; --*
lin enticement_1_N = mkN "tentação" ; --*
lin enticement_2_N = mkN "atracção" ; --*
lin enticement_3_N = mkN "tentação" ; --*
lin entice_V2 = variants {mkV2 (mkV "desencaminhar") ; mkV2 (mkV "engodar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "induzir") ; mkV2 (mkV "seduzir") ; } ; --*
lin entire_1_A = variants {mkA "inteira" ; mkA "inteiro" ; mkA "total" ; } ; --*
lin entire_2_A = variants {mkA "completo" ; mkA "inteiro" ; } ; --*
lin entirety_N = variants {mkN "total" ; mkN "totalidade" ; } ; --*
lin entitle_1_V2V = mkV2V (mkV "autorizar") ; --*
lin entitle_2_V2V = mkV2V (mkV "intitular") ; --*
lin entitle_2_VS = mkVS (mkV "intitular") ; --*
lin entitle_3_V2V = variants {mkV2V (mkV "enobrecer") ; mkV2V (mkV "nobilitar") ; } ; --*
lin entitle_3_VS = variants {mkVS (mkV "enobrecer") ; mkVS (mkV "nobilitar") ; } ; --*
lin entitlement_N = variants {mkN "direito" ; mkN "título" ; } ; --*
lin entity_N = variants {mkN "ente" ; mkN "entidade" ; mkN "ser" ; } ; --*
lin entomb_V2 = variants {mkV2 (mkV "enterrar") ; mkV2 (mkV "sepultar") ; mkV2 (mkV "soterrar") ; mkV2 (mkV "to") ; } ; --*
lin entomologist_N = variants {mkN "entomologista" ; mkN "entomólogo" ; } ; --*
lin entomology_N = mkN "entomologia" ; --*
lin entomophobia_N = mkN "entomofobia" ; --*
lin entourage_N = variants {mkN "comitiva" ; mkN "séquito" ; } ; --*
lin entr'acte_1_N = variants {mkN "entreato" ; mkN "intervalo" ; } ; --*
lin entrain_V2 = mkV2 (mkV "embarcar") ; --*
lin entrain_V = mkV "embarcar" ; --*
lin entrance_1_N = variants {mkN "boca" ; mkN "entrada" ; } ; --*
lin entrance_1_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin entrance_3_N = variants {mkN "entrada" ; mkN "ingresso" ; } ; --*
lin entrance_fee_N = variants {mkN "charge" ; mkN "fee" ; mkN "money" ; mkN "of" ; mkN "preço" ; mkN "price" ; } ; --*
lin entrance_money_N = variants {mkN "charge" ; mkN "fee" ; mkN "money" ; mkN "of" ; mkN "preço" ; mkN "price" ; } ; --*
lin entrant_1_N = mkN "aquele" ; --*
lin entrant_2_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin entrap_1_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "up") ; } ; --*
lin entrap_2_V2 = variants {mkV2 (mkV "arapucar") ; mkV2 (mkV "armadilhar") ; } ; --*
lin entreat_V2 = variants {mkV2 (mkV "implorar") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin entreaty_N = variants {mkN "apelo" ; mkN "petição" ; mkN "súplica" ; } ; --*
lin entrench_1_V2 = variants {mkV2 (mkV "barricar-se") ; mkV2 (mkV "defender-se") ; mkV2 (mkV "entrincheirar") ; mkV2 (mkV "entrincheirar-se") ; } ; --*
lin entrench_3_V2 = variants {mkV2 (mkV "entrincheirar") ; mkV2 (mkV "in") ; } ; --*
lin entrepot_2_N = variants {mkN "depósito" ; mkN "аrmazenagem" ; } ; --*
lin entrepreneurial_1_A = mkA "empresarial" ; --*
lin entrepreneurial_2_A = mkA "empresarial" ; --*
lin entrepreneur_N = variants {mkN "empreendedor" ; mkN "empresário" ; } ; --*
lin entropy_1_N = variants {mkN "entropia" ; mkN "information" ; } ; --*
lin entropy_2_N = mkN "entropia" ; --*
lin entrust_1_V2 = variants {mkV2 (mkV "comissionar") ; mkV2 (mkV "confiar") ; mkV2 (mkV "encarregar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "incumbir") ; mkV2 (mkV "ter") ; } ; --*
lin entrust_2_V2 = mkV2 (mkV "entregar") ; --*
lin entry_1_N = mkN "registro" ; --*
lin entry_2_N = variants {mkN "appearance" ; mkN "apresentação" ; mkN "introdução" ; mkN "lançamento" ; } ; --*
lin entry_4_N = variants {mkN "entrada" ; mkN "submissão" ; } ; --*
lin entry_5_N = variants {mkN "boca" ; mkN "entrada" ; } ; --*
lin entry_6_N = variants {mkN "entrada" ; mkN "ingresso" ; } ; --*
lin entwine_1_V2 = mkV2 (mkV "amarrar") ; --*
lin entwine_2_V2 = variants {mkV2 (mkV "enlaçar") ; mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; mkV2 (mkV "envenenar") ; mkV2 (mkV "trançar") ; } ; --*
lin enumerate_1_V2 = mkV2 (mkV "enumerar") ; --*
lin enumerate_2_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "enumerar") ; } ; --*
lin enumeration_1_N = mkN "enumeração" ; --*
lin enumeration_2_N = variants {mkN "conta" ; mkN "contagem" ; mkN "enumeração" ; } ; --*
lin enunciate_1_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "out") ; mkV2 (mkV "pronunciar") ; } ; --*
lin enunciate_2_V2 = variants {mkV2 (mkV "articular") ; mkV2 (mkV "dizer") ; mkV2 (mkV "enunciar") ; mkV2 (mkV "vocalizar") ; } ; --*
lin enunciation_N = mkN "dicção" ; --*
lin enured_A = mkA "endurecido" ; --*
lin enuresis_N = variants {mkN "enuresia" ; mkN "incontinence" ; } ; --*
lin envelope_1_N = variants {mkN "envelope" ; mkN "sobre" ; mkN "sobrecarta" ; mkN "sobrescrito" ; } ; --*
lin envelop_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "embrulhar") ; mkV2 (mkV "empacotar") ; mkV2 (mkV "encobrir") ; } ; --*
lin envenom_1_V2 = variants {mkV2 (mkV "amargar") ; mkV2 (mkV "amargurar") ; mkV2 (mkV "envenenar") ; } ; --*
lin envenom_2_V2 = mkV2 (mkV "envenenar") ; --*
lin enviable_A = mkA "invejável" ; --*
lin envious_A = variants {mkA "ciumento" ; mkA "invejosa" ; mkA "invejoso" ; } ; --*
lin environment_1_N = variants {mkN "ambiente" ; mkN "Ambiente" ; } ; --*
lin environment_2_N = variants {mkN "ambiente" ; mkN "cerque" ; mkN "entorno" ; mkN "meio" ; } ; --*
lin environmental_1_A = mkA "ambiental" ; --*
lin environmental_2_A = mkA "ambiental" ; --*
lin environmentalism_1_N = mkN "ambientalismo" ; --*
lin environmentalism_2_N = variants {mkN "ambientalismo" ; mkN "ecologismo" ; } ; --*
lin environmentalist_N = variants {mkN "ambientalista" ; mkN "Ambientalistas" ; } ; --*
lin environs_1_N = variants {mkN "ambiente" ; mkN "cerque" ; mkN "entorno" ; mkN "meio" ; } ; --*
lin environ_V2 = variants {mkV2 (mkV "contornar") ; mkV2 (mkV "rodear") ; } ; --*
lin envisage_V2 = variants {mkV2 (mkV "conjeturar") ; mkV2 (mkV "imaginar") ; mkV2 (mkV "of") ; mkV2 (mkV "pensar") ; } ; --*
lin envision_1_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin envision_2_V2 = variants {mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; mkV2 (mkV "visionar") ; } ; --*
lin envoy_2_N = variants {mkN "emissário" ; mkN "representante" ; } ; --*
lin envy_1_N = variants {mkN "ciumes" ; mkN "inveja" ; } ; --*
lin envy_1_V2 = mkV2 (mkV "invejar") ; --*
lin envy_2_N = mkN "inveja" ; --*
lin envy_2_V2 = variants {mkV2 (mkV "invejar") ; mkV2 (mkV "ter") ; } ; --*
lin enwrap_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "embrulhar") ; mkV2 (mkV "empacotar") ; mkV2 (mkV "encobrir") ; } ; --*
lin enzymatic_A = mkA "enzimático" ; --*
lin enzyme_N = variants {mkN "enzima" ; mkN "enzimas" ; mkN "Enzimas" ; } ; --*
lin eon_1_N = mkN "éon" ; --*
lin eon_2_N = mkN "éon" ; --*
lin eon_3_N = mkN "éon" ; --*
lin eonian_2_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin eosin_N = variants {mkN "eosina" ; mkN "Eosina" ; } ; --*
lin eosinophil_1_N = mkN "eosinófilo" ; --*
lin eosinophilia_N = mkN "eosinofilia" ; --*
lin eosinophilic_A = mkA "eosinofílico" ; --*
lin epanaphora_N = mkN "anáfora" ; --*
lin eparchy_2_N = mkN "Eparquia" ; --*
lin epaulet_N = mkN "dragona" ; --*
lin epaulette_N = mkN "dragona" ; --*
lin epenthesis_N = variants {mkN "epêntese" ; mkN "Epêntese" ; } ; --*
lin ephedrine_N = mkN "efedrina" ; --*
lin ephemeral_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "passageiro" ; mkA "temporário" ; mkA "transitório" ; } ; --*
lin ephemera_N = mkN "efêmera" ; --*
lin ephemeris_N = mkN "efeméride" ; --*
lin epic_1_A = variants {mkA "épico" ; mkA "heróico" ; } ; --*
lin epic_2_A = mkA "épico" ; --*
lin epicanthus_N = variants {mkN "Epicanto" ; mkN "fold" ; } ; --*
lin epicardium_N = variants {mkN "epicárdio" ; mkN "pericardium" ; } ; --*
lin epicarp_1_N = variants {mkN "epicarpo" ; mkN "exocarpo" ; } ; --*
lin epicentre_1_N = mkN "epicentro" ; --*
lin epic_N = variants {mkN "epopéia" ; mkN "poem" ; } ; --*
lin epicurean_1_A = mkA "epicuriano" ; --*
lin epicurean_3_A = mkA "voluptuoso" ; --*
lin epicureanism_N = mkN "epicurismo" ; --*
lin epidemic_A = mkA "epidêmico" ; --*
lin epidemic_N = variants {mkN "epidemia" ; mkN "epidemias" ; mkN "Epidemias" ; } ; --*
lin epidemiologic_1_A = mkA "epidemiológico" ; --*
lin epidemiologist_N = mkN "epidemiologista" ; --*
lin epidemiology_N = variants {mkN "epidemiologia" ; mkN "Epidemiologia" ; } ; --*
lin epidermis_N = mkN "epiderme" ; --*
lin epididymis_N = variants {mkN "Epididimo" ; mkN "epidídimo" ; } ; --*
lin epididymitis_N = variants {mkN "epididimite" ; mkN "Epididimite" ; } ; --*
lin epidural_A = mkA "epidural" ; --*
lin epigastric_1_A = mkA "epigástrico" ; --*
lin epigastric_2_A = mkA "epigástrico" ; --*
lin epiglottis_N = mkN "epiglote" ; --*
lin epiglottitis_N = mkN "epiglotite" ; --*
lin epigone_1_N = mkN "epígono" ; --*
lin epigraph_1_N = mkN "epígrafo" ; --*
lin epigraph_2_N = variants {mkN "epígrafe" ; mkN "epigraphe" ; } ; --*
lin epigraphy_N = variants {mkN "epigrafia" ; mkN "Epigrafia" ; } ; --*
lin epilation_2_N = mkN "depilação" ; --*
lin epilepsy_N = variants {mkN "epilepsia" ; mkN "Epilepsia" ; mkN "gota-coral" ; } ; --*
lin epileptic_A = variants {mkA "epiléptico" ; mkA "epilético" ; } ; --*
lin epilepticFem_N = mkN "epiléptico" ; --*
lin epilepticMasc_N = mkN "epiléptico" ; --*
lin epilogue_1_N = mkN "epílogo" ; --*
lin epilogue_2_N = mkN "epílogo" ; --*
lin epinephrine_1_N = variants {mkN "adranalina" ; mkN "adrenalina" ; mkN "epinefrina" ; } ; --*
lin epiphany_1_N = mkN "Epifania" ; --*
lin epiphany_1_PN = mkPN "Epifania" ; --*
lin epiphany_2_N = variants {mkN "6" ; mkN "day" ; mkN "Epifania" ; mkN "Kings'" ; mkN "of" ; } ; --*
lin epiphany_2_PN = variants {mkPN "6" ; mkPN "day" ; mkPN "Epifania" ; mkPN "Kings'" ; mkPN "of" ; } ; --*
lin epiphenomenon_N = variants {mkN "Epifenómeno" ; mkN "Epifenômeno" ; } ; --*
lin epiphora_N = mkN "Epístrofe" ; --*
lin epiphysis_1_N = mkN "epífise" ; --*
lin epiphysis_2_N = variants {mkN "body" ; mkN "cerebri" ; mkN "gland" ; mkN "glândula" ; } ; --*
lin episcopal_2_A = mkA "episcopal" ; --*
lin episcopate_1_N = mkN "bispado" ; --*
lin episcopate_2_N = variants {mkN "diocese" ; mkN "Diocese" ; } ; --*
lin episiotomy_N = mkN "episiotomia" ; --*
lin episode_1_N = mkN "episódio" ; --*
lin episode_2_N = mkN "episódio" ; --*
lin episode_3_N = mkN "episódio" ; --*
lin episodic_1_A = mkA "episódico" ; --*
lin episodic_2_A = variants {mkA "episódico" ; mkA "ocasional" ; } ; --*
lin episodic_3_A = mkA "episódico" ; --*
lin epispadias_N = mkN "Epispádia" ; --*
lin episteme_N = mkN "episteme" ; --*
lin epistemic_A = variants {mkA "epistêmico" ; mkA "epistemológico" ; } ; --*
lin epistemologist_N = variants {mkN "epistemóloga" ; mkN "epistemólogo" ; } ; --*
lin epistemology_N = variants {mkN "epistemologia" ; mkN "Epistemologia" ; } ; --*
lin epistle_1_N = variants {mkN "carta" ; mkN "epístola" ; } ; --*
lin epistle_2_N = variants {mkN "epístola" ; mkN "Epístola" ; } ; --*
lin epitaph_1_N = variants {mkN "Epitafio" ; mkN "epitáfio" ; } ; --*
lin epitaph_2_N = mkN "epitáfio" ; --*
lin epitaxy_N = mkN "epitaxia" ; --*
lin epithalamium_N = mkN "epitalâmio" ; --*
lin epithelial_A = mkA "epitelial" ; --*
lin epithelioma_N = mkN "epitelioma" ; --*
lin epithelium_N = variants {mkN "epitélio" ; mkN "tissue" ; } ; --*
lin epithet_1_N = variants {mkN "epíteto" ; mkN "nome" ; } ; --*
lin epithet_2_N = mkN "epíteto" ; --*
lin epitome_1_N = variants {mkN "Prototipo" ; mkN "protótipo" ; mkN "Protótipo" ; } ; --*
lin epitome_2_N = mkN "epítome" ; --*
lin epitomize_1_V2 = mkV2 (mkV "tipificar") ; --*
lin epoch_1_N = variants {mkN "época" ; mkN "era" ; mkN "Escala" ; mkN "idade" ; mkN "período" ; mkN "século" ; mkN "tempo" ; } ; --*
lin epoch_3_N = variants {mkN "época" ; mkN "período" ; } ; --*
lin eponym_1_N = mkN "epônimo" ; --*
lin eponym_2_N = variants {mkN "Epónimo" ; mkN "epônimo" ; mkN "Epônimo" ; mkN "Epônimos" ; } ; --*
lin eponymous_A = mkA "epónimo" ; --*
lin epos_2_N = variants {mkN "epopéia" ; mkN "poem" ; } ; --*
lin epoxy_N = variants {mkN "epóxi" ; mkN "glue" ; mkN "resin" ; } ; --*
lin epsilon_N = variants {mkN "epsílon" ; mkN "épsilon" ; } ; --*
lin equal_1_A = variants {mkA "análogo" ; mkA "idêntico" ; mkA "igual" ; mkA "parelho" ; } ; --*
lin equal_1_V2 = variants {mkV2 (mkV "equivaler") ; mkV2 (mkV "igualar") ; } ; --*
lin equal_2_A = variants {mkA "adequado" ; mkA "capaz" ; } ; --*
lin equal_2_V2 = mkV2 (mkV "competir") ; --*
lin equal_3_V2 = variants {mkV2 (mkV "equiparar") ; mkV2 (mkV "igualar") ; } ; --*
lin equality_1_N = mkN "igualdade" ; --*
lin equality_2_N = variants {mkN "eqüidade" ; mkN "equivalência" ; mkN "igualdade" ; mkN "Igualdade" ; } ; --*
lin equalization_1_N = variants {mkN "equalização" ; mkN "equalizador" ; } ; --*
lin equalize_1_V2 = variants {mkV2 (mkV "equalizar") ; mkV2 (mkV "even") ; } ; --*
lin equalize_2_V2 = variants {mkV2 (mkV "equiparar") ; mkV2 (mkV "igualar") ; } ; --*
lin equalizer_2_N = mkN "contrapeso" ; --*
lin equal_N = variants {mkN "igual" ; mkN "par" ; mkN "pário" ; } ; --*
lin equanimity_N = variants {mkN "calma" ; mkN "equanimidade" ; } ; --*
lin equate_1_V2 = mkV2 (mkV "equiparar") ; --*
lin equate_2_V2 = mkV2 (mkV "equacionar") ; --*
lin equate_3_V2 = variants {mkV2 (mkV "equiparar") ; mkV2 (mkV "igualar") ; } ; --*
lin equation_1_N = variants {mkN "Equaçao" ; mkN "equação" ; mkN "Equações" ; } ; --*
lin equation_2_N = variants {mkN "eqüidade" ; mkN "equivalência" ; mkN "igualdade" ; mkN "Igualdade" ; } ; --*
lin equation_3_N = mkN "equação" ; --*
lin equator_1_N = variants {mkN "equador" ; mkN "Equador" ; } ; --*
lin equatorial_1_A = mkA "equatorial" ; --*
lin equatorial_2_A = mkA "equatorial" ; --*
lin equatorial_3_A = mkA "equatorial" ; --*
lin equestrian_1_A = variants {mkA "cavalar" ; mkA "equestre" ; mkA "eqüestre" ; mkA "hípico" ; } ; --*
lin equestrian_N = variants {mkN "ginete" ; mkN "joquei" ; mkN "rider" ; } ; --*
lin equidistant_A = variants {mkA "equidistante" ; mkA "eqüidistante" ; } ; --*
lin equilateral_N = mkN "equilátero" ; --*
lin equilibrium_1_N = mkN "equilíbrio" ; --*
lin equilibrium_2_N = variants {mkN "equilíbrio" ; mkN "Equilíbrio" ; mkN "equilibrium" ; } ; --*
lin equilibrium_3_N = variants {mkN "contrapeso" ; mkN "equilíbrio" ; } ; --*
lin equilibrium_4_N = variants {mkN "equilíbrio" ; mkN "of" ; mkN "sense" ; } ; --*
lin equine_1_A = mkA "eqüino" ; --*
lin equine_1_N = variants {mkN "cavalo" ; mkN "equídeos" ; mkN "ungulados" ; } ; --*
lin equinox_1_N = mkN "equinócio" ; --*
lin equinox_2_N = variants {mkN "equinócio" ; mkN "point" ; } ; --*
lin equip_1_V2 = variants {mkV2 (mkV "apetrechar") ; mkV2 (mkV "equipar") ; mkV2 (mkV "out") ; mkV2 (mkV "suprir") ; } ; --*
lin equip_2_V2 = mkV2 (mkV "equipar") ; --*
lin equipage_2_N = mkN "carruagem" ; --*
lin equipment_N = variants {mkN "equipamento" ; mkN "equipamentos" ; mkN "ferramenta" ; } ; --*
lin equipoise_N = variants {mkN "contrapeso" ; mkN "equilíbrio" ; } ; --*
lin equitable_A = variants {mkA "equitativo" ; mkA "imparcial" ; mkA "justo" ; } ; --*
lin equity_1_N = mkN "valor" ; --*
lin equity_2_N = mkN "Capital" ; --*
lin equity_3_N = variants {mkN "equanimidade" ; mkN "eqüidade" ; mkN "justiça" ; } ; --*
lin equivalence_1_N = variants {mkN "eqüidade" ; mkN "equivalência" ; mkN "igualdade" ; mkN "Igualdade" ; } ; --*
lin equivalence_3_N = mkN "comparação" ; --*
lin equivalent_1_N = mkN "equivalente" ; --*
lin equivalent_2_N = variants {mkN "equivalente" ; mkN "weight" ; } ; --*
lin equivalent_A = mkA "equivalente" ; --*
lin equivocal_1_A = variants {mkA "ambíguo" ; mkA "dúbio" ; } ; --*
lin equivocation_1_N = mkN "evasão" ; --*
lin equivocation_2_N = variants {mkN "evasividade" ; mkN "mentira" ; } ; --*
lin era_1_N = variants {mkN "época" ; mkN "era" ; mkN "Escala" ; mkN "idade" ; mkN "período" ; mkN "século" ; mkN "tempo" ; } ; --*
lin era_2_N = mkN "era" ; --*
lin era_3_N = variants {mkN "Média" ; mkN "run" ; } ; --*
lin eradicable_A = mkA "eradicável" ; --*
lin eradicate_1_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin eradicate_2_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; } ; --*
lin eradication_N = variants {mkN "aniquilação" ; mkN "erradicação" ; } ; --*
lin erase_1_V2 = variants {mkV2 (mkV "matar") ; mkV2 (mkV "out") ; } ; --*
lin erase_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin erase_3_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "deletar") ; } ; --*
lin eraser_N = variants {mkN "borracha" ; mkN "goma" ; mkN "safa" ; } ; --*
lin erbium_N = variants {mkN "erbio" ; mkN "Erbio" ; mkN "number" ; } ; --*
lin erect_1_A = mkA "vertical" ; --*
lin erect_1_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "erigir") ; mkV2 (mkV "up") ; } ; --*
lin erect_2_V2 = variants {mkV2 (mkV "erguer") ; mkV2 (mkV "levantar") ; } ; --*
lin erectile_1_A = mkA "erétil" ; --*
lin erectile_2_A = mkA "erétil" ; --*
lin erecting_N = mkN "erecção" ; --*
lin erection_1_N = variants {mkN "ereção" ; mkN "pau" ; mkN "tesão" ; } ; --*
lin erection_2_N = mkN "edifício" ; --*
lin erection_3_N = mkN "erecção" ; --*
lin eremite_N = mkN "eremita" ; --*
lin erg_N = mkN "erg" ; --*
lin ergonomic_A = mkA "ergonômico" ; --*
lin ergonomics_N = variants {mkN "bioengenharia" ; mkN "Biotecnologia" ; mkN "ergonomia" ; } ; --*
lin ergosterol_N = mkN "ergosterol" ; --*
lin ergotamine_N = variants {mkN "ergotamina" ; mkN "Ergotamina" ; } ; --*
lin ergotism_N = mkN "ergotismo" ; --*
lin erin_PN = mkPN "Erin" ; --*
lin eristic_2_N = mkN "Erística" ; --*
lin eritrean_A = variants {mkA "eritreia" ; mkA "eritreu" ; } ; --*
lin eritrea_PN = variants {mkPN "Eritreia" ; mkPN "of" ; } ; --*
lin ermine_1_N = mkN "arminho" ; --*
lin ermine_2_N = variants {mkN "arminho" ; mkN "erminea" ; mkN "weasel" ; } ; --*
lin erode_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "corroer") ; mkV2 (mkV "erodir") ; } ; --*
lin erosion_1_N = variants {mkN "away" ; mkN "erosão" ; } ; --*
lin erosion_2_N = mkN "erosão" ; --*
lin erosion_4_N = variants {mkN "corrosão" ; mkN "erosão" ; } ; --*
lin erosive_2_A = variants {mkA "cáustico" ; mkA "corrosivo" ; } ; --*
lin erotic_1_A = mkA "erótico" ; --*
lin eroticism_1_N = variants {mkN "erotismo" ; mkN "Erotismo" ; } ; --*
lin err_1_V = variants {mkV "confundir" ; mkV "equivocar" ; } ; --*
lin err_2_V = variants {mkV "errar" ; mkV "vagar" ; } ; --*
lin errand_N = mkN "recado" ; --*
lin errant_1_A = mkA "errante" ; --*
lin errant_2_A = mkA "errante" ; --*
lin erratic_1_A = variants {mkA "instável" ; mkA "volúvel" ; } ; --*
lin erratic_3_A = mkA "errático" ; --*
lin erratum_N = variants {mkN "erro" ; mkN "Erro" ; mkN "error" ; } ; --*
lin erroneous_A = variants {mkA "erróneo" ; mkA "errôneo" ; } ; --*
lin erroneousness_N = mkN "erro" ; --*
lin error_1_N = variants {mkN "engano" ; mkN "equívoco" ; mkN "erro" ; mkN "falha" ; } ; --*
lin error_2_N = mkN "erro" ; --*
lin error_3_N = variants {mkN "belief" ; mkN "erro" ; } ; --*
lin error_4_N = mkN "erro" ; --*
lin error_5_N = mkN "erro" ; --*
lin error_7_N = mkN "erro" ; --*
lin erse_N = mkN "gaélico" ; --*
lin erstwhile_A = mkA "antigo" ; --*
lin eructation_1_N = mkN "erupção" ; --*
lin eructation_2_N = mkN "arroto" ; --*
lin erudite_A = variants {mkA "instruído" ; mkA "sábio" ; mkA "sapiente" ; } ; --*
lin eruditeness_N = variants {mkN "aprendizado" ; mkN "aprendizagem" ; mkN "Aprendizagem" ; mkN "ciência" ; mkN "erudição" ; mkN "sabedoria" ; } ; --*
lin erudition_N = variants {mkN "aprendizado" ; mkN "aprendizagem" ; mkN "Aprendizagem" ; mkN "ciência" ; mkN "erudição" ; mkN "sabedoria" ; } ; --*
lin erupt_2_V = variants {mkV "chamejar" ; mkV "coruscar" ; mkV "open" ; mkV "out" ; mkV "up" ; } ; --*
lin erupt_3_V = variants {mkV "acender" ; mkV "começar" ; mkV "fire" ; } ; --*
lin erupt_5_V = mkV "entrar" ; --*
lin erupt_6_V = mkV "explodir" ; --*
lin erupt_8_V = variants {mkV "out" ; mkV "recrudescer" ; } ; --*
lin eruption_1_N = variants {mkN "erupção" ; mkN "erupções" ; mkN "eruption" ; } ; --*
lin eruption_3_N = mkN "erupção" ; --*
lin eruption_4_N = variants {mkN "deflagração" ; mkN "epidemia" ; mkN "erupção" ; mkN "explosão" ; mkN "surto" ; mkN "Surto" ; } ; --*
lin eruption_5_N = variants {mkN "baterpalmas" ; mkN "explosão" ; } ; --*
lin eruptive_2_A = mkA "ígneo" ; --*
lin eryngo_1_N = mkN "cardo-corredor" ; --*
lin erysipelas_N = mkN "erisipela" ; --*
lin erythema_N = mkN "eritema" ; --*
lin erythromycin_N = mkN "eritromicina" ; --*
lin erythropoiesis_N = mkN "eritropoiese" ; --*
lin erythropoietic_A = mkA "eritropoiético" ; --*
lin erythropoietin_N = mkN "eritropoietina" ; --*
lin escalade_N = mkN "escalada" ; --*
lin escalate_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; mkV2 (mkV "up") ; } ; --*
lin escalator_2_N = variants {mkN "escada" ; mkN "staircase" ; mkN "stairway" ; } ; --*
lin escapade_1_N = variants {mkN "aventura" ; mkN "undertaking" ; mkN "venture" ; } ; --*
lin escape_1_N = variants {mkN "escapada" ; mkN "escape" ; mkN "fuga" ; } ; --*
lin escape_1_V = variants {mkV "away" ; mkV "escapar" ; mkV "fugir" ; mkV "loose" ; } ; --*
lin escape_2_N = mkN "escapismo" ; --*
lin escape_2_V2 = mkV2 (mkV "escapar") ; --*
lin escape_3_V = variants {mkV "away" ; mkV "by" ; mkV "escapar" ; mkV "off" ; mkV "out" ; } ; --*
lin escape_4_V2 = mkV2 (mkV "escapar") ; --*
lin escape_5_N = mkN "evasão" ; --*
lin escape_5_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "escapar") ; } ; --*
lin escape_6_VS = variants {mkVS (mkV "away") ; mkVS (mkV "escapar") ; mkVS (mkV "escapulir") ; mkVS (mkV "for") ; mkVS (mkV "fugir") ; mkVS (mkV "it") ; mkVS (mkV "tail") ; mkVS (mkV "the") ; mkVS (mkV "to") ; } ; --*
lin escape_7_N = variants {mkN "derrame" ; mkN "escoamento" ; } ; --*
lin escape_7_V = mkV "escapar" ; --*
lin escape_8_N = variants {mkN "cock" ; mkN "valve" ; mkN "válvula" ; } ; --*
lin escapism_N = mkN "escapismo" ; --*
lin escargot_N = variants {mkN "escargot" ; mkN "Escargot" ; } ; --*
lin escarpment_1_N = mkN "escarpa" ; --*
lin escarpment_2_N = variants {mkN "embankment" ; mkN "escarpa" ; } ; --*
lin eschar_N = mkN "Escara" ; --*
lin eschatology_N = mkN "Escatologia" ; --*
lin eschew_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "renegar") ; } ; --*
lin escort_1_N = mkN "guarda-costas" ; --*
lin escort_1_V2 = mkV2 (mkV "escoltar") ; --*
lin escort_2_N = mkN "acompanhamento" ; --*
lin escort_2_V2 = mkV2 (mkV "acompanhar") ; --*
lin escort_4_N = variants {mkN "acompanhante" ; mkN "ficante" ; } ; --*
lin escritoire_N = variants {mkN "escrivaninha" ; mkN "secretária" ; mkN "table" ; } ; --*
lin escudo_1_N = variants {mkN "escudo" ; mkN "Escudo" ; } ; --*
lin escutcheon_1_N = variants {mkN "escudo" ; mkN "plate" ; } ; --*
lin escutcheon_3_N = variants {mkN "escudo" ; mkN "Escudo" ; } ; --*
lin esfahan_PN = mkPN "Isfahan" ; --*
lin esker_N = mkN "Esker" ; --*
lin eskimo_1_N = variants {mkN "esquimau" ; mkN "esquimó" ; mkN "Esquimó" ; mkN "esquimós" ; mkN "Inuit" ; mkN "inuíte" ; mkN "inuítes" ; mkN "Inuits" ; } ; --*
lin eskimo_2_N = variants {mkN "esquimó" ; mkN "esquimó-aleútes" ; } ; --*
lin esophageal_A = mkA "esofágico" ; --*
lin esophagitis_1_N = mkN "esofagite" ; --*
lin esophagus_N = variants {mkN "esófago" ; mkN "esôfago" ; mkN "garganta" ; mkN "gorja" ; } ; --*
lin esoteric_A = mkA "esotérico" ; --*
lin espadrille_N = mkN "alpargata" ; --*
lin especial_A = variants {mkA "especial" ; mkA "excepcional" ; } ; --*
lin esperanto_N = variants {mkN "esperanto" ; mkN "Esperanto" ; } ; --*
lin espionage_N = variants {mkN "espionagem" ; mkN "Espionagem" ; } ; --*
lin esplanade_N = mkN "esplanada" ; --*
lin esp_N = variants {mkN "clarividência" ; mkN "perception" ; mkN "sight" ; } ; --*
lin espoo_PN = mkPN "Espoo" ; --*
lin espousal_1_N = variants {mkN "casamento" ; mkN "do" ; } ; --*
lin espousal_2_N = variants {mkN "esponsais" ; mkN "noivado" ; } ; --*
lin espousal_3_N = variants {mkN "aceitação" ; mkN "adoção" ; mkN "adopção" ; } ; --*
lin espouse_1_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "adotar") ; } ; --*
lin espouse_2_V2 = variants {mkV2 (mkV "casar") ; mkV2 (mkV "esposar") ; mkV2 (mkV "hitched") ; mkV2 (mkV "juntar") ; mkV2 (mkV "married") ; mkV2 (mkV "up") ; } ; --*
lin espouse_3_V2 = variants {mkV2 (mkV "abraçar") ; mkV2 (mkV "up") ; } ; --*
lin espresso_N = variants {mkN "café" ; mkN "Café" ; } ; --*
lin esprit_de_corps_N = variants {mkN "de" ; mkN "espírito" ; mkN "spirit" ; } ; --*
lin espy_V2 = mkV2 (mkV "ver") ; --*
lin essay_1_N = variants {mkN "ensaio" ; mkN "Ensaios" ; } ; --*
lin essay_1_V2 = variants {mkV2 (mkV "procurar") ; mkV2 (mkV "tentar") ; } ; --*
lin essay_2_N = variants {mkN "ensaio" ; mkN "tentativa" ; } ; --*
lin essay_2_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "out") ; mkV2 (mkV "tentar") ; } ; --*
lin essayist_N = variants {mkN "ensaísta" ; mkN "tratadista" ; } ; --*
lin essence_1_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin essence_2_N = mkN "essência" ; --*
lin essence_3_N = mkN "essência" ; --*
lin essence_4_N = variants {mkN "Perfumaria" ; mkN "perfume" ; } ; --*
lin essen_PN = mkPN "Essen" ; --*
lin essential_1_A = variants {mkA "essencial" ; mkA "imprescindível" ; mkA "indispensável" ; } ; --*
lin essential_2_A = mkA "essencial" ; --*
lin essential_3_A = variants {mkA "crucial" ; mkA "important" ; mkA "the" ; } ; --*
lin essential_5_A = variants {mkA "essencial" ; mkA "substancial" ; mkA "substantivo" ; } ; --*
lin essential_N = variants {mkN "necessidade" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin essex_PN = mkPN "Essex" ; --*
lin establish_1_V2 = variants {mkV2 (mkV "estabelecer") ; mkV2 (mkV "up") ; } ; --*
lin establish_2_V2 = variants {mkV2 (mkV "constituir") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fundar") ; } ; --*
lin establish_3_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "validar") ; } ; --*
lin establish_4_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fazer") ; } ; --*
lin establish_6_V2 = variants {mkV2 (mkV "instalar") ; mkV2 (mkV "up") ; } ; --*
lin establish_7_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "estabelecer") ; } ; --*
lin establish_8_V2 = variants {mkV2 (mkV "basear") ; mkV2 (mkV "fundamentar") ; } ; --*
lin established_1_A = variants {mkA "constituído" ; mkA "estabelecido" ; } ; --*
lin established_3_A = mkA "convencional" ; --*
lin establishment_1_N = variants {mkN "constituição" ; mkN "estabelecimento" ; mkN "organização" ; } ; --*
lin establishment_2_N = mkN "instituição" ; --*
lin establishment_3_N = variants {mkN "administração" ; mkN "body" ; mkN "organização" ; } ; --*
lin establishment_7_N = mkN "validação" ; --*
lin estate_1_N = variants {mkN "bem" ; mkN "bens" ; mkN "fazenda" ; mkN "herança" ; mkN "Património" ; mkN "patrimônio" ; mkN "propriedade" ; } ; --*
lin estate_2_N = variants {mkN "estate" ; mkN "fazenda" ; } ; --*
lin estazolam_N = mkN "Estazolam" ; --*
lin esteem_1_N = variants {mkN "estima" ; mkN "respeito" ; } ; --*
lin esteem_1_V2 = variants {mkV2 (mkV "prezar") ; mkV2 (mkV "respeitar") ; mkV2 (mkV "venerar") ; } ; --*
lin esteem_2_N = mkN "admiração" ; --*
lin esteem_2_V2 = variants {mkV2 (mkV "as") ; mkV2 (mkV "considerar") ; mkV2 (mkV "of") ; mkV2 (mkV "on") ; mkV2 (mkV "to") ; mkV2 (mkV "upon") ; } ; --*
lin esteem_3_N = variants {mkN "deferência" ; mkN "respeito" ; } ; --*
lin ester_N = variants {mkN "éster" ; mkN "Ésteres" ; } ; --*
lin esther_1_PN = mkPN "Ester" ; --*
lin esther_2_PN = variants {mkPN "Livro" ; mkPN "of" ; } ; --*
lin esthete_N = mkN "esteta" ; --*
lin esthetic_1_A = mkA "estético" ; --*
lin esthetic_2_A = mkA "estético" ; --*
lin esthetic_3_A = variants {mkA "artístico" ; mkA "estético" ; } ; --*
lin esthetical_A = mkA "estético" ; --*
lin esthetic_N = mkN "estética" ; --*
lin esthetics_N = variants {mkN "estética" ; mkN "Estética" ; } ; --*
lin estimable_2_A = variants {mkA "estimável" ; mkA "respeitável" ; } ; --*
lin estimable_3_A = mkA "computável" ; --*
lin estimate_1_N = variants {mkN "aproximação" ; mkN "estimativa" ; mkN "ideia" ; } ; --*
lin estimate_1_V2V = variants {mkV2V (mkV "chutar") ; mkV2V (mkV "estimar") ; } ; --*
lin estimate_2_N = variants {mkN "avaliação" ; mkN "cálculo" ; mkN "estimativa" ; } ; --*
lin estimate_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "avaliar") ; mkV2 (mkV "calcular") ; mkV2 (mkV "on") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin estimate_2_V2V = variants {mkV2V (mkV "achar") ; mkV2V (mkV "avaliar") ; mkV2V (mkV "calcular") ; mkV2V (mkV "on") ; mkV2V (mkV "predizer") ; mkV2V (mkV "prever") ; mkV2V (mkV "prognosticar") ; } ; --*
lin estimate_2_V = variants {mkV "achar" ; mkV "avaliar" ; mkV "calcular" ; mkV "on" ; mkV "predizer" ; mkV "prever" ; mkV "prognosticar" ; } ; --*
lin estimate_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "avaliar") ; mkVS (mkV "calcular") ; mkVS (mkV "on") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin estimate_3_N = variants {mkN "estimativa" ; mkN "orçamento" ; } ; --*
lin estimate_4_N = variants {mkN "estimativa" ; mkN "orçamento" ; } ; --*
lin estimate_5_N = variants {mkN "apreciação" ; mkN "estimação" ; } ; --*
lin estimation_1_N = variants {mkN "estimativa" ; mkN "orçamento" ; } ; --*
lin estimation_2_N = variants {mkN "apreciação" ; mkN "estimação" ; } ; --*
lin estimation_3_N = variants {mkN "aproximação" ; mkN "estimativa" ; mkN "ideia" ; } ; --*
lin estimation_4_N = variants {mkN "avaliação" ; mkN "cálculo" ; mkN "estimativa" ; } ; --*
lin estivation_1_N = mkN "Estivação" ; --*
lin estradiol_1_N = mkN "estradiol" ; --*
lin estrange_2_V2 = variants {mkV2 (mkV "alhear") ; mkV2 (mkV "alienar") ; mkV2 (mkV "estranhar") ; } ; --*
lin estrangement_2_N = variants {mkN "alheamento" ; mkN "alienação" ; } ; --*
lin estriol_1_N = mkN "estriol" ; --*
lin estrogen_1_N = variants {mkN "estrogénio" ; mkN "Estrogénio" ; mkN "estrogênio" ; } ; --*
lin estrogenic_A = mkA "estrogênico" ; --*
lin estrone_1_N = mkN "estrona" ; --*
lin estrus_1_N = variants {mkN "andada" ; mkN "cio" ; mkN "estar" ; mkN "estro" ; } ; --*
lin estuary_N = variants {mkN "estuário" ; mkN "estuários" ; mkN "Estuários" ; } ; --*
lin eta_1_N = variants {mkN "ETA" ; mkN "Fatherland" ; mkN "Homeland" ; mkN "ta" ; } ; --*
lin eta_2_N = variants {mkN "eta" ; mkN "Η" ; } ; --*
lin etanercept_N = mkN "Etanercepte" ; --*
lin etch_3_V2 = variants {mkV2 (mkV "entalhar") ; mkV2 (mkV "gravar") ; } ; --*
lin etching_1_N = mkN "decapagem" ; --*
lin etching_2_N = variants {mkN "água-forte" ; mkN "decapagem" ; mkN "gravura" ; } ; --*
lin etching_3_N = mkN "água-forte" ; --*
lin eternal_1_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin eternal_2_A = variants {mkA "incessante" ; mkA "infindável" ; mkA "infinita" ; mkA "infinito" ; mkA "interminável" ; } ; --*
lin eternity_1_N = mkN "eternidade" ; --*
lin eternity_2_N = variants {mkN "eternidade" ; mkN "existence" ; } ; --*
lin eternity_3_N = variants {mkN "eternidade" ; mkN "Eternidade" ; } ; --*
lin ethane_N = mkN "etano" ; --*
lin ethanol_N = variants {mkN "alcohol" ; mkN "etanol" ; } ; --*
lin ether_1_N = mkN "éter" ; --*
lin ether_2_N = variants {mkN "Eter" ; mkN "éter" ; mkN "Éter" ; mkN "Éteres" ; } ; --*
lin ether_3_N = mkN "éter" ; --*
lin ether_4_N = variants {mkN "éter" ; mkN "ether" ; } ; --*
lin ethereal_1_A = mkA "etéreo" ; --*
lin ethereal_3_A = mkA "celeste" ; --*
lin ethernet_N = mkN "ethernet" ; --*
lin ethic_1_N = variants {mkN "ética" ; mkN "éticas" ; mkN "orientation" ; mkN "principle" ; } ; --*
lin ethic_2_N = variants {mkN "code" ; mkN "ética" ; } ; --*
lin ethical_2_A = mkA "ético" ; --*
lin ethics_1_N = variants {mkN "ética" ; mkN "morais" ; mkN "moral" ; mkN "motive" ; } ; --*
lin ethics_2_N = variants {mkN "Conceitos" ; mkN "Etica" ; mkN "philosophy" ; } ; --*
lin ethiopian_A = variants {mkA "etíope" ; mkA "etiópico" ; } ; --*
lin ethiopian_N = mkN "etíope" ; --*
lin ethiopia_PN = variants {mkPN "Abissínia" ; mkPN "Democratic" ; mkPN "Etiopia" ; mkPN "Etiópia" ; } ; --*
lin ethmoid_N = variants {mkN "bone" ; mkN "etmoide" ; mkN "Osso" ; } ; --*
lin ethnic_1_A = variants {mkA "cultural" ; mkA "etnia" ; mkA "étnica" ; mkA "étnico" ; } ; --*
lin ethnic_2_A = mkA "pagão" ; --*
lin ethnocentric_A = mkA "etnocêntrico" ; --*
lin ethnocentrism_N = variants {mkN "etnocentrismo" ; mkN "Etnocentrismo" ; } ; --*
lin ethnographic_1_A = mkA "etnográfico" ; --*
lin ethnography_N = variants {mkN "anthropology" ; mkN "etnografia" ; } ; --*
lin ethnological_1_A = variants {mkA "etinológico" ; mkA "etnológico" ; } ; --*
lin ethnology_N = variants {mkN "etnologia" ; mkN "Etnologia" ; } ; --*
lin ethology_N = variants {mkN "etologia" ; mkN "Etologia" ; } ; --*
lin ethos_1_N = variants {mkN "ambiência" ; mkN "ethos" ; } ; --*
lin etiological_1_A = mkA "etiológico" ; --*
lin etiological_2_A = mkA "etiológico" ; --*
lin etiology_1_N = mkN "etiologia" ; --*
lin etiology_2_N = variants {mkN "etiologia" ; mkN "Etiologia" ; } ; --*
lin etiquette_N = variants {mkN "cerimonial" ; mkN "etiqueta" ; mkN "Regras" ; } ; --*
lin etodolac_N = mkN "Etodolaco" ; --*
lin etymological_A = mkA "etmológico" ; --*
lin etymology_1_N = mkN "etimologia" ; --*
lin etymology_2_N = variants {mkN "etimologia" ; mkN "Etimologia" ; mkN "Etimologias" ; } ; --*
lin eucalyptus_1_N = mkN "eucalipto" ; --*
lin eucalyptus_2_N = variants {mkN "eucalipto" ; mkN "tree" ; } ; --*
lin eucharist_N = variants {mkN "Eucharist" ; mkN "liturgia" ; mkN "Liturgia" ; mkN "liturgy" ; mkN "of" ; mkN "Sacrament" ; mkN "Supper" ; } ; --*
lin euclidean_1_A = mkA "euclideano" ; --*
lin eudiometer_N = mkN "eudiômetro" ; --*
lin eugene_1_PN = variants {mkPN "Eugene" ; mkPN "Eugênio" ; } ; --*
lin eugenics_N = mkN "eugenia" ; --*
lin euglenoid_1_N = variants {mkN "Euglenofita" ; mkN "euglenófita" ; } ; --*
lin eukaryote_1_N = variants {mkN "eucarionte" ; mkN "Eucariontes" ; mkN "eucariota" ; mkN "eukaryota" ; mkN "Eukaryota" ; } ; --*
lin eulogist_N = mkN "elogiador" ; --*
lin eulogy_1_N = variants {mkN "elogio" ; mkN "panegírico" ; } ; --*
lin eulogy_2_N = variants {mkN "elogio" ; mkN "panegírico" ; } ; --*
lin eunuch_N = variants {mkN "eunoco" ; mkN "eunuco" ; } ; --*
lin euphemism_N = mkN "eufemismo" ; --*
lin euphemistic_1_A = variants {mkA "eufemístico" ; mkA "inofensivo" ; } ; --*
lin euphonic_1_A = mkA "eufônico" ; --*
lin euphonious_1_A = variants {mkA "eufónico" ; mkA "harmonioso" ; } ; --*
lin euphonious_2_A = variants {mkA "eufónico" ; mkA "harmonioso" ; mkA "sonoro" ; } ; --*
lin euphonium_N = variants {mkN "eufónio" ; mkN "eufônio" ; } ; --*
lin euphony_N = variants {mkN "eufonia" ; mkN "música" ; } ; --*
lin euphoria_1_N = mkN "euforia" ; --*
lin euphoric_A = mkA "eufórico" ; --*
lin eupnea_1_N = variants {mkN "Eupneia" ; mkN "eupnéia" ; mkN "Eupnéia" ; } ; --*
lin eurasia_PN = variants {mkPN "Eurasia" ; mkPN "Eurásia" ; } ; --*
lin euro_1_N = variants {mkN "euro" ; mkN "Euro" ; } ; --*
lin eurodollar_N = mkN "eurodólar" ; --*
lin europe_1_PN = mkPN "Europa" ; --*
lin europe_2_PN = variants {mkPN "Community" ; mkPN "Economic" ; mkPN "Market" ; mkPN "UE" ; mkPN "União" ; mkPN "Union" ; } ; --*
lin europe_3_PN = mkPN "Europa" ; --*
lin european_A = variants {mkA "europeia" ; mkA "europeu" ; } ; --*
lin european_N = mkN "europeu" ; --*
lin europium_N = variants {mkN "európio" ; mkN "number" ; } ; --*
lin eutectic_N = mkN "eutético" ; --*
lin euthanasia_N = variants {mkN "eutanásia" ; mkN "killing" ; } ; --*
lin eutrophication_N = variants {mkN "Eutrófico" ; mkN "Eutrofizacao" ; mkN "eutrofização" ; } ; --*
lin evacuate_2_V2 = mkV2 (mkV "evacuar") ; --*
lin evacuate_3_V2 = mkV2 (mkV "evacuar") ; --*
lin evacuate_4_V2 = mkV2 (mkV "evacuar") ; --*
lin evacuation_1_N = mkN "evacuação" ; --*
lin evacuation_2_N = mkN "evacuação" ; --*
lin evacuation_3_N = variants {mkN "evacuação" ; mkN "excreção" ; mkN "Excreção" ; } ; --*
lin evade_1_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin evade_2_V2 = variants {mkV2 (mkV "escapar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "safar") ; } ; --*
lin evaluate_1_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "estimar") ; } ; --*
lin evaluate_2_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "judgment") ; mkV2 (mkV "julgar") ; } ; --*
lin evaluation_1_N = mkN "avaliação" ; --*
lin evaluation_2_N = mkN "avaliação" ; --*
lin evaluator_N = variants {mkN "avaliador" ; mkN "julgador" ; } ; --*
lin evanescent_A = mkA "evanescente" ; --*
lin evangelical_1_A = mkA "evangélico" ; --*
lin evangelical_2_A = mkA "evangélico" ; --*
lin evangelical_3_A = mkA "evangélico" ; --*
lin evangelicalism_N = mkN "Evangelicalismo" ; --*
lin evangelism_N = variants {mkN "evangelismo" ; mkN "Evangelização" ; } ; --*
lin evangelist_2_N = mkN "evangelista" ; --*
lin evangelistic_2_A = mkA "evangélico" ; --*
lin evaporate_1_V2 = variants {mkV2 (mkV "evaporar") ; mkV2 (mkV "vaporizar") ; } ; --*
lin evaporate_3_V = mkV "evaporar" ; --*
lin evaporation_1_N = variants {mkN "evaporação" ; mkN "vapor" ; } ; --*
lin evaporation_2_N = variants {mkN "desidratação" ; mkN "ressecação" ; mkN "up" ; } ; --*
lin evaporite_N = mkN "evaporito" ; --*
lin evasion_1_N = mkN "evasão" ; --*
lin evasion_4_N = mkN "evasão" ; --*
lin evasive_2_A = variants {mkA "esquivo" ; mkA "evasivo" ; } ; --*
lin evasiveness_N = variants {mkN "evasividade" ; mkN "mentira" ; } ; --*
lin eve_2_N = mkN "véspera" ; --*
lin eve_3_N = mkN "vésperas" ; --*
lin eve_4_N = variants {mkN "anoitecer" ; mkN "fim" ; mkN "noite" ; mkN "tarde" ; mkN "véspera" ; } ; --*
lin even_1_A = mkA "par" ; --*
lin even_1_V2 = variants {mkV2 (mkV "nivelar") ; mkV2 (mkV "out") ; } ; --*
lin even_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "ser") ; } ; --*
lin even_3_AdA = mkAdA "ainda" ; --*
lin even_3_A = variants {mkA "no" ; mkA "plano" ; } ; --*
lin evening_1_N = variants {mkN "anoitecer" ; mkN "fim" ; mkN "noite" ; mkN "tarde" ; mkN "véspera" ; } ; --*
lin evening_2_N = variants {mkN "noite" ; mkN "tarde" ; } ; --*
lin evening_3_N = mkN "noite" ; --*
lin even_N = variants {mkN "anoitecer" ; mkN "fim" ; mkN "noite" ; mkN "tarde" ; mkN "véspera" ; } ; --*
lin evenness_2_N = mkN "invariabilidade" ; --*
lin even_out_1_V2 = variants {mkV2 (mkV "contrabalançar") ; mkV2 (mkV "contrabalancear") ; mkV2 (mkV "corrigir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin even_out_2_V2 = variants {mkV2 (mkV "nivelar") ; mkV2 (mkV "out") ; } ; --*
lin even_out_3_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "ser") ; } ; --*
lin event_1_N = variants {mkN "acontecimento" ; mkN "evento" ; mkN "fato" ; } ; --*
lin event_4_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin eventide_N = variants {mkN "anoitecer" ; mkN "fim" ; mkN "noite" ; mkN "tarde" ; mkN "véspera" ; } ; --*
lin eventual_A = variants {mkA "contingente" ; mkA "eventual" ; } ; --*
lin eventuality_N = variants {mkN "acontecimento" ; mkN "evento" ; mkN "eventualidade" ; } ; --*
lin eve_PN = mkPN "Eva" ; --*
lin ever_1_Adv = variants {mkAdv "all" ; mkAdv "em" ; } ; --*
lin ever_1_AdV = variants {mkAdV "all" ; mkAdV "em" ; } ; --*
lin ever_2_Adv = mkAdv "sempre" ; --*
lin ever_2_AdV = mkAdV "sempre" ; --*
lin evergreen_A = mkA "sempre-verde" ; --*
lin evergreen_N = variants {mkN "Folha" ; mkN "plant" ; } ; --*
lin everlasting_1_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin evermore_1_Adv = variants {mkAdv "eternamente" ; mkAdv "para" ; mkAdv "perpetuamente" ; } ; --*
lin evermore_2_Adv = mkAdv "eternamente" ; --*
lin every_bit_Adv = variants {mkAdv "bit" ; mkAdv "tanto" ; } ; --*
lin everyday_1_A = variants {mkA "cotidiano" ; mkA "quotidiano" ; } ; --*
lin everyplace_Adv = variants {mkAdv "em" ; mkAdv "over" ; } ; --*
lin everywhere_Adv = variants {mkAdv "em" ; mkAdv "over" ; } ; --*
lin evict_1_V2 = variants {mkV2 (mkV "despejar") ; mkV2 (mkV "remover") ; } ; --*
lin evict_2_V2 = variants {mkV2 (mkV "desalojar") ; mkV2 (mkV "out") ; mkV2 (mkV "remover") ; } ; --*
lin evidence_1_N = mkN "evidência" ; --*
lin evidence_1_V2 = variants {mkV2 (mkV "certificar") ; mkV2 (mkV "demonstrar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "provar") ; } ; --*
lin evidence_2_N = variants {mkN "evidência" ; mkN "indicação" ; } ; --*
lin evidence_2_V2 = variants {mkV2 (mkV "atestar") ; mkV2 (mkV "provar") ; mkV2 (mkV "witness") ; } ; --*
lin evidence_3_N = mkN "prova" ; --*
lin evident_1_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin evident_2_A = variants {mkA "evidente" ; mkA "observável" ; } ; --*
lin evidentiary_1_A = mkA "probatório" ; --*
lin evil_1_A = variants {mkA "má" ; mkA "maléfica" ; mkA "maléfico" ; mkA "malvado" ; mkA "mau" ; mkA "ruim" ; } ; --*
lin evil_1_N = variants {mkN "imoralidade" ; mkN "maldade" ; } ; --*
lin evil_2_N = mkN "maldade" ; --*
lin evil_3_A = variants {mkA "maligno" ; mkA "malvado" ; } ; --*
lin evil_3_N = variants {mkN "mal" ; mkN "maldade" ; mkN "Maldade" ; } ; --*
lin evil_doer_N = mkN "pecador" ; --*
lin evince_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "mostrar") ; } ; --*
lin eviscerate_3_V2 = variants {mkV2 (mkV "desentranhar") ; mkV2 (mkV "destripar") ; mkV2 (mkV "desventrar") ; mkV2 (mkV "desviscerar") ; mkV2 (mkV "estripar") ; mkV2 (mkV "esventrar") ; } ; --*
lin evitable_A = mkA "evitável" ; --*
lin evocation_1_N = mkN "evocação" ; --*
lin evocative_A = variants {mkA "evocador" ; mkA "nostálgico" ; mkA "sugestivo" ; } ; --*
lin evoke_1_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin evoke_2_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "forth") ; mkV2 (mkV "incitar") ; mkV2 (mkV "up") ; } ; --*
lin evoke_3_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin evoke_5_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "evocar") ; mkV2 (mkV "sugerir") ; } ; --*
lin evolution_1_N = mkN "evolução" ; --*
lin evolution_2_N = variants {mkN "evolução" ; mkN "evolution" ; mkN "filogênese" ; mkN "filogenia" ; } ; --*
lin evolutionary_A = mkA "evolutivo" ; --*
lin evolve_1_V2 = variants {mkV2 (mkV "desenvolver") ; mkV2 (mkV "elaborar") ; } ; --*
lin evolve_2_V = variants {mkV "desenvolver" ; mkV "evoluir" ; } ; --*
lin evolve_3_V2 = mkV2 (mkV "desenvolver") ; --*
lin ewe_2_N = variants {mkN "jeje" ; mkN "Língua" ; } ; --*
lin ewe_3_N = mkN "ovelha" ; --*
lin ex_A = variants {mkA "antiquado" ; mkA "defasado" ; mkA "démodé" ; mkA "fora" ; mkA "obsoleto" ; mkA "passado" ; } ; --*
lin exabit_N = mkN "Exabit" ; --*
lin exabyte_1_N = mkN "Exabyte" ; --*
lin exabyte_2_N = variants {mkN "exabyte" ; mkN "exbibyte" ; } ; --*
lin exacerbate_1_V2 = variants {mkV2 (mkV "agravar") ; mkV2 (mkV "exacerbar") ; mkV2 (mkV "piorar") ; } ; --*
lin exacerbate_2_V2 = variants {mkV2 (mkV "exacerbar") ; mkV2 (mkV "exasperar") ; } ; --*
lin exacerbation_1_N = mkN "exacerbação" ; --*
lin exact_1_A = variants {mkA "certo" ; mkA "correcto" ; mkA "exato" ; mkA "preciso" ; } ; --*
lin exact_1_V2 = mkV2 (mkV "exigir") ; --*
lin exact_2_A = variants {mkA "afinado" ; mkA "certo" ; mkA "exacto" ; mkA "exato" ; mkA "perfeito" ; mkA "preciso" ; } ; --*
lin exact_2_V2 = mkV2 (mkV "custar") ; --*
lin exacting_1_A = mkA "meticuloso" ; --*
lin exactitude_N = variants {mkN "exactidão" ; mkN "exatidão" ; mkN "precisão" ; } ; --*
lin exactness_N = variants {mkN "exactidão" ; mkN "exatidão" ; mkN "precisão" ; } ; --*
lin exaggerate_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "exagerar") ; } ; --*
lin exaggerate_2_V2 = variants {mkV2 (mkV "agigantar") ; mkV2 (mkV "exagerar") ; } ; --*
lin exaggeration_1_N = variants {mkN "exagero" ; mkN "hipérbole" ; } ; --*
lin exaggeration_2_N = mkN "exagero" ; --*
lin exaggeration_3_N = variants {mkN "exagero" ; mkN "hipérbole" ; } ; --*
lin exalt_1_V2 = variants {mkV2 (mkV "exaltar") ; mkV2 (mkV "glorificar") ; mkV2 (mkV "louvar") ; } ; --*
lin exalt_2_V2 = variants {mkV2 (mkV "enebriar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "exultar") ; mkV2 (mkV "pink") ; } ; --*
lin exalt_3_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "inspirar") ; } ; --*
lin exalt_4_V2 = mkV2 (mkV "exaltar") ; --*
lin exaltation_1_N = variants {mkN "embevecimento" ; mkN "enlevo" ; mkN "êxtase" ; } ; --*
lin exaltation_4_N = variants {mkN "apoteose" ; mkN "exaltação" ; } ; --*
lin examen_1_N = mkN "exame" ; --*
lin examination_1_N = variants {mkN "examinar" ; mkN "inspecionar" ; } ; --*
lin examination_2_N = variants {mkN "exame" ; mkN "teste" ; } ; --*
lin examination_3_N = mkN "interrogatório" ; --*
lin examination_4_N = mkN "exame" ; --*
lin examination_5_N = variants {mkN "exame" ; mkN "examinação" ; mkN "teste" ; } ; --*
lin examine_1_V2 = variants {mkV2 (mkV "analizar") ; mkV2 (mkV "examinar") ; } ; --*
lin examine_2_V2 = variants {mkV2 (mkV "examinar") ; mkV2 (mkV "inspecionar") ; } ; --*
lin examine_3_V2 = variants {mkV2 (mkV "examinar") ; mkV2 (mkV "investigar") ; mkV2 (mkV "pesquisar") ; } ; --*
lin examine_5_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "out") ; mkV2 (mkV "tentar") ; } ; --*
lin examiner_1_N = mkN "examinador" ; --*
lin examiner_2_N = variants {mkN "examinador" ; mkN "inspector" ; mkN "inspetor" ; } ; --*
lin exam_N = variants {mkN "exame" ; mkN "teste" ; } ; --*
lin example_1_N = mkN "exemplo" ; --*
lin example_2_N = variants {mkN "exemplar" ; mkN "exemplo" ; } ; --*
lin example_3_N = variants {mkN "example" ; mkN "exemplo" ; mkN "modelo" ; } ; --*
lin example_4_N = variants {mkN "example" ; mkN "exemplo" ; mkN "lesson" ; mkN "lição" ; } ; --*
lin example_5_N = variants {mkN "caso" ; mkN "exemplo" ; mkN "ocasião" ; mkN "ocorrência" ; } ; --*
lin example_6_N = mkN "exercício" ; --*
lin exanthem_1_N = variants {mkN "eruption" ; mkN "exantema" ; } ; --*
lin exasperate_1_V2 = variants {mkV2 (mkV "exacerbar") ; mkV2 (mkV "exasperar") ; } ; --*
lin exasperate_2_V2 = variants {mkV2 (mkV "exasperar") ; mkV2 (mkV "irritar") ; } ; --*
lin exasperate_3_V2 = variants {mkV2 (mkV "agravar") ; mkV2 (mkV "exacerbar") ; mkV2 (mkV "piorar") ; } ; --*
lin exasperating_1_A = variants {mkA "exasperador" ; mkA "exasperante" ; } ; --*
lin exasperating_2_A = variants {mkA "agravante" ; mkA "exasperador" ; mkA "exasperante" ; } ; --*
lin exasperation_1_N = variants {mkN "agravamento" ; mkN "exasperação" ; mkN "irritação" ; } ; --*
lin exasperation_2_N = mkN "exasperação" ; --*
lin excavate_1_V2 = variants {mkV2 (mkV "desenterrar") ; mkV2 (mkV "escavar") ; } ; --*
lin excavate_3_V2 = mkV2 (mkV "escavar") ; --*
lin excavate_4_V2 = mkV2 (mkV "escavar") ; --*
lin excavation_1_N = variants {mkN "movimentação" ; mkN "terraplenagem" ; } ; --*
lin excavation_2_N = variants {mkN "escavação" ; mkN "site" ; } ; --*
lin excavation_3_N = mkN "buracos" ; --*
lin excavation_4_N = variants {mkN "mineração" ; mkN "Mineração" ; mkN "movimentação" ; mkN "terraplenagem" ; } ; --*
lin excavator_2_N = variants {mkN "Escavadeira" ; mkN "escavadora" ; mkN "shovel" ; } ; --*
lin exceed_1_V2 = variants {mkV2 (mkV "exceder") ; mkV2 (mkV "transcender") ; } ; --*
lin exceed_2_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "exceder") ; mkV2 (mkV "past") ; mkV2 (mkV "superar") ; mkV2 (mkV "transcender") ; } ; --*
lin exceed_3_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin exceeding_A = mkA "excepcional" ; --*
lin excellence_1_N = mkN "excelência" ; --*
lin excellence_2_N = mkN "excelência" ; --*
lin excellency_1_N = mkN "Sua" ; --*
lin excellency_2_N = mkN "excelência" ; --*
lin excellent_A = variants {mkA "brilhante" ; mkA "excelente" ; mkA "fabuloso" ; mkA "magnífico" ; } ; --*
lin excel_V = variants {mkV "exceder" ; mkV "out" ; mkV "sobressair" ; } ; --*
lin except_2_V2 = variants {mkV2 (mkV "excetuar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "off") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; } ; --*
lin exception_1_N = variants {mkN "elisão" ; mkN "exceção" ; mkN "excepção" ; mkN "exclusão" ; } ; --*
lin exception_2_N = variants {mkN "exceção" ; mkN "excepção" ; } ; --*
lin exception_3_N = variants {mkN "exceção" ; mkN "excepção" ; } ; --*
lin exceptionable_A = mkA "inaceitável" ; --*
lin exceptional_1_A = mkA "excepcional" ; --*
lin exceptional_2_A = variants {mkA "especial" ; mkA "excepcional" ; } ; --*
lin exceptional_3_A = mkA "excepcional" ; --*
lin excerpt_N = variants {mkN "excerto" ; mkN "extrato" ; mkN "passagem" ; mkN "trecho" ; } ; --*
lin excess_1_N = variants {mkN "abundância" ; mkN "excedente" ; mkN "excesso" ; } ; --*
lin excess_2_N = variants {mkN "demasia" ; mkN "excesso" ; mkN "exorbitância" ; } ; --*
lin excess_A = variants {mkA "excessivo" ; mkA "extra" ; mkA "redundante" ; mkA "reduntante" ; mkA "supérfluo" ; } ; --*
lin excessive_1_A = variants {mkA "demasiado" ; mkA "excessivo" ; } ; --*
lin excessive_2_A = mkA "excessivo" ; --*
lin exchange_1_V2 = mkV2 (mkV "trocar") ; --*
lin exchange_2_N = variants {mkN "debate" ; mkN "troca" ; } ; --*
lin exchange_2_V2 = variants {mkV2 (mkV "converter") ; mkV2 (mkV "mudar") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin exchange_3_N = variants {mkN "câmbio" ; mkN "troca" ; } ; --*
lin exchange_3_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "over") ; } ; --*
lin exchange_4_V2 = variants {mkV2 (mkV "comutar") ; mkV2 (mkV "permutar") ; mkV2 (mkV "trocar") ; } ; --*
lin exchange_5_N = variants {mkN "central" ; mkN "exchange" ; } ; --*
lin exchange_5_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin exchange_6_V2 = mkV2 (mkV "trocar") ; --*
lin exchange_9_N = variants {mkN "mudança" ; mkN "substituição" ; } ; --*
lin exchangeable_3_A = mkA "intercambiável" ; --*
lin excise_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "retirar") ; } ; --*
lin exciseman_N = variants {mkN "collector" ; mkN "fiscal" ; mkN "of" ; mkN "revenue" ; } ; --*
lin excise_N = variants {mkN "imposto" ; mkN "impostos" ; mkN "tax" ; } ; --*
lin excision_1_N = mkN "exérese" ; --*
lin excision_2_N = variants {mkN "ablação" ; mkN "extirpação" ; mkN "out" ; } ; --*
lin excision_3_N = mkN "excomunhão" ; --*
lin excision_4_N = mkN "extirpação" ; --*
lin excitability_1_N = mkN "excitabilidade" ; --*
lin excitable_1_A = mkA "excitável" ; --*
lin excitable_2_A = mkA "excitável" ; --*
lin excitation_1_N = variants {mkN "excitação" ; mkN "excitamento" ; } ; --*
lin excitation_3_N = mkN "excitação" ; --*
lin excite_1_V2 = mkV2 (mkV "animar") ; --*
lin excite_2_V2 = mkV2 (mkV "estimular") ; --*
lin excite_3_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "mexer") ; } ; --*
lin excite_4_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin excite_5_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin excite_6_V2 = variants {mkV2 (mkV "comover") ; mkV2 (mkV "up") ; } ; --*
lin excite_7_V2 = mkV2 (mkV "excitar") ; --*
lin excite_8_V2 = mkV2 (mkV "excitar") ; --*
lin excited_1_A = variants {mkA "emocional" ; mkA "excitado" ; mkA "up" ; } ; --*
lin excited_2_A = variants {mkA "entusiasmado" ; mkA "excitada" ; mkA "excitado" ; } ; --*
lin excited_3_A = variants {mkA "delirante" ; mkA "frenético" ; } ; --*
lin excited_4_A = mkA "entusiasmado" ; --*
lin excitement_1_N = mkN "regozijo" ; --*
lin excitement_2_N = variants {mkN "excitação" ; mkN "excitamento" ; } ; --*
lin excitement_3_N = mkN "excitação" ; --*
lin excitement_4_N = mkN "distúrbio" ; --*
lin exciting_1_A = mkA "excitante" ; --*
lin exciting_2_A = mkA "excitante" ; --*
lin exclaim_1_V2 = variants {mkV2 (mkV "berrar") ; mkV2 (mkV "exclamar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "out") ; } ; --*
lin exclaim_2_V2 = variants {mkV2 (mkV "exclamar") ; mkV2 (mkV "proclamar") ; mkV2 (mkV "promulgar") ; mkV2 (mkV "veicular") ; } ; --*
lin exclamation_1_N = mkN "exclamação" ; --*
lin exclamation_3_N = mkN "exclamação" ; --*
lin exclamatory_A = mkA "enfático" ; --*
lin exclude_1_V2 = variants {mkV2 (mkV "excetuar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "off") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; } ; --*
lin exclude_2_V2 = variants {mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin exclude_3_V2 = variants {mkV2 (mkV "exceptuar") ; mkV2 (mkV "excluir") ; } ; --*
lin exclude_4_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "proibir") ; } ; --*
lin exclude_5_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin exclusion_2_N = mkN "excomunhão" ; --*
lin exclusion_3_N = variants {mkN "elisão" ; mkN "exceção" ; mkN "excepção" ; mkN "exclusão" ; } ; --*
lin exclusion_4_N = variants {mkN "exclusão" ; mkN "expulsão" ; } ; --*
lin exclusive_1_A = mkA "exclusivo" ; --*
lin exclusive_2_A = mkA "exclusivo" ; --*
lin exclusive_N = mkN "furo" ; --*
lin excogitate_1_V2 = variants {mkV2 (mkV "forjar") ; mkV2 (mkV "formular") ; mkV2 (mkV "inventar") ; } ; --*
lin excogitate_2_V2 = variants {mkV2 (mkV "contemplar") ; mkV2 (mkV "over") ; mkV2 (mkV "refletir") ; } ; --*
lin excogitation_2_N = variants {mkN "concepção" ; mkN "inovação" ; mkN "invenção" ; } ; --*
lin excommunicate_1_V2 = mkV2 (mkV "excomungar") ; --*
lin excommunicate_2_V2 = mkV2 (mkV "excomungar") ; --*
lin excommunication_1_N = mkN "excomunhão" ; --*
lin excommunication_2_N = mkN "excomunhão" ; --*
lin excoriate_1_V2 = variants {mkV2 (mkV "condenar") ; mkV2 (mkV "desaprovar") ; mkV2 (mkV "reprovar") ; } ; --*
lin excoriate_2_V2 = mkV2 (mkV "escoriar") ; --*
lin excoriation_1_N = mkN "abrasão" ; --*
lin excrement_N = variants {mkN "excreção" ; mkN "excremento" ; mkN "merda" ; mkN "product" ; mkN "waste" ; } ; --*
lin excrescence_1_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin excrescence_2_N = mkN "excrescência" ; --*
lin excrete_V2 = mkV2 (mkV "expelir") ; --*
lin excretion_1_N = variants {mkN "evacuação" ; mkN "excreção" ; mkN "Excreção" ; } ; --*
lin excretion_2_N = variants {mkN "excreção" ; mkN "excremento" ; mkN "merda" ; mkN "product" ; mkN "waste" ; } ; --*
lin excretory_A = mkA "excretório" ; --*
lin exculpate_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "inocentar") ; } ; --*
lin exculpation_1_N = variants {mkN "álibi" ; mkN "desculpa" ; mkN "escusa" ; } ; --*
lin excursion_1_N = variants {mkN "excursão" ; mkN "ida" ; mkN "passeio" ; mkN "trip" ; } ; --*
lin excursion_2_N = mkN "excursão" ; --*
lin excusable_1_A = mkA "desculpável" ; --*
lin excusable_2_A = mkA "perdoável" ; --*
lin excuse_1_N = variants {mkN "álibi" ; mkN "desculpa" ; mkN "escusa" ; } ; --*
lin excuse_1_V2 = variants {mkV2 (mkV "desculpar") ; mkV2 (mkV "escusar") ; mkV2 (mkV "perdoar") ; } ; --*
lin excuse_2_V2 = variants {mkV2 (mkV "excusar") ; mkV2 (mkV "eximir") ; mkV2 (mkV "off") ; } ; --*
lin excuse_3_V2 = variants {mkV2 (mkV "desculpar") ; mkV2 (mkV "desculpar-se") ; mkV2 (mkV "explicar") ; } ; --*
lin excuse_4_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "justificar") ; mkV2 (mkV "perdoar") ; mkV2 (mkV "racionalizar") ; } ; --*
lin excuse_6_V2 = mkV2 (mkV "escusar") ; --*
lin execrable_1_A = variants {mkA "lamentável" ; mkA "miserável" ; } ; --*
lin execrable_2_A = variants {mkA "abominável" ; mkA "detestável" ; mkA "Detestável" ; mkA "execrável" ; mkA "odioso" ; } ; --*
lin execrate_1_V2 = variants {mkV2 (mkV "abominar") ; mkV2 (mkV "detestar") ; mkV2 (mkV "execrar") ; mkV2 (mkV "odiar") ; } ; --*
lin execrate_2_V2 = variants {mkV2 (mkV "abominar") ; mkV2 (mkV "anatematizar") ; } ; --*
lin execration_1_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "detestação" ; mkN "execração" ; mkN "horror" ; mkN "ódio" ; mkN "repugnância" ; mkN "repulsa" ; mkN "repulsão" ; } ; --*
lin execration_2_N = variants {mkN "maldição" ; mkN "Maldição" ; } ; --*
lin execute_1_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "to") ; } ; --*
lin execute_2_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "justiçar") ; } ; --*
lin execute_3_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "cumprir") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "realizar") ; mkV2 (mkV "through") ; } ; --*
lin execute_5_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "ligar") ; } ; --*
lin execute_6_V2 = variants {mkV2 (mkV "desempenhar") ; mkV2 (mkV "executar") ; mkV2 (mkV "fazer") ; } ; --*
lin execution_1_N = variants {mkN "execução" ; mkN "pena" ; mkN "penalty" ; mkN "punishment" ; } ; --*
lin execution_2_N = variants {mkN "desempenho" ; mkN "execução" ; mkN "into" ; mkN "out" ; } ; --*
lin execution_3_N = variants {mkN "execução" ; mkN "execution" ; } ; --*
lin execution_6_N = variants {mkN "cumprimento" ; mkN "execução" ; mkN "Implementação" ; mkN "out" ; } ; --*
lin execution_7_N = variants {mkN "assassinato" ; mkN "assassínio" ; mkN "homicídio" ; } ; --*
lin executioner_N = variants {mkN "algoz" ; mkN "carnífice" ; mkN "carrasco" ; mkN "executioner" ; } ; --*
lin executive_1_N = variants {mkN "director" ; mkN "executivo" ; } ; --*
lin executive_2_N = variants {mkN "poder" ; mkN "Poder" ; } ; --*
lin executive_3_N = variants {mkN "administrador" ; mkN "executivo" ; } ; --*
lin executive_A = mkA "executivo" ; --*
lin executor_N = mkN "executor" ; --*
lin executrix_N = mkN "executora" ; --*
lin exegesis_N = variants {mkN "exegese" ; mkN "Exegese" ; } ; --*
lin exemplar_N = variants {mkN "example" ; mkN "exemplo" ; mkN "modelo" ; } ; --*
lin exemplary_1_A = variants {mkA "exemplar" ; mkA "modelar" ; mkA "modelo" ; } ; --*
lin exemplary_2_A = mkA "emblemático" ; --*
lin exemplify_1_V2 = variants {mkV2 (mkV "ilustrar") ; mkV2 (mkV "representar") ; } ; --*
lin exemplify_2_V2 = variants {mkV2 (mkV "exemplificar") ; mkV2 (mkV "ilustrar") ; } ; --*
lin exempt_1_A = mkA "isento" ; --*
lin exempt_1_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "liberar") ; } ; --*
lin exempt_2_V2 = variants {mkV2 (mkV "excusar") ; mkV2 (mkV "eximir") ; mkV2 (mkV "off") ; } ; --*
lin exemption_1_N = variants {mkN "isenção" ; mkN "liberdade" ; mkN "liberdades" ; } ; --*
lin exemption_3_N = variants {mkN "immunity" ; mkN "imunidade" ; } ; --*
lin exercise_1_N = variants {mkN "exercício" ; mkN "exercise" ; mkN "exertion" ; } ; --*
lin exercise_1_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "exercer") ; } ; --*
lin exercise_2_N = variants {mkN "uso" ; mkN "utilização" ; } ; --*
lin exercise_2_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "praticar") ; } ; --*
lin exercise_3_N = variants {mkN "exercício" ; mkN "prática" ; mkN "session" ; } ; --*
lin exercise_3_V2 = variants {mkV2 (mkV "exercitar-se") ; mkV2 (mkV "malhar") ; mkV2 (mkV "out") ; } ; --*
lin exercise_4_N = mkN "exercício" ; --*
lin exercise_4_V = variants {mkV "exercitar" ; mkV "out" ; } ; --*
lin exercise_5_V2 = mkV2 (mkV "praticar") ; --*
lin exert_1_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "exercer") ; } ; --*
lin exert_2_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "manter") ; } ; --*
lin exert_3_V2 = mkV2 (mkV "lutar") ; --*
lin exertion_N = variants {mkN "empenho" ; mkN "esforço" ; mkN "grease" ; } ; --*
lin exfoliation_1_N = mkN "exfoliação" ; --*
lin exfoliation_2_N = mkN "exfoliação" ; --*
lin exhalation_1_N = mkN "exalação" ; --*
lin exhalation_2_N = variants {mkN "expiração" ; mkN "out" ; } ; --*
lin exhale_1_V = variants {mkV "axalar" ; mkV "expirar" ; mkV "out" ; } ; --*
lin exhale_2_V2 = variants {mkV2 (mkV "emanar") ; mkV2 (mkV "forth") ; } ; --*
lin exhaust_1_V2 = variants {mkV2 (mkV "exaurir") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin exhaust_2_N = variants {mkN "escapamento" ; mkN "system" ; } ; --*
lin exhaust_2_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin exhaust_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "out") ; } ; --*
lin exhaust_4_V2 = mkV2 (mkV "exaurir") ; --*
lin exhaust_5_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "expelir") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "liberar") ; } ; --*
lin exhausting_2_A = variants {mkA "esgotador" ; mkA "fatigante" ; } ; --*
lin exhaustion_1_N = variants {mkN "exaustão" ; mkN "Exaustão" ; } ; --*
lin exhaustive_A = mkA "exaustivo" ; --*
lin exhaust_pipe_N = mkN "pipe" ; --*
lin exhibit_1_V2 = mkV2 (mkV "exibir") ; --*
lin exhibit_2_N = variants {mkN "exibição" ; mkN "exposição" ; } ; --*
lin exhibit_2_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "exibir") ; mkV2 (mkV "expor") ; mkV2 (mkV "mostrar") ; } ; --*
lin exhibit_3_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "mostrar") ; } ; --*
lin exhibit_4_V2 = mkV2 (mkV "alardear") ; --*
lin exhibition_1_N = mkN "exposição" ; --*
lin exhibition_2_N = variants {mkN "exposição" ; mkN "Exposições" ; } ; --*
lin exhibitionism_1_N = mkN "exibicionismo" ; --*
lin exhibitionism_2_N = mkN "exibicionismo" ; --*
lin exhibitionist_1_N = mkN "exibicionista" ; --*
lin exhilarate_V2 = variants {mkV2 (mkV "enebriar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "exultar") ; mkV2 (mkV "pink") ; } ; --*
lin exhilarating_1_A = mkA "estimulador" ; --*
lin exhilaration_N = mkN "regozijo" ; --*
lin exhort_1_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin exhort_2_V2 = variants {mkV2 (mkV "exortar") ; mkV2 (mkV "on") ; mkV2 (mkV "urgir") ; } ; --*
lin exhortation_2_N = variants {mkN "admoestação" ; mkN "repreensão" ; } ; --*
lin exhumation_N = variants {mkN "exumação" ; mkN "up" ; } ; --*
lin exhume_V2 = mkV2 (mkV "exumar") ; --*
lin exigency_1_N = mkN "exigência" ; --*
lin exigency_2_N = variants {mkN "emergência" ; mkN "urgência" ; } ; --*
lin exigent_1_A = variants {mkA "insistente" ; mkA "urgente" ; } ; --*
lin exiguous_A = variants {mkA "exígua" ; mkA "exíguo" ; } ; --*
lin exile_1_N = mkN "expatriado" ; --*
lin exile_2_N = variants {mkN "exilado" ; mkN "proscrito" ; } ; --*
lin exile_3_N = variants {mkN "deportação" ; mkN "exílio" ; } ; --*
lin exile_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "degredar") ; mkV2 (mkV "deportar") ; mkV2 (mkV "desterrar") ; mkV2 (mkV "exilar") ; mkV2 (mkV "expatriar") ; mkV2 (mkV "expulsar") ; } ; --*
lin exist_1_V = variants {mkV "existir" ; mkV "ser" ; } ; --*
lin exist_2_V = variants {mkV "haver" ; mkV "sobreviver" ; mkV "subsistir" ; } ; --*
lin existence_1_N = variants {mkN "existência" ; mkN "Existência" ; mkN "forma" ; mkN "ser" ; } ; --*
lin existence_2_N = variants {mkN "cosmo" ; mkN "criação" ; mkN "mundo" ; mkN "natureza" ; mkN "universo" ; mkN "Universo" ; } ; --*
lin existent_1_A = mkA "existente" ; --*
lin existent_2_A = mkA "existente" ; --*
lin existent_3_A = variants {mkA "efectivo" ; mkA "efetivo" ; mkA "real" ; mkA "verdadeiro" ; } ; --*
lin existential_1_A = mkA "existencial" ; --*
lin existentialism_N = variants {mkN "existencialismo" ; mkN "philosophy" ; } ; --*
lin existentialist_N = variants {mkN "existencialista" ; mkN "philosopher" ; } ; --*
lin existing_2_A = mkA "existente" ; --*
lin existing_3_A = mkA "existente" ; --*
lin exit_1_N = variants {mkN "escapatória" ; mkN "out" ; mkN "porta" ; mkN "saída" ; } ; --*
lin exit_1_V = variants {mkV "deixar" ; mkV "out" ; mkV "sair" ; } ; --*
lin exit_2_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin exit_3_N = mkN "saída" ; --*
lin exit_3_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin exobiology_N = variants {mkN "astrobiologia" ; mkN "biology" ; mkN "exobiologia" ; } ; --*
lin exocrine_A = mkA "exócrino" ; --*
lin exodontics_1_N = mkN "exodontia" ; --*
lin exodontist_N = mkN "exodontista" ; --*
lin exodus_2_N = variants {mkN "Êxodo" ; mkN "of" ; } ; --*
lin exogamy_N = mkN "exogamia" ; --*
lin exogenous_A = mkA "exógeno" ; --*
lin exonerate_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "inocentar") ; } ; --*
lin exoneration_2_N = variants {mkN "exoneração" ; mkN "justificação" ; } ; --*
lin exon_N = variants {mkN "DNA" ; mkN "exão" ; } ; --*
lin exophthalmos_N = mkN "exoftalmia" ; --*
lin exorbitant_A = variants {mkA "descomunal" ; mkA "exorbitante" ; } ; --*
lin exorcism_N = variants {mkN "exorcismo" ; mkN "Exorcismo" ; } ; --*
lin exorcist_2_N = mkN "exorcista" ; --*
lin exorcize_1_V2 = mkV2 (mkV "exorcizar") ; --*
lin exordium_N = mkN "exórdio" ; --*
lin exoskeleton_N = variants {mkN "exoesqueleto" ; mkN "exosqueleto" ; } ; --*
lin exosphere_N = variants {mkN "exosfera" ; mkN "Exosfera" ; } ; --*
lin exostosis_N = mkN "Exostose" ; --*
lin exothermic_1_A = mkA "exotérmico" ; --*
lin exotic_1_A = variants {mkA "estrangeiro" ; mkA "estranho" ; mkA "exótico" ; } ; --*
lin exotic_2_A = mkA "exótico" ; --*
lin exotoxin_N = variants {mkN "exotoxina" ; mkN "Exotoxina" ; } ; --*
lin expand_1_V = variants {mkV "aumentar" ; mkV "out" ; } ; --*
lin expand_2_V = mkV "expandir" ; --*
lin expand_3_V2 = variants {mkV2 (mkV "dilatar-se") ; mkV2 (mkV "expandir-se") ; } ; --*
lin expand_4_V = mkV "vigorar" ; --*
lin expand_5_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "expandir") ; mkV2 (mkV "up") ; } ; --*
lin expand_6_V = variants {mkV "elaborar" ; mkV "elocubrar" ; mkV "expandir" ; mkV "expor" ; mkV "out" ; } ; --*
lin expand_7_V2 = mkV2 (mkV "aumentar") ; --*
lin expandable_1_A = mkA "expansível" ; --*
lin expanse_2_N = variants {mkN "area" ; mkN "extensão" ; } ; --*
lin expanse_3_N = mkN "extensão" ; --*
lin expansion_1_N = variants {mkN "ampliação" ; mkN "aumento" ; mkN "expansão" ; } ; --*
lin expansion_4_N = variants {mkN "expansão" ; mkN "upon" ; } ; --*
lin expansionism_N = mkN "expansionismo" ; --*
lin expansionist_A = mkA "expansionista" ; --*
lin expansive_2_A = mkA "heróico" ; --*
lin expansive_3_A = mkA "expansivo" ; --*
lin expansive_4_A = variants {mkA "comunicativo" ; mkA "falador" ; } ; --*
lin expansiveness_1_N = mkN "expansividade" ; --*
lin expatiate_V = variants {mkV "elaborar" ; mkV "elocubrar" ; mkV "expandir" ; mkV "expor" ; mkV "out" ; } ; --*
lin expatriate_1_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "degredar") ; mkV2 (mkV "deportar") ; mkV2 (mkV "desterrar") ; mkV2 (mkV "exilar") ; mkV2 (mkV "expatriar") ; mkV2 (mkV "expulsar") ; } ; --*
lin expatriate_2_V2 = mkV2 (mkV "expatriar") ; --*
lin expatriate_N = mkN "expatriado" ; --*
lin expect_1_V2 = mkV2 (mkV "antecipar") ; --*
lin expect_3_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin expect_4_V2 = mkV2 (mkV "esperar") ; --*
lin expect_5_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin expect_6_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin expectable_A = mkA "esperável" ; --*
lin expectancy_1_N = mkN "esperança" ; --*
lin expectancy_2_N = mkN "expectativa" ; --*
lin expectant_1_A = mkA "expectante" ; --*
lin expectant_2_A = variants {mkA "child" ; mkA "grávida" ; } ; --*
lin expectation_1_N = variants {mkN "expectativa" ; mkN "expetativa" ; } ; --*
lin expectation_2_N = variants {mkN "antecipação" ; mkN "expectativa" ; } ; --*
lin expectation_4_N = variants {mkN "mean" ; mkN "moment" ; mkN "valor" ; mkN "value" ; } ; --*
lin expected_A = mkA "esperado" ; --*
lin expectorant_N = mkN "expectorante" ; --*
lin expectorate_2_V2 = variants {mkV2 (mkV "expectorar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin expectorate_2_V = variants {mkV "expectorar" ; mkV "out" ; mkV "up" ; } ; --*
lin expectoration_1_N = mkN "expectoração" ; --*
lin expectoration_2_N = mkN "Cuspir" ; --*
lin expect_V2V = variants {mkV2V (mkV "exigir") ; mkV2V (mkV "requerer") ; } ; --*
lin expedience_2_N = mkN "oportunismo" ; --*
lin expedient_N = mkN "recurso" ; --*
lin expedite_1_V2 = variants {mkV2 (mkV "acelerar") ; mkV2 (mkV "apressar") ; } ; --*
lin expedition_1_N = variants {mkN "expedição" ; mkN "expedition" ; } ; --*
lin expedition_2_N = mkN "expedição" ; --*
lin expedition_3_N = mkN "expedição" ; --*
lin expedition_4_N = variants {mkN "excursão" ; mkN "ida" ; mkN "passeio" ; mkN "trip" ; } ; --*
lin expeditious_A = mkA "rápido" ; --*
lin expel_1_V2 = variants {mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin expel_2_V2 = variants {mkV2 (mkV "enxotar") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin expel_4_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "expelir") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "liberar") ; } ; --*
lin expend_1_V2 = variants {mkV2 (mkV "despender") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "gastar") ; } ; --*
lin expend_2_V2 = variants {mkV2 (mkV "despender") ; mkV2 (mkV "gastar") ; } ; --*
lin expendable_1_A = variants {mkA "esgotável" ; mkA "sacrificável" ; } ; --*
lin expending_N = mkN "despesas" ; --*
lin expenditure_1_N = variants {mkN "despesa" ; mkN "gasto" ; } ; --*
lin expenditure_2_N = mkN "despesas" ; --*
lin expenditure_3_N = variants {mkN "consumo" ; mkN "up" ; } ; --*
lin expense_1_N = variants {mkN "custo" ; mkN "despesa" ; } ; --*
lin expense_3_N = mkN "custo" ; --*
lin expensive_A = mkA "caro" ; --*
lin experience_1_N = mkN "experiência" ; --*
lin experience_1_V2 = variants {mkV2 (mkV "experienciar") ; mkV2 (mkV "experimentar") ; mkV2 (mkV "through") ; } ; --*
lin experience_2_N = mkN "experiência" ; --*
lin experience_2_V2 = variants {mkV2 (mkV "conhecer") ; mkV2 (mkV "experimentar") ; } ; --*
lin experience_3_N = mkN "experiência" ; --*
lin experience_3_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "passar") ; mkV2 (mkV "ter") ; } ; --*
lin experience_4_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "sentir") ; } ; --*
lin experience_5_V2 = variants {mkV2 (mkV "experienciar") ; mkV2 (mkV "experimentar") ; mkV2 (mkV "ter") ; } ; --*
lin experienced_A = variants {mkA "experiente" ; mkA "experimentado" ; } ; --*
lin experiential_1_A = mkA "experiencial" ; --*
lin experiential_2_A = mkA "existencial" ; --*
lin experiment_1_N = variants {mkN "experiência" ; mkN "experimento" ; } ; --*
lin experiment_1_V2 = mkV2 (mkV "experimentar") ; --*
lin experiment_2_N = variants {mkN "experiência" ; mkN "Experiências" ; mkN "experimento" ; mkN "teste" ; } ; --*
lin experiment_2_V = variants {mkV "experimentar" ; mkV "out" ; } ; --*
lin experiment_3_N = variants {mkN "experiência" ; mkN "tentativa" ; } ; --*
lin experimental_1_A = mkA "experimental" ; --*
lin experimental_3_A = mkA "experimental" ; --*
lin experimentation_1_N = variants {mkN "experiência" ; mkN "Experiências" ; mkN "experimento" ; mkN "teste" ; } ; --*
lin experimentation_2_N = variants {mkN "experiência" ; mkN "experimento" ; } ; --*
lin expert_1_A = variants {mkA "competente" ; mkA "experiente" ; mkA "hábil" ; mkA "habilidoso" ; mkA "mestre" ; mkA "versado" ; } ; --*
lin expert_2_A = mkA "versado" ; --*
lin expertise_N = variants {mkN "conhecimento" ; mkN "especialidade" ; mkN "especializado" ; mkN "perícia" ; } ; --*
lin expertness_N = variants {mkN "conhecimento" ; mkN "especialidade" ; mkN "especializado" ; mkN "perícia" ; } ; --*
lin expiate_V2 = mkV2 (mkV "redimir") ; --*
lin expiation_2_N = mkN "absolvição" ; --*
lin expiration_1_N = variants {mkN "decurso" ; mkN "desinência" ; mkN "expiração" ; mkN "término" ; mkN "vencimento" ; } ; --*
lin expiration_2_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin expiration_3_N = variants {mkN "expiração" ; mkN "out" ; } ; --*
lin expire_1_V2 = variants {mkV2 (mkV "expirar") ; mkV2 (mkV "out") ; } ; --*
lin expire_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "bater") ; mkV2 (mkV "dead") ; mkV2 (mkV "falecer") ; mkV2 (mkV "in") ; mkV2 (mkV "it") ; mkV2 (mkV "morrer") ; mkV2 (mkV "off") ; mkV2 (mkV "perecer") ; mkV2 (mkV "the") ; } ; --*
lin expire_2_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin expire_3_V = variants {mkV "axalar" ; mkV "expirar" ; mkV "out" ; } ; --*
lin expiry_1_N = variants {mkN "decurso" ; mkN "desinência" ; mkN "expiração" ; mkN "término" ; mkN "vencimento" ; } ; --*
lin expiry_2_N = mkN "morte" ; --*
lin explain_1_V2 = variants {mkV2 (mkV "esclarecer") ; mkV2 (mkV "explicar") ; } ; --*
lin explain_2_V2 = mkV2 (mkV "explicar") ; --*
lin explain_3_V2 = variants {mkV2 (mkV "desculpar") ; mkV2 (mkV "desculpar-se") ; mkV2 (mkV "explicar") ; } ; --*
lin explanation_1_N = variants {mkN "explanação" ; mkN "explicação" ; } ; --*
lin explanation_2_N = variants {mkN "explanação" ; mkN "explicação" ; } ; --*
lin explanation_3_N = mkN "explicação" ; --*
lin explanatory_A = variants {mkA "explanatório" ; mkA "explicativo" ; } ; --*
lin expletive_1_N = variants {mkN "expletivo" ; mkN "palavrão" ; mkN "word" ; } ; --*
lin expletive_2_N = mkN "expletivo" ; --*
lin explicable_A = mkA "explicável" ; --*
lin explicate_1_V2 = variants {mkV2 (mkV "esclarecer") ; mkV2 (mkV "explicar") ; } ; --*
lin explicate_2_V2 = mkV2 (mkV "formular") ; --*
lin explication_1_N = mkN "explicação" ; --*
lin explication_2_N = mkN "explicação" ; --*
lin explicit_1_A = mkA "explícito" ; --*
lin explicit_2_A = mkA "explícito" ; --*
lin explode_10_V = mkV "subir" ; --*
lin explode_1_V = variants {mkV "detonar" ; mkV "off" ; mkV "up" ; } ; --*
lin explode_2_V = mkV "detonar" ; --*
lin explode_3_V = mkV "explodir" ; --*
lin explode_5_V = mkV "explodir" ; --*
lin explode_7_V = mkV "estourar" ; --*
lin explode_8_V = variants {mkV "detonar" ; mkV "explodir" ; } ; --*
lin explode_9_V = variants {mkV "detonar" ; mkV "up" ; } ; --*
lin exploit_1_V2 = variants {mkV2 (mkV "aproveitar") ; mkV2 (mkV "explorar") ; } ; --*
lin exploit_2_V2 = mkV2 (mkV "explorar") ; --*
lin exploitation_1_N = variants {mkN "desenvolvimento" ; mkN "exploração" ; } ; --*
lin exploitation_2_N = mkN "exploração" ; --*
lin exploiter_N = mkN "explorador" ; --*
lin exploit_N = variants {mkN "façanha" ; mkN "feito" ; mkN "proeza" ; mkN "realização" ; } ; --*
lin exploration_1_N = variants {mkN "expedition" ; mkN "exploração" ; } ; --*
lin exploration_2_N = variants {mkN "exploração" ; mkN "investigação" ; mkN "pesquisa" ; } ; --*
lin exploration_3_N = mkN "exploração" ; --*
lin exploratory_A = mkA "exploratório" ; --*
lin explore_1_V2 = variants {mkV2 (mkV "buscar") ; mkV2 (mkV "explorar") ; mkV2 (mkV "investigar") ; mkV2 (mkV "pesquisar") ; mkV2 (mkV "procurar") ; } ; --*
lin explore_2_V2 = variants {mkV2 (mkV "buscar") ; mkV2 (mkV "explorar") ; mkV2 (mkV "investigar") ; mkV2 (mkV "pesquisar") ; } ; --*
lin explore_3_V2 = mkV2 (mkV "explorar") ; --*
lin explore_3_VS = mkVS (mkV "explorar") ; --*
lin explore_4_V2 = mkV2 (mkV "explorar") ; --*
lin explore_4_VS = mkVS (mkV "explorar") ; --*
lin explorerFem_1_N = variants {mkN "explorador" ; mkN "exploradora" ; } ; --*
lin explorerFem_2_N = variants {mkN "Exploradores" ; mkN "Explorer" ; } ; --*
lin explorerMasc_1_N = variants {mkN "explorador" ; mkN "exploradora" ; } ; --*
lin explorerMasc_2_N = variants {mkN "Exploradores" ; mkN "Explorer" ; } ; --*
lin explosion_1_N = mkN "explosão" ; --*
lin explosion_2_N = variants {mkN "estouro" ; mkN "explosão" ; } ; --*
lin explosive_1_A = mkA "explosivo" ; --*
lin explosive_3_A = mkA "explosivo" ; --*
lin explosive_N = variants {mkN "explosivo" ; mkN "substâncias" ; } ; --*
lin exponent_1_N = variants {mkN "advogado" ; mkN "defensor" ; mkN "proponente" ; mkN "representante" ; } ; --*
lin exponent_3_N = mkN "expoente" ; --*
lin exponential_A = mkA "exponencial" ; --*
lin exponential_N = variants {mkN "função" ; mkN "function" ; } ; --*
lin exponentiation_N = mkN "exponenciação" ; --*
lin expo_N = variants {mkN "exposição" ; mkN "Exposições" ; } ; --*
lin export_1_V2 = mkV2 (mkV "exportar") ; --*
lin exportable_A = variants {mkA "exportável" ; mkA "que" ; } ; --*
lin exportation_1_N = variants {mkN "comando" ; mkN "exportação" ; } ; --*
lin exportation_2_N = mkN "exportação" ; --*
lin exporterFem_N = mkN "exportador" ; --*
lin exporterMasc_N = mkN "exportador" ; --*
lin exporting_N = mkN "exportação" ; --*
lin export_N = variants {mkN "comando" ; mkN "exportação" ; } ; --*
lin expose_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin expose_3_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "exibir") ; mkV2 (mkV "expor") ; mkV2 (mkV "mostrar") ; } ; --*
lin expose_4_V = variants {mkV "expor" ; mkV "revelar" ; } ; --*
lin expose_5_V2 = variants {mkV2 (mkV "descerrar") ; mkV2 (mkV "expor") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "revelar") ; } ; --*
lin expose_6_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "comprometer") ; } ; --*
lin expose_6_V = variants {mkV "arriscar" ; mkV "comprometer" ; } ; --*
lin expose_7_V2 = mkV2 (mkV "expor") ; --*
lin expose_7_V = mkV "expor" ; --*
lin expose_8_V2 = variants {mkV2 (mkV "desacreditar") ; mkV2 (mkV "ridicularizar") ; } ; --*
lin expose_9_V2 = mkV2 (mkV "abandonar") ; --*
lin exposition_2_N = variants {mkN "exposição" ; mkN "Exposições" ; } ; --*
lin expositor_N = mkN "expositor" ; --*
lin expostulation_1_N = mkN "objeção" ; --*
lin exposure_1_N = mkN "exposição" ; --*
lin exposure_2_N = mkN "exposição" ; --*
lin exposure_3_N = mkN "revelação" ; --*
lin exposure_5_N = variants {mkN "exposição" ; mkN "vulnerabilidade" ; } ; --*
lin exposure_6_N = mkN "exposição" ; --*
lin exposure_7_N = variants {mkN "desenho" ; mkN "figura" ; mkN "foto" ; mkN "fotografia" ; mkN "ilustração" ; mkN "imagem" ; mkN "retrato" ; } ; --*
lin exposure_9_N = mkN "exposição" ; --*
lin expound_1_V2 = variants {mkV2 (mkV "elaborar") ; mkV2 (mkV "elocubrar") ; mkV2 (mkV "expandir") ; mkV2 (mkV "expor") ; mkV2 (mkV "out") ; } ; --*
lin expound_1_VS = variants {mkVS (mkV "elaborar") ; mkVS (mkV "elocubrar") ; mkVS (mkV "expandir") ; mkVS (mkV "expor") ; mkVS (mkV "out") ; } ; --*
lin expound_2_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "forth") ; } ; --*
lin express_1_A = mkA "expresso" ; --*
lin express_1_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "mostrar") ; } ; --*
lin express_2_A = mkA "expresso" ; --*
lin express_2_N = variants {mkN "combóios" ; mkN "TGV" ; } ; --*
lin express_2_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "tongue") ; mkV2 (mkV "vebalizar") ; } ; --*
lin express_3_V2 = mkV2 (mkV "transmitir") ; --*
lin express_4_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "exprimir") ; } ; --*
lin express_6_V2 = variants {mkV2 (mkV "exprimir") ; mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin expression_1_N = variants {mkN "aparência" ; mkN "expressão" ; mkN "expression" ; mkN "rosto" ; } ; --*
lin expression_2_N = variants {mkN "manifestação" ; mkN "reflexão" ; } ; --*
lin expression_3_N = variants {mkN "expressão" ; mkN "expression" ; } ; --*
lin expression_4_N = variants {mkN "ditado" ; mkN "expressão" ; mkN "idioma" ; mkN "locução" ; mkN "provérbio" ; } ; --*
lin expression_6_N = variants {mkN "Expressão" ; mkN "fórmula" ; } ; --*
lin expressionism_N = variants {mkN "expressionismo" ; mkN "Expressionismo" ; } ; --*
lin expressionless_A = variants {mkA "inexpressível" ; mkA "sem" ; } ; --*
lin expressive_A = variants {mkA "expressivo" ; mkA "significativo" ; } ; --*
lin expressiveness_N = mkN "expressividade" ; --*
lin expressway_N = variants {mkN "autoestrada" ; mkN "auto-estrada" ; mkN "estrada" ; mkN "highway" ; mkN "rodovia" ; mkN "super-autopista" ; mkN "via" ; mkN "vias" ; } ; --*
lin expropriate_V2 = variants {mkV2 (mkV "apoderar") ; mkV2 (mkV "desapossar") ; mkV2 (mkV "desapropriar") ; mkV2 (mkV "expropriar") ; } ; --*
lin expropriation_N = mkN "expropriação" ; --*
lin expulsion_1_N = variants {mkN "exclusão" ; mkN "expulsão" ; } ; --*
lin expulsion_2_N = variants {mkN "expulsão" ; mkN "extrusão" ; } ; --*
lin expulsion_3_N = variants {mkN "ejeção" ; mkN "expulsão" ; mkN "out" ; } ; --*
lin expunge_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "retirar") ; } ; --*
lin expurgate_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "expurgar") ; } ; --*
lin expurgation_N = mkN "castração" ; --*
lin exquisite_1_A = mkA "esmero" ; --*
lin exquisite_4_A = mkA "extraordinário" ; --*
lin ex_serviceman_N = mkN "veterano" ; --*
lin extant_A = variants {mkA "existente" ; mkA "remanescente" ; } ; --*
lin extemporaneous_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin extemporary_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin extempore_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin extemporization_1_N = mkN "Improvisação" ; --*
lin extemporize_1_V = mkV "improvisar" ; --*
lin extemporize_2_V2 = mkV2 (mkV "improvisar") ; --*
lin extemporize_2_V = mkV "improvisar" ; --*
lin extend_10_V2 = variants {mkV2 (mkV "extender") ; mkV2 (mkV "out") ; mkV2 (mkV "prolongar") ; } ; --*
lin extend_1_V2 = variants {mkV2 (mkV "ampliar") ; mkV2 (mkV "estender") ; } ; --*
lin extend_2_V = variants {mkV "estender" ; mkV "ir" ; mkV "levar" ; } ; --*
lin extend_8_V2 = variants {mkV2 (mkV "alongar") ; mkV2 (mkV "estender") ; mkV2 (mkV "esticar") ; } ; --*
lin extend_9_V2 = mkV2 (mkV "aumentar") ; --*
lin extended_1_A = variants {mkA "comprido" ; mkA "longo" ; mkA "prolixo" ; mkA "prolongado" ; } ; --*
lin extended_2_A = mkA "extendido" ; --*
lin extended_3_A = variants {mkA "alongado" ; mkA "estendido" ; mkA "prolongado" ; } ; --*
lin extendible_1_A = variants {mkA "estendível" ; mkA "extendível" ; mkA "extensível" ; } ; --*
lin extensile_1_A = mkA "extensível" ; --*
lin extension_10_N = variants {mkN "extension" ; mkN "phone" ; mkN "Ramal" ; } ; --*
lin extension_11_N = mkN "alongamento" ; --*
lin extension_12_N = mkN "asa" ; --*
lin extension_1_N = mkN "extensão" ; --*
lin extension_2_N = mkN "extensão" ; --*
lin extension_3_N = mkN "propagação" ; --*
lin extension_6_N = variants {mkN "Extensão" ; mkN "extension" ; mkN "name" ; } ; --*
lin extension_7_N = mkN "denotação" ; --*
lin extension_9_N = variants {mkN "extensão" ; mkN "longitude" ; } ; --*
lin extensional_A = mkA "extensional" ; --*
lin extensive_2_A = mkA "amplo" ; --*
lin extensive_3_A = mkA "extensivo" ; --*
lin extent_1_N = mkN "alcance" ; --*
lin extent_2_N = variants {mkN "alcance" ; mkN "extensão" ; } ; --*
lin extenuate_V2 = variants {mkV2 (mkV "atenuar") ; mkV2 (mkV "mitigar") ; mkV2 (mkV "paliar") ; mkV2 (mkV "remediar") ; } ; --*
lin extenuating_A = mkA "atenuante" ; --*
lin exterior_2_N = variants {mkN "exterior" ; mkN "lado" ; } ; --*
lin exteriorize_1_V2 = variants {mkV2 (mkV "exteriorizar") ; mkV2 (mkV "outside") ; } ; --*
lin exteriorize_2_V2 = variants {mkV2 (mkV "externalizar") ; mkV2 (mkV "externar") ; } ; --*
lin exterminate_1_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extinguir") ; mkV2 (mkV "off") ; } ; --*
lin exterminate_2_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; } ; --*
lin extermination_1_N = mkN "extinção" ; --*
lin extermination_2_N = mkN "exterminação" ; --*
lin external_1_A = mkA "externo" ; --*
lin external_2_A = mkA "externo" ; --*
lin external_3_A = variants {mkA "externo" ; mkA "internacional" ; } ; --*
lin external_4_A = mkA "externo" ; --*
lin externalization_2_N = mkN "exteriorização" ; --*
lin externalize_1_V2 = variants {mkV2 (mkV "externalizar") ; mkV2 (mkV "projetar") ; } ; --*
lin externalize_2_V2 = variants {mkV2 (mkV "externalizar") ; mkV2 (mkV "externar") ; } ; --*
lin exterritorial_A = mkA "extraterritorial" ; --*
lin extinct_1_A = mkA "extinto" ; --*
lin extinct_2_A = variants {mkA "apagado" ; mkA "extincto" ; mkA "extinto" ; mkA "liquidado" ; mkA "revogado" ; } ; --*
lin extinct_3_A = variants {mkA "extincto" ; mkA "extinto" ; } ; --*
lin extinction_1_N = mkN "extinção" ; --*
lin extinction_2_N = mkN "extinção" ; --*
lin extinction_3_N = mkN "extinção" ; --*
lin extinction_4_N = mkN "extinção" ; --*
lin extinction_5_N = variants {mkN "extinção" ; mkN "extinction" ; } ; --*
lin extinction_6_N = mkN "extinção" ; --*
lin extinguish_1_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin extinguish_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin extinguish_3_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin extinguish_4_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "eliminar") ; mkV2 (mkV "extinguir") ; mkV2 (mkV "rid") ; } ; --*
lin extinguish_5_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin extinguisher_N = variants {mkN "extinguisher" ; mkN "extintor" ; } ; --*
lin extirpate_1_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; } ; --*
lin extirpate_2_V2 = variants {mkV2 (mkV "arrancar") ; mkV2 (mkV "desenraizar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; mkV2 (mkV "sacar") ; } ; --*
lin extirpate_3_V2 = mkV2 (mkV "extirpar") ; --*
lin extirpation_1_N = variants {mkN "ablação" ; mkN "extirpação" ; mkN "out" ; } ; --*
lin extirpation_2_N = mkN "extirpação" ; --*
lin extol_V2 = variants {mkV2 (mkV "exaltar") ; mkV2 (mkV "glorificar") ; mkV2 (mkV "louvar") ; } ; --*
lin extort_1_V2 = mkV2 (mkV "extorquir") ; --*
lin extort_1_V = mkV "extorquir" ; --*
lin extort_2_V2 = mkV2 (mkV "extorquir") ; --*
lin extortion_2_N = mkN "extorsão" ; --*
lin extortion_3_N = mkN "extorsão" ; --*
lin extortionate_A = variants {mkA "descomunal" ; mkA "exorbitante" ; } ; --*
lin extra_1_A = variants {mkA "excessivo" ; mkA "extra" ; mkA "redundante" ; mkA "reduntante" ; mkA "supérfluo" ; } ; --*
lin extra_1_N = variants {mkN "carrier" ; mkN "comparsa" ; } ; --*
lin extra_3_A = variants {mkA "adicional" ; mkA "aditivo" ; mkA "extra" ; } ; --*
lin extracellular_A = mkA "extracelular" ; --*
lin extract_1_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin extract_2_N = variants {mkN "excerto" ; mkN "extrato" ; mkN "passagem" ; mkN "trecho" ; } ; --*
lin extract_3_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin extract_4_V2 = variants {mkV2 (mkV "destilar") ; mkV2 (mkV "extrair") ; } ; --*
lin extract_6_V2 = variants {mkV2 (mkV "exprimir") ; mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; } ; --*
lin extract_7_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "selecionar") ; } ; --*
lin extraction_1_N = mkN "extracção" ; --*
lin extraction_2_N = variants {mkN "extração" ; mkN "origem" ; } ; --*
lin extractor_2_N = variants {mkN "centrifuga" ; mkN "separador" ; } ; --*
lin extractor_3_N = variants {mkN "extractor" ; mkN "extrator" ; mkN "remover" ; } ; --*
lin extracurricular_1_A = mkA "extracurricular" ; --*
lin extracurricular_3_A = mkA "extraconjugal" ; --*
lin extradite_V2 = variants {mkV2 (mkV "deportar") ; mkV2 (mkV "extraditar") ; } ; --*
lin extradition_N = mkN "extradição" ; --*
lin extragalactic_A = mkA "extragaláctico" ; --*
lin extrajudicial_A = mkA "extrajudicial" ; --*
lin extramarital_A = mkA "extraconjugal" ; --*
lin extramural_A = mkA "extramural" ; --*
lin extraneous_2_A = mkA "Estranho" ; --*
lin extraneous_3_A = mkA "estranho" ; --*
lin extraneous_4_A = mkA "externo" ; --*
lin extraordinary_1_A = mkA "extraordinário" ; --*
lin extrapolate_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "generalizar") ; } ; --*
lin extrapolate_1_V = variants {mkV "concluir" ; mkV "deduzir" ; mkV "generalizar" ; } ; --*
lin extrapolate_2_V2 = variants {mkV2 (mkV "extrapolar") ; mkV2 (mkV "interpolar") ; } ; --*
lin extrapolate_2_V = variants {mkV "extrapolar" ; mkV "interpolar" ; } ; --*
lin extrapolate_3_V2 = mkV2 (mkV "extrapolar") ; --*
lin extrapolate_3_V = mkV "extrapolar" ; --*
lin extrapolation_1_N = mkN "extrapolação" ; --*
lin extrasensory_A = mkA "paranormal" ; --*
lin extraterrestrial_A = mkA "extraterrestre" ; --*
lin extraterritorial_A = mkA "extraterritorial" ; --*
lin extravagance_1_N = mkN "extravagância" ; --*
lin extravagant_1_A = mkA "excessivo" ; --*
lin extravagant_2_A = mkA "pródigo" ; --*
lin extravasation_2_N = mkN "erupção" ; --*
lin extraversion_N = mkN "extroversão" ; --*
lin extreme_1_A = mkA "maior" ; --*
lin extreme_1_N = mkN "extremo" ; --*
lin extreme_2_N = variants {mkN "extremo" ; mkN "extremos" ; mkN "point" ; } ; --*
lin extreme_3_A = mkA "extremado" ; --*
lin extremism_N = mkN "extremismo" ; --*
lin extremist_N = mkN "extremista" ; --*
lin extremity_1_N = mkN "membro" ; --*
lin extremity_3_N = mkN "extremidade" ; --*
lin extremity_4_N = mkN "extremidade" ; --*
lin extremum_1_N = variants {mkN "extremo" ; mkN "extremos" ; mkN "point" ; } ; --*
lin extremum_2_N = mkN "máximo" ; --*
lin extricate_V2 = variants {mkV2 (mkV "desenredar") ; mkV2 (mkV "soltar") ; } ; --*
lin extrication_N = mkN "desenrascanço" ; --*
lin extroversion_N = mkN "extroversão" ; --*
lin extrovert_1_N = mkN "pessoa" ; --*
lin extroverted_2_A = mkA "extrovertido" ; --*
lin extrusion_1_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin extrusion_2_N = variants {mkN "expulsão" ; mkN "extrusão" ; } ; --*
lin exuberance_1_N = mkN "exuberância" ; --*
lin exuberant_2_A = mkA "excessivo" ; --*
lin exuberant_3_A = mkA "abundante" ; --*
lin exudate_N = mkN "exsudação" ; --*
lin exudation_1_N = mkN "exsudação" ; --*
lin exudation_2_N = mkN "exsudação" ; --*
lin exude_1_V2 = variants {mkV2 (mkV "exsudar") ; mkV2 (mkV "out") ; mkV2 (mkV "transpirar") ; } ; --*
lin exult_1_V = variants {mkV "exultar" ; mkV "for" ; mkV "on" ; } ; --*
lin exult_2_V = variants {mkV "exultar" ; mkV "rejubilar" ; } ; --*
lin exultant_A = variants {mkA "exultante" ; mkA "jubiloso" ; mkA "triunfador" ; mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin exultation_1_N = variants {mkN "exultação" ; mkN "júbilo" ; } ; --*
lin exultation_2_N = mkN "júbilo" ; --*
lin eye_1_N = variants {mkN "óculo" ; mkN "olho" ; } ; --*
lin eye_2_N = mkN "olho" ; --*
lin eye_3_N = mkN "olhar" ; --*
lin eye_4_N = mkN "jazida" ; --*
lin eye_5_N = mkN "buraco" ; --*
lin eyeball_N = variants {mkN "bolbo" ; mkN "globo" ; } ; --*
lin eyeball_V2 = variants {mkV2 (mkV "mirar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin eyebrow_N = variants {mkN "sobrancelha" ; mkN "Sobrancelha" ; mkN "sobrolho" ; mkN "supercílio" ; } ; --*
lin eyeglass_N = variants {mkN "monóculo" ; mkN "Monóculo" ; mkN "óculos" ; } ; --*
lin eyelash_N = variants {mkN "celha" ; mkN "cílio" ; mkN "pestana" ; } ; --*
lin eyeless_1_A = mkA "sem" ; --*
lin eyeless_2_A = mkA "cego" ; --*
lin eyelet_1_N = mkN "olhete" ; --*
lin eyelet_2_N = variants {mkN "casa" ; mkN "ilhó" ; } ; --*
lin eyelid_N = mkN "pálpebra" ; --*
lin eyepatch_N = variants {mkN "Tapa" ; mkN "tapa-olho" ; } ; --*
lin eyepiece_N = mkN "lente" ; --*
lin eyetooth_1_N = variants {mkN "dente" ; mkN "tooth" ; } ; --*
lin eye_V2 = variants {mkV2 (mkV "mirar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin eyewash_N = mkN "colírio" ; --*
lin eyewitness_N = mkN "testemunha" ; --*
lin fab_A = mkA "fabulosa" ; --*
lin fable_1_N = variants {mkN "ficção" ; mkN "fingimento" ; mkN "invenção" ; mkN "invencionice" ; } ; --*
lin fable_2_N = variants {mkN "alegoria" ; mkN "apólogo" ; mkN "Apólogo" ; mkN "parábola" ; } ; --*
lin fable_3_N = variants {mkN "apólogo" ; mkN "lenda" ; } ; --*
lin fabled_A = variants {mkA "lendário" ; mkA "místico" ; } ; --*
lin fabric_1_N = variants {mkN "fazenda" ; mkN "pano" ; mkN "tecido" ; mkN "têxteis" ; } ; --*
lin fabric_2_N = variants {mkN "estrutura" ; mkN "rede" ; } ; --*
lin fabricate_1_V2 = mkV2 (mkV "fabricar") ; --*
lin fabricate_2_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "up") ; } ; --*
lin fabrication_1_N = variants {mkN "ficção" ; mkN "fingimento" ; mkN "invenção" ; mkN "invencionice" ; } ; --*
lin fabrication_3_N = mkN "fabricação" ; --*
lin fabrication_4_N = variants {mkN "construção" ; mkN "fabricação" ; } ; --*
lin fabrication_5_N = mkN "mentira" ; --*
lin fabulous_1_A = mkA "fabulosa" ; --*
lin fabulous_2_A = mkA "mítico" ; --*
lin facade_1_N = variants {mkN "fachada" ; mkN "frontispício" ; } ; --*
lin face_10_N = mkN "família" ; --*
lin face_12_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin face_1_N = variants {mkN "face" ; mkN "rosto" ; } ; --*
lin face_1_V2 = variants {mkV2 (mkV "confrontar") ; mkV2 (mkV "defrontar") ; mkV2 (mkV "enfrentar") ; mkV2 (mkV "up") ; } ; --*
lin face_2_N = variants {mkN "aparência" ; mkN "expressão" ; mkN "expression" ; mkN "rosto" ; } ; --*
lin face_2_V2 = variants {mkV2 (mkV "confrontar") ; mkV2 (mkV "defrontar") ; mkV2 (mkV "encarar") ; } ; --*
lin face_3_N = variants {mkN "aparência" ; mkN "face" ; mkN "rosto" ; } ; --*
lin face_5_N = variants {mkN "cara" ; mkN "face" ; mkN "rosto" ; } ; --*
lin face_5_V2 = mkV2 (mkV "encarar") ; --*
lin face_6_N = variants {mkN "face" ; mkN "lado" ; } ; --*
lin face_6_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "confrontar") ; mkV2 (mkV "deparar") ; } ; --*
lin face_7_N = mkN "rosto" ; --*
lin face_7_V2 = mkV2 (mkV "virar") ; --*
lin face_8_V2 = mkV2 (mkV "forrar") ; --*
lin face_9_N = variants {mkN "careta" ; mkN "fazercaretas" ; mkN "trejeito" ; } ; --*
lin face_9_V2 = mkV2 (mkV "revestir") ; --*
lin face_card_N = mkN "card" ; --*
lin facet_1_N = mkN "faceta" ; --*
lin faceted_A = mkA "facetado" ; --*
lin facetious_A = mkA "busseta" ; --*
lin face_V = variants {mkV "defrontar" ; mkV "encarar" ; } ; --*
lin facial_1_A = mkA "facial" ; --*
lin facial_1_N = variants {mkN "cranial" ; mkN "facialis" ; mkN "nerve" ; mkN "nervo" ; } ; --*
lin facia_N = mkN "fáscia" ; --*
lin facile_1_A = mkA "fácil" ; --*
lin facile_3_A = variants {mkA "eloquente" ; mkA "eloqüente" ; mkA "expressivo" ; } ; --*
lin facilitate_1_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "facilitar") ; } ; --*
lin facilitate_2_V2 = variants {mkV2 (mkV "acudir") ; mkV2 (mkV "ajudar") ; } ; --*
lin facilitate_3_V2 = mkV2 (mkV "facilitar") ; --*
lin facilitation_3_N = mkN "facilitação" ; --*
lin facilitator_N = mkN "facilitador" ; --*
lin facility_1_N = variants {mkN "infra-estrutura" ; mkN "instalação" ; mkN "serviço" ; } ; --*
lin facility_2_N = variants {mkN "competência" ; mkN "facilidade" ; mkN "habilidade" ; } ; --*
lin facing_2_N = mkN "verniz" ; --*
lin facsimile_1_N = variants {mkN "Facsimile" ; mkN "fac-símile" ; mkN "Fac-símile" ; } ; --*
lin facsimile_2_N = variants {mkN "fax" ; mkN "FAX" ; mkN "machine" ; } ; --*
lin fact_1_N = variants {mkN "facto" ; mkN "verdade" ; } ; --*
lin fact_2_N = mkN "fato" ; --*
lin fact_3_N = mkN "realidade" ; --*
lin faction_1_N = variants {mkN "camarilha" ; mkN "facção" ; } ; --*
lin faction_2_N = variants {mkN "facção" ; mkN "seita" ; } ; --*
lin factoid_1_N = mkN "factóide" ; --*
lin factor_1_N = mkN "fator" ; --*
lin factor_2_N = variants {mkN "componente" ; mkN "fator" ; mkN "parte" ; } ; --*
lin factor_3_N = mkN "divisor" ; --*
lin factor_4_N = variants {mkN "Broker" ; mkN "corretor" ; mkN "intermediário" ; } ; --*
lin factor_5_N = variants {mkN "factor" ; mkN "fator" ; } ; --*
lin factor_7_N = variants {mkN "gene" ; mkN "genes" ; mkN "Genes" ; mkN "guen" ; } ; --*
lin factorial_A = mkA "relativo" ; --*
lin factorial_N = variants {mkN "factorial" ; mkN "fatorial" ; } ; --*
lin factor_in_1_V = variants {mkV "considerar" ; mkV "in" ; mkV "out" ; } ; --*
lin factor_in_2_V = variants {mkV "fatorar" ; mkV "in" ; mkV "out" ; } ; --*
lin factorization_1_N = mkN "fatoração" ; --*
lin factorize_1_V2 = mkV2 (mkV "fatorar") ; --*
lin factory_N = variants {mkN "fábrica" ; mkN "manufatura" ; mkN "plant" ; mkN "usina" ; } ; --*
lin factual_1_A = mkA "real" ; --*
lin facula_2_N = mkN "Fácula" ; --*
lin facultative_2_A = mkA "facultativo" ; --*
lin facultative_3_A = mkA "facultativo" ; --*
lin facultative_4_A = mkA "facultativo" ; --*
lin faculty_1_N = variants {mkN "faculdade" ; mkN "faculty" ; mkN "talento" ; } ; --*
lin faculty_2_N = variants {mkN "faculdade" ; mkN "faculdades" ; mkN "Universidades" ; } ; --*
lin fade_1_V = mkV "desvaneça-se" ; --*
lin fade_2_N = mkN "desaparecimento" ; --*
lin fade_2_V = variants {mkV "caldear" ; mkV "desaparecer" ; } ; --*
lin fade_3_V = variants {mkV "desaparecer" ; mkV "esvanecer" ; mkV "off" ; mkV "over" ; } ; --*
lin fade_4_V = mkV "enlanguescer" ; --*
lin fad_N = variants {mkN "moda" ; mkN "voga" ; } ; --*
lin fado_N = variants {mkN "fado" ; mkN "Fado" ; } ; --*
lin faecal_1_A = mkA "fecal" ; --*
lin faerie_1_N = variants {mkN "fada" ; mkN "Fadas" ; } ; --*
lin faery_1_N = variants {mkN "fada" ; mkN "Fadas" ; } ; --*
lin fag_1_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin fag_2_N = variants {mkN "cigarro" ; mkN "nail" ; } ; --*
lin fag_2_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin fag_3_V2 = variants {mkV2 (mkV "cansar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "exaurir-se") ; mkV2 (mkV "out") ; mkV2 (mkV "upon") ; } ; --*
lin fag_end_1_N = variants {mkN "end" ; mkN "rabo" ; } ; --*
lin faggot_1_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin faggot_2_N = variants {mkN "feixe" ; mkN "paneleiro" ; } ; --*
lin fagot_1_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin fagot_2_N = variants {mkN "feixe" ; mkN "paneleiro" ; } ; --*
lin faience_N = variants {mkN "faiança" ; mkN "Faiança" ; } ; --*
lin fail_1_VV = variants {mkVV (mkV "falhar") ; mkVV (mkV "negligenciar") ; } ; --*
lin fail_2_V = variants {mkV "falhar" ; mkV "malograr" ; mkV "quebrar" ; mkV "wrong" ; } ; --*
lin fail_3_V2 = variants {mkV2 (mkV "falhar") ; mkV2 (mkV "trair") ; } ; --*
lin fail_4_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin fail_5_VV = mkVV (mkV "reprovar") ; --*
lin fail_7_V2 = variants {mkV2 (mkV "it") ; mkV2 (mkV "reprovar") ; } ; --*
lin fail_7_V = variants {mkV "it" ; mkV "reprovar" ; } ; --*
lin fail_9_V = variants {mkV "falir" ; mkV "quebrar" ; } ; --*
lin failing_1_N = mkN "ponto" ; --*
lin failure_1_N = variants {mkN "erro" ; mkN "falha" ; mkN "fracasso" ; } ; --*
lin failure_3_N = mkN "falhanço" ; --*
lin failure_4_N = variants {mkN "fracassado" ; mkN "perdedor" ; mkN "person" ; } ; --*
lin failure_6_N = variants {mkN "bancarrota" ; mkN "falência" ; } ; --*
lin faineance_N = variants {mkN "inatividade" ; mkN "ócio" ; } ; --*
lin faineant_A = variants {mkA "preguiçoso" ; mkA "vadio" ; mkA "vagaroso" ; } ; --*
lin faint_1_A = mkA "ténue" ; --*
lin faint_3_A = variants {mkA "débil" ; mkA "fraco" ; } ; --*
lin faint_N = variants {mkN "chilique" ; mkN "desfalecimento" ; mkN "desmaio" ; } ; --*
lin faint_V = variants {mkV "desfalecer" ; mkV "desmaiar" ; mkV "esvanecer" ; mkV "out" ; } ; --*
lin fair_1_N = variants {mkN "carnaval" ; mkN "feira" ; mkN "quermesse" ; } ; --*
lin fair_2_A = mkA "razoável" ; --*
lin fair_2_N = mkN "feira" ; --*
lin fair_3_A = variants {mkA "atraente" ; mkA "lindo" ; } ; --*
lin fair_4_N = mkN "feira" ; --*
lin fair_5_A = mkA "medíocre" ; --*
lin fairish_1_A = mkA "razoável" ; --*
lin fairly_AdA = variants {mkAdA "com" ; mkAdA "razoavelmente" ; } ; --*
lin fairness_1_N = variants {mkN "equanimidade" ; mkN "eqüidade" ; mkN "justiça" ; } ; --*
lin fairy_1_N = variants {mkN "fada" ; mkN "Fadas" ; } ; --*
lin fairy_2_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin fairyland_1_N = variants {mkN "mundo" ; mkN "world" ; } ; --*
lin fairytale_1_N = variants {mkN "estória" ; mkN "story" ; mkN "tale" ; } ; --*
lin fairytale_2_N = variants {mkN "and" ; mkN "Contos" ; mkN "story" ; mkN "tale" ; } ; --*
lin faith_1_N = variants {mkN "belief" ; mkN "fé" ; mkN "religião" ; } ; --*
lin faith_2_N = variants {mkN "confiança" ; mkN "fé" ; } ; --*
lin faith_3_N = variants {mkN "igreja" ; mkN "religião" ; mkN "religion" ; } ; --*
lin faithful_2_A = mkA "fiel" ; --*
lin faithful_2_N = mkN "congregação" ; --*
lin faithful_3_A = mkA "fiel" ; --*
lin faithfulness_N = variants {mkN "fidelidade" ; mkN "lealdade" ; } ; --*
lin faith_healing_N = variants {mkN "cure" ; mkN "healing" ; } ; --*
lin faithless_A = variants {mkA "infiel" ; mkA "sem" ; } ; --*
lin faithlessness_N = mkN "inconstância" ; --*
lin fake_1_A = mkA "farsante" ; --*
lin fake_1_V2 = variants {mkV2 (mkV "contrafazer") ; mkV2 (mkV "falsificar") ; } ; --*
lin fake_2_A = variants {mkA "artificial" ; mkA "falsificado" ; mkA "falso" ; } ; --*
lin fake_2_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin fake_2_V2 = variants {mkV2 (mkV "deturpar") ; mkV2 (mkV "falsear") ; mkV2 (mkV "falsificar") ; } ; --*
lin fakir_1_N = mkN "faquir" ; --*
lin falafel_1_N = mkN "falafel" ; --*
lin falcon_N = mkN "falcão" ; --*
lin falconry_N = mkN "falcoaria" ; --*
lin fall_10_V = mkV "cair" ; --*
lin fall_11_N = mkN "queda" ; --*
lin fall_11_V = variants {mkV "decrescer" ; mkV "desabar" ; mkV "diminuir" ; mkV "minguar" ; } ; --*
lin fall_14_V = mkV "cair" ; --*
lin fall_16_V = mkV "cair" ; --*
lin fall_17_V = variants {mkV "cair" ; mkV "perder" ; } ; --*
lin fall_1_N = mkN "outono" ; --*
lin fall_1_V = mkV "cair" ; --*
lin fall_20_V = variants {mkV "cair" ; mkV "ficar" ; mkV "terminar" ; } ; --*
lin fall_2_N = mkN "tombo" ; --*
lin fall_2_V = variants {mkV "cair" ; mkV "descer" ; mkV "down" ; } ; --*
lin fall_32_V = variants {mkV "cair" ; mkV "descer" ; } ; --*
lin fall_3_N = mkN "Outono" ; --*
lin fall_3_V = mkV "cair" ; --*
lin fall_4_N = variants {mkN "barranco" ; mkN "declínio" ; mkN "declividade" ; mkN "descida" ; } ; --*
lin fall_4_V = variants {mkV "cair" ; mkV "entrar" ; mkV "estar" ; mkV "vir" ; } ; --*
lin fall_5_N = variants {mkN "caimento" ; mkN "decadência" ; } ; --*
lin fall_5_V = variants {mkV "cair" ; mkV "down" ; mkV "precipitar" ; } ; --*
lin fall_6_N = mkN "perda" ; --*
lin fall_6_V = mkV "cair" ; --*
lin fall_7_V = variants {mkV "cair" ; mkV "tombar" ; } ; --*
lin fall_8_N = variants {mkN "capitulação" ; mkN "rendição" ; } ; --*
lin fall_8_V = mkV "brilhar" ; --*
lin fall_9_N = variants {mkN "anoitecer" ; mkN "crepúsculo" ; mkN "pôr" ; } ; --*
lin fallacious_2_A = mkA "enganoso" ; --*
lin fallacious_3_A = mkA "falaz" ; --*
lin fallacy_N = variants {mkN "belief" ; mkN "falacia" ; mkN "Falácias" ; } ; --*
lin fall_apart_1_V = variants {mkV "apart" ; mkV "to" ; } ; --*
lin fall_apart_2_V = variants {mkV "apart" ; mkV "destruir" ; mkV "out" ; mkV "quebrar" ; } ; --*
lin fall_apart_3_V = variants {mkV "apart" ; mkV "desmoronar" ; } ; --*
lin fall_apart_4_V = variants {mkV "apart" ; mkV "desmoronar" ; mkV "separar" ; mkV "up" ; } ; --*
lin fall_asleep_V = variants {mkV "asleep" ; mkV "off" ; mkV "out" ; } ; --*
lin fall_back_4_V = variants {mkV "back" ; mkV "behind" ; mkV "off" ; mkV "receder" ; } ; --*
lin fall_back_5_V = variants {mkV "back" ; mkV "recorrer" ; } ; --*
lin fall_behind_1_V = variants {mkV "back" ; mkV "behind" ; mkV "off" ; mkV "receder" ; } ; --*
lin faller_1_N = variants {mkN "lenhador" ; mkN "madeireiro" ; } ; --*
lin fallible_1_A = mkA "falível" ; --*
lin fallible_2_A = mkA "imperfeito" ; --*
lin fall_in_1_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin fall_in_3_V = variants {mkV "associar-se" ; mkV "filiar-se" ; mkV "in" ; mkV "ingressar" ; mkV "juntar-se" ; mkV "together" ; } ; --*
lin fall_off_1_V = mkV "off" ; --*
lin fall_off_3_V = variants {mkV "away" ; mkV "off" ; } ; --*
lin fallout_2_N = variants {mkN "efeito" ; mkN "effect" ; } ; --*
lin fall_out_5_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin fallow_deer_N = variants {mkN "dama" ; mkN "deer" ; } ; --*
lin fallow_N = variants {mkN "barbeito" ; mkN "terras" ; } ; --*
lin falls_2_N = variants {mkN "cachoeira" ; mkN "cascata" ; mkN "catarata" ; mkN "queda" ; } ; --*
lin false_10_A = variants {mkA "artificial" ; mkA "falso" ; } ; --*
lin false_1_A = variants {mkA "errado" ; mkA "falso" ; } ; --*
lin false_6_A = variants {mkA "artificial" ; mkA "falsificado" ; mkA "falso" ; } ; --*
lin false_9_A = variants {mkA "assumido" ; mkA "fictício" ; mkA "on" ; mkA "pretendido" ; } ; --*
lin falsehood_1_N = variants {mkN "falsidade" ; mkN "mentira" ; } ; --*
lin falseness_1_N = variants {mkN "falsidade" ; mkN "mentira" ; } ; --*
lin falseness_2_N = mkN "inconstância" ; --*
lin falseness_3_N = mkN "falsidade" ; --*
lin falsetto_N = mkN "falsete" ; --*
lin falsification_1_N = mkN "refutação" ; --*
lin falsification_2_N = variants {mkN "adulteração" ; mkN "falsificação" ; } ; --*
lin falsifier_N = mkN "falsificador" ; --*
lin falsify_1_V2 = mkV2 (mkV "distorcer") ; --*
lin falsify_2_V2 = variants {mkV2 (mkV "deturpar") ; mkV2 (mkV "falsear") ; mkV2 (mkV "falsificar") ; } ; --*
lin falsify_3_V2 = mkV2 (mkV "falsificar") ; --*
lin falsify_4_V2 = mkV2 (mkV "falsificar") ; --*
lin falsify_5_V2 = mkV2 (mkV "interpolar") ; --*
lin falsity_1_N = variants {mkN "falsidade" ; mkN "mentira" ; } ; --*
lin falsity_2_N = variants {mkN "falsidade" ; mkN "mentira" ; } ; --*
lin falter_1_V = variants {mkV "esmorecer" ; mkV "fraquejar" ; } ; --*
lin falter_3_V = variants {mkV "tropeçar" ; mkV "tropicar" ; } ; --*
lin falter_4_V = variants {mkV "balbuciar" ; mkV "gaguejar" ; } ; --*
lin falteringly_Adv = mkAdv "instavelmente" ; --*
lin fame_1_N = variants {mkN "celebridade" ; mkN "fama" ; mkN "glória" ; mkN "renome" ; } ; --*
lin fame_2_N = variants {mkN "fama" ; mkN "renome" ; } ; --*
lin familial_1_A = mkA "familiar" ; --*
lin familiar_1_A = mkA "familiar" ; --*
lin familiar_2_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; } ; --*
lin familiar_3_N = variants {mkN "espírito" ; mkN "familiar" ; mkN "spirit" ; } ; --*
lin familiar_4_A = variants {mkA "familiar" ; mkA "íntimo" ; } ; --*
lin familiarity_1_N = variants {mkN "conhecimento" ; mkN "familiaridade" ; } ; --*
lin familiarity_2_N = mkN "familiaridade" ; --*
lin familiarity_3_N = mkN "familiaridade" ; --*
lin familiarity_4_N = mkN "familiaridade" ; --*
lin familiarization_1_N = mkN "familiarização" ; --*
lin familiarize_1_V2 = variants {mkV2 (mkV "familiarizar") ; mkV2 (mkV "informar") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "notificar") ; } ; --*
lin family_1_N = variants {mkN "casa" ; mkN "família" ; mkN "lar" ; } ; --*
lin family_2_N = variants {mkN "família" ; mkN "unit" ; } ; --*
lin family_3_N = variants {mkN "categoria" ; mkN "classe" ; mkN "família" ; mkN "grupo" ; } ; --*
lin family_4_N = variants {mkN "família" ; mkN "line" ; } ; --*
lin family_5_N = variants {mkN "família" ; mkN "parente" ; } ; --*
lin family_6_N = variants {mkN "classe" ; mkN "família" ; } ; --*
lin family_8_N = mkN "compania" ; --*
lin famine_1_N = variants {mkN "carência" ; mkN "escassez" ; mkN "falta" ; mkN "fome" ; mkN "grande" ; mkN "penúria" ; } ; --*
lin famine_2_N = variants {mkN "Carestia" ; mkN "fome" ; mkN "Fome" ; } ; --*
lin famish_1_V = variants {mkV "estar" ; mkV "morrer" ; mkV "passar" ; } ; --*
lin famish_2_V2 = mkV2 (mkV "esfomear") ; --*
lin famish_3_V = variants {mkV "morrer" ; mkV "passar" ; } ; --*
lin famotidine_N = mkN "Famotidina" ; --*
lin famous_A = variants {mkA "célebre" ; mkA "comemorado" ; mkA "de" ; mkA "famoso" ; mkA "ilustre" ; mkA "notável" ; mkA "renomado" ; } ; --*
lin fan_1_N = variants {mkN "leque" ; mkN "ventilador" ; } ; --*
lin fan_2_N = variants {mkN "fã" ; mkN "fan" ; mkN "torcedor" ; } ; --*
lin fan_3_N = mkN "amante" ; --*
lin fan_3_V2 = variants {mkV2 (mkV "abanar") ; mkV2 (mkV "flabelar") ; mkV2 (mkV "ventilar") ; } ; --*
lin fan_3_V = variants {mkV "abanar" ; mkV "flabelar" ; mkV "ventilar" ; } ; --*
lin fan_4_N = variants {mkN "leque" ; mkN "ventilador" ; } ; --*
lin fanatic_A = variants {mkA "fanático" ; mkA "furiosa" ; mkA "furiosas" ; mkA "furiosos" ; mkA "hidrofóbico" ; } ; --*
lin fanatical_A = variants {mkA "fanático" ; mkA "furiosa" ; mkA "furiosas" ; mkA "furiosos" ; mkA "hidrofóbico" ; } ; --*
lin fanaticFem_N = variants {mkN "fanática" ; mkN "fanático" ; } ; --*
lin fanaticism_1_N = variants {mkN "fanatismo" ; mkN "Fanatismo" ; } ; --*
lin fanaticMasc_N = variants {mkN "fanática" ; mkN "fanático" ; } ; --*
lin fancier_N = variants {mkN "amador" ; mkN "diletanto" ; mkN "entusiasta" ; mkN "mais" ; mkN "não" ; } ; --*
lin fanciful_2_A = mkA "imaginário" ; --*
lin fancy_1_N = variants {mkN "fantasia" ; mkN "ilusão" ; } ; --*
lin fancy_1_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin fancy_2_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "querer") ; mkV2 (mkV "to") ; } ; --*
lin fancy_free_A = mkA "livre" ; --*
lin fandango_N = variants {mkN "dança" ; mkN "fandango" ; } ; --*
lin fandom_N = mkN "Fandom" ; --*
lin fanfare_2_N = variants {mkN "charanga" ; mkN "fanfarra" ; } ; --*
lin fang_1_N = mkN "fang" ; --*
lin fang_3_N = variants {mkN "canino" ; mkN "presa" ; } ; --*
lin fanged_A = mkA "com" ; --*
lin fanjet_2_N = variants {mkN "engine" ; mkN "turbofan" ; mkN "turbojato" ; } ; --*
lin fanlight_2_N = mkN "clarabóia" ; --*
lin fanny_1_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin fantan_2_N = mkN "Dominó" ; --*
lin fantasize_1_V = mkV "sonhar" ; --*
lin fantasize_2_V = mkV "sonhar" ; --*
lin fantastic_1_A = mkA "fantástico" ; --*
lin fantastic_2_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin fantastic_4_A = mkA "fantástico" ; --*
lin fantastically_Adv = variants {mkAdv "fabulosamente" ; mkAdv "fantasticamente" ; } ; --*
lin fantasy_1_N = mkN "fantasia" ; --*
lin fantasy_2_N = mkN "fantasia" ; --*
lin fantasy_3_N = variants {mkN "fantasia" ; mkN "ilusão" ; } ; --*
lin fao_N = variants {mkN "and" ; mkN "FAO" ; } ; --*
lin far_2_A = variants {mkA "distante" ; mkA "longínquo" ; } ; --*
lin farad_N = mkN "farad" ; --*
lin faraway_1_A = variants {mkA "distante" ; mkA "longínquo" ; } ; --*
lin faraway_2_A = mkA "longe" ; --*
lin farce_1_N = variants {mkN "comédia" ; mkN "comedy" ; mkN "farsa" ; } ; --*
lin farcical_A = variants {mkA "grotesco" ; mkA "ridículo" ; } ; --*
lin fare_2_N = mkN "tarifa" ; --*
lin fare_3_N = mkN "passageiro" ; --*
lin fare_4_N = variants {mkN "alimento" ; mkN "dieta" ; } ; --*
lin farewell_1_N = variants {mkN "adeus" ; mkN "of" ; } ; --*
lin farewell_2_N = variants {mkN "despedida" ; mkN "partida" ; } ; --*
lin far_famed_A = variants {mkA "célebre" ; mkA "comemorado" ; mkA "de" ; mkA "famoso" ; mkA "ilustre" ; mkA "notável" ; mkA "renomado" ; } ; --*
lin far_flung_1_A = mkA "remoto" ; --*
lin far_flung_2_A = mkA "remoto" ; --*
lin farm_3_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin farmer_1_N = variants {mkN "agricultor" ; mkN "fazendeiro" ; } ; --*
lin farmhouse_N = variants {mkN "casa" ; mkN "quinta" ; } ; --*
lin farming_1_N = variants {mkN "agricultura" ; mkN "cultivo" ; mkN "pecuária" ; } ; --*
lin farming_2_N = mkN "agricultura" ; --*
lin farmland_1_N = variants {mkN "area" ; mkN "cultivo" ; } ; --*
lin farmland_2_N = variants {mkN "land" ; mkN "terra" ; } ; --*
lin farm_N = variants {mkN "fazenda" ; mkN "granja" ; mkN "quinta" ; mkN "quintas" ; mkN "sítio" ; } ; --*
lin farm_out_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "subcontratar") ; } ; --*
lin farm_out_2_V2 = mkV2 (mkV "out") ; --*
lin farness_N = mkN "lonjura" ; --*
lin far_off_A = variants {mkA "distante" ; mkA "longínquo" ; } ; --*
lin farrago_N = variants {mkN "and" ; mkN "gororoba" ; mkN "miscelânea" ; mkN "mistura" ; mkN "mistureba" ; } ; --*
lin farrow_V = mkV "parir" ; --*
lin farsi_1_N = mkN "persa" ; --*
lin farsi_2_N = variants {mkN "Língua" ; mkN "persa" ; } ; --*
lin farther_1_Adv = mkAdv "mais" ; --*
lin farther_1_A = mkA "mais" ; --*
lin farther_2_Adv = mkAdv "mais" ; --*
lin fart_N = variants {mkN "flato" ; mkN "flatulência" ; mkN "gás" ; mkN "peido" ; mkN "wind" ; } ; --*
lin fart_V = variants {mkV "peidar" ; mkV "wind" ; } ; --*
lin fasces_N = mkN "fasces" ; --*
lin fascia_1_N = mkN "fáscia" ; --*
lin fascia_2_N = mkN "painel" ; --*
lin fascicle_2_N = variants {mkN "bundle" ; mkN "fascículo" ; } ; --*
lin fasciculation_N = variants {mkN "fasciculação" ; mkN "Fasciculação" ; } ; --*
lin fascinate_1_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "intrigar") ; } ; --*
lin fascinate_2_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin fascinate_3_V2 = variants {mkV2 (mkV "cativar") ; mkV2 (mkV "deleitar") ; mkV2 (mkV "deliciar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin fascinating_1_A = variants {mkA "absorvente" ; mkA "fascinante" ; } ; --*
lin fascination_2_N = mkN "fascinação" ; --*
lin fascioliasis_1_N = mkN "Fasciolíase" ; --*
lin fascism_N = variants {mkN "facismo" ; mkN "fascismo" ; } ; --*
lin fascist_A = mkA "fascista" ; --*
lin fascist_N = variants {mkN "facista" ; mkN "fascista" ; } ; --*
lin fashion_1_N = variants {mkN "estilo" ; mkN "maneira" ; } ; --*
lin fashion_3_N = variants {mkN "moda" ; mkN "Moda" ; } ; --*
lin fashionable_1_A = mkA "chique" ; --*
lin fashionable_2_A = mkA "chique" ; --*
lin fashionable_3_A = variants {mkA "da" ; mkA "namoda" ; } ; --*
lin fast_1_A = variants {mkA "rápida" ; mkA "rápido" ; mkA "veloz" ; } ; --*
lin fast_1_V = mkV "jejuar" ; --*
lin fast_2_V = mkV "jejuar" ; --*
lin fast_3_A = mkA "rápido" ; --*
lin fast_6_A = variants {mkA "devasso" ; mkA "libertino" ; } ; --*
lin fast_8_A = variants {mkA "firme" ; mkA "seguro" ; } ; --*
lin fast_9_A = mkA "fiel" ; --*
lin fasten_1_V2 = variants {mkV2 (mkV "fixar") ; mkV2 (mkV "prender") ; } ; --*
lin fasten_2_V = variants {mkV "aferrolhar" ; mkV "fixar" ; } ; --*
lin fasten_3_V2 = mkV2 (mkV "cravar") ; --*
lin fasten_4_V2 = variants {mkV2 (mkV "apertar") ; mkV2 (mkV "estreitar") ; } ; --*
lin fastening_2_N = variants {mkN "fixação" ; mkN "ligação" ; } ; --*
lin fasten_on_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin fastidious_1_A = variants {mkA "detalhista" ; mkA "exigente" ; } ; --*
lin fastidious_2_A = mkA "meticuloso" ; --*
lin fastness_1_N = variants {mkN "rapidez" ; mkN "velocidade" ; } ; --*
lin fastness_3_N = variants {mkN "baluarte" ; mkN "fortaleza" ; } ; --*
lin fast_N = mkN "jejum" ; --*
lin fat_1_A = mkA "gordo" ; --*
lin fat_1_N = variants {mkN "gordura" ; mkN "lípidos" ; mkN "tecido" ; } ; --*
lin fat_2_N = variants {mkN "tecido" ; mkN "tissue" ; } ; --*
lin fat_3_A = variants {mkA "gordo" ; mkA "obeso" ; } ; --*
lin fat_3_N = variants {mkN "corpulência" ; mkN "excesso" ; mkN "obesidade" ; } ; --*
lin fat_5_A = mkA "produtivo" ; --*
lin fatal_1_A = variants {mkA "fatal" ; mkA "nefasto" ; } ; --*
lin fatal_2_A = mkA "fatídico" ; --*
lin fatal_3_A = mkA "desastroso" ; --*
lin fatalism_2_N = variants {mkN "fatalismo" ; mkN "pesimismo" ; } ; --*
lin fatality_1_N = variants {mkN "death" ; mkN "fatalidade" ; } ; --*
lin fate_1_N = variants {mkN "destino" ; mkN "fado" ; mkN "sorte" ; } ; --*
lin fate_2_N = mkN "destino" ; --*
lin fate_3_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin fateful_1_A = mkA "fatídico" ; --*
lin fateful_2_A = mkA "aziago" ; --*
lin fateful_3_A = mkA "desastroso" ; --*
lin fate_V2 = variants {mkV2 (mkV "designar") ; mkV2 (mkV "destinar") ; } ; --*
lin fathead_N = variants {mkN "asno" ; mkN "estúpido" ; mkN "idiota" ; } ; --*
lin father_1_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "parent" ; } ; --*
lin father_2_N = mkN "antepassado" ; --*
lin father_3_N = mkN "padre" ; --*
lin father_4_N = variants {mkN "Father" ; mkN "of" ; mkN "Padres" ; } ; --*
lin father_6_N = mkN "Pai" ; --*
lin father_7_N = variants {mkN "father" ; mkN "fundador" ; mkN "iniciador" ; mkN "pai" ; } ; --*
lin fatherhood_1_N = mkN "paternidade" ; --*
lin fatherhood_2_N = mkN "Pai" ; --*
lin father_in_law_N = mkN "sogro" ; --*
lin fatherland_N = variants {mkN "country" ; mkN "land" ; mkN "of" ; mkN "pátria" ; } ; --*
lin father_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin fathom_1_N = mkN "braça" ; --*
lin fathom_1_V2 = variants {mkV2 (mkV "aprofundar") ; mkV2 (mkV "comprender") ; } ; --*
lin fatigue_1_N = variants {mkN "cansaço" ; mkN "esgotamento" ; mkN "estafa" ; mkN "fadiga" ; mkN "Fadiga" ; mkN "fatiga" ; } ; --*
lin fatigue_1_V2 = mkV2 (mkV "fatigar") ; --*
lin fatigue_2_V2 = variants {mkV2 (mkV "cansar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "exaurir-se") ; mkV2 (mkV "out") ; mkV2 (mkV "upon") ; } ; --*
lin fatless_A = mkA "sem" ; --*
lin fatness_N = variants {mkN "corpulência" ; mkN "excesso" ; mkN "obesidade" ; } ; --*
lin fatso_N = variants {mkN "gordalhão" ; mkN "gordão" ; mkN "person" ; } ; --*
lin fatten_up_V2 = variants {mkV2 (mkV "cevar") ; mkV2 (mkV "engordar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin fatten_V2 = variants {mkV2 (mkV "cevar") ; mkV2 (mkV "engordar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin fatty_A = variants {mkA "gordo" ; mkA "obeso" ; } ; --*
lin fatuity_N = mkN "absurdidade" ; --*
lin fatuousness_N = mkN "absurdidade" ; --*
lin fat_V2 = variants {mkV2 (mkV "cevar") ; mkV2 (mkV "engordar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin fatwa_N = mkN "fatwa" ; --*
lin faucet_N = variants {mkN "bica" ; mkN "torneira" ; } ; --*
lin fault_1_N = variants {mkN "engano" ; mkN "equívoco" ; mkN "erro" ; mkN "falha" ; } ; --*
lin fault_2_N = variants {mkN "defeito" ; mkN "erro" ; mkN "falha" ; mkN "Flaw" ; } ; --*
lin fault_4_N = variants {mkN "falha" ; mkN "fault" ; } ; --*
lin fault_6_N = mkN "culpa" ; --*
lin fault_finder_N = mkN "cínico" ; --*
lin faultless_A = variants {mkA "impecável" ; mkA "sem" ; } ; --*
lin fault_V2 = variants {mkV2 (mkV "culpabilizar") ; mkV2 (mkV "culpar") ; } ; --*
lin faulty_1_A = mkA "defeituoso" ; --*
lin faulty_2_A = variants {mkA "equivocado" ; mkA "errado" ; } ; --*
lin fauna_1_N = variants {mkN "fauna" ; mkN "Fauna" ; } ; --*
lin fauna_2_N = variants {mkN "animal" ; mkN "being" ; mkN "besta" ; mkN "bicho" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin faun_N = variants {mkN "fauno" ; mkN "Fauno" ; } ; --*
lin faux_pas_N = variants {mkN "gafe" ; mkN "pas" ; mkN "solecismo" ; } ; --*
lin favour_3_N = mkN "favor" ; --*
lin favour_3_V2 = variants {mkV2 (mkV "favorecer") ; mkV2 (mkV "preferir") ; } ; --*
lin favour_4_V2 = mkV2 (mkV "favorecer") ; --*
lin favour_4_V = mkV "favorecer" ; --*
lin favour_4_VS = mkVS (mkV "favorecer") ; --*
lin favour_5_N = variants {mkN "favor" ; mkN "gentileza" ; } ; --*
lin favourable_1_A = mkA "favorável" ; --*
lin favourable_2_A = mkA "favorável" ; --*
lin favourable_3_A = variants {mkA "favorável" ; mkA "profícuo" ; mkA "propício" ; mkA "vantajoso" ; } ; --*
lin favourable_4_A = variants {mkA "favorável" ; mkA "propício" ; mkA "vantajoso" ; } ; --*
lin favourableness_1_N = variants {mkN "benefício" ; mkN "lucro" ; } ; --*
lin favoured_A = variants {mkA "favorita" ; mkA "favorito" ; mkA "predilecto" ; mkA "predileto" ; mkA "preferido" ; } ; --*
lin favourite_1_A = variants {mkA "favorito" ; mkA "predileto" ; } ; --*
lin favourite_2_A = variants {mkA "favorita" ; mkA "favorito" ; mkA "predilecto" ; mkA "predileto" ; mkA "preferido" ; } ; --*
lin favouriteFem_1_N = variants {mkN "favorita" ; mkN "favorito" ; } ; --*
lin favouriteFem_3_N = variants {mkN "favorita" ; mkN "favorito" ; mkN "preferida" ; mkN "preferido" ; } ; --*
lin favouriteMasc_1_N = variants {mkN "favorita" ; mkN "favorito" ; } ; --*
lin favouriteMasc_3_N = variants {mkN "favorita" ; mkN "favorito" ; mkN "preferida" ; mkN "preferido" ; } ; --*
lin favouritism_2_N = mkN "discriminação" ; --*
lin fawn_1_V = variants {mkV "acovardar" ; mkV "acovardar-se" ; } ; --*
lin fawn_3_V = mkV "parir" ; --*
lin fax_N = variants {mkN "fax" ; mkN "FAX" ; mkN "machine" ; } ; --*
lin fbi_PN = variants {mkPN "Bureau" ; mkPN "FBI" ; } ; --*
lin fealty_N = variants {mkN "fidelidade" ; mkN "lealdade" ; } ; --*
lin fear_1_N = variants {mkN "consternação" ; mkN "medo" ; mkN "susto" ; mkN "temor" ; mkN "terror" ; } ; --*
lin fear_1_VS = mkVS (mkV "ter") ; --*
lin fear_2_N = variants {mkN "medo" ; mkN "preocupação" ; mkN "temor" ; } ; --*
lin fear_2_V2 = variants {mkV2 (mkV "apavorar") ; mkV2 (mkV "recear") ; mkV2 (mkV "temer") ; mkV2 (mkV "ter") ; } ; --*
lin fear_3_N = variants {mkN "reverência" ; mkN "temor" ; } ; --*
lin fear_4_V2 = mkV2 (mkV "temer") ; --*
lin fear_5_V2 = variants {mkV2 (mkV "reverenciar") ; mkV2 (mkV "temer") ; mkV2 (mkV "venerar") ; } ; --*
lin fear_5_VS = mkVS (mkV "sentir") ; --*
lin fearful_2_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin fearful_3_A = variants {mkA "cobarde" ; mkA "covarde" ; mkA "covardemente" ; } ; --*
lin fearful_4_A = mkA "horrível" ; --*
lin fearfulness_1_N = variants {mkN "consternação" ; mkN "medo" ; mkN "susto" ; mkN "temor" ; mkN "terror" ; } ; --*
lin fearless_1_A = variants {mkA "destemido" ; mkA "sem" ; } ; --*
lin fearless_2_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "intrépido" ; mkA "ousado" ; } ; --*
lin fearlessness_1_N = variants {mkN "bravura" ; mkN "valentia" ; } ; --*
lin fearsome_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin feasible_A = variants {mkA "executável" ; mkA "exequível" ; mkA "exeqüível" ; mkA "factível" ; mkA "fazível" ; mkA "maneável" ; mkA "manejável" ; mkA "possível" ; mkA "praticável" ; mkA "prestimoso" ; mkA "verossímil" ; mkA "viável" ; } ; --*
lin feast_1_N = variants {mkN "banquete" ; mkN "festa" ; } ; --*
lin feast_3_N = variants {mkN "ágape" ; mkN "banquete" ; mkN "comerembanquete" ; } ; --*
lin feast_3_V2 = mkV2 (mkV "apreciar") ; --*
lin feast_4_N = variants {mkN "banquete" ; mkN "festa" ; } ; --*
lin feast_day_N = mkN "day" ; --*
lin feasting_N = mkN "banquete" ; --*
lin feather_1_N = variants {mkN "pena" ; mkN "pluma" ; mkN "plumagem" ; } ; --*
lin feather_5_V2 = mkV2 (mkV "emplumar") ; --*
lin featherbed_1_N = variants {mkN "bed" ; mkN "penugem" ; } ; --*
lin featherbed_1_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin feather_boa_N = variants {mkN "boa" ; mkN "jibóia" ; } ; --*
lin featherbrained_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin feat_N = variants {mkN "façanha" ; mkN "feito" ; mkN "proeza" ; mkN "realização" ; } ; --*
lin feature_1_N = variants {mkN "carácter" ; mkN "característica" ; mkN "qualidade" ; } ; --*
lin feature_1_V2 = variants {mkV2 (mkV "apresenta") ; mkV2 (mkV "dispõe") ; } ; --*
lin feature_2_N = mkN "traço" ; --*
lin feature_2_V2 = variants {mkV2 (mkV "constar") ; mkV2 (mkV "gabar") ; mkV2 (mkV "gabar-se") ; } ; --*
lin feature_3_N = variants {mkN "film" ; mkN "Longa-metragem" ; } ; --*
lin feb_PN = variants {mkPN "fev" ; mkPN "fevereiro" ; mkPN "Fevereiro" ; } ; --*
lin febrile_A = mkA "febril" ; --*
lin feckless_2_A = mkA "incapaz" ; --*
lin fecund_1_A = variants {mkA "fecundo" ; mkA "fértil" ; } ; --*
lin fecund_2_A = variants {mkA "fecundo" ; mkA "fértil" ; mkA "prolífico" ; } ; --*
lin fecundity_1_N = mkN "fecundidade" ; --*
lin fecundity_2_N = variants {mkN "fertilidade" ; mkN "Fertilidade" ; } ; --*
lin fed_2_N = variants {mkN "Federal" ; mkN "Reserva" ; mkN "Reserve" ; } ; --*
lin fedayeen_N = mkN "fedayin" ; --*
lin federal_1_A = mkA "federal" ; --*
lin federal_2_A = mkA "federal" ; --*
lin federal_3_A = mkA "federal" ; --*
lin federal_4_A = mkA "federal" ; --*
lin federalism_N = variants {mkN "federalismo" ; mkN "Federalismo" ; } ; --*
lin federalist_2_N = mkN "federalista" ; --*
lin federation_2_N = variants {mkN "confederação" ; mkN "federação" ; mkN "união" ; } ; --*
lin federation_3_N = mkN "federação" ; --*
lin fee_1_N = variants {mkN "custo" ; mkN "estipêndio" ; mkN "remunerações" ; mkN "taxa" ; } ; --*
lin feeble_1_A = variants {mkA "capenga" ; mkA "debilitado" ; mkA "fraco" ; mkA "manco" ; } ; --*
lin feeble_2_A = variants {mkA "débil" ; mkA "fraco" ; } ; --*
lin feeble_3_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin feeble_4_A = mkA "fraco" ; --*
lin feebleness_1_N = variants {mkN "debilidade" ; mkN "fraqueza" ; } ; --*
lin feed_10_V2 = mkV2 (mkV "apreciar") ; --*
lin feed_11_V2 = mkV2 (mkV "estercar") ; --*
lin feed_1_V2 = mkV2 (mkV "alimentar") ; --*
lin feed_2_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "dar") ; } ; --*
lin feed_3_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "suprir") ; } ; --*
lin feed_6_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "alimentar-se") ; mkV2 (mkV "comer") ; } ; --*
lin feed_7_V2 = mkV2 (mkV "alimentar") ; --*
lin feed_8_V = variants {mkV "correr" ; mkV "fluir" ; mkV "manar" ; } ; --*
lin feedback_1_N = variants {mkN "retorno" ; mkN "retroalimentação" ; } ; --*
lin feedback_2_N = variants {mkN "auto-alimentação" ; mkN "parecer" ; mkN "retorno" ; } ; --*
lin feeder_2_N = mkN "comedor" ; --*
lin feeder_3_N = variants {mkN "afluente" ; mkN "confluente" ; } ; --*
lin feeding_1_N = mkN "Alimentação" ; --*
lin feeding_2_N = mkN "alimentação" ; --*
lin feeding_bottle_N = variants {mkN "biberão" ; mkN "bottle" ; } ; --*
lin feed_N = variants {mkN "alimento" ; mkN "rações" ; } ; --*
lin feed_on_1_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin feel_10_V2 = mkV2 (mkV "apalpar") ; --*
lin feel_11_V2 = mkV2 (mkV "sentir") ; --*
lin feel_1_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "sentir") ; } ; --*
lin feel_1_VA = variants {mkVA (mkV "experimentar") ; mkVA (mkV "sentir") ; } ; --*
lin feel_2_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin feel_5_VA = variants {mkVA (mkV "achar") ; mkVA (mkV "considerar") ; mkVA (mkV "sentir-se") ; } ; --*
lin feeler_1_N = mkN "antena" ; --*
lin feeler_4_N = mkN "barbo" ; --*
lin feeling_1_N = variants {mkN "emoção" ; mkN "impressão" ; mkN "sentimento" ; } ; --*
lin feeling_2_N = variants {mkN "crença" ; mkN "ideia" ; mkN "idéia" ; mkN "impressão" ; mkN "opinião" ; } ; --*
lin feeling_3_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin feeling_5_N = variants {mkN "sensação" ; mkN "sensation" ; mkN "toque" ; } ; --*
lin feeling_6_N = variants {mkN "feeling" ; mkN "sentimento" ; } ; --*
lin feel_VS = mkVS (mkV "achar") ; --*
lin fee_V2 = mkV2 (mkV "gratificar") ; --*
lin feign_1_V2 = variants {mkV2 (mkV "aparentar") ; mkV2 (mkV "fingir") ; mkV2 (mkV "pretextar") ; mkV2 (mkV "simular") ; } ; --*
lin feign_2_V2 = variants {mkV2 (mkV "fingir") ; mkV2 (mkV "simular") ; } ; --*
lin feijoa_1_N = variants {mkN "bush" ; mkN "feijoa" ; } ; --*
lin feijoa_2_N = variants {mkN "feijoa" ; mkN "guava" ; } ; --*
lin feint_N = mkN "finta" ; --*
lin feldspar_N = mkN "feldspato" ; --*
lin felicitate_V2 = variants {mkV2 (mkV "felicitar") ; mkV2 (mkV "parabenizar") ; } ; --*
lin felicitation_2_N = variants {mkN "congratulação" ; mkN "felicitação" ; mkN "parabéns" ; } ; --*
lin felicitous_2_A = variants {mkA "contente" ; mkA "feliz" ; } ; --*
lin felicity_2_N = variants {mkN "alegria" ; mkN "aventurança" ; mkN "felicidade" ; } ; --*
lin felicity_2_PN = variants {mkPN "alegria" ; mkPN "aventurança" ; mkPN "felicidade" ; } ; --*
lin feline_1_N = variants {mkN "felídeos" ; mkN "felino" ; mkN "felinos" ; } ; --*
lin feline_A = mkA "felino" ; --*
lin fell_1_N = mkN "pele" ; --*
lin fell_1_V2 = variants {mkV2 (mkV "abater") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; } ; --*
lin fell_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin fellatio_1_N = variants {mkN "chupa" ; mkN "felação" ; } ; --*
lin fellow_1_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin fellow_2_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; } ; --*
lin fellow_3_N = variants {mkN "colega" ; mkN "fellow" ; mkN "Fellow" ; } ; --*
lin fellow_6_N = variants {mkN "gajo" ; mkN "homem" ; } ; --*
lin fellow_7_N = variants {mkN "homem" ; mkN "man" ; mkN "namorado" ; mkN "noivo" ; } ; --*
lin fellow_feeling_N = variants {mkN "compaixão" ; mkN "feeling" ; mkN "piedade" ; mkN "simpatia" ; } ; --*
lin fellowship_1_N = mkN "compania" ; --*
lin fellowship_2_N = mkN "companherismo" ; --*
lin fellow_traveller_2_N = variants {mkN "acompanhante" ; mkN "traveler" ; mkN "traveller" ; } ; --*
lin felon_1_N = variants {mkN "criminoso" ; mkN "fora-de-lei" ; } ; --*
lin felonious_A = mkA "criminoso" ; --*
lin felony_N = mkN "crime" ; --*
lin felspar_N = mkN "feldspato" ; --*
lin felt_N = mkN "feltro" ; --*
lin felucca_N = mkN "falua" ; --*
lin female_1_N = mkN "fêmea" ; --*
lin female_2_N = variants {mkN "fêmea" ; mkN "person" ; } ; --*
lin feminine_1_A = mkA "feminina" ; --*
lin feminine_2_A = variants {mkA "feminina" ; mkA "feminino" ; } ; --*
lin feminine_3_A = variants {mkA "feminina" ; mkA "feminino" ; } ; --*
lin feminine_N = mkN "feminino" ; --*
lin femininity_N = mkN "feminilidade" ; --*
lin feminism_1_N = mkN "feminismo" ; --*
lin feminism_2_N = variants {mkN "feminismo" ; mkN "lib" ; mkN "liberation" ; mkN "movement" ; } ; --*
lin feministFem_N = variants {mkN "feminista" ; mkN "liberationist" ; mkN "rightist" ; } ; --*
lin feministMasc_N = variants {mkN "feminista" ; mkN "liberationist" ; mkN "rightist" ; } ; --*
lin femoral_A = variants {mkA "femoral" ; mkA "femural" ; } ; --*
lin femtosecond_N = variants {mkN "femtossegundo" ; mkN "Femtossegundo" ; } ; --*
lin femur_N = variants {mkN "fémur" ; mkN "Fémur" ; mkN "fêmur" ; } ; --*
lin fen_2_N = variants {mkN "brejo" ; mkN "lodaçal" ; mkN "marisma" ; mkN "pântano" ; mkN "pântanos" ; } ; --*
lin fence_1_N = variants {mkN "barreira" ; mkN "cerca" ; mkN "estacada" ; mkN "paliçada" ; } ; --*
lin fence_3_V2 = mkV2 (mkV "esgrimir") ; --*
lin fence_4_V2 = variants {mkV2 (mkV "emparedar") ; mkV2 (mkV "in") ; } ; --*
lin fence_5_V2 = variants {mkV2 (mkV "arguir") ; mkV2 (mkV "argüir") ; mkV2 (mkV "debater") ; mkV2 (mkV "discutir") ; } ; --*
lin fence_in_1_V2 = variants {mkV2 (mkV "cercar") ; mkV2 (mkV "in") ; } ; --*
lin fence_in_2_V2 = variants {mkV2 (mkV "emparedar") ; mkV2 (mkV "in") ; } ; --*
lin fencer_N = mkN "espadeiro" ; --*
lin fencing_1_N = variants {mkN "barreira" ; mkN "cerca" ; mkN "estacada" ; mkN "paliçada" ; } ; --*
lin fencing_2_N = variants {mkN "cerca" ; mkN "material" ; } ; --*
lin fencing_3_N = variants {mkN "esgrima" ; mkN "Esgrima" ; } ; --*
lin fend_2_V = mkV "resistir" ; --*
lin fender_1_N = mkN "guarda-lama" ; --*
lin fend_for_V2 = variants {mkV2 (mkV "defender") ; mkV2 (mkV "for") ; mkV2 (mkV "suportar") ; } ; --*
lin fend_off_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin fenestration_1_N = mkN "fenestração" ; --*
lin fennel_1_N = mkN "funcho" ; --*
lin fennel_2_N = variants {mkN "fennel" ; mkN "funcho" ; } ; --*
lin fennel_3_N = variants {mkN "fennel" ; mkN "funcho" ; } ; --*
lin fenugreek_2_N = variants {mkN "feno-grego" ; mkN "seed" ; } ; --*
lin feoff_N = mkN "feudo" ; --*
lin feral_A = variants {mkA "fero" ; mkA "feroz" ; } ; --*
lin feria_1_N = mkN "feira" ; --*
lin fermata_1_N = mkN "fermata" ; --*
lin fermata_2_N = mkN "fermata" ; --*
lin ferment_1_N = variants {mkN "agitação" ; mkN "perturbação" ; } ; --*
lin ferment_1_V = variants {mkV "fermentar" ; mkV "fervilhar" ; } ; --*
lin ferment_2_V2 = mkV2 (mkV "agitar") ; --*
lin ferment_3_N = variants {mkN "Fermentacao" ; mkN "fermentação" ; } ; --*
lin ferment_4_V = mkV "estragar" ; --*
lin fermentable_A = mkA "fermentável" ; --*
lin fermentation_1_N = variants {mkN "agitação" ; mkN "perturbação" ; } ; --*
lin fermentation_2_N = variants {mkN "Fermentacao" ; mkN "fermentação" ; } ; --*
lin fermion_N = variants {mkN "fermião" ; mkN "férmion" ; mkN "Férmions" ; } ; --*
lin fermium_N = variants {mkN "Fermio" ; mkN "férmio" ; mkN "number" ; } ; --*
lin fern_N = variants {mkN "feto" ; mkN "pteridófitas" ; mkN "samambaia" ; } ; --*
lin ferocious_A = variants {mkA "bravo" ; mkA "feroz" ; mkA "fulo" ; } ; --*
lin ferociousness_N = variants {mkN "barbárie" ; mkN "brutalidade" ; } ; --*
lin ferocity_N = mkN "violência" ; --*
lin ferrara_PN = mkPN "Ferrara" ; --*
lin ferret_1_N = variants {mkN "ferret" ; mkN "furăo" ; mkN "nigripes" ; } ; --*
lin ferret_2_N = variants {mkN "Furao" ; mkN "furão" ; } ; --*
lin ferret_3_V = variants {mkV "extrair" ; mkV "out" ; } ; --*
lin ferric_A = mkA "ferroso" ; --*
lin ferricyanide_N = mkN "Ferrocianetos" ; --*
lin ferris_wheel_N = mkN "wheel" ; --*
lin ferritin_N = mkN "ferritina" ; --*
lin ferroconcrete_N = variants {mkN "betão" ; mkN "concrete" ; mkN "Concreto" ; } ; --*
lin ferromagnetic_A = mkA "ferromagnético" ; --*
lin ferromagnetism_N = mkN "ferromagnetismo" ; --*
lin ferrous_A = mkA "ferroso" ; --*
lin ferry_1_N = mkN "balsa" ; --*
lin ferry_1_V2 = mkV2 (mkV "transportar") ; --*
lin ferry_1_V = mkV "transportar" ; --*
lin ferry_2_N = mkN "balsa" ; --*
lin ferryboat_N = mkN "balsa" ; --*
lin ferryman_N = mkN "balseiro" ; --*
lin fertile_1_A = variants {mkA "fecundo" ; mkA "fértil" ; } ; --*
lin fertile_2_A = variants {mkA "fecundo" ; mkA "fértil" ; mkA "prolífico" ; } ; --*
lin fertile_3_A = variants {mkA "fértil" ; mkA "prolífico" ; } ; --*
lin fertile_4_A = mkA "produtivo" ; --*
lin fertility_1_N = variants {mkN "rate" ; mkN "taxa" ; } ; --*
lin fertility_2_N = variants {mkN "fertilidade" ; mkN "Fertilidade" ; } ; --*
lin fertility_3_N = mkN "riqueza" ; --*
lin fertilizable_A = mkA "fertilizável" ; --*
lin fertilization_1_N = variants {mkN "fecundação" ; mkN "fertilização" ; } ; --*
lin fertilization_2_N = variants {mkN "Fecundaçao" ; mkN "fecundação" ; mkN "fertilização" ; } ; --*
lin fertilize_1_V2 = mkV2 (mkV "estercar") ; --*
lin fertilize_2_V2 = variants {mkV2 (mkV "fecundar") ; mkV2 (mkV "fertilizar") ; } ; --*
lin fertilize_3_V2 = variants {mkV2 (mkV "fecundar") ; mkV2 (mkV "fertilizar") ; mkV2 (mkV "inseminar") ; } ; --*
lin fertilizer_1_N = variants {mkN "fertilizante" ; mkN "fertilizantes" ; mkN "Fertilizantes" ; mkN "food" ; } ; --*
lin fervency_N = variants {mkN "fervor" ; mkN "zelo" ; } ; --*
lin fervent_1_A = mkA "ardente" ; --*
lin fervid_1_A = mkA "ardente" ; --*
lin fervour_1_N = variants {mkN "excitação" ; mkN "excitamento" ; } ; --*
lin fervour_2_N = variants {mkN "fervor" ; mkN "zelo" ; } ; --*
lin fesse_1_N = mkN "faixa" ; --*
lin festal_A = variants {mkA "festivo" ; mkA "vívido" ; } ; --*
lin festering_1_N = mkN "supuração" ; --*
lin festering_2_N = mkN "pus" ; --*
lin festival_1_N = mkN "festividade" ; --*
lin festival_2_N = mkN "festival" ; --*
lin festive_A = variants {mkA "festivo" ; mkA "vívido" ; } ; --*
lin festivity_N = variants {mkN "celebração" ; mkN "festa" ; mkN "festividade" ; } ; --*
lin festoon_V2 = mkV2 (mkV "festonar") ; --*
lin fetal_A = mkA "fetal" ; --*
lin fetch_1_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin fetch_2_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin fetch_3_V2 = mkV2 (mkV "trazer") ; --*
lin fetch_N = mkN "busque" ; --*
lin fete_day_N = mkN "day" ; --*
lin fetid_1_A = variants {mkA "fedorento" ; mkA "fétido" ; mkA "malcheiroso" ; } ; --*
lin fetish_2_N = mkN "fetiche" ; --*
lin fetish_3_N = mkN "fetiche" ; --*
lin fetishism_2_N = mkN "fetiche" ; --*
lin fetter_N = variants {mkN "ferros" ; mkN "grilhão" ; mkN "grilhetas" ; mkN "grilhões" ; mkN "peia" ; } ; --*
lin fetter_V2 = variants {mkV2 (mkV "acorrentar") ; mkV2 (mkV "agrilhoar") ; mkV2 (mkV "algemar") ; } ; --*
lin fetus_N = mkN "feto" ; --*
lin feudal_A = mkA "feudal" ; --*
lin feudalism_N = variants {mkN "Feudalismo" ; mkN "system" ; } ; --*
lin feudatory_2_A = mkA "feudal" ; --*
lin feudatory_N = variants {mkN "subject" ; mkN "Vassalagem" ; mkN "vassalo" ; } ; --*
lin fever_1_N = variants {mkN "febre" ; mkN "fèbre" ; } ; --*
lin fever_2_N = mkN "febre" ; --*
lin feverish_1_A = variants {mkA "agitado" ; mkA "febril" ; mkA "frenético" ; } ; --*
lin feverish_2_A = mkA "febril" ; --*
lin feverish_3_A = mkA "frenético" ; --*
lin few_N = mkN "poucos" ; --*
lin fez_1_N = mkN "Fez" ; --*
lin fez_2_N = variants {mkN "fez" ; mkN "tarbush" ; } ; --*
lin fiasco_N = variants {mkN "fiasco" ; mkN "malogro" ; } ; --*
lin fiat_N = variants {mkN "acta" ; mkN "decreto" ; } ; --*
lin fibber_N = mkN "mentiroso" ; --*
lin fiberglass_N = mkN "fibra" ; --*
lin fiberscope_N = mkN "fibroscópio" ; --*
lin fib_N = variants {mkN "conto" ; mkN "história" ; mkN "mentira" ; mkN "mentirinha" ; } ; --*
lin fibre_1_N = variants {mkN "fibra" ; mkN "fibras" ; mkN "thread" ; } ; --*
lin fibre_2_N = variants {mkN "fibra" ; mkN "fibras" ; } ; --*
lin fibre_3_N = variants {mkN "caráter" ; mkN "personalidade" ; } ; --*
lin fibre_4_N = variants {mkN "fiber" ; mkN "fibra" ; mkN "fibras" ; } ; --*
lin fibre_5_N = mkN "fibra" ; --*
lin fibreglass_N = mkN "fibra" ; --*
lin fibrillation_1_N = mkN "fibrilação" ; --*
lin fibril_N = mkN "filamento" ; --*
lin fibrin_N = mkN "fibrina" ; --*
lin fibrinogen_N = variants {mkN "fibrinogênio" ; mkN "I" ; } ; --*
lin fibrinolysis_N = variants {mkN "fibrinólise" ; mkN "fibrinolítico" ; } ; --*
lin fibroadenoma_N = variants {mkN "fibroadenoma" ; mkN "Fibroadenoma" ; } ; --*
lin fibroblast_N = mkN "fibroblasto" ; --*
lin fibrocartilage_N = mkN "Cartilagem" ; --*
lin fibroma_N = variants {mkN "fibroma" ; mkN "Fibroma" ; } ; --*
lin fibrosis_N = variants {mkN "fibrose" ; mkN "Fibrose" ; } ; --*
lin fibrous_1_A = mkA "fibroso" ; --*
lin fibula_N = variants {mkN "bone" ; mkN "fíbula" ; } ; --*
lin fib_V = mkV "mentir" ; --*
lin fickle_1_A = variants {mkA "caprichoso" ; mkA "instável" ; mkA "volátil" ; mkA "volúvel" ; } ; --*
lin fickle_2_A = variants {mkA "instável" ; mkA "volúvel" ; } ; --*
lin fickleness_N = mkN "inconstância" ; --*
lin fictile_2_A = mkA "moldável" ; --*
lin fiction_1_N = variants {mkN "ficção" ; mkN "Ficção" ; mkN "ficcionismo" ; mkN "literatura" ; } ; --*
lin fiction_2_N = variants {mkN "ficção" ; mkN "fingimento" ; mkN "invenção" ; mkN "invencionice" ; } ; --*
lin fictional_1_A = mkA "fictício" ; --*
lin fictional_2_A = mkA "fictício" ; --*
lin fictitious_1_A = mkA "fictício" ; --*
lin fictitious_2_A = variants {mkA "assumido" ; mkA "fictício" ; mkA "on" ; mkA "pretendido" ; } ; --*
lin fictive_1_A = variants {mkA "assumido" ; mkA "fictício" ; mkA "on" ; mkA "pretendido" ; } ; --*
lin fiddle_1_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "from") ; } ; --*
lin fiddle_5_V2 = mkV2 (mkV "brincar") ; --*
lin fiddle_N = variants {mkN "embuste" ; mkN "fiddle" ; mkN "violino" ; } ; --*
lin fiddler_1_N = mkN "violinista" ; --*
lin fidelity_1_N = mkN "fidelidade" ; --*
lin fidelity_2_N = variants {mkN "fidelidade" ; mkN "lealdade" ; } ; --*
lin fidget_V = mkV "mexer" ; --*
lin fidgety_A = mkA "nervoso" ; --*
lin fiduciary_N = mkN "fiduciário" ; --*
lin fief_N = mkN "feudo" ; --*
lin field_10_N = mkN "corpo" ; --*
lin field_11_N = variants {mkN "campo" ; mkN "of" ; mkN "teatro" ; } ; --*
lin field_14_N = mkN "campo" ; --*
lin field_16_N = variants {mkN "campo" ; mkN "of" ; } ; --*
lin field_17_N = variants {mkN "aeródromo" ; mkN "aeroporto" ; mkN "field" ; } ; --*
lin field_1_N = variants {mkN "campo" ; mkN "campos" ; mkN "terreno" ; } ; --*
lin field_2_N = variants {mkN "campo" ; mkN "of" ; } ; --*
lin field_3_V2 = mkV2 (mkV "responder") ; --*
lin field_4_N = variants {mkN "area" ; mkN "campo" ; mkN "disciplina" ; mkN "domínio" ; mkN "field" ; mkN "of" ; mkN "terreno" ; } ; --*
lin field_4_V2 = mkV2 (mkV "posicionar") ; --*
lin field_5_N = variants {mkN "campo" ; mkN "field" ; mkN "of" ; } ; --*
lin field_6_N = variants {mkN "campo" ; mkN "of" ; } ; --*
lin field_7_N = variants {mkN "domínio" ; mkN "esfera" ; } ; --*
lin field_8_N = variants {mkN "area" ; mkN "campo" ; mkN "field" ; } ; --*
lin field_9_N = variants {mkN "campanha" ; mkN "planície" ; } ; --*
lin field_hospital_N = mkN "hospital" ; --*
lin fielding_2_N = variants {mkN "Fielding" ; mkN "Henry" ; } ; --*
lin fiend_1_N = variants {mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; mkN "monstro" ; mkN "ogro" ; } ; --*
lin fiend_2_N = variants {mkN "cão" ; mkN "capeta" ; mkN "demo" ; mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; } ; --*
lin fiend_3_N = variants {mkN "fanática" ; mkN "fanático" ; } ; --*
lin fiendish_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin fierce_1_A = variants {mkA "bravo" ; mkA "feroz" ; mkA "fulo" ; } ; --*
lin fierce_2_A = variants {mkA "feroz" ; mkA "veemente" ; mkA "violento" ; } ; --*
lin fierce_3_A = mkA "feroz" ; --*
lin fierceness_N = mkN "violência" ; --*
lin fiery_1_A = mkA "ardente" ; --*
lin fiery_2_A = mkA "ígneo" ; --*
lin fiesta_N = variants {mkN "banquete" ; mkN "festa" ; } ; --*
lin fife_N = variants {mkN "pífano" ; mkN "Pifaro" ; mkN "Pífaro" ; } ; --*
lin fig_1_N = mkN "figueira" ; --*
lin fig_2_N = variants {mkN "carica" ; mkN "fig" ; mkN "Figo" ; } ; --*
lin fig_4_N = mkN "figo" ; --*
lin fight_1_N = variants {mkN "batalha" ; mkN "combate" ; mkN "luta" ; } ; --*
lin fight_1_V2 = variants {mkV2 (mkV "brigar") ; mkV2 (mkV "debater-se") ; mkV2 (mkV "lutar") ; } ; --*
lin fight_2_N = variants {mkN "batalha" ; mkN "combate" ; mkN "disputa" ; mkN "luta" ; mkN "peleja" ; mkN "pugna" ; } ; --*
lin fight_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "brigar") ; mkV2 (mkV "down") ; mkV2 (mkV "lutar") ; mkV2 (mkV "opor") ; } ; --*
lin fight_3_N = mkN "competitividade" ; --*
lin fight_3_V = variants {mkV "batalhar" ; mkV "guerrear" ; mkV "lidar" ; mkV "pelejar" ; } ; --*
lin fight_4_V = variants {mkV "advogar" ; mkV "agitar" ; mkV "fazer" ; mkV "lutar" ; } ; --*
lin fight_5_N = variants {mkN "combate" ; mkN "luta" ; } ; --*
lin fight_back_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "brigar") ; mkV2 (mkV "down") ; mkV2 (mkV "lutar") ; mkV2 (mkV "opor") ; } ; --*
lin fight_back_V = mkV "back" ; --*
lin fighter_1_N = variants {mkN "combatente" ; mkN "guerreiro" ; mkN "lutador" ; mkN "lutadora" ; } ; --*
lin fighter_2_N = variants {mkN "aircraft" ; mkN "caça" ; } ; --*
lin fighter_3_N = variants {mkN "guerreiro" ; mkN "herói" ; mkN "paladino" ; } ; --*
lin fighting_N = variants {mkN "batalha" ; mkN "combate" ; mkN "disputa" ; mkN "luta" ; mkN "peleja" ; mkN "pugna" ; } ; --*
lin fight_off_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "repelir") ; } ; --*
lin figural_A = mkA "figurativo" ; --*
lin figurative_1_A = mkA "figurativo" ; --*
lin figurative_2_A = mkA "figurativo" ; --*
lin figure_10_N = variants {mkN "figura" ; mkN "metáfora" ; mkN "of" ; } ; --*
lin figure_12_N = mkN "ornamento" ; --*
lin figure_13_N = mkN "figura" ; --*
lin figure_1_N = mkN "figueira" ; --*
lin figure_1_V = variants {mkV "achar" ; mkV "avaliar" ; mkV "calcular" ; mkV "on" ; mkV "predizer" ; mkV "prever" ; mkV "prognosticar" ; } ; --*
lin figure_1_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "avaliar") ; mkVS (mkV "calcular") ; mkVS (mkV "on") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin figure_2_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin figure_2_V = variants {mkV "entrar" ; mkV "figurar" ; } ; --*
lin figure_3_N = variants {mkN "algarismo" ; mkN "dígito" ; mkN "número" ; } ; --*
lin figure_3_V = variants {mkV "afigurar" ; mkV "envisionar" ; mkV "figurar" ; mkV "ver" ; mkV "visualizar" ; } ; --*
lin figure_3_VS = variants {mkVS (mkV "afigurar") ; mkVS (mkV "envisionar") ; mkVS (mkV "figurar") ; mkVS (mkV "ver") ; mkVS (mkV "visualizar") ; } ; --*
lin figure_4_V = variants {mkV "calcular" ; mkV "computar" ; mkV "out" ; } ; --*
lin figure_4_VS = variants {mkVS (mkV "calcular") ; mkVS (mkV "computar") ; mkVS (mkV "out") ; } ; --*
lin figure_5_N = variants {mkN "figure" ; mkN "pessoa" ; } ; --*
lin figure_5_V = variants {mkV "compreender" ; mkV "perceber" ; } ; --*
lin figure_6_N = mkN "figura" ; --*
lin figure_7_N = variants {mkN "cifra" ; mkN "número" ; } ; --*
lin figure_9_N = mkN "número" ; --*
lin figurine_N = mkN "estatueta" ; --*
lin fijian_2_N = variants {mkN "fijiano" ; mkN "Língua" ; } ; --*
lin fijian_A = mkA "fijiano" ; --*
lin fiji_PN = variants {mkPN "Fidji" ; mkPN "Fiji" ; mkPN "of" ; } ; --*
lin filament_1_N = mkN "filamento" ; --*
lin filamentous_A = mkA "filiforme" ; --*
lin filaria_1_N = variants {mkN "cicutarium" ; mkN "clover" ; mkN "Erodium" ; mkN "grass" ; mkN "storksbill" ; } ; --*
lin filbert_1_N = variants {mkN "avelã" ; mkN "avellana" ; } ; --*
lin filbert_2_N = variants {mkN "avelã" ; mkN "Corylus" ; } ; --*
lin filch_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin file_1_N = variants {mkN "ficheiro" ; mkN "file" ; } ; --*
lin file_1_V2 = variants {mkV2 (mkV "protocolar") ; mkV2 (mkV "registrar") ; } ; --*
lin file_2_N = variants {mkN "filaúnica" ; mkN "file" ; } ; --*
lin file_2_V2 = mkV2 (mkV "lixar") ; --*
lin file_3_N = variants {mkN "cabinet" ; mkN "ficheiro" ; } ; --*
lin file_4_N = variants {mkN "lima" ; mkN "lixa" ; } ; --*
lin file_5_V2 = variants {mkV2 (mkV "arquivar") ; mkV2 (mkV "away") ; } ; --*
lin file_away_2_V2 = variants {mkV2 (mkV "arquivar") ; mkV2 (mkV "away") ; } ; --*
lin filefish_N = mkN "Monacanthidae" ; --*
lin file_for_V2 = variants {mkV2 (mkV "protocolar") ; mkV2 (mkV "registrar") ; } ; --*
lin filet_2_N = variants {mkN "filé" ; mkN "filet" ; mkN "fillet" ; } ; --*
lin filial_1_A = mkA "filial" ; --*
lin filial_2_A = mkA "filial" ; --*
lin filicide_1_N = mkN "filicida" ; --*
lin filigree_1_N = mkN "filigrana" ; --*
lin filipino_1_N = mkN "filipino" ; --*
lin fill_1_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "full") ; mkV2 (mkV "up") ; } ; --*
lin fill_2_V = variants {mkV "encher" ; mkV "up" ; } ; --*
lin fill_3_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "ocupar") ; } ; --*
lin fill_5_V2 = variants {mkV2 (mkV "satifazer") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "suprir") ; } ; --*
lin fill_7_V = variants {mkV "encher" ; mkV "up" ; } ; --*
lin fill_8_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "fartar") ; mkV2 (mkV "saciar") ; } ; --*
lin fill_9_V2 = mkV2 (mkV "rechear") ; --*
lin fillet_2_N = variants {mkN "filé" ; mkN "filet" ; mkN "fillet" ; } ; --*
lin fillet_2_V2 = mkV2 (mkV "filetar") ; --*
lin fill_in_2_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "sombrear") ; } ; --*
lin fill_in_2_V = variants {mkV "in" ; mkV "sombrear" ; } ; --*
lin fill_in_3_V = variants {mkV "fazer" ; mkV "in" ; mkV "substituir" ; } ; --*
lin fill_in_4_V2 = variants {mkV2 (mkV "encorpar") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin filling_3_N = mkN "enchimento" ; --*
lin fill_in_on_V3 = mkV3 (mkV "in") ; --*
lin fillip_N = variants {mkN "bonificação" ; mkN "bônus" ; mkN "peteleco" ; } ; --*
lin fill_out_1_V2 = variants {mkV2 (mkV "encorpar") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin fill_up_V = variants {mkV "encher" ; mkV "up" ; } ; --*
lin film_1_N = variants {mkN "cinema" ; mkN "filme" ; mkN "película" ; mkN "picture" ; mkN "produção" ; mkN "show" ; } ; --*
lin film_1_V2 = mkV2 (mkV "filmar") ; --*
lin film_2_N = variants {mkN "Chinês" ; mkN "cine" ; mkN "cinema" ; mkN "indústria" ; } ; --*
lin film_2_V2 = mkV2 (mkV "filmar") ; --*
lin film_3_N = variants {mkN "film" ; mkN "filme" ; mkN "Filme" ; } ; --*
lin film_4_N = mkN "filme" ; --*
lin filming_N = variants {mkN "Cinematografia" ; mkN "fotografia" ; mkN "photography" ; } ; --*
lin filmmaker_N = variants {mkN "cineasta" ; mkN "maker" ; mkN "producer" ; } ; --*
lin film_star_N = mkN "star" ; --*
lin filmy_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin filter_1_N = variants {mkN "filtração" ; mkN "filtros" ; mkN "Filtros" ; } ; --*
lin filter_1_V2 = variants {mkV2 (mkV "coar") ; mkV2 (mkV "filtrar") ; mkV2 (mkV "out") ; } ; --*
lin filter_2_N = mkN "filtros" ; --*
lin filter_3_V = mkV "correr" ; --*
lin filter_out_V2 = variants {mkV2 (mkV "coar") ; mkV2 (mkV "filtrar") ; mkV2 (mkV "out") ; } ; --*
lin filth_2_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin filth_4_N = variants {mkN "indecência" ; mkN "obscenidade" ; mkN "palavrão" ; mkN "vulgaridade" ; mkN "word" ; } ; --*
lin filthy_1_A = variants {mkA "imunda" ; mkA "sujo" ; } ; --*
lin filthy_2_A = mkA "sujo" ; --*
lin filthy_3_A = variants {mkA "obsceno" ; mkA "sujo" ; mkA "verde" ; } ; --*
lin filtrate_V2 = variants {mkV2 (mkV "coar") ; mkV2 (mkV "filtrar") ; mkV2 (mkV "out") ; } ; --*
lin filtration_1_N = mkN "filtração" ; --*
lin fimbria_N = mkN "fimbria" ; --*
lin fin_3_N = mkN "grelha" ; --*
lin fin_4_N = variants {mkN "barbatana" ; mkN "nadadeira" ; } ; --*
lin fin_6_N = variants {mkN "aleta" ; mkN "barbatana" ; } ; --*
lin finagle_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "obter") ; } ; --*
lin final_1_A = variants {mkA "final" ; mkA "último" ; } ; --*
lin final_2_A = mkA "final" ; --*
lin final_2_N = variants {mkN "exam" ; mkN "exame" ; mkN "examination" ; } ; --*
lin final_3_A = variants {mkA "definitivo" ; mkA "final" ; } ; --*
lin finale_1_N = mkN "Coda" ; --*
lin finale_2_N = variants {mkN "acabamento" ; mkN "conclusão" ; mkN "fim" ; mkN "final" ; mkN "point" ; } ; --*
lin finalist_N = mkN "finalista" ; --*
lin finalize_1_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "down") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin finally_1_Adv = variants {mkAdv "até" ; mkAdv "emfim" ; mkAdv "enfim" ; mkAdv "finalmente" ; mkAdv "mais" ; mkAdv "por" ; } ; --*
lin finally_2_Adv = variants {mkAdv "afinal" ; mkAdv "finalmente" ; mkAdv "last" ; mkAdv "long" ; mkAdv "the" ; mkAdv "ultimamente" ; } ; --*
lin finally_3_Adv = variants {mkAdv "conclusion" ; mkAdv "finalmente" ; mkAdv "por" ; } ; --*
lin finance_1_N = mkN "finança" ; --*
lin finance_1_V2 = mkV2 (mkV "financiar") ; --*
lin finance_2_V2 = mkV2 (mkV "financiar") ; --*
lin finance_3_N = mkN "finança" ; --*
lin financial_A = variants {mkA "financeiro" ; mkA "fiscal" ; mkA "tributário" ; } ; --*
lin financing_N = mkN "financiamento" ; --*
lin finback_N = variants {mkN "Baleia" ; mkN "physalus" ; mkN "rorqual" ; mkN "whale" ; } ; --*
lin finch_N = mkN "tentilhão" ; --*
lin find_10_V2V = variants {mkV2V (mkV "achar") ; mkV2V (mkV "encontrar") ; } ; --*
lin find_11_V2A = variants {mkV2A (mkV "declarar") ; mkV2A (mkV "julgar") ; } ; --*
lin find_12_V2 = variants {mkV2 (mkV "incorrer") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin find_14_V2 = variants {mkV2 (mkV "re-adquirir") ; mkV2 (mkV "reconquistar") ; mkV2 (mkV "recuperar") ; mkV2 (mkV "reganhar") ; } ; --*
lin find_15_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; } ; --*
lin find_16_V2 = variants {mkV2 (mkV "achar-se") ; mkV2 (mkV "oneself") ; } ; --*
lin find_1_N = variants {mkN "achado" ; mkN "descoberta" ; } ; --*
lin find_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "trombar") ; } ; --*
lin find_2_N = variants {mkN "descoberta" ; mkN "descobrimento" ; } ; --*
lin find_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "detectar") ; mkV2 (mkV "ver") ; } ; --*
lin find_3_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "reganhar") ; } ; --*
lin find_4_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "determinar") ; mkV2 (mkV "out") ; } ; --*
lin find_5_V2A = mkV2A (mkV "achar") ; --*
lin find_5_V2V = mkV2V (mkV "achar") ; --*
lin find_7_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "hold") ; mkV2 (mkV "up") ; } ; --*
lin find_8_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; } ; --*
lin finder_2_N = mkN "descobridor" ; --*
lin finder_3_N = variants {mkN "finder" ; mkN "mira" ; mkN "visor" ; } ; --*
lin finding_1_N = mkN "achado" ; --*
lin find_out_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "informar-se") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; mkV2 (mkV "wind") ; mkV2 (mkV "word") ; } ; --*
lin find_out_3_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin find_out_4_V2 = mkV2 (mkV "out") ; --*
lin find_VS = mkVS (mkV "descobrir") ; --*
lin fine_1_A = variants {mkA "bem" ; mkA "bom" ; mkA "right" ; } ; --*
lin fine_1_Adv = variants {mkAdv "bem" ; mkAdv "right" ; mkAdv "well" ; } ; --*
lin fine_5_A = mkA "fino" ; --*
lin fine_art_N = variants {mkN "art" ; mkN "arte" ; mkN "belas-artes" ; } ; --*
lin fine_N = variants {mkN "coimas" ; mkN "fiança" ; mkN "multa" ; mkN "Multa" ; } ; --*
lin fineness_4_N = variants {mkN "delicadeza" ; mkN "garbo" ; } ; --*
lin finesse_N = mkN "diplomacia" ; --*
lin fine_V2 = mkV2 (mkV "multar") ; --*
lin finger_1_N = variants {mkN "dedo" ; mkN "Dedo" ; } ; --*
lin finger_1_V2 = mkV2 (mkV "manusear") ; --*
lin finger_2_N = variants {mkN "breadth" ; mkN "dedo" ; } ; --*
lin finger_4_V2 = mkV2 (mkV "apontar") ; --*
lin fingering_1_N = variants {mkN "dedilhação" ; mkN "dedilhamento" ; mkN "digitação" ; } ; --*
lin fingernail_N = variants {mkN "unha" ; mkN "Unhas" ; } ; --*
lin finger_plate_N = variants {mkN "escudo" ; mkN "plate" ; } ; --*
lin fingerprint_1_N = mkN "impressão" ; --*
lin fingertip_N = mkN "ponta" ; --*
lin finial_N = variants {mkN "florão" ; mkN "Florão" ; } ; --*
lin finical_A = variants {mkA "detalhista" ; mkA "exigente" ; } ; --*
lin finicky_A = variants {mkA "detalhista" ; mkA "exigente" ; } ; --*
lin finis_1_N = variants {mkN "acabamento" ; mkN "conclusão" ; mkN "fim" ; mkN "final" ; mkN "point" ; } ; --*
lin finish_1_N = mkN "retoque" ; --*
lin finish_1_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "encerrar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin finish_2_N = variants {mkN "acabamento" ; mkN "conclusão" ; mkN "fim" ; mkN "final" ; mkN "point" ; } ; --*
lin finish_2_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "up") ; } ; --*
lin finish_3_N = mkN "refinamento" ; --*
lin finish_3_V = variants {mkV "acabar" ; mkV "cessar" ; mkV "encerrar" ; mkV "finalizar" ; mkV "parar" ; mkV "terminar" ; } ; --*
lin finish_4_N = mkN "destino" ; --*
lin finish_5_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin finish_6_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin finish_7_N = variants {mkN "chegada" ; mkN "conclusão" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin finished_1_A = variants {mkA "acabado" ; mkA "finalizado" ; mkA "terminado" ; } ; --*
lin finished_2_A = variants {mkA "acabado" ; mkA "finalizado" ; mkA "terminado" ; } ; --*
lin finished_5_A = mkA "ruim" ; --*
lin finish_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin finish_up_1_V = variants {mkV "off" ; mkV "through" ; mkV "up" ; } ; --*
lin finite_1_A = variants {mkA "finito" ; mkA "limitado" ; } ; --*
lin finite_2_A = mkA "finito" ; --*
lin finiteness_N = mkN "finitude" ; --*
lin finland_PN = variants {mkPN "Finlândia" ; mkPN "of" ; } ; --*
lin finnish_A = variants {mkA "finense" ; mkA "finês" ; mkA "finlandês" ; mkA "fino" ; } ; --*
lin finnishFem_N = mkN "finlandês" ; --*
lin finnishMasc_N = mkN "finlandês" ; --*
lin fiord_N = variants {mkN "fiorde" ; mkN "Fiordes" ; } ; --*
lin fir_1_N = mkN "pinheiro" ; --*
lin fir_2_N = variants {mkN "abeto" ; mkN "fir" ; mkN "tree" ; } ; --*
lin fire_1_N = variants {mkN "fogo" ; mkN "incêndio" ; } ; --*
lin fire_1_V = variants {mkV "disparar" ; mkV "fire" ; } ; --*
lin fire_2_N = mkN "tiro" ; --*
lin fire_2_V2 = mkV2 (mkV "atirar") ; --*
lin fire_3_N = variants {mkN "chama" ; mkN "flama" ; mkN "fogo" ; mkN "labareda" ; } ; --*
lin fire_3_V2 = mkV2 (mkV "assar") ; --*
lin fire_4_N = variants {mkN "chaminé" ; mkN "fogo" ; mkN "Fogo" ; } ; --*
lin fire_4_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "demitir") ; mkV2 (mkV "despedir") ; mkV2 (mkV "destituir") ; mkV2 (mkV "notice") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; } ; --*
lin fire_5_N = mkN "fogo" ; --*
lin fire_6_N = variants {mkN "fervor" ; mkN "zelo" ; } ; --*
lin fire_7_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin fire_8_V2 = variants {mkV2 (mkV "arder") ; mkV2 (mkV "down") ; } ; --*
lin fire_9_N = variants {mkN "ataque" ; mkN "fogo" ; } ; --*
lin firearm_N = mkN "arma" ; --*
lin firebird_2_N = variants {mkN "bird" ; mkN "Corrupião" ; mkN "corrupião-de-baltimore" ; mkN "galbula" ; mkN "oriole" ; } ; --*
lin firebomb_N = variants {mkN "bomb" ; mkN "bomba" ; } ; --*
lin firebox_N = variants {mkN "braseiro" ; mkN "fogão" ; mkN "fornalha" ; } ; --*
lin firebug_1_N = mkN "incendiário" ; --*
lin firecracker_N = variants {mkN "panchão" ; mkN "Panchão" ; } ; --*
lin firedamp_N = mkN "Grisu" ; --*
lin fire_eater_1_N = variants {mkN "bombeira" ; mkN "Bombeiro" ; mkN "Bombeiros" ; mkN "fighter" ; } ; --*
lin fire_engine_N = variants {mkN "engine" ; mkN "truck" ; } ; --*
lin fire_escape_N = variants {mkN "escape" ; mkN "exit" ; } ; --*
lin fire_extinguisher_N = variants {mkN "extinguisher" ; mkN "extintor" ; } ; --*
lin fire_fighter_1_N = variants {mkN "bombeira" ; mkN "Bombeiro" ; mkN "Bombeiros" ; mkN "fighter" ; } ; --*
lin firefly_1_N = variants {mkN "beetle" ; mkN "noctiluca" ; mkN "pirilampo" ; } ; --*
lin firefly_2_N = variants {mkN "bug" ; mkN "pirilampo" ; } ; --*
lin fireguard_2_N = variants {mkN "Guarda-fogo" ; mkN "screen" ; } ; --*
lin fireman_2_N = mkN "fogueiro" ; --*
lin fireman_4_N = variants {mkN "bombeira" ; mkN "Bombeiro" ; mkN "Bombeiros" ; mkN "fighter" ; } ; --*
lin firenze_PN = variants {mkPN "Firenze" ; mkPN "Florença" ; } ; --*
lin fireplace_N = variants {mkN "chaminé" ; mkN "fireplace" ; mkN "lareira" ; } ; --*
lin fireplug_N = variants {mkN "hidrante" ; mkN "hydrant" ; } ; --*
lin fire_raising_N = variants {mkN "fogo" ; mkN "incêndio" ; } ; --*
lin fireside_2_N = variants {mkN "chaminé" ; mkN "Fogão" ; mkN "lar" ; } ; --*
lin firewall_1_N = variants {mkN "firewall" ; mkN "parede" ; } ; --*
lin firewall_2_N = variants {mkN "firewall" ; mkN "Firewall" ; } ; --*
lin firewood_N = variants {mkN "cozedura" ; mkN "lenha" ; } ; --*
lin firework_N = variants {mkN "fogo" ; mkN "foguete" ; } ; --*
lin firing_1_N = mkN "tiro" ; --*
lin firing_3_N = variants {mkN "ignição" ; mkN "inflamação" ; mkN "Inflamações" ; } ; --*
lin firing_4_N = mkN "demissão" ; --*
lin firing_party_N = variants {mkN "party" ; mkN "squad" ; } ; --*
lin firing_squad_N = variants {mkN "party" ; mkN "squad" ; } ; --*
lin firm_10_A = mkA "fiel" ; --*
lin firm_3_A = variants {mkA "firme" ; mkA "forte" ; } ; --*
lin firm_5_A = mkA "firme" ; --*
lin firm_9_A = variants {mkA "firme" ; mkA "seguro" ; } ; --*
lin firm_Adv = variants {mkAdv "com" ; mkAdv "firmemente" ; mkAdv "sem" ; } ; --*
lin firmamental_A = mkA "firmamental" ; --*
lin firmament_N = variants {mkN "céu" ; mkN "esfera" ; mkN "firmamento" ; mkN "of" ; mkN "sphere" ; } ; --*
lin firm_N = variants {mkN "empresas" ; mkN "firm" ; } ; --*
lin firmness_1_N = mkN "correção" ; --*
lin firmness_2_N = variants {mkN "firmeza" ; mkN "of" ; } ; --*
lin firmness_4_N = mkN "firmeza" ; --*
lin firmware_N = mkN "firmware" ; --*
lin first_1_Adv = variants {mkAdv "antes" ; mkAdv "ao" ; mkAdv "of" ; mkAdv "off" ; mkAdv "primeiro" ; } ; --*
lin first_2_AdV = variants {mkAdV "pela" ; mkAdV "the" ; } ; --*
lin firstborn_N = variants {mkN "filho" ; mkN "primeiro" ; mkN "primogênita" ; mkN "primogênito" ; } ; --*
lin first_class_A = variants {mkA "brilhante" ; mkA "excelente" ; mkA "fabuloso" ; mkA "magnífico" ; } ; --*
lin first_hand_A = mkA "de" ; --*
lin firstly_Adv = variants {mkAdv "antes" ; mkAdv "ao" ; mkAdv "of" ; mkAdv "off" ; mkAdv "primeiro" ; } ; --*
lin firth_1_N = variants {mkN "J." ; mkN "R." ; mkN "Rupert" ; } ; --*
lin fiscal_A = variants {mkA "financeiro" ; mkA "fiscal" ; mkA "tributário" ; } ; --*
lin fish_1_N = variants {mkN "cardume" ; mkN "peixe" ; } ; --*
lin fish_2_N = variants {mkN "carne" ; mkN "peixe" ; } ; --*
lin fish_4_N = variants {mkN "Peixes" ; mkN "Pisces" ; mkN "the" ; } ; --*
lin fisher_1_N = mkN "pescador" ; --*
lin fisherman_N = mkN "pescador" ; --*
lin fishery_N = variants {mkN "indústria" ; mkN "pescaria" ; } ; --*
lin fish_hook_N = mkN "anzol" ; --*
lin fishing_1_N = variants {mkN "pesca" ; mkN "Pesca" ; mkN "pescas" ; } ; --*
lin fishing_2_N = variants {mkN "pesca" ; mkN "pescas" ; } ; --*
lin fishing_line_N = mkN "line" ; --*
lin fishing_rod_N = variants {mkN "pole" ; mkN "rod" ; } ; --*
lin fishnet_N = variants {mkN "net" ; mkN "rede" ; } ; --*
lin fishplate_N = mkN "eclissa" ; --*
lin fish_V = variants {mkV "catar" ; mkV "pescar" ; } ; --*
lin fishy_2_A = variants {mkA "desconfiado" ; mkA "duvidoso" ; mkA "suspeito" ; } ; --*
lin fission_2_N = variants {mkN "fissão" ; mkN "fission" ; } ; --*
lin fissure_1_N = variants {mkN "abertura" ; mkN "fenda" ; mkN "fissura" ; } ; --*
lin fissure_2_N = variants {mkN "fenda" ; mkN "fissura" ; mkN "fresta" ; mkN "greta" ; mkN "racha" ; } ; --*
lin fissure_3_N = mkN "fissura" ; --*
lin fist_N = variants {mkN "fist" ; mkN "punho" ; } ; --*
lin fistula_2_N = variants {mkN "fístula" ; mkN "Fístula" ; } ; --*
lin fit_1_A = variants {mkA "adequado" ; mkA "capaz" ; } ; --*
lin fit_1_N = variants {mkN "birra" ; mkN "cena" ; mkN "chilique" ; mkN "piti" ; } ; --*
lin fit_1_V2 = mkV2 (mkV "acomodar") ; --*
lin fit_2_N = variants {mkN "convulsão" ; mkN "crise" ; mkN "paroxismo" ; } ; --*
lin fit_2_V = mkV "caber" ; --*
lin fit_3_A = variants {mkA "em" ; mkA "saudável" ; } ; --*
lin fit_3_N = variants {mkN "caimento" ; mkN "corte" ; mkN "feitio" ; } ; --*
lin fit_3_V2 = mkV2 (mkV "acomodar") ; --*
lin fit_4_N = mkN "ataque" ; --*
lin fit_4_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "encaixar") ; mkV2 (mkV "pôr") ; } ; --*
lin fit_5_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "concordar") ; mkV2 (mkV "corresponder") ; } ; --*
lin fit_5_V = variants {mkV "combinar" ; mkV "concordar" ; mkV "corresponder" ; } ; --*
lin fit_6_V = variants {mkV "caber" ; mkV "ficar" ; mkV "servir" ; } ; --*
lin fit_7_V2 = variants {mkV2 (mkV "apetrechar") ; mkV2 (mkV "equipar") ; mkV2 (mkV "out") ; mkV2 (mkV "suprir") ; } ; --*
lin fit_8_V2 = variants {mkV2 (mkV "satifazer") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "suprir") ; } ; --*
lin fit_9_V2 = mkV2 (mkV "combinar") ; --*
lin fit_in_V = variants {mkV "compatibilizar" ; mkV "concordar" ; mkV "estar" ; mkV "harmonizar" ; mkV "in" ; } ; --*
lin fitness_1_N = variants {mkN "adequação" ; mkN "idoneidade" ; } ; --*
lin fitness_2_N = variants {mkN "boa" ; mkN "fitness" ; } ; --*
lin fit_out_1_V2 = variants {mkV2 (mkV "apetrechar") ; mkV2 (mkV "equipar") ; mkV2 (mkV "out") ; mkV2 (mkV "suprir") ; } ; --*
lin fit_out_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vestir") ; } ; --*
lin fitter_A = mkA "mais" ; --*
lin fitting_1_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "conveniente" ; mkA "decoroso" ; mkA "il" ; } ; --*
lin fitting_1_N = mkN "ajustamento" ; --*
lin fitting_2_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "capaz" ; } ; --*
lin fitting_3_N = mkN "aparelhagem" ; --*
lin fitting_4_N = variants {mkN "on" ; mkN "teste" ; } ; --*
lin fivefold_1_A = variants {mkA "quíntupla" ; mkA "quíntuplo" ; } ; --*
lin fix_11_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "situar") ; } ; --*
lin fix_1_N = variants {mkN "dificuldade" ; mkN "merda" ; mkN "of" ; mkN "problema" ; } ; --*
lin fix_1_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "emendar") ; mkV2 (mkV "on") ; mkV2 (mkV "reparar") ; mkV2 (mkV "up") ; } ; --*
lin fix_2_V2 = variants {mkV2 (mkV "fixar") ; mkV2 (mkV "prender") ; } ; --*
lin fix_3_N = variants {mkN "conserto" ; mkN "reparação" ; mkN "reparo" ; } ; --*
lin fix_3_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "especificar") ; } ; --*
lin fix_4_V2 = variants {mkV2 (mkV "cozinhar") ; mkV2 (mkV "preparar") ; } ; --*
lin fix_5_N = mkN "localização" ; --*
lin fix_9_V2 = mkV2 (mkV "esterilizar") ; --*
lin fixation_1_N = variants {mkN "development" ; mkN "fixation" ; mkN "regressão" ; } ; --*
lin fixation_2_N = variants {mkN "idéia" ; mkN "obsessão" ; } ; --*
lin fixation_4_N = mkN "fixação" ; --*
lin fixed_1_A = variants {mkA "fixo" ; mkA "inváriavel" ; } ; --*
lin fixed_2_A = variants {mkA "fixo" ; mkA "rígido" ; } ; --*
lin fixed_3_A = variants {mkA "fixado" ; mkA "fixo" ; } ; --*
lin fixed_4_A = mkA "fixo" ; --*
lin fixedness_1_N = mkN "imobilidade" ; --*
lin fixer_4_N = variants {mkN "heroin" ; mkN "hydrochloride" ; mkN "metadona" ; } ; --*
lin fixings_1_N = variants {mkN "ingrediente" ; mkN "produtos" ; } ; --*
lin fixture_1_N = mkN "objeto" ; --*
lin fixture_4_N = variants {mkN "conserto" ; mkN "reparação" ; mkN "reparo" ; } ; --*
lin fix_up_1_V2 = mkV2 (mkV "up") ; --*
lin fix_up_2_V2 = variants {mkV2 (mkV "arranjar") ; mkV2 (mkV "up") ; } ; --*
lin fix_VV = variants {mkVV (mkV "aprontar") ; mkVV (mkV "preparar") ; mkVV (mkV "up") ; } ; --*
lin fizgig_1_N = variants {mkN "arpão" ; mkN "lança" ; } ; --*
lin fizz_V = variants {mkV "bubbles" ; mkV "espumar" ; mkV "espumejar" ; mkV "ferver" ; } ; --*
lin fjord_N = variants {mkN "fiorde" ; mkN "Fiordes" ; } ; --*
lin flabbergast_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "surpreender") ; } ; --*
lin flabby_A = variants {mkA "brando" ; mkA "flácido" ; mkA "fofo" ; mkA "frouxo" ; mkA "mole" ; } ; --*
lin flaccid_1_A = variants {mkA "flácido" ; mkA "fofo" ; mkA "mole" ; } ; --*
lin flaccid_2_A = variants {mkA "brando" ; mkA "flácido" ; mkA "fofo" ; mkA "frouxo" ; mkA "mole" ; } ; --*
lin flag_1_N = variants {mkN "bandeira" ; mkN "Bandeira" ; mkN "estandarte" ; mkN "pavilhão" ; mkN "pendão" ; } ; --*
lin flag_2_V2 = mkV2 (mkV "marcar") ; --*
lin flag_3_N = variants {mkN "íris" ; mkN "lily" ; } ; --*
lin flag_3_V2 = mkV2 (mkV "afundar") ; --*
lin flag_3_V = mkV "afundar" ; --*
lin flag_6_N = variants {mkN "laje" ; mkN "lousa" ; } ; --*
lin flagellate_N = variants {mkN "flagelado" ; mkN "protozoan" ; } ; --*
lin flagellate_V2 = mkV2 (mkV "flagelar") ; --*
lin flagellation_2_N = mkN "flagelação" ; --*
lin flagellum_1_N = variants {mkN "azorrague" ; mkN "Azorrague" ; } ; --*
lin flagellum_2_N = mkN "flagelo" ; --*
lin flageolet_1_N = mkN "feijão" ; --*
lin flageolet_2_N = variants {mkN "Chirimía" ; mkN "pipe" ; mkN "recorder" ; } ; --*
lin flagitious_1_A = variants {mkA "atroz" ; mkA "hediondo" ; mkA "monstruoso" ; } ; --*
lin flagitious_2_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "nefando" ; } ; --*
lin flagpole_2_N = mkN "mastro" ; --*
lin flagship_2_N = variants {mkN "capitânia" ; mkN "nau" ; mkN "navio-almirante" ; } ; --*
lin flagstaff_2_N = mkN "mastro" ; --*
lin flagstone_N = variants {mkN "laje" ; mkN "lousa" ; } ; --*
lin flail_1_V2 = mkV2 (mkV "surrar") ; --*
lin flail_N = mkN "mangual" ; --*
lin flair_1_N = variants {mkN "aptidão" ; mkN "dom" ; mkN "talento" ; } ; --*
lin flair_2_N = variants {mkN "elegância" ; mkN "estilo" ; } ; --*
lin flak_2_N = variants {mkN "ataque" ; mkN "fogo" ; } ; --*
lin flak_3_N = variants {mkN "ack-ack-ack" ; mkN "gun" ; } ; --*
lin flake_1_N = variants {mkN "floco" ; mkN "flocodeneve" ; } ; --*
lin flake_2_N = variants {mkN "excêntrico" ; mkN "geek" ; mkN "person" ; } ; --*
lin flake_3_N = mkN "apara" ; --*
lin flake_3_V = variants {mkV "cascar" ; mkV "off" ; } ; --*
lin flake_out_V = variants {mkV "asleep" ; mkV "off" ; mkV "out" ; } ; --*
lin flakiness_1_N = mkN "insanidade" ; --*
lin flaky_3_A = variants {mkA "bizarro" ; mkA "bizzaro" ; mkA "estranho" ; } ; --*
lin flambeau_N = mkN "tocha" ; --*
lin flamboyant_2_A = mkA "flamboaiã" ; --*
lin flame_1_V = mkV "arder" ; --*
lin flame_2_V = mkV "arder" ; --*
lin flame_N = variants {mkN "chama" ; mkN "flama" ; mkN "fogo" ; mkN "labareda" ; } ; --*
lin flamenco_1_N = mkN "dança" ; --*
lin flamenco_2_N = variants {mkN "dancing" ; mkN "flamenco" ; } ; --*
lin flameproof_A = mkA "à" ; --*
lin flamethrower_N = mkN "lança-chamas" ; --*
lin flame_up_1_V = variants {mkV "arder" ; mkV "up" ; } ; --*
lin flamingo_N = mkN "flamingo" ; --*
lin flammable_A = mkA "inflamável" ; --*
lin flange_N = mkN "flange" ; --*
lin flank_2_N = mkN "flanco" ; --*
lin flank_V2 = variants {mkV2 (mkV "flanquear") ; mkV2 (mkV "ladear") ; } ; --*
lin flank_V = variants {mkV "flanquear" ; mkV "ladear" ; } ; --*
lin flannel_1_N = variants {mkN "flanela" ; mkN "Flanela" ; } ; --*
lin flannel_3_N = mkN "gabardine" ; --*
lin flan_N = variants {mkN "ovosefarinha" ; mkN "tortadenata" ; } ; --*
lin flap_1_N = mkN "aba" ; --*
lin flap_1_V = mkV "bater" ; --*
lin flap_2_N = mkN "rebuliço" ; --*
lin flap_3_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; } ; --*
lin flap_4_V = variants {mkV "agitar" ; mkV "bater" ; } ; --*
lin flap_5_V2 = mkV2 (mkV "incomodar") ; --*
lin flap_5_V = mkV "incomodar" ; --*
lin flapjack_N = variants {mkN "bolo" ; mkN "cake" ; mkN "panqueca" ; } ; --*
lin flare_1_V = variants {mkV "arder" ; mkV "up" ; } ; --*
lin flare_3_N = mkN "sinal" ; --*
lin flare_3_V = mkV "arder" ; --*
lin flare_4_V = variants {mkV "chamejar" ; mkV "coruscar" ; mkV "open" ; mkV "out" ; mkV "up" ; } ; --*
lin flare_6_N = variants {mkN "Erupção" ; mkN "flare" ; } ; --*
lin flare_up_1_V = mkV "up" ; --*
lin flare_up_N = mkN "explosão" ; --*
lin flash_10_N = variants {mkN "bulb" ; mkN "flash" ; mkN "lamp" ; } ; --*
lin flash_1_V = variants {mkV "cintilar" ; mkV "piscar" ; } ; --*
lin flash_2_N = mkN "lampejo" ; --*
lin flash_3_V = variants {mkV "empavonar" ; mkV "off" ; mkV "ostentar" ; mkV "pavonear" ; mkV "pavonear-se" ; } ; --*
lin flash_5_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin flash_7_N = mkN "sinal" ; --*
lin flashback_1_N = mkN "Analepse" ; --*
lin flashbulb_1_N = variants {mkN "bulb" ; mkN "flash" ; mkN "lamp" ; } ; --*
lin flasher_1_N = mkN "exibicionista" ; --*
lin flashgun_N = variants {mkN "bulb" ; mkN "flash" ; mkN "lamp" ; } ; --*
lin flashlight_N = variants {mkN "lanterna" ; mkN "Lanterna" ; } ; --*
lin flashpoint_2_N = variants {mkN "ponto" ; mkN "spot" ; } ; --*
lin flashpoint_3_N = variants {mkN "point" ; mkN "Ponto" ; } ; --*
lin flashy_1_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin flashy_2_A = mkA "vistoso" ; --*
lin flask_1_N = variants {mkN "cantil" ; mkN "frasco" ; mkN "Frasco" ; } ; --*
lin flat_11_A = variants {mkA "monotônico" ; mkA "monótono" ; } ; --*
lin flat_12_A = mkA "plano" ; --*
lin flat_14_A = mkA "opaco" ; --*
lin flat_1_A = mkA "plano" ; --*
lin flat_1_N = variants {mkN "planície" ; mkN "planícies" ; } ; --*
lin flat_2_Adv = mkAdv "direto" ; --*
lin flat_3_A = variants {mkA "categórico" ; mkA "incondicional" ; } ; --*
lin flat_3_N = mkN "bemol" ; --*
lin flat_5_N = variants {mkN "pneu" ; mkN "tire" ; } ; --*
lin flat_7_N = mkN "apartamento" ; --*
lin flat_8_A = mkA "insípido" ; --*
lin flat_9_A = mkA "monótono" ; --*
lin flatfish_2_N = mkN "Pleuronectiformes" ; --*
lin flatness_5_N = mkN "letargia" ; --*
lin flats_N = mkN "sapatilha" ; --*
lin flatten_1_V2 = variants {mkV2 (mkV "achatar") ; mkV2 (mkV "aplainar") ; mkV2 (mkV "enxugar") ; } ; --*
lin flatten_2_V = variants {mkV "achatar" ; mkV "out" ; } ; --*
lin flatten_3_V2 = variants {mkV2 (mkV "baixar") ; mkV2 (mkV "cair") ; } ; --*
lin flatten_3_V = variants {mkV "baixar" ; mkV "cair" ; } ; --*
lin flatter_V2 = mkV2 (mkV "gabar") ; --*
lin flattery_N = variants {mkN "adulação" ; mkN "Adulação" ; mkN "bajulação" ; mkN "Bajulador" ; mkN "lisonja" ; } ; --*
lin flattop_2_N = variants {mkN "aircraft" ; mkN "carrier" ; mkN "porta-aviões" ; mkN "transportador" ; } ; --*
lin flatulence_1_N = variants {mkN "flatulência" ; mkN "peido" ; mkN "pum" ; } ; --*
lin flatulence_2_N = variants {mkN "flatulência" ; mkN "Flatulência" ; } ; --*
lin flatware_2_N = variants {mkN "prataria" ; mkN "Prataria" ; } ; --*
lin flatworm_N = variants {mkN "platelminto" ; mkN "platelmintos" ; mkN "Platyhelminthes" ; } ; --*
lin flaunt_V2 = variants {mkV2 (mkV "empavonar") ; mkV2 (mkV "off") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "pavonear") ; mkV2 (mkV "pavonear-se") ; } ; --*
lin flautist_N = variants {mkN "flautista" ; mkN "Flautistas" ; mkN "player" ; } ; --*
lin flavivirus_N = variants {mkN "Flavivirus" ; mkN "Flavivírus" ; } ; --*
lin flavonoid_N = variants {mkN "Flavonoide" ; mkN "Flavonóide" ; mkN "Flavonoides" ; } ; --*
lin flavour_1_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin flavour_1_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "condimentar") ; mkV2 (mkV "dar") ; mkV2 (mkV "temperar") ; } ; --*
lin flavour_2_N = mkN "sabor" ; --*
lin flavour_3_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin flavourer_1_N = variants {mkN "aromatizantes" ; mkN "condimento" ; mkN "tempero" ; } ; --*
lin flavouring_1_N = variants {mkN "aromatizantes" ; mkN "condimento" ; mkN "tempero" ; } ; --*
lin flavourless_1_A = mkA "insípido" ; --*
lin flaw_1_N = variants {mkN "defeito" ; mkN "erro" ; mkN "falha" ; mkN "Flaw" ; } ; --*
lin flaw_3_N = mkN "defeito" ; --*
lin flawless_A = mkA "perfeito" ; --*
lin flaw_V2 = variants {mkV2 (mkV "estragar") ; mkV2 (mkV "quebrar") ; } ; --*
lin flax_1_N = mkN "linho" ; --*
lin flax_2_N = mkN "linho" ; --*
lin flaxen_A = variants {mkA "arenoso" ; mkA "cor" ; } ; --*
lin flay_V2 = mkV2 (mkV "esfolar") ; --*
lin flea_N = variants {mkN "pulga" ; mkN "pulgas" ; mkN "Siphonaptera" ; } ; --*
lin flecainide_N = mkN "Flecainida" ; --*
lin fleck_1_N = mkN "apara" ; --*
lin fleck_2_N = mkN "mancha" ; --*
lin fleck_V2 = mkV2 (mkV "manchar") ; --*
lin fledgeling_1_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin fledgling_1_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin fleece_1_V2 = mkV2 (mkV "roubar") ; --*
lin fleece_4_N = mkN "lã" ; --*
lin fleeceable_A = variants {mkA "crédulo" ; mkA "ingénuo" ; } ; --*
lin fleet_1_N = mkN "frota" ; --*
lin fleet_1_PN = mkPN "frota" ; --*
lin fleet_2_N = mkN "frota" ; --*
lin fleet_2_PN = mkPN "frota" ; --*
lin fleet_3_N = mkN "frota" ; --*
lin fleet_3_PN = mkPN "frota" ; --*
lin fleet_4_N = mkN "frota" ; --*
lin fleet_4_PN = mkPN "frota" ; --*
lin fleet_A = mkA "rápido" ; --*
lin fleeting_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "fugaz" ; mkA "fugitivo" ; mkA "momentâneo" ; } ; --*
lin fleet_street_1_PN = mkPN "Street" ; --*
lin flee_V = variants {mkV "escapar" ; mkV "flight" ; mkV "fugir" ; } ; --*
lin flemish_2_N = variants {mkN "dialect" ; mkN "flamengo" ; } ; --*
lin flemish_A = mkA "flamengo" ; --*
lin flesh_1_N = mkN "carne" ; --*
lin flesh_2_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin flesh_3_N = variants {mkN "carne" ; mkN "polpa" ; mkN "Polpa" ; } ; --*
lin fleshiness_N = variants {mkN "corpulência" ; mkN "obesidade" ; mkN "Obesidade" ; } ; --*
lin fleshly_A = variants {mkA "carnal" ; mkA "sensual" ; } ; --*
lin flesh_out_V2 = variants {mkV2 (mkV "elaborar") ; mkV2 (mkV "elocubrar") ; mkV2 (mkV "expandir") ; mkV2 (mkV "expor") ; mkV2 (mkV "out") ; } ; --*
lin fleur_de_lis_1_N = variants {mkN "íris" ; mkN "lily" ; } ; --*
lin fleur_de_lis_2_N = mkN "flor-de-lis" ; --*
lin flex_1_V2 = mkV2 (mkV "flexionar") ; --*
lin flex_3_V2 = variants {mkV2 (mkV "curvar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "torcer") ; mkV2 (mkV "vergar") ; } ; --*
lin flex_4_V2 = variants {mkV2 (mkV "curvar") ; mkV2 (mkV "dobrar") ; } ; --*
lin flex_5_V2 = mkV2 (mkV "torcer") ; --*
lin flexibility_1_N = mkN "flexibilidade" ; --*
lin flexibility_2_N = variants {mkN "adaptabilidade" ; mkN "flexibilidade" ; } ; --*
lin flexible_1_A = mkA "flexível" ; --*
lin flexible_2_A = mkA "flexível" ; --*
lin flexible_3_A = variants {mkA "elástico" ; mkA "flexível" ; } ; --*
lin flexible_4_A = mkA "flexível" ; --*
lin flexible_5_A = mkA "flexível" ; --*
lin flexion_2_N = mkN "flexão" ; --*
lin flexure_2_N = mkN "dobra" ; --*
lin flick_1_V2 = variants {mkV2 (mkV "pestanejar") ; mkV2 (mkV "piscar") ; } ; --*
lin flick_3_N = variants {mkN "cinema" ; mkN "filme" ; mkN "película" ; mkN "picture" ; mkN "produção" ; mkN "show" ; } ; --*
lin flick_3_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "sacudir") ; } ; --*
lin flick_5_V2 = variants {mkV2 (mkV "cintilar") ; mkV2 (mkV "lucilar") ; mkV2 (mkV "titilar") ; } ; --*
lin flick_7_V2 = mkV2 (mkV "estalar") ; --*
lin flicker_1_N = mkN "fagulha" ; --*
lin flicker_1_V = mkV "bater" ; --*
lin flicker_2_V = variants {mkV "cintilar" ; mkV "lucilar" ; mkV "titilar" ; } ; --*
lin flicker_3_N = mkN "excitação" ; --*
lin flicker_3_V = variants {mkV "pestanejar" ; mkV "piscar" ; } ; --*
lin flier_2_N = variants {mkN "aeronauta" ; mkN "aviador" ; mkN "aviadora" ; mkN "aviatriz" ; mkN "piloto" ; mkN "piloto-aviador" ; } ; --*
lin flier_3_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin flight_2_N = variants {mkN "aviação" ; mkN "voo" ; } ; --*
lin flight_3_N = variants {mkN "lance" ; mkN "of" ; } ; --*
lin flight_3_V2 = mkV2 (mkV "emplumar") ; --*
lin flight_4_N = variants {mkN "escapada" ; mkN "escape" ; mkN "fuga" ; } ; --*
lin flight_5_N = mkN "esquadrilha" ; --*
lin flight_7_N = variants {mkN "trajectória" ; mkN "trajetória" ; } ; --*
lin flight_8_N = mkN "vôo" ; --*
lin flight_9_N = mkN "vôo" ; --*
lin flighty_1_A = mkA "leviano" ; --*
lin flighty_2_A = variants {mkA "assustado" ; mkA "nervoso" ; } ; --*
lin flinch_V = mkV "recuar" ; --*
lin flinders_1_N = variants {mkN "Flinders" ; mkN "Matthew" ; } ; --*
lin flinders_2_N = mkN "farpa" ; --*
lin fling_1_N = mkN "tentativa" ; --*
lin fling_1_V2 = variants {mkV2 (mkV "arremeter") ; mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin fling_2_V = variants {mkV "agitar" ; mkV "bater" ; mkV "jogar" ; } ; --*
lin fling_3_V = variants {mkV "gastar" ; mkV "indulgir" ; mkV "paparicar" ; } ; --*
lin fling_4_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin flint_1_N = variants {mkN "pederneira" ; mkN "sílex" ; } ; --*
lin flint_1_PN = variants {mkPN "pederneira" ; mkPN "sílex" ; } ; --*
lin flint_3_N = mkN "Flint" ; --*
lin flint_3_PN = mkPN "Flint" ; --*
lin flintstone_N = mkN "sílex" ; --*
lin flip_11_V2 = variants {mkV2 (mkV "alternar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin flip_11_V = variants {mkV "alternar" ; mkV "mudar" ; mkV "trocar" ; } ; --*
lin flip_1_V2 = mkV2 (mkV "tirar") ; --*
lin flip_2_V2 = mkV2 (mkV "ligar") ; --*
lin flip_4_V2 = mkV2 (mkV "virar") ; --*
lin flip_4_V = mkV "virar" ; --*
lin flip_5_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "sacudir") ; } ; --*
lin flip_6_N = mkN "lance" ; --*
lin flip_7_V2 = mkV2 (mkV "lançar") ; --*
lin flip_7_V = mkV "lançar" ; --*
lin flip_A = mkA "insolente" ; --*
lin flippant_A = mkA "frívolo" ; --*
lin flipper_1_N = variants {mkN "barbatana" ; mkN "nadadeira" ; } ; --*
lin flipper_2_N = mkN "barbatana" ; --*
lin flip_V3 = variants {mkV3 (mkV "arremessar") ; mkV3 (mkV "jogar") ; } ; --*
lin flirt_1_N = mkN "interesseira" ; --*
lin flirt_1_V = variants {mkV "passar" ; mkV "up" ; } ; --*
lin flirt_2_N = mkN "flerte" ; --*
lin flirt_2_V = variants {mkV "brincar" ; mkV "folgar" ; mkV "jogar" ; } ; --*
lin flirtation_N = mkN "flerte" ; --*
lin flit_1_N = mkN "dardo" ; --*
lin flit_V = variants {mkV "borboletear" ; mkV "esvoaçar" ; } ; --*
lin float_1_V = variants {mkV "adrift" ; mkV "nadar" ; mkV "vagar" ; } ; --*
lin float_2_V = variants {mkV "boiar" ; mkV "nadar" ; } ; --*
lin float_5_V = mkV "flutuar" ; --*
lin float_7_N = variants {mkN "bexiga" ; mkN "bladder" ; } ; --*
lin floatation_2_N = mkN "flotação" ; --*
lin flocculation_N = variants {mkN "coagulação-floculação" ; mkN "floculação" ; } ; --*
lin flocculent_A = mkA "lanoso" ; --*
lin flock_2_V2V = mkV2V (mkV "aglomerar") ; --*
lin flock_2_V = mkV "aglomerar" ; --*
lin flock_4_N = mkN "tropa" ; --*
lin flock_5_N = mkN "rebanho" ; --*
lin flock_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin floe_N = variants {mkN "floe" ; mkN "icebergue" ; } ; --*
lin flog_1_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin flog_2_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "bater") ; } ; --*
lin flogging_N = mkN "flagelação" ; --*
lin flood_1_N = variants {mkN "aluvião" ; mkN "cheia" ; mkN "dilúvio" ; mkN "enchente" ; mkN "inundação" ; mkN "temporal" ; } ; --*
lin flood_1_V2 = variants {mkV2 (mkV "alagar") ; mkV2 (mkV "encharcar") ; mkV2 (mkV "inundar") ; } ; --*
lin flood_2_N = mkN "dilúvio" ; --*
lin flood_2_V2 = mkV2 (mkV "inundar") ; --*
lin flood_4_N = variants {mkN "enchente" ; mkN "inundação" ; } ; --*
lin flood_5_N = variants {mkN "aluvião" ; mkN "Aluvião" ; mkN "inundação" ; } ; --*
lin floodgate_2_N = variants {mkN "Descarregador" ; mkN "gate" ; mkN "valve" ; } ; --*
lin flooding_N = variants {mkN "inundações" ; mkN "therapy" ; } ; --*
lin floodplain_1_N = variants {mkN "plain" ; mkN "Planície" ; } ; --*
lin floor_1_N = variants {mkN "assoalho" ; mkN "chão" ; mkN "pavimento" ; mkN "piso" ; } ; --*
lin floor_1_V2 = variants {mkV2 (mkV "aback") ; mkV2 (mkV "estarrecer") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "pasmar") ; } ; --*
lin floor_2_N = variants {mkN "andar" ; mkN "pavimento" ; mkN "piso" ; } ; --*
lin floor_4_N = variants {mkN "chão" ; mkN "terra" ; } ; --*
lin floor_6_N = mkN "fundo" ; --*
lin flooring_1_N = variants {mkN "assoalho" ; mkN "chão" ; mkN "pavimento" ; mkN "piso" ; } ; --*
lin floozie_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin floozy_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin flop_3_N = mkN "fracasso" ; --*
lin floppy_A = mkA "flexível" ; --*
lin flora_1_N = variants {mkN "coberto" ; mkN "flora" ; mkN "Vegetaçao" ; mkN "vegetação" ; mkN "Vegetação" ; } ; --*
lin flora_2_N = variants {mkN "flora" ; mkN "life" ; mkN "planta" ; } ; --*
lin floral_1_A = mkA "floral" ; --*
lin floral_2_A = mkA "floral" ; --*
lin floral_3_A = mkA "floral" ; --*
lin florence_1_PN = variants {mkPN "Firenze" ; mkPN "Florença" ; } ; --*
lin floriculture_N = variants {mkN "floricultura" ; mkN "gardening" ; } ; --*
lin florid_1_A = mkA "flamboaiã" ; --*
lin florida_PN = variants {mkPN "Florida" ; mkPN "Flórida" ; mkPN "State" ; } ; --*
lin florilegium_N = variants {mkN "antologia" ; mkN "coroadeflores" ; mkN "florilégio" ; } ; --*
lin florin_1_N = mkN "florim" ; --*
lin florin_2_N = variants {mkN "florim" ; mkN "florin" ; mkN "Guilder" ; } ; --*
lin florist_2_N = variants {mkN "florista" ; mkN "shop" ; mkN "store" ; } ; --*
lin floss_2_N = variants {mkN "fio" ; mkN "floss" ; } ; --*
lin flotation_2_N = mkN "flotação" ; --*
lin flotsam_N = mkN "destroços" ; --*
lin flounder_1_N = mkN "solha" ; --*
lin flour_1_V2 = mkV2 (mkV "enfarinhar") ; --*
lin flour_2_V2 = mkV2 (mkV "enfarinhar") ; --*
lin flourish_1_N = mkN "floresça" ; --*
lin flourish_1_V = mkV "vigorar" ; --*
lin flourish_2_V = variants {mkV "high" ; mkV "prosperar" ; } ; --*
lin flourish_3_V = variants {mkV "agitar" ; mkV "brandir" ; mkV "mexer" ; } ; --*
lin flourish_5_N = variants {mkN "charanga" ; mkN "fanfarra" ; } ; --*
lin flour_N = mkN "farinha" ; --*
lin flout_1_V2 = mkV2 (mkV "debochar") ; --*
lin flout_2_V2 = variants {mkV2 (mkV "vaiar") ; mkV2 (mkV "zombar") ; } ; --*
lin flow_1_N = mkN "fluxo" ; --*
lin flow_1_V = variants {mkV "escorrer" ; mkV "fluir" ; } ; --*
lin flow_2_N = variants {mkN "fluxo" ; mkN "of" ; mkN "rate" ; } ; --*
lin flow_2_V = variants {mkV "correr" ; mkV "fluir" ; mkV "manar" ; } ; --*
lin flow_4_N = mkN "fluxos" ; --*
lin flow_6_N = mkN "curso" ; --*
lin flow_7_N = variants {mkN "Menstruacao" ; mkN "menstruação" ; mkN "Menstruação" ; mkN "regras" ; } ; --*
lin flow_7_V = mkV "menstruar" ; --*
lin flowage_3_N = variants {mkN "aluvião" ; mkN "Aluvião" ; mkN "inundação" ; } ; --*
lin flower_1_N = mkN "flor" ; --*
lin flower_2_N = variants {mkN "flor" ; mkN "floração" ; mkN "florada" ; mkN "flores" ; mkN "Flores" ; } ; --*
lin flower_3_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin flowered_A = mkA "floral" ; --*
lin flowerpot_N = mkN "vaso" ; --*
lin flower_V = variants {mkV "desabrochar" ; mkV "florescer" ; mkV "florir" ; } ; --*
lin flowery_1_A = variants {mkA "florido" ; mkA "ornamentado" ; } ; --*
lin fluctuate_3_V = variants {mkV "flutuar" ; mkV "oscilar" ; } ; --*
lin fluctuation_2_N = variants {mkN "flutuação" ; mkN "mudança" ; mkN "variação" ; } ; --*
lin fluctuation_3_N = mkN "flutuação" ; --*
lin fluency_1_N = variants {mkN "eloquência" ; mkN "eloqüência" ; } ; --*
lin fluency_2_N = mkN "fluência" ; --*
lin fluency_3_N = mkN "volubilidade" ; --*
lin fluent_1_A = variants {mkA "fluente" ; mkA "fluido" ; } ; --*
lin fluent_2_A = variants {mkA "eloquente" ; mkA "eloqüente" ; mkA "expressivo" ; } ; --*
lin fluff_1_N = mkN "lanugem" ; --*
lin fluff_1_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin fluff_2_N = mkN "bagatela" ; --*
lin fluffy_A = variants {mkA "fofa" ; mkA "fofo" ; } ; --*
lin flugelhorn_1_N = mkN "fliscorne" ; --*
lin fluid_1_A = mkA "instável" ; --*
lin fluid_2_A = mkA "fluido" ; --*
lin fluid_2_N = variants {mkN "fluido" ; mkN "líqüido" ; } ; --*
lin fluid_3_A = variants {mkA "fluente" ; mkA "fluido" ; } ; --*
lin fluid_4_A = mkA "líquido" ; --*
lin fluidity_1_N = variants {mkN "fluidez" ; mkN "liquidez" ; } ; --*
lin fluidounce_2_N = variants {mkN "onça" ; mkN "ounce" ; } ; --*
lin fluidram_2_N = variants {mkN "drachm" ; mkN "dracma" ; mkN "dram" ; } ; --*
lin fluke_1_N = variants {mkN "fortune" ; mkN "luck" ; mkN "sorte" ; } ; --*
lin flummox_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin flu_N = variants {mkN "gripe" ; mkN "Gripe" ; mkN "influenza" ; } ; --*
lin flunk_V2 = variants {mkV2 (mkV "it") ; mkV2 (mkV "reprovar") ; } ; --*
lin flunk_V = variants {mkV "it" ; mkV "reprovar" ; } ; --*
lin fluorescein_1_N = variants {mkN "dye" ; mkN "Fluoresceina" ; mkN "fluoresceína" ; } ; --*
lin fluorescence_N = variants {mkN "Fluorescencia" ; mkN "fluorescência" ; } ; --*
lin fluorescent_1_A = mkA "fluorescente" ; --*
lin fluorescent_2_A = mkA "fluorescente" ; --*
lin fluoridation_N = mkN "fluorização" ; --*
lin fluoride_N = variants {mkN "fluoreto" ; mkN "Fluoretos" ; } ; --*
lin fluoridization_1_N = mkN "fluorização" ; --*
lin fluorine_N = variants {mkN "Fluor" ; mkN "flúor" ; mkN "number" ; } ; --*
lin fluorite_N = mkN "fluorita" ; --*
lin fluorocarbon_N = mkN "fluorocarbono" ; --*
lin fluoroscopy_N = variants {mkN "fluoroscopia" ; mkN "Fluoroscopia" ; } ; --*
lin fluoxetine_N = variants {mkN "fluoxetina" ; mkN "hydrocholoride" ; } ; --*
lin flurazepam_N = variants {mkN "Flurazepam" ; mkN "hydrochloride" ; } ; --*
lin flurry_1_N = mkN "freneticidade" ; --*
lin flurry_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "disconcertar") ; mkV2 (mkV "off") ; } ; --*
lin flush_1_A = variants {mkA "afluente" ; mkA "rico" ; } ; --*
lin flush_1_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin flush_1_V = variants {mkV "avermelhar" ; mkV "corar" ; mkV "enrubescer" ; mkV "rosar" ; mkV "ruborizar" ; } ; --*
lin flush_3_N = variants {mkN "flash" ; mkN "ondas" ; } ; --*
lin flush_4_N = mkN "flush" ; --*
lin flush_4_V2 = variants {mkV2 (mkV "nivelar") ; mkV2 (mkV "out") ; } ; --*
lin flush_5_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin flush_7_V2 = mkV2 (mkV "puxar") ; --*
lin fluster_1_V2 = mkV2 (mkV "confundir") ; --*
lin fluster_2_V2 = mkV2 (mkV "irritar") ; --*
lin flute_1_N = variants {mkN "flauta" ; mkN "Flauta" ; mkN "flute" ; } ; --*
lin flutist_N = variants {mkN "flautista" ; mkN "Flautistas" ; mkN "player" ; } ; --*
lin flutter_1_N = mkN "excitação" ; --*
lin flutter_1_V = variants {mkV "borboletear" ; mkV "esvoaçar" ; } ; --*
lin flutter_2_V = mkV "bater" ; --*
lin flutter_3_N = variants {mkN "bagunça" ; mkN "burly" ; mkN "comoção" ; mkN "confusão" ; mkN "zona" ; } ; --*
lin fluvial_A = mkA "fluvial" ; --*
lin flux_1_N = mkN "fluxo" ; --*
lin flux_2_N = mkN "fluxo" ; --*
lin flux_6_N = variants {mkN "campo" ; mkN "field" ; mkN "flux" ; } ; --*
lin flux_7_N = variants {mkN "density" ; mkN "fluxo" ; } ; --*
lin fly_10_V2 = mkV2 (mkV "flutuar") ; --*
lin fly_11_V = variants {mkV "escapar" ; mkV "flight" ; mkV "fugir" ; } ; --*
lin fly_12_V2 = mkV2 (mkV "atravessar") ; --*
lin fly_14_V = mkV "desaparecer" ; --*
lin fly_1_N = variants {mkN "Diptera" ; mkN "mosca" ; } ; --*
lin fly_1_V = mkV "voar" ; --*
lin fly_2_V = variants {mkV "correr" ; mkV "voar" ; } ; --*
lin fly_3_N = variants {mkN "braguilha" ; mkN "front" ; } ; --*
lin fly_3_V = variants {mkV "avionar" ; mkV "pilotar" ; mkV "viajar" ; } ; --*
lin fly_4_V2 = mkV2 (mkV "transportar") ; --*
lin fly_5_N = mkN "isca" ; --*
lin fly_9_V = mkV "voar" ; --*
lin flyaway_1_A = mkA "leviano" ; --*
lin flyblown_2_A = mkA "sórdido" ; --*
lin flycatcher_1_N = variants {mkN "flycatcher" ; mkN "Muscicapídeos" ; mkN "World" ; } ; --*
lin flycatcher_2_N = variants {mkN "bird" ; mkN "flycatcher" ; mkN "Tyrannidae" ; mkN "World" ; } ; --*
lin flyer_1_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin flyer_3_N = variants {mkN "aeronauta" ; mkN "aviador" ; mkN "aviadora" ; mkN "aviatriz" ; mkN "piloto" ; mkN "piloto-aviador" ; } ; --*
lin flying_bomb_N = variants {mkN "bomb" ; mkN "bomba" ; } ; --*
lin flying_fish_N = mkN "fish" ; --*
lin flying_fox_N = mkN "fox" ; --*
lin flyover_1_N = mkN "viaduto" ; --*
lin flyweight_2_N = mkN "peso" ; --*
lin flywheel_N = mkN "volante" ; --*
lin fm_1_N = variants {mkN "Modulação" ; mkN "modulation" ; } ; --*
lin fm_2_N = variants {mkN "Fermio" ; mkN "férmio" ; mkN "number" ; } ; --*
lin foal_N = mkN "potro" ; --*
lin foal_V = mkV "parir" ; --*
lin foam_1_N = mkN "espuma" ; --*
lin foam_2_N = mkN "espuma" ; --*
lin foam_V = variants {mkV "bubbles" ; mkV "espumar" ; mkV "espumejar" ; mkV "ferver" ; } ; --*
lin foamy_1_A = mkA "espumoso" ; --*
lin foamy_2_A = variants {mkA "borbulhante" ; mkA "espumoso" ; } ; --*
lin focal_1_A = mkA "focal" ; --*
lin focal_2_A = mkA "focal" ; --*
lin focalization_2_N = mkN "focalização" ; --*
lin focus_1_V = variants {mkV "centrar" ; mkV "concentrar" ; mkV "focar" ; } ; --*
lin focus_2_N = mkN "foco" ; --*
lin focus_2_V2 = mkV2 (mkV "focar") ; --*
lin focus_3_V2 = mkV2 (mkV "focalizar") ; --*
lin focus_3_V = mkV "focalizar" ; --*
lin focus_4_V = variants {mkV "enfocar" ; mkV "focalizar" ; } ; --*
lin focus_5_N = variants {mkN "acento" ; mkN "ênfase" ; } ; --*
lin focus_6_N = variants {mkN "foco" ; mkN "point" ; } ; --*
lin fodder_1_N = variants {mkN "bucha" ; mkN "fish" ; mkN "fodder" ; } ; --*
lin fodder_2_N = variants {mkN "forragem" ; mkN "forragens" ; } ; --*
lin foe_1_N = mkN "inimigo" ; --*
lin foe_2_N = variants {mkN "inimigo" ; mkN "opositor" ; } ; --*
lin foetal_A = mkA "fetal" ; --*
lin foetus_N = mkN "feto" ; --*
lin fog_1_N = variants {mkN "bruma" ; mkN "neblina" ; mkN "névoa" ; mkN "nevoeiro" ; } ; --*
lin fog_2_N = variants {mkN "neblina" ; mkN "nevoeiro" ; } ; --*
lin fog_3_N = variants {mkN "bruma" ; mkN "confusão" ; } ; --*
lin fogey_1_N = variants {mkN "fósseis" ; mkN "fóssil" ; } ; --*
lin foggy_3_A = mkA "nevoeirento" ; --*
lin foglamp_N = mkN "farol" ; --*
lin fog_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "over") ; } ; --*
lin foible_1_N = mkN "idiossincrasia" ; --*
lin foil_2_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin foil_4_N = mkN "transparência" ; --*
lin foil_5_N = mkN "florete" ; --*
lin foist_1_V2 = mkV2 (mkV "impingir") ; --*
lin foist_2_V2 = mkV2 (mkV "forçar") ; --*
lin fold_1_N = mkN "dobra" ; --*
lin fold_1_V2 = variants {mkV2 (mkV "dobrar") ; mkV2 (mkV "up") ; } ; --*
lin fold_2_N = mkN "congregação" ; --*
lin fold_3_N = mkN "dobra" ; --*
lin fold_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "fechar") ; mkV2 (mkV "up") ; } ; --*
lin fold_3_V = variants {mkV "down" ; mkV "fechar" ; mkV "up" ; } ; --*
lin fold_4_N = mkN "rebanho" ; --*
lin fold_5_V = variants {mkV "preguear" ; mkV "up" ; } ; --*
lin folder_1_N = variants {mkN "brochura" ; mkN "folheto" ; mkN "livreto" ; mkN "opúsculo" ; mkN "panfleto" ; } ; --*
lin folder_2_N = mkN "diretório" ; --*
lin folderol_N = variants {mkN "besteira" ; mkN "besteirol" ; mkN "folharada" ; } ; --*
lin fold_up_1_V2 = variants {mkV2 (mkV "dobrar") ; mkV2 (mkV "up") ; } ; --*
lin foliaceous_1_A = mkA "foliáceo" ; --*
lin foliage_1_N = variants {mkN "folha" ; mkN "folhagem" ; mkN "folhas" ; } ; --*
lin foliation_4_N = mkN "foliação" ; --*
lin foliation_5_N = mkN "folheação" ; --*
lin folio_1_N = variants {mkN "number" ; mkN "número" ; mkN "paginação" ; } ; --*
lin folio_2_N = variants {mkN "folha" ; mkN "folhas" ; } ; --*
lin folio_3_N = mkN "fólio" ; --*
lin folk_1_N = variants {mkN "gente" ; mkN "people" ; mkN "pessoal" ; mkN "povo" ; mkN "vulgo" ; } ; --*
lin folk_2_N = variants {mkN "gente" ; mkN "tribo" ; } ; --*
lin folk_3_N = variants {mkN "família" ; mkN "line" ; } ; --*
lin folk_4_N = variants {mkN "music" ; mkN "Música" ; } ; --*
lin folklore_N = variants {mkN "folclore" ; mkN "Folclore" ; } ; --*
lin folks_1_N = mkN "pais" ; --*
lin folks_2_N = variants {mkN "gente" ; mkN "people" ; mkN "pessoal" ; mkN "povo" ; mkN "vulgo" ; } ; --*
lin folktale_1_N = variants {mkN "folclore" ; mkN "tale" ; } ; --*
lin follicle_N = mkN "folículo" ; --*
lin follicular_A = mkA "folicular" ; --*
lin folliculitis_N = variants {mkN "foliculite" ; mkN "Foliculite" ; } ; --*
lin follow_12_V2 = variants {mkV2 (mkV "seguir") ; mkV2 (mkV "traçar") ; } ; --*
lin follow_13_V2 = variants {mkV2 (mkV "an") ; mkV2 (mkV "assistir") ; mkV2 (mkV "guardar") ; mkV2 (mkV "observar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "over") ; mkV2 (mkV "ver") ; } ; --*
lin follow_14_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "seguir") ; mkV2 (mkV "suceder") ; } ; --*
lin follow_15_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "along") ; } ; --*
lin follow_17_V = mkV "provir" ; --*
lin follow_18_V2 = mkV2 (mkV "seguir") ; --*
lin follow_1_V2 = mkV2 (mkV "seguir") ; --*
lin follow_22_V2 = mkV2 (mkV "perseguir") ; --*
lin follow_23_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin follow_23_V = variants {mkV "compreender" ; mkV "entender" ; } ; --*
lin follow_2_V2 = mkV2 (mkV "seguir") ; --*
lin follow_4_V2 = variants {mkV2 (mkV "along") ; mkV2 (mkV "seguir") ; } ; --*
lin follow_5_V2 = variants {mkV2 (mkV "acatar") ; mkV2 (mkV "by") ; mkV2 (mkV "seguir") ; } ; --*
lin follow_6_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "seguir") ; } ; --*
lin follow_9_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "adotar") ; } ; --*
lin follower_1_N = variants {mkN "caçador" ; mkN "seguidor" ; } ; --*
lin follower_2_N = mkN "perseguidor" ; --*
lin following_1_N = mkN "seguidores" ; --*
lin following_2_A = mkA "seguinte" ; --*
lin following_2_N = variants {mkN "caçada" ; mkN "perseguição" ; } ; --*
lin follow_up_1_N = mkN "acompanhamento" ; --*
lin follow_up_1_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin follow_up_2_N = variants {mkN "acompanhamento" ; mkN "continuação" ; } ; --*
lin follow_up_3_N = variants {mkN "acompanhamento" ; mkN "revisão" ; } ; --*
lin folly_1_N = mkN "bobeira" ; --*
lin folly_2_N = variants {mkN "burrice" ; mkN "estupidez" ; } ; --*
lin folly_3_N = variants {mkN "bobeira" ; mkN "loucura" ; mkN "maluquice" ; } ; --*
lin folly_4_N = variants {mkN "idiotice" ; mkN "tolice" ; } ; --*
lin foment_1_V2 = variants {mkV2 (mkV "fomentar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "up") ; } ; --*
lin fomentation_3_N = mkN "instigação" ; --*
lin fond_1_A = variants {mkA "afectuoso" ; mkA "afeiçoado" ; mkA "cálido" ; mkA "carinhoso" ; mkA "meigo" ; mkA "que" ; mkA "terno" ; } ; --*
lin fond_2_A = variants {mkA "afectuoso" ; mkA "afeiçoado" ; mkA "carinhoso" ; } ; --*
lin fond_4_A = mkA "carinho" ; --*
lin fondle_V2 = variants {mkV2 (mkV "acariciar") ; mkV2 (mkV "afagar") ; } ; --*
lin fondness_2_N = variants {mkN "afecção" ; mkN "afeição" ; mkN "afetividade" ; mkN "amor" ; mkN "apego" ; mkN "carinho" ; } ; --*
lin fondness_3_N = variants {mkN "afeição" ; mkN "amor" ; mkN "apego" ; } ; --*
lin fond_of_1_A2 = variants {mkA2 (mkA "afectuoso") noPrep ; mkA2 (mkA "afeiçoado") noPrep ; mkA2 (mkA "cálido") noPrep ; mkA2 (mkA "carinhoso") noPrep ; mkA2 (mkA "meigo") noPrep ; mkA2 (mkA "que") noPrep ; mkA2 (mkA "terno") noPrep ; } ; --*
lin fondue_2_N = mkN "fondue" ; --*
lin font_1_N = mkN "família" ; --*
lin font_2_N = variants {mkN "batistério" ; mkN "etiqueta" ; mkN "font" ; } ; --*
lin fontanelle_1_N = variants {mkN "fontanela" ; mkN "moleira" ; mkN "spot" ; } ; --*
lin food_1_N = variants {mkN "alimento" ; mkN "comida" ; mkN "nutriente" ; } ; --*
lin foodstuff_1_N = mkN "mantimento" ; --*
lin foodstuff_2_N = variants {mkN "alimento" ; mkN "product" ; } ; --*
lin fool_1_N = variants {mkN "bobo" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "tolo" ; } ; --*
lin fool_1_V2 = mkV2 (mkV "enganar") ; --*
lin fool_2_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin fool_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desperdiçar") ; } ; --*
lin fool_3_N = variants {mkN "bobo" ; mkN "bufão" ; mkN "fool" ; } ; --*
lin fool_about_V = variants {mkV "around" ; mkV "brincar" ; } ; --*
lin fool_around_1_V = variants {mkV "around" ; mkV "brincar" ; } ; --*
lin foolery_N = variants {mkN "idiotice" ; mkN "tolice" ; } ; --*
lin foolhardiness_N = mkN "descuido" ; --*
lin foolhardy_A = variants {mkA "Inconsequente" ; mkA "temerário" ; } ; --*
lin foolish_1_A = mkA "tolo" ; --*
lin foolish_2_A = mkA "estúpido" ; --*
lin foolishness_1_N = mkN "bobeira" ; --*
lin foolishness_2_N = variants {mkN "bobeira" ; mkN "loucura" ; mkN "maluquice" ; } ; --*
lin foolishness_3_N = variants {mkN "burrice" ; mkN "estupidez" ; } ; --*
lin foolproof_A = mkA "à" ; --*
lin foolscap_N = mkN "folha" ; --*
lin foot_10_N = variants {mkN "foot" ; mkN "pé" ; mkN "unit" ; } ; --*
lin foot_11_N = variants {mkN "pé" ; mkN "perna" ; } ; --*
lin foot_1_N = variants {mkN "foot" ; mkN "pé" ; } ; --*
lin foot_1_V2 = mkV2 (mkV "pagar") ; --*
lin foot_2_N = mkN "pé" ; --*
lin foot_3_N = mkN "pé" ; --*
lin foot_3_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "up") ; } ; --*
lin foot_3_V = variants {mkV "adicionar" ; mkV "up" ; } ; --*
lin foot_5_N = variants {mkN "alicerce" ; mkN "base" ; mkN "pé" ; } ; --*
lin foot_9_N = variants {mkN "infantaria" ; mkN "Infantaria" ; } ; --*
lin footage_1_N = mkN "metragem" ; --*
lin football_1_N = variants {mkN "futebol" ; mkN "game" ; } ; --*
lin football_2_N = variants {mkN "bola" ; mkN "futebol" ; } ; --*
lin footballer_N = variants {mkN "jogador" ; mkN "player" ; } ; --*
lin footbridge_N = variants {mkN "bridge" ; mkN "passarela" ; } ; --*
lin footedness_N = mkN "Switch" ; --*
lin footer_1_N = variants {mkN "pé" ; mkN "rodapé" ; mkN "texto" ; } ; --*
lin footer_2_N = variants {mkN "peão" ; mkN "pedestre" ; } ; --*
lin footer_3_N = variants {mkN "anotação" ; mkN "nota" ; mkN "Nota" ; } ; --*
lin foothold_1_N = mkN "Cabeça" ; --*
lin footing_1_N = mkN "termos" ; --*
lin footing_2_N = mkN "base" ; --*
lin footle_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "around") ; mkV2 (mkV "ficar") ; mkV2 (mkV "permanecer") ; } ; --*
lin footle_1_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin footmark_N = variants {mkN "gasto" ; mkN "pegada" ; } ; --*
lin footnote_N = variants {mkN "anotação" ; mkN "nota" ; mkN "Nota" ; } ; --*
lin footpath_N = variants {mkN "caminho" ; mkN "caminhos" ; mkN "senda" ; mkN "trilho" ; mkN "trilhos" ; } ; --*
lin footprint_1_N = variants {mkN "gasto" ; mkN "pegada" ; } ; --*
lin footstep_3_N = mkN "passo" ; --*
lin footwear_1_N = variants {mkN "calçado" ; mkN "sapato" ; } ; --*
lin footwear_2_N = variants {mkN "calçado" ; mkN "Calçados" ; } ; --*
lin fop_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin foppish_A = mkA "demasiado" ; --*
lin forage_1_N = variants {mkN "pasto" ; mkN "pastos" ; } ; --*
lin forage_2_N = mkN "coleta" ; --*
lin foraging_N = mkN "coleta" ; --*
lin foramen_N = mkN "forame" ; --*
lin foray_1_N = variants {mkN "ataque" ; mkN "batida" ; } ; --*
lin foray_1_V = variants {mkV "pilhar" ; mkV "roubar" ; mkV "saquear" ; } ; --*
lin foray_2_N = mkN "incursão" ; --*
lin forbear_2_V2 = mkV2 (mkV "resistir") ; --*
lin forbearance_1_N = variants {mkN "longanimidade" ; mkN "paciência" ; } ; --*
lin forbear_N = mkN "antepassado" ; --*
lin forbid_1_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin forbid_2_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "impossibilitar") ; mkV2 (mkV "obstar") ; } ; --*
lin forbidding_2_A = variants {mkA "ameaçador" ; mkA "ominoso" ; } ; --*
lin force_1_N = variants {mkN "força" ; mkN "poder" ; mkN "robustez" ; mkN "vigor" ; } ; --*
lin force_1_V2V = variants {mkV2V (mkV "compelir") ; mkV2V (mkV "forçar") ; mkV2V (mkV "obrigar") ; } ; --*
lin force_2_N = mkN "força" ; --*
lin force_2_V2 = variants {mkV2 (mkV "impelir") ; mkV2 (mkV "impulsionar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "tocar") ; } ; --*
lin force_2_V2V = variants {mkV2V (mkV "impelir") ; mkV2V (mkV "impulsionar") ; mkV2V (mkV "incitar") ; mkV2V (mkV "tocar") ; } ; --*
lin force_2_V = variants {mkV "impelir" ; mkV "impulsionar" ; mkV "incitar" ; mkV "tocar" ; } ; --*
lin force_2_VS = variants {mkVS (mkV "impelir") ; mkVS (mkV "impulsionar") ; mkVS (mkV "incitar") ; mkVS (mkV "tocar") ; } ; --*
lin force_3_N = variants {mkN "força" ; mkN "violência" ; } ; --*
lin force_3_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "forçar") ; } ; --*
lin force_5_N = variants {mkN "exército" ; mkN "force" ; mkN "group" ; mkN "unit" ; } ; --*
lin force_6_N = variants {mkN "força" ; mkN "violência" ; } ; --*
lin force_7_N = variants {mkN "força" ; mkN "poder" ; } ; --*
lin force_7_V2 = mkV2 (mkV "forçar") ; --*
lin force_feed_V2 = mkV2 (mkV "forçar") ; --*
lin forceful_2_A = variants {mkA "enérgico" ; mkA "enfático" ; } ; --*
lin forcefulness_N = variants {mkN "força" ; mkN "violência" ; } ; --*
lin forceless_A = mkA "sem" ; --*
lin force_majeure_N = variants {mkN "accident" ; mkN "casualty" ; mkN "majeure" ; mkN "major" ; mkN "of" ; } ; --*
lin force_out_2_V = variants {mkV "away" ; mkV "demitir" ; mkV "despedir" ; mkV "destituir" ; mkV "notice" ; mkV "out" ; mkV "the" ; } ; --*
lin force_out_3_V = variants {mkV "empurrar" ; mkV "out" ; } ; --*
lin force_out_5_V = variants {mkV "desalojar" ; mkV "out" ; mkV "remover" ; } ; --*
lin force_out_6_V = variants {mkV "fazer" ; mkV "out" ; } ; --*
lin forceps_N = mkN "fórceps" ; --*
lin ford_1_N = variants {mkN "Ford" ; mkN "John" ; } ; --*
lin ford_2_N = variants {mkN "Ford" ; mkN "Henry" ; } ; --*
lin ford_4_N = variants {mkN "Ford" ; mkN "Hermann" ; mkN "Madox" ; } ; --*
lin ford_5_N = variants {mkN "Ford" ; mkN "Gerald" ; mkN "R." ; mkN "Rudolph" ; } ; --*
lin ford_6_N = mkN "Ford" ; --*
lin ford_7_N = mkN "vau" ; --*
lin ford_8_N = mkN "vau" ; --*
lin ford_V2 = mkV2 (mkV "atravessar") ; --*
lin forearm_N = variants {mkN "antebraço" ; mkN "Antebraço" ; mkN "Ante-braço" ; } ; --*
lin forebear_N = mkN "antepassado" ; --*
lin forebode_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin foreboding_1_N = mkN "pressentimento" ; --*
lin foreboding_2_N = mkN "mau" ; --*
lin forecast_1_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin forecast_1_V = variants {mkV "calcular" ; mkV "predizer" ; mkV "prever" ; mkV "prognosticar" ; } ; --*
lin forecast_1_VS = variants {mkVS (mkV "calcular") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin forecast_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "avaliar") ; mkV2 (mkV "calcular") ; mkV2 (mkV "on") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin forecast_2_V = variants {mkV "achar" ; mkV "avaliar" ; mkV "calcular" ; mkV "on" ; mkV "predizer" ; mkV "prever" ; mkV "prognosticar" ; } ; --*
lin forecast_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "avaliar") ; mkVS (mkV "calcular") ; mkVS (mkV "on") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin forecast_3_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin forecaster_N = variants {mkN "adivinha" ; mkN "adivinhão" ; mkN "adivinho" ; } ; --*
lin forecast_N = variants {mkN "previsão" ; mkN "prognose" ; mkN "prognóstico" ; } ; --*
lin foreclose_1_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "impossibilitar") ; mkV2 (mkV "obstar") ; } ; --*
lin foreclosure_N = mkN "execução" ; --*
lin forefather_1_N = mkN "antepassado" ; --*
lin forefinger_N = variants {mkN "dedo" ; mkN "finger" ; mkN "índex" ; mkN "indicador" ; } ; --*
lin forefront_2_N = variants {mkN "edge" ; mkN "primeiro" ; } ; --*
lin foregather_V = mkV "reunir" ; --*
lin forego_1_V2 = mkV2 (mkV "preceder") ; --*
lin forego_2_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "with") ; } ; --*
lin forego_3_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "overboard") ; mkV2 (mkV "perder") ; mkV2 (mkV "up") ; } ; --*
lin foreground_1_N = variants {mkN "anteprojeto" ; mkN "primeiro" ; } ; --*
lin forehand_N = variants {mkN "forehand" ; mkN "shot" ; mkN "stroke" ; } ; --*
lin forehead_1_N = mkN "testa" ; --*
lin forehead_2_N = variants {mkN "bone" ; mkN "frontale" ; mkN "Osso" ; } ; --*
lin foreign_1_A = variants {mkA "alienígena" ; mkA "estrangeiro" ; mkA "extrangeiro" ; } ; --*
lin foreign_2_A = variants {mkA "estrangeiro" ; mkA "estranho" ; } ; --*
lin foreign_3_A = mkA "alheio" ; --*
lin foreign_4_A = mkA "estranho" ; --*
lin foreigner_1_N = variants {mkN "estrangeira" ; mkN "estrangeiro" ; } ; --*
lin foreigner_2_N = variants {mkN "estrangeiro" ; mkN "forasteiro" ; mkN "marginal" ; } ; --*
lin foreknowledge_N = mkN "precognição" ; --*
lin foreknow_V2 = variants {mkV2 (mkV "antecipar") ; mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; } ; --*
lin foreknow_V = variants {mkV "antecipar" ; mkV "antever" ; mkV "prever" ; } ; --*
lin foreland_1_N = variants {mkN "cabeceiros" ; mkN "Cabo" ; mkN "Cabos" ; mkN "promontório" ; } ; --*
lin foreman_1_N = variants {mkN "chefe" ; mkN "supervisor" ; } ; --*
lin foreman_2_N = mkN "capataz" ; --*
lin foremost_2_Adv = variants {mkAdv "antes" ; mkAdv "ao" ; mkAdv "of" ; mkAdv "off" ; mkAdv "primeiro" ; } ; --*
lin forename_N = variants {mkN "apelido" ; mkN "name" ; mkN "nome" ; mkN "Nome" ; mkN "prenome" ; } ; --*
lin forenoon_N = variants {mkN "madrugada" ; mkN "manhã" ; mkN "time" ; } ; --*
lin fore_N = mkN "proa" ; --*
lin forensic_1_A = variants {mkA "forense" ; mkA "retórico" ; } ; --*
lin forensic_2_A = mkA "forense" ; --*
lin foreordain_1_V2 = mkV2 (mkV "predestinar") ; --*
lin foreordain_2_V2 = variants {mkV2 (mkV "predestinar") ; mkV2 (mkV "preordenar") ; } ; --*
lin foreplay_N = variants {mkN "estimulação" ; mkN "preliminares" ; } ; --*
lin forerunner_1_N = mkN "precursor" ; --*
lin foresee_1_V2 = variants {mkV2 (mkV "antecipar") ; mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; } ; --*
lin foresee_2_V2 = variants {mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; mkV2 (mkV "visionar") ; } ; --*
lin foresee_3_V2 = variants {mkV2 (mkV "antecipar") ; mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; } ; --*
lin foreseeable_A = mkA "previsível" ; --*
lin foreshadow_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin foreshorten_1_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin foresight_2_N = mkN "previsão" ; --*
lin foreskin_1_N = mkN "prepúcio" ; --*
lin foreskin_2_N = mkN "prepúcio" ; --*
lin forest_1_N = variants {mkN "bosque" ; mkN "floresta" ; mkN "mata" ; } ; --*
lin forest_2_N = variants {mkN "arvoredo" ; mkN "bosque" ; mkN "floresta" ; mkN "florestas" ; mkN "mata" ; mkN "selva" ; } ; --*
lin forestall_1_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "impossibilitar") ; mkV2 (mkV "obstar") ; } ; --*
lin forestall_2_V2 = variants {mkV2 (mkV "antecipar") ; mkV2 (mkV "antever") ; mkV2 (mkV "prever") ; } ; --*
lin forested_A = mkA "arborizado" ; --*
lin forester_1_N = variants {mkN "C.S." ; mkN "S." ; mkN "Scott" ; } ; --*
lin forestry_N = variants {mkN "Engenharia" ; mkN "Silvicultura" ; } ; --*
lin foreswear_1_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "with") ; } ; --*
lin foreswear_2_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "renunciar") ; } ; --*
lin foretell_1_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; } ; --*
lin foretell_2_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin foretell_3_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin forethought_2_N = variants {mkN "cautela" ; mkN "precaução" ; mkN "prudência" ; } ; --*
lin forever_1_Adv = mkAdv "eternamente" ; --*
lin forever_2_Adv = variants {mkAdv "and" ; mkAdv "eternamente" ; } ; --*
lin forever_3_Adv = variants {mkAdv "constantemente" ; mkAdv "continuamente" ; mkAdv "eternamente" ; mkAdv "incessantemente" ; mkAdv "perpetuamente" ; mkAdv "sempre" ; } ; --*
lin forewarn_V2 = mkV2 (mkV "advertir") ; --*
lin foreword_N = mkN "prefácio" ; --*
lin for_example_Adv = variants {mkAdv "como" ; mkAdv "ex." ; mkAdv "example" ; mkAdv "instance" ; } ; --*
lin forfeit_1_N = mkN "penalidade" ; --*
lin forfeit_3_N = variants {mkN "forfeit" ; mkN "perda" ; } ; --*
lin forfeiture_1_N = mkN "penalidade" ; --*
lin forfeiture_3_N = variants {mkN "forfeit" ; mkN "perda" ; } ; --*
lin forfeit_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "overboard") ; mkV2 (mkV "perder") ; mkV2 (mkV "up") ; } ; --*
lin forge_1_N = mkN "frágua" ; --*
lin forge_1_V2 = mkV2 (mkV "martelar") ; --*
lin forge_2_N = variants {mkN "forja" ; mkN "Forja" ; } ; --*
lin forge_2_V2 = variants {mkV2 (mkV "contrafazer") ; mkV2 (mkV "falsificar") ; } ; --*
lin forge_3_V2 = variants {mkV2 (mkV "forjar") ; mkV2 (mkV "formular") ; mkV2 (mkV "inventar") ; } ; --*
lin forge_6_V2 = variants {mkV2 (mkV "formar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "moldar") ; } ; --*
lin forgery_1_N = variants {mkN "coisa" ; mkN "contrafação" ; mkN "falsificação" ; mkN "forjar" ; mkN "moeda" ; } ; --*
lin forgery_2_N = mkN "falsificação" ; --*
lin forget_1_V2 = variants {mkV2 (mkV "enterrar") ; mkV2 (mkV "esqueça-se") ; mkV2 (mkV "esquecer") ; } ; --*
lin forget_1_V = variants {mkV "enterrar" ; mkV "esqueça-se" ; mkV "esquecer" ; } ; --*
lin forget_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "esquecer") ; mkV2 (mkV "out") ; } ; --*
lin forget_4_V2 = variants {mkV2 (mkV "esquecer") ; mkV2 (mkV "olvidar") ; } ; --*
lin forgetful_1_A = mkA "desconsiderado" ; --*
lin forgetful_2_A = mkA "insensível" ; --*
lin forgetful_3_A = variants {mkA "distraído" ; mkA "esquecido" ; } ; --*
lin forgetfulness_1_N = mkN "esquecimento" ; --*
lin forgetfulness_2_N = mkN "esquecimento" ; --*
lin forget_me_not_N = variants {mkN "as-de-mim" ; mkN "ear" ; mkN "scorpiodes" ; } ; --*
lin forgettable_A = variants {mkA "esquecível" ; mkA "que" ; } ; --*
lin forget_VV = mkVV (mkV "esquecer") ; --*
lin forging_N = mkN "forjamento" ; --*
lin forgivable_A = mkA "perdoável" ; --*
lin forgive_1_V2 = variants {mkV2 (mkV "desculpar") ; mkV2 (mkV "perdoar") ; } ; --*
lin forgive_2_V2 = mkV2 (mkV "escusar") ; --*
lin forgiveness_1_N = mkN "perdão" ; --*
lin forgiveness_2_N = mkN "perdão" ; --*
lin forgo_1_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "with") ; } ; --*
lin forgo_2_V2 = mkV2 (mkV "preceder") ; --*
lin forgo_3_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "overboard") ; mkV2 (mkV "perder") ; mkV2 (mkV "up") ; } ; --*
lin for_instance_Adv = variants {mkAdv "como" ; mkAdv "ex." ; mkAdv "example" ; mkAdv "instance" ; } ; --*
lin fork_1_N = mkN "garfo" ; --*
lin fork_1_V2 = mkV2 (mkV "garfar") ; --*
lin fork_3_N = mkN "bifurcação" ; --*
lin fork_3_V = variants {mkV "bifurcar" ; mkV "brotar" ; mkV "ramificar" ; } ; --*
lin fork_4_N = mkN "forcado" ; --*
lin fork_5_N = variants {mkN "entreperna" ; mkN "virilha" ; } ; --*
lin forklift_N = variants {mkN "empilhadeira" ; mkN "empilhador" ; } ; --*
lin fork_out_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "in") ; mkV2 (mkV "livrar") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin fork_over_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "in") ; mkV2 (mkV "livrar") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin forlornness_N = variants {mkN "Solidao" ; mkN "solidão" ; } ; --*
lin form_11_N = variants {mkN "estilo" ; mkN "maneira" ; } ; --*
lin form_12_N = mkN "fase" ; --*
lin form_13_N = variants {mkN "aula" ; mkN "classe" ; mkN "curso" ; } ; --*
lin form_15_N = variants {mkN "manequim" ; mkN "Manequim" ; } ; --*
lin form_1_N = variants {mkN "form" ; mkN "forma" ; } ; --*
lin form_1_V2 = mkV2 (mkV "organizar") ; --*
lin form_1_V = mkV "organizar" ; --*
lin form_2_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "constituir") ; mkV2 (mkV "enquadrar") ; mkV2 (mkV "estabelecer") ; } ; --*
lin form_3_N = variants {mkN "forma" ; mkN "padrão" ; } ; --*
lin form_4_N = mkN "contorno" ; --*
lin form_4_V2 = mkV2 (mkV "formar") ; --*
lin form_5_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin form_5_V2 = variants {mkV2 (mkV "formar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "moldar") ; } ; --*
lin form_6_N = variants {mkN "forma" ; mkN "formato" ; } ; --*
lin form_8_N = mkN "formulário" ; --*
lin form_9_N = variants {mkN "Estirpe" ; mkN "variante" ; } ; --*
lin formal_1_A = variants {mkA "ceremonioso" ; mkA "formal" ; } ; --*
lin formal_2_A = mkA "formal" ; --*
lin formal_3_A = mkA "formal" ; --*
lin formal_4_A = variants {mkA "convencional" ; mkA "esquemático" ; } ; --*
lin formaldehyde_N = mkN "metanal" ; --*
lin formalism_1_N = mkN "formalismo" ; --*
lin formalism_2_N = mkN "formalismo" ; --*
lin formalism_3_N = mkN "formalismo" ; --*
lin formality_1_N = mkN "formalidade" ; --*
lin formality_2_N = mkN "formalidade" ; --*
lin formality_3_N = mkN "formalidade" ; --*
lin formalization_1_N = mkN "formalização" ; --*
lin formalize_1_V2 = variants {mkV2 (mkV "formalizar") ; mkV2 (mkV "oficializar") ; } ; --*
lin formalize_2_V2 = variants {mkV2 (mkV "formalizar") ; mkV2 (mkV "validar") ; } ; --*
lin format_1_N = variants {mkN "format" ; mkN "formatação" ; mkN "formato" ; mkN "formatting" ; } ; --*
lin format_2_N = mkN "formato" ; --*
lin formation_1_N = mkN "formação" ; --*
lin formation_2_N = mkN "formação" ; --*
lin formation_3_N = variants {mkN "constituição" ; mkN "estabelecimento" ; mkN "organização" ; } ; --*
lin formation_5_N = mkN "formação" ; --*
lin former_3_A = mkA "antigo" ; --*
lin former_4_A = variants {mkA "anterior" ; mkA "prévio" ; } ; --*
lin formica_2_N = mkN "Formica" ; --*
lin formidable_1_A = variants {mkA "formidável" ; mkA "formigueiro" ; } ; --*
lin formless_1_A = variants {mkA "amórfico" ; mkA "amorfo" ; } ; --*
lin form_of_N2 = variants {mkN2 (mkN "categoria") noPrep ; mkN2 (mkN "classe") noPrep ; mkN2 (mkN "espécies") noPrep ; mkN2 (mkN "género") noPrep ; mkN2 (mkN "raça") noPrep ; mkN2 (mkN "tipo") noPrep ; } ; --*
lin formosa_PN = variants {mkPN "Formosa" ; mkPN "Ilha" ; mkPN "Taiwan" ; } ; --*
lin formula_1_N = variants {mkN "Expressão" ; mkN "fórmula" ; } ; --*
lin formula_2_N = variants {mkN "fórmula" ; mkN "prescrição" ; mkN "receita" ; mkN "Receita" ; } ; --*
lin formula_3_N = mkN "fórmula" ; --*
lin formula_4_N = variants {mkN "formula" ; mkN "Formula" ; mkN "Fórmula" ; mkN "Fórmulas" ; } ; --*
lin formula_5_N = mkN "pauta" ; --*
lin formula_7_N = variants {mkN "fórmula" ; mkN "regra" ; } ; --*
lin formulary_A = mkA "formular" ; --*
lin formulate_1_V2 = mkV2 (mkV "formular") ; --*
lin formulate_2_V2 = variants {mkV2 (mkV "forjar") ; mkV2 (mkV "formular") ; mkV2 (mkV "inventar") ; } ; --*
lin formulate_3_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "expressar") ; mkV2 (mkV "formular") ; mkV2 (mkV "voice") ; } ; --*
lin formulation_2_N = mkN "formulação" ; --*
lin fornicate_V = mkV "fornicar" ; --*
lin fornication_1_N = mkN "fornicação" ; --*
lin fornication_2_N = variants {mkN "adultério" ; mkN "conversation" ; mkN "Fornicação" ; } ; --*
lin forrader_Adv = variants {mkAdv "a" ; mkAdv "para" ; } ; --*
lin forsake_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desamparar") ; mkV2 (mkV "desertar") ; } ; --*
lin forsaking_2_N = variants {mkN "abandono" ; mkN "desamparo" ; mkN "deserção" ; } ; --*
lin for_sure_Adv = variants {mkAdv "as" ; mkAdv "certain" ; mkAdv "certamente" ; mkAdv "de" ; mkAdv "enough" ; mkAdv "seguramente" ; mkAdv "sure" ; } ; --*
lin forswear_V2 = variants {mkV2 (mkV "abjurar") ; mkV2 (mkV "recantar") ; mkV2 (mkV "renunciar") ; } ; --*
lin fort_2_N = variants {mkN "fortaleza" ; mkN "forte" ; } ; --*
lin forte_1_N = variants {mkN "especialidade" ; mkN "forte" ; mkN "point" ; mkN "suit" ; } ; --*
lin forth_1_Adv = mkAdv "embora" ; --*
lin forth_2_Adv = variants {mkAdv "a" ; mkAdv "de" ; mkAdv "doravante" ; mkAdv "para" ; } ; --*
lin forthcoming_1_A = mkA "extrovertido" ; --*
lin forthcoming_2_A = variants {mkA "iminente" ; mkA "próximo" ; mkA "que" ; } ; --*
lin forthcoming_3_A = variants {mkA "a" ; mkA "disponível" ; mkA "que" ; } ; --*
lin forthright_A = mkA "correto" ; --*
lin forthwith_Adv = variants {mkAdv "a" ; mkAdv "agora" ; mkAdv "away" ; mkAdv "directamente" ; mkAdv "em" ; mkAdv "imediatamente" ; mkAdv "instantaneamente" ; mkAdv "off" ; mkAdv "once" ; } ; --*
lin fortification_1_N = variants {mkN "fortaleza" ; mkN "fortificação" ; } ; --*
lin fortification_2_N = variants {mkN "fortificação" ; mkN "fortificar" ; } ; --*
lin fortification_3_N = mkN "fortificação" ; --*
lin fortify_1_V2 = variants {mkV2 (mkV "fortalecer") ; mkV2 (mkV "fortificar") ; mkV2 (mkV "up") ; } ; --*
lin fortify_2_V2 = mkV2 (mkV "fortificar") ; --*
lin fortify_3_V2 = variants {mkV2 (mkV "prover") ; mkV2 (mkV "up") ; } ; --*
lin fortify_4_V2 = variants {mkV2 (mkV "enriquecer") ; mkV2 (mkV "fortificar") ; } ; --*
lin fortify_5_V2 = mkV2 (mkV "envenenar") ; --*
lin fort_lauderdale_PN = mkPN "Lauderdale" ; --*
lin fortnightly_Adv = mkAdv "quinzenalmente" ; --*
lin fortnightly_A = mkA "quinzenal" ; --*
lin fortnight_N = variants {mkN "quinzena" ; mkN "weeks" ; } ; --*
lin fortress_N = variants {mkN "fortaleza" ; mkN "forte" ; } ; --*
lin fortuitous_1_A = mkA "fortuito" ; --*
lin fortuitous_2_A = mkA "fortuito" ; --*
lin fortuity_N = variants {mkN "acidente" ; mkN "event" ; } ; --*
lin fortunate_1_A = mkA "afortunado" ; --*
lin fortunately_Adv = variants {mkAdv "afortunadamente" ; mkAdv "felizmente" ; mkAdv "luck" ; mkAdv "por" ; } ; --*
lin fortune_1_N = variants {mkN "azar" ; mkN "ensejo" ; mkN "sorte" ; } ; --*
lin fortune_2_N = mkN "fortuna" ; --*
lin fortune_3_N = variants {mkN "fortuna" ; mkN "sorte" ; } ; --*
lin fortune_4_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin fortuneteller_1_N = variants {mkN "áugure" ; mkN "profeta" ; mkN "teller" ; } ; --*
lin fort_worth_PN = mkPN "Worth" ; --*
lin forty_N = mkN "40" ; --*
lin forum_1_N = variants {mkN "foro" ; mkN "fórum" ; } ; --*
lin forum_2_N = variants {mkN "fórum" ; mkN "newsgroup" ; mkN "place" ; } ; --*
lin forward_2_Adv = variants {mkAdv "a" ; mkAdv "de" ; mkAdv "doravante" ; mkAdv "para" ; } ; --*
lin forward_2_N = mkN "atacante" ; --*
lin forward_3_Adv = mkAdv "avante" ; --*
lin forward_4_Adv = variants {mkAdv "a" ; mkAdv "para" ; } ; --*
lin forwarding_2_N = mkN "progresso" ; --*
lin forwardness_1_N = mkN "petulância" ; --*
lin forwards_2_Adv = variants {mkAdv "a" ; mkAdv "para" ; } ; --*
lin forward_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "on") ; mkV2 (mkV "repassar") ; } ; --*
lin fossa_3_N = variants {mkN "cat" ; mkN "ferox" ; mkN "fossa" ; } ; --*
lin fosse_N = mkN "fosso" ; --*
lin fossil_1_N = variants {mkN "fósseis" ; mkN "fóssil" ; } ; --*
lin fossil_2_N = variants {mkN "fósseis" ; mkN "Fósseis" ; mkN "Fossil" ; mkN "fóssil" ; } ; --*
lin fossilize_1_V = mkV "fossilizar" ; --*
lin foster_1_V2 = mkV2 (mkV "incentivar") ; --*
lin foster_2_V2 = mkV2 (mkV "criar") ; --*
lin foster_3_V2 = mkV2 (mkV "alimentar") ; --*
lin foster_A = variants {mkA "adoptivo" ; mkA "adotivo" ; } ; --*
lin fothergilla_2_N = mkN "Fothergilla" ; --*
lin foul_1_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin foul_2_A = variants {mkA "fedorento" ; mkA "fétido" ; mkA "malcheiroso" ; } ; --*
lin foul_2_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "poluir") ; mkV2 (mkV "sujar") ; } ; --*
lin foul_3_A = mkA "sujo" ; --*
lin foul_3_V2 = variants {mkV2 (mkV "entupir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin foul_6_A = variants {mkA "obsceno" ; mkA "sujo" ; mkA "verde" ; } ; --*
lin foul_7_A = variants {mkA "imunda" ; mkA "sujo" ; } ; --*
lin foulness_4_N = mkN "odor" ; --*
lin foul_N = mkN "falta" ; --*
lin found_1_V2 = variants {mkV2 (mkV "estabelecer") ; mkV2 (mkV "up") ; } ; --*
lin found_2_V2 = variants {mkV2 (mkV "constituir") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fundar") ; } ; --*
lin found_3_V2 = variants {mkV2 (mkV "basear") ; mkV2 (mkV "fundamentar") ; } ; --*
lin foundation_1_N = mkN "fundação" ; --*
lin foundation_2_N = mkN "fundação" ; --*
lin foundation_3_N = variants {mkN "alicerce" ; mkN "base" ; mkN "pé" ; } ; --*
lin foundation_4_N = variants {mkN "base" ; mkN "fundamento" ; } ; --*
lin foundation_5_N = variants {mkN "base" ; mkN "fundação" ; } ; --*
lin foundation_7_N = variants {mkN "criação" ; mkN "fundação" ; mkN "início" ; mkN "instituição" ; mkN "introdução" ; } ; --*
lin founder_2_N = variants {mkN "father" ; mkN "fundador" ; mkN "iniciador" ; mkN "pai" ; } ; --*
lin founder_3_N = mkN "fundidor" ; --*
lin founder_3_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin found_N = mkN "darbase" ; --*
lin foundress_N = variants {mkN "fundadora" ; mkN "mãe" ; } ; --*
lin foundry_N = mkN "fundição" ; --*
lin fount_1_N = mkN "família" ; --*
lin fount_2_N = variants {mkN "chafariz" ; mkN "fonte" ; } ; --*
lin fountain_1_N = variants {mkN "chafariz" ; mkN "fonte" ; } ; --*
lin fountain_2_N = variants {mkN "Nascente" ; mkN "spring" ; } ; --*
lin fountain_3_N = mkN "jato" ; --*
lin fountain_4_N = variants {mkN "chafariz" ; mkN "fonte" ; } ; --*
lin fountain_head_2_N = mkN "nascente" ; --*
lin fountain_pen_N = mkN "pen" ; --*
lin fourfold_1_A = mkA "quádruplo" ; --*
lin fourfold_2_A = mkA "quádruplo" ; --*
lin fourscore_N = mkN "oitenta" ; --*
lin foursome_1_N = mkN "quarteto" ; --*
lin foursome_2_N = variants {mkN "4" ; mkN "Joe" ; mkN "quarteto" ; mkN "quatro" ; } ; --*
lin foursquare_2_Adv = variants {mkAdv "com" ; mkAdv "diretamente" ; } ; --*
lin fowl_1_N = variants {mkN "carne" ; mkN "fowl" ; mkN "galinha" ; } ; --*
lin fowl_2_N = variants {mkN "ave" ; mkN "carne" ; } ; --*
lin fox_1_N = variants {mkN "matreiro" ; mkN "raposa" ; mkN "Raposa" ; mkN "raposa-vermelha" ; } ; --*
lin fox_2_N = mkN "raposo" ; --*
lin fox_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "enrolar") ; mkV2 (mkV "perplexar") ; } ; --*
lin fox_5_N = variants {mkN "Fox" ; mkN "George" ; } ; --*
lin foxglove_N = variants {mkN "dedaleira" ; mkN "digital" ; mkN "erva-dedal" ; } ; --*
lin foxhunt_N = variants {mkN "caça" ; mkN "hunting" ; } ; --*
lin foxy_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin foyer_N = variants {mkN "antecâmara" ; mkN "antessala" ; mkN "átrio" ; mkN "hall" ; mkN "saguão" ; mkN "sala" ; mkN "vestíbulo" ; } ; --*
lin fracas_1_N = variants {mkN "altercação" ; mkN "rixa" ; } ; --*
lin fractal_N = mkN "fractal" ; --*
lin fraction_2_N = variants {mkN "fração" ; mkN "fracção" ; mkN "parte" ; } ; --*
lin fraction_3_N = variants {mkN "fração" ; mkN "fracção" ; } ; --*
lin fractional_A = mkA "fracionário" ; --*
lin fractious_2_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin fracture_1_N = variants {mkN "fractura" ; mkN "fratura" ; } ; --*
lin fracture_2_N = variants {mkN "falha" ; mkN "fault" ; } ; --*
lin fracture_2_V2 = mkV2 (mkV "fraturar") ; --*
lin fracture_3_N = variants {mkN "fractura" ; mkN "fratura" ; } ; --*
lin fracture_3_V2 = variants {mkV2 (mkV "despedaçar") ; mkV2 (mkV "fracturar") ; } ; --*
lin fracture_4_V = variants {mkV "fracturar" ; mkV "fraturar" ; } ; --*
lin fracture_5_V2 = variants {mkV2 (mkV "fraturar") ; mkV2 (mkV "quebrar") ; } ; --*
lin fracture_5_V = variants {mkV "fraturar" ; mkV "quebrar" ; } ; --*
lin fracture_6_V2 = variants {mkV2 (mkV "fraturar") ; mkV2 (mkV "quebrar") ; } ; --*
lin fragile_1_A = variants {mkA "delicado" ; mkA "frágil" ; mkA "quebradiço" ; } ; --*
lin fragile_2_A = mkA "frágil" ; --*
lin fragility_1_N = mkN "fragilidade" ; --*
lin fragment_1_N = mkN "fragmento" ; --*
lin fragment_2_N = variants {mkN "caco" ; mkN "fragmento" ; } ; --*
lin fragmental_A = mkA "fragmentário" ; --*
lin fragmentary_A = mkA "fragmentário" ; --*
lin fragmentation_1_N = mkN "fragmentação" ; --*
lin fragmentation_3_N = mkN "fragmentação" ; --*
lin fragment_V = variants {mkV "fragmentar" ; mkV "up" ; } ; --*
lin fragrance_1_N = variants {mkN "cheiro" ; mkN "fragrância" ; mkN "odor" ; mkN "perfume" ; } ; --*
lin fragrance_2_N = variants {mkN "aroma" ; mkN "fragância" ; } ; --*
lin fragrant_A = variants {mkA "aromática" ; mkA "cheiroso" ; mkA "fragrante" ; mkA "perfumado" ; } ; --*
lin frail_2_A = mkA "imperfeito" ; --*
lin frail_3_A = variants {mkA "delicado" ; mkA "frágil" ; mkA "quebradiço" ; } ; --*
lin frailty_1_N = variants {mkN "debilidade" ; mkN "fraqueza" ; } ; --*
lin frailty_2_N = variants {mkN "perversão" ; mkN "vice" ; } ; --*
lin frame_10_N = variants {mkN "estrutura" ; mkN "infra" ; } ; --*
lin frame_1_V2 = variants {mkV2 (mkV "emoldurar") ; mkV2 (mkV "in") ; } ; --*
lin frame_2_N = mkN "quadro" ; --*
lin frame_2_V2 = mkV2 (mkV "enquadrar") ; --*
lin frame_2_V = mkV "enquadrar" ; --*
lin frame_3_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin frame_3_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "up") ; } ; --*
lin frame_4_V2 = mkV2 (mkV "formular") ; --*
lin frame_5_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin frame_7_N = variants {mkN "of" ; mkN "referencial" ; } ; --*
lin frame_8_N = variants {mkN "esqueleto" ; mkN "skeletale" ; mkN "system" ; } ; --*
lin framework_1_N = variants {mkN "account" ; mkN "teoria" ; } ; --*
lin framework_2_N = variants {mkN "estrutura" ; mkN "rede" ; } ; --*
lin framework_3_N = variants {mkN "estrutura" ; mkN "infra" ; } ; --*
lin france_1_PN = variants {mkPN "França" ; mkPN "Republic" ; } ; --*
lin france_2_PN = variants {mkPN "Anatole" ; mkPN "France" ; } ; --*
lin franchise_1_N = mkN "franquia" ; --*
lin franchise_2_N = mkN "franquia" ; --*
lin franciscan_N = variants {mkN "Franciscanos" ; mkN "Friar" ; } ; --*
lin francium_N = variants {mkN "Francio" ; mkN "frâncio" ; mkN "number" ; } ; --*
lin franc_N = variants {mkN "franco" ; mkN "Franco" ; } ; --*
lin frank_1_A = mkA "correto" ; --*
lin frank_1_N = variants {mkN "francos" ; mkN "Francos" ; } ; --*
lin frank_1_V2 = variants {mkV2 (mkV "estampar") ; mkV2 (mkV "franquear") ; } ; --*
lin frank_2_N = variants {mkN "cachorro-quente" ; mkN "dog" ; mkN "salsicha" ; } ; --*
lin frankfurter_N = variants {mkN "cachorro-quente" ; mkN "dog" ; mkN "salsicha" ; } ; --*
lin frankfurt_PN = variants {mkPN "Frankfurt" ; mkPN "on" ; } ; --*
lin frankincense_N = variants {mkN "olíbano" ; mkN "olibanum" ; } ; --*
lin franklin_1_N = variants {mkN "Hope" ; mkN "John" ; } ; --*
lin franklin_2_N = variants {mkN "Benjamin" ; mkN "Franklin" ; } ; --*
lin frankly_Adv = variants {mkAdv "abertamente" ; mkAdv "francamente" ; mkAdv "honestamente" ; mkAdv "sem" ; } ; --*
lin frankness_1_N = mkN "franqueza" ; --*
lin frankness_2_N = mkN "franqueza" ; --*
lin frantic_1_A = mkA "frenético" ; --*
lin frantic_2_A = variants {mkA "delirante" ; mkA "frenético" ; } ; --*
lin frappe_3_N = mkN "sorvete" ; --*
lin fraternal_1_A = mkA "fraternal" ; --*
lin fraternal_2_A = mkA "fraternal" ; --*
lin fraternal_3_A = variants {mkA "fraternal" ; mkA "fraterno" ; } ; --*
lin fraternity_1_N = mkN "ordem" ; --*
lin fraternity_2_N = variants {mkN "fraternidade" ; mkN "irmandade" ; mkN "ordem" ; } ; --*
lin fraternization_1_N = mkN "fraternização" ; --*
lin fratricide_2_N = variants {mkN "fire" ; mkN "Fogo" ; } ; --*
lin fratricide_3_N = mkN "fratricídio" ; --*
lin fraud_2_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin fraud_3_N = variants {mkN "fraude" ; mkN "hoax" ; mkN "trote" ; } ; --*
lin fraudulence_1_N = mkN "duplicidade" ; --*
lin fraudulence_3_N = variants {mkN "fraude" ; mkN "hoax" ; mkN "trote" ; } ; --*
lin fraudulent_A = mkA "enganoso" ; --*
lin fray_1_V2 = mkV2 (mkV "desfilar") ; --*
lin fray_2_V = mkV "arranhar" ; --*
lin fray_N = mkN "contenda" ; --*
lin freak_1_N = variants {mkN "esdrúxulo" ; mkN "monstro" ; mkN "naturae" ; } ; --*
lin freak_2_N = variants {mkN "adicto" ; mkN "viciado" ; } ; --*
lin freakish_3_A = variants {mkA "bizarro" ; mkA "bizzaro" ; mkA "estranho" ; } ; --*
lin freakishness_N = mkN "anormalidade" ; --*
lin freak_out_V2 = variants {mkV2 (mkV "descontrolar") ; mkV2 (mkV "out") ; } ; --*
lin freaky_2_A = variants {mkA "bizarro" ; mkA "bizzaro" ; mkA "estranho" ; } ; --*
lin freckle_1_V = mkV "sardas" ; --*
lin freckle_N = variants {mkN "lentigem" ; mkN "sarda" ; mkN "sardas" ; } ; --*
lin frederick_PN = mkPN "Frederico" ; --*
lin free_10_V2 = variants {mkV2 (mkV "libertar") ; mkV2 (mkV "livrar") ; mkV2 (mkV "soltar") ; } ; --*
lin free_10_V2V = variants {mkV2V (mkV "libertar") ; mkV2V (mkV "livrar") ; mkV2V (mkV "soltar") ; } ; --*
lin free_11_V2 = variants {mkV2 (mkV "desbloquear") ; mkV2 (mkV "liberar") ; } ; --*
lin free_1_A = variants {mkA "gratís" ; mkA "livre" ; } ; --*
lin free_1_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "soltar") ; } ; --*
lin free_1_V2V = variants {mkV2V (mkV "liberar") ; mkV2V (mkV "soltar") ; } ; --*
lin free_2_V2 = variants {mkV2 (mkV "desimpedir") ; mkV2 (mkV "livrar") ; mkV2 (mkV "remover") ; } ; --*
lin free_3_A = variants {mkA "de" ; mkA "gratís" ; mkA "grátis" ; mkA "gratuitamente" ; mkA "gratuito" ; } ; --*
lin free_3_V2 = variants {mkV2 (mkV "desalojar") ; mkV2 (mkV "desprender") ; } ; --*
lin free_4_A = variants {mkA "desocupado" ; mkA "vazio" ; } ; --*
lin free_4_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "liberar") ; } ; --*
lin free_5_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "lançar") ; } ; --*
lin free_6_V2 = mkV2 (mkV "liberar") ; --*
lin free_6_V2V = mkV2V (mkV "liberar") ; --*
lin free_7_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "limpar") ; mkV2 (mkV "livrar") ; } ; --*
lin free_8_A = mkA "destituído" ; --*
lin free_8_V2 = variants {mkV2 (mkV "absolver") ; mkV2 (mkV "deixar") ; mkV2 (mkV "eximir") ; mkV2 (mkV "exonerar") ; mkV2 (mkV "liberar") ; } ; --*
lin free_9_A = mkA "liberal" ; --*
lin free_9_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "desobrigar") ; mkV2 (mkV "liberar") ; mkV2 (mkV "up") ; } ; --*
lin freebie_1_N = mkN "brinde" ; --*
lin freebooter_N = mkN "assaltante" ; --*
lin freedman_N = variants {mkN "homem" ; mkN "liberto" ; } ; --*
lin freedom_1_N = variants {mkN "liberdade" ; mkN "liberdades" ; } ; --*
lin freedom_2_N = variants {mkN "isenção" ; mkN "liberdade" ; mkN "liberdades" ; } ; --*
lin freehand_A = variants {mkA "desenhado" ; mkA "escrito" ; mkA "feito" ; } ; --*
lin free_handed_1_A = variants {mkA "desenhado" ; mkA "escrito" ; mkA "feito" ; } ; --*
lin free_handed_2_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin freelance_1_A = variants {mkA "autónomo" ; mkA "autônomo" ; } ; --*
lin freelance_1_N = variants {mkN "freelancer" ; mkN "Free-lancer" ; mkN "lance" ; mkN "person" ; } ; --*
lin freelancer_N = variants {mkN "freelancer" ; mkN "Free-lancer" ; mkN "lance" ; mkN "person" ; } ; --*
lin freeman_N = mkN "homem" ; --*
lin freemason_N = variants {mkN "franco-maçom" ; mkN "maçom" ; } ; --*
lin freemasonry_1_N = variants {mkN "franco-maçonaria" ; mkN "maçonaria" ; } ; --*
lin freemasonry_2_N = variants {mkN "francomaçonaria" ; mkN "maçonaria" ; mkN "Maçonaria" ; } ; --*
lin free_of_A2 = mkA2 (mkA "destituído") noPrep ; --*
lin freesia_N = mkN "frésia" ; --*
lin free_spoken_A = mkA "correto" ; --*
lin free_standing_A = mkA "separado" ; --*
lin freestyle_N = variants {mkN "estilo" ; mkN "freestyle" ; } ; --*
lin free_thinker_N = mkN "deísta" ; --*
lin free_thought_N = variants {mkN "Deismo" ; mkN "Deísmo" ; mkN "thought" ; } ; --*
lin freeware_N = mkN "software" ; --*
lin freeway_N = variants {mkN "autoestrada" ; mkN "auto-estrada" ; mkN "estrada" ; mkN "highway" ; mkN "rodovia" ; mkN "super-autopista" ; mkN "via" ; mkN "vias" ; } ; --*
lin freeze_10_V = variants {mkV "endurecer" ; mkV "esfriar" ; } ; --*
lin freeze_2_N = variants {mkN "frio" ; mkN "geada" ; } ; --*
lin freeze_2_V = mkV "congelar" ; --*
lin freeze_3_N = mkN "parada" ; --*
lin freeze_3_V = mkV "congelar" ; --*
lin freeze_4_V2 = variants {mkV2 (mkV "congelar") ; mkV2 (mkV "gelar") ; } ; --*
lin freeze_5_V2 = variants {mkV2 (mkV "congelar") ; mkV2 (mkV "suspender") ; } ; --*
lin freeze_6_V = mkV "congelar" ; --*
lin freeze_7_V = variants {mkV "down" ; mkV "gelar" ; mkV "out" ; } ; --*
lin freeze_8_V2 = mkV2 (mkV "congelar") ; --*
lin freeze_out_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "gelar") ; mkV2 (mkV "out") ; } ; --*
lin freezer_N = variants {mkN "congelador" ; mkN "freezer" ; } ; --*
lin freezing_point_N = mkN "point" ; --*
lin freight_1_N = mkN "carga" ; --*
lin freight_2_N = mkN "frete" ; --*
lin freighter_N = variants {mkN "carga" ; mkN "ship" ; } ; --*
lin french_A = variants {mkA "francês" ; mkA "gaulês" ; } ; --*
lin frenchFem_N = variants {mkN "francês" ; mkN "person" ; } ; --*
lin frenchMasc_N = variants {mkN "francês" ; mkN "person" ; } ; --*
lin frenetic_A = mkA "frenético" ; --*
lin frenzied_1_A = mkA "maníaco" ; --*
lin frenzied_2_A = mkA "frenético" ; --*
lin frenzy_N = variants {mkN "delírio" ; mkN "frenesi" ; mkN "loucura" ; } ; --*
lin frequency_1_N = variants {mkN "Frequencia" ; mkN "frequência" ; mkN "freqüência" ; } ; --*
lin frequency_2_N = variants {mkN "frequência" ; mkN "frequency" ; } ; --*
lin frequency_3_N = variants {mkN "frequência" ; mkN "frequency" ; } ; --*
lin frequent_1_A = variants {mkA "frequente" ; mkA "freqüente" ; } ; --*
lin frequent_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "patrocinar") ; } ; --*
lin frequent_2_A = variants {mkA "frequente" ; mkA "freqüente" ; } ; --*
lin frequent_2_V2 = variants {mkV2 (mkV "frequentar") ; mkV2 (mkV "freqüentar") ; } ; --*
lin fresco_1_N = variants {mkN "afresco" ; mkN "Afresco" ; } ; --*
lin fresh_12_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin fresh_1_A = variants {mkA "fresco" ; mkA "recente" ; } ; --*
lin fresh_2_A = variants {mkA "novo" ; mkA "recente" ; } ; --*
lin fresh_3_A = variants {mkA "fresco" ; mkA "refrescante" ; } ; --*
lin fresh_4_A = variants {mkA "fresco" ; mkA "nova" ; mkA "novo" ; mkA "original" ; } ; --*
lin fresh_5_A = mkA "recente" ; --*
lin fresh_Adv = variants {mkAdv "novamente" ; mkAdv "recentemente" ; } ; --*
lin freshen_1_V2 = variants {mkV2 (mkV "avivar") ; mkV2 (mkV "refrescar") ; } ; --*
lin freshen_2_V = variants {mkV "refrescar" ; mkV "up" ; } ; --*
lin freshen_3_V2 = mkV2 (mkV "refrescar") ; --*
lin freshen_3_V = mkV "refrescar" ; --*
lin freshen_up_1_V = variants {mkV "renovar" ; mkV "restaurar" ; mkV "up" ; } ; --*
lin freshen_up_2_V = variants {mkV "refrescar" ; mkV "up" ; } ; --*
lin freshen_up_V2 = variants {mkV2 (mkV "renovar") ; mkV2 (mkV "restaurar") ; mkV2 (mkV "up") ; } ; --*
lin fresher_N = variants {mkN "Bixo" ; mkN "caloiro" ; mkN "calouro" ; } ; --*
lin freshman_1_N = variants {mkN "Bixo" ; mkN "caloiro" ; mkN "calouro" ; } ; --*
lin freshman_2_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin freshness_1_N = mkN "frescura" ; --*
lin freshness_2_N = variants {mkN "coisa" ; mkN "frescor" ; mkN "frescura" ; mkN "novidade" ; } ; --*
lin freshness_4_N = mkN "novidade" ; --*
lin freshness_5_N = variants {mkN "atrevimento" ; mkN "imprudência" ; mkN "insolência" ; } ; --*
lin freshwater_N = variants {mkN "água" ; mkN "water" ; } ; --*
lin freshwater_PN = variants {mkPN "água" ; mkPN "water" ; } ; --*
lin fret_10_V = mkV "arranhar" ; --*
lin fret_11_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "corroer") ; mkV2 (mkV "erodir") ; } ; --*
lin fret_1_V = mkV "criar" ; --*
lin fret_2_V = mkV "apoquentar" ; --*
lin fret_4_N = mkN "traste" ; --*
lin fret_5_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "irritar") ; } ; --*
lin fret_5_V = variants {mkV "aborrecer" ; mkV "irritar" ; } ; --*
lin fret_5_VS = variants {mkVS (mkV "aborrecer") ; mkVS (mkV "irritar") ; } ; --*
lin fret_6_V = variants {mkV "corroer" ; mkV "into" ; mkV "magoar" ; } ; --*
lin fretful_A = mkA "nervoso" ; --*
lin freudian_A = mkA "freudiano" ; --*
lin friable_A = mkA "friável" ; --*
lin friar_N = mkN "frade" ; --*
lin fricassee_N = mkN "fricassé" ; --*
lin friction_1_N = variants {mkN "atrito" ; mkN "fricção" ; } ; --*
lin friction_2_N = variants {mkN "atrito" ; mkN "fricção" ; } ; --*
lin friction_3_N = mkN "fricção" ; --*
lin fridge_N = variants {mkN "geladeira" ; mkN "refrigerador" ; mkN "refrigerator" ; } ; --*
lin friend_1_N = variants {mkN "amiga" ; mkN "amigo" ; mkN "amizade" ; mkN "camarada" ; mkN "conhecido" ; } ; --*
lin friend_2_N = variants {mkN "aliada" ; mkN "aliado" ; } ; --*
lin friend_3_N = variants {mkN "amigo" ; mkN "amizade" ; mkN "conhecida" ; mkN "conhecido" ; } ; --*
lin friend_4_N = mkN "seguidor" ; --*
lin friend_5_N = variants {mkN "quacre" ; mkN "quaqueiro" ; mkN "quáquer" ; } ; --*
lin friendless_A = mkA "sem" ; --*
lin friendliness_2_N = mkN "amizade" ; --*
lin friendly_1_A = variants {mkA "amigável" ; mkA "amigo" ; mkA "amistoso" ; } ; --*
lin friendly_2_A = mkA "favorável" ; --*
lin friendship_N = variants {mkN "amizade" ; mkN "relationship" ; } ; --*
lin frieze_1_N = mkN "Friso" ; --*
lin frieze_2_N = mkN "baeta" ; --*
lin frigate_2_N = variants {mkN "fragata" ; mkN "Fragata" ; mkN "Fragatas" ; } ; --*
lin fright_1_V2 = variants {mkV2 (mkV "amedrontar") ; mkV2 (mkV "assustar") ; mkV2 (mkV "atemorizar") ; mkV2 (mkV "aterrorizar") ; mkV2 (mkV "intimidar") ; } ; --*
lin frighten_away_V2 = variants {mkV2 (mkV "assustar") ; mkV2 (mkV "away") ; mkV2 (mkV "desalentar") ; mkV2 (mkV "intimidar") ; mkV2 (mkV "off") ; } ; --*
lin frightened_A = mkA "assustado" ; --*
lin frightening_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin frighten_off_V2 = variants {mkV2 (mkV "assustar") ; mkV2 (mkV "away") ; mkV2 (mkV "desalentar") ; mkV2 (mkV "intimidar") ; mkV2 (mkV "off") ; } ; --*
lin frighten_V2 = variants {mkV2 (mkV "amedrontar") ; mkV2 (mkV "assustar") ; mkV2 (mkV "atemorizar") ; mkV2 (mkV "aterrorizar") ; mkV2 (mkV "intimidar") ; } ; --*
lin frightful_1_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "horrível" ; } ; --*
lin frightful_2_A = mkA "horrível" ; --*
lin frightful_3_A = mkA "horrível" ; --*
lin fright_N = variants {mkN "consternação" ; mkN "medo" ; mkN "susto" ; mkN "temor" ; mkN "terror" ; } ; --*
lin frigid_2_A = variants {mkA "ártico" ; mkA "gelado" ; mkA "polar" ; } ; --*
lin frigid_3_A = variants {mkA "frio" ; mkA "gelado" ; mkA "glacial" ; } ; --*
lin frigidity_2_N = variants {mkN "frio" ; mkN "temperature" ; } ; --*
lin frigidity_3_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin frigorific_A = mkA "frigorífico" ; --*
lin fringe_1_N = variants {mkN "boundary" ; mkN "limite" ; mkN "margem" ; mkN "periferia" ; } ; --*
lin fringe_2_V2 = mkV2 (mkV "franjar") ; --*
lin fringe_5_N = mkN "franja" ; --*
lin fri_PN = mkPN "sexta-feira" ; --*
lin frippery_N = mkN "bagatela" ; --*
lin frisk_1_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin frisson_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin fritter_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desperdiçar") ; } ; --*
lin frivolity_1_N = variants {mkN "coisa" ; mkN "frivolidade" ; } ; --*
lin frivolity_2_N = mkN "bagatela" ; --*
lin frivolous_A = variants {mkA "frívolo" ; mkA "fútil" ; } ; --*
lin frizzle_2_V2 = variants {mkV2 (mkV "encrespar") ; mkV2 (mkV "frisar") ; mkV2 (mkV "up") ; } ; --*
lin frizz_V2 = variants {mkV2 (mkV "encrespar") ; mkV2 (mkV "frisar") ; mkV2 (mkV "up") ; } ; --*
lin frizzy_A = variants {mkA "crespo" ; mkA "encaracolado" ; } ; --*
lin frock_2_N = variants {mkN "hábito" ; mkN "túnica" ; } ; --*
lin frock_3_N = mkN "vestido" ; --*
lin frock_coat_N = mkN "coat" ; --*
lin frog_1_N = variants {mkN "Anfíbios" ; mkN "Anura" ; mkN "frog" ; mkN "râ" ; mkN "rã" ; mkN "rãs" ; } ; --*
lin frogfish_N = mkN "Antennariidae" ; --*
lin frolic_N = mkN "brincadeira" ; --*
lin frolicsome_A = mkA "traquinas" ; --*
lin frolic_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin from_afar_Adv = variants {mkAdv "de" ; mkAdv "longe" ; } ; --*
lin from_time_to_time_Adv = variants {mkAdv "and" ; mkAdv "in" ; mkAdv "ocasionalmente" ; mkAdv "occasion" ; mkAdv "time" ; mkAdv "times" ; } ; --*
lin frond_N = variants {mkN "fronde" ; mkN "Fronde" ; } ; --*
lin front_10_N = variants {mkN "movement" ; mkN "movimento" ; mkN "movimentos" ; mkN "Movimentos" ; } ; --*
lin front_1_N = variants {mkN "end" ; mkN "frente" ; } ; --*
lin front_2_N = variants {mkN "fronte" ; mkN "line" ; mkN "Linha" ; } ; --*
lin front_3_N = mkN "aparência" ; --*
lin front_4_N = mkN "frente" ; --*
lin front_7_N = mkN "fila" ; --*
lin front_8_N = mkN "presença" ; --*
lin front_9_N = variants {mkN "frente" ; mkN "fronte" ; } ; --*
lin frontage_3_N = variants {mkN "fachada" ; mkN "frontispício" ; } ; --*
lin frontal_1_A = mkA "frontal" ; --*
lin frontal_3_N = variants {mkN "fachada" ; mkN "frontispício" ; } ; --*
lin frontal_4_A = mkA "frontal" ; --*
lin frontier_1_N = mkN "fronteira" ; --*
lin frontier_2_N = variants {mkN "confins" ; mkN "fronteira" ; mkN "limite" ; } ; --*
lin frontispiece_2_N = mkN "portada" ; --*
lin frost_1_N = mkN "geada" ; --*
lin frost_2_N = variants {mkN "frio" ; mkN "geada" ; } ; --*
lin frost_3_N = variants {mkN "geada" ; mkN "rime" ; } ; --*
lin frosting_N = mkN "crosta" ; --*
lin frost_PN = variants {mkPN "Frost" ; mkPN "Lee" ; mkPN "Robert" ; } ; --*
lin frosty_1_A = variants {mkA "frio" ; mkA "gelado" ; mkA "glacial" ; } ; --*
lin froth_1_V = variants {mkV "bubbles" ; mkV "espumar" ; mkV "espumejar" ; mkV "ferver" ; } ; --*
lin froth_N = mkN "espuma" ; --*
lin frothy_1_A = variants {mkA "borbulhante" ; mkA "espumoso" ; } ; --*
lin frottage_N = mkN "frottage" ; --*
lin frown_N = mkN "cenho" ; --*
lin frown_on_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin frown_V = variants {mkV "fazer" ; mkV "franzir" ; } ; --*
lin frowsty_A = mkA "bolorento" ; --*
lin frowsy_A = variants {mkA "desmazelado" ; mkA "mulambento" ; mkA "muxibento" ; } ; --*
lin frowzy_A = variants {mkA "desmazelado" ; mkA "mulambento" ; mkA "muxibento" ; } ; --*
lin frozen_1_A = variants {mkA "congelado" ; mkA "gelado" ; } ; --*
lin frozen_3_A = variants {mkA "frio" ; mkA "gelado" ; mkA "glacial" ; } ; --*
lin frozen_4_A = mkA "congelado" ; --*
lin frozen_7_A = mkA "fixo" ; --*
lin fr_PN = variants {mkPN "Francio" ; mkPN "frâncio" ; mkPN "number" ; } ; --*
lin frs_N = variants {mkN "Federal" ; mkN "Reserva" ; mkN "Reserve" ; } ; --*
lin fructification_2_N = mkN "Frutificação" ; --*
lin fructify_1_V = mkV "frutificar" ; --*
lin fructify_2_V = mkV "frutificar" ; --*
lin fructify_3_V = mkV "frutificar" ; --*
lin fructose_N = variants {mkN "frutose" ; mkN "sugar" ; } ; --*
lin frugal_A = variants {mkA "económico" ; mkA "econômico" ; mkA "frugal" ; } ; --*
lin frugality_N = mkN "frugalidade" ; --*
lin fruit_1_N = variants {mkN "fruta" ; mkN "fruto" ; } ; --*
lin fruit_2_N = variants {mkN "fruto" ; mkN "produção" ; mkN "produto" ; } ; --*
lin fruit_2_V = variants {mkV "frutar" ; mkV "frutificar" ; } ; --*
lin fruitcake_1_N = variants {mkN "aloprado" ; mkN "case" ; mkN "maluco" ; } ; --*
lin fruitful_A = variants {mkA "fecundo" ; mkA "fértil" ; mkA "frutífero" ; mkA "proveitoso" ; } ; --*
lin fruitfulness_2_N = mkN "fecundidade" ; --*
lin fruition_3_N = mkN "realização" ; --*
lin fruitless_A = mkA "vão" ; --*
lin fruitlessness_2_N = mkN "aridez" ; --*
lin fruitwood_N = mkN "pomar" ; --*
lin fruity_1_A = mkA "frutado" ; --*
lin fruity_2_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin frumpish_A = variants {mkA "antiquado" ; mkA "démodé" ; mkA "ultrapassado" ; } ; --*
lin frumpy_A = variants {mkA "antiquado" ; mkA "démodé" ; mkA "ultrapassado" ; } ; --*
lin frustrate_1_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin frustrate_2_V2 = variants {mkV2 (mkV "crucificar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "retalhar") ; mkV2 (mkV "tormentar") ; } ; --*
lin frustration_1_N = variants {mkN "derrota" ; mkN "frustação" ; mkN "frustração" ; } ; --*
lin frustration_2_N = variants {mkN "frustração" ; mkN "obstáculo" ; } ; --*
lin frustration_3_N = mkN "frustração" ; --*
lin frustum_N = mkN "Tronco" ; --*
lin fry_1_PN = variants {mkPN "Eliot" ; mkPN "Fry" ; mkPN "Roger" ; } ; --*
lin fry_2_V2 = mkV2 (mkV "fritar") ; --*
lin fry_3_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin fry_3_V2 = variants {mkV2 (mkV "electrocutar") ; mkV2 (mkV "eletrocutar") ; } ; --*
lin frying_N = mkN "fritura" ; --*
lin frying_pan_N = variants {mkN "pan" ; mkN "sartã" ; } ; --*
lin fry_pan_N = variants {mkN "pan" ; mkN "sartã" ; } ; --*
lin ft_PN = mkPN "pé" ; --*
lin fuchsia_N = variants {mkN "Fuchsia" ; mkN "Fúchsia" ; } ; --*
lin fucker_N = mkN "otário" ; --*
lin fucking_A = variants {mkA "maldito" ; mkA "puto" ; } ; --*
lin fucking_N = variants {mkN "coito" ; mkN "cópula" ; mkN "foda" ; mkN "in" ; mkN "metida" ; mkN "of" ; mkN "sexo" ; mkN "trepada" ; } ; --*
lin fuck_N = variants {mkN "coito" ; mkN "cópula" ; mkN "foda" ; mkN "in" ; mkN "metida" ; mkN "of" ; mkN "sexo" ; mkN "trepada" ; } ; --*
lin fuck_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin fuddle_1_V2 = mkV2 (mkV "entontecer") ; --*
lin fuddle_2_V2 = variants {mkV2 (mkV "beber") ; mkV2 (mkV "tomar") ; } ; --*
lin fuddle_3_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "enrolar") ; mkV2 (mkV "perplexar") ; } ; --*
lin fudge_N = mkN "fudge" ; --*
lin fuel_1_V2 = mkV2 (mkV "abastecer") ; --*
lin fuel_4_V2 = mkV2 (mkV "alimentar") ; --*
lin fuel_N = variants {mkN "carburante" ; mkN "combustível" ; mkN "material" ; } ; --*
lin fugacity_1_N = mkN "fugacidade" ; --*
lin fugitive_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "fugaz" ; mkA "fugitivo" ; mkA "momentâneo" ; } ; --*
lin fugue_3_N = variants {mkN "fuga" ; mkN "Fuga" ; } ; --*
lin fuji_2_N = variants {mkN "Fuji" ; mkN "Monte" ; } ; --*
lin fulcrum_N = variants {mkN "fulcro" ; mkN "ponto" ; } ; --*
lin fulfil_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "cumprir") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "realizar") ; mkV2 (mkV "through") ; } ; --*
lin fulfil_2_V2 = variants {mkV2 (mkV "satifazer") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "suprir") ; } ; --*
lin fulfil_3_V2 = variants {mkV2 (mkV "cumprir") ; mkV2 (mkV "realizar") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "up") ; } ; --*
lin fulfill_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "cumprir") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "realizar") ; mkV2 (mkV "through") ; } ; --*
lin fulfill_2_V2 = variants {mkV2 (mkV "cumprir") ; mkV2 (mkV "realizar") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "up") ; } ; --*
lin fulfill_3_V2 = variants {mkV2 (mkV "satifazer") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "suprir") ; } ; --*
lin fulfillment_1_N = mkN "satisfação" ; --*
lin fulfillment_2_N = mkN "realização" ; --*
lin fulfilment_1_N = mkN "satisfação" ; --*
lin fulfilment_2_N = mkN "realização" ; --*
lin full_1_A = variants {mkA "cheio" ; mkA "lotado" ; mkA "pleno" ; } ; --*
lin full_2_A = variants {mkA "inteira" ; mkA "inteiro" ; mkA "total" ; } ; --*
lin full_3_A = variants {mkA "completo" ; mkA "total" ; } ; --*
lin full_4_A = variants {mkA "cheia" ; mkA "cheio" ; mkA "repleta" ; mkA "repleto" ; mkA "satisfeito" ; } ; --*
lin fullback_1_N = mkN "fullback" ; --*
lin full_blooded_1_A = mkA "puro-sangue" ; --*
lin fuller_2_N = variants {mkN "Buckminster" ; mkN "Fuller" ; } ; --*
lin fuller_3_N = mkN "mais" ; --*
lin fullerene_N = mkN "fulereno" ; --*
lin full_grown_A = variants {mkA "adulto" ; mkA "crescido" ; mkA "grown" ; mkA "maior" ; } ; --*
lin fullness_1_N = mkN "plenitude" ; --*
lin fullness_2_N = variants {mkN "maturidade" ; mkN "plenitude" ; mkN "riqueza" ; } ; --*
lin fullness_3_N = mkN "plenitude" ; --*
lin full_time_A = mkA "(de)" ; --*
lin fully_1_Adv = variants {mkAdv "cheiamente" ; mkAdv "em" ; mkAdv "the" ; } ; --*
lin fully_grown_A = variants {mkA "adulto" ; mkA "crescido" ; mkA "grown" ; mkA "maior" ; } ; --*
lin fulminant_A = mkA "fulminante" ; --*
lin fulminate_N = variants {mkN "fulminato" ; mkN "Fulminatos" ; } ; --*
lin fulmination_1_N = mkN "diatribe" ; --*
lin fumble_1_V = variants {mkV "apalpar" ; mkV "palpar" ; mkV "tatear" ; } ; --*
lin fumble_4_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin fumble_N = mkN "fumble" ; --*
lin fume_1_V2 = mkV2 (mkV "irritar") ; --*
lin fume_1_V = mkV "irritar" ; --*
lin fume_1_VS = mkVS (mkV "irritar") ; --*
lin fume_2_VS = mkVS (mkV "fumegar") ; --*
lin fume_N = variants {mkN "emanações" ; mkN "exalação" ; mkN "Fumo" ; mkN "gás" ; mkN "vapores" ; } ; --*
lin fumigation_N = variants {mkN "fumigação" ; mkN "Fumigação" ; } ; --*
lin fun_1_N = variants {mkN "divertimento" ; mkN "entreterimento" ; } ; --*
lin fun_3_N = variants {mkN "diversão" ; mkN "divertimento" ; mkN "galhofa" ; } ; --*
lin funambulism_N = variants {mkN "Funambulismo" ; mkN "walking" ; } ; --*
lin funambulistFem_N = variants {mkN "funâmbulo" ; mkN "walker" ; } ; --*
lin funambulistMasc_N = variants {mkN "funâmbulo" ; mkN "walker" ; } ; --*
lin function_1_N = variants {mkN "função" ; mkN "function" ; } ; --*
lin function_1_V = variants {mkV "funcionar" ; mkV "operar" ; } ; --*
lin function_2_N = variants {mkN "função" ; mkN "propósito" ; } ; --*
lin function_2_V = mkV "servir" ; --*
lin function_3_N = variants {mkN "função" ; mkN "papel" ; } ; --*
lin function_3_V = variants {mkV "funcionar" ; mkV "oficiar" ; } ; --*
lin function_4_N = mkN "função" ; --*
lin function_6_N = variants {mkN "acontecimento" ; mkN "festa" ; mkN "function" ; mkN "occasion" ; } ; --*
lin function_7_N = variants {mkN "função" ; mkN "subrotina" ; mkN "sub-rotina" ; mkN "Sub-rotina" ; } ; --*
lin functional_1_A = mkA "funcional" ; --*
lin functional_2_A = mkA "funcional" ; --*
lin functional_3_A = mkA "funcional" ; --*
lin functional_4_A = variants {mkA "funcional" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin functional_5_A = mkA "funcional" ; --*
lin functional_6_A = mkA "funcional" ; --*
lin functionality_N = mkN "funcionalidade" ; --*
lin functionary_N = variants {mkN "funcionário" ; mkN "servidor" ; } ; --*
lin fund_1_N = variants {mkN "fund" ; mkN "fundo" ; } ; --*
lin fund_2_N = mkN "estoque" ; --*
lin fund_6_V2 = variants {mkV2 (mkV "financiar") ; mkV2 (mkV "suportar") ; } ; --*
lin fundamental_1_A = variants {mkA "básico" ; mkA "central" ; mkA "fundamental" ; } ; --*
lin fundamental_2_A = mkA "fundamental" ; --*
lin fundamental_2_N = variants {mkN "Frequência" ; mkN "frequency" ; mkN "harmonic" ; } ; --*
lin fundamentalism_1_N = mkN "fundamentalismo" ; --*
lin fundamentalist_2_N = mkN "fundamentalista" ; --*
lin fundamentals_N = variants {mkN "abc" ; mkN "abecê" ; mkN "á-bê-cê" ; mkN "principle" ; } ; --*
lin funding_1_N = variants {mkN "apoio" ; mkN "backing" ; mkN "support" ; } ; --*
lin funding_2_N = mkN "financiamento" ; --*
lin funds_N = variants {mkN "finanças" ; mkN "fundos" ; mkN "in" ; mkN "resource" ; } ; --*
lin funeral_N = variants {mkN "enterro" ; mkN "funeral" ; mkN "Funeral" ; } ; --*
lin funereal_A = mkA "fúnebre" ; --*
lin funfair_1_N = variants {mkN "ground" ; mkN "park" ; mkN "parque" ; } ; --*
lin funfair_2_N = variants {mkN "carnaval" ; mkN "feira" ; mkN "quermesse" ; } ; --*
lin fungible_A = mkA "fungível" ; --*
lin fungicidal_A = mkA "fungicida" ; --*
lin fungicide_N = variants {mkN "agent" ; mkN "antifungico" ; mkN "Fungicida" ; mkN "fungicidas" ; } ; --*
lin fungus_N = variants {mkN "fungo" ; mkN "fungos" ; } ; --*
lin funicular_N = variants {mkN "funicular" ; mkN "railway" ; } ; --*
lin funk_1_N = variants {mkN "depressão" ; mkN "funk" ; } ; --*
lin funk_2_N = mkN "Funk" ; --*
lin funk_3_N = mkN "funk" ; --*
lin funk_V = mkV "recuar" ; --*
lin funky_1_A = variants {mkA "fedorento" ; mkA "fétido" ; mkA "malcheiroso" ; } ; --*
lin funnel_2_N = variants {mkN "funil" ; mkN "Funil" ; } ; --*
lin funnel_V2 = variants {mkV2 (mkV "afunilar") ; mkV2 (mkV "canalizar") ; } ; --*
lin funniness_N = mkN "comédia" ; --*
lin funny_1_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin funny_2_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin funny_3_A = variants {mkA "desconfiado" ; mkA "duvidoso" ; mkA "suspeito" ; } ; --*
lin fur_1_N = variants {mkN "pele" ; mkN "peles" ; } ; --*
lin furan_1_N = variants {mkN "furano" ; mkN "Furanos" ; } ; --*
lin furbish_V2 = mkV2 (mkV "polir") ; --*
lin furcula_N = mkN "fúrcula" ; --*
lin furfural_N = mkN "furfural" ; --*
lin furious_1_A = variants {mkA "bravo" ; mkA "feroz" ; mkA "fulo" ; } ; --*
lin furious_2_A = variants {mkA "feroz" ; mkA "furibundo" ; mkA "furioso" ; mkA "raivoso" ; } ; --*
lin furious_3_A = variants {mkA "feroz" ; mkA "furioso" ; mkA "raivoso" ; mkA "tempestuoso" ; } ; --*
lin furlong_N = mkN "furlong" ; --*
lin furlough_N = mkN "licença" ; --*
lin furnace_N = variants {mkN "fogão" ; mkN "fornalha" ; mkN "fornalhas" ; mkN "forno" ; } ; --*
lin furnish_1_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "suprir") ; } ; --*
lin furnish_2_V2 = variants {mkV2 (mkV "fornecer") ; mkV2 (mkV "mobiliar") ; } ; --*
lin furnishing_1_N = mkN "acessório" ; --*
lin furnishing_2_N = variants {mkN "mobília" ; mkN "mobiliário" ; mkN "móvel" ; } ; --*
lin furniture_N = variants {mkN "alfaia" ; mkN "mobília" ; mkN "móvel" ; mkN "of" ; } ; --*
lin furore_1_N = variants {mkN "moda" ; mkN "voga" ; } ; --*
lin furore_2_N = mkN "arrebato" ; --*
lin furosemide_N = mkN "furosemida" ; --*
lin furrow_1_N = variants {mkN "calha" ; mkN "rego" ; } ; --*
lin furrow_1_V2 = mkV2 (mkV "sulcar") ; --*
lin furrow_2_N = variants {mkN "ruga" ; mkN "sulco" ; } ; --*
lin furrow_2_V2 = variants {mkV2 (mkV "corrugar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; } ; --*
lin furrow_3_V2 = mkV2 (mkV "sulcar") ; --*
lin furrow_3_V = mkV "sulcar" ; --*
lin further_1_Adv = mkAdv "mais" ; --*
lin further_1_AdV = mkAdV "mais" ; --*
lin further_1_V2 = mkV2 (mkV "incentivar") ; --*
lin further_2_V2 = variants {mkV2 (mkV "encorajar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "promover") ; } ; --*
lin further_3_Adv = mkAdv "mais" ; --*
lin further_3_AdV = mkAdV "mais" ; --*
lin furtherance_1_N = mkN "promoção" ; --*
lin furtherance_2_N = mkN "progresso" ; --*
lin furthermore_Adv = variants {mkAdv "ademais" ; mkAdv "aliás" ; mkAdv "demais" ; mkAdv "em" ; mkAdv "is" ; mkAdv "mais" ; } ; --*
lin furtive_1_A = variants {mkA "furtivo" ; mkA "sub-reptício" ; } ; --*
lin furunculosis_N = mkN "furunculose" ; --*
lin fury_1_N = variants {mkN "cólera" ; mkN "fúria" ; mkN "ira" ; mkN "raiva" ; } ; --*
lin fury_2_N = variants {mkN "delírio" ; mkN "frenesi" ; mkN "loucura" ; } ; --*
lin fury_3_N = mkN "violência" ; --*
lin fury_4_N = variants {mkN "Erinias" ; mkN "Erínias" ; } ; --*
lin furze_N = variants {mkN "europaeus" ; mkN "gorse" ; mkN "tojo" ; } ; --*
lin fuse_1_N = variants {mkN "fuse" ; mkN "Fusivel" ; } ; --*
lin fuse_1_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin fuse_2_V = mkV "fundir" ; --*
lin fuselage_N = mkN "fuselagem" ; --*
lin fusiform_A = mkA "fusiforme" ; --*
lin fusillade_N = variants {mkN "caudal" ; mkN "salva" ; mkN "saraivada" ; mkN "torrente" ; mkN "voleio" ; } ; --*
lin fusion_1_N = variants {mkN "fusão" ; mkN "unificação" ; } ; --*
lin fusion_2_N = variants {mkN "coalizão" ; mkN "coligação" ; mkN "fusão" ; } ; --*
lin fusion_3_N = mkN "fusão" ; --*
lin fusion_4_N = variants {mkN "fusão" ; mkN "fusion" ; } ; --*
lin fusion_7_N = mkN "fusão" ; --*
lin fuss_1_N = mkN "rebuliço" ; --*
lin fuss_1_V = mkV "criar" ; --*
lin fuss_2_V = variants {mkV "paparicar" ; mkV "superproteger" ; } ; --*
lin fuss_3_N = mkN "desavença" ; --*
lin fuss_4_N = mkN "freneticidade" ; --*
lin fussiness_1_N = mkN "irritabilidade" ; --*
lin fussy_1_A = variants {mkA "birrento" ; mkA "mal" ; mkA "rabugento" ; } ; --*
lin fussy_3_A = variants {mkA "detalhista" ; mkA "exigente" ; } ; --*
lin fusty_1_A = mkA "bolorento" ; --*
lin futile_1_A = variants {mkA "fútil" ; mkA "inútil" ; mkA "nulidade" ; mkA "vão" ; } ; --*
lin futile_2_A = mkA "vão" ; --*
lin futility_N = mkN "futilidade" ; --*
lin futon_N = mkN "futon" ; --*
lin future_1_A = mkA "futuro" ; --*
lin future_1_N = variants {mkN "futuro" ; mkN "porvir" ; mkN "to" ; mkN "vindouro" ; } ; --*
lin future_2_A = mkA "futuro" ; --*
lin future_2_N = variants {mkN "futuro" ; mkN "tense" ; } ; --*
lin future_3_A = variants {mkA "futuro" ; mkA "sucessivo" ; } ; --*
lin future_3_N = mkN "futuro" ; --*
lin future_4_A = mkA "futuro" ; --*
lin futurism_1_N = mkN "futurismo" ; --*
lin futurity_1_N = variants {mkN "futuro" ; mkN "porvir" ; mkN "to" ; mkN "vindouro" ; } ; --*
lin futurology_N = variants {mkN "futurologia" ; mkN "Futurologia" ; mkN "prospecção" ; } ; --*
lin fuzz_2_N = variants {mkN "policial" ; mkN "tira" ; } ; --*
lin fuzz_3_N = variants {mkN "borrado" ; mkN "borrão" ; } ; --*
lin g_1_N = mkN "grama" ; --*
lin g_2_N = variants {mkN "guanina" ; mkN "Guanina" ; } ; --*
lin g_4_N = variants {mkN "mil" ; mkN "milhar" ; mkN "thousand" ; } ; --*
lin g_5_N = variants {mkN "g" ; mkN "G" ; mkN "gê" ; } ; --*
lin g_6_N = mkN "gigabyte" ; --*
lin g_7_N = mkN "gibibyte" ; --*
lin g_8_N = variants {mkN "constant" ; mkN "Constante" ; mkN "gravitational" ; mkN "of" ; } ; --*
lin g_9_N = mkN "g" ; --*
lin gabardine_2_N = mkN "gabardine" ; --*
lin gabardine_3_N = variants {mkN "coat" ; mkN "gabardina" ; } ; --*
lin gabble_V2 = mkV2 (mkV "tagarelar") ; --*
lin gabble_V = mkV "tagarelar" ; --*
lin gabbro_N = mkN "gabro" ; --*
lin gaberdine_N = variants {mkN "coat" ; mkN "gabardina" ; } ; --*
lin gable_1_N = variants {mkN "end" ; mkN "Gablete" ; mkN "wall" ; } ; --*
lin gable_2_N = variants {mkN "Clark" ; mkN "Gable" ; } ; --*
lin gab_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin gabonese_A = variants {mkA "gabonense" ; mkA "gabonês" ; } ; --*
lin gabon_PN = variants {mkPN "Gabao" ; mkPN "Gabão" ; mkPN "Republic" ; } ; --*
lin gadfly_1_N = mkN "peste" ; --*
lin gadget_N = variants {mkN "apetrecho" ; mkN "engenhoca" ; mkN "ferramenta" ; mkN "gadget" ; mkN "objeto" ; mkN "troço" ; } ; --*
lin gadolinite_N = mkN "gadolinita" ; --*
lin gadolinium_N = variants {mkN "gadolíneo" ; mkN "Gadolinio" ; mkN "number" ; } ; --*
lin gaelic_A = variants {mkA "celta" ; mkA "céltica" ; mkA "céltico" ; mkA "gaélica" ; mkA "gaélico" ; } ; --*
lin gaelic_N = mkN "gaélico" ; --*
lin gaffe_N = variants {mkN "gafe" ; mkN "pas" ; mkN "solecismo" ; } ; --*
lin gaffer_1_N = variants {mkN "geezer" ; mkN "velho" ; } ; --*
lin gaffer_3_N = variants {mkN "chefe" ; mkN "supervisor" ; } ; --*
lin gag_1_N = variants {mkN "bazófia" ; mkN "brincadeira" ; mkN "caçoada" ; mkN "chiste" ; mkN "graça" ; mkN "gracejo" ; mkN "piada" ; } ; --*
lin gag_1_V2 = mkV2 (mkV "amordaçar") ; --*
lin gag_2_N = variants {mkN "açaime" ; mkN "açaimo" ; mkN "mordaça" ; mkN "Mordaça" ; } ; --*
lin gag_3_V2 = mkV2 (mkV "amordaçar") ; --*
lin gag_5_V = variants {mkV "afogar" ; mkV "asfixiar" ; mkV "sufocar" ; } ; --*
lin gag_7_V = mkV "tentar" ; --*
lin gaga_1_A = mkA "senil" ; --*
lin gage_1_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin gage_2_N = mkN "bitola" ; --*
lin gage_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "on") ; } ; --*
lin gaiety_1_N = mkN "alegria" ; --*
lin gain_1_N = mkN "aumento" ; --*
lin gain_2_N = variants {mkN "bem" ; mkN "lucro" ; mkN "proveito" ; } ; --*
lin gain_2_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "ganhar") ; mkV2 (mkV "vencer") ; } ; --*
lin gain_3_N = variants {mkN "amplificação" ; mkN "aumento" ; mkN "Ganho" ; } ; --*
lin gain_3_V = variants {mkV "beneficiar" ; mkV "ganhar" ; mkV "lucrar" ; } ; --*
lin gain_4_N = variants {mkN "ganho" ; mkN "lucro" ; } ; --*
lin gain_4_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "chegar") ; } ; --*
lin gain_5_V2 = variants {mkV2 (mkV "ahead") ; mkV2 (mkV "avançar") ; mkV2 (mkV "ganhar") ; mkV2 (mkV "ground") ; mkV2 (mkV "headway") ; } ; --*
lin gain_6_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "crescer") ; mkV2 (mkV "subir") ; } ; --*
lin gain_8_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin gain_9_V2 = variants {mkV2 (mkV "engordar") ; mkV2 (mkV "on") ; } ; --*
lin gainsay_V2 = variants {mkV2 (mkV "desafiar") ; mkV2 (mkV "disputar") ; } ; --*
lin gainsborough_N = variants {mkN "Gainsborough" ; mkN "Thomas" ; } ; --*
lin gainsborough_PN = variants {mkPN "Gainsborough" ; mkPN "Thomas" ; } ; --*
lin gait_1_N = mkN "ritmo" ; --*
lin gait_2_N = mkN "andar" ; --*
lin gait_3_N = mkN "andar" ; --*
lin gaiter_2_N = mkN "polaina" ; --*
lin gal_1_N = mkN "galão" ; --*
lin galactic_1_A = variants {mkA "galáctico" ; mkA "galático" ; } ; --*
lin galactic_2_A = variants {mkA "astronômico" ; mkA "galáctico" ; mkA "galático" ; } ; --*
lin galactocele_N = mkN "Galactocele" ; --*
lin galactosemia_N = mkN "galactosemia" ; --*
lin galactose_N = variants {mkN "galactose" ; mkN "sugar" ; } ; --*
lin gala_N = variants {mkN "affair" ; mkN "gala" ; } ; --*
lin galangal_2_N = variants {mkN "galanga" ; mkN "Galangal" ; mkN "longus" ; } ; --*
lin galantine_N = mkN "galantina" ; --*
lin galaxy_3_N = variants {mkN "galáxia" ; mkN "nebula" ; mkN "nebulosa" ; } ; --*
lin galena_N = mkN "Galena" ; --*
lin gale_N = variants {mkN "tempestade" ; mkN "vendaval" ; mkN "ventania" ; } ; --*
lin galingale_N = variants {mkN "galanga" ; mkN "Galangal" ; mkN "longus" ; } ; --*
lin gall_2_V2 = variants {mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; } ; --*
lin gall_3_N = mkN "galha" ; --*
lin gall_4_N = variants {mkN "amargura" ; mkN "rancor" ; mkN "resentimento" ; mkN "ressentimento" ; } ; --*
lin gall_5_N = variants {mkN "bile" ; mkN "bílis" ; mkN "fel" ; } ; --*
lin gall_6_N = variants {mkN "atrevimento" ; mkN "imprudência" ; mkN "insolência" ; } ; --*
lin gallant_1_A = mkA "animoso" ; --*
lin gallant_1_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin gallantry_1_N = mkN "heroísmo" ; --*
lin gallantry_2_N = mkN "cortesia" ; --*
lin gallantry_3_N = mkN "galanteria" ; --*
lin gallbladder_1_N = variants {mkN "bladder" ; mkN "Vesicula" ; } ; --*
lin galleon_N = variants {mkN "galeão" ; mkN "Galeão" ; } ; --*
lin gallery_2_N = variants {mkN "galeria" ; mkN "varanda" ; } ; --*
lin gallery_3_N = variants {mkN "galeria" ; mkN "gallery" ; } ; --*
lin gallery_4_N = mkN "galeria" ; --*
lin gallery_5_N = mkN "galeria" ; --*
lin galley_1_N = variants {mkN "galé" ; mkN "galera" ; } ; --*
lin galley_slave_2_N = variants {mkN "peão" ; mkN "slave" ; } ; --*
lin gallic_2_A = variants {mkA "francês" ; mkA "gaulês" ; } ; --*
lin gallicism_N = variants {mkN "frases" ; mkN "galicismo" ; mkN "Palavras" ; } ; --*
lin gallium_N = variants {mkN "Galio" ; mkN "gálio" ; mkN "number" ; } ; --*
lin gallon_1_N = mkN "galão" ; --*
lin gallon_2_N = variants {mkN "galão" ; mkN "gallon" ; } ; --*
lin gallop_1_V = mkV "galopar" ; --*
lin gallop_2_V = variants {mkV "andar" ; mkV "galopar" ; } ; --*
lin gallop_N = mkN "galope" ; --*
lin gallows_N = variants {mkN "cadafalso" ; mkN "forca" ; mkN "patíbulo" ; mkN "Patíbulo" ; } ; --*
lin gallstone_N = variants {mkN "cálculo" ; mkN "Colelitíase" ; } ; --*
lin galosh_N = mkN "galocha" ; --*
lin galvanic_1_A = mkA "galvânico" ; --*
lin galvanic_2_A = variants {mkA "elétrico" ; mkA "eletrizante" ; } ; --*
lin galvanism_1_N = mkN "galvanismo" ; --*
lin galvanization_1_N = mkN "galvanização" ; --*
lin galvanization_2_N = mkN "galvanização" ; --*
lin galvanization_3_N = mkN "galvanização" ; --*
lin galvanize_1_V2 = mkV2 (mkV "amendrontar") ; --*
lin galvanize_2_V2 = mkV2 (mkV "galvanizar") ; --*
lin galvanometer_N = mkN "galvanômetro" ; --*
lin galway_PN = mkPN "Galway" ; --*
lin gambian_N = mkN "gambiano" ; --*
lin gambia_PN = variants {mkPN "Gambia" ; mkPN "Gâmbia" ; mkPN "of" ; } ; --*
lin gambit_2_N = mkN "artimanha" ; --*
lin gamble_1_V = variants {mkV "a" ; mkV "arriscar" ; mkV "chances" ; } ; --*
lin gamble_2_V = variants {mkV "apostar" ; mkV "jogar" ; } ; --*
lin gambler_1_N = variants {mkN "apostador" ; mkN "jogador" ; } ; --*
lin gamble_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "jogar") ; } ; --*
lin gambling_N = variants {mkN "aposta" ; mkN "jogo" ; } ; --*
lin gamboge_2_N = variants {mkN "amarelo" ; mkN "limão" ; mkN "yellow" ; } ; --*
lin gambol_N = mkN "brincadeira" ; --*
lin gambol_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin game_1_A = variants {mkA "aleijado" ; mkA "capenga" ; mkA "coxo" ; mkA "estropiado" ; mkA "manco" ; mkA "perneta" ; } ; --*
lin game_1_N = mkN "jogo" ; --*
lin game_2_N = mkN "jogo" ; --*
lin game_3_N = variants {mkN "hobby" ; mkN "passatempo" ; } ; --*
lin game_4_N = variants {mkN "Ave" ; mkN "caça" ; } ; --*
lin game_8_N = variants {mkN "complô" ; mkN "conspiração" ; mkN "plan" ; } ; --*
lin gamekeeper_N = variants {mkN "montez" ; mkN "warden" ; } ; --*
lin gametangium_N = mkN "gametângio" ; --*
lin gamete_N = variants {mkN "Gameta" ; mkN "gâmeta" ; } ; --*
lin gametocyte_N = variants {mkN "gametócito" ; mkN "Gametócito" ; } ; --*
lin gametogenesis_N = variants {mkN "Gametogénese" ; mkN "Gametogênese" ; } ; --*
lin gametophyte_N = mkN "gametófito" ; --*
lin game_V = variants {mkV "apostar" ; mkV "on" ; } ; --*
lin gamey_1_A = mkA "verde" ; --*
lin gamine_1_N = mkN "gamine" ; --*
lin gaming_N = variants {mkN "aposta" ; mkN "jogo" ; } ; --*
lin gamma_1_N = variants {mkN "gama" ; mkN "Gama" ; mkN "Γ" ; } ; --*
lin gammon_1_N = variants {mkN "pernil" ; mkN "presunto" ; mkN "toucinho" ; } ; --*
lin gammon_2_N = mkN "toucinho" ; --*
lin gamut_1_N = mkN "gama" ; --*
lin gamut_2_N = mkN "gama" ; --*
lin gamy_1_A = mkA "verde" ; --*
lin gander_N = mkN "ganso" ; --*
lin gang_1_N = mkN "gangue" ; --*
lin gang_2_N = variants {mkN "gangue" ; mkN "quadrilha" ; } ; --*
lin gang_3_N = variants {mkN "partida" ; mkN "party" ; } ; --*
lin ganglion_N = variants {mkN "gânglio" ; mkN "Gânglio" ; } ; --*
lin gangplank_N = mkN "prancha" ; --*
lin gangrene_1_N = mkN "gangrena" ; --*
lin gangrene_2_N = variants {mkN "gangrena" ; mkN "necrose" ; mkN "Necrose" ; } ; --*
lin gangrene_V2 = variants {mkV2 (mkV "gangrenar") ; mkV2 (mkV "necrosar") ; } ; --*
lin gangrene_V = variants {mkV "gangrenar" ; mkV "necrosar" ; } ; --*
lin gangrenous_A = mkA "gangrenoso" ; --*
lin gangster_N = variants {mkN "bandido" ; mkN "Gangster" ; mkN "gângster" ; mkN "Gângster" ; } ; --*
lin gangway_1_N = mkN "passarela" ; --*
lin gangway_2_N = mkN "prancha" ; --*
lin gangway_3_N = variants {mkN "corredor" ; mkN "passadiço" ; mkN "passagem" ; } ; --*
lin gannet_N = mkN "alcatraz" ; --*
lin gantlet_3_N = mkN "manopla" ; --*
lin gaolbreak_1_N = mkN "evasão" ; --*
lin gaol_N = variants {mkN "cadeia" ; mkN "cana" ; mkN "cárcere" ; mkN "casa" ; mkN "grades" ; mkN "grande" ; mkN "penalidade" ; mkN "penálti" ; mkN "pênalti" ; mkN "penalty" ; mkN "presídio" ; mkN "prisão" ; mkN "prisno" ; mkN "xadrez" ; mkN "xilindró" ; } ; --*
lin gaol_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin gap_2_N = mkN "fenda" ; --*
lin gap_3_N = variants {mkN "buraco" ; mkN "fresta" ; mkN "racha" ; } ; --*
lin gap_6_N = variants {mkN "interrupção" ; mkN "pausa" ; } ; --*
lin gape_1_V = variants {mkV "embasbacar" ; mkV "embasbacar-se" ; mkV "ver" ; } ; --*
lin gape_2_V = mkV "escancarar" ; --*
lin gar_2_N = variants {mkN "Gar" ; mkN "Lepisosteiformes" ; } ; --*
lin garage_1_N = mkN "garagem" ; --*
lin garage_2_N = variants {mkN "department" ; mkN "oficina" ; } ; --*
lin garbage_1_N = variants {mkN "lixo" ; mkN "negar-sea" ; mkN "resíduos" ; mkN "waste" ; } ; --*
lin garbage_2_N = variants {mkN "besteira" ; mkN "bobagem" ; } ; --*
lin garbage_3_N = mkN "Garbage" ; --*
lin garbage_can_N = variants {mkN "barrel" ; mkN "bin" ; mkN "can" ; mkN "cesto" ; mkN "lixeira" ; } ; --*
lin garble_V2 = mkV2 (mkV "distorcer") ; --*
lin garb_N = variants {mkN "roupa" ; mkN "traje" ; mkN "vestido" ; mkN "vestuário" ; } ; --*
lin garb_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vestir") ; } ; --*
lin garden_1_N = variants {mkN "horto" ; mkN "jardim" ; } ; --*
lin garden_2_N = mkN "jardim" ; --*
lin garden_3_N = mkN "jardim" ; --*
lin gardenerFem_1_N = mkN "jardineiro" ; --*
lin gardenerFem_2_N = mkN "jardineiro" ; --*
lin gardenerMasc_1_N = mkN "jardineiro" ; --*
lin gardenerMasc_2_N = mkN "jardineiro" ; --*
lin gardenia_N = mkN "gardênia" ; --*
lin gardening_N = mkN "horticultura" ; --*
lin garden_truck_N = variants {mkN "goods" ; mkN "groceries" ; mkN "hortifruti" ; mkN "truck" ; } ; --*
lin garden_V = mkV "jardinar" ; --*
lin gargantuan_A = variants {mkA "descomunal" ; mkA "elefântico" ; mkA "elefantino" ; mkA "gigantesco" ; } ; --*
lin gargle_1_N = mkN "Enxaguante" ; --*
lin gargle_1_V2 = mkV2 (mkV "gargarejar") ; --*
lin gargle_1_V = mkV "gargarejar" ; --*
lin gargle_2_N = mkN "gargarejo" ; --*
lin gargle_2_V = variants {mkV "bochechar" ; mkV "enxaguar" ; mkV "gargarejar" ; } ; --*
lin gargoyle_1_N = mkN "gárgula" ; --*
lin gargoyle_2_N = variants {mkN "Gargula" ; mkN "gárgula" ; } ; --*
lin garibaldi_1_N = variants {mkN "Garibaldi" ; mkN "Giuseppe" ; } ; --*
lin garish_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin garland_1_N = variants {mkN "Garland" ; mkN "Judy" ; } ; --*
lin garland_2_N = mkN "Garland" ; --*
lin garland_3_N = variants {mkN "antologia" ; mkN "coroadeflores" ; mkN "florilégio" ; } ; --*
lin garland_4_N = variants {mkN "coroa" ; mkN "grinalda" ; mkN "guirlanda" ; mkN "terço" ; } ; --*
lin garlic_1_N = variants {mkN "alho" ; mkN "sativum" ; } ; --*
lin garlic_2_N = mkN "alho" ; --*
lin garment_N = variants {mkN "roupa" ; mkN "vestuário" ; } ; --*
lin garner_1_V2 = mkV2 (mkV "ganhar") ; --*
lin garner_3_V2 = variants {mkV2 (mkV "coletar") ; mkV2 (mkV "coligir") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; } ; --*
lin garner_N = variants {mkN "Celeiro" ; mkN "granel" ; } ; --*
lin garnet_N = mkN "granada" ; --*
lin garnierite_N = mkN "Garnierita" ; --*
lin garnish_1_V2 = mkV2 (mkV "guarnecer") ; --*
lin garnish_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "enfeitar") ; } ; --*
lin garotte_N = variants {mkN "collar" ; mkN "garrote" ; } ; --*
lin garret_N = variants {mkN "ático" ; mkN "mansarda" ; mkN "sótão" ; mkN "trapeira" ; } ; --*
lin garrison_3_N = mkN "guarnição" ; --*
lin garrote_N = variants {mkN "collar" ; mkN "garrote" ; } ; --*
lin garroter_1_N = mkN "estrangulador" ; --*
lin garrotte_N = variants {mkN "collar" ; mkN "garrote" ; } ; --*
lin garrulity_N = mkN "loquacidade" ; --*
lin garrulous_A = variants {mkA "conversador" ; mkA "loquaz" ; mkA "tagarela" ; } ; --*
lin garter_N = mkN "Jarreteira" ; --*
lin gary_PN = mkPN "Gary" ; --*
lin gas_1_N = variants {mkN "gás" ; mkN "state" ; } ; --*
lin gas_2_N = variants {mkN "gás" ; mkN "Gás" ; mkN "Gases" ; } ; --*
lin gas_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin gas_2_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin gas_3_N = variants {mkN "benzina" ; mkN "gasolina" ; } ; --*
lin gas_4_N = variants {mkN "flatulência" ; mkN "peido" ; mkN "pum" ; } ; --*
lin gas_5_N = variants {mkN "acelerador" ; mkN "pedal" ; } ; --*
lin gas_6_N = variants {mkN "gas" ; mkN "gás" ; } ; --*
lin gasbag_1_N = mkN "bacharel" ; --*
lin gas_engine_N = mkN "engine" ; --*
lin gaseous_A = mkA "gasoso" ; --*
lin gash_1_N = mkN "corte" ; --*
lin gash_3_N = mkN "corte" ; --*
lin gasification_N = variants {mkN "gaseificação" ; mkN "Gasificação" ; } ; --*
lin gasify_V = variants {mkV "evaporar" ; mkV "gaseificar" ; mkV "vaporizar" ; } ; --*
lin gasohol_N = mkN "mistura" ; --*
lin gasolene_N = variants {mkN "benzina" ; mkN "gasolina" ; } ; --*
lin gasoline_N = variants {mkN "benzina" ; mkN "gasolina" ; } ; --*
lin gasp_N = mkN "ofego" ; --*
lin gasp_V = variants {mkV "bufar" ; mkV "ofegar" ; } ; --*
lin gas_station_N = mkN "station" ; --*
lin gassy_1_A = mkA "gasoso" ; --*
lin gastrectomy_N = mkN "gastrectomia" ; --*
lin gastric_A = mkA "gástrico" ; --*
lin gastrin_N = variants {mkN "gastrina" ; mkN "Gastrina" ; } ; --*
lin gastritis_N = mkN "gastrite" ; --*
lin gastrocnemius_N = variants {mkN "muscle" ; mkN "Músculo" ; } ; --*
lin gastroduodenal_A = mkA "gastroduodenal" ; --*
lin gastroenteritis_N = variants {mkN "flu" ; mkN "gastroenterite" ; } ; --*
lin gastroenterology_N = mkN "gastroenterologia" ; --*
lin gastrointestinal_A = mkA "gastrointestinal" ; --*
lin gastronomic_1_A = variants {mkA "gastronómico" ; mkA "gastronômico" ; } ; --*
lin gastronomy_1_N = variants {mkN "cozinha" ; mkN "gastronomia" ; mkN "Gastronomia" ; } ; --*
lin gastronomy_2_N = mkN "gastronomia" ; --*
lin gastropod_N = mkN "gastrópodes" ; --*
lin gastrostomy_N = variants {mkN "gastrostomia" ; mkN "Gastrostomia" ; } ; --*
lin gastrula_N = mkN "gástrula" ; --*
lin gastrulation_N = mkN "gastrulação" ; --*
lin gasworks_N = mkN "fábrica" ; --*
lin gate_1_N = variants {mkN "porta" ; mkN "portão" ; } ; --*
lin gate_2_N = variants {mkN "gate" ; mkN "Porta" ; } ; --*
lin gatekeeper_2_N = variants {mkN "guard" ; mkN "porteiro" ; mkN "porter" ; } ; --*
lin gateway_N = variants {mkN "gateway" ; mkN "portão" ; } ; --*
lin gather_1_V2 = variants {mkV2 (mkV "coletar") ; mkV2 (mkV "coligir") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; } ; --*
lin gather_2_N = mkN "reunião" ; --*
lin gather_2_V = mkV "reunir" ; --*
lin gather_3_V = variants {mkV "acumular" ; mkV "aglomerar" ; mkV "amontoar" ; mkV "conglomerar" ; mkV "up" ; } ; --*
lin gather_6_V2 = variants {mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; } ; --*
lin gatherer_2_N = variants {mkN "coletor" ; mkN "recolhedor" ; } ; --*
lin gathering_1_N = mkN "reunião" ; --*
lin gathering_2_N = variants {mkN "assembléia" ; mkN "reunião" ; } ; --*
lin gathering_3_N = mkN "reunião" ; --*
lin gather_VS = mkVS (mkV "concluir") ; --*
lin gatt_N = variants {mkN "Acordo" ; mkN "Agreement" ; } ; --*
lin gaucherie_2_N = variants {mkN "gafe" ; mkN "pas" ; mkN "solecismo" ; } ; --*
lin gaucho_N = mkN "gaúcho" ; --*
lin gaudery_N = mkN "ostentação" ; --*
lin gaudy_1_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin gaudy_2_A = mkA "vistoso" ; --*
lin gauge_1_N = mkN "bitola" ; --*
lin gauge_1_V2 = variants {mkV2 (mkV "chutar") ; mkV2 (mkV "estimar") ; } ; --*
lin gauge_3_N = mkN "bitola" ; --*
lin gauge_5_N = mkN "calibre" ; --*
lin gaul_3_N = mkN "Gália" ; --*
lin gaunt_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin gauntlet_3_N = mkN "manopla" ; --*
lin gaur_N = variants {mkN "Gauro" ; mkN "gaurus" ; } ; --*
lin gauss_1_N = mkN "gauss" ; --*
lin gauze_1_N = variants {mkN "bandage" ; mkN "gaze" ; } ; --*
lin gauze_2_N = mkN "gaze" ; --*
lin gauzy_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin gavel_N = mkN "malhete" ; --*
lin gavial_N = variants {mkN "gangeticus" ; mkN "gavial" ; } ; --*
lin gavotte_1_N = mkN "gavota" ; --*
lin gawk_N = mkN "bobo" ; --*
lin gawky_A = variants {mkA "atrapalhado" ; mkA "desajeitado" ; } ; --*
lin gawp_1_V = variants {mkV "embasbacar" ; mkV "embasbacar-se" ; mkV "ver" ; } ; --*
lin gay_1_A = mkA "ensolarado" ; --*
lin gay_2_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "jovial" ; } ; --*
lin gay_5_A = variants {mkA "festivo" ; mkA "vívido" ; } ; --*
lin gay_6_A = variants {mkA "bicha" ; mkA "gay" ; mkA "veado" ; } ; --*
lin gay_N = variants {mkN "bicha" ; mkN "gay" ; mkN "homo" ; mkN "homossexual" ; mkN "lésbica" ; mkN "sapatão" ; mkN "veado" ; } ; --*
lin gayness_N = mkN "homossexualidade" ; --*
lin gazebo_N = variants {mkN "coreto" ; mkN "pavilhão" ; } ; --*
lin gazelle_N = mkN "gazela" ; --*
lin gaze_N = mkN "olhar" ; --*
lin gazetteer_2_N = mkN "Gazetteer" ; --*
lin gazette_N = variants {mkN "folha" ; mkN "gazeta" ; mkN "jornal" ; } ; --*
lin gaze_V = variants {mkV "contemplar" ; mkV "encarar" ; mkV "fitar" ; mkV "fixar" ; mkV "olhar" ; mkV "ver" ; } ; --*
lin gazpacho_N = mkN "gaspacho" ; --*
lin gazump_1_V2 = mkV2 (mkV "roubar") ; --*
lin gazump_1_V = mkV "roubar" ; --*
lin gb_1_PN = mkPN "Sarin" ; --*
lin gb_3_PN = mkPN "gigabit" ; --*
lin gb_4_PN = mkPN "gigabyte" ; --*
lin gb_5_PN = mkPN "gibibyte" ; --*
lin gb_6_PN = variants {mkPN "Britain" ; mkPN "Grã-Bretanha" ; } ; --*
lin gear_1_N = variants {mkN "engrenagem" ; mkN "wheel" ; } ; --*
lin gear_3_N = variants {mkN "marcha" ; mkN "mechanism" ; } ; --*
lin gear_4_N = mkN "parafernália" ; --*
lin gearbox_1_N = variants {mkN "box" ; mkN "caixa" ; mkN "case" ; } ; --*
lin gear_case_N = variants {mkN "box" ; mkN "caixa" ; mkN "case" ; } ; --*
lin gear_up_V = variants {mkV "aprontar" ; mkV "preparar" ; mkV "up" ; } ; --*
lin gear_V2 = mkV2 (mkV "adaptar") ; --*
lin gecko_N = variants {mkN "lagartixa" ; mkN "osga" ; } ; --*
lin geek_1_N = mkN "geek" ; --*
lin geek_2_N = variants {mkN "excêntrico" ; mkN "geek" ; mkN "person" ; } ; --*
lin geiger_N = variants {mkN "Geiger" ; mkN "Hans" ; } ; --*
lin geisha_N = variants {mkN "girl" ; mkN "gueixa" ; } ; --*
lin gel_1_N = mkN "gel" ; --*
lin gel_3_N = mkN "gelatina" ; --*
lin gelatin_1_N = mkN "gelatina" ; --*
lin gelatin_2_N = mkN "gelatina" ; --*
lin gelatin_3_N = mkN "gelatina" ; --*
lin gelatine_N = mkN "gelatina" ; --*
lin gelatinous_A = mkA "gelatinoso" ; --*
lin gelding_N = variants {mkN "capão" ; mkN "castrado" ; } ; --*
lin gem_1_N = mkN "tesouro" ; --*
lin gem_2_N = variants {mkN "gema" ; mkN "Gemas" ; mkN "pedra" ; } ; --*
lin gem_4_N = mkN "Queque" ; --*
lin gem_5_N = variants {mkN "gema" ; mkN "joia" ; mkN "jóia" ; mkN "stone" ; } ; --*
lin gemination_1_N = mkN "geminação" ; --*
lin gemination_2_N = variants {mkN "duplicação" ; mkN "replicação" ; } ; --*
lin gemini_1_PN = mkPN "Gêmeos" ; --*
lin gemini_2_PN = variants {mkPN "Gêmeos" ; mkPN "Gemini" ; } ; --*
lin gemini_3_PN = variants {mkPN "Gémeos" ; mkPN "Gêmeos" ; mkPN "the" ; } ; --*
lin gemsbok_1_N = variants {mkN "gazella" ; mkN "Órix" ; } ; --*
lin gendarme_N = mkN "gendarme" ; --*
lin gendarmerie_1_N = variants {mkN "gendarmaria" ; mkN "Gendarmaria" ; } ; --*
lin gender_1_N = variants {mkN "gender" ; mkN "gênero" ; } ; --*
lin gender_2_N = variants {mkN "gênero" ; mkN "sexo" ; mkN "sexualidade" ; } ; --*
lin genealogic_A = mkA "genealógico" ; --*
lin genealogical_A = mkA "genealógico" ; --*
lin genealogist_N = mkN "genealogista" ; --*
lin genealogy_1_N = variants {mkN "genealogia" ; mkN "tree" ; } ; --*
lin genealogy_2_N = variants {mkN "genealogia" ; mkN "Genealogia" ; } ; --*
lin gene_N = variants {mkN "gene" ; mkN "genes" ; mkN "Genes" ; mkN "guen" ; } ; --*
lin general_1_A = mkA "geral" ; --*
lin general_1_N = mkN "general" ; --*
lin general_3_A = mkA "geral" ; --*
lin general_6_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin generalissimo_N = variants {mkN "Generalissimo" ; mkN "generalíssimo" ; mkN "in" ; } ; --*
lin generality_1_N = variants {mkN "generalidade" ; mkN "generalização" ; } ; --*
lin generality_2_N = mkN "generalidade" ; --*
lin generalization_1_N = variants {mkN "generalização" ; mkN "Raciocínio" ; mkN "reasoning" ; } ; --*
lin generalization_2_N = variants {mkN "generalidade" ; mkN "generalização" ; } ; --*
lin generalization_3_N = variants {mkN "generalização" ; mkN "Generalização" ; } ; --*
lin generalization_4_N = variants {mkN "generalisation" ; mkN "generalização" ; mkN "generalization" ; } ; --*
lin generalize_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "generalizar") ; } ; --*
lin generalize_1_V = variants {mkV "concluir" ; mkV "deduzir" ; mkV "generalizar" ; } ; --*
lin generalize_2_V2 = mkV2 (mkV "generalizar") ; --*
lin generalize_2_V = mkV "generalizar" ; --*
lin generalize_3_V2 = mkV2 (mkV "popularizar") ; --*
lin generally_1_AdV = variants {mkAdV "and" ; mkAdV "em" ; mkAdV "generalmente" ; mkAdV "often" ; } ; --*
lin generally_2_Adv = variants {mkAdv "em" ; mkAdv "general" ; mkAdv "the" ; } ; --*
lin generally_3_Adv = variants {mkAdv "em" ; mkAdv "speaking" ; } ; --*
lin generate_1_V2 = variants {mkV2 (mkV "engendrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; } ; --*
lin generate_2_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "gerar") ; } ; --*
lin generate_3_V2 = mkV2 (mkV "fazer") ; --*
lin generate_4_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin generation_1_N = mkN "geração" ; --*
lin generation_2_N = mkN "geração" ; --*
lin generation_3_N = mkN "geração" ; --*
lin generation_4_N = mkN "geração" ; --*
lin generation_7_N = mkN "geração" ; --*
lin generative_1_A = mkA "produtivo" ; --*
lin generator_1_N = mkN "gerador" ; --*
lin generator_2_N = mkN "gerador" ; --*
lin generator_3_N = variants {mkN "artífice" ; mkN "autor" ; mkN "escritor" ; } ; --*
lin generator_4_N = mkN "gerador" ; --*
lin generic_2_N = mkN "produto" ; --*
lin generosity_1_N = mkN "generosidade" ; --*
lin generosity_2_N = mkN "generosidade" ; --*
lin generous_1_A = mkA "liberal" ; --*
lin generous_2_A = mkA "liberal" ; --*
lin generous_3_A = variants {mkA "desapegado" ; mkA "generoso" ; mkA "liberal" ; } ; --*
lin genesis_2_N = variants {mkN "Gênesis" ; mkN "of" ; } ; --*
lin genet_2_N = variants {mkN "Genet" ; mkN "Jean" ; } ; --*
lin genet_3_N = variants {mkN "geneta" ; mkN "genetta" ; } ; --*
lin genetic_2_A = variants {mkA "genético" ; mkA "gênico" ; } ; --*
lin genetic_3_A = mkA "genético" ; --*
lin genetic_4_A = mkA "genético" ; --*
lin geneticist_N = variants {mkN "geneticista" ; mkN "Geneticistas" ; } ; --*
lin genetics_N = variants {mkN "Genetica" ; mkN "Genética" ; mkN "science" ; } ; --*
lin genet_PN = variants {mkPN "Charles" ; mkPN "Genet" ; mkPN "Genetta" ; } ; --*
lin geneva_1_N = mkN "Genebra" ; --*
lin geneva_1_PN = mkPN "Genebra" ; --*
lin genial_1_A = variants {mkA "afável" ; mkA "amável" ; } ; --*
lin genial_2_A = mkA "mandibular" ; --*
lin geniality_N = variants {mkN "afabilidade" ; mkN "amabilidade" ; mkN "doçura" ; } ; --*
lin genic_A = variants {mkA "genético" ; mkA "gênico" ; } ; --*
lin genie_N = variants {mkN "Génio" ; mkN "gênio" ; mkN "Gênio" ; } ; --*
lin genip_1_N = variants {mkN "berry" ; mkN "bijuga" ; mkN "bijugatus" ; mkN "lime" ; mkN "mamoncillo" ; } ; --*
lin genital_A = variants {mkA "genital" ; mkA "venérea" ; mkA "venéreo" ; } ; --*
lin genitalia_1_N = variants {mkN "genitália" ; mkN "organ" ; mkN "parts" ; mkN "sexo" ; } ; --*
lin genitive_A = mkA "genitiva" ; --*
lin genitive_N = variants {mkN "case" ; mkN "caso" ; mkN "genitivo" ; } ; --*
lin genitor_N = mkN "genitor" ; --*
lin genitourinary_A = mkA "genitourinário" ; --*
lin genius_1_N = variants {mkN "gênia" ; mkN "gênio" ; } ; --*
lin genius_2_N = variants {mkN "brilho" ; mkN "gênia" ; mkN "génio" ; mkN "talento" ; } ; --*
lin genius_3_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin genius_5_N = variants {mkN "aptidão" ; mkN "dom" ; mkN "talento" ; } ; --*
lin genius_loci_2_N = mkN "loci" ; --*
lin genoa_PN = variants {mkPN "Genova" ; mkPN "Génova" ; mkPN "Gênova" ; } ; --*
lin genocide_N = variants {mkN "extermination" ; mkN "genocídio" ; mkN "murder" ; } ; --*
lin genome_N = mkN "genoma" ; --*
lin genomics_N = variants {mkN "Genómica" ; mkN "Genômica" ; } ; --*
lin genotype_1_N = mkN "genótipo" ; --*
lin genotype_2_N = variants {mkN "constitution" ; mkN "genótipo" ; } ; --*
lin genotypical_1_A = mkA "genotípico" ; --*
lin genova_PN = variants {mkPN "Genova" ; mkPN "Génova" ; mkPN "Gênova" ; } ; --*
lin genre_1_N = variants {mkN "espécie" ; mkN "género" ; mkN "jaez" ; mkN "laia" ; mkN "qualidade" ; mkN "tipo" ; mkN "variedade" ; } ; --*
lin genre_2_N = variants {mkN "Gênero" ; mkN "genre" ; mkN "style" ; } ; --*
lin genre_3_N = variants {mkN "Género" ; mkN "genre" ; mkN "style" ; } ; --*
lin gent_2_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin gent_3_N = mkN "Gante" ; --*
lin gentamicin_N = variants {mkN "gentamicina" ; mkN "Gentamicina" ; } ; --*
lin genteel_A = variants {mkA "cultivado" ; mkA "gentil" ; mkA "refinado" ; } ; --*
lin gentianella_1_N = mkN "Gentianella" ; --*
lin gentian_N = mkN "genciana" ; --*
lin gentile_1_N = mkN "pagão" ; --*
lin gentile_2_N = mkN "pagão" ; --*
lin gentile_3_N = variants {mkN "goy" ; mkN "pagão" ; } ; --*
lin gentile_4_N = mkN "cristão" ; --*
lin gentle_1_A = mkA "suave" ; --*
lin gentle_4_A = variants {mkA "aristocrata" ; mkA "aristocrático" ; } ; --*
lin gentle_5_A = mkA "dócil" ; --*
lin gentleman_1_N = variants {mkN "cavalheiro" ; mkN "senhor" ; } ; --*
lin gentleness_2_N = variants {mkN "macieza" ; mkN "suavidade" ; } ; --*
lin gentlewoman_N = variants {mkN "dama" ; mkN "madame" ; mkN "senhora" ; } ; --*
lin gentrification_N = mkN "gentrificação" ; --*
lin gentry_N = mkN "aristocracia" ; --*
lin genuflection_N = mkN "genuflexão" ; --*
lin genuflexion_N = mkN "genuflexão" ; --*
lin genuine_1_A = variants {mkA "autêntico" ; mkA "genuíno" ; mkA "legítimo" ; } ; --*
lin genuine_2_A = variants {mkA "autêntico" ; mkA "verdadeiro" ; } ; --*
lin genuine_3_A = variants {mkA "autêntico" ; mkA "genuíno" ; mkA "literal" ; mkA "verdadeiro" ; } ; --*
lin genuineness_1_N = mkN "autenticidade" ; --*
lin genuineness_2_N = variants {mkN "autenticidade" ; mkN "legitimidade" ; } ; --*
lin genus_1_N = variants {mkN "classe" ; mkN "género" ; mkN "gênero" ; } ; --*
lin genus_2_N = variants {mkN "género" ; mkN "gênero" ; mkN "Gênero" ; } ; --*
lin geocentric_A = mkA "geocêntrico" ; --*
lin geochemistry_N = variants {mkN "geoquímica" ; mkN "Geoquímica" ; } ; --*
lin geode_N = mkN "geode" ; --*
lin geodesic_N = variants {mkN "geodésica" ; mkN "line" ; } ; --*
lin geodesy_N = variants {mkN "Geodesia" ; mkN "Geodésia" ; } ; --*
lin geographer_N = variants {mkN "geógrafo" ; mkN "Geógrafos" ; } ; --*
lin geographic_1_A = mkA "geográfico" ; --*
lin geographic_2_A = mkA "geográfico" ; --*
lin geographical_1_A = mkA "geográfico" ; --*
lin geographical_2_A = mkA "geográfico" ; --*
lin geography_N = mkN "geografia" ; --*
lin geologic_A = mkA "geológico" ; --*
lin geological_A = mkA "geológico" ; --*
lin geologistFem_N = mkN "geólogo" ; --*
lin geologistMasc_N = mkN "geólogo" ; --*
lin geology_N = mkN "geologia" ; --*
lin geomancy_N = variants {mkN "geomancia" ; mkN "Geomancia" ; } ; --*
lin geometric_1_A = mkA "geométrico" ; --*
lin geometric_2_A = mkA "geométrico" ; --*
lin geometrical_1_A = mkA "geométrico" ; --*
lin geometrical_2_A = mkA "geométrico" ; --*
lin geometry_N = mkN "geometria" ; --*
lin geomorphologic_1_A = mkA "estrutural" ; --*
lin geophagy_1_N = variants {mkN "geofagia" ; mkN "Geofagia" ; } ; --*
lin geophysical_A = mkA "geofísico" ; --*
lin geophysics_N = variants {mkN "Geofisica" ; mkN "geofísica" ; mkN "science" ; } ; --*
lin geopolitical_A = mkA "geopolítico" ; --*
lin geopolitics_N = variants {mkN "Geopolitica" ; mkN "geopolítica" ; mkN "Geopolítica" ; } ; --*
lin george_1_PN = variants {mkPN "George" ; mkPN "São" ; } ; --*
lin george_7_PN = variants {mkPN "George" ; mkPN "I" ; } ; --*
lin georgia_1_PN = variants {mkPN "Geórgia" ; mkPN "State" ; } ; --*
lin georgia_2_PN = variants {mkPN "Georgia" ; mkPN "Geórgia" ; } ; --*
lin georgia_3_PN = mkPN "Geórgia" ; --*
lin georgian_1_A = mkA "geórgio" ; --*
lin georgian_1_N = mkN "alfabeto" ; --*
lin georgian_2_A = variants {mkA "georgiano" ; mkA "geórgico" ; } ; --*
lin georgian_2_N = mkN "georgiano" ; --*
lin georgian_3_A = variants {mkA "da" ; mkA "georgiano" ; } ; --*
lin georgian_3_N = mkN "Língua" ; --*
lin geostationary_A = mkA "geoestacionário" ; --*
lin geotropism_N = mkN "geotropismo" ; --*
lin geranium_N = mkN "gerânio" ; --*
lin gerbil_1_N = variants {mkN "Gerbillinae" ; mkN "gerbilo" ; mkN "rato-do-deserto" ; } ; --*
lin geriatrician_N = mkN "geriatra" ; --*
lin geriatrics_N = variants {mkN "geriatria" ; mkN "gerontologia" ; mkN "Gerontologia" ; } ; --*
lin germ_1_N = mkN "germes" ; --*
lin germ_3_N = mkN "micróbio" ; --*
lin german_A = variants {mkA "alemão" ; mkA "germânico" ; } ; --*
lin germanFem_N = variants {mkN "alemã" ; mkN "alemão" ; } ; --*
lin germanic_1_A = mkA "germânico" ; --*
lin germanic_2_A = mkA "teutônico" ; --*
lin germanium_N = variants {mkN "Germanio" ; mkN "germânio" ; mkN "number" ; } ; --*
lin germanMasc_N = variants {mkN "alemã" ; mkN "alemão" ; } ; --*
lin german_N = variants {mkN "alemão" ; mkN "German" ; mkN "language" ; } ; --*
lin germany_PN = variants {mkPN "Alemanha" ; mkPN "Republic" ; } ; --*
lin germicide_N = variants {mkN "desinfectante" ; mkN "desinfetante" ; mkN "germicida" ; } ; --*
lin germinate_1_V = variants {mkV "forth" ; mkV "germinar" ; } ; --*
lin germinate_2_V2 = variants {mkV2 (mkV "desenvolver") ; mkV2 (mkV "elaborar") ; } ; --*
lin germinate_3_V2 = variants {mkV2 (mkV "brotar") ; mkV2 (mkV "germinar") ; } ; --*
lin germination_1_N = variants {mkN "brotação" ; mkN "germinação" ; } ; --*
lin germination_2_N = mkN "germinação" ; --*
lin gerontocracy_N = mkN "gerontocracia" ; --*
lin gerontologist_N = mkN "geriatra" ; --*
lin gerontology_N = variants {mkN "geriatria" ; mkN "gerontologia" ; mkN "Gerontologia" ; } ; --*
lin gerund_N = mkN "gerúndio" ; --*
lin gestapo_N = variants {mkN "Gestapo" ; mkN "GESTAPO" ; } ; --*
lin gestation_1_N = variants {mkN "gestação" ; mkN "period" ; } ; --*
lin gestation_2_N = variants {mkN "embaraço" ; mkN "gravidez" ; } ; --*
lin gesticulate_V = mkV "gesticular" ; --*
lin gesticulation_N = mkN "gesticulação" ; --*
lin gesture_1_N = variants {mkN "gesto" ; mkN "sinal" ; } ; --*
lin gesture_2_N = variants {mkN "gesto" ; mkN "Gesto" ; mkN "Gestos" ; } ; --*
lin gesture_3_N = mkN "gesto" ; --*
lin gesture_V = mkV "gesticular" ; --*
lin get_10_V2V = mkV2V (mkV "induzir") ; --*
lin get_11_V2 = variants {mkV2 (mkV "capturar") ; mkV2 (mkV "pegar") ; } ; --*
lin get_12_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "crescer") ; mkV2 (mkV "ganhar") ; } ; --*
lin get_13_V2 = variants {mkV2 (mkV "contagiar-se") ; mkV2 (mkV "contrair") ; } ; --*
lin get_17_V2 = variants {mkV2 (mkV "comprender") ; mkV2 (mkV "entender") ; mkV2 (mkV "pegar") ; } ; --*
lin get_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "comprar") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin get_20_V2 = variants {mkV2 (mkV "obter") ; mkV2 (mkV "ter") ; } ; --*
lin get_21_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "obter") ; } ; --*
lin get_22_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "comprar") ; } ; --*
lin get_25_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "receber") ; } ; --*
lin get_26_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "saia") ; } ; --*
lin get_26_V2V = variants {mkV2V (mkV "off") ; mkV2V (mkV "saia") ; } ; --*
lin get_26_VV = variants {mkVV (mkV "off") ; mkVV (mkV "saia") ; } ; --*
lin get_28_V2 = variants {mkV2 (mkV "irritar") ; mkV2 (mkV "under") ; } ; --*
lin get_29_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "tocar") ; } ; --*
lin get_2_VA = variants {mkVA (mkV "estar") ; mkVA (mkV "ficar") ; mkVA (mkV "tornar") ; } ; --*
lin get_2_VV = variants {mkVV (mkV "estar") ; mkVV (mkV "ficar") ; mkVV (mkV "tornar") ; } ; --*
lin get_33_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin get_34_VV = variants {mkVV (mkV "about") ; mkVV (mkV "começar") ; mkVV (mkV "down") ; mkVV (mkV "iniciar") ; mkVV (mkV "out") ; mkVV (mkV "principiar") ; } ; --*
lin get_35_V2 = variants {mkV2 (mkV "contrair") ; mkV2 (mkV "sofrer") ; mkV2 (mkV "ter") ; } ; --*
lin get_36_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin get_3_V2 = mkV2 (mkV "tornar") ; --*
lin get_4_V2 = variants {mkV2 (mkV "incorrer") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin get_6_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin get_7_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "passar") ; mkV2 (mkV "ter") ; } ; --*
lin get_7_VA = variants {mkVA (mkV "experimentar") ; mkVA (mkV "passar") ; mkVA (mkV "ter") ; } ; --*
lin get_across_2_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "clicar") ; mkV2 (mkV "despontar") ; mkV2 (mkV "entender") ; mkV2 (mkV "home") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; mkV2 (mkV "through") ; } ; --*
lin get_across_2_V = variants {mkV "across" ; mkV "clicar" ; mkV "despontar" ; mkV "entender" ; mkV "home" ; mkV "in" ; mkV "into" ; mkV "through" ; } ; --*
lin get_across_3_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin get_ahead_V = variants {mkV "ahead" ; mkV "avançar" ; mkV "ganhar" ; mkV "ground" ; mkV "headway" ; } ; --*
lin get_along_3_V = variants {mkV "along" ; mkV "avançar" ; mkV "on" ; mkV "progredir" ; mkV "up" ; } ; --*
lin get_around_2_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "contornar") ; } ; --*
lin get_at_1_V2 = variants {mkV2 (mkV "acessar") ; mkV2 (mkV "at") ; } ; --*
lin get_at_3_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin get_away_1_V = variants {mkV "away" ; mkV "escapar" ; mkV "fugir" ; mkV "loose" ; } ; --*
lin getaway_2_N = mkN "fuga" ; --*
lin get_away_3_V = variants {mkV "away" ; mkV "escapar" ; } ; --*
lin get_behind_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "behind") ; mkV2 (mkV "ficar") ; } ; --*
lin get_by_on_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "do") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; mkV2 (mkV "sobreviver") ; mkV2 (mkV "virar-se") ; } ; --*
lin get_down_3_V2 = variants {mkV2 (mkV "apear") ; mkV2 (mkV "apear-se") ; mkV2 (mkV "desmontar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; } ; --*
lin get_down_3_V = variants {mkV "apear" ; mkV "apear-se" ; mkV "desmontar" ; mkV "down" ; mkV "off" ; } ; --*
lin get_down_4_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "engolir") ; } ; --*
lin get_down_5_V2 = variants {mkV2 (mkV "dejectar") ; mkV2 (mkV "dejetar") ; mkV2 (mkV "deprimir") ; mkV2 (mkV "desanimar") ; mkV2 (mkV "desmoralizar") ; mkV2 (mkV "down") ; } ; --*
lin get_down_6_V2 = mkV2 (mkV "down") ; --*
lin get_down_6_V = mkV "down" ; --*
lin get_down_to_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; mkV2 (mkV "down") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "out") ; mkV2 (mkV "principiar") ; } ; --*
lin get_even_1_V = variants {mkV "equalizar" ; mkV "even" ; } ; --*
lin get_in_1_V2 = variants {mkV2 (mkV "entrar") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin get_in_2_V2 = variants {mkV2 (mkV "alcançar") ; mkV2 (mkV "far") ; mkV2 (mkV "in") ; mkV2 (mkV "it") ; } ; --*
lin get_in_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin get_in_3_V = variants {mkV "in" ; mkV "into" ; } ; --*
lin get_in_4_V = mkV "in" ; --*
lin get_into_2_V2 = variants {mkV2 (mkV "entrar") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin get_into_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin get_into_5_V2 = variants {mkV2 (mkV "caber") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "pôr") ; mkV2 (mkV "usar") ; mkV2 (mkV "vestir") ; } ; --*
lin get_in_V3 = mkV3 (mkV "tornar") ; --*
lin get_it_1_V = variants {mkV "entender" ; mkV "it" ; mkV "on" ; mkV "onto" ; mkV "wise" ; } ; --*
lin get_it_on_V = variants {mkV "a" ; mkV "comer" ; mkV "foder" ; mkV "in" ; mkV "intercourse" ; mkV "intimate" ; mkV "it" ; mkV "laid" ; mkV "love" ; mkV "meter" ; mkV "montar" ; mkV "out" ; mkV "pinar" ; mkV "sex" ; mkV "together" ; mkV "transar" ; mkV "trepar" ; mkV "with" ; } ; --*
lin get_off_1_V2 = mkV2 (mkV "off") ; --*
lin get_off_1_V = mkV "off" ; --*
lin get_off_3_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "off") ; } ; --*
lin get_off_7_V2 = variants {mkV2 (mkV "apear") ; mkV2 (mkV "apear-se") ; mkV2 (mkV "desmontar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; } ; --*
lin get_off_7_V = variants {mkV "apear" ; mkV "apear-se" ; mkV "desmontar" ; mkV "down" ; mkV "off" ; } ; --*
lin get_off_9_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "expedir") ; mkV2 (mkV "off") ; mkV2 (mkV "postar") ; } ; --*
lin get_on_2_V2 = variants {mkV2 (mkV "embarcar") ; mkV2 (mkV "on") ; } ; --*
lin get_on_2_V = variants {mkV "embarcar" ; mkV "on" ; } ; --*
lin get_on_3_V2 = variants {mkV2 (mkV "montar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin get_on_6_V = variants {mkV "along" ; mkV "avançar" ; mkV "on" ; mkV "progredir" ; mkV "up" ; } ; --*
lin get_on_7_V = variants {mkV "envelhecer" ; mkV "on" ; } ; --*
lin get_onto_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "it") ; mkV2 (mkV "on") ; mkV2 (mkV "onto") ; mkV2 (mkV "wise") ; } ; --*
lin get_out_1_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "out") ; mkV2 (mkV "sair") ; } ; --*
lin get_out_5_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin get_out_7_V = variants {mkV "away" ; mkV "by" ; mkV "escapar" ; mkV "off" ; mkV "out" ; } ; --*
lin get_over_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin get_over_4_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin get_round_2_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "contornar") ; } ; --*
lin gettable_1_A = variants {mkA "adquirível" ; mkA "obtenível" ; } ; --*
lin get_through_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin get_through_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "through") ; } ; --*
lin get_through_2_V3 = variants {mkV3 (mkV "away") ; mkV3 (mkV "through") ; } ; --*
lin get_through_2_V = variants {mkV "away" ; mkV "through" ; } ; --*
lin get_through_3_V2 = mkV2 (mkV "through") ; --*
lin get_through_4_V2 = variants {mkV2 (mkV "contactar") ; mkV2 (mkV "contatar") ; mkV2 (mkV "estar") ; mkV2 (mkV "hold") ; mkV2 (mkV "manter") ; mkV2 (mkV "through") ; } ; --*
lin get_through_5_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "clicar") ; mkV2 (mkV "despontar") ; mkV2 (mkV "entender") ; mkV2 (mkV "home") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; mkV2 (mkV "through") ; } ; --*
lin get_through_5_V = variants {mkV "across" ; mkV "clicar" ; mkV "despontar" ; mkV "entender" ; mkV "home" ; mkV "in" ; mkV "into" ; mkV "through" ; } ; --*
lin get_to_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin get_to_3_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin get_to_5_V2 = variants {mkV2 (mkV "chegar") ; mkV2 (mkV "vir") ; } ; --*
lin get_together_1_V2 = variants {mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; } ; --*
lin get_together_3_V = variants {mkV "colaborar" ; mkV "cooperar" ; mkV "forces" ; mkV "together" ; } ; --*
lin get_together_4_V = variants {mkV "associar-se" ; mkV "filiar-se" ; mkV "in" ; mkV "ingressar" ; mkV "juntar-se" ; mkV "together" ; } ; --*
lin get_together_N = variants {mkN "festa" ; mkN "reunião" ; mkN "together" ; } ; --*
lin get_up_1_V = variants {mkV "se" ; mkV "up" ; } ; --*
lin get_up_2_V = variants {mkV "acordar" ; mkV "out" ; mkV "up" ; } ; --*
lin get_up_3_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "elevar") ; mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin get_up_4_V2 = mkV2 (mkV "up") ; --*
lin get_up_7_V2 = variants {mkV2 (mkV "confabular") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin get_up_8_V = variants {mkV "away" ; mkV "marrar" ; mkV "up" ; } ; --*
lin get_up_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin get_V2A = variants {mkV2A (mkV "deixar") ; mkV2A (mkV "fazer") ; } ; --*
lin geum_N = mkN "Geum" ; --*
lin geyser_N = variants {mkN "géiser" ; mkN "gêiser" ; } ; --*
lin ghanaian_1_A = variants {mkA "ganês" ; mkA "ganesa" ; } ; --*
lin ghana_PN = variants {mkPN "Coast" ; mkPN "Gana" ; mkPN "of" ; } ; --*
lin ghastly_1_A = variants {mkA "horrível" ; mkA "macabro" ; } ; --*
lin ghee_N = mkN "Ghee" ; --*
lin ghent_PN = mkPN "Gante" ; --*
lin ghetto_1_N = variants {mkN "gueto" ; mkN "Guetos" ; } ; --*
lin ghetto_3_N = variants {mkN "favela" ; mkN "gueto" ; mkN "judiaria" ; } ; --*
lin ghost_1_N = variants {mkN "espectro" ; mkN "fantasma" ; mkN "sombra" ; } ; --*
lin ghost_2_N = variants {mkN "Ghost" ; mkN "ghostwriter" ; mkN "ghost-writer" ; } ; --*
lin ghost_2_V2 = variants {mkV2 (mkV "amedrontar") ; mkV2 (mkV "apavorar") ; mkV2 (mkV "assombrar") ; mkV2 (mkV "obsedar") ; } ; --*
lin ghost_3_N = variants {mkN "alma" ; mkN "aparição" ; mkN "assombração" ; mkN "espectro" ; mkN "espírito" ; mkN "fantasma" ; mkN "larva" ; mkN "sombra" ; } ; --*
lin ghost_writer_N = variants {mkN "Ghost" ; mkN "ghostwriter" ; mkN "ghost-writer" ; } ; --*
lin ghoul_2_N = variants {mkN "ghol" ; mkN "ghoul" ; mkN "ghul" ; } ; --*
lin ghrelin_N = mkN "grelina" ; --*
lin giant_1_N = mkN "gigante" ; --*
lin giant_2_N = variants {mkN "gigante" ; mkN "monstro" ; mkN "titã" ; } ; --*
lin giant_3_N = mkN "gigante" ; --*
lin giant_4_N = variants {mkN "baleias" ; mkN "cetáceo" ; mkN "gigante" ; } ; --*
lin giant_5_N = variants {mkN "gigante" ; mkN "monstro" ; } ; --*
lin giant_6_N = mkN "gigante" ; --*
lin giant_7_N = variants {mkN "Estrela" ; mkN "star" ; } ; --*
lin giant_A = variants {mkA "descomunal" ; mkA "elefântico" ; mkA "elefantino" ; mkA "gigantesco" ; } ; --*
lin giantess_N = mkN "giganta" ; --*
lin giantism_1_N = variants {mkN "crescimento" ; mkN "gigantismo" ; } ; --*
lin giantism_2_N = variants {mkN "gigantismo" ; mkN "Gigantismo" ; } ; --*
lin gib_1_N = mkN "gibibyte" ; --*
lin gibber_1_V = mkV "tagarelar" ; --*
lin gibberellin_N = mkN "giberelina" ; --*
lin gibberish_N = mkN "algaravia" ; --*
lin gibbon_2_N = variants {mkN "gibão" ; mkN "lar" ; } ; --*
lin gibbsite_N = mkN "gibbsita" ; --*
lin gibe_1_V = variants {mkV "combinar" ; mkV "concordar" ; mkV "corresponder" ; } ; --*
lin gibe_2_V = variants {mkV "vaiar" ; mkV "zombar" ; } ; --*
lin gibraltarian_A = mkA "gibraltariano" ; --*
lin gibraltar_PN = variants {mkPN "Gibraltar" ; mkPN "of" ; } ; --*
lin giddiness_1_N = mkN "coisavã" ; --*
lin giddiness_2_N = variants {mkN "tontura" ; mkN "Tontura" ; mkN "vertigem" ; } ; --*
lin giddy_1_A = variants {mkA "com" ; mkA "que" ; mkA "tonto" ; mkA "vertiginoso" ; } ; --*
lin giddy_2_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin gift_1_N = variants {mkN "brinde" ; mkN "dádiva" ; mkN "doação" ; mkN "dom" ; mkN "presente" ; } ; --*
lin gift_1_V2 = variants {mkV2 (mkV "dotar") ; mkV2 (mkV "investir") ; } ; --*
lin gift_2_N = variants {mkN "dom" ; mkN "endowment" ; mkN "presente" ; mkN "talento" ; } ; --*
lin gift_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "oferecer") ; mkV2 (mkV "regalar") ; } ; --*
lin gift_3_N = mkN "doação" ; --*
lin gifted_A = variants {mkA "dotado" ; mkA "talentoso" ; } ; --*
lin gig_1_N = mkN "show" ; --*
lin gig_2_N = variants {mkN "arpão" ; mkN "lança" ; } ; --*
lin gig_6_N = mkN "actuação" ; --*
lin gigabit_N = mkN "gigabit" ; --*
lin gigabyte_1_N = mkN "gigabyte" ; --*
lin gigabyte_2_N = mkN "gibibyte" ; --*
lin gigahertz_N = variants {mkN "gigahertz" ; mkN "per" ; } ; --*
lin gigantic_A = mkA "gigantesco" ; --*
lin gigantism_1_N = variants {mkN "crescimento" ; mkN "gigantismo" ; } ; --*
lin gigantism_2_N = variants {mkN "gigantismo" ; mkN "Gigantismo" ; } ; --*
lin gigolo_N = mkN "gigolô" ; --*
lin gilbert_2_N = variants {mkN "Gilbert" ; mkN "Gilberto" ; mkN "S." ; mkN "Schwenk" ; mkN "William" ; } ; --*
lin gilbert_2_PN = variants {mkPN "Gilbert" ; mkPN "Gilberto" ; mkPN "S." ; mkPN "Schwenk" ; mkPN "William" ; } ; --*
lin gilbertian_1_A = mkA "de" ; --*
lin gild_N = variants {mkN "club" ; mkN "clube" ; mkN "guilda" ; mkN "ordem" ; mkN "sociedade" ; } ; --*
lin gill_2_N = variants {mkN "brânquia" ; mkN "gill" ; mkN "guelra" ; } ; --*
lin gill_3_N = mkN "brânquias" ; --*
lin gill_4_N = variants {mkN "Branquia" ; mkN "brânquia" ; mkN "guelra" ; } ; --*
lin gimcrack_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin gimlet_2_N = variants {mkN "auger" ; mkN "trado" ; } ; --*
lin gimmick_1_N = variants {mkN "artifício" ; mkN "pegadinha" ; } ; --*
lin gimmick_2_N = variants {mkN "coisa" ; mkN "coisas" ; mkN "negócio" ; mkN "troço" ; } ; --*
lin gimmick_3_N = variants {mkN "artimanha" ; mkN "truque" ; } ; --*
lin gin_1_N = variants {mkN "Gim" ; mkN "gin" ; mkN "Gins" ; } ; --*
lin gin_2_N = mkN "alçapão" ; --*
lin gin_3_N = variants {mkN "gim" ; mkN "gin" ; } ; --*
lin ginger_1_N = mkN "gengibre" ; --*
lin ginger_2_N = variants {mkN "gengibre" ; mkN "ginger" ; } ; --*
lin ginger_3_N = mkN "gengibre" ; --*
lin ginger_4_N = mkN "energia" ; --*
lin gingerbread_N = mkN "Lebkuchen" ; --*
lin gingival_A = mkA "gengival" ; --*
lin gingiva_N = mkN "gengiva" ; --*
lin gingivitis_N = mkN "gengivite" ; --*
lin gingko_N = variants {mkN "biloba" ; mkN "Ginkgo" ; mkN "tree" ; } ; --*
lin ginkgo_N = variants {mkN "biloba" ; mkN "Ginkgo" ; mkN "tree" ; } ; --*
lin ginseng_1_N = mkN "ginseng" ; --*
lin ginseng_2_N = variants {mkN "ginseng" ; mkN "pseudoginseng" ; mkN "schinseng" ; } ; --*
lin gipsyFem_1_N = mkN "cigana" ; --*
lin gipsyFem_2_N = variants {mkN "cigana" ; mkN "cigano" ; mkN "Rom" ; } ; --*
lin gipsyMasc_1_N = mkN "cigana" ; --*
lin gipsyMasc_2_N = variants {mkN "cigana" ; mkN "cigano" ; mkN "Rom" ; } ; --*
lin giraffe_N = variants {mkN "camelopardalis" ; mkN "Camelopardalis" ; mkN "girafa" ; } ; --*
lin gird_1_V = variants {mkV "prover" ; mkV "up" ; } ; --*
lin gird_2_V2 = mkV2 (mkV "cingir") ; --*
lin girder_N = variants {mkN "barrote" ; mkN "biga" ; mkN "trave" ; } ; --*
lin girdle_2_V2 = mkV2 (mkV "cingir") ; --*
lin girdle_3_N = variants {mkN "corset" ; mkN "espartilho" ; mkN "Espartilho" ; } ; --*
lin girl_1_N = variants {mkN "garota" ; mkN "lady" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; mkN "woman" ; } ; --*
lin girl_2_N = variants {mkN "child" ; mkN "garota" ; mkN "garotinha" ; mkN "girl" ; mkN "menininha" ; mkN "meninota" ; mkN "moça" ; mkN "mocinha" ; mkN "rapariga" ; } ; --*
lin girl_3_N = mkN "filha" ; --*
lin girl_4_N = variants {mkN "amante" ; mkN "friend" ; mkN "garota" ; mkN "menina" ; mkN "mulher" ; mkN "namorada" ; } ; --*
lin girl_5_N = variants {mkN "garota" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin girlfriend_1_N = mkN "amiga" ; --*
lin girlfriend_2_N = variants {mkN "amante" ; mkN "friend" ; mkN "garota" ; mkN "menina" ; mkN "mulher" ; mkN "namorada" ; } ; --*
lin girth_1_N = mkN "circunferência" ; --*
lin gist_1_N = mkN "essência" ; --*
lin gist_2_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin give_10_V2 = mkV2 (mkV "prestar") ; --*
lin give_10_V3 = mkV3 (mkV "prestar") ; --*
lin give_10_V = mkV "prestar" ; --*
lin give_11_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "gerar") ; } ; --*
lin give_12_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "on") ; } ; --*
lin give_14_V3 = variants {mkV3 (mkV "dar") ; mkV3 (mkV "entregar") ; } ; --*
lin give_17_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "passar") ; } ; --*
lin give_18_V2 = variants {mkV2 (mkV "comprometer") ; mkV2 (mkV "dedicar") ; } ; --*
lin give_19_V3 = mkV3 (mkV "dar") ; --*
lin give_1_V3 = variants {mkV3 (mkV "causar") ; mkV3 (mkV "dar") ; mkV3 (mkV "provocar") ; } ; --*
lin give_22_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "garantir") ; mkV2 (mkV "outorgar") ; } ; --*
lin give_24_V3 = variants {mkV3 (mkV "alimentar") ; mkV3 (mkV "dar") ; } ; --*
lin give_25_V = variants {mkV "contribuir" ; mkV "dar" ; mkV "in" ; mkV "outorgar" ; } ; --*
lin give_26_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin give_27_V3 = mkV3 (mkV "estimar") ; --*
lin give_2_V3 = variants {mkV3 (mkV "dar") ; mkV3 (mkV "prover") ; } ; --*
lin give_33_V = mkV "ceder" ; --*
lin give_34_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "propor") ; } ; --*
lin give_37_V3 = mkV3 (mkV "dar") ; --*
lin give_3_V3 = variants {mkV3 (mkV "dar") ; mkV3 (mkV "entregar") ; } ; --*
lin give_4_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "revelar") ; } ; --*
lin give_7_V3 = mkV3 (mkV "lançar") ; --*
lin give_8_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "oferecer") ; mkV2 (mkV "regalar") ; } ; --*
lin give_away_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin giveaway_3_N = variants {mkN "Game-show" ; mkN "show" ; } ; --*
lin give_back_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reintegrar") ; mkV2 (mkV "retribuir") ; } ; --*
lin give_in_1_V = variants {mkV "aceder" ; mkV "in" ; } ; --*
lin give_in_26_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin give_in_2_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "in") ; mkV2 (mkV "sucumbir") ; mkV2 (mkV "under") ; } ; --*
lin give_in_2_V = variants {mkV "ceder" ; mkV "in" ; mkV "sucumbir" ; mkV "under" ; } ; --*
lin given_1_A = mkA "suposto" ; --*
lin give_N = mkN "elasticidade" ; --*
lin given_N = variants {mkN "hipótese" ; mkN "presunção" ; } ; --*
lin give_off_V2 = mkV2 (mkV "off") ; --*
lin give_off_V = variants {mkV "emitir" ; mkV "off" ; mkV "out" ; } ; --*
lin give_out_1_V2 = variants {mkV2 (mkV "emitir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin give_out_4_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin giver_2_N = variants {mkN "doador" ; mkN "patrocinador" ; } ; --*
lin give_up_10_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "largar") ; mkV2 (mkV "up") ; } ; --*
lin give_up_12_V2 = variants {mkV2 (mkV "parar") ; mkV2 (mkV "up") ; } ; --*
lin give_up_1_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "overboard") ; mkV2 (mkV "perder") ; mkV2 (mkV "up") ; } ; --*
lin give_up_2_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "up") ; } ; --*
lin give_up_3_V = variants {mkV "abandonar" ; mkV "by" ; mkV "in" ; mkV "out" ; mkV "up" ; } ; --*
lin give_up_4_V2 = variants {mkV2 (mkV "cessar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "descontinuar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin give_up_6_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "desobrigar") ; mkV2 (mkV "liberar") ; mkV2 (mkV "up") ; } ; --*
lin give_up_7_V2 = variants {mkV2 (mkV "demitir-se") ; mkV2 (mkV "renunciar") ; mkV2 (mkV "resignar") ; mkV2 (mkV "up") ; } ; --*
lin give_up_7_V = variants {mkV "demitir-se" ; mkV "renunciar" ; mkV "resignar" ; mkV "up" ; } ; --*
lin give_up_8_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "render-se") ; mkV2 (mkV "up") ; } ; --*
lin give_up_9_V = variants {mkV "render-se" ; mkV "up" ; } ; --*
lin give_way_2_V = variants {mkV "colapsar" ; mkV "desabar" ; mkV "in" ; mkV "quebrar" ; mkV "ruir" ; mkV "way" ; } ; --*
lin giving_1_N = mkN "doação" ; --*
lin gizzard_N = variants {mkN "mill" ; mkN "moela" ; mkN "moleja" ; } ; --*
lin glacial_2_A = variants {mkA "frio" ; mkA "gelado" ; mkA "glacial" ; } ; --*
lin glacial_3_A = variants {mkA "ártico" ; mkA "gelado" ; mkA "polar" ; } ; --*
lin glacier_N = variants {mkN "geleira" ; mkN "glaciar" ; mkN "glaciares" ; mkN "Glaciares" ; } ; --*
lin glad_1_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "grato" ; } ; --*
lin glad_4_A = variants {mkA "contente" ; mkA "feliz" ; mkA "risonho" ; } ; --*
lin gladden_1_V2 = mkV2 (mkV "alegrar") ; --*
lin gladden_2_V2 = mkV2 (mkV "alegrar") ; --*
lin glade_N = mkN "clareira" ; --*
lin gladiator_1_N = variants {mkN "gladiador" ; mkN "Tipos" ; } ; --*
lin gladness_N = variants {mkN "alegria" ; mkN "gozo" ; } ; --*
lin glamorize_1_V2 = mkV2 (mkV "romantizar") ; --*
lin glamor_N = mkN "importância" ; --*
lin glamorous_1_A = variants {mkA "glamoroso" ; mkA "glamourosa" ; mkA "glamouroso" ; mkA "prestigioso" ; } ; --*
lin glamour_N = mkN "importância" ; --*
lin glance_1_V = variants {mkV "olhar" ; mkV "ver" ; } ; --*
lin glance_N = variants {mkN "deflexão" ; mkN "d'oeil" ; mkN "mirada" ; mkN "relance" ; } ; --*
lin gland_N = variants {mkN "glândula" ; mkN "Glândula" ; mkN "Glândulas" ; mkN "organ" ; } ; --*
lin glans_N = mkN "glande" ; --*
lin glare_1_N = variants {mkN "brilho" ; mkN "clarão" ; } ; --*
lin glare_1_V = mkV "fulminar" ; --*
lin glare_2_V2 = variants {mkV2 (mkV "reflectir") ; mkV2 (mkV "refletir") ; } ; --*
lin glare_3_N = variants {mkN "centro" ; mkN "eye" ; } ; --*
lin glare_3_V = mkV "brilhar" ; --*
lin glaring_1_A = mkA "deslumbrante" ; --*
lin glasgow_PN = mkPN "Glasgow" ; --*
lin glasnost_N = variants {mkN "glasnost" ; mkN "Glasnost" ; } ; --*
lin glass_1_N = mkN "vidro" ; --*
lin glass_1_V2 = mkV2 (mkV "envidraçar") ; --*
lin glass_2_N = variants {mkN "copo" ; mkN "glass" ; } ; --*
lin glass_4_N = variants {mkN "glass" ; mkN "luneta" ; } ; --*
lin glass_5_N = variants {mkN "feed" ; mkN "hydrochloride" ; mkN "metanfetamina" ; mkN "Metanfetaminas" ; } ; --*
lin glass_5_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "vidrar") ; } ; --*
lin glass_6_N = variants {mkN "espelho" ; mkN "glass" ; } ; --*
lin glass_cutter_2_N = variants {mkN "cutter" ; mkN "vidraceiro" ; } ; --*
lin glasshouse_N = variants {mkN "estufa" ; mkN "plantel" ; mkN "viveiro" ; } ; --*
lin glassware_1_N = mkN "vidro" ; --*
lin glaucoma_N = mkN "glaucoma" ; --*
lin glauconite_N = mkN "Glauconita" ; --*
lin glaucous_A = mkA "glauco" ; --*
lin glaze_2_V = variants {mkV "over" ; mkV "vidrar" ; } ; --*
lin glaze_3_V2 = mkV2 (mkV "envidraçar") ; --*
lin glaze_4_V2 = mkV2 (mkV "cobrir") ; --*
lin glaze_4_V = mkV "cobrir" ; --*
lin glazier_1_N = variants {mkN "cutter" ; mkN "vidraceiro" ; } ; --*
lin gleam_1_V = variants {mkV "cintilar" ; mkV "reluzir" ; } ; --*
lin glean_V2 = variants {mkV2 (mkV "colher") ; mkV2 (mkV "respigar") ; } ; --*
lin glee_1_N = variants {mkN "hilariedade" ; mkN "risada" ; } ; --*
lin gleeful_A = mkA "jubiloso" ; --*
lin glen_N = variants {mkN "cânion" ; mkN "ravina" ; } ; --*
lin glen_PN = variants {mkPN "cânion" ; mkPN "ravina" ; } ; --*
lin glib_1_A = mkA "superficial" ; --*
lin glide_1_N = variants {mkN "Semi" ; mkN "semivogal" ; } ; --*
lin glide_1_V = variants {mkV "deslizar" ; mkV "escorregar" ; mkV "passar" ; } ; --*
lin glide_2_N = mkN "deslizamento" ; --*
lin glide_2_V = mkV "planar" ; --*
lin glide_3_N = mkN "Voo" ; --*
lin glider_N = variants {mkN "planador" ; mkN "Planadores" ; } ; --*
lin gliding_N = mkN "Voo" ; --*
lin glimmer_2_N = mkN "suspeita" ; --*
lin glimpse_1_N = variants {mkN "deflexão" ; mkN "d'oeil" ; mkN "mirada" ; mkN "relance" ; } ; --*
lin glimpse_2_N = mkN "vislumbre" ; --*
lin glimpse_V2 = variants {mkV2 (mkV "entrever") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; mkV2 (mkV "vislumbrar") ; } ; --*
lin glint_1_N = mkN "fagulha" ; --*
lin glint_1_V = variants {mkV "cintilar" ; mkV "reluzir" ; } ; --*
lin glint_2_V = variants {mkV "olhar" ; mkV "ver" ; } ; --*
lin glioma_N = mkN "glioma" ; --*
lin glissando_N = mkN "glissando" ; --*
lin glisten_V = variants {mkV "cintilar" ; mkV "reluzir" ; } ; --*
lin glitter_V = variants {mkV "cintilar" ; mkV "reluzir" ; } ; --*
lin gloaming_N = variants {mkN "anoitecer" ; mkN "crepúsculo" ; mkN "pôr" ; } ; --*
lin gloat_1_V = variants {mkV "gabar" ; mkV "triunfar" ; } ; --*
lin gloat_1_VS = variants {mkVS (mkV "gabar") ; mkVS (mkV "triunfar") ; } ; --*
lin global_1_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin global_2_A = variants {mkA "esférico" ; mkA "global" ; } ; --*
lin globalization_1_N = variants {mkN "Globalizacão" ; mkN "Globalizaçao" ; mkN "globalização" ; mkN "Globalização" ; } ; --*
lin globe_1_N = variants {mkN "globo" ; mkN "mundo" ; mkN "Terra" ; } ; --*
lin globe_2_N = variants {mkN "bola" ; mkN "esfera" ; mkN "orbe" ; } ; --*
lin globe_3_N = mkN "globo" ; --*
lin globular_A = variants {mkA "esférico" ; mkA "global" ; } ; --*
lin globule_N = mkN "glóbulo" ; --*
lin globulin_N = mkN "globulina" ; --*
lin glockenspiel_N = variants {mkN "bells" ; mkN "glockenspiel" ; } ; --*
lin glomerular_A = mkA "glomerular" ; --*
lin glomerulonephritis_N = variants {mkN "glomerulonefrite" ; mkN "Glomerulonefrite" ; } ; --*
lin glomerulus_N = mkN "glomérulo" ; --*
lin gloom_2_N = mkN "pessimismo" ; --*
lin gloom_3_N = mkN "trevas" ; --*
lin gloominess_1_N = mkN "trevas" ; --*
lin gloominess_2_N = mkN "pessimismo" ; --*
lin gloominess_3_N = mkN "tristeza" ; --*
lin gloomy_2_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin gloomy_3_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin glorification_1_N = mkN "glória" ; --*
lin glorification_2_N = mkN "idealização" ; --*
lin glorification_3_N = mkN "glorificação" ; --*
lin glorify_1_V2 = variants {mkV2 (mkV "exaltar") ; mkV2 (mkV "glorificar") ; mkV2 (mkV "louvar") ; } ; --*
lin glorify_2_V2 = mkV2 (mkV "glorificar") ; --*
lin glorify_3_V2 = variants {mkV2 (mkV "glorificar") ; mkV2 (mkV "transfigurar") ; } ; --*
lin glorify_4_V2 = mkV2 (mkV "glorificar") ; --*
lin glorious_1_A = mkA "glorioso" ; --*
lin glorious_2_A = mkA "magnífico" ; --*
lin glorious_3_A = variants {mkA "esplêndido" ; mkA "glorioso" ; mkA "magnífico" ; mkA "maravilhoso" ; } ; --*
lin glory_1_N = mkN "glória" ; --*
lin glory_2_N = mkN "glória" ; --*
lin glory_3_N = variants {mkN "aura" ; mkN "auréola" ; mkN "halo" ; } ; --*
lin gloss_1_N = variants {mkN "glosso" ; mkN "rubrica" ; } ; --*
lin gloss_1_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; } ; --*
lin gloss_2_N = variants {mkN "glossário" ; mkN "glossários" ; } ; --*
lin gloss_2_V2 = mkV2 (mkV "glossar") ; --*
lin gloss_3_N = mkN "polimento" ; --*
lin gloss_3_V2 = mkV2 (mkV "glosar") ; --*
lin gloss_4_N = mkN "aparência" ; --*
lin glossary_N = variants {mkN "glossário" ; mkN "glossários" ; } ; --*
lin glossiness_N = mkN "polimento" ; --*
lin glossitis_N = variants {mkN "glossodínia" ; mkN "Glossodínia" ; } ; --*
lin gloss_over_2_V2 = variants {mkV2 (mkV "caiar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin glossy_1_A = mkA "espúrio" ; --*
lin glossy_3_A = variants {mkA "faiscante" ; mkA "reluzente" ; } ; --*
lin glottal_A = mkA "glotal" ; --*
lin glottis_N = mkN "glote" ; --*
lin glottochronology_N = mkN "glotocronologia" ; --*
lin gloucester_2_PN = mkPN "Gloucester" ; --*
lin gloucestershire_PN = mkPN "Gloucestershire" ; --*
lin glove_2_N = mkN "luva" ; --*
lin glove_3_N = variants {mkN "glove" ; mkN "luva" ; } ; --*
lin glove_compartment_N = mkN "compartment" ; --*
lin glow_1_V = mkV "brilhar" ; --*
lin glow_2_V = mkV "brilhar" ; --*
lin glow_3_N = mkN "incandescência" ; --*
lin glow_3_V = variants {mkV "brilhar" ; mkV "queimar" ; } ; --*
lin glow_4_V = mkV "brilhar" ; --*
lin glow_5_N = mkN "brilho" ; --*
lin glow_5_V = variants {mkV "brilhar" ; mkV "radiar" ; } ; --*
lin glower_1_V = mkV "fulminar" ; --*
lin glower_2_V = variants {mkV "fazer" ; mkV "franzir" ; } ; --*
lin glow_worm_N = mkN "vaga-lume" ; --*
lin glucagon_N = variants {mkN "glucagon" ; mkN "Glucágon" ; } ; --*
lin glucocorticoid_N = variants {mkN "Glicocorticoide" ; mkN "Glicocorticóide" ; mkN "Glicocorticoides" ; } ; --*
lin glucosamine_N = variants {mkN "glucosamina" ; mkN "Glucosamina" ; } ; --*
lin glucose_N = variants {mkN "glicose" ; mkN "Glicose" ; mkN "glucose" ; } ; --*
lin glue_1_V2 = mkV2 (mkV "colar") ; --*
lin glue_N = variants {mkN "cola" ; mkN "colas" ; mkN "materiais" ; } ; --*
lin gluey_A = mkA "viscoso" ; --*
lin glum_2_A = mkA "taciturno" ; --*
lin glumness_1_N = mkN "trevas" ; --*
lin gluon_N = variants {mkN "gluão" ; mkN "Gluon" ; mkN "glúon" ; } ; --*
lin glut_1_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "encher") ; mkV2 (mkV "out") ; } ; --*
lin glutamine_N = mkN "glutamina" ; --*
lin gluten_N = variants {mkN "gluten" ; mkN "Gluten" ; mkN "glúten" ; } ; --*
lin gluteus_1_N = variants {mkN "glúteo" ; mkN "muscle" ; } ; --*
lin glutinous_A = mkA "viscoso" ; --*
lin glutton_1_N = variants {mkN "guloso" ; mkN "rapa" ; } ; --*
lin glutton_2_N = variants {mkN "carcaju" ; mkN "gulo" ; } ; --*
lin gluttonous_A = variants {mkA "comilão" ; mkA "guloso" ; } ; --*
lin gluttony_1_N = mkN "gula" ; --*
lin gluttony_2_N = variants {mkN "gula" ; mkN "sete" ; } ; --*
lin glyceraldehyde_N = variants {mkN "aldehyde" ; mkN "Gliceraldeído" ; } ; --*
lin glycerine_1_N = variants {mkN "glicerina" ; mkN "glicerol" ; } ; --*
lin glycerol_N = variants {mkN "glicerina" ; mkN "glicerol" ; } ; --*
lin glycine_1_N = mkN "glicina" ; --*
lin glycine_2_N = mkN "Glycine" ; --*
lin glycogen_N = variants {mkN "Glicogénio" ; mkN "glicogênio" ; mkN "starch" ; } ; --*
lin glycolysis_N = mkN "glicólise" ; --*
lin glycoprotein_N = variants {mkN "Glicoproteina" ; mkN "glicoproteína" ; mkN "Glicoproteínas" ; } ; --*
lin glycoside_N = variants {mkN "glicosídeo" ; mkN "Glicosídeo" ; } ; --*
lin glyph_N = mkN "glifo" ; --*
lin gmt_PN = variants {mkPN "GMT" ; mkPN "Mean" ; mkPN "time" ; mkPN "Time" ; mkPN "TMG" ; } ; --*
lin gnash_V2 = mkV2 (mkV "ranger") ; --*
lin gnash_V = mkV "ranger" ; --*
lin gnat_1_N = mkN "mosquito" ; --*
lin gnat_2_N = mkN "mosquito" ; --*
lin gnaw_1_V2 = variants {mkV2 (mkV "morder") ; mkV2 (mkV "roer") ; } ; --*
lin gneiss_N = variants {mkN "gnaisse" ; mkN "gneisse" ; } ; --*
lin gnocchi_N = mkN "nhoque" ; --*
lin gnome_1_N = variants {mkN "anão" ; mkN "Gnomo" ; } ; --*
lin gnome_2_N = mkN "gnomo" ; --*
lin gnomon_N = variants {mkN "Gnómon" ; mkN "gnômon" ; } ; --*
lin gnosis_N = variants {mkN "gnose" ; mkN "Gnose" ; } ; --*
lin gnostic_2_A = mkA "gnóstico" ; --*
lin gnp_N = variants {mkN "national" ; mkN "produto" ; } ; --*
lin gnu_N = variants {mkN "gnu" ; mkN "mais" ; } ; --*
lin go_10_VA = mkVA (mkV "ficar") ; --*
lin go_11_V = variants {mkV "fazer" ; mkV "ressoar" ; mkV "soar" ; } ; --*
lin go_12_V = variants {mkV "funcionar" ; mkV "operar" ; } ; --*
lin go_15_V = variants {mkV "on" ; mkV "out" ; mkV "perseverar" ; mkV "resistir" ; mkV "sobreviver" ; mkV "up" ; } ; --*
lin go_17_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin go_18_V = variants {mkV "ir" ; mkV "pertencer" ; } ; --*
lin go_1_N = variants {mkN "turno" ; mkN "vez" ; } ; --*
lin go_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin go_20_V = variants {mkV "começar" ; mkV "going" ; } ; --*
lin go_21_V = mkV "mover" ; --*
lin go_24_V = variants {mkV "combinar" ; mkV "in" ; } ; --*
lin go_25_V = mkV "ir" ; --*
lin go_26_V = mkV "caber" ; --*
lin go_26_VV = mkVV (mkV "caber") ; --*
lin go_28_V = mkV "ir" ; --*
lin go_29_V = mkV "escolher" ; --*
lin go_2_V = mkV "proceder" ; --*
lin go_30_V = variants {mkV "bad" ; mkV "down" ; mkV "morrer" ; mkV "out" ; mkV "way" ; } ; --*
lin go_3_N = mkN "tentativa" ; --*
lin go_4_N = variants {mkN "game" ; mkN "go" ; } ; --*
lin go_4_V = variants {mkV "estar" ; mkV "ficar" ; mkV "tornar" ; } ; --*
lin go_7_V = variants {mkV "estender" ; mkV "ir" ; mkV "levar" ; } ; --*
lin go_8_V = variants {mkV "ir" ; mkV "prosseguir" ; } ; --*
lin go_9_V = mkV "ir" ; --*
lin go_about_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; } ; --*
lin go_across_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "passar") ; mkV2 (mkV "through") ; } ; --*
lin goad_1_V2 = mkV2 (mkV "encorajar") ; --*
lin goad_2_N = mkN "provocação" ; --*
lin goad_2_V2 = mkV2 (mkV "aguilhoar") ; --*
lin goad_3_V2 = variants {mkV2 (mkV "aguilhoar") ; mkV2 (mkV "atiçar") ; } ; --*
lin goad_4_V2 = variants {mkV2 (mkV "enfadar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; } ; --*
lin go_after_1_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin go_after_2_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "for") ; mkV2 (mkV "procurar") ; } ; --*
lin go_against_1_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "destruir") ; mkV2 (mkV "ir") ; } ; --*
lin go_against_2_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "infringir") ; mkV2 (mkV "ofender") ; mkV2 (mkV "pecar") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "transgredir") ; mkV2 (mkV "violar") ; } ; --*
lin go_against_3_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "resistir") ; } ; --*
lin go_ahead_1_N = variants {mkN "light" ; mkN "sinal" ; } ; --*
lin go_ahead_2_N = mkN "iniciativa" ; --*
lin goal_1_N = variants {mkN "alvo" ; mkN "intenção" ; mkN "meta" ; mkN "objectivo" ; } ; --*
lin goal_2_N = mkN "destino" ; --*
lin goal_3_N = mkN "gol" ; --*
lin goal_4_N = variants {mkN "gol" ; mkN "golo" ; } ; --*
lin goalie_1_N = variants {mkN "goleiro" ; mkN "guarda-redes" ; } ; --*
lin goalie_2_N = variants {mkN "goleiro" ; mkN "guarda-redes" ; } ; --*
lin goalkeeper_1_N = variants {mkN "goleiro" ; mkN "guarda-redes" ; } ; --*
lin goalkeeper_2_N = variants {mkN "goleiro" ; mkN "guarda-redes" ; } ; --*
lin go_along_2_V = variants {mkV "along" ; mkV "continuar" ; mkV "on" ; mkV "prosseguir" ; mkV "seguir" ; } ; --*
lin go_along_3_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin goaltender_1_N = variants {mkN "goleiro" ; mkN "guarda-redes" ; } ; --*
lin goaltender_2_N = variants {mkN "goleiro" ; mkN "guarda-redes" ; } ; --*
lin go_around_2_V = variants {mkV "around" ; mkV "circular" ; mkV "espalhar" ; } ; --*
lin go_around_3_V = variants {mkV "around" ; mkV "flanquear" ; } ; --*
lin go_around_4_V = variants {mkV "around" ; mkV "dar" ; mkV "rodar" ; } ; --*
lin go_around_5_V = variants {mkV "around" ; mkV "contornar" ; } ; --*
lin goat_1_N = variants {mkN "animal" ; mkN "bode" ; mkN "Bode" ; mkN "cabra" ; } ; --*
lin goat_4_N = variants {mkN "Capricórnio" ; mkN "the" ; } ; --*
lin goatee_N = variants {mkN "cavaignac" ; mkN "cavanhaque" ; mkN "Cavanhaque" ; mkN "perilla" ; } ; --*
lin goatfish_N = variants {mkN "mullet" ; mkN "salmonete" ; mkN "surmuletus" ; } ; --*
lin goatherd_N = variants {mkN "cabreiro" ; mkN "herder" ; } ; --*
lin goatsucker_N = mkN "Caprimulgidae" ; --*
lin go_away_2_V = variants {mkV "away" ; mkV "forth" ; mkV "retirar-se" ; mkV "sair" ; } ; --*
lin go_away_3_V = variants {mkV "away" ; mkV "desaparecer" ; mkV "esvair" ; } ; --*
lin go_away_4_V = variants {mkV "away" ; mkV "desaparecer" ; mkV "sumir" ; } ; --*
lin go_away_5_V = variants {mkV "afastar" ; mkV "ausentar-se" ; mkV "away" ; mkV "ir-se" ; mkV "partir" ; } ; --*
lin gob_1_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin gob_3_N = variants {mkN "boca" ; mkN "goela" ; } ; --*
lin go_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "from") ; } ; --*
lin go_back_1_V = variants {mkV "back" ; mkV "from" ; } ; --*
lin go_back_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "recorrer") ; mkV2 (mkV "regressar") ; } ; --*
lin go_back_2_V = variants {mkV "back" ; mkV "recorrer" ; mkV "regressar" ; } ; --*
lin go_back_3_V = variants {mkV "back" ; mkV "recuperar" ; } ; --*
lin go_back_on_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "descumprir") ; mkV2 (mkV "on") ; } ; --*
lin gobble_1_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "tragar") ; } ; --*
lin gobbler_2_N = variants {mkN "cock" ; mkN "tom-tom" ; mkN "turkey" ; } ; --*
lin go_between_N = variants {mkN "intercessor" ; mkN "mediador" ; } ; --*
lin goblet_1_N = variants {mkN "copa" ; mkN "copo" ; } ; --*
lin goblet_2_N = variants {mkN "cálice" ; mkN "Cálice" ; mkN "copo" ; mkN "taça" ; } ; --*
lin goblin_N = variants {mkN "assombração" ; mkN "duende" ; mkN "hobgoblin" ; } ; --*
lin go_by_1_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin go_cart_1_N = mkN "andador" ; --*
lin go_cart_2_N = mkN "carrinho" ; --*
lin go_cart_3_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin god_1_N = variants {mkN "Being" ; mkN "Deus" ; } ; --*
lin god_1_PN = variants {mkPN "Being" ; mkPN "Deus" ; } ; --*
lin god_2_N = variants {mkN "deidade" ; mkN "Deidades" ; mkN "deus" ; mkN "Deus" ; mkN "deusa" ; mkN "divindade" ; mkN "divinidade" ; } ; --*
lin god_2_PN = variants {mkPN "deidade" ; mkPN "Deidades" ; mkPN "deus" ; mkPN "Deus" ; mkPN "deusa" ; mkPN "divindade" ; mkPN "divinidade" ; } ; --*
lin god_3_N = mkN "deus" ; --*
lin god_3_PN = mkPN "deus" ; --*
lin god_4_N = variants {mkN "ídolo" ; mkN "image" ; } ; --*
lin god_4_PN = variants {mkPN "ídolo" ; mkPN "image" ; } ; --*
lin godchild_N = variants {mkN "afilhada" ; mkN "afilhado" ; } ; --*
lin goddam_A = variants {mkA "amaldiçoado" ; mkA "condenado" ; mkA "maldito" ; } ; --*
lin god_damn_A = variants {mkA "amaldiçoado" ; mkA "condenado" ; mkA "maldito" ; } ; --*
lin god_damned_A = variants {mkA "amaldiçoado" ; mkA "condenado" ; mkA "maldito" ; } ; --*
lin goddaughter_N = mkN "afilhada" ; --*
lin goddess_N = variants {mkN "deus" ; mkN "deusa" ; } ; --*
lin godfather_1_N = mkN "padrinho" ; --*
lin godfather_2_N = mkN "padrinho" ; --*
lin godhead_N = variants {mkN "Almighty" ; mkN "Senhor" ; mkN "Todo-Poderoso" ; } ; --*
lin godlike_1_A = mkA "divino" ; --*
lin godlike_2_A = mkA "divino" ; --*
lin godly_2_A = mkA "divino" ; --*
lin godmother_N = variants {mkN "comadre" ; mkN "madrinha" ; } ; --*
lin go_down_1_V = variants {mkV "cair" ; mkV "descer" ; mkV "down" ; } ; --*
lin go_down_2_V = variants {mkV "down" ; mkV "naufragar" ; mkV "under" ; } ; --*
lin go_down_3_V = variants {mkV "diminuir" ; mkV "down" ; mkV "minguar" ; } ; --*
lin go_down_5_V = mkV "down" ; --*
lin go_down_7_V = variants {mkV "down" ; mkV "pôr" ; mkV "under" ; } ; --*
lin go_down_8_V = variants {mkV "cair" ; mkV "down" ; mkV "quebrar" ; } ; --*
lin go_down_on_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "mamar") ; } ; --*
lin godparent_N = variants {mkN "madrinha" ; mkN "padrinho" ; } ; --*
lin godsend_N = variants {mkN "dádiva" ; mkN "from" ; mkN "rush" ; } ; --*
lin godson_N = mkN "afilhado" ; --*
lin goethite_1_N = mkN "Goethita" ; --*
lin go_for_1_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "for") ; mkV2 (mkV "valer") ; } ; --*
lin go_for_2_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "concordar") ; mkV2 (mkV "consentir") ; mkV2 (mkV "for") ; } ; --*
lin go_for_3_V2 = variants {mkV2 (mkV "esperar") ; mkV2 (mkV "for") ; } ; --*
lin go_for_3_V = variants {mkV "esperar" ; mkV "for" ; } ; --*
lin go_for_4_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "querer") ; mkV2 (mkV "to") ; } ; --*
lin go_forth_1_V = variants {mkV "away" ; mkV "forth" ; mkV "retirar-se" ; mkV "sair" ; } ; --*
lin go_forth_2_V = variants {mkV "aparecer" ; mkV "forth" ; mkV "out" ; mkV "sair" ; } ; --*
lin go_forward_V = variants {mkV "adiantar-se" ; mkV "continuar" ; mkV "forward" ; mkV "ir" ; mkV "progredir" ; mkV "prosseguir" ; mkV "seguir" ; } ; --*
lin goggle_box_N = variants {mkN "box" ; mkN "receiver" ; mkN "set" ; mkN "televisão" ; mkN "tevê" ; mkN "tube" ; mkN "tv" ; } ; --*
lin goggles_N = mkN "óculos" ; --*
lin goggle_V = variants {mkV "embasbacar" ; mkV "embasbacar-se" ; mkV "ver" ; } ; --*
lin going_1_N = variants {mkN "away" ; mkN "partida" ; } ; --*
lin going_2_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin go_into_1_V2 = variants {mkV2 (mkV "entrar") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin go_in_V = variants {mkV "entrar" ; mkV "in" ; mkV "into" ; } ; --*
lin goiter_N = mkN "bócio" ; --*
lin goitre_N = mkN "bócio" ; --*
lin gold_1_A = variants {mkA "áurea" ; mkA "áureo" ; mkA "de" ; mkA "dourado" ; } ; --*
lin gold_1_N = mkN "dourado" ; --*
lin gold_2_A = variants {mkA "áureo" ; mkA "dourado" ; } ; --*
lin gold_2_N = variants {mkN "amarelo" ; mkN "âmbar" ; mkN "âmbar-cinzento" ; mkN "dourado" ; } ; --*
lin gold_3_N = variants {mkN "number" ; mkN "ouro" ; } ; --*
lin goldbrick_2_N = mkN "zero" ; --*
lin golden_1_A = variants {mkA "áureo" ; mkA "dourado" ; } ; --*
lin golden_3_A = variants {mkA "áurea" ; mkA "áureo" ; mkA "de" ; mkA "dourado" ; } ; --*
lin golden_6_A = variants {mkA "favorável" ; mkA "propício" ; mkA "vantajoso" ; } ; --*
lin goldfinch_2_N = variants {mkN "carduelis" ; mkN "pintasilgo" ; } ; --*
lin goldfish_N = variants {mkN "auratus" ; mkN "doirada" ; mkN "peixe-dourado" ; mkN "peixinho-dourado" ; } ; --*
lin goldmine_2_N = variants {mkN "mina" ; mkN "mine" ; } ; --*
lin gold_rush_1_N = variants {mkN "dádiva" ; mkN "from" ; mkN "rush" ; } ; --*
lin gold_rush_2_N = mkN "rush" ; --*
lin goldsmith_1_N = variants {mkN "aurífice" ; mkN "ourives" ; mkN "ourivesaria" ; mkN "Ourivesaria" ; } ; --*
lin goldsmith_2_N = variants {mkN "Goldsmith" ; mkN "Oliver" ; mkN "Ourives" ; } ; --*
lin golem_2_N = variants {mkN "andróide" ; mkN "autômato" ; mkN "robô" ; mkN "robot" ; } ; --*
lin golfcart_1_N = variants {mkN "carrinho" ; mkN "cart" ; } ; --*
lin golf_club_N = variants {mkN "club" ; mkN "taco" ; } ; --*
lin golf_course_N = mkN "course" ; --*
lin golf_N = variants {mkN "game" ; mkN "golfe" ; } ; --*
lin golf_V = mkV "jogar" ; --*
lin goliath_1_N = mkN "Golias" ; --*
lin goliath_2_N = variants {mkN "gigante" ; mkN "monstro" ; } ; --*
lin golosh_N = mkN "galocha" ; --*
lin gonad_N = variants {mkN "gland" ; mkN "Gônada" ; } ; --*
lin gonadotropic_1_A = mkA "gonadotrófico" ; --*
lin gonadotropin_1_N = variants {mkN "gonadotrofina" ; mkN "hormone" ; } ; --*
lin gondola_1_N = variants {mkN "car" ; mkN "gôndola" ; } ; --*
lin gondola_2_N = variants {mkN "Góndola" ; mkN "gôndola" ; } ; --*
lin gong_1_N = mkN "gongo" ; --*
lin gonococcus_N = variants {mkN "gonorrhoeae" ; mkN "Neisseria" ; } ; --*
lin gonorrhea_N = variants {mkN "blenorréia" ; mkN "gonorreia" ; mkN "gonorréia" ; mkN "Gonorréia" ; } ; --*
lin gonorrhoea_N = variants {mkN "blenorréia" ; mkN "gonorreia" ; mkN "gonorréia" ; mkN "Gonorréia" ; } ; --*
lin good_10_A = mkA "querido" ; --*
lin good_11_A = mkA "digno" ; --*
lin good_12_A = mkA "bom" ; --*
lin good_13_A = variants {mkA "boa" ; mkA "bom" ; } ; --*
lin good_16_A = mkA "bom" ; --*
lin good_18_A = mkA "salutar" ; --*
lin good_1_A = variants {mkA "boa" ; mkA "bom" ; } ; --*
lin good_1_N = variants {mkN "lucro" ; mkN "operacionalidade" ; mkN "utilidade" ; mkN "valor" ; } ; --*
lin good_2_N = variants {mkN "bondade" ; mkN "virtude" ; } ; --*
lin good_3_A = variants {mkA "boa" ; mkA "bom" ; } ; --*
lin good_3_N = mkN "bem" ; --*
lin good_4_A = variants {mkA "estimável" ; mkA "respeitável" ; } ; --*
lin good_4_N = variants {mkN "bem" ; mkN "Bens" ; mkN "fazenda" ; mkN "good" ; mkN "mercadoria" ; mkN "objecto" ; mkN "produto" ; } ; --*
lin good_5_A = variants {mkA "benéfico" ; mkA "boa" ; mkA "bom" ; mkA "vantajoso" ; } ; --*
lin good_6_A = variants {mkA "boa" ; mkA "bom" ; } ; --*
lin good_7_A = variants {mkA "bom" ; mkA "direito" ; mkA "justo" ; } ; --*
lin good_8_A = variants {mkA "competente" ; mkA "experiente" ; mkA "hábil" ; mkA "habilidoso" ; mkA "mestre" ; mkA "versado" ; } ; --*
lin good_afternoon_Interj = variants {ss "afternoon" ; ss "boa" ; } ; --*
lin goodbye_Interj = variants {ss "adeus" ; ss "atélogo" ; ss "day" ; ss "despedida" ; ss "long" ; ss "revoir" ; ss "wiedersehen" ; } ; --*
lin good_for_naught_N = mkN "zero" ; --*
lin good_for_nothing_N = mkN "zero" ; --*
lin good_humoured_1_A = variants {mkA "afável" ; mkA "amável" ; } ; --*
lin goodish_2_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin good_looking_A = variants {mkA "bem" ; mkA "bonito" ; mkA "de" ; } ; --*
lin goodly_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin good_morning_Interj = variants {ss "bom" ; ss "morning" ; } ; --*
lin good_natured_A = variants {mkA "afável" ; mkA "amável" ; mkA "gentil" ; mkA "lhano" ; } ; --*
lin goodness_1_N = mkN "bem" ; --*
lin goodness_2_N = variants {mkN "bondade" ; mkN "virtude" ; } ; --*
lin good_night_Interj = ss "night" ; --*
lin goodwill_1_N = variants {mkN "goodwill" ; mkN "will" ; } ; --*
lin goodwill_3_N = variants {mkN "boa" ; mkN "will" ; } ; --*
lin goody_goody_A = mkA "beatificação" ; --*
lin goody_N = mkN "guloseima" ; --*
lin gooey_A = mkA "viscoso" ; --*
lin goof_1_N = variants {mkN "asno" ; mkN "estúpido" ; mkN "idiota" ; } ; --*
lin goof_2_N = variants {mkN "andrew" ; mkN "palhaço" ; mkN "Palhaços" ; } ; --*
lin go_off_2_V = mkV "off" ; --*
lin go_off_6_V2 = variants {mkV2 (mkV "implodir") ; mkV2 (mkV "off") ; } ; --*
lin go_off_6_V = variants {mkV "implodir" ; mkV "off" ; } ; --*
lin goof_V = variants {mkV "pisar" ; mkV "the" ; } ; --*
lin googol_N = mkN "googol" ; --*
lin googolplex_N = mkN "googolplex" ; --*
lin gook_N = variants {mkN "barro" ; mkN "gosma" ; mkN "lama" ; mkN "lodo" ; mkN "olho" ; } ; --*
lin goon_1_N = mkN "bobo" ; --*
lin goon_2_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin go_on_2_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin go_on_3_V = variants {mkV "ganhar" ; mkV "on" ; } ; --*
lin go_on_4_V = variants {mkV "continuar" ; mkV "on" ; mkV "prosseguir" ; } ; --*
lin go_on_5_V = variants {mkV "on" ; mkV "up" ; } ; --*
lin goo_N = variants {mkN "barro" ; mkN "gosma" ; mkN "lama" ; mkN "lodo" ; mkN "olho" ; } ; --*
lin go_on_VV = variants {mkVV (mkV "along") ; mkVV (mkV "continuar") ; mkVV (mkV "on") ; mkVV (mkV "prosseguir") ; mkVV (mkV "seguir") ; } ; --*
lin goose_1_N = variants {mkN "gansa" ; mkN "ganso" ; } ; --*
lin goose_2_N = variants {mkN "asno" ; mkN "estúpido" ; mkN "idiota" ; } ; --*
lin goose_3_N = mkN "ganso" ; --*
lin gooseberry_1_N = variants {mkN "bush" ; mkN "groselheira" ; mkN "grossularia" ; mkN "uva-crispa" ; } ; --*
lin gooseberry_2_N = variants {mkN "groselha" ; mkN "groselheira" ; } ; --*
lin goosefish_N = variants {mkN "Americanus" ; mkN "fish" ; mkN "Lofiformes" ; mkN "Lophiiformes" ; } ; --*
lin goose_flesh_N = variants {mkN "arrepio" ; mkN "bump" ; mkN "Pele-de-galinha" ; mkN "pimple" ; mkN "reflex" ; mkN "skin" ; } ; --*
lin go_out_1_V = variants {mkV "deixar" ; mkV "out" ; mkV "sair" ; } ; --*
lin go_out_2_V = mkV "out" ; --*
lin go_out_3_V = mkV "out" ; --*
lin go_over_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "vistoriar") ; } ; --*
lin go_over_1_V = variants {mkV "over" ; mkV "vistoriar" ; } ; --*
lin go_over_2_V = variants {mkV "off" ; mkV "over" ; } ; --*
lin go_over_3_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "into") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin go_past_1_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "ir") ; mkV2 (mkV "past") ; } ; --*
lin go_past_2_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "exceder") ; mkV2 (mkV "past") ; mkV2 (mkV "superar") ; mkV2 (mkV "transcender") ; } ; --*
lin gopher_3_N = variants {mkN "Espermófilo" ; mkN "squirrel" ; } ; --*
lin gopher_4_N = variants {mkN "Geomyidae" ; mkN "gopher" ; mkN "rat" ; } ; --*
lin gore_1_N = variants {mkN "Al" ; mkN "Gore" ; } ; --*
lin gore_2_N = mkN "sangue" ; --*
lin gore_4_N = variants {mkN "massacre" ; mkN "sangue" ; } ; --*
lin gorge_1_N = mkN "garganta" ; --*
lin gorge_1_V = variants {mkV "devorar" ; mkV "encher" ; mkV "out" ; } ; --*
lin gorge_3_N = variants {mkN "esófago" ; mkN "esôfago" ; mkN "garganta" ; mkN "gorja" ; } ; --*
lin gorgeous_A = variants {mkA "lindíssimo" ; mkA "magnífico" ; } ; --*
lin gorge_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "encher") ; mkV2 (mkV "out") ; } ; --*
lin gorgon_N = mkN "górgona" ; --*
lin gorgonzola_N = mkN "gorgonzola" ; --*
lin gorilla_N = variants {mkN "gorila" ; mkN "gorilla" ; } ; --*
lin gormandize_1_V = variants {mkV "devorar" ; mkV "encher" ; mkV "out" ; } ; --*
lin gorse_N = variants {mkN "europaeus" ; mkN "gorse" ; mkN "tojo" ; } ; --*
lin gory_1_A = mkA "ensanguentado" ; --*
lin goshawk_N = variants {mkN "açor" ; mkN "gentilis" ; } ; --*
lin gospel_1_N = variants {mkN "evangelho" ; mkN "Evangelhos" ; } ; --*
lin gospel_4_N = variants {mkN "credo" ; mkN "doctrine" ; mkN "evangelho" ; } ; --*
lin gossip_1_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin gossip_1_V = variants {mkV "fofocar" ; mkV "the" ; } ; --*
lin gossip_2_N = variants {mkN "bisbilhotice" ; mkN "bisbolhetice" ; mkN "fofoca" ; } ; --*
lin gossip_2_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin gossiping_N = mkN "fofoca" ; --*
lin goth_1_N = mkN "indivíduo" ; --*
lin goth_2_N = variants {mkN "godo" ; mkN "godos" ; } ; --*
lin gothenburg_1_PN = mkPN "Gotemburgo" ; --*
lin gothic_1_N = variants {mkN "gótico" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin gothic_2_A = variants {mkA "gótica" ; mkA "gótico" ; } ; --*
lin gothic_3_A = variants {mkA "gótica" ; mkA "gótico" ; } ; --*
lin gothic_3_N = variants {mkN "architecture" ; mkN "arquitetura" ; } ; --*
lin gothic_4_A = mkA "medieval" ; --*
lin gothic_5_A = mkA "gótico" ; --*
lin go_through_1_V = variants {mkV "experienciar" ; mkV "experimentar" ; mkV "through" ; } ; --*
lin go_through_3_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "consumir") ; mkV2 (mkV "devorar") ; mkV2 (mkV "through") ; } ; --*
lin go_through_with_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin go_to_1_V2 = variants {mkV2 (mkV "estar") ; mkV2 (mkV "ir") ; mkV2 (mkV "participar") ; mkV2 (mkV "to") ; } ; --*
lin gouache_2_N = mkN "guache" ; --*
lin gouge_1_N = mkN "amassado" ; --*
lin gouge_2_N = mkN "goiva" ; --*
lin gouge_2_V2 = mkV2 (mkV "extorquir") ; --*
lin gouger_2_N = mkN "canteiro" ; --*
lin goulash_N = variants {mkN "goulache" ; mkN "goulash" ; } ; --*
lin go_under_1_V = variants {mkV "down" ; mkV "naufragar" ; mkV "under" ; } ; --*
lin go_under_2_V = variants {mkV "down" ; mkV "pôr" ; mkV "under" ; } ; --*
lin go_up_1_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin go_up_2_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin go_up_3_V = variants {mkV "aproximar-se" ; mkV "close" ; mkV "near" ; mkV "on" ; mkV "up" ; mkV "vir" ; } ; --*
lin go_up_4_V = mkV "up" ; --*
lin go_up_7_V2 = variants {mkV2 (mkV "levantar-se") ; mkV2 (mkV "up") ; } ; --*
lin gourd_1_N = variants {mkN "cabaça" ; mkN "cabaceiro" ; mkN "cuieira" ; mkN "porongo" ; } ; --*
lin gourmand_N = variants {mkN "guloso" ; mkN "rapa" ; } ; --*
lin gout_N = variants {mkN "arthritis" ; mkN "gota" ; } ; --*
lin govern_1_V2 = variants {mkV2 (mkV "regulamentar") ; mkV2 (mkV "regularizar") ; } ; --*
lin govern_2_V2 = variants {mkV2 (mkV "dirigir") ; mkV2 (mkV "gerir") ; mkV2 (mkV "governar") ; mkV2 (mkV "reger") ; } ; --*
lin govern_3_V2 = variants {mkV2 (mkV "gerir") ; mkV2 (mkV "governar") ; mkV2 (mkV "reger") ; mkV2 (mkV "reinar") ; } ; --*
lin governance_1_N = variants {mkN "administração" ; mkN "body" ; mkN "organização" ; } ; --*
lin governance_2_N = variants {mkN "activity" ; mkN "administração" ; mkN "governação" ; mkN "governo" ; } ; --*
lin governess_N = variants {mkN "ama" ; mkN "governanta" ; } ; --*
lin government_1_N = variants {mkN "governo" ; mkN "regime" ; } ; --*
lin government_2_N = variants {mkN "activity" ; mkN "administração" ; mkN "governação" ; mkN "governo" ; } ; --*
lin government_4_N = variants {mkN "política" ; mkN "science" ; } ; --*
lin governmental_A = mkA "governamental" ; --*
lin governor_1_N = mkN "governador" ; --*
lin governor_2_N = mkN "regulador" ; --*
lin governor_general_N = mkN "general" ; --*
lin go_with_1_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "to") ; mkV2 (mkV "with") ; } ; --*
lin gown_1_N = mkN "vestido" ; --*
lin gown_3_N = mkN "camisola" ; --*
lin gown_4_N = variants {mkN "gown" ; mkN "vestido" ; } ; --*
lin gown_5_N = variants {mkN "beca" ; mkN "Beca" ; mkN "manto" ; mkN "vestido" ; } ; --*
lin gown_V2 = mkV2 (mkV "vestido") ; --*
lin gp_N = variants {mkN "clínico" ; mkN "practitioner" ; } ; --*
lin grab_1_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "hold") ; mkV2 (mkV "segurar") ; } ; --*
lin grab_2_N = variants {mkN "agarrão" ; mkN "pegada" ; mkN "pegar" ; } ; --*
lin grab_2_V2 = variants {mkV2 (mkV "arrebatar") ; mkV2 (mkV "up") ; } ; --*
lin grab_6_V2 = variants {mkV2 (mkV "capturar") ; mkV2 (mkV "prender") ; } ; --*
lin grab_V = variants {mkV "arrebatar" ; mkV "up" ; } ; --*
lin grace_1_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "empetecar") ; mkV2 (mkV "enfeitar") ; mkV2 (mkV "ornamentar") ; mkV2 (mkV "ornar") ; } ; --*
lin grace_2_N = mkN "graça" ; --*
lin grace_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "ornamentar") ; } ; --*
lin grace_3_N = variants {mkN "decência" ; mkN "elegância" ; } ; --*
lin grace_4_N = variants {mkN "boa" ; mkN "will" ; } ; --*
lin grace_6_N = mkN "Graça" ; --*
lin grace_7_N = mkN "bênção" ; --*
lin grace_8_N = variants {mkN "graça" ; mkN "grace" ; mkN "of" ; } ; --*
lin graceful_1_A = mkA "gracioso" ; --*
lin graceful_2_A = variants {mkA "elegante" ; mkA "esbelto" ; mkA "gracioso" ; } ; --*
lin gracefulness_N = mkN "graça" ; --*
lin gracious_2_A = mkA "benigno" ; --*
lin gracious_3_A = variants {mkA "cortês" ; mkA "gentil" ; } ; --*
lin grad_1_N = variants {mkN "grado" ; mkN "Grado" ; } ; --*
lin grad_2_N = variants {mkN "alumnus" ; mkN "graduado" ; } ; --*
lin gradable_A = mkA "graduável" ; --*
lin gradation_1_N = variants {mkN "gradação" ; mkN "grau" ; } ; --*
lin grade_1_N = variants {mkN "aula" ; mkN "classe" ; mkN "curso" ; } ; --*
lin grade_1_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "ranquiar") ; } ; --*
lin grade_2_N = variants {mkN "classe" ; mkN "nível" ; mkN "posto" ; } ; --*
lin grade_2_V2 = mkV2 (mkV "nivelar") ; --*
lin grade_3_N = mkN "inclinação" ; --*
lin grade_3_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "dar") ; } ; --*
lin grade_4_N = variants {mkN "grado" ; mkN "Grado" ; } ; --*
lin grade_6_N = variants {mkN "classe" ; mkN "nota" ; } ; --*
lin grade_8_N = mkN "grau" ; --*
lin gradient_1_N = mkN "gradiente" ; --*
lin gradient_2_N = variants {mkN "declives" ; mkN "inclinação" ; mkN "talude" ; } ; --*
lin grading_2_N = mkN "nivelação" ; --*
lin gradual_1_A = mkA "gradual" ; --*
lin gradual_2_A = mkA "gradual" ; --*
lin graduate_1_N = variants {mkN "alumnus" ; mkN "graduado" ; } ; --*
lin graduate_2_V2 = variants {mkV2 (mkV "graduar") ; mkV2 (mkV "licenciar") ; } ; --*
lin graduate_3_V2 = mkV2 (mkV "calibrar") ; --*
lin graduate_A = mkA "graduado" ; --*
lin graduate_V = variants {mkV "bacharelar" ; mkV "formar" ; mkV "graduar" ; } ; --*
lin graduation_2_N = variants {mkN "ceremony" ; mkN "colação" ; mkN "exercise" ; } ; --*
lin graffito_N = variants {mkN "grafite" ; mkN "Grafite" ; mkN "pichação" ; } ; --*
lin graft_1_N = mkN "enxerto" ; --*
lin graft_1_V2 = mkV2 (mkV "enxertar") ; --*
lin graft_2_N = mkN "suborno" ; --*
lin graft_2_V2 = mkV2 (mkV "transplantar") ; --*
lin graft_2_V = mkV "transplantar" ; --*
lin graft_3_N = mkN "enxertia" ; --*
lin grail_2_N = variants {mkN "Grail" ; mkN "Santo" ; } ; --*
lin grain_1_N = variants {mkN "grão" ; mkN "partícula" ; } ; --*
lin grain_2_N = variants {mkN "cereais" ; mkN "cereal" ; mkN "grain" ; } ; --*
lin grain_4_N = variants {mkN "grain" ; mkN "grão" ; } ; --*
lin grain_6_N = mkN "grão" ; --*
lin grain_7_N = variants {mkN "cariopse" ; mkN "Cariopse" ; mkN "Cariópse" ; mkN "grão" ; } ; --*
lin grain_8_N = mkN "grão" ; --*
lin gram_1_N = mkN "grama" ; --*
lin grammar_N = variants {mkN "Gramatica" ; mkN "gramática" ; mkN "Gramática" ; } ; --*
lin grammatical_1_A = mkA "gramatical" ; --*
lin grammatical_2_A = mkA "gramatical" ; --*
lin gramme_N = mkN "grama" ; --*
lin gramophone_N = variants {mkN "gramofone" ; mkN "gramophone" ; } ; --*
lin grampus_1_N = variants {mkN "orca" ; mkN "Orca" ; mkN "whale" ; mkN "wolf" ; } ; --*
lin grampus_2_N = variants {mkN "Golfinho-de-risso" ; mkN "griseus" ; } ; --*
lin granada_PN = mkPN "Granada" ; --*
lin granadilla_3_N = variants {mkN "edulis" ; mkN "granadillo" ; mkN "maracujá" ; } ; --*
lin granary_N = variants {mkN "Celeiro" ; mkN "granel" ; } ; --*
lin grand_1_A = mkA "heróico" ; --*
lin grand_2_A = mkA "senhorial" ; --*
lin grand_3_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin grand_4_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin grand_5_A = variants {mkA "elevado" ; mkA "sublime" ; } ; --*
lin grand_6_A = mkA "grande" ; --*
lin grand_7_A = mkA "grandioso" ; --*
lin grand_8_A = mkA "distinto" ; --*
lin grandad_N = variants {mkN "avô" ; mkN "vovô" ; } ; --*
lin grandaunt_N = mkN "tia" ; --*
lin grand_canyon_PN = mkPN "Canyon" ; --*
lin grandchild_N = variants {mkN "neta" ; mkN "neto" ; } ; --*
lin granddad_1_N = variants {mkN "avô" ; mkN "vovô" ; } ; --*
lin granddaughter_N = variants {mkN "neta" ; mkN "neto" ; } ; --*
lin grandeur_1_N = mkN "fulgor" ; --*
lin grandeur_2_N = mkN "nobreza" ; --*
lin grandfather_N = variants {mkN "avô" ; mkN "vovô" ; } ; --*
lin grandiloquence_N = mkN "grandiosidade" ; --*
lin grandiloquent_2_A = mkA "pomposo" ; --*
lin grandiosity_N = mkN "grandiosidade" ; --*
lin grandma_N = variants {mkN "avó" ; mkN "avô" ; mkN "vovó" ; mkN "vovozinha" ; } ; --*
lin grandmaster_N = variants {mkN "Grande" ; mkN "Grandes" ; mkN "grão-mestre" ; } ; --*
lin grandmother_N = variants {mkN "avó" ; mkN "avô" ; mkN "vovó" ; mkN "vovozinha" ; } ; --*
lin grandnephew_N = mkN "sobrinho-neto" ; --*
lin grandniece_N = mkN "sobrinha-neta" ; --*
lin grandpa_N = variants {mkN "avô" ; mkN "vovô" ; } ; --*
lin grandparent_N = variants {mkN "avô" ; mkN "avós" ; } ; --*
lin grand_prix_N = mkN "Prix" ; --*
lin grandson_N = mkN "neto" ; --*
lin granduncle_N = mkN "tio-avô" ; --*
lin granite_1_N = mkN "granito" ; --*
lin granitic_2_A = mkA "granítico" ; --*
lin grannie_N = variants {mkN "avó" ; mkN "avô" ; mkN "vovó" ; mkN "vovozinha" ; } ; --*
lin granny_1_N = variants {mkN "avó" ; mkN "avô" ; mkN "vovó" ; mkN "vovozinha" ; } ; --*
lin grant_1_N = variants {mkN "ajuda" ; mkN "bolsa" ; } ; --*
lin grant_1_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "outorgar") ; mkV2 (mkV "permitir") ; } ; --*
lin grant_3_V3 = mkV3 (mkV "conceder") ; --*
lin grant_4_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "outorgar") ; } ; --*
lin grant_5_PN = variants {mkPN "Cary" ; mkPN "Grant" ; } ; --*
lin grant_5_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "garantir") ; mkV2 (mkV "outorgar") ; } ; --*
lin grant_5_V3 = variants {mkV3 (mkV "dar") ; mkV3 (mkV "garantir") ; mkV3 (mkV "outorgar") ; } ; --*
lin grant_6_PN = variants {mkPN "Grant" ; mkPN "S." ; mkPN "Simpson" ; mkPN "Ulysses" ; } ; --*
lin grant_6_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "submeter-se") ; mkV2 (mkV "sucumbir") ; } ; --*
lin grant_6_V3 = variants {mkV3 (mkV "ceder") ; mkV3 (mkV "conceder") ; mkV3 (mkV "entregar") ; mkV3 (mkV "submeter-se") ; mkV3 (mkV "sucumbir") ; } ; --*
lin grant_7_N = mkN "concessão" ; --*
lin grant_7_V2 = variants {mkV2 (mkV "entregar") ; mkV2 (mkV "over") ; } ; --*
lin grant_to_V3 = variants {mkV3 (mkV "adjudicar") ; mkV3 (mkV "dar") ; mkV3 (mkV "outorgar") ; } ; --*
lin granularity_N = variants {mkN "granularidade" ; mkN "Granularidade" ; } ; --*
lin granulate_1_V2 = mkV2 (mkV "granular") ; --*
lin granulate_1_V = mkV "granular" ; --*
lin granulate_2_V2 = mkV2 (mkV "granular") ; --*
lin granulate_2_V = mkV "granular" ; --*
lin granulation_1_N = variants {mkN "granulação" ; mkN "tissue" ; } ; --*
lin granulocyte_N = variants {mkN "granulócito" ; mkN "Granulócito" ; mkN "Granulócitos" ; } ; --*
lin granuloma_N = mkN "granuloma" ; --*
lin grape_1_N = variants {mkN "bago" ; mkN "uva" ; } ; --*
lin grape_2_N = variants {mkN "videira" ; mkN "vine" ; } ; --*
lin grapefruit_2_N = variants {mkN "toranja" ; mkN "toronja" ; mkN "Toronja" ; } ; --*
lin grape_sugar_N = variants {mkN "dextrose" ; mkN "sugar" ; } ; --*
lin grapevine_1_N = variants {mkN "a" ; mkN "fofoca" ; mkN "of" ; } ; --*
lin grapevine_2_N = variants {mkN "videira" ; mkN "vine" ; } ; --*
lin graph_1_N = variants {mkN "grafo" ; mkN "record" ; } ; --*
lin graph_2_N = variants {mkN "carta" ; mkN "gráfico" ; } ; --*
lin graph_3_N = variants {mkN "grafema" ; mkN "letra" ; mkN "symbol" ; } ; --*
lin graphic_1_A = variants {mkA "gráfico" ; mkA "writing" ; } ; --*
lin graphic_2_A = mkA "gráfico" ; --*
lin graphic_3_A = mkA "gráfico" ; --*
lin graphic_4_A = mkA "gráfico" ; --*
lin graphic_5_A = variants {mkA "gráfico" ; mkA "vivaz" ; } ; --*
lin graphical_1_A = mkA "gráfico" ; --*
lin graphical_2_A = variants {mkA "gráfico" ; mkA "writing" ; } ; --*
lin graphics_1_N = variants {mkN "arte" ; mkN "desenho" ; mkN "gráfico" ; mkN "ilustração" ; mkN "matter" ; } ; --*
lin graphics_2_N = mkN "gráficos" ; --*
lin graphite_N = variants {mkN "grafita" ; mkN "grafite" ; mkN "lead" ; } ; --*
lin graphology_N = mkN "grafologia" ; --*
lin grappa_N = mkN "grappa" ; --*
lin grapple_1_V = variants {mkV "by" ; mkV "do" ; mkV "lidar" ; mkV "out" ; mkV "sobreviver" ; mkV "virar-se" ; } ; --*
lin grapple_2_V = variants {mkV "agarrar" ; mkV "capturar" ; mkV "engalfinhar" ; } ; --*
lin grasp_1_N = mkN "compreensão" ; --*
lin grasp_1_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "on") ; mkV2 (mkV "pegar") ; } ; --*
lin grasp_1_V = variants {mkV "agarrar" ; mkV "on" ; mkV "pegar" ; } ; --*
lin grasp_2_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; mkV2 (mkV "the") ; } ; --*
lin grasp_3_N = mkN "compreensão" ; --*
lin grass_1_N = variants {mkN "erva" ; mkN "grama" ; mkN "relva" ; } ; --*
lin grass_2_N = variants {mkN "Grass" ; mkN "Günter" ; mkN "Wilhelm" ; } ; --*
lin grass_4_N = variants {mkN "pasto" ; mkN "pastos" ; } ; --*
lin grass_5_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin grasshopper_1_N = mkN "gafanhoto" ; --*
lin grassland_N = variants {mkN "pradaria" ; mkN "prado" ; mkN "prados" ; } ; --*
lin grassy_A = variants {mkA "gramado" ; mkA "relvado" ; } ; --*
lin grate_1_N = mkN "grade" ; --*
lin grate_2_V = variants {mkV "corroer" ; mkV "into" ; mkV "magoar" ; } ; --*
lin grate_3_N = mkN "grade" ; --*
lin grate_3_V2 = mkV2 (mkV "ralar") ; --*
lin grate_4_V2 = mkV2 (mkV "ranger") ; --*
lin grate_5_V = mkV "roçar" ; --*
lin grateful_1_A = variants {mkA "agradecido" ; mkA "gratidão" ; mkA "grato" ; mkA "reconhecido" ; } ; --*
lin grateful_2_A = mkA "agradecido" ; --*
lin gratefulness_N = mkN "gratidão" ; --*
lin grater_N = mkN "ralador" ; --*
lin gratification_1_N = mkN "satisfação" ; --*
lin gratification_2_N = mkN "gratificação" ; --*
lin gratify_1_V2 = variants {mkV2 (mkV "agradar") ; mkV2 (mkV "satisfazer") ; } ; --*
lin gratify_2_V2 = mkV2 (mkV "indulgir") ; --*
lin gratifying_1_A = mkA "gratificante" ; --*
lin gratifying_2_A = variants {mkA "agradável" ; mkA "ameno" ; mkA "aprazível" ; } ; --*
lin grating_1_N = mkN "grade" ; --*
lin grating_2_N = mkN "grade" ; --*
lin gratis_A = variants {mkA "de" ; mkA "gratís" ; mkA "grátis" ; mkA "gratuitamente" ; mkA "gratuito" ; } ; --*
lin gratis_Adv = variants {mkAdv "free" ; mkAdv "grátis" ; mkAdv "of" ; } ; --*
lin gratitude_N = mkN "gratidão" ; --*
lin gratuitous_2_A = variants {mkA "de" ; mkA "gratís" ; mkA "grátis" ; mkA "gratuitamente" ; mkA "gratuito" ; } ; --*
lin gratuitous_3_A = variants {mkA "desnecessário" ; mkA "gratuito" ; } ; --*
lin gratuity_1_N = mkN "gorjeta" ; --*
lin gratuity_2_N = mkN "recompensa" ; --*
lin grave_1_A = variants {mkA "grave" ; mkA "solene" ; } ; --*
lin grave_1_V2 = mkV2 (mkV "esculpir") ; --*
lin grave_2_A = variants {mkA "grave" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin grave_2_N = variants {mkN "sepultura" ; mkN "tumba" ; mkN "túmulo" ; } ; --*
lin grave_2_V2 = mkV2 (mkV "estampar") ; --*
lin grave_3_N = variants {mkN "accent" ; mkN "acento" ; } ; --*
lin gravedigger_N = mkN "coveiro" ; --*
lin gravel_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin gravel_3_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin gravelly_2_A = mkA "áspero" ; --*
lin gravel_N = variants {mkN "areia" ; mkN "brita" ; mkN "gravilha" ; mkN "rock" ; } ; --*
lin graveness_N = variants {mkN "gravidade" ; mkN "sobriedade" ; } ; --*
lin gravestone_N = variants {mkN "estela" ; mkN "lápide" ; mkN "Lápide" ; } ; --*
lin graveyard_N = variants {mkN "cemitério" ; mkN "ground" ; mkN "necrópole" ; mkN "park" ; mkN "site" ; } ; --*
lin gravidity_N = variants {mkN "embaraço" ; mkN "gravidez" ; } ; --*
lin gravimeter_1_N = mkN "densímetro" ; --*
lin graving_dock_N = variants {mkN "Dique" ; mkN "dock" ; } ; --*
lin gravitate_1_V = mkV "gravitar" ; --*
lin gravitate_2_V = mkV "gravitar" ; --*
lin gravitate_3_V = mkV "gravitar" ; --*
lin gravitation_1_N = variants {mkN "attraction" ; mkN "force" ; mkN "gravidade" ; mkN "gravitação" ; } ; --*
lin gravitation_2_N = variants {mkN "gravidade" ; mkN "Gravitação" ; } ; --*
lin gravitational_A = mkA "gravitacional" ; --*
lin graviton_N = variants {mkN "gravitão" ; mkN "Graviton" ; mkN "gráviton" ; } ; --*
lin gravity_1_N = variants {mkN "attraction" ; mkN "force" ; mkN "gravidade" ; mkN "gravitação" ; } ; --*
lin gravity_2_N = variants {mkN "gravidade" ; mkN "sobriedade" ; } ; --*
lin gravity_3_N = variants {mkN "seriedade" ; mkN "solenidade" ; } ; --*
lin gravure_1_N = variants {mkN "entalhe" ; mkN "printing" ; } ; --*
lin gravy_1_N = mkN "Brun" ; --*
lin gravy_3_N = variants {mkN "dádiva" ; mkN "from" ; mkN "rush" ; } ; --*
lin gravy_boat_N = variants {mkN "boat" ; mkN "holder" ; mkN "molheira" ; } ; --*
lin graze_1_V = mkV "pastar" ; --*
lin graze_2_N = mkN "paste" ; --*
lin graze_3_V2 = mkV2 (mkV "pastar") ; --*
lin graze_3_V = mkV "pastar" ; --*
lin graze_5_V = variants {mkV "dar" ; mkV "folear" ; mkV "pastar" ; } ; --*
lin grazing_1_N = mkN "paste" ; --*
lin grazing_land_N = variants {mkN "land" ; mkN "pastagens" ; mkN "pasto" ; mkN "prado" ; } ; --*
lin graz_PN = mkPN "Graz" ; --*
lin grease_1_N = variants {mkN "Graxa" ; mkN "oil" ; } ; --*
lin grease_2_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin grease_V2 = variants {mkV2 (mkV "engraxar") ; mkV2 (mkV "lubrificar") ; mkV2 (mkV "untar") ; } ; --*
lin greasewood_N = variants {mkN "greasewood" ; mkN "Sarcobatus" ; mkN "vermiculatus" ; } ; --*
lin greasy_1_A = variants {mkA "gordo" ; mkA "gordurento" ; mkA "gorduroso" ; mkA "oleoso" ; } ; --*
lin greasy_2_A = mkA "gordo" ; --*
lin great_1_A = variants {mkA "amplo" ; mkA "extenso" ; } ; --*
lin great_2_A = mkA "o" ; --*
lin great_3_A = variants {mkA "estonteante" ; mkA "formidável" ; mkA "grande" ; mkA "grandioso" ; mkA "notável" ; } ; --*
lin great_4_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin great_6_A = variants {mkA "child" ; mkA "grávida" ; } ; --*
lin greatcoat_N = variants {mkN "casacão" ; mkN "paletó" ; mkN "sobretudo" ; mkN "Sobretudo" ; } ; --*
lin greater_A = mkA "maior" ; --*
lin greatest_A = variants {mkA "o" ; mkA "superior" ; } ; --*
lin greathearted_A = variants {mkA "brioso" ; mkA "magnânimo" ; } ; --*
lin greatly_Adv = variants {mkAdv "bastante" ; mkAdv "muito" ; } ; --*
lin greatness_2_N = variants {mkN "enormidade" ; mkN "grandeza" ; mkN "imensidade" ; mkN "imensidão" ; } ; --*
lin greave_N = mkN "greva" ; --*
lin grecian_A = mkA "grego" ; --*
lin greece_1_PN = variants {mkPN "Grécia" ; mkPN "Republic" ; } ; --*
lin greece_2_PN = variants {mkPN "Grecia" ; mkPN "Grécia" ; } ; --*
lin greed_1_N = variants {mkN "avareza" ; mkN "cobiça" ; mkN "ganância" ; mkN "gula" ; } ; --*
lin greed_2_N = variants {mkN "avareza" ; mkN "avarícia" ; mkN "avidez" ; mkN "cobiça" ; mkN "ganância" ; } ; --*
lin greedy_1_A = variants {mkA "avaro" ; mkA "ávido" ; mkA "ganancioso" ; } ; --*
lin greedy_for_A2 = mkA2 (mkA "ávido") noPrep ; --*
lin greek_A = mkA "grego" ; --*
lin greekFem_N = variants {mkN "grega" ; mkN "grego" ; mkN "heleno" ; } ; --*
lin greekMasc_N = variants {mkN "grega" ; mkN "grego" ; mkN "heleno" ; } ; --*
lin greek_N = variants {mkN "grego" ; mkN "Grego" ; mkN "language" ; } ; --*
lin green_1_A = variants {mkA "esverdeado" ; mkA "verde" ; } ; --*
lin green_1_N = variants {mkN "verde" ; mkN "Verde" ; } ; --*
lin green_2_N = variants {mkN "espaços" ; mkN "parque" ; } ; --*
lin green_3_A = variants {mkA "imaturo" ; mkA "verde" ; } ; --*
lin green_4_A = mkA "verdejante" ; --*
lin green_4_N = variants {mkN "militante" ; mkN "Verde" ; } ; --*
lin green_5_A = variants {mkA "crédulo" ; mkA "ingénuo" ; } ; --*
lin green_7_N = variants {mkN "vegetable" ; mkN "vegetal" ; } ; --*
lin greenback_N = variants {mkN "bill" ; mkN "cédula" ; mkN "nota" ; mkN "note" ; mkN "Reserve" ; } ; --*
lin greenhorn_N = variants {mkN "novato" ; mkN "Rookie" ; } ; --*
lin greenhouse_N = variants {mkN "estufa" ; mkN "plantel" ; mkN "viveiro" ; } ; --*
lin greenish_A = variants {mkA "esverdeado" ; mkA "verde" ; } ; --*
lin greenness_3_N = variants {mkN "verde" ; mkN "Verde" ; } ; --*
lin greens_N = variants {mkN "vegetable" ; mkN "vegetal" ; } ; --*
lin greenwich_PN = mkPN "Greenwich" ; --*
lin greet_1_V2 = variants {mkV2 (mkV "cumprimentar") ; mkV2 (mkV "saudar") ; } ; --*
lin greet_2_V2 = mkV2 (mkV "saudar") ; --*
lin greeting_N = mkN "saudação" ; --*
lin gregarious_1_A = mkA "gregário" ; --*
lin gregarious_2_A = mkA "gregário" ; --*
lin gregarious_3_A = mkA "gregário" ; --*
lin gregorian_1_A = mkA "gregoriano" ; --*
lin gremlin_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin grenada_PN = mkPN "Granada" ; --*
lin grenade_N = variants {mkN "granada" ; mkN "romã" ; } ; --*
lin grenadian_A = mkA "granadino" ; --*
lin grenadier_2_N = variants {mkN "fish" ; mkN "Macrouridae" ; } ; --*
lin grenadine_N = mkN "grenadina" ; --*
lin grey_10_N = variants {mkN "gray" ; mkN "Gray" ; } ; --*
lin grey_11_N = variants {mkN "cinza" ; mkN "Gray" ; } ; --*
lin grey_12_N = variants {mkN "Asa" ; mkN "Gray" ; } ; --*
lin grey_1_A = variants {mkA "acinzentado" ; mkA "cinza" ; mkA "cinzenta" ; mkA "cinzento" ; mkA "gris" ; } ; --*
lin grey_2_N = variants {mkN "Jane" ; mkN "Joana" ; } ; --*
lin grey_2_V = variants {mkV "acinzentar" ; mkV "encanecer" ; } ; --*
lin grey_5_N = mkN "cinza" ; --*
lin grey_8_N = mkN "gray" ; --*
lin greyback_1_N = variants {mkN "Johnny" ; mkN "Reb" ; } ; --*
lin greybeard_1_N = variants {mkN "avô" ; mkN "man" ; mkN "velho" ; } ; --*
lin greyhound_N = variants {mkN "galgo" ; mkN "lebréu" ; } ; --*
lin greyish_1_A = variants {mkA "acinzentado" ; mkA "cinza" ; mkA "cinzenta" ; mkA "cinzento" ; mkA "gris" ; } ; --*
lin grid_4_N = variants {mkN "grade" ; mkN "grid" ; } ; --*
lin grief_1_N = variants {mkN "amargura" ; mkN "coração" ; mkN "desgosto" ; mkN "dor" ; mkN "pesar" ; mkN "tristeza" ; } ; --*
lin grief_2_N = variants {mkN "aflição" ; mkN "dor" ; mkN "mágoa" ; mkN "pesar" ; mkN "tristeza" ; } ; --*
lin grievance_1_N = mkN "ressentimento" ; --*
lin grievance_3_N = mkN "reivindicação" ; --*
lin grieve_1_V2 = variants {mkV2 (mkV "afligir-se") ; mkV2 (mkV "magoar") ; mkV2 (mkV "sofrer") ; } ; --*
lin grieve_1_V = variants {mkV "afligir-se" ; mkV "magoar" ; mkV "sofrer" ; } ; --*
lin grieve_2_V2 = mkV2 (mkV "entristecer") ; --*
lin grievous_1_A = variants {mkA "grave" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin grievous_4_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "nefando" ; } ; --*
lin griffin_N = mkN "grifo" ; --*
lin griffon_1_N = mkN "grifo" ; --*
lin griffon_4_N = variants {mkN "fulvus" ; mkN "grifo" ; mkN "vulture" ; } ; --*
lin grill_1_N = mkN "churrasqueira" ; --*
lin grill_1_V2 = mkV2 (mkV "grelhar") ; --*
lin grill_2_N = variants {mkN "cancela" ; mkN "grade" ; mkN "grelha" ; } ; --*
lin grille_2_N = variants {mkN "grade" ; mkN "grille" ; } ; --*
lin grille_3_N = variants {mkN "cancela" ; mkN "grade" ; mkN "grelha" ; } ; --*
lin grillroom_N = mkN "churrasqueira" ; --*
lin grim_1_A = mkA "implacável" ; --*
lin grim_2_A = variants {mkA "horrível" ; mkA "macabro" ; } ; --*
lin grim_5_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin grim_6_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin grimace_N = variants {mkN "careta" ; mkN "fazercaretas" ; mkN "trejeito" ; } ; --*
lin grimace_V = variants {mkV "a" ; mkV "fazer" ; } ; --*
lin grime_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin grime_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; mkV2 (mkV "sujar") ; } ; --*
lin grimness_2_N = mkN "rigor" ; --*
lin grimoire_N = variants {mkN "grimório" ; mkN "Grimórios" ; } ; --*
lin grimy_A = variants {mkA "encardido" ; mkA "grudento" ; mkA "sujo" ; } ; --*
lin grind_2_V2 = mkV2 (mkV "ranger") ; --*
lin grind_3_N = mkN "trabalho" ; --*
lin grind_3_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin grind_4_N = variants {mkN "pulverização" ; mkN "trituração" ; } ; --*
lin grind_5_V2 = variants {mkV2 (mkV "moer") ; mkV2 (mkV "triturar") ; } ; --*
lin grind_away_V = variants {mkV "away" ; mkV "marrar" ; mkV "up" ; } ; --*
lin grind_down_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "tiranizar") ; } ; --*
lin grinder_2_N = variants {mkN "dente" ; mkN "molar" ; } ; --*
lin grinder_3_N = variants {mkN "machinery" ; mkN "moinho" ; mkN "moinhos" ; } ; --*
lin grinder_4_N = mkN "esmeril" ; --*
lin grinding_3_N = mkN "abrasão" ; --*
lin grindstone_N = mkN "rebolo" ; --*
lin gringo_N = variants {mkN "gringo" ; mkN "Gringo" ; } ; --*
lin grin_N = variants {mkN "riso" ; mkN "sorriso" ; } ; --*
lin grin_V = mkV "sorrir" ; --*
lin griot_N = mkN "Griot" ; --*
lin grip_1_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "segurar") ; } ; --*
lin grip_2_N = variants {mkN "alça" ; mkN "cabo" ; mkN "taramela" ; mkN "trinco" ; } ; --*
lin grip_2_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "capturar") ; mkV2 (mkV "engalfinhar") ; } ; --*
lin grip_3_N = variants {mkN "bag" ; mkN "mala" ; mkN "valise" ; } ; --*
lin grip_3_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin grip_4_N = variants {mkN "friction" ; mkN "tracção" ; mkN "Tracção" ; } ; --*
lin grip_6_N = mkN "compreensão" ; --*
lin gripe_N = variants {mkN "queixa" ; mkN "reclamação" ; } ; --*
lin gripe_VS = variants {mkVS (mkV "gritar") ; mkVS (mkV "reclamar") ; } ; --*
lin grippe_N = variants {mkN "gripe" ; mkN "Gripe" ; mkN "influenza" ; } ; --*
lin grisaille_N = variants {mkN "grisaille" ; mkN "grisalha" ; } ; --*
lin griseofulvin_N = variants {mkN "griseofulvina" ; mkN "Griseofulvina" ; } ; --*
lin grisly_A = variants {mkA "horrível" ; mkA "macabro" ; } ; --*
lin gristle_N = variants {mkN "cartilagem" ; mkN "tecido" ; } ; --*
lin grit_2_N = variants {mkN "entranhas" ; mkN "vísceras" ; } ; --*
lin grizzle_1_V = mkV "ficar" ; --*
lin grizzle_2_V = mkV "birra" ; --*
lin grizzly_N = variants {mkN "arctos" ; mkN "bear" ; mkN "horribilis" ; mkN "Urso" ; mkN "Urso-cinzento" ; } ; --*
lin groan_N = variants {mkN "gemido" ; mkN "gemir" ; mkN "lamento" ; } ; --*
lin groan_V = variants {mkV "carpir" ; mkV "gemer" ; mkV "gemir" ; mkV "lamentar-se" ; } ; --*
lin grocer_N = variants {mkN "merceeiro" ; mkN "vendedor" ; } ; --*
lin grocery_1_N = variants {mkN "empório" ; mkN "feira" ; mkN "market" ; mkN "mercado" ; mkN "store" ; mkN "supermercado" ; } ; --*
lin grocery_2_N = mkN "mantimento" ; --*
lin grog_N = mkN "grogue" ; --*
lin groin_1_N = mkN "virilha" ; --*
lin groin_3_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin groom_1_N = variants {mkN "namorado" ; mkN "noivo" ; } ; --*
lin groom_1_V2 = mkV2 (mkV "preparar") ; --*
lin groom_2_N = mkN "palafreneiro" ; --*
lin groom_3_N = mkN "noivo" ; --*
lin groom_3_V2 = mkV2 (mkV "cuidar-se") ; --*
lin groove_1_N = mkN "ranhura" ; --*
lin groove_2_V2 = mkV2 (mkV "sulcar") ; --*
lin groovy_1_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin grope_1_V = variants {mkV "apalpar" ; mkV "palpar" ; mkV "tatear" ; } ; --*
lin grope_2_V2 = mkV2 (mkV "procurar") ; --*
lin groschen_N = variants {mkN "ceitil" ; mkN "groche" ; mkN "vintém" ; } ; --*
lin gross_1_A = mkA "bruto" ; --*
lin gross_2_N = variants {mkN "faturamento" ; mkN "rendimento" ; mkN "retorno" ; } ; --*
lin gross_6_A = mkA "ordinário" ; --*
lin grossness_N = variants {mkN "grosseria" ; mkN "obscenidades" ; } ; --*
lin grotesque_1_A = variants {mkA "grotesco" ; mkA "monstruoso" ; } ; --*
lin grotesque_2_A = mkA "fantástico" ; --*
lin grot_N = variants {mkN "algar" ; mkN "Algar" ; mkN "caverna" ; mkN "furna" ; mkN "gruta" ; mkN "grutas" ; } ; --*
lin grotto_N = variants {mkN "algar" ; mkN "Algar" ; mkN "caverna" ; mkN "furna" ; mkN "gruta" ; mkN "grutas" ; } ; --*
lin grouch_N = mkN "pessoa" ; --*
lin grouch_V = mkV "ralhar" ; --*
lin grouchy_A = variants {mkA "birrento" ; mkA "mal" ; mkA "rabugento" ; } ; --*
lin ground_12_V2 = variants {mkV2 (mkV "basear") ; mkV2 (mkV "fundamentar") ; } ; --*
lin ground_1_N = variants {mkN "chão" ; mkN "firma" ; mkN "ground" ; mkN "land" ; mkN "solo" ; mkN "terra" ; } ; --*
lin ground_1_V2 = variants {mkV2 (mkV "ancorar") ; mkV2 (mkV "escorar") ; } ; --*
lin ground_2_N = variants {mkN "causa" ; mkN "motivo" ; mkN "razão" ; } ; --*
lin ground_3_N = mkN "solo" ; --*
lin ground_4_N = mkN "base" ; --*
lin ground_5_V2 = variants {mkV2 (mkV "aground") ; mkV2 (mkV "encalhar") ; } ; --*
lin ground_6_N = variants {mkN "fundo" ; mkN "plano" ; } ; --*
lin ground_7_N = variants {mkN "solo" ; mkN "solos" ; mkN "terra" ; } ; --*
lin ground_9_N = mkN "terra" ; --*
lin groundbreaking_A = mkA "inovador" ; --*
lin groundbreaking_N = variants {mkN "ceremony" ; mkN "Pedra" ; } ; --*
lin grounding_1_N = variants {mkN "base" ; mkN "fundamento" ; } ; --*
lin groundless_A = variants {mkA "infundado" ; mkA "não" ; mkA "sem" ; mkA "sembase" ; mkA "semfundamento" ; } ; --*
lin groundnut_1_N = variants {mkN "amendoim" ; mkN "americana" ; mkN "bean" ; mkN "potato" ; mkN "tuberosa" ; mkN "vine" ; } ; --*
lin groundnut_2_N = variants {mkN "amendoim" ; mkN "bean" ; } ; --*
lin groundnut_3_N = variants {mkN "amendoim" ; mkN "ginguba" ; mkN "nut" ; mkN "pea" ; } ; --*
lin grounds_1_N = mkN "evidência" ; --*
lin grounds_2_N = variants {mkN "cercado" ; mkN "jardim" ; mkN "pátio" ; mkN "quintal" ; } ; --*
lin groundwork_1_N = variants {mkN "base" ; mkN "fundação" ; } ; --*
lin groundwork_2_N = variants {mkN "alicerce" ; mkN "base" ; mkN "pé" ; } ; --*
lin group_1_N = variants {mkN "agrupação" ; mkN "conjunto" ; mkN "grupo" ; } ; --*
lin group_1_V2 = variants {mkV2 (mkV "agrupar") ; mkV2 (mkV "agrupar-se") ; } ; --*
lin group_3_N = variants {mkN "group" ; mkN "grupo" ; } ; --*
lin grouper_1_N = mkN "garoupa" ; --*
lin grouper_2_N = mkN "garoupa" ; --*
lin groupie_N = variants {mkN "fã" ; mkN "Groupies" ; } ; --*
lin grouping_1_N = variants {mkN "agrupação" ; mkN "conjunto" ; mkN "grupo" ; } ; --*
lin grouping_2_N = mkN "agrupamento" ; --*
lin groupthink_N = mkN "pensamento" ; --*
lin groupware_N = mkN "groupware" ; --*
lin grouse_2_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin grove_1_N = variants {mkN "bosque" ; mkN "bosquete" ; } ; --*
lin grove_2_N = variants {mkN "horta" ; mkN "pomar" ; mkN "Pomar" ; mkN "vergel" ; } ; --*
lin grovel_V = variants {mkV "acovardar" ; mkV "acovardar-se" ; } ; --*
lin grow_10_V = variants {mkV "acontecer" ; mkV "tornar-se" ; } ; --*
lin grow_1_VA = variants {mkVA (mkV "acontecer") ; mkVA (mkV "mudar") ; mkVA (mkV "tornar-se") ; } ; --*
lin grow_2_VA = variants {mkVA (mkV "aumentar") ; mkVA (mkV "crescer") ; } ; --*
lin grow_3_V = mkV "crescer" ; --*
lin grow_5_VA = mkVA (mkV "amadurecer") ; --*
lin grow_6_V = variants {mkV "originar-se" ; mkV "provir" ; mkV "surgir" ; mkV "up" ; } ; --*
lin grow_7_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin grow_8_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "crescer") ; mkV2 (mkV "ganhar") ; } ; --*
lin grow_9_V = mkV "acontecer" ; --*
lin grower_N = variants {mkN "agricultor" ; mkN "agricultora" ; mkN "agrônomo" ; mkN "cultivador" ; mkN "engenheiro" ; } ; --*
lin growing_1_N = variants {mkN "crescimento" ; mkN "ontogénese" ; mkN "ontogenia" ; } ; --*
lin growl_V2 = mkV2 (mkV "rosnar") ; --*
lin growl_V = mkV "rosnar" ; --*
lin grown_up_A = variants {mkA "adulto" ; mkA "crescido" ; mkA "grown" ; mkA "maior" ; } ; --*
lin grown_up_N = variants {mkN "adulto" ; mkN "de" ; mkN "terceira" ; } ; --*
lin growth_1_N = variants {mkN "crescimento" ; mkN "ontogénese" ; mkN "ontogenia" ; } ; --*
lin growth_2_N = variants {mkN "crescimento" ; mkN "evolução" ; mkN "progresso" ; } ; --*
lin growth_3_N = variants {mkN "acréscimo" ; mkN "aumento" ; mkN "crescimento" ; mkN "incremento" ; } ; --*
lin growth_5_N = variants {mkN "crescimento" ; mkN "emergência" ; } ; --*
lin growth_6_N = mkN "tumores" ; --*
lin groyne_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin grub_2_N = variants {mkN "larva" ; mkN "verme" ; } ; --*
lin grubby_2_A = variants {mkA "encardido" ; mkA "grudento" ; mkA "sujo" ; } ; --*
lin grudge_1_V2 = mkV2 (mkV "ressentir") ; --*
lin grudge_2_V2 = mkV2 (mkV "admitir") ; --*
lin grudge_N = mkN "ressentimento" ; --*
lin grudging_2_A = mkA "tinhoso" ; --*
lin gruelling_1_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin gruel_N = variants {mkN "mingau" ; mkN "papas" ; mkN "purê" ; } ; --*
lin gruesome_A = variants {mkA "horrível" ; mkA "macabro" ; } ; --*
lin gruff_2_A = variants {mkA "rouca" ; mkA "rouco" ; mkA "rouquenho" ; } ; --*
lin gruffness_1_N = mkN "rouquidão" ; --*
lin grugru_N = variants {mkN "Acrocomia" ; mkN "aculeata" ; mkN "palm" ; } ; --*
lin grumble_1_V = mkV "ralhar" ; --*
lin grumble_2_V = variants {mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin grumble_3_V = mkV "rosnar" ; --*
lin grumble_V2 = mkV2 (mkV "rosnar") ; --*
lin grumble_VS = variants {mkVS (mkV "murmurar") ; mkVS (mkV "resmungar") ; } ; --*
lin grumpy_A = variants {mkA "birrento" ; mkA "mal" ; mkA "rabugento" ; } ; --*
lin grundyism_N = mkN "pudor" ; --*
lin grunge_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin grunter_2_N = variants {mkN "porco" ; mkN "scrofa" ; mkN "suíno" ; mkN "Sus" ; } ; --*
lin gryphon_N = mkN "grifo" ; --*
lin guacamole_N = mkN "guacamole" ; --*
lin guadalajara_PN = mkPN "Guadalajara" ; --*
lin guaiacum_3_N = mkN "Guaiacum" ; --*
lin guanaco_N = variants {mkN "guanaco" ; mkN "guanicoe" ; } ; --*
lin guanine_N = variants {mkN "guanina" ; mkN "Guanina" ; } ; --*
lin guano_N = mkN "guano" ; --*
lin guarani_2_N = mkN "guarani" ; --*
lin guarani_3_N = mkN "guarani" ; --*
lin guarantee_1_N = variants {mkN "garantia" ; mkN "Garantia" ; } ; --*
lin guarantee_1_V = mkV "afiançar" ; --*
lin guarantee_2_N = variants {mkN "caução" ; mkN "garantia" ; } ; --*
lin guarantee_2_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "assegurar-se") ; mkV2 (mkV "certificar-se") ; mkV2 (mkV "garantir") ; mkV2 (mkV "ter") ; } ; --*
lin guarantee_4_V2 = mkV2 (mkV "garantir") ; --*
lin guarantee_VV = mkVV (mkV "garantir") ; --*
lin guard_1_N = mkN "guarda" ; --*
lin guard_1_V2 = mkV2 (mkV "custodiar") ; --*
lin guard_2_V2 = variants {mkV2 (mkV "defender") ; mkV2 (mkV "guardar") ; mkV2 (mkV "salvaguardar") ; mkV2 (mkV "salvar") ; } ; --*
lin guard_3_V2 = mkV2 (mkV "defender") ; --*
lin guard_7_N = mkN "precaução" ; --*
lin guard_8_N = variants {mkN "duty" ; mkN "go" ; mkN "guarda" ; } ; --*
lin guard_9_N = mkN "guard" ; --*
lin guardian_N = variants {mkN "defensor" ; mkN "guarda" ; mkN "guardião" ; mkN "protetor" ; mkN "tutor" ; } ; --*
lin guardianship_1_N = variants {mkN "cuidado" ; mkN "tutela" ; } ; --*
lin guardianship_2_N = variants {mkN "obrigação" ; mkN "responsabilidade" ; } ; --*
lin guard_V = mkV "defender" ; --*
lin guatemala_city_PN = variants {mkPN "City" ; mkPN "of" ; } ; --*
lin guatemalan_N = variants {mkN "guatemalense" ; mkN "guatemalteco" ; } ; --*
lin guatemala_PN = variants {mkPN "Guatemala" ; mkPN "of" ; } ; --*
lin guava_1_N = variants {mkN "Araçá" ; mkN "cattley" ; mkN "guava" ; mkN "littorale" ; } ; --*
lin guava_2_N = variants {mkN "bush" ; mkN "goiabeira" ; mkN "guajava" ; mkN "guava" ; } ; --*
lin guava_3_N = mkN "goiaba" ; --*
lin guayaquil_PN = mkPN "Guaiaquil" ; --*
lin guayule_N = variants {mkN "argentatum" ; mkN "guaiúle" ; } ; --*
lin guelder_rose_N = variants {mkN "cranberry" ; mkN "cranberrybush" ; mkN "opulus" ; mkN "rose" ; mkN "tree" ; mkN "Viburnum" ; } ; --*
lin guerilla_N = variants {mkN "guerrilha" ; mkN "guerrilheiro" ; } ; --*
lin guerrilla_N = variants {mkN "guerrilha" ; mkN "guerrilheiro" ; } ; --*
lin guess_1_N = variants {mkN "conjectura" ; mkN "especulação" ; mkN "fazerdeconta" ; mkN "hipótese" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin guess_1_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "esperar") ; mkVS (mkV "pensar") ; mkVS (mkV "supor") ; } ; --*
lin guess_2_N = variants {mkN "conjetura" ; mkN "reckoning" ; } ; --*
lin guess_2_VS = variants {mkVS (mkV "adivinhar") ; mkVS (mkV "aventurar") ; mkVS (mkV "pretender") ; mkVS (mkV "supor") ; } ; --*
lin guess_3_V2 = variants {mkV2 (mkV "chutar") ; mkV2 (mkV "estimar") ; } ; --*
lin guess_3_VS = variants {mkVS (mkV "chutar") ; mkVS (mkV "estimar") ; } ; --*
lin guess_4_V2 = variants {mkV2 (mkV "inferir") ; mkV2 (mkV "supor") ; } ; --*
lin guess_V = variants {mkV "chutar" ; mkV "estimar" ; } ; --*
lin guesswork_N = variants {mkN "conjetura" ; mkN "reckoning" ; } ; --*
lin guest_1_N = variants {mkN "convidado" ; mkN "hóspede" ; mkN "visitante" ; } ; --*
lin guesthouse_N = mkN "pensão" ; --*
lin guffaw_N = variants {mkN "gargalhada" ; mkN "laugh" ; } ; --*
lin guidance_1_N = variants {mkN "aconselhamento" ; mkN "conselho" ; mkN "direção" ; } ; --*
lin guidance_2_N = variants {mkN "direção" ; mkN "direcção" ; mkN "directriz" ; mkN "gerência" ; mkN "gestão" ; } ; --*
lin guidance_3_N = mkN "orientação" ; --*
lin guide_1_V2 = variants {mkV2 (mkV "canalizar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; } ; --*
lin guide_2_N = mkN "guia" ; --*
lin guide_2_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "levar") ; } ; --*
lin guide_3_N = mkN "guia" ; --*
lin guide_3_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "encaminhar") ; mkV2 (mkV "gerir") ; mkV2 (mkV "guiar") ; } ; --*
lin guide_4_N = variants {mkN "clichê" ; mkN "gabarito" ; mkN "modelo" ; mkN "molde" ; mkN "predefinição" ; } ; --*
lin guide_4_V2 = variants {mkV2 (mkV "guiar") ; mkV2 (mkV "on") ; } ; --*
lin guide_5_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "passar") ; } ; --*
lin guidebook_N = mkN "guia" ; --*
lin guideline_1_N = mkN "pauta" ; --*
lin guideline_3_N = variants {mkN "guia" ; mkN "indicações" ; mkN "of" ; } ; --*
lin guidepost_1_N = variants {mkN "guia" ; mkN "indicações" ; mkN "of" ; } ; --*
lin guilder_1_N = mkN "florim" ; --*
lin guilder_2_N = variants {mkN "florim" ; mkN "florin" ; mkN "Guilder" ; } ; --*
lin guild_N = variants {mkN "club" ; mkN "clube" ; mkN "guilda" ; mkN "ordem" ; mkN "sociedade" ; } ; --*
lin guile_1_N = mkN "astúcia" ; --*
lin guile_3_N = variants {mkN "artimanha" ; mkN "astúcia" ; } ; --*
lin guileful_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin guillotine_1_N = variants {mkN "by" ; mkN "guilhotina" ; } ; --*
lin guillotine_2_N = mkN "guilhotina" ; --*
lin guillotine_V2 = mkV2 (mkV "guilhotinar") ; --*
lin guilt_1_N = variants {mkN "culpa" ; mkN "delinquência" ; } ; --*
lin guilt_2_N = variants {mkN "conscience" ; mkN "culpa" ; mkN "feelings" ; mkN "trip" ; } ; --*
lin guiltiness_N = variants {mkN "culpa" ; mkN "delinquência" ; } ; --*
lin guiltless_A = mkA "inocente" ; --*
lin guilty_A = mkA "culpado" ; --*
lin guinea_1_N = mkN "guinéu" ; --*
lin guinea_4_N = variants {mkN "fowl" ; mkN "galinha" ; mkN "meleagris" ; } ; --*
lin guinea_fowl_N = variants {mkN "fowl" ; mkN "galinha" ; mkN "meleagris" ; } ; --*
lin guinean_A = variants {mkA "guineano" ; mkA "guineense" ; mkA "guinéu" ; } ; --*
lin guinea_pig_1_N = variants {mkN "cobaia" ; mkN "pig" ; } ; --*
lin guinea_pig_2_N = variants {mkN "cobaya" ; mkN "pig" ; } ; --*
lin guinea_PN = variants {mkPN "Guine" ; mkPN "Guinea" ; mkPN "of" ; } ; --*
lin guinness_1_N = variants {mkN "Alec" ; mkN "Guinness" ; } ; --*
lin guinness_2_N = mkN "Guinness" ; --*
lin guise_N = variants {mkN "aparência" ; mkN "pretexto" ; } ; --*
lin guitarfish_N = mkN "Rhinobatidae" ; --*
lin guitarist_N = variants {mkN "guitarreiro" ; mkN "guitarrista" ; mkN "Guitarrista" ; mkN "Guitarristas" ; mkN "player" ; mkN "violonista" ; } ; --*
lin guitar_N = variants {mkN "guitarra" ; mkN "Guitarra" ; mkN "violão" ; } ; --*
lin gulden_1_N = mkN "florim" ; --*
lin gulden_2_N = variants {mkN "florim" ; mkN "florin" ; mkN "Guilder" ; } ; --*
lin gulf_1_N = mkN "golfo" ; --*
lin gulf_3_N = mkN "abismo" ; --*
lin gull_1_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin gull_1_V2 = mkV2 (mkV "enganar") ; --*
lin gull_2_N = variants {mkN "gaivota" ; mkN "gull" ; } ; --*
lin gullet_N = variants {mkN "esófago" ; mkN "esôfago" ; mkN "garganta" ; mkN "gorja" ; } ; --*
lin gullible_1_A = variants {mkA "crédulo" ; mkA "ingénuo" ; } ; --*
lin gullible_2_A = mkA "crédulo" ; --*
lin gully_N = mkN "voçoroca" ; --*
lin gulp_1_V = variants {mkV "beber" ; mkV "libar" ; mkV "tomar" ; } ; --*
lin gulping_2_N = mkN "bebida" ; --*
lin gum_1_N = variants {mkN "chicla" ; mkN "goma" ; mkN "gum" ; } ; --*
lin gum_2_N = mkN "gengiva" ; --*
lin gum_3_N = mkN "resina" ; --*
lin gum_4_N = variants {mkN "cola" ; mkN "colas" ; mkN "materiais" ; } ; --*
lin gumbo_2_N = variants {mkN "esculentus" ; mkN "plant" ; mkN "quiabeiro" ; mkN "quiabo" ; } ; --*
lin gumbo_3_N = variants {mkN "quiabeiro" ; mkN "quiabo" ; } ; --*
lin gumbo_4_N = mkN "gumbo" ; --*
lin gummy_1_A = mkA "viscoso" ; --*
lin gumption_1_N = variants {mkN "bom" ; mkN "sense" ; mkN "senso" ; mkN "wit" ; } ; --*
lin gumption_2_N = variants {mkN "entranhas" ; mkN "vísceras" ; } ; --*
lin gumshoe_2_N = mkN "galocha" ; --*
lin gun_1_N = variants {mkN "arma" ; mkN "revóvel" ; } ; --*
lin gun_2_N = variants {mkN "arma" ; mkN "artilharia" ; mkN "weapon" ; } ; --*
lin gun_4_N = variants {mkN "Assassinato" ; mkN "assassino" ; mkN "for" ; mkN "gun" ; mkN "man" ; mkN "pistoleiro" ; mkN "sicário" ; } ; --*
lin gun_6_N = variants {mkN "acelerador" ; mkN "pedal" ; } ; --*
lin gunboat_N = mkN "canhoneira" ; --*
lin guncotton_N = variants {mkN "nitrate" ; mkN "trinitrocelulose" ; } ; --*
lin gunfight_N = mkN "tiroteio" ; --*
lin gunfire_N = mkN "tiro" ; --*
lin gunman_1_N = variants {mkN "Assassinato" ; mkN "assassino" ; mkN "for" ; mkN "gun" ; mkN "man" ; mkN "pistoleiro" ; mkN "sicário" ; } ; --*
lin gunner_N = variants {mkN "artilheiro" ; mkN "gunner" ; } ; --*
lin gunny_N = mkN "estopa" ; --*
lin gunplay_N = mkN "tiroteio" ; --*
lin gunpowder_N = mkN "pólvora" ; --*
lin gunshot_N = mkN "tiro" ; --*
lin gunsight_1_N = mkN "alça" ; --*
lin gun_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "disparar") ; } ; --*
lin guppy_N = variants {mkN "fish" ; mkN "Guppy" ; mkN "reticulatus" ; } ; --*
lin gurgle_4_V = mkV "gorgolejar" ; --*
lin gurgle_N = mkN "gorgolejo" ; --*
lin gurkha_1_N = mkN "Gurkha" ; --*
lin guru_1_N = mkN "guru" ; --*
lin guru_3_N = mkN "guru" ; --*
lin gush_1_V = variants {mkV "borbotar" ; mkV "esguichar" ; mkV "jorrar" ; mkV "minar" ; } ; --*
lin gush_2_N = mkN "ebulição" ; --*
lin gush_3_V = mkV "manar" ; --*
lin gustation_N = variants {mkN "gosto" ; mkN "modality" ; mkN "of" ; } ; --*
lin gustatory_A = mkA "gustatório" ; --*
lin gust_N = variants {mkN "rajada" ; mkN "ventania" ; } ; --*
lin gut_1_N = variants {mkN "barriga" ; mkN "intestino" ; mkN "intestinos" ; } ; --*
lin gut_2_V2 = variants {mkV2 (mkV "estripar") ; mkV2 (mkV "eviscerar") ; } ; --*
lin gut_3_N = variants {mkN "catgut" ; mkN "Cat-gut" ; mkN "tripa" ; } ; --*
lin gutless_2_A = variants {mkA "enrolado" ; mkA "indeciso" ; } ; --*
lin gutsy_A = mkA "corajoso" ; --*
lin gutta_percha_N = mkN "Palaquium" ; --*
lin gutter_1_N = mkN "sargeta" ; --*
lin gutter_1_V = mkV "cintilar" ; --*
lin guy_1_N = variants {mkN "cara" ; mkN "rapaz" ; mkN "tio" ; } ; --*
lin guy_1_PN = variants {mkPN "cara" ; mkPN "rapaz" ; mkPN "tio" ; } ; --*
lin guy_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "fun") ; mkV2 (mkV "mangar") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "zombar") ; } ; --*
lin guy_2_N = mkN "Guido" ; --*
lin guy_2_PN = mkPN "Guido" ; --*
lin guyana_PN = variants {mkPN "Guiana" ; mkPN "Republic" ; } ; --*
lin guyot_N = mkN "Guyot" ; --*
lin guzzle_V2 = variants {mkV2 (mkV "engolir") ; mkV2 (mkV "entornar") ; } ; --*
lin gym_N = variants {mkN "academia" ; mkN "ginásio" ; mkN "Ginásio" ; } ; --*
lin gymnasium_1_N = variants {mkN "ensino" ; mkN "instituto" ; mkN "school" ; } ; --*
lin gymnasium_2_N = variants {mkN "academia" ; mkN "ginásio" ; mkN "Ginásio" ; } ; --*
lin gymnastic_1_A = variants {mkA "acrobático" ; mkA "atlético" ; } ; --*
lin gymnastics_N = variants {mkN "exercise" ; mkN "Ginastica" ; mkN "Ginástica" ; } ; --*
lin gymnast_N = variants {mkN "esporte/atleta" ; mkN "ginasta" ; mkN "Ginastas" ; } ; --*
lin gymnosperm_N = variants {mkN "gimnosperma" ; mkN "gimnospérmica" ; mkN "gimnospérmicas" ; mkN "Gymnospermas" ; } ; --*
lin gynaecological_A = mkA "ginecológico" ; --*
lin gynaecologist_N = variants {mkN "doctor" ; mkN "ginecologista" ; mkN "ginecólogo" ; } ; --*
lin gynaecology_N = variants {mkN "ginecologia" ; mkN "Ginecologia" ; } ; --*
lin gynecological_1_A = mkA "ginecológico" ; --*
lin gynecologistFem_N = variants {mkN "doctor" ; mkN "ginecologista" ; mkN "ginecólogo" ; } ; --*
lin gynecologistMasc_N = variants {mkN "doctor" ; mkN "ginecologista" ; mkN "ginecólogo" ; } ; --*
lin gynecology_N = variants {mkN "ginecologia" ; mkN "Ginecologia" ; } ; --*
lin gynecomastia_N = mkN "ginecomastia" ; --*
lin gynoecium_N = mkN "carpelo" ; --*
lin gynophobia_N = mkN "Ginofobia" ; --*
lin gyp_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin gypsum_N = variants {mkN "gesso" ; mkN "gipsita" ; mkN "Gipsita" ; } ; --*
lin gypsy_1_N = mkN "cigana" ; --*
lin gypsy_2_N = variants {mkN "cigana" ; mkN "cigano" ; mkN "Rom" ; } ; --*
lin gypsy_4_N = variants {mkN "Cigano" ; mkN "romani" ; } ; --*
lin gyrate_2_V = variants {mkV "around" ; mkV "girar" ; } ; --*
lin gyration_1_N = mkN "rotação" ; --*
lin gyration_2_N = mkN "giro" ; --*
lin gyrfalcon_1_N = variants {mkN "gerifalte" ; mkN "rusticolus" ; } ; --*
lin gyro_1_N = mkN "gyros" ; --*
lin gyro_2_N = variants {mkN "Giroscopio" ; mkN "giroscópio" ; } ; --*
lin gyroscope_N = variants {mkN "Giroscopio" ; mkN "giroscópio" ; } ; --*
lin gyroscopic_A = mkA "giroscópico" ; --*
lin habanera_2_N = mkN "habanera" ; --*
lin habeas_corpus_2_N = mkN "corpus" ; --*
lin habit_1_N = variants {mkN "costume" ; mkN "costumes" ; mkN "hábito" ; mkN "tradição" ; } ; --*
lin habit_2_N = variants {mkN "costume" ; mkN "hábito" ; } ; --*
lin habit_3_N = mkN "hábito" ; --*
lin habit_6_N = variants {mkN "abuse" ; mkN "uso" ; } ; --*
lin habitability_N = mkN "habitabilidade" ; --*
lin habitable_A = mkA "habitável" ; --*
lin habitation_1_N = mkN "habitáculo" ; --*
lin habitation_2_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "habitação" ; mkN "house" ; mkN "lar" ; mkN "morada" ; mkN "moradia" ; mkN "residência" ; } ; --*
lin habitation_3_N = mkN "habitação" ; --*
lin habitat_N = variants {mkN "ground" ; mkN "habitat" ; } ; --*
lin habitual_A = variants {mkA "costumado" ; mkA "habituado" ; mkA "habitual" ; mkA "usual" ; } ; --*
lin habituate_1_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "usar") ; } ; --*
lin habituate_2_V2 = variants {mkV2 (mkV "acostumar-se") ; mkV2 (mkV "habituar") ; mkV2 (mkV "habituar-se") ; } ; --*
lin habituation_1_N = mkN "dependência" ; --*
lin habituation_2_N = mkN "Habituação" ; --*
lin habitude_N = variants {mkN "costume" ; mkN "hábito" ; } ; --*
lin habitus_2_N = mkN "físico" ; --*
lin hacienda_1_N = variants {mkN "fazenda" ; mkN "herdade" ; } ; --*
lin hack_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; } ; --*
lin hack_1_V = variants {mkV "cortar" ; mkV "dividir" ; } ; --*
lin hack_2_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "gerenciar") ; mkV2 (mkV "lidar") ; } ; --*
lin hack_3_V2 = mkV2 (mkV "desbravar") ; --*
lin hack_5_N = variants {mkN "Taxi" ; mkN "táxi" ; } ; --*
lin hack_5_V2 = mkV2 (mkV "canelar") ; --*
lin hack_5_V = mkV "canelar" ; --*
lin hack_6_N = mkN "rocim" ; --*
lin hack_6_V = variants {mkV "hackear" ; mkV "on" ; } ; --*
lin hacker_2_N = mkN "hacker" ; --*
lin hackneyed_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin hacksaw_1_N = variants {mkN "saw" ; mkN "serra" ; } ; --*
lin haddock_1_N = mkN "eglefim" ; --*
lin haddock_2_N = variants {mkN "aeglefinus" ; mkN "Melanogrammus" ; } ; --*
lin hades_1_PN = variants {mkPN "Hades" ; mkPN "Plutão" ; } ; --*
lin hades_2_PN = variants {mkPN "inferno" ; mkPN "region" ; mkPN "submundo" ; } ; --*
lin hadith_1_N = mkN "Hadith" ; --*
lin hadith_2_N = mkN "Suna" ; --*
lin hadron_N = variants {mkN "Hadron" ; mkN "hádron" ; mkN "Hádrons" ; } ; --*
lin haematite_N = mkN "hematita" ; --*
lin haemoglobin_N = mkN "hemoglobina" ; --*
lin haemophilia_N = variants {mkN "disease" ; mkN "hemofilia" ; } ; --*
lin haemorrhage_N = variants {mkN "hemorragia" ; mkN "sangramento" ; } ; --*
lin hafnium_N = variants {mkN "Hafnio" ; mkN "háfnio" ; mkN "number" ; } ; --*
lin hag_1_N = variants {mkN "bruxa" ; mkN "coroa" ; } ; --*
lin haggard_1_A = mkA "extenuado" ; --*
lin haggard_2_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin haggis_N = mkN "Haggis" ; --*
lin haggle_1_V = variants {mkV "barganhar" ; mkV "pechinchar" ; mkV "regatear" ; } ; --*
lin hagiographer_N = variants {mkN "hagiografista" ; mkN "hagiólogo" ; } ; --*
lin hagiography_N = mkN "Hagiografia" ; --*
lin haiku_N = variants {mkN "Hai" ; mkN "Haicai" ; mkN "haikai" ; mkN "Haikai" ; mkN "Haïku" ; } ; --*
lin hail_1_N = variants {mkN "chuva-de-pedra" ; mkN "granizo" ; mkN "saraiva" ; } ; --*
lin hail_1_V2 = variants {mkV2 (mkV "aclamar") ; mkV2 (mkV "aplaudir") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "clamar") ; mkV2 (mkV "louvar") ; mkV2 (mkV "ovacionar") ; } ; --*
lin hail_4_V2 = mkV2 (mkV "saudar") ; --*
lin hail_4_V = mkV "saudar" ; --*
lin hail_5_V = mkV "granizar" ; --*
lin hailstone_N = mkN "glóbulodegranizo" ; --*
lin hailstorm_N = variants {mkN "chuva" ; mkN "granizo" ; } ; --*
lin haiphong_PN = variants {mkPN "Hai" ; mkPN "Haiphong" ; } ; --*
lin hair_1_N = variants {mkN "cabelo" ; mkN "pelo" ; mkN "pêlo" ; mkN "Pêlo" ; mkN "Pelos" ; } ; --*
lin hair_2_N = mkN "cabelo" ; --*
lin hairball_1_N = variants {mkN "ball" ; mkN "tricobezoar" ; } ; --*
lin hairbrush_N = mkN "escova" ; --*
lin haircut_1_N = mkN "corte" ; --*
lin hairdo_N = variants {mkN "corte" ; mkN "penteado" ; mkN "style" ; } ; --*
lin hairdresser_N = variants {mkN "cabeleireira" ; mkN "cabeleireiro" ; mkN "frisador" ; } ; --*
lin hairnet_N = mkN "rede" ; --*
lin hairpiece_N = variants {mkN "hair" ; mkN "peruca" ; } ; --*
lin hairpin_N = mkN "forquilha" ; --*
lin hair_raising_A = mkA "pesadelar" ; --*
lin hair's_breadth_1_N = mkN "cabelo" ; --*
lin hairstyle_1_N = variants {mkN "corte" ; mkN "penteado" ; mkN "style" ; } ; --*
lin hairstylist_N = variants {mkN "cabeleireira" ; mkN "cabeleireiro" ; mkN "frisador" ; } ; --*
lin hair_trigger_N = mkN "trigger" ; --*
lin hairy_1_A = variants {mkA "peluda" ; mkA "peludo" ; } ; --*
lin hairy_2_A = variants {mkA "arriscado" ; mkA "cabeludo" ; mkA "perigoso" ; } ; --*
lin haiti_1_PN = variants {mkPN "Haiti" ; mkPN "Haití" ; mkPN "of" ; } ; --*
lin haiti_2_PN = variants {mkPN "Haiti" ; mkPN "Hispaniola" ; mkPN "Ilha" ; mkPN "República" ; } ; --*
lin haitian_A = mkA "haitiano" ; --*
lin hajj_1_N = variants {mkN "hadj" ; mkN "hajj" ; } ; --*
lin halal_N = mkN "Halal" ; --*
lin halberd_N = mkN "alabarda" ; --*
lin halcyon_1_N = variants {mkN "alcíone" ; mkN "Alcíone" ; } ; --*
lin halcyon_2_N = mkN "Halcyon" ; --*
lin half_1_N = variants {mkN "meio" ; mkN "metade" ; } ; --*
lin half_2_A = variants {mkA "meio" ; mkA "metade" ; } ; --*
lin half_2_N = mkN "metade" ; --*
lin half_3_A = mkA "metade" ; --*
lin halfbeak_N = mkN "Hemiramphidae" ; --*
lin half_brother_N = variants {mkN "brother" ; mkN "meio" ; } ; --*
lin half_hearted_A = variants {mkA "morno" ; mkA "tépido" ; } ; --*
lin halfhearted_A = variants {mkA "morno" ; mkA "tépido" ; } ; --*
lin half_hour_N = variants {mkN "meia" ; mkN "minutes" ; } ; --*
lin half_Predet = variants {variants {} ; variants {} ; } ; --*
lin half_sister_N = variants {mkN "meia-irmã" ; mkN "sister" ; } ; --*
lin halftime_N = variants {mkN "intervalo" ; mkN "meio" ; } ; --*
lin halfway_2_A = variants {mkA "meio" ; mkA "metade" ; } ; --*
lin half_yearly_Adv = mkAdv "semestralmente" ; --*
lin halibut_1_N = mkN "hipoglosso" ; --*
lin halibut_2_N = mkN "Halibute" ; --*
lin halide_N = mkN "haleto" ; --*
lin halite_N = variants {mkN "halita" ; mkN "salt" ; } ; --*
lin halitosis_N = variants {mkN "halitose" ; mkN "mau" ; } ; --*
lin halitus_N = mkN "exalação" ; --*
lin hall_10_N = variants {mkN "Asaph" ; mkN "Hall" ; } ; --*
lin hall_11_N = variants {mkN "house" ; mkN "mansão" ; mkN "solar" ; } ; --*
lin hall_13_N = variants {mkN "centro" ; mkN "hall" ; } ; --*
lin hall_1_N = variants {mkN "saguão" ; mkN "salão" ; } ; --*
lin hall_2_N = variants {mkN "antecâmara" ; mkN "antessala" ; mkN "átrio" ; mkN "hall" ; mkN "saguão" ; mkN "sala" ; mkN "vestíbulo" ; } ; --*
lin hall_3_N = variants {mkN "hall" ; mkN "sala" ; } ; --*
lin hall_4_N = variants {mkN "dormitório" ; mkN "hall" ; mkN "residence" ; } ; --*
lin hall_5_N = variants {mkN "hall" ; mkN "sala" ; } ; --*
lin halliard_N = variants {mkN "adriça" ; mkN "cordadeiçarvela" ; } ; --*
lin hallmark_2_N = variants {mkN "autenticação" ; mkN "comprovação" ; mkN "marca" ; } ; --*
lin hallowe'en_1_N = variants {mkN "Dia" ; mkN "Eve" ; } ; --*
lin hallowe'en_PN = variants {mkPN "Dia" ; mkPN "Eve" ; } ; --*
lin hallow_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "santificar") ; } ; --*
lin hallucination_1_N = variants {mkN "alucinação" ; mkN "Alucinação" ; } ; --*
lin hallucination_3_N = mkN "alucinação" ; --*
lin hallucinatory_A = mkA "alucinatório" ; --*
lin hallucinogenic_A = mkA "alucinogênico" ; --*
lin hallucinogen_N = variants {mkN "Droga" ; mkN "drug" ; } ; --*
lin hallway_N = variants {mkN "saguão" ; mkN "salão" ; } ; --*
lin halo_1_N = variants {mkN "aura" ; mkN "auréola" ; mkN "halo" ; } ; --*
lin halo_2_N = variants {mkN "anel" ; mkN "ring" ; } ; --*
lin halo_3_N = mkN "halo" ; --*
lin haloform_N = mkN "haloformes" ; --*
lin halogen_N = variants {mkN "Halogénio" ; mkN "halogênio" ; } ; --*
lin haloperidol_N = variants {mkN "haloperidol" ; mkN "Haloperidol" ; } ; --*
lin halophyte_N = mkN "halófita" ; --*
lin halothane_N = mkN "halotano" ; --*
lin halt_1_V2 = variants {mkV2 (mkV "demorar-se") ; mkV2 (mkV "deter-se") ; mkV2 (mkV "parar") ; } ; --*
lin halt_2_V = variants {mkV "deixar" ; mkV "parar" ; } ; --*
lin halt_3_N = mkN "parada" ; --*
lin halt_3_V2 = variants {mkV2 (mkV "parar") ; mkV2 (mkV "travar") ; } ; --*
lin halt_4_V2 = variants {mkV2 (mkV "estagnar") ; mkV2 (mkV "estancar") ; } ; --*
lin halt_A = variants {mkA "aleijado" ; mkA "capenga" ; mkA "coxo" ; mkA "estropiado" ; mkA "manco" ; mkA "perneta" ; } ; --*
lin halve_V2 = mkV2 (mkV "meiar") ; --*
lin halyard_N = variants {mkN "adriça" ; mkN "cordadeiçarvela" ; } ; --*
lin ham_1_N = variants {mkN "pernil" ; mkN "presunto" ; mkN "toucinho" ; } ; --*
lin ham_3_N = mkN "rádio" ; --*
lin hamadryad_2_N = variants {mkN "cobra" ; mkN "cobra-real" ; mkN "hannah" ; } ; --*
lin hamartoma_N = mkN "hamartoma" ; --*
lin hamate_N = variants {mkN "bone" ; mkN "hamato" ; mkN "hamatum" ; } ; --*
lin hamburger_1_N = variants {mkN "hamburger" ; mkN "hambúrguer" ; } ; --*
lin hamburger_2_N = variants {mkN "beef" ; mkN "Hamburguer" ; mkN "hambúrguer" ; } ; --*
lin hamburg_PN = variants {mkPN "Hamburg" ; mkPN "Hamburgo" ; } ; --*
lin ham_fisted_A = mkA "desengoçado" ; --*
lin ham_handed_A = mkA "desengoçado" ; --*
lin hamilton_1_PN = variants {mkPN "Rowan" ; mkPN "William" ; } ; --*
lin hamilton_4_PN = variants {mkPN "Alexander" ; mkPN "Hamilton" ; } ; --*
lin hamilton_5_PN = mkPN "Hamilton" ; --*
lin hamilton_6_PN = mkPN "Hamilton" ; --*
lin hamlet_3_N = variants {mkN "aldeia" ; mkN "vila" ; mkN "vilarejo" ; } ; --*
lin hamlet_PN = mkPN "Hamlet" ; --*
lin hammer_1_V2 = variants {mkV2 (mkV "fincar") ; mkV2 (mkV "martelar") ; } ; --*
lin hammer_2_N = mkN "martelo" ; --*
lin hammer_2_V2 = mkV2 (mkV "martelar") ; --*
lin hammer_3_N = mkN "martelo" ; --*
lin hammerhead_1_N = mkN "cabeça" ; --*
lin hammerhead_3_N = variants {mkN "shark" ; mkN "Tubarão" ; mkN "tubarão-martelo" ; } ; --*
lin hammock_1_N = variants {mkN "colina" ; mkN "outeiro" ; } ; --*
lin hammock_2_N = variants {mkN "rede" ; mkN "Rede" ; } ; --*
lin hamper_1_N = variants {mkN "algema" ; mkN "cadeia" ; mkN "grilhão" ; } ; --*
lin hamper_1_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "obstruir") ; } ; --*
lin hamper_2_N = variants {mkN "balaio" ; mkN "cesto" ; } ; --*
lin hamper_2_V2 = mkV2 (mkV "dificultar") ; --*
lin hampshire_1_PN = mkPN "Hampshire" ; --*
lin hamster_N = variants {mkN "hamster" ; mkN "Hamster" ; mkN "Hamsters" ; } ; --*
lin hamstring_1_V2 = variants {mkV2 (mkV "ficar") ; mkV2 (mkV "manietar") ; } ; --*
lin hand_12_N = mkN "aplauso" ; --*
lin hand_14_N = variants {mkN "hand" ; mkN "mão" ; } ; --*
lin hand_1_N = mkN "mão" ; --*
lin hand_1_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "passar") ; } ; --*
lin hand_2_N = variants {mkN "hand" ; mkN "man" ; mkN "operário" ; } ; --*
lin hand_2_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "auxiliar") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "guiar") ; } ; --*
lin hand_3_N = mkN "caligrafia" ; --*
lin hand_4_N = mkN "habilidade" ; --*
lin hand_6_N = mkN "mão" ; --*
lin hand_8_N = mkN "ponteiro" ; --*
lin hand_9_N = mkN "Palmo" ; --*
lin handbag_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin handball_2_N = variants {mkN "andebol" ; mkN "handebol" ; mkN "Handebol" ; } ; --*
lin handbill_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin handbook_N = variants {mkN "manual" ; mkN "mecum" ; mkN "Vademecum" ; } ; --*
lin handcar_N = mkN "carrinho" ; --*
lin handcart_N = mkN "carrinho" ; --*
lin handcuff_N = variants {mkN "algema" ; mkN "Algemas" ; } ; --*
lin handcuff_V2 = mkV2 (mkV "algemar") ; --*
lin handful_1_N = mkN "punhado" ; --*
lin handful_2_N = mkN "punhado" ; --*
lin hand_grenade_N = mkN "grenade" ; --*
lin handgun_N = variants {mkN "arm" ; mkN "iron" ; mkN "pistola" ; } ; --*
lin handicap_1_N = variants {mkN "Deficiencia" ; mkN "deficiência" ; mkN "Deficiência" ; mkN "Deficiente" ; mkN "discapacidade" ; mkN "inabilidade" ; mkN "incapacidade" ; } ; --*
lin handicap_2_N = variants {mkN "lucro" ; mkN "vantagem" ; } ; --*
lin handicap_3_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin handicap_3_V2 = mkV2 (mkV "dificultar") ; --*
lin handicapped_A = mkA "deficiente" ; --*
lin handicraft_1_N = variants {mkN "artesanato" ; mkN "trabalho" ; } ; --*
lin handicraft_2_N = mkN "artesanato" ; --*
lin handiness_2_N = variants {mkN "acessibilidade" ; mkN "disponibilidade" ; } ; --*
lin handiwork_N = variants {mkN "artesanato" ; mkN "trabalho" ; } ; --*
lin handkerchief_N = mkN "lenço" ; --*
lin handle_1_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; mkV2 (mkV "guiar") ; mkV2 (mkV "lidar") ; } ; --*
lin handle_2_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "tratar") ; } ; --*
lin handle_3_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "endereçar") ; mkV2 (mkV "falar") ; mkV2 (mkV "lidar") ; mkV2 (mkV "tratar") ; } ; --*
lin handle_3_V = variants {mkV "cobrir" ; mkV "endereçar" ; mkV "falar" ; mkV "lidar" ; mkV "tratar" ; } ; --*
lin handle_4_V2 = variants {mkV2 (mkV "manusear") ; mkV2 (mkV "tocar") ; } ; --*
lin handle_5_V2 = variants {mkV2 (mkV "empunhar") ; mkV2 (mkV "manejar") ; } ; --*
lin handle_6_V2 = variants {mkV2 (mkV "exibir") ; mkV2 (mkV "treinar") ; } ; --*
lin handlebar_N = variants {mkN "guidão" ; mkN "guidom" ; } ; --*
lin handle_N = variants {mkN "alça" ; mkN "cabo" ; mkN "taramela" ; mkN "trinco" ; } ; --*
lin handler_1_N = variants {mkN "trainer" ; mkN "treinador" ; } ; --*
lin handler_3_N = variants {mkN "técnico" ; mkN "treinador" ; mkN "Treinador" ; mkN "Treinadores" ; } ; --*
lin handless_1_A = mkA "maneta" ; --*
lin handless_2_A = mkA "desengoçado" ; --*
lin handling_2_N = variants {mkN "manejo" ; mkN "manipulação" ; } ; --*
lin handling_3_N = mkN "tratamento" ; --*
lin handmade_A = mkA "artesanal" ; --*
lin handmaid_2_N = variants {mkN "donzela" ; mkN "empregada" ; } ; --*
lin hand_organ_N = variants {mkN "gurdy" ; mkN "organ" ; mkN "realejo" ; } ; --*
lin hand_out_1_N = variants {mkN "comunicado" ; mkN "release" ; } ; --*
lin hand_out_V2 = variants {mkV2 (mkV "distribuir") ; mkV2 (mkV "out") ; } ; --*
lin hand_over_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "in") ; mkV2 (mkV "livrar") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin handrail_N = mkN "balaustrada" ; --*
lin hands_2_N = variants {mkN "força" ; mkN "force" ; mkN "homens" ; } ; --*
lin handsaw_1_N = variants {mkN "saw" ; mkN "serrote" ; } ; --*
lin handset_N = variants {mkN "aparelho" ; mkN "telephone" ; } ; --*
lin handshake_N = variants {mkN "aperto" ; mkN "handshake" ; } ; --*
lin handshaking_N = variants {mkN "aperto" ; mkN "handshake" ; } ; --*
lin handsome_1_A = variants {mkA "bem" ; mkA "bonito" ; mkA "de" ; } ; --*
lin handsome_2_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin handstamp_N = variants {mkN "selo" ; mkN "stamp" ; } ; --*
lin handwork_N = variants {mkN "artesanato" ; mkN "trabalho" ; } ; --*
lin handwriting_1_N = mkN "caligrafia" ; --*
lin handwritten_A = mkA "manuscrito" ; --*
lin handy_1_A = variants {mkA "prático" ; mkA "to" ; mkA "útil" ; } ; --*
lin handy_2_A = variants {mkA "prático" ; mkA "útil" ; } ; --*
lin handyman_N = variants {mkN "man" ; mkN "manhoso" ; mkN "of" ; } ; --*
lin hang_10_V = variants {mkV "dependurar" ; mkV "estar" ; } ; --*
lin hang_12_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "pendurar") ; } ; --*
lin hang_16_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin hang_1_N = mkN "talento" ; --*
lin hang_1_V = mkV "pendurar" ; --*
lin hang_2_V2 = variants {mkV2 (mkV "pendurar") ; mkV2 (mkV "up") ; } ; --*
lin hangar_N = variants {mkN "hangar" ; mkN "Hangar" ; mkN "shed" ; } ; --*
lin hang_back_V = variants {mkV "back" ; mkV "behind" ; mkV "ficar" ; } ; --*
lin hangdog_A = mkA "culpado" ; --*
lin hanging_2_N = variants {mkN "forca" ; mkN "Mortes" ; } ; --*
lin hanging_3_N = mkN "suspensão" ; --*
lin hangman_N = variants {mkN "algoz" ; mkN "carrasco" ; mkN "verdugo" ; } ; --*
lin hangnail_N = mkN "espigão" ; --*
lin hang_on_1_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin hang_on_2_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "atender") ; mkV2 (mkV "ear") ; mkV2 (mkV "fixar") ; mkV2 (mkV "heed") ; } ; --*
lin hang_on_2_V = variants {mkV "in" ; mkV "on" ; mkV "perseverar" ; mkV "persistir" ; } ; --*
lin hang_on_3_V = variants {mkV "on" ; mkV "the" ; } ; --*
lin hang_on_to_V2 = mkV2 (mkV "agarrar") ; --*
lin hangover_1_N = variants {mkN "ressaca" ; mkN "Ressaca" ; } ; --*
lin hang_up_2_N = mkN "obstáculo" ; --*
lin hang_up_2_V2 = variants {mkV2 (mkV "pendurar") ; mkV2 (mkV "up") ; } ; --*
lin hanker_V = variants {mkV "ansiar" ; mkV "desejar" ; mkV "suspirar" ; } ; --*
lin hanky_1_N = mkN "lenço" ; --*
lin hanky_panky_N = variants {mkN "artifício" ; mkN "artimanha" ; mkN "panky" ; mkN "subterfúgio" ; } ; --*
lin hanoi_PN = variants {mkPN "Hanoi" ; mkPN "Hanói" ; mkPN "of" ; } ; --*
lin hanover_1_PN = variants {mkPN "Hanóver" ; mkPN "Hanôver" ; } ; --*
lin hanover_2_PN = variants {mkPN "Casa" ; mkPN "line" ; mkPN "of" ; } ; --*
lin hansom_N = variants {mkN "cab" ; mkN "Hansom" ; } ; --*
lin haphazard_1_A = variants {mkA "aleatório" ; mkA "atabalhoado" ; mkA "confuso" ; mkA "sem" ; } ; --*
lin hapless_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin haploid_1_A = mkA "haplóide" ; --*
lin haploid_N = variants {mkN "haploide" ; mkN "Haplóide" ; } ; --*
lin haploidy_N = mkN "haploidia" ; --*
lin haplotype_N = variants {mkN "Haplotipo" ; mkN "Haplótipo" ; } ; --*
lin haply_Adv = variants {mkAdv "chance" ; mkAdv "luck" ; mkAdv "por" ; } ; --*
lin happen_1_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin happen_2_V = variants {mkV "acontecer" ; mkV "calhar" ; mkV "ocorrer" ; mkV "suceder" ; } ; --*
lin happen_4_V = mkV "materializar" ; --*
lin happen_5_V = variants {mkV "achar" ; mkV "encontrar" ; mkV "trombar" ; } ; --*
lin happening_N = variants {mkN "acontecimento" ; mkN "event" ; mkN "evento" ; mkN "ocorrência" ; } ; --*
lin happen_VV = mkVV (mkV "acontecer") ; --*
lin happiness_1_N = variants {mkN "alegria" ; mkN "aventurança" ; mkN "felicidade" ; } ; --*
lin happiness_2_N = variants {mkN "alegria" ; mkN "felicidade" ; } ; --*
lin happy_1_A = variants {mkA "contente" ; mkA "feliz" ; } ; --*
lin happy_2_A = variants {mkA "contente" ; mkA "feliz" ; } ; --*
lin haptic_A = variants {mkA "táctil" ; mkA "tátil" ; } ; --*
lin haptoglobin_N = mkN "haptoglobina" ; --*
lin hap_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin harangue_N = mkN "arenga" ; --*
lin harangue_V2 = mkV2 (mkV "arengar") ; --*
lin harangue_V = mkV "arengar" ; --*
lin harass_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin harass_2_V2 = mkV2 (mkV "molestar") ; --*
lin harbour_1_N = variants {mkN "cais" ; mkN "porto" ; } ; --*
lin harbour_4_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "sustentar") ; } ; --*
lin hard_10_A = mkA "forte" ; --*
lin hard_12_A = variants {mkA "duro" ; mkA "seco" ; } ; --*
lin hard_1_A = variants {mkA "árduo" ; mkA "difícil" ; mkA "foda" ; mkA "intrincado" ; } ; --*
lin hard_3_A = variants {mkA "dificil" ; mkA "dura" ; mkA "duro" ; } ; --*
lin hard_5_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin hard_6_A = mkA "surdo" ; --*
lin hardback_N = mkN "livro" ; --*
lin hardboard_N = mkN "Hardboard" ; --*
lin hard_boiled_2_A = mkA "endurecido" ; --*
lin hardcover_N = mkN "livro" ; --*
lin harden_1_V = mkV "endurecer" ; --*
lin harden_2_V2 = mkV2 (mkV "endurecer") ; --*
lin harden_3_V2 = variants {mkV2 (mkV "endurecer") ; mkV2 (mkV "enrijar") ; mkV2 (mkV "enrijecer") ; mkV2 (mkV "temperar") ; } ; --*
lin harden_4_V2 = mkV2 (mkV "temperar") ; --*
lin harden_5_V2 = variants {mkV2 (mkV "acostumar") ; mkV2 (mkV "costumar") ; } ; --*
lin hardening_2_N = mkN "endurecimento" ; --*
lin hard_headed_2_A = variants {mkA "pragmático" ; mkA "prático" ; } ; --*
lin hardihood_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin hardiness_2_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin hardly_1_AdV = variants {mkAdV "dificilmente" ; mkAdV "logo" ; mkAdV "quase" ; } ; --*
lin hardly_2_AdV = variants {mkAdV "apenas" ; mkAdV "dificilmente" ; } ; --*
lin hardness_3_N = mkN "dureza" ; --*
lin hardness_4_N = mkN "dureza" ; --*
lin hardness_5_N = variants {mkN "dureza" ; mkN "rigor" ; } ; --*
lin hardship_1_N = variants {mkN "adversidade" ; mkN "knocks" ; } ; --*
lin hardship_2_N = mkN "rigor" ; --*
lin hardship_3_N = mkN "infortúnio" ; --*
lin hardware_1_N = variants {mkN "circuitaria" ; mkN "ferragens" ; mkN "quinquilharia" ; } ; --*
lin hardware_2_N = variants {mkN "ferragens" ; mkN "quinquilharia" ; } ; --*
lin hardware_3_N = mkN "hardware" ; --*
lin hardwood_N = mkN "madeira" ; --*
lin hardworking_A = variants {mkA "aplicado" ; mkA "assíduo" ; mkA "diligente" ; mkA "esforçado" ; mkA "laborioso" ; mkA "operoso" ; mkA "trabalhador" ; } ; --*
lin hardy_1_A = mkA "rijo" ; --*
lin hardy_3_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "intrépido" ; mkA "ousado" ; } ; --*
lin hare_1_N = variants {mkN "lebrão" ; mkN "lebre" ; } ; --*
lin hare_2_N = variants {mkN "coelho" ; mkN "lebre" ; } ; --*
lin harebrained_A = variants {mkA "demente" ; mkA "louco" ; mkA "maluco" ; } ; --*
lin harelip_N = variants {mkN "fissura" ; mkN "lábio" ; mkN "lip" ; } ; --*
lin harem_1_N = mkN "harém" ; --*
lin haricot_1_N = mkN "feijão" ; --*
lin haricot_2_N = mkN "feijão" ; --*
lin harlequin_N = mkN "arlequim" ; --*
lin harlot_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin harlow_PN = variants {mkPN "Carpenter" ; mkPN "Harlow" ; mkPN "Jean" ; } ; --*
lin harm_1_N = variants {mkN "dano" ; mkN "ferimentos" ; mkN "inchaço" ; mkN "lesão" ; mkN "mal" ; mkN "traumatismo" ; } ; --*
lin harm_2_N = variants {mkN "avaria" ; mkN "dano" ; mkN "estrago" ; mkN "prejuízo" ; } ; --*
lin harm_3_N = variants {mkN "danificação" ; mkN "deterioração" ; } ; --*
lin harmful_A = variants {mkA "daninho" ; mkA "danoso" ; mkA "nocivo" ; mkA "prejudicial" ; } ; --*
lin harmless_A = variants {mkA "inócuo" ; mkA "inofensivo" ; mkA "que" ; } ; --*
lin harmonic_1_N = variants {mkN "Harmónica" ; mkN "harmônica" ; } ; --*
lin harmonic_2_A = mkA "harmônico" ; --*
lin harmonic_3_A = mkA "harmônico" ; --*
lin harmonic_5_A = mkA "consonante" ; --*
lin harmonica_N = variants {mkN "Harmonica" ; mkN "harmónica" ; mkN "Harmônica" ; mkN "harp" ; mkN "harpa" ; mkN "organ" ; } ; --*
lin harmonious_1_A = mkA "harmonioso" ; --*
lin harmonious_2_A = variants {mkA "proporcional" ; mkA "simétrico" ; } ; --*
lin harmonious_3_A = mkA "harmonioso" ; --*
lin harmonious_4_A = mkA "harmonioso" ; --*
lin harmonium_N = variants {mkN "organ" ; mkN "órgão" ; mkN "Órgão" ; } ; --*
lin harmonization_2_N = mkN "harmonização" ; --*
lin harmonize_1_V = variants {mkV "compatibilizar" ; mkV "concordar" ; mkV "estar" ; mkV "harmonizar" ; mkV "in" ; } ; --*
lin harmonize_2_V2 = mkV2 (mkV "compatibilizar") ; --*
lin harmonize_2_V = mkV "compatibilizar" ; --*
lin harmonize_3_V2 = mkV2 (mkV "harmonizar") ; --*
lin harmonize_3_V = mkV "harmonizar" ; --*
lin harmonize_4_V2 = variants {mkV2 (mkV "compatibilizar") ; mkV2 (mkV "harmonizar") ; } ; --*
lin harmonize_5_V2 = variants {mkV2 (mkV "compatibilizar") ; mkV2 (mkV "conciliar") ; mkV2 (mkV "reconciliar") ; } ; --*
lin harmonize_6_V2 = mkV2 (mkV "compatibilizar") ; --*
lin harmonize_6_V = mkV "compatibilizar" ; --*
lin harmony_1_N = mkN "harmonia" ; --*
lin harmony_2_N = variants {mkN "harmonia" ; mkN "harmony" ; } ; --*
lin harmony_3_N = variants {mkN "acordo" ; mkN "concórdia" ; mkN "conformidade" ; mkN "harmonia" ; mkN "paz" ; } ; --*
lin harmony_4_N = variants {mkN "acordo" ; mkN "concórdia" ; mkN "conformidade" ; mkN "contratos" ; mkN "harmonia" ; } ; --*
lin harmony_5_N = mkN "harmonia" ; --*
lin harm_V2 = variants {mkV2 (mkV "danificar") ; mkV2 (mkV "ferir") ; mkV2 (mkV "lesar") ; mkV2 (mkV "machucar") ; } ; --*
lin harness_1_N = mkN "chicote" ; --*
lin harness_1_V2 = variants {mkV2 (mkV "arrear") ; mkV2 (mkV "atrelar") ; } ; --*
lin harness_2_N = mkN "arreio" ; --*
lin harness_3_V2 = variants {mkV2 (mkV "atrelar") ; mkV2 (mkV "in") ; mkV2 (mkV "rein") ; } ; --*
lin harness_4_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "domar") ; } ; --*
lin harp_1_N = mkN "harpa" ; --*
lin harp_3_N = variants {mkN "Harmonica" ; mkN "harmónica" ; mkN "Harmônica" ; mkN "harp" ; mkN "harpa" ; mkN "organ" ; } ; --*
lin harpoon_N = variants {mkN "arpão" ; mkN "Arpão" ; } ; --*
lin harpsichordist_N = mkN "cravista" ; --*
lin harpsichord_N = variants {mkN "cravo" ; mkN "Cravo" ; } ; --*
lin harpy_1_N = mkN "prostituta" ; --*
lin harpy_4_N = variants {mkN "eagle" ; mkN "harpia" ; mkN "harpyja" ; } ; --*
lin harrow_N = variants {mkN "ancinho" ; mkN "grade" ; } ; --*
lin harrow_V2 = variants {mkV2 (mkV "estorrar") ; mkV2 (mkV "gradar") ; } ; --*
lin harry_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin harsh_2_A = mkA "áspera" ; --*
lin harshness_2_N = mkN "aspereza" ; --*
lin harshness_3_N = mkN "crueldade" ; --*
lin harshness_4_N = variants {mkN "dureza" ; mkN "rigor" ; } ; --*
lin hart_3_N = mkN "veado" ; --*
lin harvest_1_N = variants {mkN "colheita" ; mkN "colheitas" ; mkN "rendimento" ; mkN "safra" ; } ; --*
lin harvest_1_V2 = variants {mkV2 (mkV "colher") ; mkV2 (mkV "respigar") ; } ; --*
lin harvest_3_N = variants {mkN "colheita" ; mkN "home" ; } ; --*
lin harvest_4_N = variants {mkN "colheita" ; mkN "time" ; } ; --*
lin harvester_1_N = mkN "Reaper" ; --*
lin harvestman_N = variants {mkN "aranha-alho" ; mkN "aranha-bailarina" ; mkN "aranha-fedorenta" ; mkN "bodum" ; mkN "frade-fedorento" ; mkN "longlegs" ; mkN "opilio" ; } ; --*
lin harvey_PN = variants {mkPN "Harvey" ; mkPN "William" ; } ; --*
lin hash_1_N = mkN "picadinho" ; --*
lin hash_2_N = mkN "haxixe" ; --*
lin hashish_1_N = mkN "haxixe" ; --*
lin hash_out_V = variants {mkV "discutir" ; mkV "out" ; mkV "over" ; } ; --*
lin hash_V2 = mkV2 (mkV "picar") ; --*
lin hassium_N = variants {mkN "108" ; mkN "hássio" ; mkN "number" ; } ; --*
lin hassle_2_N = variants {mkN "batalha" ; mkN "briga" ; mkN "combate" ; mkN "luta" ; } ; --*
lin hassle_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin haste_1_N = mkN "pressa" ; --*
lin haste_2_N = mkN "precipitação" ; --*
lin haste_3_N = mkN "pressa" ; --*
lin hasten_1_V = variants {mkV "acelerar" ; mkV "apressar" ; mkV "correr" ; mkV "sharp" ; } ; --*
lin hasten_2_V = variants {mkV "along" ; mkV "apressar" ; mkV "correr" ; mkV "on" ; } ; --*
lin hasten_3_V2 = variants {mkV2 (mkV "acelerar") ; mkV2 (mkV "apressar") ; } ; --*
lin hasten_4_V2 = variants {mkV2 (mkV "induzir") ; mkV2 (mkV "precipitar") ; } ; --*
lin hastiness_1_N = mkN "pressa" ; --*
lin hastings_2_PN = mkPN "Hastings" ; --*
lin hasty_1_A = variants {mkA "apressado" ; mkA "precipitado" ; } ; --*
lin hasty_2_A = mkA "precipitado" ; --*
lin hat_1_N = variants {mkN "chapéu" ; mkN "sombreiro" ; } ; --*
lin hatch_1_N = mkN "escotilha" ; --*
lin hatch_1_V = mkV "eclodir" ; --*
lin hatch_2_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "of") ; mkV2 (mkV "pensar") ; mkV2 (mkV "up") ; } ; --*
lin hatch_3_N = variants {mkN "door" ; mkN "hatchback" ; } ; --*
lin hatch_5_V2 = mkV2 (mkV "eclodir") ; --*
lin hatchback_2_N = variants {mkN "door" ; mkN "hatchback" ; } ; --*
lin hatchery_N = variants {mkN "chocadeira" ; mkN "viveiros" ; } ; --*
lin hatchet_2_N = variants {mkN "machadinha" ; mkN "machado" ; } ; --*
lin hatching_1_N = mkN "escotilha" ; --*
lin hateful_1_A = mkA "abominável" ; --*
lin hateful_2_A = mkA "mesquinho" ; --*
lin hate_N = variants {mkN "aversão" ; mkN "ódio" ; } ; --*
lin hater_N = mkN "odiador" ; --*
lin hate_V2 = variants {mkV2 (mkV "detestar") ; mkV2 (mkV "odiar") ; } ; --*
lin hatful_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin hatmaker_N = variants {mkN "chapeleiro" ; mkN "modista" ; } ; --*
lin hatred_N = variants {mkN "aversão" ; mkN "ódio" ; } ; --*
lin hatter_N = variants {mkN "chapeleiro" ; mkN "modista" ; } ; --*
lin haughtiness_N = variants {mkN "arrogância" ; mkN "elevado-high-handedness" ; mkN "orgulho" ; } ; --*
lin haughty_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin haul_1_V2 = variants {mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin haul_2_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin hauler_N = mkN "transportador" ; --*
lin haulier_N = mkN "transportador" ; --*
lin haunt_1_V2 = variants {mkV2 (mkV "aparacer") ; mkV2 (mkV "perseguir") ; mkV2 (mkV "seguir") ; } ; --*
lin haunt_2_V2 = variants {mkV2 (mkV "amedrontar") ; mkV2 (mkV "apavorar") ; mkV2 (mkV "assombrar") ; mkV2 (mkV "obsedar") ; } ; --*
lin haunt_3_V2 = variants {mkV2 (mkV "frequentar") ; mkV2 (mkV "freqüentar") ; } ; --*
lin haunt_N = variants {mkN "ground" ; mkN "lugar" ; } ; --*
lin haustorium_N = mkN "haustório" ; --*
lin hautboy_1_N = mkN "oboé" ; --*
lin hauteur_N = variants {mkN "arrogância" ; mkN "elevado-high-handedness" ; mkN "orgulho" ; } ; --*
lin havana_N = variants {mkN "capital" ; mkN "Havana" ; mkN "of" ; } ; --*
lin havana_PN = variants {mkPN "capital" ; mkPN "Havana" ; mkPN "of" ; } ; --*
lin have_11_V2 = variants {mkV2 (mkV "experienciar") ; mkV2 (mkV "experimentar") ; mkV2 (mkV "ter") ; } ; --*
lin have_12_V2 = variants {mkV2 (mkV "padecer") ; mkV2 (mkV "ter") ; } ; --*
lin have_13_V2V = mkV2V (mkV "induzir") ; --*
lin have_14_V2 = mkV2 (mkV "aceitar") ; --*
lin have_15_V2 = mkV2 (mkV "receber") ; --*
lin have_16_V2 = variants {mkV2 (mkV "contrair") ; mkV2 (mkV "sofrer") ; mkV2 (mkV "ter") ; } ; --*
lin have_18_V2 = variants {mkV2 (mkV "birth") ; mkV2 (mkV "dar") ; mkV2 (mkV "parir") ; mkV2 (mkV "ter") ; } ; --*
lin have_1_V2 = variants {mkV2 (mkV "got") ; mkV2 (mkV "ter") ; } ; --*
lin have_2_V2 = variants {mkV2 (mkV "apresenta") ; mkV2 (mkV "dispõe") ; } ; --*
lin have_3_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "passar") ; mkV2 (mkV "ter") ; } ; --*
lin have_4_V2 = variants {mkV2 (mkV "fruir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "ter") ; } ; --*
lin have_5_V2A = mkV2A (mkV "tornar") ; --*
lin have_5_VV = mkVV (mkV "tornar") ; --*
lin have_6_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "in") ; mkV2 (mkV "tomar") ; } ; --*
lin have_it_away_V = variants {mkV "a" ; mkV "comer" ; mkV "foder" ; mkV "in" ; mkV "intercourse" ; mkV "intimate" ; mkV "it" ; mkV "laid" ; mkV "love" ; mkV "meter" ; mkV "montar" ; mkV "out" ; mkV "pinar" ; mkV "sex" ; mkV "together" ; mkV "transar" ; mkV "trepar" ; mkV "with" ; } ; --*
lin have_it_off_V = variants {mkV "a" ; mkV "comer" ; mkV "foder" ; mkV "in" ; mkV "intercourse" ; mkV "intimate" ; mkV "it" ; mkV "laid" ; mkV "love" ; mkV "meter" ; mkV "montar" ; mkV "out" ; mkV "pinar" ; mkV "sex" ; mkV "together" ; mkV "transar" ; mkV "trepar" ; mkV "with" ; } ; --*
lin haven_1_N = mkN "oásis" ; --*
lin haven_2_N = variants {mkN "cais" ; mkN "porto" ; } ; --*
lin have_on_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "usar") ; } ; --*
lin haversack_N = variants {mkN "alforje" ; mkN "mochila" ; mkN "Mochila" ; mkN "pack" ; } ; --*
lin haw_1_N = mkN "pilriteiro" ; --*
lin hawaii_1_PN = variants {mkPN "Havai" ; mkPN "Havaí" ; mkPN "State" ; } ; --*
lin hawaii_2_PN = variants {mkPN "Havai" ; mkPN "Island" ; } ; --*
lin hawk_1_N = variants {mkN "acípitre" ; mkN "gavião" ; mkN "Gavião" ; } ; --*
lin hawk_1_V2 = variants {mkV2 (mkV "chatinar") ; mkV2 (mkV "mercadejar") ; mkV2 (mkV "traficar") ; } ; --*
lin hawk_3_V2 = variants {mkV2 (mkV "pigarrear") ; mkV2 (mkV "the") ; } ; --*
lin hawker_1_N = mkN "camelô" ; --*
lin hawthorn_N = mkN "pilriteiro" ; --*
lin hayfield_N = variants {mkN "prado" ; mkN "Prado" ; } ; --*
lin hay_N = variants {mkN "feno" ; mkN "forragem" ; mkN "relva" ; } ; --*
lin hayrick_N = mkN "montão" ; --*
lin haystack_N = mkN "montão" ; --*
lin haywire_1_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin hazard_1_N = variants {mkN "ameaça" ; mkN "perigo" ; mkN "risco" ; } ; --*
lin hazard_1_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "aventurar") ; mkV2 (mkV "pretender") ; mkV2 (mkV "supor") ; } ; --*
lin hazard_2_N = variants {mkN "azar" ; mkN "ensejo" ; mkN "sorte" ; } ; --*
lin hazard_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "aventurar") ; mkV2 (mkV "aventurar-se") ; } ; --*
lin hazard_3_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "chances") ; } ; --*
lin hazardous_A = variants {mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin haze_1_N = variants {mkN "embaçamento" ; mkN "neblina" ; mkN "névoa" ; mkN "Névoa" ; } ; --*
lin haze_1_V2 = mkV2 (mkV "enevoar") ; --*
lin haze_2_N = variants {mkN "bruma" ; mkN "confusão" ; } ; --*
lin hazel_2_N = mkN "aveleiro" ; --*
lin hazel_2_PN = mkPN "aveleiro" ; --*
lin hazel_3_N = variants {mkN "avelã" ; mkN "tree" ; } ; --*
lin hazel_3_PN = variants {mkPN "avelã" ; mkPN "tree" ; } ; --*
lin hazel_A = variants {mkA "avelaneira" ; mkA "cor" ; } ; --*
lin hazelnut_1_N = variants {mkN "avelã" ; mkN "tree" ; } ; --*
lin hazelnut_2_N = variants {mkN "avelã" ; mkN "Corylus" ; } ; --*
lin haziness_2_N = mkN "névoa" ; --*
lin hazy_1_A = mkA "nevoeirento" ; --*
lin h_bomb_N = variants {mkN "bomb" ; mkN "H-bomba" ; } ; --*
lin head_13_N = variants {mkN "director" ; mkN "diretor" ; mkN "principal" ; mkN "teacher" ; } ; --*
lin head_16_N = variants {mkN "cabeceiros" ; mkN "Cabo" ; mkN "Cabos" ; mkN "promontório" ; } ; --*
lin head_18_N = mkN "colarinho" ; --*
lin head_1_N = variants {mkN "cabeça" ; mkN "Cabeça" ; mkN "pescoço" ; } ; --*
lin head_1_V2 = variants {mkV2 (mkV "dirigir") ; mkV2 (mkV "ir") ; } ; --*
lin head_23_N = variants {mkN "questão" ; mkN "tema" ; } ; --*
lin head_24_N = mkN "encabeçamento" ; --*
lin head_28_N = mkN "cara" ; --*
lin head_2_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "encabeçar") ; mkV2 (mkV "gerir") ; mkV2 (mkV "liderar") ; } ; --*
lin head_33_N = variants {mkN "sex" ; mkN "sexo" ; } ; --*
lin head_3_N = variants {mkN "cabeça" ; mkN "mente" ; mkN "psique" ; } ; --*
lin head_3_V2 = variants {mkV2 (mkV "desbravar") ; mkV2 (mkV "liderar") ; } ; --*
lin head_4_N = variants {mkN "cabeça" ; mkN "chefe" ; mkN "dog" ; mkN "responsável" ; } ; --*
lin head_4_V2 = variants {mkV2 (mkV "capitanear") ; mkV2 (mkV "up") ; } ; --*
lin head_5_V2 = variants {mkV2 (mkV "canalizar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; } ; --*
lin head_6_V = mkV "originar" ; --*
lin head_7_V2 = mkV2 (mkV "encabeçar") ; --*
lin head_8_N = mkN "nascente" ; --*
lin headache_1_N = variants {mkN "dor-de-cabeça" ; mkN "preocupação" ; } ; --*
lin headache_2_N = variants {mkN "ache" ; mkN "cefaleia" ; mkN "cefaléia" ; mkN "Cefaléia" ; mkN "dor" ; mkN "problemão" ; } ; --*
lin headband_N = mkN "testeira" ; --*
lin headboard_N = mkN "cabeceira" ; --*
lin headdress_N = variants {mkN "chapéu" ; mkN "Chapéus" ; } ; --*
lin header_1_N = mkN "encabeçamento" ; --*
lin header_2_N = variants {mkN "lintel" ; mkN "Lintel" ; } ; --*
lin headgear_1_N = variants {mkN "chapéu" ; mkN "Chapéus" ; } ; --*
lin heading_1_N = mkN "encabeçamento" ; --*
lin heading_2_N = mkN "curso" ; --*
lin headlamp_N = variants {mkN "farol" ; mkN "lanterna" ; mkN "projetor" ; mkN "refletor" ; } ; --*
lin headland_N = variants {mkN "cabeceiros" ; mkN "Cabo" ; mkN "Cabos" ; mkN "promontório" ; } ; --*
lin headless_1_A = mkA "sem" ; --*
lin headlight_N = variants {mkN "farol" ; mkN "lanterna" ; mkN "projetor" ; mkN "refletor" ; } ; --*
lin headline_N = variants {mkN "headline" ; mkN "manchete" ; } ; --*
lin headlong_1_A = variants {mkA "apressado" ; mkA "precipitado" ; } ; --*
lin headman_2_N = variants {mkN "chefe" ; mkN "chief" ; } ; --*
lin headmaster_N = mkN "reitor" ; --*
lin headmastership_N = mkN "diretoria" ; --*
lin head_off_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin headquarters_1_N = variants {mkN "base" ; mkN "office" ; mkN "sede" ; } ; --*
lin headquarters_2_N = variants {mkN "headquarters" ; mkN "quartel" ; } ; --*
lin headroom_1_N = mkN "pé-direito" ; --*
lin headset_N = variants {mkN "auscultadores" ; mkN "headset" ; } ; --*
lin headstone_1_N = variants {mkN "chave" ; mkN "Chave" ; } ; --*
lin headstone_2_N = variants {mkN "estela" ; mkN "lápide" ; mkN "Lápide" ; } ; --*
lin head_up_V2 = variants {mkV2 (mkV "capitanear") ; mkV2 (mkV "up") ; } ; --*
lin headway_1_N = mkN "pé-direito" ; --*
lin headword_2_N = mkN "verbete" ; --*
lin heady_3_A = variants {mkA "Inconsequente" ; mkA "temerário" ; } ; --*
lin heal_1_V = variants {mkV "cicatrizar" ; mkV "curar" ; mkV "melhorar" ; mkV "sarar" ; } ; --*
lin healer_N = variants {mkN "curandeiro" ; mkN "terapeuta" ; } ; --*
lin healing_N = mkN "curação" ; --*
lin health_1_N = mkN "saúde" ; --*
lin health_2_N = mkN "saúde" ; --*
lin healthcare_1_N = variants {mkN "Assistência" ; mkN "care" ; mkN "cuidado" ; mkN "seguro-saúde" ; } ; --*
lin healthful_1_A = mkA "saudável" ; --*
lin healthful_2_A = mkA "sanitário" ; --*
lin healthy_1_A = variants {mkA "salubre" ; mkA "são" ; mkA "saudável" ; } ; --*
lin healthy_2_A = mkA "são" ; --*
lin healthy_3_A = variants {mkA "for" ; mkA "salubre" ; } ; --*
lin healthy_5_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin heal_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "curar") ; mkV2 (mkV "sarar") ; } ; --*
lin heap_1_N = variants {mkN "acúmulo" ; mkN "cúmulo" ; mkN "grupo" ; mkN "montão" ; mkN "monte" ; mkN "pilha" ; } ; --*
lin heap_2_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "agavelar") ; mkV2 (mkV "empilhar") ; } ; --*
lin heap_3_N = mkN "calhambeque" ; --*
lin heap_3_V2 = mkV2 (mkV "encher") ; --*
lin heap_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin hear_1_V2 = variants {mkV2 (mkV "escutar") ; mkV2 (mkV "ouvir") ; mkV2 (mkV "sentir") ; } ; --*
lin hear_1_V2V = variants {mkV2V (mkV "escutar") ; mkV2V (mkV "ouvir") ; mkV2V (mkV "sentir") ; } ; --*
lin hear_1_V = variants {mkV "escutar" ; mkV "ouvir" ; mkV "sentir" ; } ; --*
lin hear_2_VS = variants {mkVS (mkV "a") ; mkVS (mkV "achar") ; mkVS (mkV "descobrir") ; mkVS (mkV "informar-se") ; mkVS (mkV "out") ; mkVS (mkV "up") ; mkVS (mkV "wind") ; mkVS (mkV "word") ; } ; --*
lin hear_5_V2 = variants {mkV2 (mkV "escutar") ; mkV2 (mkV "heed") ; } ; --*
lin hearer_N = variants {mkN "aluno" ; mkN "auditor" ; mkN "ouvinte" ; } ; --*
lin hearing_2_N = variants {mkN "audiência" ; mkN "ouvinte" ; } ; --*
lin hearing_4_N = variants {mkN "dar" ; mkN "escuta" ; } ; --*
lin hearing_6_N = variants {mkN "audição" ; mkN "modality" ; mkN "of" ; mkN "sense" ; } ; --*
lin hearing_aid_2_N = variants {mkN "aid" ; mkN "trumpet" ; } ; --*
lin hearsay_N = variants {mkN "boato" ; mkN "diz-que-diz-que" ; mkN "fama" ; mkN "fofoca" ; mkN "renome" ; mkN "rumor" ; } ; --*
lin hearse_N = variants {mkN "carro" ; mkN "rabecão" ; } ; --*
lin heart_10_N = mkN "copas" ; --*
lin heart_1_N = mkN "coração" ; --*
lin heart_2_N = variants {mkN "Coraçao" ; mkN "coração" ; } ; --*
lin heart_3_N = variants {mkN "coragem" ; mkN "nervo" ; } ; --*
lin heart_4_N = mkN "jazida" ; --*
lin heart_5_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin heart_7_N = mkN "coração" ; --*
lin heart_8_N = variants {mkN "amabilidade" ; mkN "bondade" ; mkN "generosidade" ; } ; --*
lin heart_9_N = variants {mkN "afecção" ; mkN "afeição" ; mkN "afetividade" ; mkN "amor" ; mkN "apego" ; mkN "carinho" ; } ; --*
lin heartache_N = variants {mkN "amargura" ; mkN "coração" ; mkN "desgosto" ; mkN "dor" ; mkN "pesar" ; mkN "tristeza" ; } ; --*
lin heartbeat_1_N = mkN "pulso" ; --*
lin heartbeat_2_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin heartbreak_N = variants {mkN "amargura" ; mkN "coração" ; mkN "desgosto" ; mkN "dor" ; mkN "pesar" ; mkN "tristeza" ; } ; --*
lin heartburn_N = variants {mkN "pirose" ; mkN "queimação" ; } ; --*
lin heart_disease_N = variants {mkN "cardiopatia" ; mkN "disease" ; } ; --*
lin hearten_V2 = variants {mkV2 (mkV "alentar") ; mkV2 (mkV "empolgar") ; mkV2 (mkV "encorajar") ; mkV2 (mkV "incentivar") ; } ; --*
lin heart_failure_N = mkN "failure" ; --*
lin heartfelt_A = mkA "sincero" ; --*
lin hearth_1_N = variants {mkN "chaminé" ; mkN "fireplace" ; mkN "lareira" ; } ; --*
lin hearth_2_N = variants {mkN "chaminé" ; mkN "Fogão" ; mkN "lar" ; } ; --*
lin heartiness_1_N = variants {mkN "força" ; mkN "vigor" ; } ; --*
lin heartland_N = variants {mkN "área" ; mkN "coração" ; } ; --*
lin heartsick_2_A = mkA "deprimido" ; --*
lin hearts_N = variants {mkN "copas" ; mkN "Maria" ; } ; --*
lin heat_1_N = variants {mkN "calor" ; mkN "energy" ; } ; --*
lin heat_1_V2 = variants {mkV2 (mkV "aquecer") ; mkV2 (mkV "up") ; } ; --*
lin heat_2_N = variants {mkN "calor" ; mkN "temperature" ; } ; --*
lin heat_2_V2 = mkV2 (mkV "aquecer") ; --*
lin heat_3_N = variants {mkN "calor" ; mkN "febre" ; } ; --*
lin heat_3_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "up") ; } ; --*
lin heat_4_N = mkN "paixão" ; --*
lin heat_4_V = variants {mkV "aquecer" ; mkV "up" ; } ; --*
lin heat_5_N = variants {mkN "andada" ; mkN "cio" ; mkN "estar" ; mkN "estro" ; } ; --*
lin heat_7_N = variants {mkN "aquecimento" ; mkN "calefação" ; mkN "plant" ; mkN "system" ; } ; --*
lin heater_1_N = variants {mkN "aquecedor" ; mkN "aquecedores" ; } ; --*
lin heath_1_N = variants {mkN "charneca" ; mkN "tojal" ; mkN "urze" ; } ; --*
lin heath_2_N = variants {mkN "charneca" ; mkN "charnecas" ; } ; --*
lin heathen_A = mkA "pagão" ; --*
lin heathenish_A = mkA "pagão" ; --*
lin heathen_N = mkN "pagão" ; --*
lin heating_1_N = variants {mkN "aquecimento" ; mkN "esquentamento" ; } ; --*
lin heating_2_N = variants {mkN "aquecimento" ; mkN "calefação" ; mkN "plant" ; mkN "system" ; } ; --*
lin heave_2_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "lançar") ; } ; --*
lin heave_2_V = variants {mkV "jogar" ; mkV "lançar" ; } ; --*
lin heave_5_N = variants {mkN "alcar" ; mkN "elevação" ; mkN "levantamento" ; } ; --*
lin heave_6_V = variants {mkV "bufar" ; mkV "ofegar" ; } ; --*
lin heave_7_V = mkV "bombear" ; --*
lin heave_8_V = mkV "tentar" ; --*
lin heaven_1_N = variants {mkN "alturas" ; mkN "céu" ; mkN "land" ; mkN "olimpo" ; mkN "paraíso" ; mkN "Paraíso" ; } ; --*
lin heaven_2_N = variants {mkN "céu" ; mkN "Céu" ; } ; --*
lin heavenly_1_A = variants {mkA "celeste" ; mkA "celestial" ; } ; --*
lin heavenly_2_A = variants {mkA "celeste" ; mkA "celestial" ; } ; --*
lin heavenly_3_A = mkA "celeste" ; --*
lin heavily_1_Adv = variants {mkAdv "a" ; mkAdv "pesadamente" ; } ; --*
lin heavily_1_AdV = variants {mkAdV "a" ; mkAdV "pesadamente" ; } ; --*
lin heaviside_PN = variants {mkPN "Heaviside" ; mkPN "Oliver" ; } ; --*
lin heavy_11_A = mkA "denso" ; --*
lin heavy_14_A = variants {mkA "child" ; mkA "grávida" ; } ; --*
lin heavy_18_A = variants {mkA "enfadonho" ; mkA "ponderado" ; } ; --*
lin heavy_1_A = mkA "pesado" ; --*
lin heavy_24_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin heavy_2_A = variants {mkA "forte" ; mkA "pesado" ; } ; --*
lin heavy_8_A = mkA "pesado" ; --*
lin heavy_handed_1_A = mkA "desengoçado" ; --*
lin heavy_hearted_A = mkA "triste" ; --*
lin heavyweight_3_N = mkN "peso" ; --*
lin heavyweight_4_N = variants {mkN "baleias" ; mkN "cetáceo" ; mkN "gigante" ; } ; --*
lin heavyweight_5_N = variants {mkN "gigante" ; mkN "monstro" ; mkN "titã" ; } ; --*
lin hebdomadal_1_A = mkA "semanal" ; --*
lin hebraic_1_A = variants {mkA "hebraica" ; mkA "hebraicas" ; mkA "hebraico" ; mkA "judaico" ; } ; --*
lin hebraic_2_A = variants {mkA "hebraico" ; mkA "hebreu" ; } ; --*
lin hebrew_1_A = variants {mkA "hebraico" ; mkA "hebreu" ; } ; --*
lin hebrew_2_A = variants {mkA "hebraica" ; mkA "hebraicas" ; mkA "hebraico" ; mkA "judaico" ; } ; --*
lin hecatomb_N = mkN "hecatombe" ; --*
lin heckler_N = variants {mkN "interferente" ; mkN "provocador" ; } ; --*
lin hectare_N = mkN "hectare" ; --*
lin hectic_A = variants {mkA "agitado" ; mkA "febril" ; mkA "frenético" ; } ; --*
lin hectoliter_1_N = mkN "hectolitro" ; --*
lin hectometer_1_N = variants {mkN "hectômetro" ; mkN "Hectômetro" ; } ; --*
lin hedge_1_N = variants {mkN "cerca" ; mkN "sebe" ; mkN "sebes" ; } ; --*
lin hedge_1_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin hedgehog_1_N = variants {mkN "Porco" ; mkN "porco-espinho" ; } ; --*
lin hedgehog_2_N = variants {mkN "europaeus" ; mkN "europeaeus" ; mkN "ouriço" ; } ; --*
lin hedgerow_N = variants {mkN "cerca" ; mkN "sebe" ; mkN "sebes" ; } ; --*
lin hedge_sparrow_N = variants {mkN "modularis" ; mkN "pássaro" ; mkN "sparrow" ; } ; --*
lin hedge_V = variants {mkV "esquivar" ; mkV "evadir" ; mkV "evitar" ; mkV "off" ; mkV "presumir" ; mkV "varrer" ; } ; --*
lin hedonism_1_N = mkN "hedonismo" ; --*
lin hedonism_2_N = mkN "hedonismo" ; --*
lin heedful_1_A = variants {mkA "atencioso" ; mkA "atento" ; mkA "attention" ; } ; --*
lin heedful_2_A = mkA "atento" ; --*
lin heedful_3_A = mkA "atento" ; --*
lin heed_V2 = variants {mkV2 (mkV "escutar") ; mkV2 (mkV "obedecer") ; } ; --*
lin heel_1_N = variants {mkN "salto" ; mkN "tacão" ; mkN "talão" ; } ; --*
lin heel_2_N = mkN "calcanhar" ; --*
lin heelbone_N = variants {mkN "calcâneo" ; mkN "Calcâneo" ; mkN "tarsi" ; } ; --*
lin hefty_1_A = mkA "musculoso" ; --*
lin hefty_3_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin hegemony_N = mkN "hegemonia" ; --*
lin hegira_1_N = mkN "hégira" ; --*
lin he_goat_N = variants {mkN "bode" ; mkN "goat" ; } ; --*
lin heifer_N = variants {mkN "bezerra" ; mkN "novilha" ; } ; --*
lin height_1_N = variants {mkN "altitude" ; mkN "altura" ; } ; --*
lin height_2_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin height_3_N = variants {mkN "altura" ; mkN "estatura" ; } ; --*
lin height_4_N = variants {mkN "altitude" ; mkN "altura" ; } ; --*
lin heighten_1_V = variants {mkV "aumentar" ; mkV "subir" ; } ; --*
lin heighten_2_V = mkV "aumentar" ; --*
lin heighten_3_V2 = mkV2 (mkV "aumentar") ; --*
lin heighten_5_V2 = mkV2 (mkV "afiar") ; --*
lin heighten_6_V2 = variants {mkV2 (mkV "acirrar") ; mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; } ; --*
lin heinous_A = variants {mkA "atroz" ; mkA "hediondo" ; mkA "monstruoso" ; } ; --*
lin heinousness_N = variants {mkN "atrocidade" ; mkN "barbaria" ; mkN "barbaridade" ; } ; --*
lin heir_1_N = variants {mkN "herdeira" ; mkN "herdeiro" ; } ; --*
lin heir_2_N = mkN "sucessor" ; --*
lin heiress_N = mkN "herdeiro" ; --*
lin heist_1_N = mkN "assalto" ; --*
lin heist_2_N = variants {mkN "assalto" ; mkN "latrocínio" ; mkN "robbery" ; } ; --*
lin hejira_1_N = mkN "hégira" ; --*
lin helen_PN = variants {mkPN "Helena" ; mkPN "of" ; } ; --*
lin helicopter_N = variants {mkN "Helicoptero" ; mkN "helicóptero" ; mkN "Helicópteros" ; } ; --*
lin heliocentric_A = mkA "heliocêntrico" ; --*
lin heliolatry_N = mkN "heliolatria" ; --*
lin heliosphere_N = mkN "heliosfera" ; --*
lin heliotrope_N = mkN "Heliotropo" ; --*
lin heliotropism_N = mkN "heliotropismo" ; --*
lin heliport_N = mkN "heliporto" ; --*
lin helium_N = variants {mkN "hélio" ; mkN "Hélio" ; mkN "number" ; } ; --*
lin helix_1_N = variants {mkN "hélice" ; mkN "Hélice" ; } ; --*
lin helix_2_N = variants {mkN "bobine" ; mkN "espiral" ; mkN "hélice" ; mkN "rosca" ; } ; --*
lin helix_3_N = mkN "Helix" ; --*
lin hell_1_N = variants {mkN "inferno" ; mkN "on" ; mkN "pit" ; mkN "pits" ; } ; --*
lin hell_2_N = mkN "inferno" ; --*
lin hell_3_N = variants {mkN "inferno" ; mkN "region" ; } ; --*
lin hell_4_N = variants {mkN "inferno" ; mkN "region" ; mkN "submundo" ; } ; --*
lin hellbender_N = variants {mkN "alleganiensis" ; mkN "Cryptobranchus" ; mkN "puppy" ; } ; --*
lin hellcat_N = mkN "prostituta" ; --*
lin hellebore_1_N = variants {mkN "heléboro" ; mkN "hellebore" ; } ; --*
lin hellebore_2_N = mkN "Helleborus" ; --*
lin hellene_N = variants {mkN "grega" ; mkN "grego" ; mkN "heleno" ; } ; --*
lin hellenic_1_A = variants {mkA "helênico" ; mkA "heleno" ; } ; --*
lin hellenic_2_A = mkA "grego" ; --*
lin hellfire_N = variants {mkN "fogo" ; mkN "region" ; } ; --*
lin hellhound_2_N = variants {mkN "Cerbero" ; mkN "Cérbero" ; } ; --*
lin hellish_1_A = variants {mkA "animal" ; mkA "infernal" ; } ; --*
lin hellish_2_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin hello_Interj = ss "olá" ; --*
lin helm_1_N = variants {mkN "leme" ; mkN "timão" ; mkN "volante" ; } ; --*
lin helm_2_N = variants {mkN "leme" ; mkN "timão" ; } ; --*
lin helmet_1_N = mkN "capacete" ; --*
lin helmet_2_N = variants {mkN "capacete" ; mkN "casco" ; mkN "elmo" ; } ; --*
lin helmetflower_3_N = variants {mkN "Acónito" ; mkN "Acônito" ; mkN "flower" ; mkN "napellus" ; } ; --*
lin helminth_N = variants {mkN "Helmintologia" ; mkN "worm" ; } ; --*
lin helot_N = variants {mkN "escravo" ; mkN "servo" ; } ; --*
lin help_1_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "auxílio" ; mkN "socorro" ; } ; --*
lin help_1_V = variants {mkV "acorrer" ; mkV "ajudar" ; mkV "assistir" ; mkV "auxiliar" ; mkV "socorrer" ; mkV "solidarizar" ; } ; --*
lin help_2_N = variants {mkN "adjunto" ; mkN "ajudante" ; mkN "assistente" ; mkN "criado" ; mkN "servente" ; mkN "servidor" ; } ; --*
lin help_2_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "socorrer") ; } ; --*
lin help_3_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "recurso" ; } ; --*
lin help_4_N = mkN "assistência" ; --*
lin help_4_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "oneself") ; } ; --*
lin help_5_V = mkV "ajudar" ; --*
lin help_8_V2 = mkV2 (mkV "ajudar") ; --*
lin helperFem_1_N = variants {mkN "adjunto" ; mkN "ajudante" ; mkN "assistente" ; mkN "criado" ; mkN "servente" ; mkN "servidor" ; } ; --*
lin helperFem_2_N = mkN "doador" ; --*
lin helperMasc_1_N = variants {mkN "adjunto" ; mkN "ajudante" ; mkN "assistente" ; mkN "criado" ; mkN "servente" ; mkN "servidor" ; } ; --*
lin helperMasc_2_N = mkN "doador" ; --*
lin helpful_A = variants {mkA "prestável" ; mkA "serviçal" ; } ; --*
lin helping_N = mkN "porção" ; --*
lin helpless_1_A = mkA "incapacitado" ; --*
lin helpless_2_A = mkA "indefeso" ; --*
lin helplessness_1_N = mkN "fraqueza" ; --*
lin help_out_1_V = variants {mkV "acorrer" ; mkV "ajudar" ; mkV "assistir" ; mkV "auxiliar" ; mkV "socorrer" ; mkV "solidarizar" ; } ; --*
lin help_to_3_VV = variants {mkVV (mkV "acudir") ; mkVV (mkV "ajudar") ; } ; --*
lin help_V2V = variants {mkV2V (mkV "acorrer") ; mkV2V (mkV "ajudar") ; mkV2V (mkV "assistir") ; mkV2V (mkV "auxiliar") ; mkV2V (mkV "socorrer") ; mkV2V (mkV "solidarizar") ; } ; --*
lin helsinki_PN = variants {mkPN "capital" ; mkPN "Helsinque" ; mkPN "Helsínque" ; mkPN "of" ; } ; --*
lin hem_1_N = mkN "bainha" ; --*
lin hem_1_V2 = variants {mkV2 (mkV "bainhar") ; mkV2 (mkV "debruar") ; mkV2 (mkV "embainhar") ; } ; --*
lin hem_2_V2 = variants {mkV2 (mkV "bainhar") ; mkV2 (mkV "pigarrear") ; } ; --*
lin hem_2_V = variants {mkV "bainhar" ; mkV "pigarrear" ; } ; --*
lin hemagglutination_1_N = mkN "hemaglutinação" ; --*
lin hemangioma_1_N = mkN "hemangioma" ; --*
lin he_man_N = variants {mkN "macho" ; mkN "varão" ; } ; --*
lin hematite_N = mkN "hematita" ; --*
lin hematochezia_1_N = mkN "Hematoquezia" ; --*
lin hematocrit_1_N = variants {mkN "cell" ; mkN "hematócrito" ; } ; --*
lin hematologic_1_A = mkA "hematológico" ; --*
lin hematologist_1_N = mkN "hematologista" ; --*
lin hematology_1_N = variants {mkN "hematologia" ; mkN "Hematologia" ; } ; --*
lin hematoma_1_N = variants {mkN "hematoma" ; mkN "Hematoma" ; } ; --*
lin hematopoiesis_1_N = mkN "hematopoiese" ; --*
lin hematopoietic_1_A = variants {mkA "hematogênico" ; mkA "hematopoiético" ; mkA "hemopoiético" ; } ; --*
lin hematuria_1_N = variants {mkN "Hematuria" ; mkN "hematúria" ; } ; --*
lin heme_1_N = variants {mkN "heme" ; mkN "hemo" ; mkN "pigmento" ; } ; --*
lin hemeralopia_N = variants {mkN "blindness" ; mkN "hemeralopia" ; } ; --*
lin hemiacetal_N = mkN "hemiacetal" ; --*
lin hemimorphite_N = mkN "calamina" ; --*
lin hemiplegia_N = variants {mkN "hemiplegia" ; mkN "paralysis" ; } ; --*
lin hemisphere_1_N = mkN "hemisfério" ; --*
lin hemisphere_2_N = mkN "hemisfério" ; --*
lin hemisphere_3_N = variants {mkN "hemisfério" ; mkN "hemisphere" ; } ; --*
lin hemispheric_A = mkA "hemisférico" ; --*
lin hemlock_2_N = variants {mkN "cicuta" ; mkN "fern" ; mkN "hemlock" ; mkN "maculatum" ; mkN "parsley" ; } ; --*
lin hemochromatosis_N = variants {mkN "diabetes" ; mkN "disease" ; mkN "hemocromatose" ; mkN "overload" ; } ; --*
lin hemodialysis_1_N = variants {mkN "diálise" ; mkN "Hemodialise" ; mkN "hemodiálise" ; } ; --*
lin hemodynamic_A = mkA "hemodinâmico" ; --*
lin hemodynamics_N = mkN "Cardiologia" ; --*
lin hemoglobin_N = mkN "hemoglobina" ; --*
lin hemoglobinopathy_1_N = variants {mkN "hemoglobinopatia" ; mkN "Hemoglobinopatia" ; } ; --*
lin hemoglobinuria_1_N = mkN "hemoglobinúria" ; --*
lin hemolysin_1_N = mkN "hemolisina" ; --*
lin hemolysis_1_N = mkN "hemólise" ; --*
lin hemolytic_1_A = mkA "hemolítico" ; --*
lin hemophilia_N = variants {mkN "disease" ; mkN "hemofilia" ; } ; --*
lin hemoprotein_1_N = mkN "hemoproteína" ; --*
lin hemoptysis_1_N = mkN "hemoptise" ; --*
lin hemorrhage_N = variants {mkN "hemorragia" ; mkN "sangramento" ; } ; --*
lin hemorrhage_V2 = variants {mkV2 (mkV "blood") ; mkV2 (mkV "sangrar") ; } ; --*
lin hemorrhage_V = variants {mkV "blood" ; mkV "sangrar" ; } ; --*
lin hemorrhagic_1_A = mkA "hemorrágico" ; --*
lin hemorrhoid_1_N = variants {mkN "hemorróida" ; mkN "hemorróidas" ; } ; --*
lin hemosiderin_1_N = mkN "hemossiderina" ; --*
lin hemosiderosis_1_N = mkN "Hemossiderose" ; --*
lin hemostasis_1_N = variants {mkN "hemostase" ; mkN "Hemostasia" ; } ; --*
lin hemothorax_1_N = mkN "hemotórax" ; --*
lin hemp_1_N = variants {mkN "cânhamo" ; mkN "maconha" ; } ; --*
lin hemp_2_N = variants {mkN "cânhamo" ; mkN "maconha" ; } ; --*
lin hempen_A = mkA "fibroso" ; --*
lin hen_1_N = mkN "galinha" ; --*
lin hen_3_N = mkN "galinha" ; --*
lin hence_1_Adv = variants {mkAdv "assim" ; mkAdv "consequentemente" ; mkAdv "daqui" ; mkAdv "de" ; mkAdv "dessa" ; mkAdv "desse" ; mkAdv "em" ; mkAdv "por" ; mkAdv "portanto" ; } ; --*
lin hence_2_Adv = mkAdv "daqui" ; --*
lin henceforth_Adv = variants {mkAdv "a" ; mkAdv "de" ; mkAdv "doravante" ; } ; --*
lin henceforward_Adv = variants {mkAdv "a" ; mkAdv "de" ; mkAdv "doravante" ; } ; --*
lin hencoop_N = variants {mkN "capoeira" ; mkN "coop" ; mkN "galinheiro" ; } ; --*
lin henhouse_N = variants {mkN "capoeira" ; mkN "coop" ; mkN "galinheiro" ; } ; --*
lin henna_N = variants {mkN "hena" ; mkN "henna" ; } ; --*
lin hen_party_N = mkN "party" ; --*
lin henry_1_N = mkN "Henry" ; --*
lin henry_1_PN = mkPN "Henry" ; --*
lin henry_4_N = mkN "Henry" ; --*
lin henry_4_PN = mkPN "Henry" ; --*
lin heparin_N = mkN "heparina" ; --*
lin hepatic_A = mkA "hepático" ; --*
lin hepatitis_N = variants {mkN "hepatite" ; mkN "Hepatites" ; } ; --*
lin hepatoma_N = variants {mkN "carcinoma" ; mkN "hepatocarcinoma" ; mkN "Hepatocarcinoma" ; mkN "hepatoma" ; } ; --*
lin hepatomegaly_N = mkN "hepatomegalia" ; --*
lin hepatotoxic_A = mkA "hepatotóxico" ; --*
lin heptagon_N = mkN "heptágono" ; --*
lin heptane_N = mkN "heptano" ; --*
lin herald_1_N = mkN "arauto" ; --*
lin herald_1_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; } ; --*
lin herald_2_V2 = variants {mkV2 (mkV "aclamar") ; mkV2 (mkV "aplaudir") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "clamar") ; mkV2 (mkV "louvar") ; mkV2 (mkV "ovacionar") ; } ; --*
lin herald_3_V2 = mkV2 (mkV "saudar") ; --*
lin heraldic_1_A = mkA "heráldico" ; --*
lin heraldry_1_N = mkN "heráldica" ; --*
lin heraldry_2_N = variants {mkN "heráldica" ; mkN "Heráldica" ; } ; --*
lin herb_1_N = variants {mkN "erva" ; mkN "plant" ; } ; --*
lin herb_1_PN = variants {mkPN "erva" ; mkPN "plant" ; } ; --*
lin herb_2_N = mkN "erva" ; --*
lin herb_2_PN = mkPN "erva" ; --*
lin herbaceous_A = mkA "herbáceo" ; --*
lin herbal_A = variants {mkA "Herbario" ; mkA "Herbário" ; } ; --*
lin herbarium_N = mkN "herbário" ; --*
lin herbicide_N = variants {mkN "herbicida" ; mkN "Herbicidas" ; mkN "killer" ; } ; --*
lin herbivore_N = mkN "herbívoro" ; --*
lin herbivorous_A = mkA "herbívoro" ; --*
lin herd_1_N = variants {mkN "gado" ; mkN "grei" ; mkN "manada" ; mkN "rebanho" ; } ; --*
lin herd_1_V2 = mkV2 (mkV "arrebanhar") ; --*
lin herd_2_N = mkN "manada" ; --*
lin herd_3_N = mkN "multidão" ; --*
lin herd_3_V2 = mkV2 (mkV "arrebanhar") ; --*
lin herder_2_N = variants {mkN "pastor" ; mkN "pegureiro" ; } ; --*
lin herdsman_N = variants {mkN "pastor" ; mkN "pegureiro" ; } ; --*
lin here_3_Adv = mkAdv "aqui" ; --*
lin hereafter_1_Adv = mkAdv "futuramente" ; --*
lin hereafter_1_N = variants {mkN "além" ; mkN "além-túmulo" ; mkN "vida" ; } ; --*
lin hereafter_2_N = variants {mkN "futuro" ; mkN "porvir" ; mkN "to" ; mkN "vindouro" ; } ; --*
lin hereby_Adv = mkAdv "aqui" ; --*
lin hereditary_2_A = variants {mkA "hereditário" ; mkA "patrimonial" ; } ; --*
lin heredity_1_N = mkN "herança" ; --*
lin heredity_2_N = variants {mkN "endowment" ; mkN "herança" ; } ; --*
lin hereford_PN = mkPN "Hereford" ; --*
lin hereinafter_Adv = mkAdv "futuramente" ; --*
lin heresy_1_N = variants {mkN "heresia" ; mkN "heterodoxia" ; } ; --*
lin heretic_1_N = variants {mkN "herege" ; mkN "outcast" ; } ; --*
lin heretical_A = mkA "herético" ; --*
lin heretofore_Adv = variants {mkAdv "ainda" ; mkAdv "até" ; mkAdv "far" ; mkAdv "now" ; mkAdv "to" ; mkAdv "yet" ; } ; --*
lin hereunder_1_Adv = mkAdv "futuramente" ; --*
lin hereupon_Adv = mkAdv "imediatemente" ; --*
lin herewith_Adv = mkAdv "aqui" ; --*
lin heritable_A = mkA "herdável" ; --*
lin heritage_1_N = variants {mkN "herannça" ; mkN "tradição" ; } ; --*
lin heritage_2_N = mkN "herança" ; --*
lin heritage_3_N = variants {mkN "herança" ; mkN "legado" ; mkN "patrimônio" ; } ; --*
lin heritage_4_N = variants {mkN "espólio" ; mkN "herança" ; } ; --*
lin hermaphrodite_N = variants {mkN "ancipital" ; mkN "andrógino" ; mkN "dígamo" ; mkN "hermafrodita" ; mkN "person" ; } ; --*
lin hermaphroditic_2_A = mkA "hermafrodita" ; --*
lin hermaphroditism_1_N = mkN "hermafroditismo" ; --*
lin hermaphroditism_2_N = mkN "androginia" ; --*
lin hermeneutics_N = mkN "hermenêutica" ; --*
lin hermetic_1_A = mkA "hermético" ; --*
lin hermit_1_N = variants {mkN "anacoreta" ; mkN "eremita" ; } ; --*
lin hermit_2_N = mkN "eremita" ; --*
lin hernia_N = variants {mkN "Hernia" ; mkN "hérnia" ; mkN "Hérnia" ; mkN "herniação" ; mkN "Hérnias" ; } ; --*
lin hero_1_N = variants {mkN "herói" ; mkN "heroína" ; } ; --*
lin hero_2_N = variants {mkN "herói" ; mkN "heroína" ; } ; --*
lin hero_3_N = variants {mkN "guerreiro" ; mkN "herói" ; mkN "paladino" ; } ; --*
lin hero_4_N = variants {mkN "Heron" ; mkN "of" ; } ; --*
lin hero_5_N = mkN "herói" ; --*
lin heroic_1_A = variants {mkA "épico" ; mkA "heróico" ; } ; --*
lin heroic_2_A = mkA "heróico" ; --*
lin heroic_3_A = mkA "heróico" ; --*
lin heroic_4_A = mkA "heróico" ; --*
lin heroic_5_A = mkA "heróico" ; --*
lin heroine_1_N = mkN "heroína" ; --*
lin heroine_2_N = mkN "heroína" ; --*
lin heroin_N = variants {mkN "Heroina" ; mkN "heroína" ; } ; --*
lin heroism_N = mkN "heroísmo" ; --*
lin heron_1_N = variants {mkN "Heron" ; mkN "of" ; } ; --*
lin heron_2_N = variants {mkN "airão" ; mkN "garça" ; } ; --*
lin herpes_1_N = mkN "herpes" ; --*
lin herpes_2_N = variants {mkN "herpes" ; mkN "virus" ; } ; --*
lin herpetologist_N = mkN "herpetólogo" ; --*
lin herpetology_N = variants {mkN "herpetologia" ; mkN "Herpetologia" ; } ; --*
lin herring_1_N = mkN "arenque" ; --*
lin herring_2_N = variants {mkN "arenque" ; mkN "harangus" ; } ; --*
lin hertfordshire_PN = mkPN "Hertfordshire" ; --*
lin hertz_1_N = variants {mkN "hertz" ; mkN "per" ; } ; --*
lin hertz_2_N = variants {mkN "Heinrich" ; mkN "Hertz" ; mkN "Rudolph" ; } ; --*
lin hertz_3_N = variants {mkN "Gustav" ; mkN "Hertz" ; mkN "Ludwig" ; } ; --*
lin hesitancy_2_N = variants {mkN "aversão" ; mkN "hesitação" ; } ; --*
lin hesitant_A = mkA "indeciso" ; --*
lin hesitate_V = mkV "vacilar" ; --*
lin hesitate_VV = variants {mkVV (mkV "duvidar") ; mkVV (mkV "gaguejar") ; mkVV (mkV "hesitar") ; mkVV (mkV "stötön") ; mkVV (mkV "vacilar") ; } ; --*
lin hesitation_1_N = mkN "indecisão" ; --*
lin hesitation_2_N = variants {mkN "aversão" ; mkN "hesitação" ; } ; --*
lin hesitation_3_N = mkN "hesitação" ; --*
lin hessian_N = variants {mkN "boot" ; mkN "galocha" ; mkN "Galocha" ; } ; --*
lin heterocyclic_A = mkA "heterocíclico" ; --*
lin heterodox_A = mkA "herético" ; --*
lin heterodoxy_1_N = variants {mkN "heresia" ; mkN "heterodoxia" ; } ; --*
lin heterodyne_A = mkA "heteródino" ; --*
lin heterogeneity_N = mkN "heterogeneidade" ; --*
lin heterogeneous_1_A = variants {mkA "heterogênea" ; mkA "heterogêneo" ; } ; --*
lin heterogeneous_2_A = variants {mkA "heterogênea" ; mkA "heterogêneo" ; } ; --*
lin heterogenous_1_A = variants {mkA "heterogênea" ; mkA "heterogêneo" ; } ; --*
lin heterogenous_2_A = variants {mkA "heterogênea" ; mkA "heterogêneo" ; } ; --*
lin heterologous_1_A = mkA "heterológico" ; --*
lin heteronym_N = variants {mkN "heterónimo" ; mkN "heterônimo" ; } ; --*
lin heterosexism_N = mkN "Heterossexismo" ; --*
lin heterosexual_A = variants {mkA "hetero" ; mkA "heterossexual" ; } ; --*
lin heterosexuality_N = mkN "heterossexualidade" ; --*
lin heterosexual_N = variants {mkN "hetero" ; mkN "heterossexual" ; mkN "person" ; } ; --*
lin heterotroph_N = mkN "Heterotrofismo" ; --*
lin heterozygote_N = mkN "heterozigoto" ; --*
lin heuristic_A = mkA "heurístico" ; --*
lin heuristic_N = variants {mkN "heurística" ; mkN "program" ; mkN "rule" ; } ; --*
lin hew_2_V2 = mkV2 (mkV "cortar") ; --*
lin hexachlorophene_N = mkN "Hexaclorofeno" ; --*
lin hexadecimal_A = variants {mkA "hexadecimal" ; mkA "sistema" ; } ; --*
lin hexagonal_A = mkA "hexagonal" ; --*
lin hexagon_N = variants {mkN "Hexagono" ; mkN "hexágono" ; } ; --*
lin hexagram_N = mkN "hexagrama" ; --*
lin hexahedron_N = mkN "hexaedro" ; --*
lin hexameter_N = mkN "hexâmetro" ; --*
lin hexane_N = mkN "Hexano" ; --*
lin hexangular_A = mkA "hexagonal" ; --*
lin hex_N = variants {mkN "azaração" ; mkN "maldição" ; } ; --*
lin hexose_N = mkN "Hexose" ; --*
lin heyday_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin hey_Interj = ss "olá" ; --*
lin hiatus_1_N = variants {mkN "hiato" ; mkN "suspensão" ; } ; --*
lin hiatus_2_N = variants {mkN "hiato" ; mkN "lacuna" ; } ; --*
lin hiatus_3_N = mkN "forame" ; --*
lin hibernate_1_V = variants {mkV "hibernar" ; mkV "up" ; } ; --*
lin hibernate_2_V = mkV "hibernar" ; --*
lin hibernation_1_N = mkN "hibernação" ; --*
lin hibernation_2_N = mkN "invernada" ; --*
lin hiccough_N = mkN "soluço" ; --*
lin hiccough_V = mkV "soluçar" ; --*
lin hiccup_N = mkN "soluço" ; --*
lin hiccup_V = mkV "soluçar" ; --*
lin hick_A = variants {mkA "caipira" ; mkA "provinciano" ; mkA "rústico" ; } ; --*
lin hickey_1_N = variants {mkN "acne" ; mkN "borbulha" ; mkN "espinha" ; mkN "furúnculo" ; } ; --*
lin hickey_2_N = variants {mkN "bite" ; mkN "chupão" ; } ; --*
lin hick_N = variants {mkN "caipira" ; mkN "rústico" ; } ; --*
lin hickory_1_N = mkN "hicória" ; --*
lin hidden_1_A = variants {mkA "escondida" ; mkA "escondido" ; mkA "of" ; } ; --*
lin hidden_2_A = variants {mkA "escondido" ; mkA "secreto" ; } ; --*
lin hide_1_N = mkN "pele" ; --*
lin hide_1_V2 = variants {mkV2 (mkV "acobertar") ; mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "ocultar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "tampar") ; mkV2 (mkV "tapar") ; } ; --*
lin hide_2_N = mkN "pele" ; --*
lin hide_2_V = variants {mkV "esconder" ; mkV "esconder-se" ; mkV "out" ; } ; --*
lin hide_3_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "envolver") ; } ; --*
lin hide_4_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "esconder") ; mkV2 (mkV "out") ; } ; --*
lin hide_and_seek_N = variants {mkN "and" ; mkN "esconde-esconde" ; } ; --*
lin hideaway_1_N = mkN "esconderijo" ; --*
lin hideous_1_A = mkA "terrível" ; --*
lin hide_out_N = mkN "esconderijo" ; --*
lin hide_out_V = variants {mkV "esconder" ; mkV "esconder-se" ; mkV "out" ; } ; --*
lin hiding_1_N = mkN "ocultação" ; --*
lin hiding_place_N = mkN "place" ; --*
lin hierarch_2_N = variants {mkN "prelado" ; mkN "priest" ; mkN "primaz" ; } ; --*
lin hierarchic_A = variants {mkA "hierárquica" ; mkA "hierárquico" ; } ; --*
lin hierarchical_1_A = variants {mkA "hierárquica" ; mkA "hierárquico" ; } ; --*
lin hierarchy_1_N = mkN "hierarquia" ; --*
lin hierarchy_2_N = variants {mkN "hierarquia" ; mkN "order" ; mkN "structure" ; } ; --*
lin hieratic_2_A = mkA "hierático" ; --*
lin hieratic_N = variants {mkN "Hierático" ; mkN "script" ; } ; --*
lin hieroglyph_1_N = variants {mkN "hieroglifo" ; mkN "hieróglifo" ; } ; --*
lin hieroglyph_2_N = mkN "Hieróglifos" ; --*
lin hie_V = variants {mkV "along" ; mkV "apressar" ; mkV "correr" ; mkV "on" ; } ; --*
lin hi_fi_2_N = variants {mkN "alta" ; mkN "fidelity" ; } ; --*
lin high_1_A = mkA "alto" ; --*
lin high_2_A = mkA "alto" ; --*
lin high_3_A = variants {mkA "alto" ; mkA "Sumô" ; } ; --*
lin high_5_N = variants {mkN "altura" ; mkN "alturas" ; } ; --*
lin high_6_N = variants {mkN "high" ; mkN "instituto" ; mkN "school" ; } ; --*
lin highbrow_1_A = mkA "intelectual" ; --*
lin higher_education_CN = UseN (mkN "education") ; --*
lin highjack_N = variants {mkN "rapto" ; mkN "roubar" ; mkN "roubo" ; } ; --*
lin highjack_V2 = variants {mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; } ; --*
lin highland_N = mkN "terras" ; --*
lin high_level_2_A = mkA "alto" ; --*
lin highlight_1_N = variants {mkN "realçe" ; mkN "spot" ; } ; --*
lin highlight_1_V2 = variants {mkV2 (mkV "destacar") ; mkV2 (mkV "realçar") ; mkV2 (mkV "salientar") ; mkV2 (mkV "up") ; } ; --*
lin highlight_2_N = variants {mkN "destaque" ; mkN "realçe" ; } ; --*
lin highlight_2_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "realçar") ; } ; --*
lin highly_1_Adv = variants {mkAdv "altamente" ; mkAdv "muitíssimo" ; } ; --*
lin highly_2_Adv = mkAdv "altamente" ; --*
lin highly_3_Adv = mkAdv "altamente" ; --*
lin high_minded_A = variants {mkA "elevado" ; mkA "sublime" ; } ; --*
lin high_mindedness_N = mkN "idealismo" ; --*
lin highness_1_N = mkN "Sua" ; --*
lin highness_2_N = mkN "soberba" ; --*
lin high_priced_A = mkA "caro" ; --*
lin high_priest_1_N = mkN "priest" ; --*
lin high_priest_2_N = variants {mkN "prelado" ; mkN "priest" ; mkN "primaz" ; } ; --*
lin highroad_N = variants {mkN "estrada" ; mkN "road" ; } ; --*
lin high_up_N = variants {mkN "dignitário" ; mkN "important" ; mkN "muckamuck" ; mkN "personalidade" ; mkN "Vip" ; mkN "VIP" ; } ; --*
lin highway_N = variants {mkN "estradas" ; mkN "road" ; mkN "rodovia" ; } ; --*
lin hi_Interj = ss "olá" ; --*
lin hijab_1_N = mkN "hijab" ; --*
lin hijack_1_V2 = variants {mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; } ; --*
lin hijack_N = variants {mkN "rapto" ; mkN "roubar" ; mkN "roubo" ; } ; --*
lin hike_1_N = mkN "vagar" ; --*
lin hike_1_V = variants {mkV "aumentar" ; mkV "up" ; } ; --*
lin hike_2_N = variants {mkN "aumento" ; mkN "increase" ; } ; --*
lin hike_2_V = variants {mkV "caminhar" ; mkV "fazer" ; mkV "passear" ; } ; --*
lin hike_3_N = variants {mkN "aumento" ; mkN "hike" ; mkN "increase" ; } ; --*
lin hiker_N = mkN "Vagabundo" ; --*
lin hilarious_A = variants {mkA "hilária" ; mkA "hilariante" ; mkA "hilário" ; } ; --*
lin hilarity_N = variants {mkN "hilariedade" ; mkN "risada" ; } ; --*
lin hill_1_N = variants {mkN "barranco" ; mkN "chegarterra" ; mkN "colina" ; mkN "colinas" ; mkN "ladeira" ; mkN "montanha" ; mkN "montanhas" ; mkN "monte" ; mkN "morro" ; mkN "Morros" ; } ; --*
lin hill_2_N = mkN "corcova" ; --*
lin hill_4_N = variants {mkN "Benny" ; mkN "Hawthorne" ; mkN "Hill" ; } ; --*
lin hill_billy_N = mkN "cateto" ; --*
lin hillock_N = variants {mkN "colina" ; mkN "outeiro" ; } ; --*
lin hillside_N = variants {mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "vertente" ; } ; --*
lin hilt_N = variants {mkN "cabo" ; mkN "empunhadura" ; mkN "punho" ; } ; --*
lin hind_2_N = mkN "corça" ; --*
lin hind_A = mkA "posterior" ; --*
lin hindbrain_N = mkN "rombencéfalo" ; --*
lin hinder_1_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "entravar") ; mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "reter") ; } ; --*
lin hinder_2_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin hinder_3_V2 = mkV2 (mkV "dificultar") ; --*
lin hindmost_A = mkA "mais" ; --*
lin hindquarters_1_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin hindquarters_2_N = variants {mkN "anca" ; mkN "culatra" ; mkN "garupa" ; mkN "rabo" ; mkN "traseira" ; mkN "traseiro" ; } ; --*
lin hindrance_1_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin hindrance_2_N = mkN "obstáculo" ; --*
lin hindrance_3_N = variants {mkN "impedimento" ; mkN "interferência" ; } ; --*
lin hindsight_N = mkN "discernimento" ; --*
lin hindu_1_N = mkN "hindu" ; --*
lin hindu_2_N = mkN "hindu" ; --*
lin hinduism_1_N = variants {mkN "Hinduismo" ; mkN "hinduísmo" ; } ; --*
lin hinduism_2_N = mkN "hinduísmo" ; --*
lin hindustani_1_N = mkN "hindu" ; --*
lin hindustani_A = mkA "hindu" ; --*
lin hinge_1_N = variants {mkN "bisagra" ; mkN "dobradiça" ; mkN "Dobradiça" ; mkN "gonzo" ; mkN "joint" ; } ; --*
lin hinge_on_V2 = variants {mkV2 (mkV "depender") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin hinge_upon_V2 = variants {mkV2 (mkV "depender") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin hinge_V2 = mkV2 (mkV "prender") ; --*
lin hinge_V = mkV "prender" ; --*
lin hinny_N = variants {mkN "bardoto" ; mkN "Bardoto" ; mkN "mula" ; } ; --*
lin hint_2_N = variants {mkN "dica" ; mkN "indício" ; } ; --*
lin hint_3_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin hint_4_N = variants {mkN "sinal" ; mkN "sombra" ; mkN "traço" ; mkN "vestígio" ; } ; --*
lin hint_5_N = variants {mkN "indicação" ; mkN "information" ; } ; --*
lin hinterland_N = variants {mkN "country" ; mkN "hinterlândia" ; } ; --*
lin hint_V2 = variants {mkV2 (mkV "aludir") ; mkV2 (mkV "dar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "reportar-se") ; mkV2 (mkV "sugerir") ; } ; --*
lin hint_V = variants {mkV "aludir" ; mkV "dar" ; mkV "fazer" ; mkV "reportar-se" ; mkV "sugerir" ; } ; --*
lin hint_VS = variants {mkVS (mkV "aludir") ; mkVS (mkV "dar") ; mkVS (mkV "fazer") ; mkVS (mkV "reportar-se") ; mkVS (mkV "sugerir") ; } ; --*
lin hip_1_N = variants {mkN "anca" ; mkN "quadril" ; } ; --*
lin hip_2_N = variants {mkN "alguidar" ; mkN "arch" ; mkN "bacia" ; mkN "girdle" ; mkN "pélvis" ; mkN "tijela" ; } ; --*
lin hip_3_N = variants {mkN "coxae" ; mkN "joint" ; mkN "quadril" ; } ; --*
lin hippie_N = variants {mkN "child" ; mkN "hippie" ; mkN "Movimento" ; } ; --*
lin hippo_1_N = variants {mkN "Hipona" ; mkN "Regius" ; } ; --*
lin hippo_2_N = variants {mkN "amphibius" ; mkN "hipopótamo" ; mkN "Hipopótamo-comum" ; mkN "horse" ; } ; --*
lin hippocampus_1_N = mkN "hipocampo" ; --*
lin hippocampus_2_N = variants {mkN "cavalo" ; mkN "cavalo-marinho" ; mkN "Hippocampus" ; } ; --*
lin hippodrome_N = mkN "hipódromo" ; --*
lin hippopotamus_N = variants {mkN "amphibius" ; mkN "hipopótamo" ; mkN "Hipopótamo-comum" ; mkN "horse" ; } ; --*
lin hippy_N = variants {mkN "child" ; mkN "hippie" ; mkN "Movimento" ; } ; --*
lin hire_1_V2 = variants {mkV2 (mkV "assalariar") ; mkV2 (mkV "contratar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "tomar") ; } ; --*
lin hire_2_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin hire_3_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin hireling_N = mkN "mercenário" ; --*
lin hiroshima_PN = mkPN "Hiroshima" ; --*
lin hirsute_A = variants {mkA "peluda" ; mkA "peludo" ; } ; --*
lin hirsuteness_N = mkN "hirsutismo" ; --*
lin hispanic_A = mkA "hispano" ; --*
lin hiss_1_N = mkN "silvo" ; --*
lin hiss_1_V = variants {mkV "assobiar" ; mkV "chiar" ; } ; --*
lin hiss_3_V2 = mkV2 (mkV "sibilar") ; --*
lin hiss_4_V = mkV "vaiar" ; --*
lin histamine_N = mkN "histamina" ; --*
lin histidine_N = mkN "Histidina" ; --*
lin histiocyte_N = mkN "Histiócito" ; --*
lin histocompatibility_N = mkN "histocompatibilidade" ; --*
lin histogram_N = mkN "histograma" ; --*
lin histological_1_A = mkA "histológico" ; --*
lin histologist_N = mkN "histologista" ; --*
lin histology_N = variants {mkN "histologia" ; mkN "Histologia" ; } ; --*
lin histone_N = mkN "histona" ; --*
lin historian_N = variants {mkN "cronista" ; mkN "historiador" ; } ; --*
lin historic_1_A = mkA "histórico" ; --*
lin historic_2_A = mkA "histórico" ; --*
lin historical_1_A = mkA "histórico" ; --*
lin historical_2_A = mkA "histórico" ; --*
lin historical_3_A = mkA "histórico" ; --*
lin historical_4_A = variants {mkA "diacrónico" ; mkA "diacrônico" ; } ; --*
lin historiography_2_N = variants {mkN "historiografia" ; mkN "Livros" ; } ; --*
lin history_1_N = variants {mkN "história" ; mkN "histórico" ; } ; --*
lin history_2_N = variants {mkN "crónica" ; mkN "crônica" ; } ; --*
lin history_3_N = variants {mkN "Historia" ; mkN "história" ; mkN "História" ; } ; --*
lin history_4_N = mkN "história" ; --*
lin history_5_N = variants {mkN "história" ; mkN "histórico" ; } ; --*
lin hit_10_V2 = mkV2 (mkV "atacar") ; --*
lin hit_10_V = mkV "atacar" ; --*
lin hit_11_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin hit_12_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "desferir") ; } ; --*
lin hit_14_V2 = mkV2 (mkV "tocar") ; --*
lin hit_15_V2 = mkV2 (mkV "atingir") ; --*
lin hit_15_V = mkV "atingir" ; --*
lin hit_1_N = variants {mkN "batida" ; mkN "jogada" ; mkN "rebatida" ; } ; --*
lin hit_1_V2 = mkV2 (mkV "bater") ; --*
lin hit_2_N = variants {mkN "batida" ; mkN "contato" ; } ; --*
lin hit_2_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "bater") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "with") ; } ; --*
lin hit_3_N = variants {mkN "estrondo" ; mkN "sensação" ; mkN "sucesso" ; } ; --*
lin hit_3_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "golpear") ; } ; --*
lin hit_4_N = mkN "colisão" ; --*
lin hit_4_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "chegar") ; } ; --*
lin hit_5_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "atacar") ; mkV2 (mkV "atingir") ; } ; --*
lin hit_6_V2 = mkV2 (mkV "atirar") ; --*
lin hit_7_N = mkN "conexão" ; --*
lin hit_7_V = variants {mkV "encontrar" ; mkV "topar" ; } ; --*
lin hit_9_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin hitch_1_V2 = mkV2 (mkV "prender") ; --*
lin hitch_2_V = variants {mkV "coxear" ; mkV "mancar" ; } ; --*
lin hitch_3_N = mkN "obstáculo" ; --*
lin hitch_3_V = mkV "pinotear" ; --*
lin hitch_4_V2 = mkV2 (mkV "pedir") ; --*
lin hitch_4_V = mkV "pedir" ; --*
lin hitch_6_N = mkN "obstáculo" ; --*
lin hitchhiker_N = variants {mkN "carona" ; mkN "caroneiro" ; } ; --*
lin hitchhike_V = mkV "pedir" ; --*
lin hither_Adv = mkAdv "aqui" ; --*
lin hitherto_Adv = variants {mkAdv "ainda" ; mkAdv "até" ; mkAdv "far" ; mkAdv "now" ; mkAdv "to" ; mkAdv "yet" ; } ; --*
lin hit_on_V2 = mkV2 (mkV "cantar") ; --*
lin hitter_1_N = mkN "batedor" ; --*
lin hive_2_N = variants {mkN "colméia" ; mkN "cortiço" ; } ; --*
lin hive_3_N = variants {mkN "alvéolo" ; mkN "colméia" ; } ; --*
lin hm_PN = variants {mkPN "hectômetro" ; mkPN "Hectômetro" ; } ; --*
lin hoard_2_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin hoarding_N = mkN "outdoor" ; --*
lin hoard_N = mkN "provisão" ; --*
lin hoarfrost_N = mkN "geada" ; --*
lin hoarse_A = variants {mkA "rouca" ; mkA "rouco" ; mkA "rouquenho" ; } ; --*
lin hoarseness_N = mkN "rouquidão" ; --*
lin hoax_N = variants {mkN "fraude" ; mkN "hoax" ; mkN "trote" ; } ; --*
lin hoax_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "burlar") ; mkV2 (mkV "someone's") ; } ; --*
lin hob_1_N = variants {mkN "assombração" ; mkN "duende" ; mkN "hobgoblin" ; } ; --*
lin hob_2_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin hobbit_N = mkN "hobbit" ; --*
lin hobble_1_N = variants {mkN "ferros" ; mkN "grilhão" ; mkN "grilhetas" ; mkN "grilhões" ; mkN "peia" ; } ; --*
lin hobble_V = variants {mkV "coxear" ; mkV "mancar" ; } ; --*
lin hobby_1_N = variants {mkN "activity" ; mkN "hobby" ; mkN "passatempo" ; mkN "Passa-tempo" ; mkN "Passatempos" ; } ; --*
lin hobby_2_N = variants {mkN "cavalo" ; mkN "horse" ; } ; --*
lin hobbyhorse_2_N = variants {mkN "cavalo" ; mkN "horse" ; } ; --*
lin hobgoblin_1_N = variants {mkN "assombração" ; mkN "duende" ; mkN "hobgoblin" ; } ; --*
lin hobo_1_N = variants {mkN "vagabunda" ; mkN "vagabundo" ; } ; --*
lin hock_1_V2 = mkV2 (mkV "empenhar") ; --*
lin hockey_1_N = variants {mkN "hockey" ; mkN "Hoquei" ; mkN "hóquei" ; } ; --*
lin hockey_2_N = variants {mkN "game" ; mkN "hockey" ; mkN "hóquei" ; } ; --*
lin hocus_pocus_N = variants {mkN "artifício" ; mkN "artimanha" ; mkN "panky" ; mkN "subterfúgio" ; } ; --*
lin hodgepodge_1_N = variants {mkN "and" ; mkN "gororoba" ; mkN "miscelânea" ; mkN "mistura" ; mkN "mistureba" ; } ; --*
lin hoe_N = mkN "enxada" ; --*
lin hog_1_N = mkN "porco" ; --*
lin hog_3_N = variants {mkN "porco" ; mkN "scrofa" ; mkN "suíno" ; mkN "Sus" ; } ; --*
lin hogan_1_N = variants {mkN "Ben" ; mkN "Benjamin" ; mkN "Hogan" ; } ; --*
lin hoist_1_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "erguer") ; mkV2 (mkV "içar") ; mkV2 (mkV "levantar") ; } ; --*
lin hoist_2_V2 = variants {mkV2 (mkV "erguer") ; mkV2 (mkV "levantar") ; } ; --*
lin hoist_3_V2 = variants {mkV2 (mkV "erguer") ; mkV2 (mkV "up") ; } ; --*
lin hoist_N = mkN "elevador" ; --*
lin hold_10_V2 = variants {mkV2 (mkV "segurar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; mkV2 (mkV "up") ; } ; --*
lin hold_11_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "compreender") ; mkV2 (mkV "conter") ; mkV2 (mkV "incluir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "segurar") ; mkV2 (mkV "ter") ; } ; --*
lin hold_12_V2 = mkV2 (mkV "acomodar") ; --*
lin hold_13_V = variants {mkV "contar" ; mkV "valer" ; } ; --*
lin hold_15_V = variants {mkV "obter" ; mkV "prevalecer" ; mkV "primar" ; } ; --*
lin hold_16_VS = mkVS (mkV "afirmar") ; --*
lin hold_17_V2 = mkV2 (mkV "ter") ; --*
lin hold_18_V2 = mkV2 (mkV "conter") ; --*
lin hold_19_V2 = variants {mkV2 (mkV "inscrever-se") ; mkV2 (mkV "pedir") ; mkV2 (mkV "reservar") ; } ; --*
lin hold_1_V2 = variants {mkV2 (mkV "conservar") ; mkV2 (mkV "manter") ; mkV2 (mkV "reter") ; } ; --*
lin hold_20_V2 = mkV2 (mkV "defender") ; --*
lin hold_21_V2 = variants {mkV2 (mkV "obrigar") ; mkV2 (mkV "prender") ; mkV2 (mkV "vincular") ; } ; --*
lin hold_22_V2 = mkV2 (mkV "manter") ; --*
lin hold_23_V = mkV "manter" ; --*
lin hold_24_V = variants {mkV "afrontar" ; mkV "aguentar" ; mkV "arrostar" ; mkV "fazer" ; mkV "relutar" ; mkV "up" ; } ; --*
lin hold_27_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "limitar") ; mkV2 (mkV "refrear") ; } ; --*
lin hold_2_N = mkN "compreensão" ; --*
lin hold_2_V2 = variants {mkV2 (mkV "hold") ; mkV2 (mkV "segurar") ; } ; --*
lin hold_30_V2 = variants {mkV2 (mkV "demorar-se") ; mkV2 (mkV "deter-se") ; mkV2 (mkV "parar") ; } ; --*
lin hold_32_V2 = mkV2 (mkV "beber") ; --*
lin hold_33_V2 = mkV2 (mkV "manter") ; --*
lin hold_34_VS = variants {mkVS (mkV "declarar") ; mkVS (mkV "julgar") ; } ; --*
lin hold_35_V = variants {mkV "acordar" ; mkV "concordar" ; } ; --*
lin hold_36_V2 = variants {mkV2 (mkV "prender") ; mkV2 (mkV "segurar") ; } ; --*
lin hold_4_N = variants {mkN "adiamento" ; mkN "demora" ; mkN "lag" ; mkN "pausa" ; } ; --*
lin hold_4_V2 = variants {mkV2 (mkV "got") ; mkV2 (mkV "ter") ; } ; --*
lin hold_5_N = variants {mkN "custódia" ; mkN "detenção" ; } ; --*
lin hold_5_V2 = variants {mkV2 (mkV "as") ; mkV2 (mkV "considerar") ; mkV2 (mkV "for") ; mkV2 (mkV "julgar") ; } ; --*
lin hold_6_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "sustentar") ; } ; --*
lin hold_7_V2 = variants {mkV2 (mkV "confinar") ; mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; mkV2 (mkV "reter") ; } ; --*
lin hold_8_N = variants {mkN "alça" ; mkN "cabo" ; mkN "taramela" ; mkN "trinco" ; } ; --*
lin hold_8_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reter") ; } ; --*
lin hold_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "resistir") ; } ; --*
lin hold_back_3_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; } ; --*
lin hold_back_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reter") ; } ; --*
lin hold_back_5_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "esconder") ; mkV2 (mkV "in") ; } ; --*
lin hold_back_6_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "coibir") ; mkV2 (mkV "conter") ; mkV2 (mkV "deter") ; mkV2 (mkV "entravar") ; } ; --*
lin holder_1_N = mkN "manchete" ; --*
lin holder_2_N = mkN "detentor" ; --*
lin holder_3_N = mkN "detentor" ; --*
lin hold_for_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "for") ; mkV2 (mkV "valer") ; } ; --*
lin holding_1_N = mkN "retenção" ; --*
lin holding_2_N = variants {mkN "possessão" ; mkN "propriedade" ; mkN "Propriedade" ; } ; --*
lin hold_off_2_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; } ; --*
lin hold_on_1_V = variants {mkV "agarrar" ; mkV "on" ; mkV "pegar" ; } ; --*
lin hold_on_2_V = variants {mkV "esperar" ; mkV "on" ; } ; --*
lin hold_on_3_V = variants {mkV "in" ; mkV "on" ; mkV "perseverar" ; mkV "persistir" ; } ; --*
lin hold_on_5_V = variants {mkV "guardar" ; mkV "manter" ; mkV "on" ; mkV "reter" ; } ; --*
lin hold_out_2_V2 = variants {mkV2 (mkV "firm") ; mkV2 (mkV "out") ; mkV2 (mkV "resistir") ; } ; --*
lin hold_out_2_V = variants {mkV "firm" ; mkV "out" ; mkV "resistir" ; } ; --*
lin hold_out_3_V = variants {mkV "out" ; mkV "resistir" ; mkV "usar" ; } ; --*
lin hold_out_5_V = variants {mkV "on" ; mkV "out" ; mkV "perseverar" ; mkV "resistir" ; mkV "sobreviver" ; mkV "up" ; } ; --*
lin hold_over_1_V2 = mkV2 (mkV "over") ; --*
lin hold_over_5_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin hold_up_1_N = variants {mkN "assalto" ; mkN "latrocínio" ; mkN "robbery" ; } ; --*
lin hold_up_2_N = variants {mkN "adiar" ; mkN "atraso" ; mkN "retardar" ; } ; --*
lin hold_up_3_V2 = variants {mkV2 (mkV "atrasar") ; mkV2 (mkV "up") ; } ; --*
lin hold_up_5_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "perseverar") ; mkV2 (mkV "resistir") ; mkV2 (mkV "sobreviver") ; mkV2 (mkV "up") ; } ; --*
lin hold_V2A = mkV2A (mkV "portar") ; --*
lin hole_1_N = mkN "buraco" ; --*
lin hole_1_V2 = variants {mkV2 (mkV "emburacar") ; mkV2 (mkV "out") ; } ; --*
lin hole_1_V = variants {mkV "emburacar" ; mkV "out" ; } ; --*
lin hole_2_N = mkN "buraco" ; --*
lin hole_2_V2 = variants {mkV2 (mkV "esburacar") ; mkV2 (mkV "furar") ; } ; --*
lin hole_2_V = variants {mkV "esburacar" ; mkV "furar" ; } ; --*
lin hole_4_N = mkN "buraco" ; --*
lin hole_5_N = variants {mkN "buraco" ; mkN "oco" ; } ; --*
lin hole_7_N = variants {mkN "dificuldade" ; mkN "merda" ; mkN "of" ; mkN "problema" ; } ; --*
lin hole_8_N = variants {mkN "boca" ; mkN "goela" ; } ; --*
lin hole_and_corner_2_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin hole_up_3_V = variants {mkV "hibernar" ; mkV "up" ; } ; --*
lin holey_A = variants {mkA "furado" ; mkA "poroso" ; } ; --*
lin holiday_1_N = variants {mkN "dia" ; mkN "feria" ; mkN "féria" ; mkN "férias" ; mkN "sueto" ; } ; --*
lin holiday_2_N = variants {mkN "efeméride" ; mkN "Efeméride" ; mkN "feriado" ; } ; --*
lin holiday_maker_N = mkN "turista" ; --*
lin holiday_V = mkV "tirar" ; --*
lin holiness_N = mkN "santidade" ; --*
lin holism_N = variants {mkN "holismo" ; mkN "theory" ; } ; --*
lin holistic_A = mkA "holístico" ; --*
lin hollander_N = variants {mkN "holandês" ; mkN "Holandês" ; mkN "neerlandês" ; } ; --*
lin holland_PN = variants {mkPN "Holanda" ; mkPN "Holando" ; mkPN "Neerlândia" ; mkPN "Netherlands" ; mkPN "of" ; mkPN "Países" ; } ; --*
lin holler_1_V2 = variants {mkV2 (mkV "gritar") ; mkV2 (mkV "out") ; } ; --*
lin holler_2_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin holler_3_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin holloa_1_N = mkN "urro" ; --*
lin hollow_1_A = variants {mkA "oco" ; mkA "vazio" ; } ; --*
lin hollow_1_V2 = mkV2 (mkV "escavar") ; --*
lin hollow_2_V2 = variants {mkV2 (mkV "escavar") ; mkV2 (mkV "out") ; } ; --*
lin hollow_3_N = variants {mkN "buraco" ; mkN "oco" ; } ; --*
lin hollowness_3_N = mkN "falsidade" ; --*
lin holly_1_N = variants {mkN "azevim" ; mkN "azevinho" ; } ; --*
lin holly_2_N = variants {mkN "Buddy" ; mkN "Hardin" ; mkN "Holly" ; } ; --*
lin hollywood_3_PN = mkPN "Hollywood" ; --*
lin holmium_N = variants {mkN "Holmio" ; mkN "hólmio" ; mkN "number" ; } ; --*
lin holm_oak_1_N = mkN "oak" ; --*
lin holm_oak_2_N = variants {mkN "ilex" ; mkN "oak" ; mkN "tree" ; } ; --*
lin holocaust_2_N = variants {mkN "Holocausto" ; mkN "solution" ; } ; --*
lin hologram_N = mkN "holograma" ; --*
lin holograph_1_N = variants {mkN "manuscrito" ; mkN "Manuscritos" ; } ; --*
lin holograph_2_N = mkN "holograma" ; --*
lin holography_N = mkN "holografia" ; --*
lin holometabolism_N = mkN "holometabolismo" ; --*
lin holster_1_N = mkN "coldre" ; --*
lin holy_1_A = variants {mkA "sagrada" ; mkA "sagrado" ; mkA "santa" ; mkA "santo" ; } ; --*
lin holy_2_A = variants {mkA "sagrada" ; mkA "sagrado" ; mkA "santa" ; mkA "santo" ; } ; --*
lin holy_N = variants {mkN "place" ; mkN "santuário" ; } ; --*
lin homage_N = variants {mkN "homenagem" ; mkN "preito" ; } ; --*
lin home_1_A = mkA "natal" ; --*
lin home_1_N = variants {mkN "casa" ; mkN "lar" ; } ; --*
lin home_2_A = mkA "nacional" ; --*
lin home_2_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "habitação" ; mkN "house" ; mkN "lar" ; mkN "morada" ; mkN "moradia" ; mkN "residência" ; } ; --*
lin home_5_N = mkN "base" ; --*
lin home_6_N = variants {mkN "casa" ; mkN "lar" ; } ; --*
lin home_7_N = variants {mkN "casa" ; mkN "lar" ; } ; --*
lin home_8_N = variants {mkN "casa" ; mkN "família" ; mkN "lar" ; } ; --*
lin home_9_N = variants {mkN "casa" ; mkN "home" ; } ; --*
lin homebuilder_1_N = mkN "empreiteiro" ; --*
lin homecoming_2_N = variants {mkN "regresso" ; mkN "retorno" ; mkN "vinda" ; mkN "volta" ; } ; --*
lin homeland_N = variants {mkN "country" ; mkN "land" ; mkN "of" ; mkN "pátria" ; } ; --*
lin homeless_1_A = mkA "desnacionalizado" ; --*
lin homeless_2_A = variants {mkA "mendiga" ; mkA "mendigo" ; mkA "sem-abrigo" ; mkA "sem-teto" ; } ; --*
lin homelessness_N = variants {mkN "Sem" ; mkN "sem-teto" ; } ; --*
lin home_made_A = variants {mkA "caseiro" ; mkA "feito" ; } ; --*
lin homeobox_N = variants {mkN "gene" ; mkN "homeobox" ; } ; --*
lin homeopathic_A = mkA "homeopático" ; --*
lin homeopath_N = mkN "homeopata" ; --*
lin homeopathy_N = mkN "homeopatia" ; --*
lin homeostasis_N = variants {mkN "hemostasia" ; mkN "homeostase" ; } ; --*
lin homeostatic_1_A = mkA "homeostático" ; --*
lin homepage_N = variants {mkN "homepage" ; mkN "page" ; } ; --*
lin homer_1_N = variants {mkN "Homerun" ; mkN "run" ; } ; --*
lin homer_2_N = mkN "Homero" ; --*
lin homer_4_N = variants {mkN "Homer" ; mkN "Winslow" ; } ; --*
lin homer_5_N = variants {mkN "pigeon" ; mkN "pombo-correio" ; } ; --*
lin homesickness_N = variants {mkN "anelo" ; mkN "saudade" ; mkN "saudades" ; } ; --*
lin homestead_2_N = mkN "casario" ; --*
lin homework_N = variants {mkN "dever" ; mkN "lição" ; mkN "tarefa" ; mkN "trabalho" ; } ; --*
lin homicide_N = mkN "homicídio" ; --*
lin homiletic_1_A = mkA "homilético" ; --*
lin homiletics_2_N = mkN "Homilética" ; --*
lin homily_N = mkN "homilia" ; --*
lin hominid_N = mkN "hominídeo" ; --*
lin homo_1_N = variants {mkN "bicha" ; mkN "gay" ; mkN "homo" ; mkN "homossexual" ; mkN "lésbica" ; mkN "sapatão" ; mkN "veado" ; } ; --*
lin homo_2_N = variants {mkN "being" ; mkN "homem" ; mkN "hominídeo" ; mkN "ser" ; } ; --*
lin homoeopath_N = mkN "homeopata" ; --*
lin homoeopathy_N = mkN "homeopatia" ; --*
lin homogeneity_1_N = mkN "homogeneidade" ; --*
lin homogeneous_1_A = variants {mkA "homogênea" ; mkA "homogéneo" ; mkA "homogêneo" ; } ; --*
lin homogenization_1_N = mkN "homogenização" ; --*
lin homogenize_1_V2 = mkV2 (mkV "homogenizar") ; --*
lin homogeny_N = mkN "homogeneidade" ; --*
lin homograph_N = variants {mkN "homógrafo" ; mkN "Homógrafo" ; } ; --*
lin homoiothermic_1_A = mkA "homeotérmico" ; --*
lin homology_N = mkN "homologia" ; --*
lin homomorphism_N = mkN "homomorfismo" ; --*
lin homonymic_A = mkA "homónimo" ; --*
lin homonym_N = variants {mkN "homónimo" ; mkN "Homónimo" ; mkN "Homônimo" ; } ; --*
lin homonymy_N = mkN "homonímia" ; --*
lin homophobia_N = variants {mkN "homofobia" ; mkN "Homofobia" ; } ; --*
lin homophobic_A = mkA "homofóbico" ; --*
lin homophony_2_N = mkN "homofonia" ; --*
lin homo_sapiens_N = mkN "sapiens" ; --*
lin homosexual_A = variants {mkA "gay" ; mkA "homo" ; mkA "homossexual" ; } ; --*
lin homosexuality_N = mkN "homossexualidade" ; --*
lin homosexual_N = variants {mkN "bicha" ; mkN "gay" ; mkN "homo" ; mkN "homossexual" ; mkN "lésbica" ; mkN "sapatão" ; mkN "veado" ; } ; --*
lin homozygote_N = mkN "homozigoto" ; --*
lin honduran_A = mkA "hondurenho" ; --*
lin honduras_PN = variants {mkPN "Honduras" ; mkPN "of" ; } ; --*
lin hone_2_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "perfazer") ; } ; --*
lin honest_1_A = variants {mkA "honesta" ; mkA "honesto" ; mkA "sincera" ; mkA "sincero" ; } ; --*
lin honest_2_A = mkA "honesto" ; --*
lin honest_3_A = variants {mkA "confiável" ; mkA "digno" ; mkA "fiável" ; } ; --*
lin honesty_1_N = variants {mkN "honestidade" ; mkN "Honestidade" ; } ; --*
lin honey_1_N = variants {mkN "Méis" ; mkN "mel" ; } ; --*
lin honey_2_N = variants {mkN "amante" ; mkN "amor" ; } ; --*
lin honeybee_N = variants {mkN "abelha" ; mkN "mellifera" ; } ; --*
lin honeycomb_1_N = mkN "favo" ; --*
lin honeycomb_2_N = mkN "favo" ; --*
lin honeymoon_1_N = variants {mkN "lua" ; mkN "lua-de-mel" ; } ; --*
lin honeymoon_2_N = variants {mkN "lua" ; mkN "lua-de-mel" ; } ; --*
lin honeysuckle_1_N = mkN "madressilva" ; --*
lin hong_kong_PN = mkPN "Kong" ; --*
lin honk_1_V = mkV "buzinar" ; --*
lin honk_2_V = mkV "buzinar" ; --*
lin honk_3_V = variants {mkV "grasnar" ; mkV "grasnir" ; } ; --*
lin honk_4_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin honker_2_N = variants {mkN "bocal" ; mkN "focinho" ; } ; --*
lin honker_3_N = variants {mkN "canadensis" ; mkN "ganso-do-canadá" ; mkN "goose" ; } ; --*
lin honk_N = mkN "grasno" ; --*
lin honorary_A = mkA "honorário" ; --*
lin honorific_A = mkA "honorífico" ; --*
lin honour_1_N = mkN "honra" ; --*
lin honour_1_V2 = variants {mkV2 (mkV "honrar") ; mkV2 (mkV "prestigiar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin honour_2_N = variants {mkN "galardão" ; mkN "prémio" ; mkN "Prémio" ; mkN "prêmio" ; mkN "Prêmios" ; } ; --*
lin honour_2_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "homenagear") ; mkV2 (mkV "honrar") ; mkV2 (mkV "prestigiar") ; mkV2 (mkV "respeitar") ; } ; --*
lin honour_3_N = mkN "honra" ; --*
lin honour_3_V2 = mkV2 (mkV "aceitar") ; --*
lin honourable_1_A = mkA "honrado" ; --*
lin honourable_3_A = variants {mkA "honesta" ; mkA "honesto" ; mkA "sincera" ; mkA "sincero" ; } ; --*
lin honourable_4_A = variants {mkA "estimável" ; mkA "respeitável" ; } ; --*
lin honourableness_1_N = mkN "honestidade" ; --*
lin hood_1_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin hood_4_N = variants {mkN "hood" ; mkN "Parasol" ; mkN "Pára-sol" ; } ; --*
lin hood_6_N = variants {mkN "coifa" ; mkN "hood" ; } ; --*
lin hood_8_N = variants {mkN "capucha" ; mkN "capuz" ; } ; --*
lin hood_9_N = variants {mkN "capô" ; mkN "capuz" ; mkN "coberta" ; } ; --*
lin hoodlum_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin hoodoo_3_N = mkN "fetiche" ; --*
lin hoodwink_2_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "enganar") ; mkV2 (mkV "false") ; mkV2 (mkV "the") ; } ; --*
lin hoof_1_N = variants {mkN "casco" ; mkN "Casco" ; mkN "pata" ; mkN "pezunho" ; } ; --*
lin hook_12_V = mkV "abordar" ; --*
lin hook_1_V2 = variants {mkV2 (mkV "enganchar") ; mkV2 (mkV "pendurar") ; } ; --*
lin hook_1_V = variants {mkV "enganchar" ; mkV "pendurar" ; } ; --*
lin hook_2_N = variants {mkN "gancho" ; mkN "volta" ; } ; --*
lin hook_2_V2 = mkV2 (mkV "roubar") ; --*
lin hook_2_V = mkV "roubar" ; --*
lin hook_3_N = variants {mkN "adoçante" ; mkN "chamariz" ; mkN "engodo" ; } ; --*
lin hook_5_N = mkN "gancho" ; --*
lin hook_5_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "roubar") ; } ; --*
lin hook_6_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin hook_6_V = variants {mkV "afanar" ; mkV "furtar" ; mkV "larapiar" ; mkV "roubar" ; mkV "surrupiar" ; } ; --*
lin hook_9_V2 = variants {mkV2 (mkV "fisgar") ; mkV2 (mkV "viciar") ; } ; --*
lin hook_9_V = variants {mkV "fisgar" ; mkV "viciar" ; } ; --*
lin hookah_N = variants {mkN "Narguile" ; mkN "narguilé" ; mkN "pipe" ; } ; --*
lin hooker_2_N = variants {mkN "Hooker" ; mkN "Richard" ; } ; --*
lin hooker_3_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin hook_up_1_N = mkN "acoplamento" ; --*
lin hookworm_1_N = mkN "Ancilostomíase" ; --*
lin hooky_N = variants {mkN "Absenteísmo" ; mkN "absentismo" ; } ; --*
lin hooliganism_N = variants {mkN "mischief" ; mkN "vandalismo" ; mkN "Vandalismo" ; } ; --*
lin hooligan_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin hoop_1_N = mkN "aro" ; --*
lin hoop_2_N = mkN "arco" ; --*
lin hoop_4_N = variants {mkN "aro" ; mkN "hoop" ; } ; --*
lin hoop_la_N = variants {mkN "falatório" ; mkN "modismo" ; mkN "tititi" ; } ; --*
lin hoopoe_1_N = variants {mkN "boubela" ; mkN "poupa" ; } ; --*
lin hoot_1_V = mkV "uivar" ; --*
lin hoot_3_N = variants {mkN "cent" ; mkN "dam" ; mkN "damn" ; mkN "droga" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin hooter_1_N = variants {mkN "bocal" ; mkN "focinho" ; } ; --*
lin hooter_2_N = variants {mkN "buzina" ; mkN "horn" ; } ; --*
lin hooter_3_N = variants {mkN "bufo" ; mkN "coruja" ; mkN "corujão" ; mkN "Corujas" ; mkN "mocho" ; mkN "of" ; } ; --*
lin hoover_2_N = variants {mkN "Edgar" ; mkN "John" ; } ; --*
lin hoover_3_N = variants {mkN "Clark" ; mkN "Herbert" ; mkN "Hoover" ; } ; --*
lin hop_1_N = variants {mkN "lúpulo" ; mkN "pulo" ; mkN "salto" ; } ; --*
lin hop_1_V2 = variants {mkV2 (mkV "pular") ; mkV2 (mkV "saltar") ; mkV2 (mkV "saltitar") ; } ; --*
lin hop_1_V = variants {mkV "pular" ; mkV "saltar" ; mkV "saltitar" ; } ; --*
lin hop_2_N = mkN "lúpulo" ; --*
lin hop_6_V2 = variants {mkV2 (mkV "pulicar") ; mkV2 (mkV "pulinhar") ; } ; --*
lin hop_6_V = variants {mkV "pulicar" ; mkV "pulinhar" ; } ; --*
lin hope_1_N = mkN "esperança" ; --*
lin hope_1_VS = variants {mkVS (mkV "desejar") ; mkVS (mkV "esperançar") ; mkVS (mkV "esperar") ; mkVS (mkV "pretender") ; mkVS (mkV "querer") ; } ; --*
lin hope_2_N = mkN "esperança" ; --*
lin hope_2_VS = variants {mkVS (mkV "aguardar") ; mkVS (mkV "esperançar") ; mkVS (mkV "esperar") ; } ; --*
lin hope_3_N = mkN "esperança" ; --*
lin hope_4_N = mkN "esperança" ; --*
lin hopefulness_1_N = mkN "esperança" ; --*
lin hopeless_1_A = variants {mkA "desesperado" ; mkA "falta" ; } ; --*
lin hopeless_3_A = mkA "desesperado" ; --*
lin hope_PN = variants {mkPN "Bob" ; mkPN "Hope" ; mkPN "Townes" ; } ; --*
lin hope_V = variants {mkV "aguardar" ; mkV "esperançar" ; mkV "esperar" ; } ; --*
lin hope_VV = variants {mkVV (mkV "esperar") ; mkVV (mkV "for") ; } ; --*
lin hopped_up_2_A = mkA "grogue" ; --*
lin hopper_4_N = mkN "gafanhoto" ; --*
lin hopscotch_N = variants {mkN "amarelinha" ; mkN "Amarelinha" ; } ; --*
lin horace_PN = variants {mkPN "Horacio" ; mkPN "Horácio" ; } ; --*
lin horde_2_N = mkN "horda" ; --*
lin horde_3_N = variants {mkN "horda" ; mkN "legião" ; mkN "leva" ; mkN "massa" ; mkN "multidão" ; mkN "turba" ; } ; --*
lin horizon_1_N = variants {mkN "horizon" ; mkN "horizonte" ; } ; --*
lin horizon_2_N = variants {mkN "âmbito" ; mkN "horizonte" ; } ; --*
lin horizon_3_N = mkN "horizonte" ; --*
lin horizon_4_N = variants {mkN "horizon" ; mkN "horizonte" ; } ; --*
lin horizontal_A = mkA "horizontal" ; --*
lin horizontality_N = mkN "horizontalidade" ; --*
lin horizontal_N = mkN "Horizontal" ; --*
lin hormonal_A = mkA "hormonal" ; --*
lin hormone_N = variants {mkN "hormona" ; mkN "Hormônios" ; mkN "secretion" ; } ; --*
lin horn_10_N = variants {mkN "horn" ; mkN "trompa" ; } ; --*
lin horn_11_N = variants {mkN "buzina" ; mkN "horn" ; } ; --*
lin horn_2_N = variants {mkN "chifre" ; mkN "corno" ; } ; --*
lin horn_5_N = variants {mkN "berimbau" ; mkN "corneta" ; mkN "harpa" ; mkN "trombeta" ; mkN "trompa" ; mkN "trompete" ; } ; --*
lin horn_6_N = mkN "corno" ; --*
lin hornbeam_N = mkN "carpino" ; --*
lin hornbill_N = mkN "calau" ; --*
lin hornblende_N = mkN "horneblenda" ; --*
lin horned_A = variants {mkA "corneado" ; mkA "ungulado" ; } ; --*
lin hornet_N = variants {mkN "abelha-pedreira" ; mkN "vespão" ; } ; --*
lin hornwort_2_N = mkN "Anthocerotophyta" ; --*
lin horny_1_A = variants {mkA "com" ; mkA "doidão" ; mkA "excitado" ; mkA "on" ; mkA "quente" ; } ; --*
lin horology_N = variants {mkN "Horologia" ; mkN "orologia" ; } ; --*
lin horoscope_1_N = mkN "horóscopo" ; --*
lin horrible_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "horrível" ; } ; --*
lin horrid_1_A = mkA "horrível" ; --*
lin horrid_2_A = mkA "terrível" ; --*
lin horrific_1_A = mkA "terrível" ; --*
lin horrific_2_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin horrify_V2 = mkV2 (mkV "horrorizar") ; --*
lin horror_1_N = variants {mkN "medo" ; mkN "terror" ; } ; --*
lin horror_3_N = variants {mkN "abominação" ; mkN "aversão" ; mkN "repulsa" ; mkN "revulsão" ; } ; --*
lin horse_1_N = variants {mkN "caballus" ; mkN "cavalo" ; mkN "égua" ; mkN "equídeos" ; } ; --*
lin horse_2_N = variants {mkN "cavalo" ; mkN "horse" ; } ; --*
lin horse_3_N = variants {mkN "cavalaria" ; mkN "Cavalaria" ; mkN "cavalry" ; } ; --*
lin horse_5_N = mkN "cavalo" ; --*
lin horse_around_V = variants {mkV "around" ; mkV "brincar" ; } ; --*
lin horseback_1_N = mkN "anca" ; --*
lin horse_chestnut_1_N = variants {mkN "Castanheiro-da-índia" ; mkN "chestnut" ; mkN "hippocastanum" ; } ; --*
lin horseflesh_N = mkN "cavalo" ; --*
lin horsefly_2_N = variants {mkN "fly" ; mkN "moscardo" ; mkN "mutuca" ; mkN "tavão" ; } ; --*
lin horseman_1_N = variants {mkN "ginete" ; mkN "joquei" ; mkN "rider" ; } ; --*
lin horsemanship_N = mkN "equitação" ; --*
lin horsemeat_N = mkN "cavalo" ; --*
lin horsepower_N = variants {mkN "cavalos-força" ; mkN "cavalo-vapor" ; mkN "HP" ; } ; --*
lin horseradish_1_N = variants {mkN "rábanodecavalo" ; mkN "root" ; } ; --*
lin horseradish_2_N = variants {mkN "cole" ; mkN "radish" ; mkN "raiz-forte" ; mkN "rusticana" ; } ; --*
lin horse_sense_N = variants {mkN "bom" ; mkN "sense" ; mkN "senso" ; mkN "wit" ; } ; --*
lin horseshoe_1_N = mkN "ferradura" ; --*
lin horseshoe_2_N = mkN "ferradura" ; --*
lin horst_N = mkN "horst" ; --*
lin horticulture_N = mkN "horticultura" ; --*
lin horticulturist_N = mkN "horticulturista" ; --*
lin hosanna_N = mkN "hosana" ; --*
lin hose_3_N = mkN "mangueira" ; --*
lin hosepipe_N = mkN "mangueira" ; --*
lin hospice_1_N = mkN "estalagem" ; --*
lin hospitable_1_A = variants {mkA "hospitaleira" ; mkA "hospitaleiro" ; } ; --*
lin hospitable_3_A = mkA "hospitaleiro" ; --*
lin hospitableness_N = mkN "hospitalidade" ; --*
lin hospital_1_N = variants {mkN "enfermaria" ; mkN "hospital" ; } ; --*
lin hospital_2_N = mkN "hospital" ; --*
lin hospitality_N = variants {mkN "Hospitalidade" ; mkN "reception" ; } ; --*
lin hospitalization_4_N = variants {mkN "care" ; mkN "hospitalização" ; mkN "internação" ; } ; --*
lin hospitalize_1_V2 = mkV2 (mkV "hospitalizar") ; --*
lin host_10_N = mkN "servidor" ; --*
lin host_1_N = variants {mkN "anfitrião" ; mkN "hospedeiro" ; } ; --*
lin host_3_N = variants {mkN "anfitrião" ; mkN "hospedeiro" ; } ; --*
lin host_4_N = variants {mkN "mediador" ; mkN "of" ; } ; --*
lin host_5_N = variants {mkN "exército" ; mkN "hoste" ; mkN "legião" ; } ; --*
lin host_8_N = mkN "hoteleiro" ; --*
lin hostage_N = mkN "refém" ; --*
lin hostel_1_N = variants {mkN "albergaria" ; mkN "albergue" ; mkN "hospedaria" ; mkN "hotel" ; mkN "pousada" ; } ; --*
lin hostel_2_N = variants {mkN "albergue" ; mkN "hostel" ; mkN "lodging" ; } ; --*
lin hosteller_1_N = variants {mkN "hoteleiro" ; mkN "manager" ; } ; --*
lin hostelry_N = variants {mkN "albergaria" ; mkN "albergue" ; mkN "hospedaria" ; mkN "hotel" ; mkN "pousada" ; } ; --*
lin hostess_1_N = variants {mkN "anfitriã" ; mkN "anfitrião" ; mkN "anfitrioa" ; } ; --*
lin hostess_3_N = variants {mkN "comissária" ; mkN "hospedeira" ; mkN "hostess" ; } ; --*
lin hostile_1_A = mkA "malvado" ; --*
lin hostile_4_A = variants {mkA "hostil" ; mkA "inóspito" ; } ; --*
lin hostility_1_N = variants {mkN "hostilidade" ; mkN "will" ; } ; --*
lin hostility_2_N = variants {mkN "hostilidade" ; mkN "inimizade" ; } ; --*
lin hostility_3_N = variants {mkN "aversão" ; mkN "hostilidade" ; mkN "inimizade" ; mkN "ressentimento" ; mkN "will" ; } ; --*
lin hostility_4_N = variants {mkN "agressão" ; mkN "hostilidade" ; } ; --*
lin host_V2 = variants {mkV2 (mkV "hospedar") ; mkV2 (mkV "receber") ; } ; --*
lin hot_1_A = variants {mkA "forgoso" ; mkA "quente" ; } ; --*
lin hot_3_A = variants {mkA "esquentado" ; mkA "quente" ; } ; --*
lin hotchpotch_1_N = variants {mkN "and" ; mkN "gororoba" ; mkN "miscelânea" ; mkN "mistura" ; mkN "mistureba" ; } ; --*
lin hotdog_2_N = variants {mkN "cachorro-quente" ; mkN "dog" ; mkN "hot" ; } ; --*
lin hotdog_3_N = variants {mkN "cachorro-quente" ; mkN "dog" ; mkN "salsicha" ; } ; --*
lin hotelier_N = variants {mkN "hoteleiro" ; mkN "manager" ; } ; --*
lin hotel_N = mkN "hotel" ; --*
lin hotfoot_V = variants {mkV "along" ; mkV "apressar" ; mkV "correr" ; mkV "on" ; } ; --*
lin hot_headed_1_A = mkA "colérico" ; --*
lin hot_headed_2_A = mkA "tumultuante" ; --*
lin hothouse_N = variants {mkN "estufa" ; mkN "garden" ; mkN "viveiro" ; } ; --*
lin hotness_1_N = variants {mkN "calor" ; mkN "temperature" ; } ; --*
lin hot_tempered_A = mkA "colérico" ; --*
lin hour_1_N = variants {mkN "hora" ; mkN "minutes" ; } ; --*
lin hour_2_N = variants {mkN "hora" ; mkN "of" ; } ; --*
lin hour_3_N = variants {mkN "hora" ; mkN "momento" ; } ; --*
lin hour_4_N = variants {mkN "hora" ; mkN "minuto" ; } ; --*
lin hourglass_N = mkN "ampulheta" ; --*
lin houri_1_N = mkN "huri" ; --*
lin hours_1_N = mkN "horas" ; --*
lin hours_2_N = mkN "horas" ; --*
lin house_10_N = variants {mkN "casa" ; mkN "família" ; mkN "lar" ; } ; --*
lin house_11_N = variants {mkN "casa" ; mkN "teatro" ; } ; --*
lin house_12_N = mkN "casa" ; --*
lin house_1_N = variants {mkN "casa" ; mkN "edifício" ; mkN "habitação" ; mkN "vivenda" ; } ; --*
lin house_2_N = variants {mkN "empresas" ; mkN "firm" ; } ; --*
lin house_2_V2 = variants {mkV2 (mkV "acolher") ; mkV2 (mkV "up") ; } ; --*
lin house_5_N = mkN "assembléia" ; --*
lin house_6_N = mkN "casa" ; --*
lin house_8_N = variants {mkN "house" ; mkN "of" ; mkN "sign" ; mkN "signo" ; } ; --*
lin housecoat_N = variants {mkN "cinta" ; mkN "embrulhador" ; } ; --*
lin housefly_1_N = variants {mkN "domestica" ; mkN "fly" ; mkN "mosca" ; } ; --*
lin household_N = variants {mkN "casa" ; mkN "família" ; mkN "lar" ; } ; --*
lin housemaid_N = variants {mkN "ama" ; mkN "arrumadeira" ; mkN "camareira" ; mkN "criada" ; mkN "empregada" ; } ; --*
lin houseman_N = variants {mkN "estagiária" ; mkN "estagiário" ; mkN "intern" ; mkN "residente" ; } ; --*
lin houseplant_N = mkN "planta" ; --*
lin housetop_N = mkN "telhado" ; --*
lin housewife_N = variants {mkN "dona" ; mkN "dona-de-casa" ; mkN "of" ; } ; --*
lin housework_N = mkN "agregado" ; --*
lin housing_1_N = variants {mkN "abrigo" ; mkN "accommodations" ; mkN "casa" ; } ; --*
lin housing_3_N = mkN "armadilhas" ; --*
lin houston_1_PN = variants {mkPN "Houston" ; mkPN "Texas" ; } ; --*
lin houston_2_PN = variants {mkPN "Houston" ; mkPN "Sam" ; } ; --*
lin hovel_N = variants {mkN "barraco" ; mkN "cabana" ; mkN "casebre" ; mkN "choça" ; mkN "choupana" ; } ; --*
lin hover_1_V = mkV "vacilar" ; --*
lin hover_2_V = mkV "voltear" ; --*
lin hover_4_V = variants {mkV "levitar" ; mkV "pairar" ; } ; --*
lin hovercraft_N = variants {mkN "aerobarco" ; mkN "hovercraft" ; mkN "machine" ; } ; --*
lin howard_2_PN = variants {mkPN "Catarina" ; mkPN "Howard" ; } ; --*
lin however_1_Adv = variants {mkAdv "apesar" ; mkAdv "contudo" ; mkAdv "não" ; mkAdv "por" ; mkAdv "porém" ; mkAdv "se" ; mkAdv "so" ; mkAdv "the" ; } ; --*
lin howitzer_N = variants {mkN "mortar" ; mkN "morteiro" ; mkN "obus" ; } ; --*
lin howl_1_V = variants {mkV "bramir" ; mkV "ulular" ; } ; --*
lin howl_2_N = mkN "uivo" ; --*
lin howl_2_V = variants {mkV "gritar" ; mkV "mugir" ; mkV "vociferar" ; } ; --*
lin howl_3_V = variants {mkV "rugir" ; mkV "uivar" ; } ; --*
lin hoyden_N = mkN "maria-rapaz" ; --*
lin hp_N = variants {mkN "cavalos-força" ; mkN "cavalo-vapor" ; mkN "HP" ; } ; --*
lin hq_N = variants {mkN "headquarters" ; mkN "quartel" ; } ; --*
lin hub_1_N = variants {mkN "cubo" ; mkN "jante" ; } ; --*
lin hubble_bubble_1_N = variants {mkN "Narguile" ; mkN "narguilé" ; mkN "pipe" ; } ; --*
lin hubbub_N = mkN "rusga" ; --*
lin hubby_N = variants {mkN "cônjuge" ; mkN "esposo" ; mkN "homem" ; mkN "man" ; mkN "varão" ; } ; --*
lin hubcap_N = variants {mkN "calota" ; mkN "Calota" ; } ; --*
lin hubris_N = variants {mkN "hubris" ; mkN "Hubris" ; mkN "húbris" ; } ; --*
lin huckleberry_1_N = mkN "mirtilo" ; --*
lin huckleberry_2_N = mkN "mirtilo" ; --*
lin huckleberry_3_N = mkN "mirtilo" ; --*
lin hue_N = variants {mkN "matiz" ; mkN "nuança" ; mkN "tom" ; mkN "tonalidade" ; } ; --*
lin huffy_2_A = variants {mkA "irado" ; mkA "zangado" ; } ; --*
lin hug_1_V2 = variants {mkV2 (mkV "abraçar") ; mkV2 (mkV "acariciar") ; } ; --*
lin hug_2_V2 = mkV2 (mkV "abraçar") ; --*
lin huge_A = variants {mkA "amplo" ; mkA "enorme" ; mkA "extenso" ; mkA "imenso" ; mkA "vasta" ; } ; --*
lin hugely_Adv = variants {mkAdv "enormemente" ; mkAdv "extremamente" ; mkAdv "muitíssimo" ; } ; --*
lin hugger_mugger_2_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin hug_N = mkN "abraço" ; --*
lin huguenot_N = mkN "Huguenote" ; --*
lin huisache_N = variants {mkN "acacia" ; mkN "Acácia-amarela" ; mkN "bush" ; mkN "farnesiana" ; mkN "tree" ; mkN "wattle" ; } ; --*
lin huitre_N = variants {mkN "marisco" ; mkN "ostra" ; } ; --*
lin hula_N = variants {mkN "dancing" ; mkN "Hula" ; } ; --*
lin hulk_1_N = variants {mkN "baleias" ; mkN "cetáceo" ; mkN "gigante" ; } ; --*
lin hull_1_N = mkN "casca" ; --*
lin hull_5_N = mkN "Hull" ; --*
lin hull_6_N = mkN "casco" ; --*
lin hullabaloo_N = mkN "distúrbio" ; --*
lin hull_PN = variants {mkPN "Cordell" ; mkPN "Hull" ; } ; --*
lin hum_1_V2 = variants {mkV2 (mkV "cantarolar") ; mkV2 (mkV "trautear") ; } ; --*
lin hum_3_N = mkN "zumbido" ; --*
lin hum_3_V2 = variants {mkV2 (mkV "zumbir") ; mkV2 (mkV "zunir") ; } ; --*
lin hum_3_V = variants {mkV "zumbir" ; mkV "zunir" ; } ; --*
lin human_1_A = mkA "humano" ; --*
lin human_2_A = mkA "humano" ; --*
lin human_3_A = mkA "humano" ; --*
lin humane_2_A = variants {mkA "humanitário" ; mkA "humano" ; } ; --*
lin humane_3_A = mkA "humano" ; --*
lin humaneness_N = mkN "humanidade" ; --*
lin humanism_1_N = variants {mkN "humanitarianismo" ; mkN "humanitarismo" ; } ; --*
lin humanism_2_N = variants {mkN "humanism" ; mkN "humanismo" ; mkN "Humanismo" ; } ; --*
lin humanist_1_N = mkN "humanista" ; --*
lin humanist_4_A = mkA "humanitário" ; --*
lin humanistic_4_A = mkA "humanitário" ; --*
lin humanitarian_1_A = mkA "humanitário" ; --*
lin humanitarian_2_A = mkA "humanitário" ; --*
lin humanitarianism_N = variants {mkN "humanitarianismo" ; mkN "humanitarismo" ; } ; --*
lin humanities_N = variants {mkN "artes" ; mkN "arts" ; mkN "ciências" ; mkN "discipline" ; } ; --*
lin humanity_2_N = mkN "humanidade" ; --*
lin humanity_3_N = variants {mkN "beings" ; mkN "espécie" ; mkN "homem" ; mkN "humanidade" ; mkN "mundo" ; mkN "povo" ; mkN "race" ; } ; --*
lin humanization_1_N = mkN "humanização" ; --*
lin humanize_V2 = mkV2 (mkV "humanizar") ; --*
lin humankind_N = variants {mkN "beings" ; mkN "espécie" ; mkN "homem" ; mkN "humanidade" ; mkN "mundo" ; mkN "povo" ; mkN "race" ; } ; --*
lin human_N = variants {mkN "being" ; mkN "homem" ; mkN "hominídeo" ; mkN "ser" ; } ; --*
lin humanness_N = mkN "humanidade" ; --*
lin humble_1_A = variants {mkA "humilde" ; mkA "ignoto" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin humble_1_V2 = mkV2 (mkV "fazer") ; --*
lin humble_2_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "humilhar") ; mkV2 (mkV "mortificar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin humble_3_A = mkA "humilde" ; --*
lin humbleness_1_N = mkN "humildade" ; --*
lin humbleness_2_N = mkN "humildade" ; --*
lin humbleness_3_N = mkN "humildade" ; --*
lin humbug_1_N = mkN "mexerico" ; --*
lin humbug_3_N = variants {mkN "fraude" ; mkN "hoax" ; mkN "trote" ; } ; --*
lin humectant_N = mkN "umectante" ; --*
lin humerus_N = mkN "úmero" ; --*
lin humidify_V2 = variants {mkV2 (mkV "hidratar") ; mkV2 (mkV "umidificar") ; } ; --*
lin humidity_N = variants {mkN "humidade" ; mkN "umidade" ; } ; --*
lin humiliate_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "humilhar") ; mkV2 (mkV "mortificar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin humiliation_4_N = mkN "humilhação" ; --*
lin humility_1_N = mkN "humildade" ; --*
lin humility_2_N = mkN "humildade" ; --*
lin humming_1_N = mkN "zumbido" ; --*
lin hummingbird_N = variants {mkN "Beija" ; mkN "beija-flor" ; mkN "colibri" ; mkN "Trochilidae" ; } ; --*
lin hummock_N = variants {mkN "colina" ; mkN "outeiro" ; } ; --*
lin hummus_1_N = mkN "homus" ; --*
lin humoral_A = mkA "humoral" ; --*
lin humorist_N = mkN "humorista" ; --*
lin humorous_1_A = variants {mkA "engraçado" ; mkA "humorístico" ; } ; --*
lin humour_1_N = mkN "humor" ; --*
lin humour_2_N = mkN "humor" ; --*
lin humour_4_N = variants {mkN "body" ; mkN "fluid" ; mkN "Fluidos" ; } ; --*
lin humour_6_N = variants {mkN "humor" ; mkN "Humor" ; mkN "of" ; } ; --*
lin humourist_N = mkN "humorista" ; --*
lin hump_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin humpback_1_N = variants {mkN "cifose" ; mkN "corcunda" ; mkN "giboso" ; } ; --*
lin humpback_2_N = variants {mkN "corcunda" ; mkN "Corcunda" ; } ; --*
lin humpback_3_N = variants {mkN "Baleia" ; mkN "novaeangliae" ; mkN "whale" ; } ; --*
lin hump_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin humus_1_N = variants {mkN "adubos" ; mkN "húmus" ; } ; --*
lin humus_2_N = mkN "homus" ; --*
lin hun_1_N = variants {mkN "huno" ; mkN "Hunos" ; } ; --*
lin hunch_1_N = variants {mkN "intuição" ; mkN "premonição" ; } ; --*
lin hunch_2_N = mkN "palpite" ; --*
lin hunchback_1_N = variants {mkN "cifose" ; mkN "corcunda" ; mkN "giboso" ; } ; --*
lin hunchback_2_N = variants {mkN "corcunda" ; mkN "Corcunda" ; } ; --*
lin hungarian_1_N = variants {mkN "húngara" ; mkN "húngaro" ; } ; --*
lin hungarian_2_N = variants {mkN "húngaro" ; mkN "língua" ; } ; --*
lin hungarian_A = mkA "húngaro" ; --*
lin hungary_PN = variants {mkPN "Hungria" ; mkPN "of" ; } ; --*
lin hunger_1_N = variants {mkN "fome" ; mkN "sede" ; } ; --*
lin hunger_2_N = variants {mkN "fome" ; mkN "sede" ; } ; --*
lin hunger_2_V = variants {mkV "desejar" ; mkV "querer" ; mkV "ter" ; } ; --*
lin hunger_3_V = variants {mkV "estar" ; mkV "morrer" ; mkV "passar" ; } ; --*
lin hungry_1_A = variants {mkA "com" ; mkA "esfomeada" ; mkA "esfomeado" ; mkA "faminto" ; } ; --*
lin hunk_2_N = variants {mkN "fragmento" ; mkN "naco" ; mkN "pedaço" ; } ; --*
lin hunker_down_1_V = variants {mkV "acocorar" ; mkV "acocorar-se" ; mkV "agachar" ; mkV "baixar-se" ; mkV "down" ; mkV "up" ; } ; --*
lin hunt_1_N = variants {mkN "Holman" ; mkN "Hunt" ; mkN "William" ; } ; --*
lin hunt_1_V2 = variants {mkV2 (mkV "caçar") ; mkV2 (mkV "down") ; } ; --*
lin hunt_1_V = variants {mkV "caçar" ; mkV "down" ; } ; --*
lin hunt_3_N = variants {mkN "Henry" ; mkN "Hunt" ; mkN "Leigh" ; } ; --*
lin hunt_6_N = variants {mkN "buscar" ; mkN "procurar" ; } ; --*
lin hunt_7_N = variants {mkN "caça" ; mkN "Caça" ; } ; --*
lin hunt_7_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "montear") ; } ; --*
lin hunt_8_N = mkN "caça" ; --*
lin hunt_down_V2 = variants {mkV2 (mkV "caçar") ; mkV2 (mkV "down") ; } ; --*
lin hunter_1_N = mkN "caçador" ; --*
lin hunter_2_N = mkN "caçador" ; --*
lin hunting_1_N = mkN "caça" ; --*
lin hunting_2_N = variants {mkN "buscar" ; mkN "procurar" ; } ; --*
lin hunting_3_N = variants {mkN "caça" ; mkN "Caça" ; } ; --*
lin huntress_N = mkN "caçadora" ; --*
lin huntsman_N = mkN "caçador" ; --*
lin hurdle_1_N = variants {mkN "barreira" ; mkN "obstáculo" ; } ; --*
lin hurdle_2_N = variants {mkN "barreira" ; mkN "obstáculo" ; } ; --*
lin hurdle_3_N = mkN "salto" ; --*
lin hurdles_N = variants {mkN "Corrida" ; mkN "race" ; } ; --*
lin hurdy_gurdy_N = variants {mkN "gurdy" ; mkN "organ" ; mkN "realejo" ; } ; --*
lin hurl_1_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin hurl_2_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "impulsionar") ; } ; --*
lin hurl_3_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin hurling_N = mkN "Hurling" ; --*
lin hurly_burly_N = variants {mkN "bagunça" ; mkN "burly" ; mkN "comoção" ; mkN "confusão" ; mkN "zona" ; } ; --*
lin hurricane_N = variants {mkN "furacão" ; mkN "furacões" ; mkN "tempestade" ; } ; --*
lin hurried_A = mkA "apressado" ; --*
lin hurry_1_N = mkN "pressa" ; --*
lin hurry_1_V = variants {mkV "acelerar" ; mkV "apressar" ; mkV "despachar-se" ; mkV "passar" ; mkV "rapidly" ; } ; --*
lin hurry_2_N = mkN "pressa" ; --*
lin hurry_2_V = variants {mkV "acelerar" ; mkV "apressar" ; mkV "correr" ; mkV "sharp" ; } ; --*
lin hurry_3_N = mkN "precipitação" ; --*
lin hurry_V2 = variants {mkV2 (mkV "apressar") ; mkV2 (mkV "impacientar") ; mkV2 (mkV "instar") ; mkV2 (mkV "urgir") ; } ; --*
lin hurt_1_N = variants {mkN "dano" ; mkN "ferimentos" ; mkN "inchaço" ; mkN "lesão" ; mkN "mal" ; mkN "traumatismo" ; } ; --*
lin hurt_1_V2 = mkV2 (mkV "doer") ; --*
lin hurt_1_V = mkV "doer" ; --*
lin hurt_2_N = variants {mkN "dor" ; mkN "sofrimento" ; } ; --*
lin hurt_2_V2 = variants {mkV2 (mkV "aleijar") ; mkV2 (mkV "doer") ; mkV2 (mkV "ferir") ; mkV2 (mkV "machucar") ; } ; --*
lin hurt_3_N = variants {mkN "agonia" ; mkN "dor" ; mkN "martírio" ; mkN "tormento" ; mkN "tortura" ; } ; --*
lin hurt_3_V2 = variants {mkV2 (mkV "angustiar") ; mkV2 (mkV "doer") ; mkV2 (mkV "machucar") ; } ; --*
lin hurt_4_N = variants {mkN "detrimento" ; mkN "prejuízo" ; } ; --*
lin hurt_4_V2 = variants {mkV2 (mkV "danificar") ; mkV2 (mkV "machucar") ; mkV2 (mkV "magoar") ; } ; --*
lin hurt_5_N = variants {mkN "danificação" ; mkN "deterioração" ; } ; --*
lin hurt_5_V2 = variants {mkV2 (mkV "magoar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "provocar") ; } ; --*
lin hurt_6_V = variants {mkV "causar" ; mkV "doer" ; } ; --*
lin hurt_7_V2 = variants {mkV2 (mkV "doer") ; mkV2 (mkV "sofrer") ; } ; --*
lin hurt_7_V = variants {mkV "doer" ; mkV "sofrer" ; } ; --*
lin hurtful_2_A = variants {mkA "deletério" ; mkA "injuriante" ; } ; --*
lin hurtle_2_V = variants {mkV "arremessar" ; mkV "impulsionar" ; } ; --*
lin hurtle_3_V = variants {mkV "arremessar" ; mkV "atirar" ; mkV "lançar" ; } ; --*
lin husbandman_N = variants {mkN "agricultor" ; mkN "fazendeiro" ; } ; --*
lin husband_N = variants {mkN "cônjuge" ; mkN "esposo" ; mkN "homem" ; mkN "man" ; mkN "varão" ; } ; --*
lin husbandry_N = variants {mkN "agricultura" ; mkN "cultivo" ; mkN "pecuária" ; } ; --*
lin husband_V2 = variants {mkV2 (mkV "economizar") ; mkV2 (mkV "poupar") ; } ; --*
lin hush_1_V = mkV "calar" ; --*
lin hush_2_V2 = variants {mkV2 (mkV "silenciar") ; mkV2 (mkV "up") ; } ; --*
lin hush_3_V2 = variants {mkV2 (mkV "aquietar") ; mkV2 (mkV "down") ; mkV2 (mkV "quietar") ; } ; --*
lin hush_3_V = variants {mkV "aquietar" ; mkV "down" ; mkV "quietar" ; } ; --*
lin hush_hush_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin hush_N = mkN "calma" ; --*
lin hush_up_1_V2 = variants {mkV2 (mkV "caiar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin hush_up_2_V2 = variants {mkV2 (mkV "silenciar") ; mkV2 (mkV "up") ; } ; --*
lin husk_1_N = mkN "palha" ; --*
lin huskiness_2_N = mkN "rouquidão" ; --*
lin husky_1_A = mkA "musculoso" ; --*
lin husky_2_A = variants {mkA "rouca" ; mkA "rouco" ; mkA "rouquenho" ; } ; --*
lin hussar_N = mkN "hussardo" ; --*
lin hussy_N = variants {mkN "meretriz" ; mkN "prostituta" ; mkN "woman" ; } ; --*
lin hustle_2_N = mkN "freneticidade" ; --*
lin hustle_3_V2 = mkV2 (mkV "muambar") ; --*
lin hustle_3_V = mkV "muambar" ; --*
lin hustler_1_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin hustler_2_N = variants {mkN "dealer" ; mkN "michê" ; } ; --*
lin hut_1_N = variants {mkN "hut" ; mkN "mucambo" ; } ; --*
lin hut_2_N = variants {mkN "barraco" ; mkN "cabana" ; mkN "casebre" ; mkN "choça" ; mkN "choupana" ; } ; --*
lin hutch_2_N = variants {mkN "barraco" ; mkN "cabana" ; mkN "casebre" ; mkN "choça" ; mkN "choupana" ; } ; --*
lin hutment_N = mkN "acampamento" ; --*
lin hyacinth_2_N = mkN "jacinto" ; --*
lin hyaena_N = variants {mkN "hiena" ; mkN "Hienídeo" ; mkN "Hyaenidae" ; } ; --*
lin hybrid_2_N = mkN "híbrido" ; --*
lin hybrid_3_N = variants {mkN "híbrido" ; mkN "mestiço" ; } ; --*
lin hybrid_A = variants {mkA "híbrido" ; mkA "misturado" ; } ; --*
lin hybridization_1_N = variants {mkN "hibridização" ; mkN "miscigenação" ; } ; --*
lin hybridize_1_V = variants {mkV "cruzar" ; mkV "hibridizar" ; } ; --*
lin hybridize_V2 = variants {mkV2 (mkV "cruzar") ; mkV2 (mkV "hibridizar") ; } ; --*
lin hydathode_N = variants {mkN "Hidatódio" ; mkN "pore" ; mkN "stoma" ; } ; --*
lin hyderabad_1_PN = mkPN "Hyderabad" ; --*
lin hyderabad_2_PN = variants {mkPN "Andhra" ; mkPN "Hyderabad" ; } ; --*
lin hydra_1_N = mkN "Hidra" ; --*
lin hydra_2_N = mkN "Hidra" ; --*
lin hydramnios_N = mkN "polihidrâmnio" ; --*
lin hydrangea_N = mkN "hortênsia" ; --*
lin hydrant_1_N = variants {mkN "faucet" ; mkN "tap" ; mkN "torneira" ; } ; --*
lin hydrate_1_V2 = mkV2 (mkV "hidratar") ; --*
lin hydrate_3_V2 = mkV2 (mkV "hidratar") ; --*
lin hydrate_N = mkN "hidrato" ; --*
lin hydration_N = mkN "hidratação" ; --*
lin hydraulic_1_A = variants {mkA "hidráulica" ; mkA "hidráulico" ; } ; --*
lin hydraulic_2_A = variants {mkA "hidráulica" ; mkA "hidráulico" ; } ; --*
lin hydraulics_N = variants {mkN "hidráulica" ; mkN "mechanics" ; } ; --*
lin hydric_A = mkA "hídrico" ; --*
lin hydride_N = variants {mkN "hidreto" ; mkN "Hidretos" ; } ; --*
lin hydrocarbon_N = variants {mkN "hidrocarboneto" ; mkN "hidrocarbonetos" ; mkN "Hidrocarbonetos" ; } ; --*
lin hydrocele_N = mkN "hidrocele" ; --*
lin hydrocephalus_1_N = variants {mkN "hidrocefalia" ; mkN "Hidrocefalia" ; } ; --*
lin hydrochloride_N = mkN "cloridrato" ; --*
lin hydrocortisone_N = variants {mkN "cortisol" ; mkN "hidrocortisona" ; } ; --*
lin hydrodynamic_A = mkA "hidrodinâmico" ; --*
lin hydrodynamics_N = mkN "hidrodinâmica" ; --*
lin hydroelectric_A = variants {mkA "hidrelétrico" ; mkA "hidroelétrico" ; } ; --*
lin hydroelectricity_N = variants {mkN "Energia" ; mkN "usina" ; mkN "Usina" ; } ; --*
lin hydrogenation_N = mkN "hidrogenação" ; --*
lin hydrogen_N = variants {mkN "hidrogénio" ; mkN "hidrogênio" ; mkN "number" ; } ; --*
lin hydrography_N = variants {mkN "hidrografia" ; mkN "Hidrografia" ; } ; --*
lin hydrology_N = variants {mkN "ciências" ; mkN "hidrologia" ; mkN "Hidrologia" ; } ; --*
lin hydrolysis_N = mkN "hidrólise" ; --*
lin hydromel_N = mkN "hidromel" ; --*
lin hydrometer_N = mkN "densímetro" ; --*
lin hydrometry_N = variants {mkN "Gravimetria" ; mkN "hidrometria" ; } ; --*
lin hydronephrosis_N = mkN "Hidronefrose" ; --*
lin hydropathy_N = mkN "hidroterapia" ; --*
lin hydrophilic_A = mkA "hidrossolúvel" ; --*
lin hydrophobia_1_N = mkN "hidrofobia" ; --*
lin hydrophobia_2_N = mkN "hidrofobia" ; --*
lin hydrophobia_3_N = variants {mkN "hidrofobia" ; mkN "raiva" ; } ; --*
lin hydrophobic_A = mkA "Hidrofóbica" ; --*
lin hydroplane_1_N = variants {mkN "hidroavião" ; mkN "Hidroaviões" ; } ; --*
lin hydroponics_N = variants {mkN "farming" ; mkN "hidroponia" ; } ; --*
lin hydrosphere_N = mkN "hidrosfera" ; --*
lin hydrostatic_A = variants {mkA "hidrostática" ; mkA "hidrostático" ; } ; --*
lin hydrostatics_N = mkN "hidrostática" ; --*
lin hydrothorax_N = mkN "hidrotórax" ; --*
lin hydroxide_2_N = variants {mkN "hidróxido" ; mkN "Hidróxidos" ; } ; --*
lin hydroxyl_N = variants {mkN "group" ; mkN "hidroxila" ; mkN "radical" ; } ; --*
lin hyena_N = variants {mkN "hiena" ; mkN "Hienídeo" ; mkN "Hyaenidae" ; } ; --*
lin hygiene_1_N = variants {mkN "higiene" ; mkN "saúde" ; } ; --*
lin hygiene_2_N = variants {mkN "higiene" ; mkN "Higiene" ; mkN "Higiéne" ; mkN "medidas" ; } ; --*
lin hygienic_1_A = mkA "higiênico" ; --*
lin hygrometer_N = variants {mkN "higrómetro" ; mkN "higrômetro" ; } ; --*
lin hymen_1_N = mkN "Himeneu" ; --*
lin hymen_2_N = variants {mkN "hímen" ; mkN "membrane" ; } ; --*
lin hymenal_A = mkA "himenal" ; --*
lin hymenium_N = variants {mkN "himénio" ; mkN "Himênio" ; } ; --*
lin hymn_N = mkN "hino" ; --*
lin hyoid_N = variants {mkN "bone" ; mkN "hioide" ; mkN "hyoideum" ; } ; --*
lin hypallage_N = variants {mkN "hipálage" ; mkN "Hipálage" ; } ; --*
lin hyperacidity_N = mkN "hiperacidez" ; --*
lin hyperactive_A = variants {mkA "ativo" ; mkA "hiperativo" ; } ; --*
lin hyperactivity_N = variants {mkN "hiperatividade" ; mkN "Hiperatividade" ; } ; --*
lin hyperacusis_1_N = variants {mkN "hiperacusia" ; mkN "Hiperacusia" ; mkN "hyperesthesia" ; } ; --*
lin hyperbaton_N = mkN "Hipérbato" ; --*
lin hyperbola_N = mkN "hipérbole" ; --*
lin hyperbole_N = variants {mkN "exagero" ; mkN "hipérbole" ; } ; --*
lin hyperbolic_1_A = variants {mkA "hiperbólico" ; mkA "inflado" ; } ; --*
lin hyperboloid_N = variants {mkN "Hiperboloide" ; mkN "Hiperbolóide" ; } ; --*
lin hypercalcemia_1_N = variants {mkN "hipercalcemia" ; mkN "níveis" ; } ; --*
lin hypercalciuria_1_N = mkN "hipercalciúria" ; --*
lin hypercapnia_1_N = mkN "hipercapnia" ; --*
lin hypercholesterolemia_1_N = variants {mkN "hipercolesterolemia" ; mkN "Hipercolesterolémia" ; } ; --*
lin hypercritical_A = mkA "supercrítico" ; --*
lin hyperemia_1_N = mkN "hiperemia" ; --*
lin hyperextension_N = mkN "hiperextensão" ; --*
lin hyperglycemia_1_N = mkN "hiperglicemia" ; --*
lin hyperhidrosis_1_N = mkN "hiperidrose" ; --*
lin hyperkalemia_N = variants {mkN "hipercalemia" ; mkN "Hipercaliémia" ; mkN "hipopotassemia" ; mkN "níveis" ; } ; --*
lin hyperlink_N = mkN "hiperligação" ; --*
lin hypermedia_N = variants {mkN "hipermédia" ; mkN "multimedia" ; mkN "system" ; } ; --*
lin hypernatremia_N = variants {mkN "hipernatremia" ; mkN "Hipernatremia" ; mkN "níveis" ; } ; --*
lin hypernym_N = variants {mkN "hiperónimo" ; mkN "hiperônimo" ; mkN "word" ; } ; --*
lin hyperon_N = mkN "híperon" ; --*
lin hyperopia_N = variants {mkN "hipermetropia" ; mkN "Hipermetropia" ; } ; --*
lin hyperparathyroidism_N = mkN "Hiperparatiroidismo" ; --*
lin hyperpigmentation_N = mkN "hiperpigmentação" ; --*
lin hyperpituitarism_N = mkN "hiperpituitarismo" ; --*
lin hyperplasia_N = mkN "hiperplasia" ; --*
lin hypersecretion_N = mkN "hipersecreção" ; --*
lin hypersensitive_A = variants {mkA "alérgico" ; mkA "hipersensível" ; } ; --*
lin hypersensitivity_1_N = mkN "hipersensibilidade" ; --*
lin hypersensitivity_2_N = mkN "Hipersensibilidade" ; --*
lin hypertension_N = variants {mkN "blood" ; mkN "hipertensão" ; } ; --*
lin hypertensive_A = mkA "hipertensivo" ; --*
lin hypertext_N = variants {mkN "hipertexto" ; mkN "Hipertexto" ; } ; --*
lin hyperthermia_1_N = mkN "hipertermia" ; --*
lin hyperthyroidism_N = variants {mkN "hipertireoidismo" ; mkN "hipertiroidismo" ; mkN "tireotoxicose" ; } ; --*
lin hypertonia_1_N = variants {mkN "hipertonia" ; mkN "hipertonicidade" ; } ; --*
lin hypertonic_2_A = mkA "hipertônico" ; --*
lin hypertonicity_2_N = variants {mkN "hipertonia" ; mkN "hipertonicidade" ; } ; --*
lin hypertrophy_N = mkN "hipertrofia" ; --*
lin hypervelocity_N = mkN "hipervelocidade" ; --*
lin hyperventilation_N = mkN "hiperventilação" ; --*
lin hypervitaminosis_N = mkN "hipervitaminose" ; --*
lin hypha_N = mkN "hifa" ; --*
lin hyphema_N = mkN "Hifema" ; --*
lin hyphenate_V2 = mkV2 (mkV "colocar") ; --*
lin hyphenation_1_N = variants {mkN "division" ; mkN "hifenização" ; } ; --*
lin hyphenation_2_N = variants {mkN "colocação" ; mkN "divisão" ; } ; --*
lin hyphen_N = variants {mkN "hífen" ; mkN "traço-de-união" ; } ; --*
lin hyphen_V2 = mkV2 (mkV "colocar") ; --*
lin hypnosis_N = variants {mkN "hipnose" ; mkN "Hipnose" ; } ; --*
lin hypnotherapy_N = variants {mkN "hipnoterapia" ; mkN "Hipnoterapia" ; } ; --*
lin hypnotism_N = variants {mkN "hipnotismo" ; mkN "mesmerismo" ; } ; --*
lin hypnotist_1_N = mkN "hipnotizador" ; --*
lin hypnotize_1_V2 = variants {mkV2 (mkV "hipnotizar") ; mkV2 (mkV "mesmerizar") ; } ; --*
lin hypo_1_N = variants {mkN "thiosulfate" ; mkN "thiosulphate" ; mkN "Tiossulfato" ; } ; --*
lin hypocalcemia_1_N = variants {mkN "hipocalcemia" ; mkN "Hipocalcemia" ; mkN "Hipocalcémia" ; mkN "níveis" ; } ; --*
lin hypochlorite_N = variants {mkN "hipoclorito" ; mkN "Hipoclorito" ; } ; --*
lin hypochondriac_A = mkA "hipocondríaco" ; --*
lin hypochondriacal_A = mkA "hipocondríaco" ; --*
lin hypochondria_N = mkN "hipocondria" ; --*
lin hypocrisy_1_N = variants {mkN "hipocrisia" ; mkN "service" ; } ; --*
lin hypocrisy_2_N = variants {mkN "hipocrisia" ; mkN "hipocrisía" ; } ; --*
lin hypocrite_N = variants {mkN "hipócrita" ; mkN "tartufo" ; } ; --*
lin hypocritical_A = mkA "hipócrita" ; --*
lin hypoesthesia_1_N = mkN "hipoestesia" ; --*
lin hypoglossal_N = variants {mkN "cranial" ; mkN "hypoglosus" ; mkN "nerve" ; mkN "nervo" ; } ; --*
lin hypoglycemia_1_N = variants {mkN "hipoglicemia" ; mkN "Hipoglicémia" ; } ; --*
lin hypogonadism_N = mkN "Hipogonadismo" ; --*
lin hypokalemia_N = variants {mkN "hipocalemia" ; mkN "Hipocaliémia" ; mkN "hipopotassemia" ; mkN "níveis" ; } ; --*
lin hyponatremia_N = variants {mkN "hiponatremia" ; mkN "níveis" ; } ; --*
lin hyponym_N = variants {mkN "hipónimo" ; mkN "termos" ; mkN "word" ; } ; --*
lin hypoparathyroidism_N = mkN "hipoparatireoidismo" ; --*
lin hypophyseal_1_A = mkA "hipofisário" ; --*
lin hypophysectomized_1_A = mkA "hipofisectomizado" ; --*
lin hypopigmentation_N = mkN "hipopigmentação" ; --*
lin hypoplasia_N = mkN "hipoplasia" ; --*
lin hypopnea_N = mkN "hipopnéia" ; --*
lin hypospadias_N = variants {mkN "Hipospadia" ; mkN "hipospádia" ; } ; --*
lin hypostasis_1_N = mkN "epistasia" ; --*
lin hypostatization_1_N = variants {mkN "coisificação" ; mkN "reificação" ; mkN "Reificação" ; } ; --*
lin hypotension_N = variants {mkN "Hipotensao" ; mkN "hipotensão" ; mkN "Hipotensão" ; } ; --*
lin hypotensive_A = mkA "hipotensivo" ; --*
lin hypotenuse_N = mkN "hipotenusa" ; --*
lin hypothecate_2_V2 = variants {mkV2 (mkV "conjecturar") ; mkV2 (mkV "supor") ; mkV2 (mkV "teorizar") ; } ; --*
lin hypothermia_N = mkN "hipotermia" ; --*
lin hypothesis_1_N = mkN "hipótese" ; --*
lin hypothesis_2_N = variants {mkN "hipótese" ; mkN "possibilidade" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin hypothesis_3_N = variants {mkN "conjectura" ; mkN "especulação" ; mkN "fazerdeconta" ; mkN "hipótese" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin hypothesize_1_V2 = variants {mkV2 (mkV "conjecturar") ; mkV2 (mkV "supor") ; mkV2 (mkV "teorizar") ; } ; --*
lin hypothetical_1_A = mkA "hipotético" ; --*
lin hypothyroidism_N = variants {mkN "hipotireoidismo" ; mkN "hipotiroidismo" ; } ; --*
lin hypotonia_1_N = mkN "hipotonia" ; --*
lin hypotonic_2_A = mkA "hipotônico" ; --*
lin hypotonicity_1_N = mkN "hipotonicidade" ; --*
lin hypotonicity_2_N = mkN "hipotonia" ; --*
lin hypovolemia_1_N = mkN "Hipovolemia" ; --*
lin hypovolemic_1_A = mkA "hipovolêmico" ; --*
lin hypoxia_N = mkN "hipóxia" ; --*
lin hypsography_2_N = mkN "hipsometria" ; --*
lin hypsometer_N = variants {mkN "Hipsómetro" ; mkN "hipsômetro" ; } ; --*
lin hypsometry_N = mkN "hipsometria" ; --*
lin hysterectomy_N = mkN "histerectomia" ; --*
lin hysteresis_N = variants {mkN "histerese" ; mkN "histereses" ; } ; --*
lin hysteria_1_N = variants {mkN "delírio" ; mkN "frenesi" ; mkN "loucura" ; } ; --*
lin hysteria_2_N = mkN "histeria" ; --*
lin hysteric_A = mkA "histérico" ; --*
lin hysterical_1_A = mkA "histérico" ; --*
lin hysterical_2_A = mkA "histérico" ; --*
lin iamb_N = mkN "Iambo" ; --*
lin iambus_N = mkN "Iambo" ; --*
lin iatrogenic_A = mkA "iatrogênico" ; --*
lin ibadan_PN = mkPN "Ibadan" ; --*
lin ibex_N = mkN "ibex" ; --*
lin ibuprofen_N = variants {mkN "ibuprofeno" ; mkN "propionic" ; } ; --*
lin icbm_N = variants {mkN "ballistic" ; mkN "ICBM" ; } ; --*
lin ice_1_N = variants {mkN "geada" ; mkN "gelo" ; mkN "ice" ; } ; --*
lin ice_3_V2 = mkV2 (mkV "gelar") ; --*
lin ice_4_N = mkN "crosta" ; --*
lin ice_5_N = mkN "sorvete" ; --*
lin ice_6_N = variants {mkN "feed" ; mkN "hydrochloride" ; mkN "metanfetamina" ; mkN "Metanfetaminas" ; } ; --*
lin ice_7_N = variants {mkN "engine" ; mkN "motor" ; } ; --*
lin iceberg_1_N = variants {mkN "iceberg" ; mkN "Iceberg" ; mkN "icebergue" ; } ; --*
lin iceberg_2_N = variants {mkN "iceberg" ; mkN "lettuce" ; } ; --*
lin iceboat_1_N = mkN "quebra-gelo" ; --*
lin icebox_N = variants {mkN "Frigorifico" ; mkN "frigorífico" ; mkN "Frigorífico" ; mkN "frigoríficos" ; mkN "geladeira" ; mkN "refrigerador" ; } ; --*
lin icebreaker_1_N = mkN "quebra-gelo" ; --*
lin icecap_1_N = variants {mkN "calota" ; mkN "cap" ; } ; --*
lin ice_cream_1_N = variants {mkN "cream" ; mkN "gelado" ; mkN "sorvete" ; mkN "Sorvete" ; } ; --*
lin iceland_1_PN = variants {mkPN "Islândia" ; mkPN "of" ; } ; --*
lin iceland_2_PN = variants {mkPN "Islandia" ; mkPN "Islândia" ; mkPN "República" ; } ; --*
lin icelander_N = variants {mkN "islandês" ; mkN "islandesa" ; } ; --*
lin icelandic_A = variants {mkA "islandês" ; mkA "islândes" ; } ; --*
lin icelandic_N = variants {mkN "islandês" ; mkN "Língua" ; } ; --*
lin ice_lolly_N = variants {mkN "lolly" ; mkN "picolé" ; } ; --*
lin icepick_1_N = variants {mkN "Picador" ; mkN "pick" ; } ; --*
lin ice_skating_N = mkN "skating" ; --*
lin ichneumon_N = variants {mkN "ichneumon" ; mkN "Sacarrabos" ; } ; --*
lin ichor_1_N = mkN "Icor" ; --*
lin ichor_2_N = mkN "pus" ; --*
lin ichthyologist_N = mkN "ictiólogo" ; --*
lin ichthyology_N = variants {mkN "ictiologia" ; mkN "Ictiologia" ; } ; --*
lin ichthyosaur_N = mkN "Icitiossauro" ; --*
lin ichthyosis_N = mkN "ictiose" ; --*
lin icing_1_N = variants {mkN "geada" ; mkN "rime" ; } ; --*
lin icing_2_N = mkN "crosta" ; --*
lin icky_1_A = variants {mkA "fedida" ; mkA "fedido" ; mkA "fedorenta" ; mkA "fedorento" ; } ; --*
lin icky_2_A = mkA "viscoso" ; --*
lin icon_1_N = variants {mkN "Icon" ; mkN "ícone" ; } ; --*
lin icon_2_N = variants {mkN "desenho" ; mkN "figura" ; mkN "fotografia" ; mkN "ícone" ; mkN "Ícone" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin icon_3_N = variants {mkN "ícone" ; mkN "Ícone" ; } ; --*
lin iconoclasm_N = mkN "iconoclastia" ; --*
lin iconoclast_1_N = variants {mkN "breaker" ; mkN "iconoclasta" ; } ; --*
lin iconoclastic_1_A = mkA "iconoclástico" ; --*
lin iconoclastic_2_A = mkA "iconoclástico" ; --*
lin iconography_N = variants {mkN "iconografia" ; mkN "Iconografia" ; } ; --*
lin icosahedron_N = mkN "icosaedro" ; --*
lin icy_1_A = variants {mkA "frio" ; mkA "gelado" ; mkA "glacial" ; } ; --*
lin icy_2_A = variants {mkA "ártico" ; mkA "gelado" ; mkA "polar" ; } ; --*
lin id_1_N = variants {mkN "Idaho" ; mkN "State" ; } ; --*
lin id_2_N = variants {mkN "bilhete" ; mkN "carteira" ; mkN "identificação" ; } ; --*
lin idaho_PN = variants {mkPN "Idaho" ; mkPN "State" ; } ; --*
lin ida_PN = variants {mkPN "Associação" ; mkPN "Development" ; } ; --*
lin idea_1_N = variants {mkN "conceito" ; mkN "ideia" ; mkN "idéia" ; mkN "opinião" ; mkN "pensamento" ; } ; --*
lin idea_3_N = variants {mkN "ideia" ; mkN "opinião" ; mkN "pensamento" ; mkN "view" ; } ; --*
lin idea_4_N = variants {mkN "aproximação" ; mkN "estimativa" ; mkN "ideia" ; } ; --*
lin idea_5_N = variants {mkN "tema" ; mkN "theme" ; } ; --*
lin ideal_1_A = mkA "ideal" ; --*
lin ideal_2_A = mkA "ideal" ; --*
lin ideal_2_N = mkN "apoteose" ; --*
lin ideal_3_A = mkA "ideal" ; --*
lin idealism_1_N = variants {mkN "idealismo" ; mkN "Idealismo" ; } ; --*
lin idealism_2_N = mkN "idealismo" ; --*
lin idealism_3_N = mkN "idealismo" ; --*
lin idealistic_1_A = mkA "ideal" ; --*
lin idealistic_2_A = variants {mkA "elevado" ; mkA "sublime" ; } ; --*
lin idealist_N = mkN "idealista" ; --*
lin idealization_1_N = mkN "idealização" ; --*
lin idealize_1_V2 = mkV2 (mkV "idealizar") ; --*
lin idealize_2_V2 = mkV2 (mkV "idealizar") ; --*
lin ideally_Adv = mkAdv "idealmente" ; --*
lin idea_of_N2 = variants {mkN2 (mkN "ideia") noPrep ; mkN2 (mkN "intenção") noPrep ; mkN2 (mkN "mente") noPrep ; mkN2 (mkN "objectivo") noPrep ; mkN2 (mkN "objetivo") noPrep ; } ; --*
lin identical_1_A = variants {mkA "idêntico" ; mkA "indistiguivel" ; mkA "que" ; } ; --*
lin identical_2_A = variants {mkA "idêntico" ; mkA "mesmo" ; } ; --*
lin identical_4_A = mkA "idêntico" ; --*
lin identical_5_A = mkA "idêntico" ; --*
lin identifiable_A = mkA "identificável" ; --*
lin identification_1_N = mkN "identificação" ; --*
lin identification_2_N = mkN "identificação" ; --*
lin identification_4_N = variants {mkN "identificação" ; mkN "reconhecimento" ; } ; --*
lin identification_5_N = mkN "identificação" ; --*
lin identifier_N = mkN "identificador" ; --*
lin identify_1_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin identify_2_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "nomear") ; } ; --*
lin identify_3_V = mkV "indentificar-se" ; --*
lin identify_4_V2 = mkV2 (mkV "identificar") ; --*
lin identify_5_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "out") ; } ; --*
lin identify_5_V = variants {mkV "identificar" ; mkV "out" ; } ; --*
lin identify_6_V2 = mkV2 (mkV "identificar") ; --*
lin identity_1_N = variants {mkN "identidade" ; mkN "identity" ; } ; --*
lin identity_2_N = mkN "identidade" ; --*
lin identity_3_N = variants {mkN "element" ; mkN "identidade" ; mkN "operator" ; } ; --*
lin identity_4_N = mkN "identidade" ; --*
lin ideogram_N = variants {mkN "ideograma" ; mkN "Ideograma" ; } ; --*
lin ideograph_N = variants {mkN "ideograma" ; mkN "Ideograma" ; } ; --*
lin ideological_1_A = mkA "ideológico" ; --*
lin ideological_2_A = mkA "ideológico" ; --*
lin ideologist_N = mkN "ideologista" ; --*
lin ideology_1_N = variants {mkN "ideologia" ; mkN "orientation" ; mkN "theory" ; } ; --*
lin ideology_2_N = mkN "ideologia" ; --*
lin ides_N = mkN "idos" ; --*
lin idiocy_N = mkN "idiotia" ; --*
lin idiographic_A = mkA "idiografico" ; --*
lin idiolect_N = mkN "idioleto" ; --*
lin idiom_2_N = variants {mkN "dialecto" ; mkN "dialeto" ; mkN "Dialetos" ; mkN "idioma" ; mkN "língua" ; } ; --*
lin idiom_3_N = variants {mkN "estilo" ; mkN "style" ; } ; --*
lin idiom_4_N = variants {mkN "ditado" ; mkN "expression" ; mkN "idiom" ; mkN "phrase" ; mkN "provérbio" ; } ; --*
lin idiomatic_1_A = mkA "idiomático" ; --*
lin idiopathic_A = mkA "idiopático" ; --*
lin idiosyncrasy_N = mkN "idiossincrasia" ; --*
lin idiosyncratic_A = mkA "idiossincrático" ; --*
lin idiotic_2_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin idiotic_3_A = mkA "idiota" ; --*
lin idiot_N = variants {mkN "bobo" ; mkN "boboca" ; mkN "burro" ; mkN "cretino" ; mkN "débil" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "parvo" ; mkN "pateta" ; mkN "retardado" ; } ; --*
lin idle_1_A = mkA "desempregado" ; --*
lin idle_2_A = variants {mkA "infundado" ; mkA "não" ; mkA "sem" ; mkA "sembase" ; mkA "semfundamento" ; } ; --*
lin idle_7_A = variants {mkA "desempregado" ; mkA "of" ; } ; --*
lin idleness_1_N = mkN "ociosidade" ; --*
lin idleness_3_N = variants {mkN "inatividade" ; mkN "ócio" ; } ; --*
lin idler_N = variants {mkN "vadio" ; mkN "vagabundo" ; } ; --*
lin idol_1_N = variants {mkN "ídolo" ; mkN "image" ; } ; --*
lin idol_3_N = variants {mkN "ideal" ; mkN "ídolo" ; mkN "modelo" ; mkN "perfeição" ; } ; --*
lin idolatry_N = variants {mkN "idolatria" ; mkN "worship" ; } ; --*
lin idolization_1_N = mkN "adulação" ; --*
lin idolize_1_V2 = mkV2 (mkV "adorar") ; --*
lin idyll_1_N = mkN "idílio" ; --*
lin idyll_3_N = mkN "idílio" ; --*
lin idyllic_1_A = mkA "idílico" ; --*
lin idyllic_2_A = mkA "idílico" ; --*
lin ie_PN = variants {mkPN "Exploradores" ; mkPN "Explorer" ; } ; --*
lin igloo_1_N = mkN "iglu" ; --*
lin igneous_1_A = mkA "ígneo" ; --*
lin igneous_2_A = mkA "ígneo" ; --*
lin igneous_3_A = mkA "ígneo" ; --*
lin ignis_fatuus_2_N = variants {mkN "fatuus" ; mkN "Fogo-fátuo" ; } ; --*
lin ignite_1_V2 = mkV2 (mkV "acender") ; --*
lin ignite_2_V = variants {mkV "acender" ; mkV "começar" ; mkV "fire" ; } ; --*
lin ignite_3_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "up") ; } ; --*
lin igniter_1_N = variants {mkN "encendedor" ; mkN "isqueiro" ; } ; --*
lin igniter_2_N = variants {mkN "encendedor" ; mkN "isqueiro" ; } ; --*
lin ignition_1_N = mkN "ignição" ; --*
lin ignition_2_N = variants {mkN "ignição" ; mkN "partida" ; mkN "system" ; } ; --*
lin ignition_3_N = variants {mkN "ignição" ; mkN "inflamação" ; mkN "Inflamações" ; } ; --*
lin ignobleness_N = mkN "ignobilidade" ; --*
lin ignominious_A = variants {mkA "desgraçado" ; mkA "ignominioso" ; mkA "torpe" ; } ; --*
lin ignominy_N = variants {mkN "desgraça" ; mkN "ignomínia" ; mkN "vergonha" ; } ; --*
lin ignoramus_N = variants {mkN "ignorante" ; mkN "nothing" ; mkN "person" ; } ; --*
lin ignorance_N = variants {mkN "ignorância" ; mkN "Ignorância" ; } ; --*
lin ignorant_1_A = variants {mkA "ignorante" ; mkA "iletrado" ; mkA "néscio" ; } ; --*
lin ignorant_2_A = variants {mkA "analfabeto" ; mkA "ignorante" ; mkA "iletrado" ; } ; --*
lin ignore_1_V2 = variants {mkV2 (mkV "desconsiderar") ; mkV2 (mkV "esnobar") ; mkV2 (mkV "ignorar") ; } ; --*
lin ignore_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "descartar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "off") ; } ; --*
lin ignore_3_V2 = variants {mkV2 (mkV "desconsiderar") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "negligenciar") ; } ; --*
lin ignore_3_V = variants {mkV "desconsiderar" ; mkV "ignorar" ; mkV "negligenciar" ; } ; --*
lin ignore_4_V2 = variants {mkV2 (mkV "desatender") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "negligenciar") ; } ; --*
lin ignore_5_V2 = variants {mkV2 (mkV "desconhecer") ; mkV2 (mkV "ignorar") ; } ; --*
lin iguana_N = mkN "iguana" ; --*
lin iguanodon_N = mkN "iguanodonte" ; --*
lin ii_PN = variants {mkPN "dois" ; mkPN "Dois" ; mkPN "duas" ; } ; --*
lin ikon_1_N = variants {mkN "desenho" ; mkN "figura" ; mkN "fotografia" ; mkN "ícone" ; mkN "Ícone" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin ikon_2_N = variants {mkN "ícone" ; mkN "Ícone" ; } ; --*
lin ileostomy_N = mkN "Ileostomia" ; --*
lin ileum_N = variants {mkN "íleo" ; mkN "Íleon" ; } ; --*
lin ilex_N = mkN "Ilex" ; --*
lin iliac_A = mkA "ilíaco" ; --*
lin ilium_1_N = variants {mkN "Troia" ; mkN "Tróia" ; } ; --*
lin ilium_2_N = variants {mkN "ilíaco" ; mkN "ílio" ; } ; --*
lin ilk_N = variants {mkN "classe" ; mkN "tipo" ; } ; --*
lin ill_1_A = variants {mkA "doente" ; mkA "enfermo" ; } ; --*
lin ill_1_AdV = variants {mkAdV "fracamente" ; mkAdV "pobremente" ; } ; --*
lin ill_5_A = variants {mkA "agourento" ; mkA "ameaçador" ; } ; --*
lin ill_affected_A = mkA "rebelde" ; --*
lin illative_1_A = mkA "ilativo" ; --*
lin illative_2_A = mkA "ilativo" ; --*
lin illative_3_A = mkA "ilativo" ; --*
lin ill_bred_A = mkA "grosseiro" ; --*
lin illegal_A = mkA "ilegal" ; --*
lin illegality_N = mkN "ilegalidade" ; --*
lin illegitimacy_1_N = variants {mkN "bastardia" ; mkN "sinister" ; } ; --*
lin illegitimate_1_A = variants {mkA "ilegal" ; mkA "ilegítimo" ; mkA "ilícito" ; } ; --*
lin illegitimate_2_A = mkA "ilegítimo" ; --*
lin illegitimate_N = variants {mkN "bastardo" ; mkN "child" ; } ; --*
lin illicit_1_A = mkA "ilícito" ; --*
lin illicit_2_A = variants {mkA "ilegal" ; mkA "ilegítimo" ; mkA "ilícito" ; } ; --*
lin illimitable_A = mkA "sem" ; --*
lin illinois_1_PN = variants {mkPN "Illinois" ; mkPN "Illinóis" ; mkPN "of" ; mkPN "State" ; } ; --*
lin illiteracy_1_N = mkN "analfabetismo" ; --*
lin illiteracy_2_N = mkN "analfabetismo" ; --*
lin illiterate_1_A = mkA "analfabeto" ; --*
lin illiterate_2_A = variants {mkA "analfabeto" ; mkA "ignorante" ; mkA "iletrado" ; } ; --*
lin illiterate_N = variants {mkN "analfabeto" ; mkN "person" ; } ; --*
lin ill_mannered_A = variants {mkA "descortês" ; mkA "grosseiro" ; mkA "malcomportado" ; mkA "malcriado" ; mkA "mal-educado" ; mkA "rude" ; } ; --*
lin ill_N = mkN "doença" ; --*
lin illness_N = variants {mkN "doença" ; mkN "enfermidade" ; mkN "enjoo" ; mkN "nausea" ; } ; --*
lin illogical_2_A = variants {mkA "confundido" ; mkA "confuso" ; mkA "perplexo" ; } ; --*
lin ill_treatment_N = variants {mkN "abuso" ; mkN "injúria" ; } ; --*
lin ill_treat_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "destratar") ; mkV2 (mkV "maltratar") ; } ; --*
lin illume_V2 = variants {mkV2 (mkV "brilhar") ; mkV2 (mkV "iluminar") ; mkV2 (mkV "up") ; } ; --*
lin illuminance_N = variants {mkN "iluminação" ; mkN "iluminamento" ; } ; --*
lin illuminate_1_V2 = variants {mkV2 (mkV "brilhar") ; mkV2 (mkV "iluminar") ; mkV2 (mkV "up") ; } ; --*
lin illuminate_2_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin illumination_1_N = mkN "iluminação" ; --*
lin illumination_2_N = mkN "iluminação" ; --*
lin illumination_3_N = variants {mkN "aclaração" ; mkN "elucidação" ; mkN "esclarecimento" ; } ; --*
lin illumination_4_N = variants {mkN "iluminação" ; mkN "iluminamento" ; } ; --*
lin illumination_5_N = mkN "Iluminura" ; --*
lin illumine_V2 = variants {mkV2 (mkV "brilhar") ; mkV2 (mkV "iluminar") ; mkV2 (mkV "up") ; } ; --*
lin ill_usage_N = variants {mkN "abuso" ; mkN "injúria" ; } ; --*
lin ill_use_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "destratar") ; mkV2 (mkV "maltratar") ; } ; --*
lin illusion_1_N = mkN "ilusão" ; --*
lin illusion_2_N = variants {mkN "fantasia" ; mkN "ilusão" ; } ; --*
lin illusion_3_N = variants {mkN "delírio" ; mkN "game" ; mkN "ilusão" ; } ; --*
lin illusion_4_N = variants {mkN "ilusão" ; mkN "magia" ; mkN "trick" ; mkN "truque" ; } ; --*
lin illusionist_2_N = variants {mkN "ilusionista" ; mkN "Magician" ; } ; --*
lin illusive_A = mkA "ilusório" ; --*
lin illusory_A = mkA "ilusório" ; --*
lin illustrate_1_V2 = variants {mkV2 (mkV "exemplificar") ; mkV2 (mkV "ilustrar") ; } ; --*
lin illustrate_1_VS = variants {mkVS (mkV "exemplificar") ; mkVS (mkV "ilustrar") ; } ; --*
lin illustrate_2_V2 = mkV2 (mkV "ilustrar") ; --*
lin illustrate_2_VS = mkVS (mkV "ilustrar") ; --*
lin illustrate_3_V2 = mkV2 (mkV "ilustrar") ; --*
lin illustration_1_N = variants {mkN "desenho" ; mkN "figura" ; mkN "ilustração" ; } ; --*
lin illustration_3_N = mkN "exemplo" ; --*
lin illustration_4_N = variants {mkN "desenho" ; mkN "figura" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin illustrative_2_A = mkA "demonstrativo" ; --*
lin illustrator_N = variants {mkN "desenhista" ; mkN "ilustrador" ; mkN "Ilustradores" ; } ; --*
lin illustrious_1_A = variants {mkA "célebre" ; mkA "comemorado" ; mkA "de" ; mkA "famoso" ; mkA "ilustre" ; mkA "notável" ; mkA "renomado" ; } ; --*
lin ilmenite_N = mkN "ilmenita" ; --*
lin ilo_N = variants {mkN "Labor" ; mkN "Labour" ; mkN "Organização" ; } ; --*
lin image_1_N = variants {mkN "image" ; mkN "imagem" ; } ; --*
lin image_2_N = mkN "rosto" ; --*
lin image_2_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin image_3_N = variants {mkN "desenho" ; mkN "figura" ; mkN "fotografia" ; mkN "ícone" ; mkN "Ícone" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin image_4_N = variants {mkN "Prototipo" ; mkN "protótipo" ; mkN "Protótipo" ; } ; --*
lin image_5_N = variants {mkN "figura" ; mkN "metáfora" ; mkN "of" ; } ; --*
lin image_6_N = mkN "sósia" ; --*
lin image_7_N = variants {mkN "imagem" ; mkN "of" ; } ; --*
lin image_9_N = variants {mkN "desenho" ; mkN "efígie" ; mkN "figura" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin imagery_N = variants {mkN "imagery" ; mkN "imaginação" ; mkN "Imaginação" ; } ; --*
lin imaginable_A = mkA "imaginável" ; --*
lin imaginary_A = mkA "imaginário" ; --*
lin imagination_1_N = mkN "imaginação" ; --*
lin imagination_2_N = variants {mkN "imagery" ; mkN "imaginação" ; mkN "Imaginação" ; } ; --*
lin imaginative_A = variants {mkA "criativo" ; mkA "imaginativo" ; mkA "inventivo" ; } ; --*
lin imagine_1_V2 = variants {mkV2 (mkV "conjeturar") ; mkV2 (mkV "imaginar") ; mkV2 (mkV "of") ; mkV2 (mkV "pensar") ; } ; --*
lin imagine_1_VS = variants {mkVS (mkV "conjeturar") ; mkVS (mkV "imaginar") ; mkVS (mkV "of") ; mkVS (mkV "pensar") ; } ; --*
lin imagine_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "esperar") ; mkVS (mkV "pensar") ; mkVS (mkV "supor") ; } ; --*
lin imaging_1_N = variants {mkN "imagery" ; mkN "imaginação" ; mkN "Imaginação" ; } ; --*
lin imaging_2_N = mkN "Tomografia" ; --*
lin imago_2_N = mkN "imago" ; --*
lin imam_1_N = mkN "imame" ; --*
lin imbalance_1_N = variants {mkN "desequilíbrio" ; mkN "instabilidade" ; } ; --*
lin imbalance_2_N = mkN "assimetria" ; --*
lin imbecile_1_A = mkA "idiota" ; --*
lin imbecile_N = variants {mkN "bobo" ; mkN "boboca" ; mkN "burro" ; mkN "cretino" ; mkN "débil" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "parvo" ; mkN "pateta" ; mkN "retardado" ; } ; --*
lin imbecility_1_N = mkN "imbecilidade" ; --*
lin imbecility_2_N = variants {mkN "burrice" ; mkN "estupidez" ; } ; --*
lin imbed_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "embutir") ; mkV2 (mkV "encaixar") ; mkV2 (mkV "implantar") ; } ; --*
lin imbibe_1_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin imbibe_2_V2 = mkV2 (mkV "assimilar") ; --*
lin imbibe_3_V2 = variants {mkV2 (mkV "beber") ; mkV2 (mkV "tomar") ; } ; --*
lin imbibition_2_N = mkN "bebida" ; --*
lin imbue_1_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "permear") ; } ; --*
lin imbue_2_V2 = mkV2 (mkV "imbuir") ; --*
lin imf_N = variants {mkN "FMI" ; mkN "Monetary" ; } ; --*
lin imidazole_1_N = mkN "imidazol" ; --*
lin imitate_1_V2 = variants {mkV2 (mkV "copiar") ; mkV2 (mkV "imitar") ; mkV2 (mkV "simular") ; } ; --*
lin imitate_2_V2 = variants {mkV2 (mkV "copiar") ; mkV2 (mkV "imitar") ; } ; --*
lin imitate_3_V2 = variants {mkV2 (mkV "copiar") ; mkV2 (mkV "imitar") ; } ; --*
lin imitation_1_N = mkN "imitação" ; --*
lin imitation_2_N = variants {mkN "contrafação" ; mkN "falsificação" ; } ; --*
lin imitation_3_N = variants {mkN "imitação" ; mkN "Imitação" ; } ; --*
lin imitation_4_N = variants {mkN "caricatura" ; mkN "Caricatura" ; mkN "vinheta" ; } ; --*
lin imitator_2_N = variants {mkN "emulador" ; mkN "macaquice" ; } ; --*
lin immaculate_1_A = mkA "imaculado" ; --*
lin immaculate_2_A = mkA "imaculado" ; --*
lin immaculate_3_A = variants {mkA "impecável" ; mkA "sem" ; } ; --*
lin immanence_1_N = mkN "imanência" ; --*
lin immanent_1_A = variants {mkA "imanente" ; mkA "subjetivo" ; } ; --*
lin immanent_2_A = mkA "imanente" ; --*
lin immaterial_1_A = mkA "imaterial" ; --*
lin immaterial_2_A = mkA "imaterial" ; --*
lin immaterial_3_A = mkA "imaterial" ; --*
lin immaterial_to_A2 = mkA2 (mkA "indiferente") noPrep ; --*
lin immature_1_A = variants {mkA "imaturo" ; mkA "infantil" ; } ; --*
lin immature_2_A = mkA "jovem" ; --*
lin immature_3_A = variants {mkA "imaturo" ; mkA "verde" ; } ; --*
lin immature_4_A = mkA "imaturo" ; --*
lin immaturity_N = mkN "imaturidade" ; --*
lin immeasurable_2_A = mkA "inestimável" ; --*
lin immediacy_1_N = mkN "imediação" ; --*
lin immediate_2_A = variants {mkA "contíguo" ; mkA "imediato" ; } ; --*
lin immediate_3_A = mkA "imediato" ; --*
lin immediate_4_A = mkA "imediato" ; --*
lin immense_A = variants {mkA "amplo" ; mkA "enorme" ; mkA "extenso" ; mkA "imenso" ; mkA "vasta" ; } ; --*
lin immensity_N = variants {mkN "enormidade" ; mkN "grandeza" ; mkN "imensidade" ; mkN "imensidão" ; } ; --*
lin immerse_1_V2 = variants {mkV2 (mkV "imergir") ; mkV2 (mkV "molhar") ; } ; --*
lin immerse_2_V2 = variants {mkV2 (mkV "focar") ; mkV2 (mkV "up") ; } ; --*
lin immerse_4_V2 = mkV2 (mkV "mergulhar") ; --*
lin immersion_1_N = mkN "imersão" ; --*
lin immersion_3_N = mkN "concentração" ; --*
lin immersion_4_N = mkN "imersão" ; --*
lin immersion_5_N = mkN "imersão" ; --*
lin immigrant_N = variants {mkN "imigração" ; mkN "Imigração" ; mkN "imigrante" ; } ; --*
lin immigrate_1_V = mkV "imigrar" ; --*
lin immigrate_2_V = mkV "imigrar" ; --*
lin immigrate_3_V = mkV "imigrar" ; --*
lin immigration_1_N = mkN "imigração" ; --*
lin immigration_2_N = mkN "imigração" ; --*
lin imminence_1_N = mkN "iminência" ; --*
lin imminent_A = variants {mkA "at" ; mkA "hand" ; mkA "iminente" ; } ; --*
lin immobile_2_A = variants {mkA "firme" ; mkA "seguro" ; } ; --*
lin immobility_1_N = mkN "imobilidade" ; --*
lin immobilize_1_V2 = mkV2 (mkV "imobilizar") ; --*
lin immobilize_5_V2 = mkV2 (mkV "congelar") ; --*
lin immodesty_2_N = mkN "exibicionismo" ; --*
lin immolate_V2 = variants {mkV2 (mkV "imolar") ; mkV2 (mkV "sacrificar") ; } ; --*
lin immoral_1_A = mkA "imoral" ; --*
lin immoral_2_A = mkA "mau" ; --*
lin immorality_2_N = variants {mkN "imoralidade" ; mkN "maldade" ; } ; --*
lin immortal_2_N = variants {mkN "deidade" ; mkN "Deidades" ; mkN "deus" ; mkN "Deus" ; mkN "deusa" ; mkN "divindade" ; mkN "divinidade" ; } ; --*
lin immortal_A = mkA "imortal" ; --*
lin immortality_1_N = mkN "imortalidade" ; --*
lin immortality_2_N = mkN "imortalidade" ; --*
lin immortalize_1_V2 = variants {mkV2 (mkV "comemorar") ; mkV2 (mkV "imortalizar") ; mkV2 (mkV "rememorar") ; } ; --*
lin immortalize_2_V2 = variants {mkV2 (mkV "eternizar") ; mkV2 (mkV "imortalizar") ; } ; --*
lin immovable_1_A = variants {mkA "estacionário" ; mkA "imóvel" ; } ; --*
lin immune_1_A = mkA "imune" ; --*
lin immune_2_A = mkA "imune" ; --*
lin immune_3_A = mkA "imune" ; --*
lin immune_to_A2 = variants {mkA2 (mkA "imune") noPrep ; mkA2 (mkA "isento") noPrep ; } ; --*
lin immunity_1_N = mkN "imunidade" ; --*
lin immunity_2_N = mkN "imunidade" ; --*
lin immunity_3_N = mkN "imunidade" ; --*
lin immunity_4_N = variants {mkN "immunity" ; mkN "imunidade" ; } ; --*
lin immunization_1_N = mkN "imunização" ; --*
lin immunize_1_V2 = mkV2 (mkV "imunizar") ; --*
lin immunize_2_V2 = mkV2 (mkV "vacinar") ; --*
lin immunoassay_N = variants {mkN "análise" ; mkN "assay" ; } ; --*
lin immunochemistry_N = mkN "Imunoquímica" ; --*
lin immunodeficiency_N = variants {mkN "imunodeficiência" ; mkN "Imunodeficiência" ; } ; --*
lin immunofluorescence_N = mkN "imunofluorescência" ; --*
lin immunoglobulin_N = variants {mkN "anticorpo" ; mkN "gamma" ; mkN "globulin" ; mkN "imunoglobulina" ; mkN "serum" ; } ; --*
lin immunohistochemistry_N = mkN "imunohistoquímica" ; --*
lin immunological_1_A = mkA "imunológico" ; --*
lin immunology_N = variants {mkN "imunologia" ; mkN "Imunologia" ; } ; --*
lin immunosuppressed_A = variants {mkA "imunodeprimido" ; mkA "imunossuprimido" ; } ; --*
lin immure_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin immutable_1_A = variants {mkA "imutável" ; mkA "inalterável" ; } ; --*
lin imp_1_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin imp_2_N = mkN "diabrete" ; --*
lin impact_1_N = mkN "impacto" ; --*
lin impact_1_V2 = mkV2 (mkV "impactar") ; --*
lin impact_2_N = variants {mkN "efeito" ; mkN "impacto" ; } ; --*
lin impact_2_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "impactar") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin impact_3_N = mkN "usurpação" ; --*
lin impact_4_N = mkN "choque" ; --*
lin impair_1_V2 = variants {mkV2 (mkV "deteriorar") ; mkV2 (mkV "tornar") ; } ; --*
lin impair_2_V2 = variants {mkV2 (mkV "deteriorar") ; mkV2 (mkV "estragar") ; } ; --*
lin impairment_1_N = variants {mkN "avaria" ; mkN "dano" ; mkN "estrago" ; mkN "prejuízo" ; } ; --*
lin impairment_2_N = mkN "piora" ; --*
lin impairment_3_N = variants {mkN "Deficiencia" ; mkN "deficiência" ; mkN "Deficiência" ; mkN "Deficiente" ; mkN "discapacidade" ; mkN "inabilidade" ; mkN "incapacidade" ; } ; --*
lin impala_N = variants {mkN "impala" ; mkN "melampus" ; } ; --*
lin impale_2_V2 = mkV2 (mkV "empalar") ; --*
lin impanel_1_V2 = mkV2 (mkV "listar") ; --*
lin impanel_2_V2 = mkV2 (mkV "selecionar") ; --*
lin impart_1_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "on") ; } ; --*
lin impart_2_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "contribuir") ; } ; --*
lin impart_3_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin impartial_1_A = mkA "imparcial" ; --*
lin impartial_2_A = mkA "imparcial" ; --*
lin impasse_1_N = variants {mkN "end" ; mkN "estancamento" ; mkN "impasse" ; } ; --*
lin impassioned_A = mkA "ardente" ; --*
lin impassive_1_A = mkA "impassível" ; --*
lin impassive_2_A = variants {mkA "inexpressível" ; mkA "sem" ; } ; --*
lin impassiveness_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin impassivity_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin impatience_1_N = mkN "impaciência" ; --*
lin impatience_2_N = mkN "impaciência" ; --*
lin impatience_3_N = mkN "impaciência" ; --*
lin impatient_1_A = mkA "impaciente" ; --*
lin impatient_2_A = mkA "impaciente" ; --*
lin impeach_3_V2 = variants {mkV2 (mkV "acusar") ; mkV2 (mkV "arguir") ; mkV2 (mkV "criminar") ; mkV2 (mkV "incriminar") ; mkV2 (mkV "inculpar") ; } ; --*
lin impeachability_N = mkN "cumplicidade" ; --*
lin impeachment_N = mkN "impeachment" ; --*
lin impeccable_1_A = variants {mkA "impecável" ; mkA "sem" ; } ; --*
lin impeccable_2_A = mkA "impecável" ; --*
lin impecunious_A = variants {mkA "duro" ; mkA "straitened" ; mkA "up" ; } ; --*
lin impedance_N = variants {mkN "impedância" ; mkN "resistance" ; mkN "resistividade" ; } ; --*
lin impede_1_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "entravar") ; mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "reter") ; } ; --*
lin impede_2_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "entupir") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "ocluir") ; mkV2 (mkV "tapar") ; mkV2 (mkV "trancar") ; mkV2 (mkV "up") ; } ; --*
lin impediment_1_N = variants {mkN "dificuldade" ; mkN "dissuasor" ; mkN "impedimento" ; mkN "obstáculo" ; } ; --*
lin impediment_2_N = mkN "obstáculo" ; --*
lin impedimenta_1_N = mkN "obstáculo" ; --*
lin impel_1_V2 = variants {mkV2 (mkV "impelir") ; mkV2 (mkV "impulsionar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "tocar") ; } ; --*
lin impel_2_V2 = variants {mkV2 (mkV "impulsionar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "tocar") ; } ; --*
lin impending_1_A = variants {mkA "at" ; mkA "hand" ; mkA "iminente" ; } ; --*
lin impenetrable_2_A = mkA "denso" ; --*
lin impenetrable_3_A = mkA "impenetrável" ; --*
lin imperative_1_N = variants {mkN "form" ; mkN "imperativo" ; mkN "mood" ; } ; --*
lin imperativeness_1_N = variants {mkN "instância" ; mkN "pressão" ; } ; --*
lin imperfect_1_A = mkA "imperfeito" ; --*
lin imperfect_2_A = mkA "imperfeito" ; --*
lin imperfection_N = variants {mkN "defeito" ; mkN "imperfeição" ; } ; --*
lin imperfective_N = variants {mkN "aspect" ; mkN "imperfeito" ; } ; --*
lin imperfect_N = variants {mkN "imperfeito" ; mkN "tense" ; } ; --*
lin imperial_1_A = mkA "imperial" ; --*
lin imperial_3_A = mkA "imperial" ; --*
lin imperial_4_A = variants {mkA "imperial" ; mkA "real" ; } ; --*
lin imperialism_1_N = mkN "imperialismo" ; --*
lin imperialism_2_N = mkN "imperialismo" ; --*
lin imperialism_3_N = mkN "imperialismo" ; --*
lin imperialistic_1_A = mkA "imperialista" ; --*
lin imperil_V2 = variants {mkV2 (mkV "ameaçar") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "imperilar") ; mkV2 (mkV "perigar") ; } ; --*
lin imperious_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin imperiousness_N = mkN "arrogância" ; --*
lin imperishable_2_A = variants {mkA "duradouro" ; mkA "eterno" ; mkA "perpétuo" ; } ; --*
lin imperium_1_N = mkN "império" ; --*
lin impermanence_1_N = mkN "Anicca" ; --*
lin impermanent_1_A = mkA "temporário" ; --*
lin impermeable_A = mkA "impermeável" ; --*
lin impersonal_1_A = mkA "impessoal" ; --*
lin impersonal_2_A = mkA "impessoal" ; --*
lin impersonate_1_V2 = variants {mkV2 (mkV "personificar") ; mkV2 (mkV "representar") ; mkV2 (mkV "retratar") ; } ; --*
lin impersonate_2_V2 = mkV2 (mkV "imitar") ; --*
lin impersonate_3_V2 = mkV2 (mkV "posar") ; --*
lin impersonation_1_N = variants {mkN "caricatura" ; mkN "Caricatura" ; mkN "vinheta" ; } ; --*
lin impersonation_3_N = variants {mkN "imitação" ; mkN "personificação" ; } ; --*
lin impertinence_1_N = variants {mkN "descaramento" ; mkN "impertinência" ; mkN "insolência" ; } ; --*
lin impertinence_2_N = variants {mkN "atrevimento" ; mkN "imprudência" ; mkN "insolência" ; } ; --*
lin impertinent_1_A = variants {mkA "atrevido" ; mkA "impertinente" ; } ; --*
lin impertinent_3_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin impetigo_N = mkN "impetigo" ; --*
lin impetuosity_N = mkN "impetuosidade" ; --*
lin impetuous_1_A = mkA "tumultuante" ; --*
lin impetuous_2_A = mkA "impetuoso" ; --*
lin impetuousness_N = mkN "impetuosidade" ; --*
lin impetus_1_N = variants {mkN "arrancada" ; mkN "impulsão" ; } ; --*
lin impetus_2_N = variants {mkN "arranco" ; mkN "ímpeto" ; mkN "impulso" ; } ; --*
lin impingement_1_N = mkN "usurpação" ; --*
lin impish_A = variants {mkA "bagunceiro" ; mkA "sapeca" ; } ; --*
lin implacable_A = mkA "implacável" ; --*
lin implant_1_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "embutir") ; mkV2 (mkV "encaixar") ; mkV2 (mkV "implantar") ; } ; --*
lin implant_3_V2 = variants {mkV2 (mkV "implantar") ; mkV2 (mkV "plantar") ; } ; --*
lin implant_N = mkN "implantação" ; --*
lin implausible_A = mkA "inverossímil" ; --*
lin implement_1_V2 = mkV2 (mkV "implementar") ; --*
lin implement_2_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "forçar") ; } ; --*
lin implement_3_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin implementation_1_N = variants {mkN "cumprimento" ; mkN "execução" ; mkN "Implementação" ; mkN "out" ; } ; --*
lin implementation_2_N = variants {mkN "execução" ; mkN "implementação" ; mkN "realização" ; } ; --*
lin implement_N = variants {mkN "ferramenta" ; mkN "instrumento" ; } ; --*
lin implicate_1_V2 = mkV2 (mkV "envolver") ; --*
lin implicate_2_V2 = variants {mkV2 (mkV "enredar") ; mkV2 (mkV "entranhar") ; } ; --*
lin implication_1_N = variants {mkN "acarretamento" ; mkN "dedução" ; } ; --*
lin implication_2_N = variants {mkN "importe" ; mkN "significado" ; } ; --*
lin implication_4_N = variants {mkN "implicação" ; mkN "implication" ; mkN "relation" ; } ; --*
lin implication_5_N = mkN "envolvimento" ; --*
lin implicit_1_A = mkA "implícito" ; --*
lin implicit_2_A = mkA "implícito" ; --*
lin implore_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin imply_1_V2 = variants {mkV2 (mkV "conotar") ; mkV2 (mkV "implicar") ; } ; --*
lin imply_1_VS = variants {mkVS (mkV "conotar") ; mkVS (mkV "implicar") ; } ; --*
lin imply_4_V2 = mkV2 (mkV "incriminar") ; --*
lin imply_4_VS = mkVS (mkV "incriminar") ; --*
lin impolite_A = variants {mkA "impolido" ; mkA "indelicado" ; } ; --*
lin import_1_N = mkN "importação" ; --*
lin import_1_V2 = mkV2 (mkV "importar") ; --*
lin import_2_V2 = mkV2 (mkV "importar") ; --*
lin import_3_N = variants {mkN "intenção" ; mkN "significação" ; mkN "significado" ; } ; --*
lin import_3_V2 = mkV2 (mkV "significar") ; --*
lin import_4_N = variants {mkN "importe" ; mkN "significado" ; } ; --*
lin import_5_N = variants {mkN "consequência" ; mkN "importância" ; } ; --*
lin importance_1_N = variants {mkN "importância" ; mkN "magnitude" ; } ; --*
lin importance_2_N = mkN "importância" ; --*
lin important_1_A = variants {mkA "import" ; mkA "importante" ; } ; --*
lin important_2_A = variants {mkA "importante" ; mkA "significante" ; mkA "significativo" ; } ; --*
lin important_3_A = variants {mkA "crítico" ; mkA "crucial" ; mkA "importante" ; } ; --*
lin important_4_A = mkA "importante" ; --*
lin important_5_A = mkA "importante" ; --*
lin importation_1_N = mkN "importação" ; --*
lin importation_2_N = mkN "importação" ; --*
lin importing_N = mkN "importação" ; --*
lin importunate_A = mkA "importuno" ; --*
lin importune_V2 = mkV2 (mkV "insistir") ; --*
lin impose_1_V2 = variants {mkV2 (mkV "impor") ; mkV2 (mkV "obrigar") ; } ; --*
lin impose_2_V2 = variants {mkV2 (mkV "ditar") ; mkV2 (mkV "down") ; mkV2 (mkV "impor") ; mkV2 (mkV "infligir") ; } ; --*
lin impose_3_V2 = mkV2 (mkV "arrecadar") ; --*
lin imposing_1_A = variants {mkA "impo" ; mkA "nobre" ; } ; --*
lin imposing_2_A = mkA "distinto" ; --*
lin imposition_2_N = mkN "imposição" ; --*
lin impossibility_1_N = mkN "impossibilidade" ; --*
lin impossible_1_A = mkA "impossível" ; --*
lin impossible_2_A = variants {mkA "impossível" ; mkA "incrível" ; mkA "inimaginável" ; mkA "of" ; } ; --*
lin impossible_3_A = variants {mkA "inaceitável" ; mkA "intolerável" ; } ; --*
lin imposter_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin impostor_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin impotence_1_N = mkN "impotência" ; --*
lin impotent_1_A = variants {mkA "impotente" ; mkA "ineficaz" ; } ; --*
lin impound_1_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "confiscar") ; } ; --*
lin impoverish_1_V2 = mkV2 (mkV "empobrecer") ; --*
lin impoverish_2_V2 = mkV2 (mkV "privar") ; --*
lin impoverishment_1_N = variants {mkN "empobrecimento" ; mkN "miséria" ; mkN "pobreza" ; mkN "Pobreza" ; } ; --*
lin impoverishment_2_N = mkN "empobrecimento" ; --*
lin impracticable_A = variants {mkA "impraticável" ; mkA "não" ; } ; --*
lin impractical_1_A = variants {mkA "impraticável" ; mkA "inviável" ; } ; --*
lin impractical_2_A = mkA "visionário" ; --*
lin imprecate_1_V2 = mkV2 (mkV "amaldiçoar") ; --*
lin imprecate_2_V2 = variants {mkV2 (mkV "desbocar") ; mkV2 (mkV "insultar") ; mkV2 (mkV "xingar") ; } ; --*
lin imprecation_1_N = variants {mkN "imprecação" ; mkN "maldição" ; } ; --*
lin imprecise_A = mkA "impreciso" ; --*
lin impregnability_N = mkN "invulnerabilidade" ; --*
lin impregnable_1_A = variants {mkA "inatacável" ; mkA "inviolável" ; mkA "seguro" ; } ; --*
lin impregnate_2_V2 = mkV2 (mkV "impregnar") ; --*
lin impregnate_3_V2 = mkV2 (mkV "emprenhar") ; --*
lin impregnate_4_V2 = variants {mkV2 (mkV "emprenhar") ; mkV2 (mkV "up") ; } ; --*
lin impregnation_3_N = variants {mkN "fecundação" ; mkN "fertilização" ; } ; --*
lin impresario_N = variants {mkN "divulgador" ; mkN "empresário" ; mkN "promoter" ; } ; --*
lin impress_1_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "comover") ; mkV2 (mkV "impressionar") ; } ; --*
lin impress_2_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "impressionar") ; } ; --*
lin impress_3_V2 = mkV2 (mkV "impressionar") ; --*
lin impress_4_V2 = mkV2 (mkV "imprimir") ; --*
lin impress_5_V2 = mkV2 (mkV "imprimir") ; --*
lin impression_1_N = variants {mkN "crença" ; mkN "ideia" ; mkN "idéia" ; mkN "impressão" ; mkN "opinião" ; } ; --*
lin impression_2_N = variants {mkN "impressao" ; mkN "impressão" ; } ; --*
lin impression_3_N = variants {mkN "imagem" ; mkN "picture" ; } ; --*
lin impression_4_N = mkN "impressão" ; --*
lin impression_5_N = mkN "selo" ; --*
lin impression_6_N = variants {mkN "edição" ; mkN "impressão" ; mkN "publicação" ; } ; --*
lin impressionable_A = mkA "impressionável" ; --*
lin impressionism_N = variants {mkN "impressionismo" ; mkN "Impressionismo" ; } ; --*
lin impressionist_A = mkA "impressionista" ; --*
lin impressionistic_2_A = mkA "impressionista" ; --*
lin impressive_1_A = mkA "impressionante" ; --*
lin impressive_2_A = mkA "impressionante" ; --*
lin impress_N = variants {mkN "imprima" ; mkN "requisação" ; } ; --*
lin imprimatur_N = variants {mkN "aprovação" ; mkN "autorização" ; mkN "consentimento" ; mkN "Imprimatur" ; mkN "sanção" ; } ; --*
lin imprint_2_N = mkN "impressão" ; --*
lin imprint_2_V2 = mkV2 (mkV "imprimir") ; --*
lin imprint_4_N = mkN "impressão" ; --*
lin imprint_5_N = mkN "impressão" ; --*
lin imprinting_N = mkN "impressão" ; --*
lin imprison_1_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin imprison_2_V2 = mkV2 (mkV "aprisionar") ; --*
lin imprisonment_1_N = mkN "encarceramento" ; --*
lin imprisonment_2_N = mkN "cativeiro" ; --*
lin imprisonment_3_N = mkN "aprisionamento" ; --*
lin improbable_1_A = mkA "improvável" ; --*
lin improbable_2_A = mkA "improvável" ; --*
lin improbable_3_A = mkA "improvável" ; --*
lin impromptu_Adv = variants {mkAdv "de" ; mkAdv "espontaneamente" ; mkAdv "lib" ; mkAdv "libitum" ; } ; --*
lin impromptu_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin improvement_1_N = variants {mkN "melhoria" ; mkN "progresso" ; } ; --*
lin improvement_2_N = variants {mkN "melhoramento" ; mkN "melhoria" ; } ; --*
lin improvement_3_N = mkN "melhora" ; --*
lin improver_2_N = variants {mkN "adição" ; mkN "melhoria" ; } ; --*
lin improve_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "melhorar") ; } ; --*
lin improve_V = mkV "melhorar" ; --*
lin improvidence_N = mkN "imprevidência" ; --*
lin improvisation_3_N = mkN "Improvisação" ; --*
lin improvise_1_V2 = mkV2 (mkV "improvisar") ; --*
lin improvise_1_V = mkV "improvisar" ; --*
lin improvise_2_V = mkV "improvisar" ; --*
lin imprudence_N = mkN "imprudência" ; --*
lin imprudent_1_A = mkA "imprudente" ; --*
lin imprudent_2_A = mkA "imprudente" ; --*
lin impudence_1_N = variants {mkN "descaramento" ; mkN "impertinência" ; mkN "insolência" ; } ; --*
lin impudence_2_N = variants {mkN "atrevimento" ; mkN "imprudência" ; mkN "insolência" ; } ; --*
lin impudent_1_A = mkA "insolente" ; --*
lin impudent_2_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin impulse_1_N = mkN "impulso" ; --*
lin impulse_2_N = variants {mkN "capricho" ; mkN "caprichoso" ; mkN "desejo" ; mkN "fantasia" ; mkN "impertinência" ; } ; --*
lin impulse_4_N = mkN "pulsação" ; --*
lin impulse_5_N = variants {mkN "arranco" ; mkN "ímpeto" ; mkN "impulso" ; } ; --*
lin impulse_6_N = variants {mkN "impulso" ; mkN "Impulso" ; } ; --*
lin impulsion_1_N = variants {mkN "arrancada" ; mkN "impulsão" ; } ; --*
lin impulsion_2_N = variants {mkN "arranco" ; mkN "ímpeto" ; mkN "impulso" ; } ; --*
lin impulsive_1_A = mkA "impulsivo" ; --*
lin impulsive_2_A = mkA "impulsivo" ; --*
lin impulsive_5_A = mkA "tumultuante" ; --*
lin impunity_N = mkN "impunidade" ; --*
lin impurity_1_N = mkN "impureza" ; --*
lin impurity_2_N = mkN "impureza" ; --*
lin imputation_1_N = mkN "imputação" ; --*
lin imputation_2_N = mkN "imputação" ; --*
lin impute_1_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "imputar") ; } ; --*
lin impute_2_V2 = mkV2 (mkV "atribuir") ; --*
lin in_1_N = variants {mkN "alfândega" ; mkN "polegada" ; } ; --*
lin in_2_N = variants {mkN "índio" ; mkN "number" ; } ; --*
lin in_3_N = variants {mkN "Indiana" ; mkN "State" ; } ; --*
lin inability_1_N = mkN "incapacidade" ; --*
lin inability_2_N = mkN "incapacidade" ; --*
lin inaccessible_1_A = variants {mkA "inacessível" ; mkA "que" ; } ; --*
lin inaccessible_2_A = variants {mkA "inacessível" ; mkA "não" ; } ; --*
lin inactivate_1_V2 = variants {mkV2 (mkV "inactivar") ; mkV2 (mkV "inativar") ; } ; --*
lin inactivate_2_V2 = variants {mkV2 (mkV "desactivar") ; mkV2 (mkV "desativar") ; mkV2 (mkV "inativar") ; } ; --*
lin inactive_10_A = variants {mkA "estático" ; mkA "quedo" ; } ; --*
lin inactive_6_A = variants {mkA "inativo" ; mkA "passivo" ; } ; --*
lin inactive_9_A = mkA "inativo" ; --*
lin inactiveness_2_N = mkN "inércia" ; --*
lin inactivity_2_N = mkN "inércia" ; --*
lin inactivity_3_N = mkN "ociosidade" ; --*
lin inadequacy_1_N = variants {mkN "carência" ; mkN "deficiência" ; } ; --*
lin inadequacy_2_N = mkN "insuficiência" ; --*
lin inadequacy_3_N = mkN "inadequação" ; --*
lin inadequate_1_A = mkA "inadequado" ; --*
lin inadequate_2_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin inadmissible_A = mkA "inadmissível" ; --*
lin in_advance_Adv = variants {mkAdv "advance" ; mkAdv "antecipadamente" ; } ; --*
lin inadvertence_1_N = mkN "desatenção" ; --*
lin inadvisable_1_A = mkA "desaconselhável" ; --*
lin inadvisable_2_A = mkA "desaconselhável" ; --*
lin inalienable_1_A = mkA "inalienável" ; --*
lin inalienable_2_A = mkA "inalienável" ; --*
lin inanimate_1_A = mkA "inanimado" ; --*
lin inanimate_2_A = mkA "inanimado" ; --*
lin inanition_1_N = variants {mkN "lassidão" ; mkN "letargia" ; } ; --*
lin inappropriate_1_A = mkA "inapropriado" ; --*
lin inappropriate_2_A = variants {mkA "inapropriado" ; mkA "incompatível" ; mkA "or" ; } ; --*
lin inapt_A = mkA "desgracioso" ; --*
lin inaugural_2_A = mkA "inaugural" ; --*
lin inaugural_2_N = mkN "inauguração" ; --*
lin inaugurate_1_V2 = variants {mkV2 (mkV "inaugurar") ; mkV2 (mkV "off") ; } ; --*
lin inaugurate_2_V2 = mkV2 (mkV "inaugurar") ; --*
lin inaugurate_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inaugurar") ; mkV2 (mkV "introduzir") ; } ; --*
lin inauguration_1_N = variants {mkN "inauguração" ; mkN "posse" ; } ; --*
lin inauguration_2_N = mkN "inauguração" ; --*
lin inauspicious_3_A = variants {mkA "agourento" ; mkA "ameaçador" ; } ; --*
lin inborn_1_A = variants {mkA "congénito" ; mkA "congênito" ; mkA "inata" ; mkA "inato" ; } ; --*
lin inbreeding_N = mkN "endogamia" ; --*
lin inbuilt_A = mkA "inerente" ; --*
lin incandescence_1_N = mkN "incandescência" ; --*
lin incandescent_1_A = mkA "incandescente" ; --*
lin incandescent_2_A = mkA "incandescente" ; --*
lin incantation_N = variants {mkN "encantamento" ; mkN "feitiço" ; } ; --*
lin incapability_2_N = mkN "incapacidade" ; --*
lin incapable_4_A = variants {mkA "incapaz" ; mkA "incompetente" ; mkA "to" ; } ; --*
lin incapable_of_1_A2 = mkA2 (mkA "incapaz") noPrep ; --*
lin incapable_of_3_A2 = mkA2 (mkA "incapaz") noPrep ; --*
lin incapacitate_1_V2 = variants {mkV2 (mkV "desabilitar") ; mkV2 (mkV "incapacitar") ; } ; --*
lin incapacity_1_N = mkN "incapacidade" ; --*
lin incapacity_2_N = mkN "incapacidade" ; --*
lin incarcerate_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin incarceration_N = mkN "cativeiro" ; --*
lin incarnate_1_A = mkA "corporativo" ; --*
lin incarnate_1_V2 = mkV2 (mkV "encarnar") ; --*
lin incarnate_2_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "representar") ; } ; --*
lin incarnation_1_N = mkN "personificação" ; --*
lin incarnation_3_N = mkN "encarnação" ; --*
lin incarnation_4_N = variants {mkN "encarnação" ; mkN "personificação" ; } ; --*
lin incaution_N = mkN "imprudência" ; --*
lin incendiarism_N = variants {mkN "fogo" ; mkN "incêndio" ; } ; --*
lin incendiary_1_A = mkA "incendiário" ; --*
lin incendiary_1_N = mkN "incendiário" ; --*
lin incendiary_2_N = variants {mkN "bomb" ; mkN "bomba" ; } ; --*
lin incendiary_3_A = mkA "incendiário" ; --*
lin incense_1_N = mkN "incenso" ; --*
lin incense_1_V2 = mkV2 (mkV "incensar") ; --*
lin incense_2_V2 = variants {mkV2 (mkV "exasperar") ; mkV2 (mkV "irritar") ; } ; --*
lin incentive_1_N = mkN "incentivo" ; --*
lin incentive_2_N = variants {mkN "abono" ; mkN "bônus" ; mkN "incentivo" ; } ; --*
lin inception_N = variants {mkN "começo" ; mkN "gênese" ; mkN "iniciação" ; mkN "origem" ; } ; --*
lin incertitude_N = variants {mkN "dúvida" ; mkN "incerteza" ; } ; --*
lin incessant_A = variants {mkA "constante" ; mkA "contínuo" ; mkA "incessante" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin incest_N = mkN "incesto" ; --*
lin inch_1_N = variants {mkN "alfândega" ; mkN "polegada" ; } ; --*
lin inch_2_N = variants {mkN "inch" ; mkN "polegada" ; } ; --*
lin inchoate_A = mkA "incipiente" ; --*
lin inchon_1_PN = mkPN "Incheon" ; --*
lin inch_V = variants {mkV "aproximar" ; mkV "aproximar-se" ; } ; --*
lin incidence_1_N = variants {mkN "incidence" ; mkN "incidência" ; } ; --*
lin incidence_2_N = mkN "incidência" ; --*
lin incident_1_N = variants {mkN "evento" ; mkN "incidente" ; } ; --*
lin incident_2_N = mkN "incidente" ; --*
lin incidental_1_N = variants {mkN "despesa" ; mkN "expense" ; } ; --*
lin incidental_2_A = mkA "não" ; --*
lin incidental_3_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin incinerate_1_V2 = variants {mkV2 (mkV "calcinar") ; mkV2 (mkV "incinerar") ; mkV2 (mkV "reduzir") ; } ; --*
lin incinerate_2_V2 = variants {mkV2 (mkV "incinerar") ; mkV2 (mkV "queimar") ; } ; --*
lin incineration_N = variants {mkN "incineração" ; mkN "Incinerador" ; } ; --*
lin incinerator_N = variants {mkN "incinerador" ; mkN "incineradores" ; } ; --*
lin incipiency_1_N = mkN "incipiência" ; --*
lin incipient_A = mkA "incipiente" ; --*
lin incision_2_N = variants {mkN "incisão" ; mkN "incision" ; } ; --*
lin incisive_1_A = mkA "penetrante" ; --*
lin incisiveness_N = mkN "incisividade" ; --*
lin incisor_N = mkN "incisivo" ; --*
lin incitation_1_N = mkN "provocação" ; --*
lin incite_1_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "incentivar") ; mkV2 (mkV "motivar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "provocar") ; } ; --*
lin incite_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "provocar") ; mkV2 (mkV "reptar") ; mkV2 (mkV "up") ; } ; --*
lin incite_3_V2 = variants {mkV2 (mkV "incitar") ; mkV2 (mkV "on") ; mkV2 (mkV "provocar") ; } ; --*
lin incitement_2_N = mkN "provocação" ; --*
lin incitement_3_N = mkN "provocação" ; --*
lin incitement_4_N = variants {mkN "admoestação" ; mkN "repreensão" ; } ; --*
lin inclemency_2_N = variants {mkN "dureza" ; mkN "rigor" ; } ; --*
lin inclination_1_N = mkN "tendência" ; --*
lin inclination_3_N = variants {mkN "inclinação" ; mkN "of" ; } ; --*
lin inclination_5_N = mkN "tendência" ; --*
lin inclination_6_N = mkN "inclinação" ; --*
lin inclination_7_N = mkN "tendência" ; --*
lin inclination_8_N = mkN "inclinação" ; --*
lin incline_1_N = variants {mkN "costa" ; mkN "declive" ; mkN "declives" ; mkN "encosta" ; mkN "ladeira" ; mkN "subida" ; } ; --*
lin incline_1_V = variants {mkV "given" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; } ; --*
lin incline_2_N = variants {mkN "cãimbra" ; mkN "pendência" ; mkN "rampa" ; } ; --*
lin incline_3_V2 = mkV2 (mkV "inclinar") ; --*
lin incline_4_V = variants {mkV "declivar" ; mkV "inclinar" ; } ; --*
lin incline_5_V = mkV "inclinar" ; --*
lin incline_6_V2V = variants {mkV2V (mkV "dispor") ; mkV2V (mkV "inclinar") ; mkV2V (mkV "predispor") ; } ; --*
lin inclined_1_A = mkA "inclinado" ; --*
lin inclined_to_A2 = variants {mkA2 (mkA "inclinado") noPrep ; mkA2 (mkA "ter") noPrep ; } ; --*
lin inclinometer_3_N = mkN "inclinômetro" ; --*
lin inclose_2_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin include_1_V2 = variants {mkV2 (mkV "abarcar") ; mkV2 (mkV "conter") ; mkV2 (mkV "incluir") ; } ; --*
lin include_2_V2 = mkV2 (mkV "incluir") ; --*
lin include_3_V2 = mkV2 (mkV "incluir") ; --*
lin include_4_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "in") ; } ; --*
lin inclusion_1_N = mkN "inclusão" ; --*
lin inclusion_2_N = mkN "inclusão" ; --*
lin inclusion_4_N = mkN "inclusão" ; --*
lin inclusive_A = mkA "inclusivo" ; --*
lin incognito_A = mkA "incógnito" ; --*
lin income_N = variants {mkN "ingresso" ; mkN "provento" ; mkN "Receita" ; mkN "renda" ; mkN "Renda" ; mkN "rendimento" ; mkN "rendimentos" ; } ; --*
lin income_tax_N = mkN "tax" ; --*
lin incommensurable_1_A = mkA "incomensurável" ; --*
lin incommensurable_2_A = mkA "incomensurável" ; --*
lin incommode_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin incomparable_1_A = mkA "incomparável" ; --*
lin incompatibility_1_N = variants {mkN "exclusiveness" ; mkN "incompatibilidade" ; } ; --*
lin incompatible_1_A = mkA "incompatível" ; --*
lin incompatible_2_A = mkA "incompatível" ; --*
lin incompatible_3_A = mkA "incompatível" ; --*
lin incompatible_4_A = mkA "incompatível" ; --*
lin incompatible_5_A = mkA "incompatível" ; --*
lin incompatible_6_A = mkA "incompatível" ; --*
lin incompatible_7_A = mkA "incompatível" ; --*
lin incompatible_8_A = variants {mkA "inapropriado" ; mkA "incompatível" ; mkA "or" ; } ; --*
lin incompatible_9_A = mkA "incompatível" ; --*
lin incompetence_1_N = mkN "incompetência" ; --*
lin incompetency_N = mkN "incompetência" ; --*
lin incompetent_2_A = mkA "incompetente" ; --*
lin incompetent_3_A = mkA "incompetente" ; --*
lin incompetent_4_A = mkA "incompetente" ; --*
lin incompetent_5_A = variants {mkA "incapaz" ; mkA "incompetente" ; mkA "to" ; } ; --*
lin incomplete_1_A = mkA "incompleto" ; --*
lin incomplete_2_A = mkA "incompleto" ; --*
lin incomprehensibility_N = mkN "incompreensibilidade" ; --*
lin incomprehensible_1_A = variants {mkA "incompreensível" ; mkA "inexplicável" ; } ; --*
lin incomprehensible_2_A = mkA "incompreensível" ; --*
lin incomputable_A = mkA "inestimável" ; --*
lin inconceivable_A = variants {mkA "impossível" ; mkA "incrível" ; mkA "inimaginável" ; mkA "of" ; } ; --*
lin inconclusive_A = mkA "inconclusivo" ; --*
lin incongruous_A = mkA "incongruente" ; --*
lin inconsiderate_1_A = mkA "inconsiderado" ; --*
lin inconsiderate_2_A = mkA "inconsiderado" ; --*
lin inconsistency_1_N = variants {mkN "exclusiveness" ; mkN "incompatibilidade" ; } ; --*
lin inconsistency_2_N = mkN "inconsistência" ; --*
lin inconsistent_1_A = mkA "inconsistente" ; --*
lin inconsistent_2_A = mkA "inconsistente" ; --*
lin inconsistent_3_A = mkA "discrepante" ; --*
lin inconsolable_1_A = mkA "inconsolável" ; --*
lin inconspicuous_A = mkA "invisível" ; --*
lin inconstancy_1_N = mkN "inconstância" ; --*
lin inconstancy_2_N = variants {mkN "inconstância" ; mkN "mutabilidade" ; } ; --*
lin inconstant_A = mkA "inconstante" ; --*
lin incontestable_1_A = mkA "que" ; --*
lin incontestable_2_A = mkA "incontestável" ; --*
lin incontinence_1_N = mkN "incontinência" ; --*
lin incontinent_A = mkA "incontinente" ; --*
lin incontrovertible_1_A = variants {mkA "incontestável" ; mkA "irrefutável" ; } ; --*
lin incontrovertible_2_A = mkA "demonstrável" ; --*
lin inconvenience_3_N = variants {mkN "inconveniência" ; mkN "inconveniente" ; } ; --*
lin inconvenience_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin inconvenient_1_A = mkA "incoveniente" ; --*
lin incorporate_1_V2 = variants {mkV2 (mkV "incorporada") ; mkV2 (mkV "incorporar") ; mkV2 (mkV "integrar") ; } ; --*
lin incorporate_2_V2 = variants {mkV2 (mkV "abranger") ; mkV2 (mkV "conter") ; } ; --*
lin incorporate_4_V2 = mkV2 (mkV "incorporar") ; --*
lin incorporate_A = mkA "incorporado" ; --*
lin incorporated_1_A = mkA "incorporado" ; --*
lin incorporated_2_A = mkA "corporativo" ; --*
lin incorporation_3_N = mkN "incorporação" ; --*
lin incorporeal_A = mkA "imaterial" ; --*
lin incorrect_1_A = variants {mkA "errado" ; mkA "incorreto" ; } ; --*
lin incorrect_2_A = variants {mkA "incorreto" ; mkA "inexato" ; } ; --*
lin incorrect_3_A = mkA "incorreto" ; --*
lin incorrect_4_A = variants {mkA "equivocado" ; mkA "errado" ; } ; --*
lin incorrigible_1_A = mkA "incorrigível" ; --*
lin increase_1_N = mkN "aumento" ; --*
lin increase_2_N = variants {mkN "aumento" ; mkN "crescimento" ; } ; --*
lin increase_3_N = variants {mkN "acréscimo" ; mkN "aumento" ; mkN "crescimento" ; mkN "incremento" ; } ; --*
lin increase_4_N = variants {mkN "acrescentamento" ; mkN "aumento" ; } ; --*
lin increase_5_N = mkN "melhoramento" ; --*
lin increase_V2 = variants {mkV2 (mkV "ampliar") ; mkV2 (mkV "aumentar") ; mkV2 (mkV "progredir") ; } ; --*
lin increase_V = variants {mkV "acrescentar" ; mkV "aumentar" ; mkV "crescer" ; } ; --*
lin increasing_1_A = mkA "crescente" ; --*
lin increasing_2_A = mkA "crescente" ; --*
lin increasingly_AdA = variants {mkAdA "and" ; mkAdA "crescentemente" ; mkAdA "progressivamente" ; } ; --*
lin increasingly_Adv = variants {mkAdv "and" ; mkAdv "crescentemente" ; mkAdv "progressivamente" ; } ; --*
lin increasingly_AdV = variants {mkAdV "and" ; mkAdV "crescentemente" ; mkAdV "progressivamente" ; } ; --*
lin incredible_A = variants {mkA "inacreditáveis" ; mkA "inacreditável" ; mkA "incríveis" ; mkA "incrível" ; } ; --*
lin incredulity_N = variants {mkN "descrença" ; mkN "dúvida" ; mkN "rejection" ; } ; --*
lin increment_1_N = variants {mkN "acréscimo" ; mkN "aumento" ; mkN "crescimento" ; mkN "incremento" ; } ; --*
lin increment_2_N = variants {mkN "acrescentamento" ; mkN "aumento" ; } ; --*
lin incremental_A = mkA "incremental" ; --*
lin incriminate_1_V2 = mkV2 (mkV "incriminar") ; --*
lin incriminate_2_V2 = variants {mkV2 (mkV "acusar") ; mkV2 (mkV "arguir") ; mkV2 (mkV "criminar") ; mkV2 (mkV "incriminar") ; mkV2 (mkV "inculpar") ; } ; --*
lin incrustation_2_N = mkN "crosta" ; --*
lin incubate_1_V2 = mkV2 (mkV "incubar") ; --*
lin incubate_1_V = mkV "incubar" ; --*
lin incubate_2_V2 = mkV2 (mkV "eclodir") ; --*
lin incubation_3_N = mkN "incubação" ; --*
lin incubator_N = mkN "incubadora" ; --*
lin incubus_1_N = variants {mkN "Incubo" ; mkN "íncubo" ; mkN "Íncubo" ; } ; --*
lin incubus_2_N = mkN "pesadelo" ; --*
lin inculcate_V2 = mkV2 (mkV "inculcar") ; --*
lin inculpate_V2 = mkV2 (mkV "incriminar") ; --*
lin incumbency_1_N = variants {mkN "legislatura" ; mkN "of" ; mkN "titularidade" ; } ; --*
lin incumbency_2_N = mkN "incumbência" ; --*
lin incumbent_N = variants {mkN "incumbente" ; mkN "titular" ; } ; --*
lin incur_1_V2 = mkV2 (mkV "incorrer") ; --*
lin incur_2_V2 = variants {mkV2 (mkV "incorrer") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin incurable_1_A = mkA "incurável" ; --*
lin incursion_2_N = mkN "invasão" ; --*
lin incurvation_1_N = variants {mkN "concavidade" ; mkN "shape" ; } ; --*
lin incus_N = mkN "bigorna" ; --*
lin indebted_2_A = mkA "endividado" ; --*
lin indebtedness_1_N = variants {mkN "dívida" ; mkN "endividamento" ; mkN "obligation" ; mkN "obrigação" ; mkN "passivo" ; } ; --*
lin indecent_1_A = variants {mkA "indecente" ; mkA "inoportuno" ; mkA "maladequado" ; } ; --*
lin indecent_2_A = mkA "indecente" ; --*
lin indecent_3_A = mkA "indecente" ; --*
lin indecision_1_N = mkN "indecisão" ; --*
lin indecision_2_N = mkN "indecisão" ; --*
lin indecisiveness_1_N = mkN "indecisão" ; --*
lin indecisiveness_2_N = mkN "indecisão" ; --*
lin indecorous_2_A = variants {mkA "indecente" ; mkA "inoportuno" ; mkA "maladequado" ; } ; --*
lin indeed_2_Adv = variants {mkAdv "de" ; mkAdv "realmente" ; } ; --*
lin indeed_2_AdV = variants {mkAdV "de" ; mkAdV "realmente" ; } ; --*
lin indefatigable_A = variants {mkA "incansável" ; mkA "inesgotável" ; mkA "infatigável" ; } ; --*
lin indefensible_2_A = mkA "indefensável" ; --*
lin indefensible_3_A = mkA "insustentável" ; --*
lin indefinable_2_A = variants {mkA "indescritível" ; mkA "inefável" ; } ; --*
lin indefinite_2_A = mkA "indefinido" ; --*
lin indemnification_1_N = mkN "indemnizações" ; --*
lin indemnify_1_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "indenizar") ; } ; --*
lin indemnify_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "indemnizar") ; mkV2 (mkV "indenizar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; } ; --*
lin indemnity_1_N = variants {mkN "seguro" ; mkN "seguros" ; } ; --*
lin indemnity_3_N = mkN "indemnizações" ; --*
lin indene_N = mkN "indeno" ; --*
lin indent_1_V2 = mkV2 (mkV "indentar") ; --*
lin indent_2_N = mkN "indentação" ; --*
lin indent_2_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; } ; --*
lin indent_3_V2 = mkV2 (mkV "amassar") ; --*
lin indentation_3_N = mkN "indentação" ; --*
lin indenture_4_N = mkN "indentação" ; --*
lin independence_1_N = variants {mkN "independência" ; mkN "liberdade" ; } ; --*
lin independence_2_N = mkN "independência" ; --*
lin independent_1_A = mkA "independente" ; --*
lin independent_2_A = variants {mkA "autônoma" ; mkA "autonômico" ; mkA "autônomo" ; mkA "independente" ; mkA "soberano" ; } ; --*
lin independent_2_N = variants {mkN "freelancer" ; mkN "Free-lancer" ; mkN "lance" ; mkN "person" ; } ; --*
lin independent_4_A = mkA "independente" ; --*
lin indescribable_A = variants {mkA "indescritível" ; mkA "inefável" ; } ; --*
lin indestructible_1_A = mkA "indestrutível" ; --*
lin indestructible_2_A = mkA "perdurável" ; --*
lin index_1_V2 = variants {mkV2 (mkV "indexar") ; mkV2 (mkV "pôr") ; } ; --*
lin index_2_N = variants {mkN "índice" ; mkN "number" ; } ; --*
lin index_3_N = mkN "expoente" ; --*
lin index_3_V2 = mkV2 (mkV "indexar") ; --*
lin index_4_N = mkN "índices" ; --*
lin index_5_N = variants {mkN "dedo" ; mkN "finger" ; mkN "índex" ; mkN "indicador" ; } ; --*
lin indexation_N = mkN "indexação" ; --*
lin indexing_N = mkN "indexação" ; --*
lin indian_1_A = variants {mkA "hindu" ; mkA "indiano" ; } ; --*
lin indian_2_A = variants {mkA "American" ; mkA "ameríndio" ; mkA "da" ; mkA "indígena" ; } ; --*
lin indiana_1_PN = variants {mkPN "Indiana" ; mkPN "State" ; } ; --*
lin indianapolis_PN = variants {mkPN "Indianapolis" ; mkPN "of" ; } ; --*
lin indianFem_2_N = variants {mkN "hindu" ; mkN "indiano" ; } ; --*
lin indianMasc_2_N = variants {mkN "hindu" ; mkN "indiano" ; } ; --*
lin indian_N = variants {mkN "índia" ; mkN "Indian" ; } ; --*
lin india_PN = variants {mkPN "India" ; mkPN "Índia" ; mkPN "of" ; } ; --*
lin indicate_1_V2 = variants {mkV2 (mkV "denotar") ; mkV2 (mkV "evidenciar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "sinalizar") ; mkV2 (mkV "sugerir") ; } ; --*
lin indicate_2_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "mostrar") ; } ; --*
lin indicate_4_V2 = mkV2 (mkV "indicar") ; --*
lin indicate_VS = variants {mkVS (mkV "assinalar") ; mkVS (mkV "indicar") ; } ; --*
lin indication_1_N = variants {mkN "agouro" ; mkN "indicação" ; mkN "indício" ; mkN "presságio" ; mkN "sinal" ; } ; --*
lin indication_2_N = mkN "denotação" ; --*
lin indication_5_N = variants {mkN "dado" ; mkN "leitura" ; mkN "reading" ; } ; --*
lin indicative_A = mkA "indicativo" ; --*
lin indicative_of_A2 = mkA2 (mkA "sugestivo") noPrep ; --*
lin indicator_1_N = variants {mkN "índice" ; mkN "number" ; } ; --*
lin indicator_3_N = mkN "indicadores" ; --*
lin indictment_2_N = mkN "acusação" ; --*
lin indie_1_N = mkN "Indie" ; --*
lin indifference_1_N = variants {mkN "apatia" ; mkN "indiferença" ; } ; --*
lin indifference_2_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin indifference_3_N = variants {mkN "apatia" ; mkN "indiferença" ; } ; --*
lin indifferent_1_A = variants {mkA "apático" ; mkA "indiferente" ; } ; --*
lin indifferent_2_A = mkA "indiferente" ; --*
lin indifferent_7_A = mkA "indiferente" ; --*
lin indifferent_8_A = variants {mkA "imparcial" ; mkA "indiferente" ; } ; --*
lin indifferent_9_A = variants {mkA "assim" ; mkA "indiferente" ; mkA "mais" ; } ; --*
lin indifferent_to_3_A2 = mkA2 (mkA "surdo") noPrep ; --*
lin indifferent_to_4_A2 = mkA2 (mkA "indiferente") noPrep ; --*
lin indigence_N = variants {mkN "indigência" ; mkN "miséria" ; } ; --*
lin indigenous_A = variants {mkA "endémico" ; mkA "endêmico" ; mkA "oriundo" ; } ; --*
lin indigenousness_N = mkN "endemismo" ; --*
lin indigent_A = mkA "indigente" ; --*
lin indigestion_N = variants {mkN "dispepsia" ; mkN "indigestão" ; mkN "stomach" ; mkN "upset" ; } ; --*
lin indignant_A = mkA "indignado" ; --*
lin indignation_N = variants {mkN "indignação" ; mkN "raiva" ; } ; --*
lin indignity_N = mkN "indignidade" ; --*
lin indigo_1_N = variants {mkN "anil" ; mkN "indigo" ; mkN "índigo" ; } ; --*
lin indigo_3_N = mkN "anil" ; --*
lin indirect_1_A = mkA "indireto" ; --*
lin indirect_2_A = mkA "indireto" ; --*
lin indirect_4_A = mkA "indireto" ; --*
lin indirect_5_A = mkA "indireto" ; --*
lin indiscreet_A = variants {mkA "imprudente" ; mkA "indiscreto" ; } ; --*
lin indiscretion_1_N = variants {mkN "indiscression" ; mkN "indiscrição" ; } ; --*
lin indiscriminate_1_A = mkA "indiscriminado" ; --*
lin indispensable_1_A = variants {mkA "essencial" ; mkA "imprescindível" ; mkA "indispensável" ; mkA "que" ; } ; --*
lin indispensable_2_A = variants {mkA "essencial" ; mkA "imprescindível" ; mkA "indispensável" ; } ; --*
lin indisposed_1_A = variants {mkA "com" ; mkA "indisposto" ; mkA "menstruada" ; mkA "the" ; } ; --*
lin indisposed_to_A2 = mkA2 (mkA "avesso") noPrep ; --*
lin indisposition_1_N = mkN "indisposição" ; --*
lin indisposition_2_N = variants {mkN "aversão" ; mkN "hesitação" ; } ; --*
lin indisputable_A = mkA "incontestável" ; --*
lin indissoluble_2_A = mkA "indissolúvel" ; --*
lin indistinct_A = mkA "indistinto" ; --*
lin indistinguishable_1_A = variants {mkA "idêntico" ; mkA "indistiguivel" ; mkA "que" ; } ; --*
lin indite_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "escrever") ; } ; --*
lin indium_N = variants {mkN "índio" ; mkN "number" ; } ; --*
lin individual_1_A = mkA "individual" ; --*
lin individual_1_N = variants {mkN "alguém" ; mkN "indivíduo" ; mkN "pessoa" ; mkN "ser" ; } ; --*
lin individual_2_N = variants {mkN "indivíduo" ; mkN "pessoa" ; } ; --*
lin individual_3_A = variants {mkA "de" ; mkA "individual" ; } ; --*
lin individualism_1_N = variants {mkN "individualidade" ; mkN "individualismo" ; mkN "personalidade" ; } ; --*
lin individualism_2_N = variants {mkN "individualismo" ; mkN "Individualismo" ; } ; --*
lin individualism_3_N = variants {mkN "faire" ; mkN "individualismo" ; } ; --*
lin individuality_1_N = variants {mkN "individualidade" ; mkN "individualismo" ; mkN "personalidade" ; } ; --*
lin individuality_2_N = variants {mkN "identidade" ; mkN "identity" ; } ; --*
lin individualize_1_V2 = mkV2 (mkV "individualizar") ; --*
lin individualize_2_V2 = mkV2 (mkV "personalizar") ; --*
lin indocile_A = mkA "indomável" ; --*
lin indoctrinate_V2 = mkV2 (mkV "indoutrinar") ; --*
lin indo_european_2_A = mkA "ariano" ; --*
lin indolence_N = variants {mkN "inércia" ; mkN "preguiça" ; } ; --*
lin indolent_1_A = variants {mkA "preguiçoso" ; mkA "vadio" ; mkA "vagaroso" ; } ; --*
lin indolent_2_A = mkA "indolente" ; --*
lin indomitability_N = mkN "invencibilidade" ; --*
lin indomitable_A = mkA "indomável" ; --*
lin indonesian_1_N = mkN "indonésio" ; --*
lin indonesian_2_N = variants {mkN "Indonesia" ; mkN "indonésio" ; } ; --*
lin indonesian_A = mkA "indonésio" ; --*
lin indonesia_PN = variants {mkPN "East" ; mkPN "Indonesia" ; mkPN "of" ; } ; --*
lin indoor_2_A = mkA "interno" ; --*
lin indorse_1_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "for") ; } ; --*
lin indorse_2_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "endossar") ; mkV2 (mkV "secundar") ; } ; --*
lin indorse_3_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "aprovar") ; } ; --*
lin indorse_4_V2 = mkV2 (mkV "endossar") ; --*
lin indrawn_A = variants {mkA "introvertido" ; mkA "reservado" ; } ; --*
lin indri_N = variants {mkN "brevicaudatus" ; mkN "indri" ; mkN "Indri" ; } ; --*
lin induce_3_V2 = variants {mkV2 (mkV "induzir") ; mkV2 (mkV "precipitar") ; } ; --*
lin induce_4_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "induzir") ; } ; --*
lin inducement_1_N = mkN "incentivo" ; --*
lin induce_V2V = mkV2V (mkV "induzir") ; --*
lin induct_1_V2 = mkV2 (mkV "empossar") ; --*
lin induct_3_V2 = mkV2 (mkV "induzir") ; --*
lin induct_5_V2 = mkV2 (mkV "introduzir") ; --*
lin inductee_2_N = mkN "recruta" ; --*
lin induction_1_N = mkN "iniciação" ; --*
lin induction_2_N = variants {mkN "indução" ; mkN "indutância" ; mkN "Indutância" ; } ; --*
lin induction_3_N = variants {mkN "generalização" ; mkN "Raciocínio" ; mkN "reasoning" ; } ; --*
lin induction_6_N = mkN "indução" ; --*
lin inductor_N = mkN "indutor" ; --*
lin indue_V2 = variants {mkV2 (mkV "dotar") ; mkV2 (mkV "investir") ; } ; --*
lin indulge_2_V2 = mkV2 (mkV "indulgir") ; --*
lin indulge_2_V = mkV "indulgir" ; --*
lin indulge_3_V = mkV "aproveitar" ; --*
lin indulge_4_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin indulgence_1_N = mkN "indulgência" ; --*
lin indulgence_2_N = mkN "indulgência" ; --*
lin indulgence_3_N = mkN "indulgência" ; --*
lin indulgence_4_N = variants {mkN "idiotice" ; mkN "tolice" ; } ; --*
lin indulgence_5_N = mkN "indulgência" ; --*
lin indulgent_1_A = mkA "indulgente" ; --*
lin indulgent_2_A = mkA "indulgente" ; --*
lin indulgent_3_A = variants {mkA "favorável" ; mkA "indulgente" ; mkA "partidário" ; } ; --*
lin industrial_1_A = mkA "industrial" ; --*
lin industrial_2_A = mkA "industrial" ; --*
lin industrial_3_A = mkA "industrial" ; --*
lin industrial_4_A = mkA "industrial" ; --*
lin industrialist_N = variants {mkN "industrial" ; mkN "industrialista" ; } ; --*
lin industrialization_1_N = variants {mkN "enterprise" ; mkN "industrialização" ; } ; --*
lin industrialize_1_V2 = mkV2 (mkV "industrializar") ; --*
lin industrious_1_A = variants {mkA "aplicado" ; mkA "assíduo" ; mkA "diligente" ; mkA "esforçado" ; mkA "laborioso" ; mkA "operoso" ; mkA "trabalhador" ; } ; --*
lin industrious_2_A = mkA "diligente" ; --*
lin industry_1_N = variants {mkN "empresa" ; mkN "indústria" ; } ; --*
lin industry_2_N = variants {mkN "indústria" ; mkN "manufatura" ; } ; --*
lin industry_3_N = mkN "diligência" ; --*
lin indweller_2_N = variants {mkN "habitante" ; mkN "morador" ; } ; --*
lin inebriate_1_V2 = variants {mkV2 (mkV "enebriar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "exultar") ; mkV2 (mkV "pink") ; } ; --*
lin inebriate_2_V2 = mkV2 (mkV "embriagar") ; --*
lin inebriate_3_V2 = variants {mkV2 (mkV "embriagar") ; mkV2 (mkV "enebriar") ; mkV2 (mkV "it") ; } ; --*
lin inebriate_N = variants {mkN "bêbado" ; mkN "beberrão" ; mkN "borracho" ; } ; --*
lin inebriation_1_N = variants {mkN "addiction" ; mkN "alcoolismo" ; mkN "Alcoolismo" ; } ; --*
lin inebriation_2_N = variants {mkN "bebedeira" ; mkN "ebriedade" ; mkN "embriaguez" ; } ; --*
lin inebriety_1_N = variants {mkN "bebedeira" ; mkN "ebriedade" ; mkN "embriaguez" ; } ; --*
lin ineffable_1_A = variants {mkA "indescritível" ; mkA "inefável" ; } ; --*
lin ineffable_2_A = mkA "inefável" ; --*
lin ineffective_1_A = variants {mkA "inútil" ; mkA "vão" ; } ; --*
lin ineffective_2_A = mkA "incapaz" ; --*
lin ineffectual_1_A = variants {mkA "inútil" ; mkA "vão" ; } ; --*
lin ineffectual_2_A = variants {mkA "fútil" ; mkA "inútil" ; mkA "nulidade" ; mkA "vão" ; } ; --*
lin ineffectual_3_A = mkA "incapaz" ; --*
lin inefficiency_N = mkN "ineficiência" ; --*
lin inefficient_1_A = mkA "ineficiente" ; --*
lin inelegant_A = mkA "deselegante" ; --*
lin ineligible_1_A = mkA "inelegível" ; --*
lin ineligible_2_A = mkA "inelegível" ; --*
lin ineluctable_A = variants {mkA "inevitável" ; mkA "inexorável" ; } ; --*
lin inept_1_A = mkA "desgracioso" ; --*
lin inept_2_A = mkA "incapaz" ; --*
lin inequality_N = mkN "desigualdade" ; --*
lin inequitable_A = mkA "injusto" ; --*
lin inert_1_A = mkA "inerte" ; --*
lin inert_3_A = mkA "inerte" ; --*
lin inertia_1_N = mkN "inércia" ; --*
lin inertia_2_N = mkN "inércia" ; --*
lin inertial_A = mkA "inercial" ; --*
lin inescapable_A = variants {mkA "inevitável" ; mkA "inexorável" ; } ; --*
lin inessential_N = variants {mkN "não" ; mkN "secundário" ; } ; --*
lin inestimable_A = mkA "inestimável" ; --*
lin inevitable_1_A = mkA "inevitável" ; --*
lin inevitable_2_A = variants {mkA "inevitável" ; mkA "inexorável" ; } ; --*
lin inexhaustible_1_A = variants {mkA "ilimitado" ; mkA "inesgotável" ; } ; --*
lin inexorable_1_A = mkA "implacável" ; --*
lin inexorable_2_A = mkA "intransigente" ; --*
lin inexpensive_A = variants {mkA "barata" ; mkA "barato" ; } ; --*
lin inexperience_N = mkN "inexperiência" ; --*
lin inexplicable_A = variants {mkA "incompreensível" ; mkA "inexplicável" ; } ; --*
lin inexpressive_A = variants {mkA "inexpressivo" ; mkA "sem" ; } ; --*
lin inextricable_A = mkA "insolúvel" ; --*
lin infallibility_N = mkN "infalibilidade" ; --*
lin infallible_A = mkA "infalível" ; --*
lin infamous_A = variants {mkA "famigerado" ; mkA "infame" ; mkA "notório" ; } ; --*
lin infamy_1_N = mkN "infâmia" ; --*
lin infamy_2_N = mkN "infâmia" ; --*
lin infancy_1_N = variants {mkN "childhood" ; mkN "infância" ; mkN "primeira" ; } ; --*
lin infancy_2_N = variants {mkN "infância" ; mkN "primeira" ; } ; --*
lin infanticide_1_N = mkN "infanticida" ; --*
lin infanticide_2_N = variants {mkN "infanticida" ; mkN "Infanticidio" ; mkN "infanticídio" ; } ; --*
lin infantile_1_A = variants {mkA "imatura" ; mkA "imaturo" ; mkA "infantil" ; mkA "pueril" ; } ; --*
lin infantile_3_A = mkA "infantil" ; --*
lin infant_N = variants {mkN "bebé" ; mkN "bebê" ; mkN "criancinha" ; mkN "garota" ; mkN "mina" ; mkN "nenê" ; mkN "recém-nascido" ; } ; --*
lin infantry_N = variants {mkN "infantaria" ; mkN "Infantaria" ; } ; --*
lin infarct_N = variants {mkN "enfarte" ; mkN "infarto" ; } ; --*
lin infatuate_V2 = variants {mkV2 (mkV "apaixonar") ; mkV2 (mkV "infatuar") ; } ; --*
lin infatuation_2_N = variants {mkN "love" ; mkN "paixonite" ; } ; --*
lin infect_1_V2 = variants {mkV2 (mkV "contagiar") ; mkV2 (mkV "encomendar") ; mkV2 (mkV "infectar") ; } ; --*
lin infect_2_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "infectar") ; mkV2 (mkV "infetar") ; } ; --*
lin infect_4_V2 = mkV2 (mkV "infectar") ; --*
lin infected_A = variants {mkA "infectado" ; mkA "séptico" ; } ; --*
lin infection_1_N = variants {mkN "infeção" ; mkN "infecção" ; } ; --*
lin infection_3_N = mkN "infecção" ; --*
lin infection_4_N = variants {mkN "contágio" ; mkN "infecção" ; mkN "spillover" ; } ; --*
lin infection_5_N = mkN "infecção" ; --*
lin infectious_2_A = variants {mkA "contagioso" ; mkA "infeccioso" ; } ; --*
lin infective_1_A = variants {mkA "patogénico" ; mkA "patogênico" ; } ; --*
lin infelicitous_2_A = mkA "triste" ; --*
lin infer_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "depreender") ; mkV2 (mkV "inferir") ; } ; --*
lin infer_2_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "generalizar") ; } ; --*
lin infer_3_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "deduzir") ; mkV2 (mkV "inferir") ; } ; --*
lin infer_4_V2 = variants {mkV2 (mkV "inferir") ; mkV2 (mkV "supor") ; } ; --*
lin infer_5_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "inferir") ; } ; --*
lin inference_N = variants {mkN "dedução" ; mkN "inferência" ; mkN "Inferência" ; mkN "raciocínio" ; } ; --*
lin inferential_1_A = mkA "ilativo" ; --*
lin inferential_3_A = mkA "ilativo" ; --*
lin inferior_1_A = mkA "inferior" ; --*
lin inferior_2_A = mkA "inferior" ; --*
lin inferior_2_N = mkN "texto" ; --*
lin inferiority_2_N = variants {mkN "inferioridade" ; mkN "quality" ; } ; --*
lin infernal_1_A = mkA "infernal" ; --*
lin infernal_2_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin infernal_3_A = variants {mkA "amaldiçoado" ; mkA "condenado" ; mkA "maldito" ; } ; --*
lin infernal_4_A = mkA "infernal" ; --*
lin infernal_5_A = mkA "infernal" ; --*
lin inferno_1_N = variants {mkN "inferno" ; mkN "on" ; mkN "pit" ; mkN "pits" ; } ; --*
lin inferno_2_N = variants {mkN "fogo" ; mkN "incêndio" ; mkN "Incêndios" ; } ; --*
lin inferno_3_N = variants {mkN "inferno" ; mkN "region" ; } ; --*
lin infertile_A = variants {mkA "estéril" ; mkA "improdutivo" ; mkA "infértil" ; } ; --*
lin infertility_N = mkN "infertilidade" ; --*
lin infest_2_V2 = variants {mkV2 (mkV "infestar") ; mkV2 (mkV "invadir") ; } ; --*
lin infest_3_V2 = mkV2 (mkV "infestar") ; --*
lin infestation_2_N = mkN "infestação" ; --*
lin infidelity_N = mkN "infidelidade" ; --*
lin infidel_N = mkN "pagão" ; --*
lin infielder_N = mkN "Defensor" ; --*
lin infield_N = variants {mkN "diamante" ; mkN "diamond" ; } ; --*
lin infiltrate_2_V2 = variants {mkV2 (mkV "infiltrar") ; mkV2 (mkV "penetrar") ; } ; --*
lin infiltrate_4_V2 = variants {mkV2 (mkV "infiltrar") ; mkV2 (mkV "through") ; } ; --*
lin infiltrate_4_V = variants {mkV "infiltrar" ; mkV "through" ; } ; --*
lin infiltration_2_N = mkN "infiltração" ; --*
lin infinite_1_A = mkA "infinito" ; --*
lin infinite_2_A = mkA "infinito" ; --*
lin infinite_3_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin infinite_4_A = mkA "infinito" ; --*
lin infinitesimal_N = mkN "infinitesimal" ; --*
lin infinitive_N = mkN "infinitivo" ; --*
lin infinity_N = mkN "eternidade" ; --*
lin infirm_1_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin infirmary_N = variants {mkN "enfermaria" ; mkN "hospital" ; } ; --*
lin infirmity_N = variants {mkN "debilidade" ; mkN "fraqueza" ; } ; --*
lin infix_N = mkN "infixo" ; --*
lin inflame_1_V2 = mkV2 (mkV "inflamar") ; --*
lin inflame_2_V = mkV "suscitar" ; --*
lin inflame_3_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "conflagrar") ; } ; --*
lin inflame_4_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "up") ; } ; --*
lin inflame_5_V = mkV "inflamar" ; --*
lin inflammable_A = mkA "inflamável" ; --*
lin inflammation_1_N = mkN "inflamação" ; --*
lin inflammation_2_N = variants {mkN "excitação" ; mkN "excitamento" ; } ; --*
lin inflammation_4_N = variants {mkN "ignição" ; mkN "inflamação" ; mkN "Inflamações" ; } ; --*
lin inflammatory_1_A = mkA "inflamatório" ; --*
lin inflate_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "expandir") ; mkV2 (mkV "up") ; } ; --*
lin inflate_2_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "inflar") ; mkV2 (mkV "up") ; } ; --*
lin inflate_5_V2 = mkV2 (mkV "inchar") ; --*
lin inflate_V = mkV "inchar" ; --*
lin inflation_1_N = variants {mkN "inflação" ; mkN "prices" ; } ; --*
lin inflation_3_N = mkN "fausto" ; --*
lin inflation_4_N = mkN "inflação" ; --*
lin inflationary_A = mkA "inflacionário" ; --*
lin inflect_1_V2 = variants {mkV2 (mkV "flexionar") ; mkV2 (mkV "variar") ; } ; --*
lin inflect_2_V2 = mkV2 (mkV "modular") ; --*
lin inflection_1_N = mkN "inflexão" ; --*
lin inflection_2_N = variants {mkN "prosódia" ; mkN "Prosódia" ; } ; --*
lin inflection_3_N = mkN "flexão" ; --*
lin inflexibility_1_N = mkN "inflexibilidade" ; --*
lin inflexibility_2_N = variants {mkN "inflexibilidade" ; mkN "rigidez" ; } ; --*
lin inflexible_1_A = mkA "inflexível" ; --*
lin inflexible_2_A = mkA "inflexível" ; --*
lin inflexible_3_A = mkA "inflexível" ; --*
lin inflexible_4_A = mkA "inflexível" ; --*
lin inflexion_N = mkN "inflexão" ; --*
lin infliction_3_N = variants {mkN "contrariedade" ; mkN "in" ; mkN "incômodo" ; mkN "moléstia" ; } ; --*
lin inflict_V2 = variants {mkV2 (mkV "ditar") ; mkV2 (mkV "down") ; mkV2 (mkV "impor") ; mkV2 (mkV "infligir") ; } ; --*
lin infliximab_1_N = mkN "Infliximabe" ; --*
lin inflorescence_1_N = mkN "floração" ; --*
lin inflorescence_2_N = variants {mkN "inflorescéncia" ; mkN "inflorescência" ; } ; --*
lin inflow_N = variants {mkN "afluência" ; mkN "afluxo" ; mkN "influxo" ; } ; --*
lin influence_1_N = variants {mkN "força" ; mkN "influência" ; } ; --*
lin influence_1_V2 = variants {mkV2 (mkV "influenciar") ; mkV2 (mkV "influir") ; mkV2 (mkV "upon") ; } ; --*
lin influence_2_N = mkN "efeito" ; --*
lin influence_2_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "influenciar") ; mkV2 (mkV "moldar") ; } ; --*
lin influence_3_N = mkN "influência" ; --*
lin influence_3_V2 = variants {mkV2 (mkV "influenciar") ; mkV2 (mkV "seduzir") ; } ; --*
lin influence_4_N = variants {mkN "efeito" ; mkN "efeitos" ; mkN "influência" ; } ; --*
lin influence_5_N = mkN "efeitos" ; --*
lin influential_A = mkA "influente" ; --*
lin influenza_N = variants {mkN "gripe" ; mkN "Gripe" ; mkN "influenza" ; } ; --*
lin influx_N = variants {mkN "afluência" ; mkN "afluxo" ; mkN "influxo" ; } ; --*
lin infomercial_1_N = mkN "infomercial" ; --*
lin info_N = mkN "informação" ; --*
lin inform_1_V2 = mkV2 (mkV "informar") ; --*
lin inform_2_V2 = mkV2 (mkV "conformar") ; --*
lin inform_3_V = variants {mkV "informar" ; mkV "noticiar" ; mkV "notificar" ; } ; --*
lin informal_1_A = mkA "informal" ; --*
lin informal_2_A = mkA "informal" ; --*
lin informal_3_A = mkA "informal" ; --*
lin informant_1_N = mkN "fonte" ; --*
lin informant_2_N = mkN "testemunha" ; --*
lin information_1_N = mkN "informação" ; --*
lin information_2_N = variants {mkN "conhecimento" ; mkN "informação" ; } ; --*
lin information_3_N = mkN "denúncia" ; --*
lin information_4_N = variants {mkN "dados" ; mkN "informação" ; } ; --*
lin information_5_N = variants {mkN "entropia" ; mkN "information" ; } ; --*
lin informational_A = mkA "informativo" ; --*
lin informative_1_A = variants {mkA "iluminante" ; mkA "informativo" ; mkA "noticioso" ; } ; --*
lin informative_2_A = mkA "noticioso" ; --*
lin informative_3_A = variants {mkA "informativo" ; mkA "noticioso" ; } ; --*
lin informer_N = mkN "delator" ; --*
lin informing_2_N = variants {mkN "informação" ; mkN "known" ; } ; --*
lin infra_Adv = mkAdv "embaixo" ; --*
lin infraction_N = variants {mkN "infração" ; mkN "infracção" ; } ; --*
lin infrangible_2_A = variants {mkA "absoluto" ; mkA "inviolável" ; } ; --*
lin infrared_2_N = variants {mkN "emission" ; mkN "infravermelho" ; mkN "light" ; mkN "radiation" ; } ; --*
lin infra_red_A = mkA "infravermelho" ; --*
lin infrastructure_1_N = variants {mkN "infraestructura" ; mkN "infraestrutura" ; mkN "infra-estrutura" ; } ; --*
lin infrastructure_2_N = variants {mkN "infraestructura" ; mkN "infraestrutura" ; mkN "infra-estrutura" ; } ; --*
lin infrequency_N = mkN "raridade" ; --*
lin infrequent_A = variants {mkA "infrequente" ; mkA "infrequënte" ; mkA "infreqüente" ; } ; --*
lin infringe_1_V = variants {mkV "afoul" ; mkV "infringir" ; } ; --*
lin infringement_1_N = mkN "violação" ; --*
lin infringement_2_N = variants {mkN "infração" ; mkN "infracção" ; } ; --*
lin infuriate_V2 = variants {mkV2 (mkV "exasperar") ; mkV2 (mkV "irritar") ; } ; --*
lin infuse_1_V2 = mkV2 (mkV "inculcar") ; --*
lin infuse_V = mkV "infundir" ; --*
lin infusion_2_N = mkN "Infusão" ; --*
lin infusion_3_N = mkN "infusão" ; --*
lin ingathering_N = variants {mkN "apelo" ; mkN "coleção" ; mkN "solicitação" ; } ; --*
lin in_general_Adv = variants {mkAdv "em" ; mkAdv "general" ; mkAdv "the" ; } ; --*
lin ingenious_A = variants {mkA "astuto" ; mkA "engenhoso" ; mkA "genial" ; mkA "hábil" ; } ; --*
lin ingenuity_1_N = variants {mkN "criatividade" ; mkN "talento" ; } ; --*
lin ingenuousness_1_N = variants {mkN "inocência" ; mkN "naturalidade" ; } ; --*
lin ingest_1_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "in") ; mkV2 (mkV "tomar") ; } ; --*
lin ingest_2_V2 = variants {mkV2 (mkV "assimilar") ; mkV2 (mkV "in") ; } ; --*
lin inglorious_1_A = variants {mkA "desgraçado" ; mkA "ignominioso" ; mkA "torpe" ; } ; --*
lin ingot_N = variants {mkN "bar" ; mkN "lingote" ; mkN "of" ; } ; --*
lin ingraft_V2 = mkV2 (mkV "enxertar") ; --*
lin ingratiate_V2 = mkV2 (mkV "bajular") ; --*
lin ingratitude_N = mkN "ingratidão" ; --*
lin ingredient_1_N = variants {mkN "componente" ; mkN "ingrediente" ; } ; --*
lin ingredient_2_N = variants {mkN "componente" ; mkN "fator" ; mkN "parte" ; } ; --*
lin ingredient_3_N = variants {mkN "ingrediente" ; mkN "produtos" ; } ; --*
lin ingress_2_N = variants {mkN "entrada" ; mkN "ingresso" ; } ; --*
lin inhabit_1_V2 = variants {mkV2 (mkV "habitar") ; mkV2 (mkV "morar") ; mkV2 (mkV "povoar") ; mkV2 (mkV "viver") ; } ; --*
lin inhabit_2_V2 = mkV2 (mkV "habitar") ; --*
lin inhabit_3_V2 = mkV2 (mkV "habitar") ; --*
lin inhabitable_A = mkA "habitável" ; --*
lin inhabitancy_N = mkN "habitação" ; --*
lin inhabitant_1_N = variants {mkN "habitante" ; mkN "morador" ; } ; --*
lin inhalation_1_N = variants {mkN "in" ; mkN "inalação" ; mkN "inspiração" ; } ; --*
lin inhale_1_V = variants {mkV "inalar" ; mkV "tragar" ; } ; --*
lin inhale_2_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inalar") ; mkV2 (mkV "inspirar") ; } ; --*
lin inhale_2_V = variants {mkV "in" ; mkV "inalar" ; mkV "inspirar" ; } ; --*
lin inherent_1_A = mkA "inerente" ; --*
lin inherent_2_A = variants {mkA "in" ; mkA "inerente" ; } ; --*
lin inherit_1_V2 = mkV2 (mkV "herdar") ; --*
lin inherit_2_V2 = mkV2 (mkV "herdar") ; --*
lin inheritable_A = mkA "herdável" ; --*
lin inheritance_1_N = variants {mkN "espólio" ; mkN "herança" ; } ; --*
lin inheritance_2_N = variants {mkN "herança" ; mkN "legado" ; mkN "patrimônio" ; } ; --*
lin inheritance_3_N = variants {mkN "herança" ; mkN "pattern" ; } ; --*
lin inheritance_4_N = mkN "herança" ; --*
lin inheritorFem_N = variants {mkN "herdeira" ; mkN "herdeiro" ; } ; --*
lin inheritorMasc_N = variants {mkN "herdeira" ; mkN "herdeiro" ; } ; --*
lin inhibit_1_V2 = mkV2 (mkV "inibir") ; --*
lin inhibit_2_V2 = mkV2 (mkV "inibir") ; --*
lin inhibit_3_V2 = variants {mkV2 (mkV "inibir") ; mkV2 (mkV "suprimir") ; mkV2 (mkV "up") ; } ; --*
lin inhibition_1_N = mkN "inibição" ; --*
lin inhibition_2_N = mkN "inibição" ; --*
lin inhibitory_A = variants {mkA "inibidor" ; mkA "repressivo" ; } ; --*
lin inhospitable_1_A = mkA "inóspito" ; --*
lin inhospitable_2_A = mkA "inóspito" ; --*
lin inhuman_1_A = variants {mkA "A" ; mkA "desumano" ; mkA "inumano" ; } ; --*
lin inhuman_2_A = variants {mkA "desumano" ; mkA "inumano" ; } ; --*
lin inhumane_A = variants {mkA "desumano" ; mkA "inumano" ; } ; --*
lin inhumanity_2_N = mkN "atrocidade" ; --*
lin iniquitous_A = variants {mkA "ímpio" ; mkA "pecaminoso" ; } ; --*
lin iniquity_1_N = variants {mkN "imoralidade" ; mkN "maldade" ; } ; --*
lin iniquity_2_N = mkN "injustiça" ; --*
lin initial_A = mkA "inicial" ; --*
lin initial_N = mkN "inicial" ; --*
lin initiate_1_N = variants {mkN "novato" ; mkN "principiante" ; } ; --*
lin initiate_1_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "originar") ; mkV2 (mkV "provir") ; mkV2 (mkV "tomar") ; } ; --*
lin initiate_2_V2 = variants {mkV2 (mkV "empreender") ; mkV2 (mkV "iniciar") ; } ; --*
lin initiate_4_V2 = variants {mkV2 (mkV "abordar") ; mkV2 (mkV "encetar") ; mkV2 (mkV "iniciar") ; } ; --*
lin initiation_1_N = mkN "iniciação" ; --*
lin initiation_2_N = variants {mkN "criação" ; mkN "fundação" ; mkN "início" ; mkN "instituição" ; mkN "introdução" ; } ; --*
lin initiation_4_N = mkN "indução" ; --*
lin initiative_1_N = mkN "iniciativa" ; --*
lin initiative_2_N = variants {mkN "iniciativa" ; mkN "move" ; mkN "step" ; } ; --*
lin inject_1_V2 = variants {mkV2 (mkV "injectar") ; mkV2 (mkV "injetar") ; } ; --*
lin inject_4_V2 = mkV2 (mkV "injetar") ; --*
lin inject_5_V2 = mkV2 (mkV "injetar") ; --*
lin inject_6_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "interpor") ; } ; --*
lin injection_1_N = mkN "injeção" ; --*
lin injection_3_N = mkN "injeção" ; --*
lin injector_N = mkN "Injector" ; --*
lin injudiciousness_2_N = variants {mkN "indiscression" ; mkN "indiscrição" ; } ; --*
lin injunction_1_N = mkN "ordem" ; --*
lin injunction_2_N = variants {mkN "and" ; mkN "injunção" ; mkN "processo" ; mkN "Processo" ; } ; --*
lin injure_1_V2 = variants {mkV2 (mkV "ferir") ; mkV2 (mkV "lesar") ; mkV2 (mkV "lesionar") ; mkV2 (mkV "machucar") ; } ; --*
lin injure_2_V2 = variants {mkV2 (mkV "magoar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "provocar") ; } ; --*
lin injure_3_V2 = variants {mkV2 (mkV "danificar") ; mkV2 (mkV "machucar") ; mkV2 (mkV "magoar") ; } ; --*
lin injured_1_A = mkA "ferido" ; --*
lin injurious_A = variants {mkA "deletério" ; mkA "injuriante" ; } ; --*
lin injury_1_N = variants {mkN "dano" ; mkN "ferimentos" ; mkN "inchaço" ; mkN "lesão" ; mkN "mal" ; mkN "traumatismo" ; } ; --*
lin injury_2_N = variants {mkN "ferimentos" ; mkN "injury" ; } ; --*
lin injury_3_N = variants {mkN "ferida" ; mkN "injury" ; } ; --*
lin injustice_1_N = mkN "injustiça" ; --*
lin injustice_2_N = mkN "injustiça" ; --*
lin ink_1_N = mkN "tinta" ; --*
lin ink_1_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "firmar") ; } ; --*
lin ink_2_N = mkN "tinta" ; --*
lin ink_bottle_N = variants {mkN "bottle" ; mkN "tinteiro" ; } ; --*
lin inkling_N = mkN "suspeita" ; --*
lin ink_pot_N = variants {mkN "bottle" ; mkN "tinteiro" ; } ; --*
lin inkstand_1_N = mkN "tinteiro" ; --*
lin inkwell_N = mkN "tinteiro" ; --*
lin inlay_V2 = mkV2 (mkV "encrustar") ; --*
lin inlet_1_N = variants {mkN "baia" ; mkN "baía" ; mkN "desfiladeiro" ; mkN "enseada" ; mkN "fiorde" ; mkN "golfo" ; } ; --*
lin inmate_2_N = mkN "paciente" ; --*
lin inmate_3_N = variants {mkN "bird" ; mkN "condenado" ; } ; --*
lin innate_2_A = mkA "inato" ; --*
lin innate_3_A = variants {mkA "congénito" ; mkA "congênito" ; mkA "inata" ; mkA "inato" ; } ; --*
lin inner_1_A = variants {mkA "interior" ; mkA "interno" ; } ; --*
lin inner_2_A = mkA "interno" ; --*
lin inner_3_A = mkA "interno" ; --*
lin inner_4_A = mkA "privilegiado" ; --*
lin innervation_2_N = mkN "inervação" ; --*
lin innings_N = variants {mkN "entrada" ; mkN "inning" ; } ; --*
lin innkeeper_N = mkN "hoteleiro" ; --*
lin inn_N = variants {mkN "albergaria" ; mkN "albergue" ; mkN "hospedaria" ; mkN "hotel" ; mkN "pousada" ; } ; --*
lin innocence_1_N = variants {mkN "inocência" ; mkN "naturalidade" ; } ; --*
lin innocence_2_N = mkN "pureza" ; --*
lin innocence_3_N = mkN "inocência" ; --*
lin innocency_N = mkN "inocência" ; --*
lin innocent_1_A = mkA "inocente" ; --*
lin innocent_2_A = variants {mkA "inocente" ; mkA "inócuo" ; } ; --*
lin innocent_6_A = mkA "destituído" ; --*
lin innocuous_1_A = mkA "inócuo" ; --*
lin innocuous_2_A = mkA "inócuo" ; --*
lin innocuous_3_A = variants {mkA "inocente" ; mkA "inócuo" ; } ; --*
lin innovate_V2 = mkV2 (mkV "inovar") ; --*
lin innovation_1_N = variants {mkN "inovação" ; mkN "invenção" ; } ; --*
lin innovation_2_N = variants {mkN "concepção" ; mkN "inovação" ; mkN "invenção" ; } ; --*
lin innovation_3_N = variants {mkN "criação" ; mkN "fundação" ; mkN "início" ; mkN "instituição" ; mkN "introdução" ; } ; --*
lin innovative_1_A = variants {mkA "contemporâneo" ; mkA "inovador" ; mkA "moderno" ; mkA "progressista" ; } ; --*
lin innovative_2_A = mkA "inovador" ; --*
lin innovativeness_N = mkN "inovação" ; --*
lin innovator_N = variants {mkN "inovador" ; mkN "pioneiro" ; } ; --*
lin innsbruck_PN = mkPN "Innsbruck" ; --*
lin innuendo_N = variants {mkN "indireta" ; mkN "insinuação" ; } ; --*
lin innumerable_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin inoculate_3_V2 = mkV2 (mkV "vacinar") ; --*
lin inoculate_4_V2 = mkV2 (mkV "inocular") ; --*
lin inoculation_N = mkN "vacinação" ; --*
lin inoffensive_1_A = mkA "inofensivo" ; --*
lin inoffensive_2_A = mkA "inofensivo" ; --*
lin inoperable_1_A = mkA "inoperável" ; --*
lin inoperable_2_A = mkA "inoperável" ; --*
lin inordinate_A = variants {mkA "demasiado" ; mkA "excessivo" ; } ; --*
lin inosine_N = mkN "inosina" ; --*
lin in_patient_N = mkN "paciente" ; --*
lin in_person_Adv = variants {mkAdv "person" ; mkAdv "pessoalmente" ; } ; --*
lin input_2_N = variants {mkN "comentário" ; mkN "cometário" ; mkN "comment" ; mkN "Comment" ; mkN "observação" ; mkN "reparo" ; mkN "tag" ; } ; --*
lin input_3_N = variants {mkN "estimulante" ; mkN "estímulo" ; } ; --*
lin inquest_N = mkN "inquérito" ; --*
lin inquietude_N = mkN "inquietude" ; --*
lin inquire_1_V = variants {mkV "indagar" ; mkV "perguntar" ; mkV "questionar" ; } ; --*
lin inquire_2_V2 = variants {mkV2 (mkV "interrogar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "perguntar-se") ; mkV2 (mkV "ponderar") ; mkV2 (mkV "questionar") ; } ; --*
lin inquire_2_V = variants {mkV "interrogar" ; mkV "perguntar" ; mkV "perguntar-se" ; mkV "ponderar" ; mkV "questionar" ; } ; --*
lin inquire_3_V2 = mkV2 (mkV "investigar") ; --*
lin inquire_into_V2 = mkV2 (mkV "investigar") ; --*
lin inquiry_1_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "pesquisa" ; mkN "Pesquisa" ; } ; --*
lin inquiry_2_N = variants {mkN "indagação" ; mkN "inquérito" ; mkN "interrogação" ; mkN "pergunta" ; mkN "perguntar" ; mkN "questão" ; } ; --*
lin inquiry_3_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "questionamento" ; } ; --*
lin inquisition_1_N = mkN "Inquisição" ; --*
lin inquisition_2_N = mkN "inquisição" ; --*
lin inquisitive_2_A = mkA "curioso" ; --*
lin inquisitiveness_N = mkN "curiosidade" ; --*
lin inquisitor_1_N = mkN "interrogador" ; --*
lin inquisitor_2_N = mkN "Inquisidores" ; --*
lin in_return_Adv = variants {mkAdv "reciprocamente" ; mkAdv "return" ; } ; --*
lin inroad_2_N = mkN "invasão" ; --*
lin insalubrious_A = mkA "insalubre" ; --*
lin insane_1_A = mkA "insano" ; --*
lin insane_2_A = variants {mkA "demente" ; mkA "louco" ; mkA "maluco" ; } ; --*
lin insanity_N = variants {mkN "insanidade" ; mkN "loucura" ; } ; --*
lin insatiable_A = mkA "insaciável" ; --*
lin insatiate_A = mkA "insaciável" ; --*
lin inscribe_1_V2 = mkV2 (mkV "estampar") ; --*
lin inscribe_2_V2 = variants {mkV2 (mkV "inscrever") ; mkV2 (mkV "recrutar") ; mkV2 (mkV "registrar") ; } ; --*
lin inscribe_4_V2 = mkV2 (mkV "gravar") ; --*
lin inscribe_6_V2 = variants {mkV2 (mkV "codificar") ; mkV2 (mkV "criptografar") ; mkV2 (mkV "encriptar") ; mkV2 (mkV "in") ; } ; --*
lin inscription_1_N = mkN "inscrição" ; --*
lin inscrutable_A = variants {mkA "misteriosa" ; mkA "misterioso" ; } ; --*
lin insect_1_N = variants {mkN "hemípteros" ; mkN "insecto" ; mkN "Insectos" ; mkN "inseto" ; mkN "insetos" ; } ; --*
lin insecticide_N = variants {mkN "insecticidas" ; mkN "inseticida" ; mkN "powder" ; } ; --*
lin insectifuge_N = variants {mkN "Repelente" ; mkN "repellant" ; mkN "repellent" ; } ; --*
lin insectivore_1_N = mkN "insectívoros" ; --*
lin insectivore_2_N = variants {mkN "insectívoros" ; mkN "Insetívoro" ; } ; --*
lin insect_powder_N = variants {mkN "insecticidas" ; mkN "inseticida" ; mkN "powder" ; } ; --*
lin insecure_1_A = mkA "inseguro" ; --*
lin insecure_2_A = mkA "inseguro" ; --*
lin insecure_3_A = mkA "inseguro" ; --*
lin insecure_4_A = mkA "inseguro" ; --*
lin insecurity_1_N = variants {mkN "insegurança" ; mkN "periculosidade" ; } ; --*
lin insecurity_2_N = variants {mkN "insegurança" ; mkN "periculosidade" ; } ; --*
lin inseminate_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "semear") ; } ; --*
lin inseminate_2_V2 = variants {mkV2 (mkV "fecundar") ; mkV2 (mkV "fertilizar") ; mkV2 (mkV "inseminar") ; } ; --*
lin insensate_2_A = variants {mkA "A" ; mkA "desumano" ; mkA "inumano" ; } ; --*
lin insensibility_2_N = mkN "dureza" ; --*
lin insensitivity_N = mkN "insensibilidade" ; --*
lin inseparable_A = mkA "inseparável" ; --*
lin insert_1_V2 = variants {mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin insert_2_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin insert_3_V2 = variants {mkV2 (mkV "enfiar") ; mkV2 (mkV "meter") ; } ; --*
lin insertion_2_N = variants {mkN "inserção" ; mkN "introdução" ; } ; --*
lin inside_1_N = mkN "interior" ; --*
lin inside_2_Adv = variants {mkAdv "adentro" ; mkAdv "dentro" ; mkAdv "em" ; mkAdv "no" ; } ; --*
lin inside_3_Adv = mkAdv "interiormente" ; --*
lin inside_3_A = mkA "privilegiado" ; --*
lin insidious_1_A = mkA "insidioso" ; --*
lin insidious_2_A = mkA "insidioso" ; --*
lin insidious_3_A = mkA "insidioso" ; --*
lin insight_2_N = variants {mkN "entendimento" ; mkN "percepção" ; } ; --*
lin insight_3_N = variants {mkN "epifania" ; mkN "insight" ; mkN "lampejo" ; } ; --*
lin insight_4_N = variants {mkN "sense" ; mkN "sexto" ; } ; --*
lin insightful_A = mkA "com" ; --*
lin insightfulness_N = mkN "acume" ; --*
lin insight_in_N2 = mkN2 (mkN "penetração") noPrep ; --*
lin insignia_N = mkN "insígnia" ; --*
lin insignificance_N = mkN "insignificância" ; --*
lin insignificant_1_A = variants {mkA "insignificanta" ; mkA "insignificante" ; } ; --*
lin insignificant_2_A = variants {mkA "insignificante" ; mkA "pequeno" ; } ; --*
lin insincerity_N = mkN "falsidade" ; --*
lin insinuate_2_V2 = mkV2 (mkV "insinuar") ; --*
lin insinuation_1_N = variants {mkN "indireta" ; mkN "insinuação" ; } ; --*
lin insipid_1_A = mkA "insípido" ; --*
lin insipid_2_A = mkA "insípido" ; --*
lin insipidity_1_N = variants {mkN "insipidez" ; mkN "tédio" ; } ; --*
lin insipidity_2_N = mkN "insipidez" ; --*
lin insipidness_1_N = variants {mkN "insipidez" ; mkN "tédio" ; } ; --*
lin insipidness_2_N = mkN "insipidez" ; --*
lin insist_1_V = variants {mkV "a" ; mkV "insistir" ; } ; --*
lin insist_2_V2 = mkV2 (mkV "insistir") ; --*
lin insist_3_V2 = variants {mkV2 (mkV "assertar") ; mkV2 (mkV "insistir") ; } ; --*
lin insistence_2_N = variants {mkN "instância" ; mkN "pressão" ; } ; --*
lin insistent_1_A = variants {mkA "insistente" ; mkA "repetitivo" ; } ; --*
lin insistent_2_A = variants {mkA "insistente" ; mkA "urgente" ; } ; --*
lin in_situ_2_Adv = variants {mkAdv "place" ; mkAdv "situ" ; } ; --*
lin insolation_1_N = variants {mkN "fever" ; mkN "insolação" ; } ; --*
lin insolation_2_N = mkN "Insolação" ; --*
lin insolence_1_N = variants {mkN "atrevimento" ; mkN "imprudência" ; mkN "insolência" ; } ; --*
lin insolence_2_N = mkN "insolência" ; --*
lin insole_N = mkN "palmilha" ; --*
lin insolent_1_A = mkA "insolente" ; --*
lin insolent_2_A = mkA "insolente" ; --*
lin insolvency_N = mkN "insolvência" ; --*
lin insolvent_A = mkA "falido" ; --*
lin insomniac_A = mkA "insone" ; --*
lin insomnia_N = variants {mkN "insónia" ; mkN "Insónia" ; mkN "insônia" ; } ; --*
lin inspect_1_V2 = variants {mkV2 (mkV "inspeccionar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "vistoriar") ; } ; --*
lin inspect_2_V2 = variants {mkV2 (mkV "fiscalizar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "vistoriar") ; } ; --*
lin inspect_3_V2 = variants {mkV2 (mkV "auditar") ; mkV2 (mkV "auditorar") ; mkV2 (mkV "escrutinizar") ; mkV2 (mkV "inspecionar") ; } ; --*
lin inspection_N = variants {mkN "inspeção" ; mkN "inspecção" ; mkN "teste" ; } ; --*
lin inspector_1_N = variants {mkN "inspector" ; mkN "inspetor" ; } ; --*
lin inspector_2_N = variants {mkN "examinador" ; mkN "inspector" ; mkN "inspetor" ; } ; --*
lin inspectorship_N = mkN "inspetoria" ; --*
lin inspiration_1_N = mkN "inspiração" ; --*
lin inspiration_2_N = mkN "criação" ; --*
lin inspiration_3_N = mkN "inspiração" ; --*
lin inspiration_6_N = variants {mkN "in" ; mkN "inalação" ; mkN "inspiração" ; } ; --*
lin inspiratory_A = mkA "inspiratório" ; --*
lin inspire_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "inspirar") ; } ; --*
lin inspire_2_V2 = variants {mkV2 (mkV "incutir") ; mkV2 (mkV "infundir") ; } ; --*
lin inspire_3_V2 = variants {mkV2 (mkV "impelir") ; mkV2 (mkV "incitar") ; mkV2 (mkV "instigar") ; } ; --*
lin inspire_4_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin inspire_5_V2 = mkV2 (mkV "revolucionar") ; --*
lin inspire_5_V2V = mkV2V (mkV "revolucionar") ; --*
lin inspire_6_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inalar") ; mkV2 (mkV "inspirar") ; } ; --*
lin inspire_V = variants {mkV "in" ; mkV "inalar" ; mkV "inspirar" ; } ; --*
lin inspiring_A = mkA "sugestivo" ; --*
lin inspissation_2_N = variants {mkN "compactação" ; mkN "espessamento" ; } ; --*
lin instability_1_N = mkN "instabilidade" ; --*
lin instability_2_N = mkN "instabilidade" ; --*
lin instability_3_N = variants {mkN "desequilíbrio" ; mkN "instabilidade" ; } ; --*
lin install_1_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "in") ; mkV2 (mkV "instalar") ; mkV2 (mkV "up") ; } ; --*
lin install_2_V2 = mkV2 (mkV "instalar") ; --*
lin install_3_V2 = variants {mkV2 (mkV "instalar") ; mkV2 (mkV "up") ; } ; --*
lin installation_1_N = variants {mkN "instalação" ; mkN "prestação" ; } ; --*
lin installation_2_N = variants {mkN "infra-estrutura" ; mkN "instalação" ; mkN "serviço" ; } ; --*
lin installation_3_N = mkN "iniciação" ; --*
lin installment_1_N = mkN "parcela" ; --*
lin installment_2_N = mkN "episódio" ; --*
lin installment_4_N = variants {mkN "instalação" ; mkN "prestação" ; } ; --*
lin instalment_1_N = mkN "episódio" ; --*
lin instalment_3_N = variants {mkN "instalação" ; mkN "prestação" ; } ; --*
lin instance_1_N = variants {mkN "caso" ; mkN "exemplo" ; mkN "ocasião" ; mkN "ocorrência" ; } ; --*
lin instance_2_N = mkN "exemplo" ; --*
lin instance_V2 = variants {mkV2 (mkV "exemplificar") ; mkV2 (mkV "ilustrar") ; } ; --*
lin instant_1_A = variants {mkA "insistente" ; mkA "urgente" ; } ; --*
lin instant_1_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin instant_2_A = variants {mkA "instantânea" ; mkA "instantâneo" ; } ; --*
lin instant_2_N = variants {mkN "instante" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin instantaneous_A = variants {mkA "instantânea" ; mkA "instantâneo" ; } ; --*
lin instar_N = variants {mkN "Instar" ; mkN "ínstar" ; } ; --*
lin instead_1_Adv = variants {mkAdv "alternativamente" ; mkAdv "ao" ; mkAdv "else" ; } ; --*
lin instep_2_N = variants {mkN "dorso" ; mkN "peito" ; } ; --*
lin instigate_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "provocar") ; mkV2 (mkV "reptar") ; mkV2 (mkV "up") ; } ; --*
lin instigate_2_V2 = variants {mkV2 (mkV "impelir") ; mkV2 (mkV "incitar") ; mkV2 (mkV "instigar") ; } ; --*
lin instigation_2_N = mkN "instigação" ; --*
lin instil_3_V2 = mkV2 (mkV "impressionar") ; --*
lin instil_4_V2 = mkV2 (mkV "inculcar") ; --*
lin instinct_N = variants {mkN "aptitude" ; mkN "instinto" ; } ; --*
lin institute_1_V2 = variants {mkV2 (mkV "constituir") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fundar") ; } ; --*
lin institute_2_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "instaurar") ; mkV2 (mkV "instituir") ; } ; --*
lin institute_N = variants {mkN "instituição" ; mkN "instituto" ; } ; --*
lin institution_1_N = mkN "instituição" ; --*
lin institution_2_N = mkN "instituição" ; --*
lin institution_4_N = variants {mkN "criação" ; mkN "fundação" ; mkN "início" ; mkN "instituição" ; mkN "introdução" ; } ; --*
lin institution_5_N = variants {mkN "asylum" ; mkN "home" ; mkN "Hospitais" ; mkN "hospital" ; mkN "institution" ; } ; --*
lin institutional_1_A = mkA "institucional" ; --*
lin institutional_2_A = mkA "institucional" ; --*
lin institutionalize_1_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "enviar") ; mkV2 (mkV "institucionalizar") ; mkV2 (mkV "internar") ; } ; --*
lin instruct_1_V2 = variants {mkV2 (mkV "ensinar") ; mkV2 (mkV "instruir") ; mkV2 (mkV "lecionar") ; } ; --*
lin instruct_2_V2 = mkV2 (mkV "instruir") ; --*
lin instruct_3_V2 = mkV2 (mkV "advertir") ; --*
lin instruction_1_N = variants {mkN "código" ; mkN "instrução" ; } ; --*
lin instruction_2_N = variants {mkN "activity" ; mkN "didáctica" ; mkN "educação" ; mkN "Educação" ; mkN "ensino" ; mkN "formação" ; mkN "instrução" ; } ; --*
lin instruction_3_N = variants {mkN "educação" ; mkN "ensino" ; mkN "pedagogia" ; } ; --*
lin instruction_4_N = variants {mkN "instrução" ; mkN "Instrução" ; mkN "line" ; } ; --*
lin instructional_A = mkA "instrucional" ; --*
lin instructive_A = mkA "noticioso" ; --*
lin instructor_N = variants {mkN "docente" ; mkN "instrutor" ; mkN "mestre" ; mkN "professor" ; } ; --*
lin instructress_N = variants {mkN "instrutora" ; mkN "professora" ; } ; --*
lin instrument_1_N = variants {mkN "aparelho" ; mkN "ferramenta" ; mkN "instrumento" ; } ; --*
lin instrument_2_N = variants {mkN "ferramenta" ; mkN "instrumento" ; } ; --*
lin instrument_3_N = mkN "peão" ; --*
lin instrument_4_N = variants {mkN "document" ; mkN "instrument" ; mkN "negócio" ; } ; --*
lin instrument_6_N = variants {mkN "instrument" ; mkN "instrumento" ; } ; --*
lin instrumental_1_A = mkA "instrumental" ; --*
lin instrumentalist_N = variants {mkN "instrumentalista" ; mkN "instrumentista" ; mkN "músico" ; mkN "tocador" ; } ; --*
lin instrumentality_3_N = mkN "equipamento" ; --*
lin instrumentation_1_N = mkN "equipamento" ; --*
lin instrumentation_3_N = mkN "instrumentação" ; --*
lin insubordinate_2_A = mkA "resistente" ; --*
lin insubordination_2_N = mkN "rebeldia" ; --*
lin insubstantial_1_A = variants {mkA "insubstancial" ; mkA "insustancial" ; } ; --*
lin insufferable_1_A = variants {mkA "inaceitável" ; mkA "intolerável" ; } ; --*
lin insufficiency_1_N = mkN "insuficiência" ; --*
lin insufficiency_3_N = variants {mkN "carência" ; mkN "deficiência" ; } ; --*
lin insufficient_A = mkA "insuficiente" ; --*
lin insular_3_A = mkA "paroquial" ; --*
lin insularism_N = variants {mkN "isolação" ; mkN "isolamento" ; } ; --*
lin insularity_N = variants {mkN "isolação" ; mkN "isolamento" ; } ; --*
lin insulate_2_V2 = variants {mkV2 (mkV "ilhar") ; mkV2 (mkV "isolar") ; } ; --*
lin insulation_1_N = variants {mkN "isolação" ; mkN "isolamento" ; } ; --*
lin insulation_2_N = variants {mkN "isolante" ; mkN "materiais" ; mkN "material" ; } ; --*
lin insulation_3_N = variants {mkN "insulação" ; mkN "isolamento" ; } ; --*
lin insulator_N = variants {mkN "isolador" ; mkN "isolante" ; mkN "Isolante" ; } ; --*
lin insulin_N = mkN "insulina" ; --*
lin insult_1_N = variants {mkN "injúria" ; mkN "insulto" ; } ; --*
lin insult_2_N = variants {mkN "afronta" ; mkN "injúria" ; mkN "insulto" ; mkN "ofensa" ; } ; --*
lin insult_V2 = variants {mkV2 (mkV "insultar") ; mkV2 (mkV "ofender") ; } ; --*
lin insuperable_1_A = mkA "insuperável" ; --*
lin insupportable_A = mkA "insustentável" ; --*
lin insurance_1_N = variants {mkN "contrato" ; mkN "seguro" ; } ; --*
lin insurance_2_N = variants {mkN "apólice" ; mkN "policy" ; } ; --*
lin insurance_3_N = variants {mkN "seguro" ; mkN "seguros" ; } ; --*
lin insure_1_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "to") ; mkV2 (mkV "verificar") ; } ; --*
lin insure_1_VS = variants {mkVS (mkV "assegurar") ; mkVS (mkV "to") ; mkVS (mkV "verificar") ; } ; --*
lin insure_2_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "assegurar-se") ; mkV2 (mkV "certificar-se") ; mkV2 (mkV "garantir") ; mkV2 (mkV "ter") ; } ; --*
lin insure_3_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "proteger") ; } ; --*
lin insure_4_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "segurar") ; } ; --*
lin insure_4_V = variants {mkV "assegurar" ; mkV "fazer" ; mkV "segurar" ; } ; --*
lin insure_4_VS = variants {mkVS (mkV "assegurar") ; mkVS (mkV "fazer") ; mkVS (mkV "segurar") ; } ; --*
lin insurgency_1_N = variants {mkN "alçamento" ; mkN "insurgência" ; mkN "levantamento" ; mkN "rebelião" ; } ; --*
lin insurgent_1_N = variants {mkN "fighter" ; mkN "rebelde" ; } ; --*
lin insurgent_2_N = variants {mkN "guerrilha" ; mkN "guerrilheiro" ; } ; --*
lin insurgent_A = variants {mkA "insurgente" ; mkA "subversivo" ; } ; --*
lin insurmountable_1_A = variants {mkA "inexorável" ; mkA "insuperável" ; } ; --*
lin insurmountable_2_A = mkA "insuperável" ; --*
lin insurrection_N = variants {mkN "insurreição" ; mkN "rebelião" ; mkN "revolta" ; } ; --*
lin intact_1_A = variants {mkA "completo" ; mkA "inteiro" ; } ; --*
lin intact_2_A = mkA "salvo" ; --*
lin intact_4_A = mkA "intacto" ; --*
lin intaglio_1_N = variants {mkN "entalhe" ; mkN "printing" ; } ; --*
lin intake_1_N = mkN "ingestão" ; --*
lin intake_3_N = variants {mkN "in" ; mkN "inalação" ; mkN "inspiração" ; } ; --*
lin intangible_3_A = mkA "intangível" ; --*
lin intangible_4_A = mkA "intangível" ; --*
lin integer_N = variants {mkN "inteiro" ; mkN "number" ; } ; --*
lin integral_1_A = mkA "inerente" ; --*
lin integral_2_A = variants {mkA "completo" ; mkA "inteiro" ; } ; --*
lin integral_N = mkN "integral" ; --*
lin integrate_1_V2 = variants {mkV2 (mkV "incorporada") ; mkV2 (mkV "incorporar") ; mkV2 (mkV "integrar") ; } ; --*
lin integrate_2_V2 = mkV2 (mkV "integrar") ; --*
lin integrate_3_V = mkV "integrar" ; --*
lin integrate_4_V2 = mkV2 (mkV "integrar") ; --*
lin integrate_4_V = mkV "integrar" ; --*
lin integrated_1_A = mkA "incorporado" ; --*
lin integrated_3_A = mkA "integrado" ; --*
lin integrated_4_A = mkA "estruturado" ; --*
lin integration_1_N = mkN "integração" ; --*
lin integration_2_N = mkN "integração" ; --*
lin integration_3_N = mkN "integração" ; --*
lin integrator_N = mkN "planímetro" ; --*
lin integrity_1_N = mkN "integridade" ; --*
lin integrity_2_N = mkN "integridade" ; --*
lin intellect_1_N = mkN "inteligência" ; --*
lin intellect_2_N = variants {mkN "entendimento" ; mkN "inteligência" ; mkN "razão" ; } ; --*
lin intellect_3_N = variants {mkN "intelecto" ; mkN "intelectual" ; } ; --*
lin intellectual_1_A = variants {mkA "intelectual" ; mkA "racional" ; } ; --*
lin intellectual_2_A = mkA "intelectual" ; --*
lin intellectual_3_A = variants {mkA "cerebral" ; mkA "intelectual" ; } ; --*
lin intellectual_N = variants {mkN "intelecto" ; mkN "intelectual" ; } ; --*
lin intelligence_1_N = mkN "inteligência" ; --*
lin intelligence_2_N = variants {mkN "agency" ; mkN "inteligência" ; mkN "service" ; } ; --*
lin intelligence_4_N = variants {mkN "informação" ; mkN "notícias" ; } ; --*
lin intelligent_1_A = mkA "inteligente" ; --*
lin intelligent_2_A = mkA "inteligente" ; --*
lin intelligent_4_A = variants {mkA "inteligente" ; mkA "racional" ; } ; --*
lin intelligentsia_N = mkN "intelligentsia" ; --*
lin intelligibility_N = mkN "inteligibilidade" ; --*
lin intelligible_1_A = variants {mkA "compreensível" ; mkA "entendível" ; } ; --*
lin intelligible_2_A = mkA "inteligível" ; --*
lin intemperate_1_A = mkA "rigoroso" ; --*
lin intend_1_VV = mkVV (mkV "pretender") ; --*
lin intend_3_VV = variants {mkVV (mkV "indicar") ; mkVV (mkV "querer") ; mkVV (mkV "significar") ; } ; --*
lin intend_4_VV = variants {mkVV (mkV "for") ; mkVV (mkV "significar") ; } ; --*
lin intend_V2V = mkV2V (mkV "destinar") ; --*
lin intense_1_A = variants {mkA "intensivo" ; mkA "intenso" ; } ; --*
lin intense_2_A = variants {mkA "forte" ; mkA "intenso" ; } ; --*
lin intense_3_A = mkA "intenso" ; --*
lin intensification_1_N = mkN "intensificação" ; --*
lin intensify_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; mkV2 (mkV "up") ; } ; --*
lin intensify_2_V2 = variants {mkV2 (mkV "acirrar") ; mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; } ; --*
lin intensify_3_V = mkV "intensificar" ; --*
lin intensify_4_V2 = mkV2 (mkV "aumentar") ; --*
lin intensify_4_V = mkV "aumentar" ; --*
lin intensional_A = mkA "intensional" ; --*
lin intension_N = mkN "significado" ; --*
lin intensity_1_N = variants {mkN "intensidade" ; mkN "level" ; } ; --*
lin intensity_2_N = mkN "intensidade" ; --*
lin intensity_3_N = variants {mkN "gritaria" ; mkN "intensidade" ; mkN "volume" ; } ; --*
lin intensive_1_A = variants {mkA "intensivo" ; mkA "intenso" ; } ; --*
lin intensive_2_A = mkA "intensivo" ; --*
lin intensive_3_A = variants {mkA "intensivo" ; mkA "intenso" ; } ; --*
lin intent_1_N = variants {mkN "finalidade" ; mkN "intenção" ; mkN "intento" ; mkN "objectivo" ; mkN "objetivo" ; mkN "propósito" ; } ; --*
lin intent_2_N = variants {mkN "intenção" ; mkN "significado" ; } ; --*
lin intent_A = variants {mkA "absorto" ; mkA "absorvido" ; } ; --*
lin intention_1_N = variants {mkN "finalidade" ; mkN "intenção" ; mkN "intento" ; mkN "objectivo" ; mkN "objetivo" ; mkN "propósito" ; } ; --*
lin intention_2_N = mkN "intenção" ; --*
lin intention_3_N = mkN "intenção" ; --*
lin intentional_1_A = variants {mkA "intencional" ; mkA "premeditado" ; mkA "proposital" ; } ; --*
lin intentional_2_A = variants {mkA "desenhado" ; mkA "projetado" ; } ; --*
lin interaction_1_N = mkN "interação" ; --*
lin interaction_2_N = variants {mkN "interação" ; mkN "interacção" ; mkN "interaction" ; } ; --*
lin interactional_A = variants {mkA "interactivo" ; mkA "interativo" ; } ; --*
lin interactive_1_A = variants {mkA "interativo" ; mkA "sinérgico" ; } ; --*
lin interactive_2_A = variants {mkA "interactivo" ; mkA "interativo" ; } ; --*
lin interact_V = mkV "interagir" ; --*
lin interbreed_V = variants {mkV "cruzar" ; mkV "hibridizar" ; } ; --*
lin intercede_V = variants {mkV "interceder" ; mkV "mediar" ; } ; --*
lin intercept_1_V2 = mkV2 (mkV "intercetar") ; --*
lin intercept_2_V2 = mkV2 (mkV "interceptar") ; --*
lin interception_1_N = mkN "intercepção" ; --*
lin interception_2_N = mkN "interceptação" ; --*
lin intercession_1_N = mkN "intercessão" ; --*
lin intercession_2_N = mkN "intervenção" ; --*
lin interchange_1_N = mkN "trevo" ; --*
lin interchange_1_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin interchange_2_N = mkN "intercâmbio" ; --*
lin interchange_2_V2 = mkV2 (mkV "trocar") ; --*
lin interchange_3_N = variants {mkN "câmbio" ; mkN "troca" ; } ; --*
lin interchange_3_V2 = mkV2 (mkV "trocar") ; --*
lin interchange_4_V2 = variants {mkV2 (mkV "alternar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin interchangeable_1_A = mkA "intercambiável" ; --*
lin interchangeable_2_A = mkA "intercambiável" ; --*
lin intercommunicate_2_V = variants {mkV "comunicar" ; mkV "transmitir" ; } ; --*
lin intercom_N = variants {mkN "interfone" ; mkN "system" ; } ; --*
lin interconnect_1_V2 = mkV2 (mkV "interconectar") ; --*
lin interconnect_2_V2 = variants {mkV2 (mkV "interconectar") ; mkV2 (mkV "interligar") ; } ; --*
lin interconnect_2_V = variants {mkV "interconectar" ; mkV "interligar" ; } ; --*
lin interconnectedness_N = mkN "interligação" ; --*
lin interconnection_1_N = mkN "interligação" ; --*
lin intercostal_A = mkA "intercostal" ; --*
lin intercostal_N = variants {mkN "entre" ; mkN "intercostalis" ; mkN "muscle" ; } ; --*
lin intercourse_2_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; } ; --*
lin interdependence_1_N = variants {mkN "interdependência" ; mkN "Interdependência" ; } ; --*
lin interdependent_A = variants {mkA "beneficial" ; mkA "interdependente" ; } ; --*
lin interdict_1_V2 = mkV2 (mkV "interditar") ; --*
lin interdict_2_N = mkN "interdição" ; --*
lin interdict_2_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin interdiction_1_N = mkN "interdição" ; --*
lin interdiction_2_N = mkN "interdição" ; --*
lin interdisciplinary_A = mkA "interdisciplinar" ; --*
lin interest_1_V2 = mkV2 (mkV "interessar") ; --*
lin interest_1_V = mkV "interessar" ; --*
lin interest_2_N = variants {mkN "lucro" ; mkN "saqué" ; } ; --*
lin interest_2_V = variants {mkV "dizer" ; mkV "preocupar" ; mkV "ter" ; } ; --*
lin interest_3_V2 = variants {mkV2 (mkV "interessar") ; mkV2 (mkV "to") ; } ; --*
lin interest_3_V = variants {mkV "interessar" ; mkV "to" ; } ; --*
lin interest_4_N = variants {mkN "interesses" ; mkN "juro" ; mkN "juros" ; mkN "rendimento" ; } ; --*
lin interest_6_N = variants {mkN "group" ; mkN "grupos" ; } ; --*
lin interest_7_N = variants {mkN "entreterimento" ; mkN "jogo" ; mkN "passatempo" ; } ; --*
lin interested_1_A = mkA "interessado" ; --*
lin interested_2_A = mkA "interessado" ; --*
lin interesting_A = variants {mkA "curisoso" ; mkA "interessante" ; } ; --*
lin interest_in_N2 = mkN2 (mkN "interesse") noPrep ; --*
lin interface_1_N = mkN "interface" ; --*
lin interface_2_N = variants {mkN "interface" ; mkN "Interface" ; } ; --*
lin interface_4_N = mkN "porta" ; --*
lin interference_1_N = variants {mkN "interferência" ; mkN "intervenção" ; } ; --*
lin interference_2_N = variants {mkN "impedimento" ; mkN "interferência" ; } ; --*
lin interference_3_N = variants {mkN "estrondo" ; mkN "ruído" ; } ; --*
lin interference_5_N = mkN "obstáculo" ; --*
lin interfere_with_V2 = mkV2 (mkV "interferir") ; --*
lin interferon_N = mkN "interferon" ; --*
lin intergalactic_A = variants {mkA "intergaláctico" ; mkA "intergalático" ; } ; --*
lin interim_A = variants {mkA "interino" ; mkA "precário" ; } ; --*
lin interim_N = mkN "intervalo" ; --*
lin interior_1_N = mkN "interior" ; --*
lin interior_2_A = mkA "nacional" ; --*
lin interior_3_A = variants {mkA "interior" ; mkA "interno" ; } ; --*
lin interior_4_A = mkA "interior" ; --*
lin interjection_1_N = mkN "interjeição" ; --*
lin interjection_2_N = variants {mkN "interjeição" ; mkN "interpolação" ; mkN "intervenção" ; } ; --*
lin interject_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "interpor") ; } ; --*
lin interlace_1_V2 = variants {mkV2 (mkV "enlaçar") ; mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; mkV2 (mkV "envenenar") ; mkV2 (mkV "trançar") ; } ; --*
lin interlace_2_V2 = mkV2 (mkV "entrelaçar") ; --*
lin interlinear_1_A = mkA "interlinear" ; --*
lin interlink_1_V2 = mkV2 (mkV "interconectar") ; --*
lin interlink_2_V2 = variants {mkV2 (mkV "interconectar") ; mkV2 (mkV "interligar") ; } ; --*
lin interlink_2_V = variants {mkV "interconectar" ; mkV "interligar" ; } ; --*
lin interlock_2_V2 = mkV2 (mkV "entrelaçar") ; --*
lin interlock_3_V2 = mkV2 (mkV "entrelaçar-se") ; --*
lin interlocutor_1_N = mkN "interlocutor" ; --*
lin interlocutor_2_N = variants {mkN "interlocutor" ; mkN "partner" ; } ; --*
lin intermarriage_1_N = mkN "exogamia" ; --*
lin intermarriage_2_N = variants {mkN "endogamia" ; mkN "Endogamia" ; } ; --*
lin intermediary_N = variants {mkN "intercessor" ; mkN "mediador" ; } ; --*
lin intermediate_1_A = mkA "intermédio" ; --*
lin intermediate_2_A = mkA "médio" ; --*
lin interment_N = variants {mkN "enterro" ; mkN "funeral" ; mkN "inumação" ; mkN "sepultamento" ; mkN "sepultura" ; } ; --*
lin intermezzo_2_N = mkN "Intermezzo" ; --*
lin interminable_A = variants {mkA "incessante" ; mkA "infindável" ; mkA "infinita" ; mkA "infinito" ; mkA "interminável" ; } ; --*
lin intermingle_V2 = variants {mkV2 (mkV "mesclar") ; mkV2 (mkV "misturar") ; } ; --*
lin intermission_1_N = variants {mkN "pausa" ; mkN "suspensão" ; } ; --*
lin intermission_2_N = variants {mkN "fazerumapausa" ; mkN "interrupção" ; mkN "pausa" ; mkN "suspensão" ; } ; --*
lin intermittence_1_N = mkN "intermitência" ; --*
lin intermittent_A = mkA "intermitente" ; --*
lin intermixture_1_N = mkN "mistura" ; --*
lin intermixture_3_N = mkN "mistura" ; --*
lin intermix_V2 = variants {mkV2 (mkV "mesclar") ; mkV2 (mkV "misturar") ; } ; --*
lin intermix_V = variants {mkV "mesclar" ; mkV "misturar" ; } ; --*
lin intermolecular_A = mkA "intermolecular" ; --*
lin intern_1_V2 = mkV2 (mkV "emprisionar") ; --*
lin intern_2_V2 = mkV2 (mkV "estagiar") ; --*
lin internal_1_A = mkA "interno" ; --*
lin internal_2_A = mkA "interno" ; --*
lin internal_3_A = mkA "nacional" ; --*
lin internal_4_A = variants {mkA "interior" ; mkA "interno" ; } ; --*
lin internal_5_A = mkA "interno" ; --*
lin internalize_1_V2 = variants {mkV2 (mkV "interiorizar") ; mkV2 (mkV "internalizar") ; } ; --*
lin international_1_A = mkA "internacional" ; --*
lin international_2_A = variants {mkA "externo" ; mkA "internacional" ; } ; --*
lin internationalism_1_N = mkN "internacionalismo" ; --*
lin internationalism_2_N = variants {mkN "internacionalismo" ; mkN "Internacionalismo" ; } ; --*
lin internationality_N = variants {mkN "internacionalismo" ; mkN "Internacionalismo" ; } ; --*
lin internationalization_1_N = variants {mkN "internacionalização" ; mkN "mundialização" ; } ; --*
lin internationalize_2_V2 = mkV2 (mkV "internacionalizar") ; --*
lin interne_N = variants {mkN "estagiária" ; mkN "estagiário" ; mkN "intern" ; mkN "residente" ; } ; --*
lin internet_N = variants {mkN "ciberespaço" ; mkN "Ciberespaço" ; mkN "internet" ; } ; --*
lin internment_2_N = mkN "aprisionamento" ; --*
lin intern_N = variants {mkN "estagiária" ; mkN "estagiário" ; mkN "intern" ; mkN "residente" ; } ; --*
lin internship_N = mkN "estágio" ; --*
lin interoperability_N = variants {mkN "interoperabilidade" ; mkN "Interoperabilidade" ; } ; --*
lin interoperable_A = mkA "interoperável" ; --*
lin interpellation_2_N = variants {mkN "interjeição" ; mkN "interpolação" ; mkN "intervenção" ; } ; --*
lin interplay_N = variants {mkN "interação" ; mkN "interacção" ; } ; --*
lin interpolate_1_V2 = variants {mkV2 (mkV "extrapolar") ; mkV2 (mkV "interpolar") ; } ; --*
lin interpolate_2_V2 = mkV2 (mkV "interpolar") ; --*
lin interpolation_2_N = mkN "interpolação" ; --*
lin interpolation_3_N = variants {mkN "interjeição" ; mkN "interpolação" ; mkN "intervenção" ; } ; --*
lin interpol_PN = mkPN "Interpol" ; --*
lin interpose_1_V = mkV "interpor" ; --*
lin interpose_2_V2 = mkV2 (mkV "interpor") ; --*
lin interpose_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "interpor") ; } ; --*
lin interposition_1_N = variants {mkN "interjeição" ; mkN "interpolação" ; mkN "intervenção" ; } ; --*
lin interpret_1_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin interpret_2_V2 = mkV2 (mkV "interpretar") ; --*
lin interpret_2_V = mkV "interpretar" ; --*
lin interpret_3_V2 = mkV2 (mkV "interpretar") ; --*
lin interpret_4_V2 = variants {mkV2 (mkV "figurar") ; mkV2 (mkV "representar") ; } ; --*
lin interpret_5_V2 = mkV2 (mkV "traduzir") ; --*
lin interpret_6_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "interpretar") ; mkV2 (mkV "traduzir") ; } ; --*
lin interpretation_1_N = mkN "interpretação" ; --*
lin interpretation_2_N = mkN "interpretação" ; --*
lin interpretation_3_N = mkN "interpretação" ; --*
lin interpretation_4_N = mkN "interpretação" ; --*
lin interpreter_1_N = variants {mkN "intéprete" ; mkN "intérprete" ; mkN "tradutor" ; } ; --*
lin interpreter_2_N = mkN "intérprete" ; --*
lin interpreter_3_N = variants {mkN "porta-voz" ; mkN "representante" ; } ; --*
lin interpreter_4_N = variants {mkN "intérprete" ; mkN "program" ; } ; --*
lin interregnum_N = mkN "interregno" ; --*
lin interrelate_1_V2 = variants {mkV2 (mkV "inter-relacionar") ; mkV2 (mkV "relacionar") ; } ; --*
lin interrelate_2_V2 = mkV2 (mkV "inter-relacionar") ; --*
lin interrelation_N = variants {mkN "interrelação" ; mkN "interrelacionamento" ; } ; --*
lin interrelationship_N = variants {mkN "interrelação" ; mkN "interrelacionamento" ; } ; --*
lin interrogate_2_V2 = variants {mkV2 (mkV "interrogar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "questionar") ; } ; --*
lin interrogation_1_N = variants {mkN "interrogação" ; mkN "pergunta" ; mkN "questão" ; mkN "sentence" ; } ; --*
lin interrogation_3_N = mkN "interrogatório" ; --*
lin interrogation_4_N = variants {mkN "indagação" ; mkN "inquérito" ; mkN "interrogação" ; mkN "pergunta" ; mkN "perguntar" ; mkN "questão" ; } ; --*
lin interrogative_1_A = mkA "interrogativo" ; --*
lin interrogative_1_N = variants {mkN "interrogação" ; mkN "pergunta" ; mkN "questão" ; mkN "sentence" ; } ; --*
lin interrogator_N = mkN "interrogador" ; --*
lin interrupt_1_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "up") ; } ; --*
lin interrupt_2_V2 = variants {mkV2 (mkV "disturbar") ; mkV2 (mkV "interromper") ; mkV2 (mkV "perturbar") ; } ; --*
lin interrupt_3_V2 = variants {mkV2 (mkV "impedir") ; mkV2 (mkV "interromper") ; } ; --*
lin interrupt_4_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "suspender") ; } ; --*
lin interruption_1_N = variants {mkN "interrupção" ; mkN "pausa" ; } ; --*
lin interruption_2_N = variants {mkN "interrupção" ; mkN "pausa" ; } ; --*
lin interruption_3_N = variants {mkN "fazerumapausa" ; mkN "interrupção" ; mkN "pausa" ; mkN "suspensão" ; } ; --*
lin interrupt_N = mkN "Interrupção" ; --*
lin intersection_1_N = variants {mkN "intersecção" ; mkN "of" ; mkN "point" ; } ; --*
lin intersection_2_N = variants {mkN "cruzamento" ; mkN "encruzilhada" ; } ; --*
lin intersection_3_N = mkN "interseção" ; --*
lin intersection_4_N = variants {mkN "product" ; mkN "produto" ; } ; --*
lin intersection_5_N = mkN "sobreposição" ; --*
lin intersect_V2 = variants {mkV2 (mkV "cruzar-se") ; mkV2 (mkV "intersectar") ; mkV2 (mkV "se") ; } ; --*
lin intersect_V = variants {mkV "cruzar-se" ; mkV "intersectar" ; mkV "se" ; } ; --*
lin interstitial_A = mkA "intersticial" ; --*
lin intertribal_A = mkA "intertribal" ; --*
lin intertrigo_N = mkN "Intertrigo" ; --*
lin intertwine_1_V2 = variants {mkV2 (mkV "enlaçar") ; mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; mkV2 (mkV "envenenar") ; mkV2 (mkV "trançar") ; } ; --*
lin inter_V2 = variants {mkV2 (mkV "enterrar") ; mkV2 (mkV "sepultar") ; mkV2 (mkV "soterrar") ; mkV2 (mkV "to") ; } ; --*
lin interval_1_N = variants {mkN "interval" ; mkN "intervalo" ; } ; --*
lin interval_2_N = mkN "intervalo" ; --*
lin interval_3_N = mkN "distância" ; --*
lin interval_4_N = variants {mkN "interval" ; mkN "intervalo" ; } ; --*
lin intervention_1_N = mkN "intervenção" ; --*
lin intervention_2_N = variants {mkN "interferência" ; mkN "intervenção" ; } ; --*
lin intervention_5_N = mkN "tratamento" ; --*
lin interview_1_N = mkN "entrevista" ; --*
lin interview_1_V2 = variants {mkV2 (mkV "entrevistar") ; mkV2 (mkV "questionar") ; } ; --*
lin interview_2_N = variants {mkN "audiência" ; mkN "entrevista" ; } ; --*
lin interview_2_V2 = mkV2 (mkV "entrevistar") ; --*
lin interview_3_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "ser") ; } ; --*
lin interviewer_N = mkN "entrevistador" ; --*
lin interweave_1_V2 = variants {mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; } ; --*
lin intestinal_A = variants {mkA "do" ; mkA "entérico" ; mkA "intestinal" ; } ; --*
lin intestine_N = variants {mkN "barriga" ; mkN "intestino" ; mkN "intestinos" ; } ; --*
lin in_the_affirmative_Adv = mkAdv "afirmativa" ; --*
lin in_the_end_2_Adv = variants {mkAdv "afinal" ; mkAdv "finalmente" ; mkAdv "last" ; mkAdv "long" ; mkAdv "the" ; mkAdv "ultimamente" ; } ; --*
lin in_the_main_1_Adv = variants {mkAdv "especialmente" ; mkAdv "maiormente" ; mkAdv "notadamente" ; mkAdv "precipuamente" ; mkAdv "primariamente" ; mkAdv "principalmente" ; mkAdv "sobretudo" ; mkAdv "the" ; } ; --*
lin in_the_main_2_Adv = variants {mkAdv "em" ; mkAdv "general" ; mkAdv "the" ; } ; --*
lin intimacy_1_N = mkN "familiaridade" ; --*
lin intimacy_2_N = mkN "intimidade" ; --*
lin intimacy_3_N = variants {mkN "intimidade" ; mkN "proximidade" ; } ; --*
lin intimate_1_V2 = mkV2 (mkV "insinuar") ; --*
lin intimate_2_A = mkA "privado" ; --*
lin intimate_2_V2 = mkV2 (mkV "sugestionar") ; --*
lin intimate_4_A = variants {mkA "familiar" ; mkA "íntimo" ; } ; --*
lin intimate_6_A = mkA "sexual" ; --*
lin intimate_7_A = mkA "interno" ; --*
lin intimate_8_A = mkA "versado" ; --*
lin intimate_N = mkN "confidente" ; --*
lin intimation_2_N = mkN "suspeita" ; --*
lin intimidate_1_V2 = mkV2 (mkV "intimidar") ; --*
lin intimidate_2_V2 = mkV2 (mkV "intimidar") ; --*
lin intimidation_1_N = variants {mkN "bullying" ; mkN "intimidação" ; } ; --*
lin intimidation_2_N = mkN "intimidação" ; --*
lin intimidation_3_N = mkN "intimidação" ; --*
lin intolerable_A = variants {mkA "insuportável" ; mkA "intolerável" ; } ; --*
lin intolerance_1_N = mkN "intolerância" ; --*
lin intolerance_2_N = mkN "intolerância" ; --*
lin intonation_1_N = variants {mkN "contour" ; mkN "entonação" ; } ; --*
lin intone_2_V2 = variants {mkV2 (mkV "cantar") ; mkV2 (mkV "entoar") ; } ; --*
lin intone_3_V2 = mkV2 (mkV "entoar") ; --*
lin intoxicant_1_N = variants {mkN "álcoois" ; mkN "álcool" ; mkN "Bebida" ; mkN "beverage" ; mkN "drink" ; } ; --*
lin intoxicate_1_V2 = variants {mkV2 (mkV "elevar") ; mkV2 (mkV "intoxicar") ; mkV2 (mkV "up") ; } ; --*
lin intoxicate_2_V2 = mkV2 (mkV "embriagar") ; --*
lin intoxicate_3_V2 = variants {mkV2 (mkV "embriagar") ; mkV2 (mkV "intoxicar") ; } ; --*
lin intoxication_1_N = variants {mkN "condition" ; mkN "intoxicação" ; } ; --*
lin intoxication_2_N = variants {mkN "bebedeira" ; mkN "ebriedade" ; mkN "embriaguez" ; } ; --*
lin intracellular_A = mkA "intracelular" ; --*
lin intracranial_A = mkA "intracraniano" ; --*
lin intractable_A = variants {mkA "desobediente" ; mkA "intratável" ; mkA "não" ; } ; --*
lin intramural_A = mkA "intramural" ; --*
lin intranet_N = mkN "intranet" ; --*
lin intransigent_A = mkA "intransigente" ; --*
lin intransitive_A = mkA "intransitivo" ; --*
lin intravenous_A = mkA "intravenoso" ; --*
lin intrench_V2 = variants {mkV2 (mkV "barricar-se") ; mkV2 (mkV "defender-se") ; mkV2 (mkV "entrincheirar") ; mkV2 (mkV "entrincheirar-se") ; } ; --*
lin intrepid_A = variants {mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "intrépido" ; mkA "ousado" ; } ; --*
lin intricacy_N = variants {mkN "complexidade" ; mkN "elaboração" ; } ; --*
lin intricate_A = mkA "intrincado" ; --*
lin intrigue_1_N = variants {mkN "conspiração" ; mkN "intriga" ; } ; --*
lin intrigue_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "intrigar") ; } ; --*
lin intrigue_V = mkV "intrigar" ; --*
lin intrinsic_1_A = variants {mkA "intrínseca" ; mkA "intrínseco" ; } ; --*
lin intro_1_N = mkN "apresentação" ; --*
lin intro_2_N = mkN "intro" ; --*
lin introduce_10_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inaugurar") ; mkV2 (mkV "introduzir") ; } ; --*
lin introduce_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "introduzir") ; } ; --*
lin introduce_2_V2 = mkV2 (mkV "inovar") ; --*
lin introduce_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin introduce_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "introduzir") ; } ; --*
lin introduce_5_V2 = mkV2 (mkV "introduzir") ; --*
lin introduce_6_V2 = variants {mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin introduce_8_V2 = mkV2 (mkV "introduzir") ; --*
lin introduce_9_V2 = variants {mkV2 (mkV "introduzir") ; mkV2 (mkV "preceder") ; mkV2 (mkV "prefaciar") ; } ; --*
lin introduction_1_N = variants {mkN "appearance" ; mkN "apresentação" ; mkN "introdução" ; mkN "lançamento" ; } ; --*
lin introduction_2_N = mkN "introdução" ; --*
lin introduction_3_N = mkN "apresentação" ; --*
lin introduction_4_N = mkN "introdução" ; --*
lin introduction_6_N = variants {mkN "inserção" ; mkN "introdução" ; } ; --*
lin introduction_7_N = variants {mkN "criação" ; mkN "fundação" ; mkN "início" ; mkN "instituição" ; mkN "introdução" ; } ; --*
lin introductory_1_A = mkA "introdutório" ; --*
lin intron_N = mkN "DNA" ; --*
lin introspection_N = mkN "introspecção" ; --*
lin introspective_A = mkA "introvertido" ; --*
lin introspect_V = variants {mkV "introspectar" ; mkV "refletir" ; } ; --*
lin introversive_1_A = mkA "introvertido" ; --*
lin intrude_1_V = variants {mkV "meter" ; mkV "penetrar" ; } ; --*
lin intrude_3_V = variants {mkV "in" ; mkV "intrometer" ; mkV "intrometer-se" ; } ; --*
lin intrusion_1_N = mkN "invasão" ; --*
lin intrusion_2_N = mkN "intrusão" ; --*
lin intrusion_5_N = variants {mkN "intrusão" ; mkN "invasão" ; mkN "violação" ; } ; --*
lin intrusive_1_A = mkA "intrusivo" ; --*
lin intrusive_3_A = mkA "intrusivo" ; --*
lin intrust_V2 = variants {mkV2 (mkV "comissionar") ; mkV2 (mkV "confiar") ; mkV2 (mkV "encarregar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "incumbir") ; mkV2 (mkV "ter") ; } ; --*
lin in_truth_Adv = variants {mkAdv "truth" ; mkAdv "verdadeiramente" ; } ; --*
lin intuition_1_N = mkN "intuição" ; --*
lin intuition_2_N = variants {mkN "intuição" ; mkN "premonição" ; } ; --*
lin intuitionist_A = mkA "intuitivo" ; --*
lin intuitive_1_A = mkA "intuitivo" ; --*
lin intuitive_2_A = mkA "intuitivo" ; --*
lin intuit_V2 = mkV2 (mkV "intuir") ; --*
lin intuit_V = mkV "intuir" ; --*
lin inulin_N = mkN "inulina" ; --*
lin inundate_1_V2 = variants {mkV2 (mkV "alagar") ; mkV2 (mkV "encharcar") ; mkV2 (mkV "inundar") ; } ; --*
lin inundate_2_V2 = mkV2 (mkV "inundar") ; --*
lin inundation_1_N = variants {mkN "aluvião" ; mkN "cheia" ; mkN "dilúvio" ; mkN "enchente" ; mkN "inundação" ; mkN "temporal" ; } ; --*
lin inundation_2_N = mkN "dilúvio" ; --*
lin inure_V2 = variants {mkV2 (mkV "acostumar") ; mkV2 (mkV "costumar") ; } ; --*
lin inutility_N = mkN "inutilidade" ; --*
lin invade_1_V2 = variants {mkV2 (mkV "invadir") ; mkV2 (mkV "ocupar") ; } ; --*
lin invade_3_V2 = variants {mkV2 (mkV "infestar") ; mkV2 (mkV "invadir") ; } ; --*
lin invade_4_V2 = mkV2 (mkV "invadir") ; --*
lin invalid_1_A = variants {mkA "inválido" ; mkA "nulo" ; } ; --*
lin invalid_2_A = mkA "inválido" ; --*
lin invalidate_1_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "invalidar") ; mkV2 (mkV "revogar") ; } ; --*
lin invalidate_2_V2 = mkV2 (mkV "invalidar") ; --*
lin invalidate_3_V2 = mkV2 (mkV "invalidar") ; --*
lin invalidate_4_V2 = mkV2 (mkV "invalidar") ; --*
lin invalidation_N = mkN "anulação" ; --*
lin invaluable_A = variants {mkA "impagável" ; mkA "inestimável" ; mkA "que" ; mkA "sem" ; } ; --*
lin invariability_1_N = mkN "invariabilidade" ; --*
lin invariability_2_N = mkN "invariabilidade" ; --*
lin invariable_A = mkA "invariável" ; --*
lin invariance_1_N = mkN "invariabilidade" ; --*
lin invariant_1_A = variants {mkA "invariante" ; mkA "invariável" ; } ; --*
lin invariant_2_A = mkA "constante" ; --*
lin invariant_N = variants {mkN "invariância" ; mkN "Invariante" ; } ; --*
lin invasion_1_N = mkN "invasão" ; --*
lin invasion_2_N = mkN "invasão" ; --*
lin invasive_1_A = mkA "invasivo" ; --*
lin invasive_2_A = mkA "invasivo" ; --*
lin invective_N = variants {mkN "invectiva" ; mkN "vitupério" ; } ; --*
lin inveigle_V2 = mkV2 (mkV "adular") ; --*
lin invent_1_V2 = variants {mkV2 (mkV "forjar") ; mkV2 (mkV "formular") ; mkV2 (mkV "inventar") ; } ; --*
lin invent_2_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "up") ; } ; --*
lin invent_2_V = variants {mkV "inventar" ; mkV "up" ; } ; --*
lin invention_1_N = variants {mkN "concepção" ; mkN "inovação" ; mkN "invenção" ; } ; --*
lin invention_2_N = variants {mkN "inovação" ; mkN "invenção" ; } ; --*
lin invention_3_N = mkN "invenção" ; --*
lin inventive_A = variants {mkA "criativo" ; mkA "imaginativo" ; mkA "inventivo" ; } ; --*
lin inventiveness_N = variants {mkN "criatividade" ; mkN "talento" ; } ; --*
lin inventor_N = variants {mkN "artífice" ; mkN "descobridor" ; mkN "inventor" ; mkN "Inventor" ; mkN "Inventores" ; } ; --*
lin inventory_1_N = variants {mkN "inventário" ; mkN "inventários" ; mkN "list" ; } ; --*
lin inventory_2_N = variants {mkN "estoque" ; mkN "inventário" ; } ; --*
lin inventory_5_N = mkN "inventários" ; --*
lin inverse_1_A = mkA "inverso" ; --*
lin inverse_2_A = mkA "inverso" ; --*
lin inverse_N = mkN "inversão" ; --*
lin inversion_1_N = mkN "inversão" ; --*
lin invert_2_V2 = variants {mkV2 (mkV "inverter") ; mkV2 (mkV "reverter") ; } ; --*
lin invert_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "desvirar") ; mkV2 (mkV "inverter") ; } ; --*
lin invertebrate_A = mkA "invertebrado" ; --*
lin invertebrate_N = variants {mkN "invertebrado" ; mkN "invertebrados" ; } ; --*
lin inverter_N = mkN "Inversor" ; --*
lin invest_1_V2 = mkV2 (mkV "investir") ; --*
lin invest_2_V2 = variants {mkV2 (mkV "dotar") ; mkV2 (mkV "investir") ; } ; --*
lin invest_2_V = variants {mkV "dotar" ; mkV "investir" ; } ; --*
lin invest_3_V2 = mkV2 (mkV "investir") ; --*
lin invest_3_V = mkV "investir" ; --*
lin invest_4_V2 = variants {mkV2 (mkV "entronar") ; mkV2 (mkV "investir") ; } ; --*
lin invest_5_V2 = mkV2 (mkV "empossar") ; --*
lin investigate_1_V2 = variants {mkV2 (mkV "into") ; mkV2 (mkV "pesquisar") ; } ; --*
lin investigate_2_V2 = mkV2 (mkV "investigar") ; --*
lin investigation_1_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "pesquisa" ; mkN "sindicância" ; } ; --*
lin investigation_2_N = mkN "investigação" ; --*
lin investigator_1_N = variants {mkN "investigador" ; mkN "pesquisador" ; mkN "worker" ; } ; --*
lin investigator_2_N = mkN "investigador" ; --*
lin investigator_3_N = variants {mkN "detective" ; mkN "detetive" ; } ; --*
lin investing_N = mkN "investimento" ; --*
lin investiture_1_N = mkN "coroação" ; --*
lin investment_1_N = mkN "investimento" ; --*
lin investment_2_N = variants {mkN "funds" ; mkN "investimento" ; } ; --*
lin investor_N = mkN "investidor" ; --*
lin inveterate_A = variants {mkA "crónico" ; mkA "crônico" ; mkA "inveterado" ; } ; --*
lin invigorate_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "inspirar") ; } ; --*
lin invigorate_2_V2 = mkV2 (mkV "envigorar") ; --*
lin invigorate_3_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "envigorar") ; mkV2 (mkV "up") ; } ; --*
lin invincibility_N = mkN "invencibilidade" ; --*
lin invincible_A = mkA "invencível" ; --*
lin inviolable_1_A = mkA "inviolável" ; --*
lin inviolable_2_A = variants {mkA "inatacável" ; mkA "inviolável" ; mkA "seguro" ; } ; --*
lin inviolable_3_A = mkA "inviolável" ; --*
lin inviolable_4_A = variants {mkA "absoluto" ; mkA "inviolável" ; } ; --*
lin inviolate_1_A = mkA "salvo" ; --*
lin inviolate_2_A = mkA "inviolável" ; --*
lin invisibility_N = mkN "invisibilidade" ; --*
lin invisible_1_A = variants {mkA "Hollow" ; mkA "invisível" ; } ; --*
lin invisible_2_A = mkA "invisível" ; --*
lin invitation_1_N = variants {mkN "convite" ; mkN "invitação" ; } ; --*
lin invitational_A = mkA "invitador" ; --*
lin invite_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "pedir") ; } ; --*
lin invite_2_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "over") ; mkV2 (mkV "round") ; } ; --*
lin invite_3_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "tentar") ; } ; --*
lin invite_4_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "pedir") ; } ; --*
lin invite_4_V2V = variants {mkV2V (mkV "convidar") ; mkV2V (mkV "pedir") ; } ; --*
lin invite_6_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "in") ; } ; --*
lin invite_7_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "solicitar") ; } ; --*
lin invite_8_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "in") ; mkV2 (mkV "receber") ; } ; --*
lin invocation_3_N = variants {mkN "conjuração" ; mkN "conjuro" ; mkN "invocação" ; } ; --*
lin invocation_4_N = mkN "invocação" ; --*
lin invoice_N = variants {mkN "conta" ; mkN "contas" ; mkN "factura" ; mkN "facturas" ; mkN "fatura" ; } ; --*
lin invoice_V2 = variants {mkV2 (mkV "cobrar") ; mkV2 (mkV "facturar") ; mkV2 (mkV "faturar") ; } ; --*
lin invoke_2_V2 = mkV2 (mkV "invocar") ; --*
lin invoke_3_V2 = mkV2 (mkV "invocar") ; --*
lin involuntary_1_A = mkA "involuntária" ; --*
lin involuntary_2_A = variants {mkA "involuntária" ; mkA "involuntário" ; } ; --*
lin involution_3_N = variants {mkN "complexidade" ; mkN "elaboração" ; } ; --*
lin involution_4_N = mkN "participação" ; --*
lin involution_5_N = mkN "exponenciação" ; --*
lin involve_1_V2 = mkV2 (mkV "comprometer") ; --*
lin involve_4_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin involve_5_V2 = mkV2 (mkV "acarretar") ; --*
lin involve_6_V2 = mkV2 (mkV "envolver") ; --*
lin involved_4_A = variants {mkA "convoluto" ; mkA "tortuoso" ; } ; --*
lin involvement_1_N = mkN "participação" ; --*
lin involvement_2_N = variants {mkN "envolvimento" ; mkN "participação" ; } ; --*
lin involvement_3_N = mkN "interesse" ; --*
lin involvement_4_N = mkN "intimidade" ; --*
lin involvement_5_N = mkN "participação" ; --*
lin invulnerability_1_N = mkN "invulnerabilidade" ; --*
lin invulnerable_A = mkA "invulnerável" ; --*
lin inward_2_Adv = mkAdv "para" ; --*
lin inwardness_1_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin inwards_1_Adv = mkAdv "para" ; --*
lin iodide_N = variants {mkN "Iodeto" ; mkN "Iodetos" ; } ; --*
lin iodine_1_N = variants {mkN "iodo" ; mkN "number" ; } ; --*
lin iodine_2_N = variants {mkN "iodo" ; mkN "of" ; } ; --*
lin ionic_3_A = variants {mkA "iônico" ; mkA "jônico" ; mkA "jônio" ; } ; --*
lin ionization_2_N = mkN "ionização" ; --*
lin ion_N = variants {mkN "ião" ; mkN "iões" ; mkN "Ion" ; mkN "íon" ; mkN "Íons" ; } ; --*
lin ionosphere_N = mkN "ionosfera" ; --*
lin iota_1_N = variants {mkN "fragmento" ; mkN "pingo" ; mkN "pouco" ; } ; --*
lin iota_2_N = variants {mkN "iota" ; mkN "Ι" ; mkN "Ιota" ; } ; --*
lin iowa_2_PN = variants {mkPN "Iowa" ; mkPN "State" ; } ; --*
lin iowa_3_PN = mkPN "Iowa" ; --*
lin ipsilateral_A = variants {mkA "do" ; mkA "ipsilateral" ; } ; --*
lin iq_N = variants {mkN "QI" ; mkN "Q.I." ; mkN "quotient" ; } ; --*
lin ira_3_N = variants {mkN "cólera" ; mkN "ira" ; mkN "sete" ; } ; --*
lin iranian_A = variants {mkA "iraniano" ; mkA "pérsico" ; } ; --*
lin iranianFem_N = variants {mkN "iraniano" ; mkN "Persa" ; } ; --*
lin iranianMasc_N = variants {mkN "iraniano" ; mkN "Persa" ; } ; --*
lin iranian_N = variants {mkN "language" ; mkN "Línguas" ; } ; --*
lin iran_PN = variants {mkPN "Irã" ; mkPN "Irao" ; mkPN "Irão" ; mkPN "Pérsia" ; mkPN "Republic" ; } ; --*
lin iraqi_1_A = mkA "iraquiano" ; --*
lin iraqi_1_N = mkN "iraquiano" ; --*
lin iraq_PN = variants {mkPN "Iraque" ; mkPN "of" ; } ; --*
lin irascible_1_A = mkA "colérico" ; --*
lin irascible_2_A = mkA "colérico" ; --*
lin ire_1_N = variants {mkN "cólera" ; mkN "ira" ; mkN "raiva" ; mkN "zanga" ; } ; --*
lin ire_2_N = variants {mkN "cólera" ; mkN "ira" ; mkN "sete" ; } ; --*
lin ireland_1_PN = variants {mkPN "Irlanda" ; mkPN "of" ; mkPN "Republic" ; } ; --*
lin ireland_2_PN = variants {mkPN "Irlanda" ; mkPN "Isle" ; } ; --*
lin iridescence_N = mkN "Iridescência" ; --*
lin iridescent_1_A = mkA "iridescente" ; --*
lin iridescent_2_A = mkA "iridescente" ; --*
lin iridium_N = variants {mkN "Iridio" ; mkN "irídio" ; mkN "number" ; } ; --*
lin iris_1_N = variants {mkN "íris" ; mkN "lily" ; } ; --*
lin iris_1_PN = variants {mkPN "íris" ; mkPN "lily" ; } ; --*
lin iris_2_N = variants {mkN "íris" ; mkN "Íris" ; } ; --*
lin iris_2_PN = variants {mkPN "íris" ; mkPN "Íris" ; } ; --*
lin irish_A = mkA "irlandês" ; --*
lin irishFem_1_N = variants {mkN "Irlandês" ; mkN "Irlandesa" ; mkN "people" ; } ; --*
lin irishFem_3_N = variants {mkN "Gaelic" ; mkN "irlandês" ; mkN "língua" ; } ; --*
lin irishman_N = mkN "irlandês" ; --*
lin irishMasc_1_N = variants {mkN "Irlandês" ; mkN "Irlandesa" ; mkN "people" ; } ; --*
lin irishMasc_3_N = variants {mkN "Gaelic" ; mkN "irlandês" ; mkN "língua" ; } ; --*
lin iritis_N = mkN "irite" ; --*
lin irksome_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin irk_V2 = variants {mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; } ; --*
lin iron_1_N = variants {mkN "ferro" ; mkN "Ferro" ; mkN "number" ; } ; --*
lin iron_4_N = variants {mkN "ferro" ; mkN "iron" ; } ; --*
lin iron_A = variants {mkA "férreo" ; mkA "ferro" ; } ; --*
lin ironclad_N = variants {mkN "couraçado" ; mkN "encouraçado" ; } ; --*
lin ironic_1_A = mkA "irônico" ; --*
lin ironical_2_A = mkA "irônico" ; --*
lin ironing_2_N = mkN "passar" ; --*
lin ironing_board_N = mkN "board" ; --*
lin iron_out_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "right") ; } ; --*
lin iron_out_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "passar") ; } ; --*
lin iron_out_2_V = variants {mkV "out" ; mkV "passar" ; } ; --*
lin irons_N = mkN "algema" ; --*
lin iron_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "passar") ; } ; --*
lin iron_V = variants {mkV "out" ; mkV "passar" ; } ; --*
lin ironware_N = variants {mkN "ferragens" ; mkN "quinquilharia" ; } ; --*
lin ironworker_N = mkN "ferreiro" ; --*
lin ironworks_N = mkN "ferraria" ; --*
lin irony_1_N = variants {mkN "ironia" ; mkN "remark" ; mkN "sarcasmo" ; mkN "sátira" ; } ; --*
lin irony_2_N = mkN "ironia" ; --*
lin irony_3_N = mkN "ironia" ; --*
lin irradiation_2_N = variants {mkN "beam" ; mkN "feixe" ; mkN "of" ; mkN "raio" ; } ; --*
lin irradiation_6_N = variants {mkN "Radioterapia" ; mkN "therapy" ; } ; --*
lin irrational_1_A = mkA "irracional" ; --*
lin irrational_2_A = mkA "irracional" ; --*
lin irreconcilable_A = mkA "inconciliável" ; --*
lin irrecoverable_A = mkA "irrecuperável" ; --*
lin irredentism_N = mkN "irredentismo" ; --*
lin irrefutable_A = variants {mkA "incontestável" ; mkA "irrefutável" ; } ; --*
lin irregular_1_N = variants {mkN "guerrilha" ; mkN "guerrilheiro" ; } ; --*
lin irregular_2_A = mkA "irregular" ; --*
lin irregular_3_A = mkA "irregular" ; --*
lin irregular_4_A = mkA "irregular" ; --*
lin irregular_6_A = mkA "irregular" ; --*
lin irregularity_1_N = variants {mkN "anormalidade" ; mkN "Anormalidade" ; mkN "irregularidade" ; } ; --*
lin irregularity_2_N = mkN "irregularidade" ; --*
lin irregularity_3_N = variants {mkN "irregularidade" ; mkN "irregularity" ; } ; --*
lin irregularity_4_N = variants {mkN "obstipação" ; mkN "prisão" ; mkN "Prisão" ; } ; --*
lin irrelevance_N = mkN "irrelevância" ; --*
lin irrelevancy_N = mkN "irrelevância" ; --*
lin irrelevant_A = mkA "irrelevante" ; --*
lin irremediable_A = mkA "irremediável" ; --*
lin irreparable_A = mkA "irreparável" ; --*
lin irreplaceable_A = mkA "insubstituível" ; --*
lin irreproachable_A = variants {mkA "inocente" ; mkA "irrepreensível" ; mkA "irreprochável" ; mkA "sem" ; } ; --*
lin irresistible_1_A = mkA "irresistível" ; --*
lin irresistible_2_A = mkA "irresistível" ; --*
lin irresolution_1_N = mkN "indecisão" ; --*
lin irreverence_1_N = mkN "irreverência" ; --*
lin irreverence_2_N = mkN "irreverência" ; --*
lin irreverent_2_A = variants {mkA "atrevido" ; mkA "impertinente" ; } ; --*
lin irreversibility_N = mkN "irreversibilidade" ; --*
lin irreversible_A = mkA "irreversível" ; --*
lin irrevocable_1_A = mkA "irrevogável" ; --*
lin irridentism_N = mkN "irredentismo" ; --*
lin irrigate_1_V2 = variants {mkV2 (mkV "irrigar") ; mkV2 (mkV "molhar") ; mkV2 (mkV "regar") ; } ; --*
lin irrigation_1_N = mkN "rega" ; --*
lin irritability_1_N = mkN "irritabilidade" ; --*
lin irritability_2_N = mkN "excitabilidade" ; --*
lin irritable_1_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin irritable_3_A = mkA "excitável" ; --*
lin irritant_N = variants {mkN "acúleo" ; mkN "contrariedade" ; mkN "estrepe" ; mkN "incômodo" ; mkN "irritação" ; } ; --*
lin irritate_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin irritate_2_V2 = mkV2 (mkV "irritar") ; --*
lin irritate_3_V2 = mkV2 (mkV "irritar") ; --*
lin irritating_1_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin irritating_2_A = mkA "irritante" ; --*
lin irritating_3_A = variants {mkA "doloroso" ; mkA "irritante" ; } ; --*
lin irritation_1_N = variants {mkN "contrariedade" ; mkN "incômodo" ; mkN "irritação" ; } ; --*
lin irritation_2_N = mkN "irritação" ; --*
lin irritation_6_N = mkN "irritação" ; --*
lin irritation_7_N = mkN "irritação" ; --*
lin irruption_3_N = variants {mkN "deflagração" ; mkN "epidemia" ; mkN "erupção" ; mkN "explosão" ; mkN "surto" ; mkN "Surto" ; } ; --*
lin isaac_PN = variants {mkPN "Isaac" ; mkPN "Isaque" ; } ; --*
lin ischemia_1_N = variants {mkN "isquemia" ; mkN "Isquémia" ; } ; --*
lin ischemic_1_A = mkA "isquêmico" ; --*
lin ischium_N = variants {mkN "bone" ; mkN "ischii" ; mkN "ísquio" ; } ; --*
lin isinglass_N = mkN "mica" ; --*
lin islam_1_N = variants {mkN "Islã" ; mkN "Islame" ; mkN "islamismo" ; mkN "Islão" ; mkN "maometismo" ; } ; --*
lin islam_2_N = mkN "islamismo" ; --*
lin islamic_A = variants {mkA "islâmico" ; mkA "muçulmano" ; } ; --*
lin island_1_N = mkN "ilha" ; --*
lin island_2_N = variants {mkN "ilha" ; mkN "separador" ; } ; --*
lin islander_N = variants {mkN "ilhéu" ; mkN "insulano" ; } ; --*
lin isle_N = variants {mkN "ilha" ; mkN "ilhota" ; mkN "ilhotas" ; } ; --*
lin islet_N = variants {mkN "ilha" ; mkN "ilhota" ; mkN "ilhotas" ; } ; --*
lin ism_N = variants {mkN "doutrina" ; mkN "filosofia" ; mkN "of" ; mkN "system" ; } ; --*
lin isobar_N = mkN "isóbara" ; --*
lin isocyanate_N = variants {mkN "isocianato" ; mkN "Isocianato" ; } ; --*
lin isogamy_N = mkN "isogamia" ; --*
lin isolate_1_V2 = variants {mkV2 (mkV "ilhar") ; mkV2 (mkV "isolar") ; } ; --*
lin isolate_2_V2 = mkV2 (mkV "isolar") ; --*
lin isolate_3_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "isolar") ; mkV2 (mkV "separar") ; } ; --*
lin isolate_4_V2 = mkV2 (mkV "isolar") ; --*
lin isolated_1_A = mkA "isolada" ; --*
lin isolated_2_A = mkA "isolado" ; --*
lin isolated_3_A = mkA "isolado" ; --*
lin isolated_6_A = mkA "isolado" ; --*
lin isolation_1_N = variants {mkN "incomunicação" ; mkN "isolamento" ; } ; --*
lin isolation_3_N = variants {mkN "isolamento" ; mkN "off" ; } ; --*
lin isolationism_N = mkN "isolacionismo" ; --*
lin isoleucine_N = mkN "Isoleucina" ; --*
lin isomerase_N = variants {mkN "isomerase" ; mkN "Isomerase" ; } ; --*
lin isomer_N = variants {mkN "Isomerismo" ; mkN "isómero" ; mkN "isômero" ; } ; --*
lin isometric_4_A = mkA "isométrico" ; --*
lin isometry_1_N = mkN "isometria" ; --*
lin isometry_2_N = mkN "isometria" ; --*
lin isometry_4_N = mkN "isometria" ; --*
lin isomorphism_N = mkN "isomorfismo" ; --*
lin isoniazid_N = mkN "Isoniazida" ; --*
lin isostasy_N = mkN "isostasia" ; --*
lin isotherm_N = mkN "isoterma" ; --*
lin isothiocyanate_N = mkN "Isotiocianato" ; --*
lin isotonic_1_A = mkA "isotônico" ; --*
lin isotonic_2_A = mkA "isotônico" ; --*
lin isotonic_3_A = mkA "isotônico" ; --*
lin isotonic_4_A = mkA "isotônico" ; --*
lin isotope_N = variants {mkN "isótopo" ; mkN "isótopos" ; mkN "Isótopos" ; } ; --*
lin isotropic_1_A = mkA "isotrópico" ; --*
lin isotropy_N = mkN "isotropia" ; --*
lin israel_1_PN = variants {mkPN "Israel" ; mkPN "of" ; } ; --*
lin israel_2_PN = variants {mkPN "Israel" ; mkPN "Músicos" ; } ; --*
lin israeli_A = variants {mkA "israelense" ; mkA "israelita" ; } ; --*
lin israeli_N = variants {mkN "israelense" ; mkN "Israelenses" ; } ; --*
lin issue_10_N = variants {mkN "escapatória" ; mkN "out" ; mkN "porta" ; mkN "saída" ; } ; --*
lin issue_11_N = mkN "publicação" ; --*
lin issue_1_N = variants {mkN "assunto" ; mkN "problema" ; } ; --*
lin issue_1_V2 = variants {mkV2 (mkV "lançar") ; mkV2 (mkV "out") ; mkV2 (mkV "publicar") ; } ; --*
lin issue_2_N = mkN "número" ; --*
lin issue_2_V2 = variants {mkV2 (mkV "distribuir") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "suprir") ; } ; --*
lin issue_3_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin issue_4_N = variants {mkN "emissão" ; mkN "envio" ; mkN "fornecimento" ; } ; --*
lin issue_4_V = variants {mkV "aparecer" ; mkV "forth" ; mkV "out" ; mkV "sair" ; } ; --*
lin issue_5_N = variants {mkN "emissão" ; mkN "issue" ; } ; --*
lin issue_6_N = variants {mkN "receita" ; mkN "renda" ; mkN "rendimento" ; } ; --*
lin issue_7_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin issue_8_N = variants {mkN "descendência" ; mkN "descendente" ; mkN "filho" ; } ; --*
lin istanbul_PN = variants {mkPN "Constantinopla" ; mkPN "Istambul" ; } ; --*
lin isthmus_1_N = variants {mkN "istmo" ; mkN "Istmos" ; } ; --*
lin italian_A = variants {mkA "italiano" ; mkA "itálico" ; mkA "ítalo" ; } ; --*
lin italianFem_N = variants {mkN "italiana" ; mkN "italiano" ; mkN "itálico" ; mkN "ítalo" ; } ; --*
lin italianMasc_N = variants {mkN "italiana" ; mkN "italiano" ; mkN "itálico" ; mkN "ítalo" ; } ; --*
lin italian_N = variants {mkN "italiana" ; mkN "italiano" ; mkN "Lingua" ; mkN "língua" ; } ; --*
lin italic_1_A = mkA "itálico" ; --*
lin italic_2_A = mkA "tag" ; --*
lin italic_2_N = variants {mkN "language" ; mkN "línguas" ; } ; --*
lin italy_PN = variants {mkPN "Italia" ; mkPN "Itália" ; mkPN "Republic" ; } ; --*
lin itch_1_N = mkN "sarna" ; --*
lin itch_1_V = mkV "coçar" ; --*
lin itch_2_N = mkN "comichão" ; --*
lin itch_3_N = variants {mkN "coceira" ; mkN "comichão" ; mkN "prurido" ; } ; --*
lin itch_3_V = variants {mkV "dar" ; mkV "estar" ; mkV "prurir" ; } ; --*
lin itch_4_V = mkV "querer" ; --*
lin itchy_1_A = mkA "nervoso" ; --*
lin item_1_N = mkN "item" ; --*
lin item_2_N = variants {mkN "componente" ; mkN "elemento" ; } ; --*
lin item_4_N = mkN "detalhe" ; --*
lin item_5_N = variants {mkN "selo" ; mkN "símbolo" ; } ; --*
lin itemize_1_V2 = mkV2 (mkV "enumerar") ; --*
lin iterate_1_V2 = variants {mkV2 (mkV "reapresentar") ; mkV2 (mkV "redizer") ; mkV2 (mkV "reiterar") ; mkV2 (mkV "repetir") ; } ; --*
lin iteration_1_N = mkN "iteração" ; --*
lin iteration_3_N = mkN "iteração" ; --*
lin iterative_1_A = mkA "iterativo" ; --*
lin itinerant_A = mkA "itinerante" ; --*
lin itinerant_N = mkN "cigana" ; --*
lin itinerary_1_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "itinerário" ; mkN "itinerários" ; mkN "linha" ; mkN "percurso" ; mkN "rota" ; } ; --*
lin ivory_1_N = variants {mkN "marfim" ; mkN "Marfim" ; } ; --*
lin ivory_2_N = mkN "pérola" ; --*
lin ivorybill_N = variants {mkN "Pica-pau-bico-de-marfim" ; mkN "principalis" ; mkN "woodpecker" ; } ; --*
lin ivy_N = variants {mkN "helix" ; mkN "hera" ; mkN "ivy" ; } ; --*
lin ivy_PN = variants {mkPN "helix" ; mkPN "hera" ; mkPN "ivy" ; } ; --*
lin jab_1_N = mkN "injecção" ; --*
lin jab_1_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "cotovelar") ; mkV2 (mkV "cutucar") ; } ; --*
lin jab_3_V2 = variants {mkV2 (mkV "apunhalar") ; mkV2 (mkV "esfaquear") ; } ; --*
lin jabalpur_PN = mkPN "Jabalpur" ; --*
lin jabber_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "on") ; mkV2 (mkV "reclamar") ; } ; --*
lin jabber_V = variants {mkV "off" ; mkV "on" ; mkV "reclamar" ; } ; --*
lin jabiru_3_N = variants {mkN "jabiru" ; mkN "mycteria" ; mkN "tuiuiú" ; } ; --*
lin jack_10_N = mkN "Macaco" ; --*
lin jack_12_N = variants {mkN "asno" ; mkN "burro" ; mkN "jegue" ; } ; --*
lin jack_1_N = mkN "porcaria" ; --*
lin jack_2_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin jack_3_N = variants {mkN "laborer" ; mkN "obreiro" ; mkN "operário" ; } ; --*
lin jack_4_N = variants {mkN "jaca" ; mkN "jaqueira" ; } ; --*
lin jack_9_N = mkN "valete" ; --*
lin jackal_N = variants {mkN "aureus" ; mkN "chacal" ; } ; --*
lin jackanapes_N = mkN "metido" ; --*
lin jackass_1_N = variants {mkN "asno" ; mkN "estúpido" ; mkN "idiota" ; } ; --*
lin jackass_2_N = variants {mkN "asno" ; mkN "burro" ; mkN "jegue" ; } ; --*
lin jackboot_N = variants {mkN "boot" ; mkN "galocha" ; mkN "Galocha" ; } ; --*
lin jackdaw_N = variants {mkN "gralha" ; mkN "gralha-de-nuca-cinzenta" ; mkN "monedula" ; } ; --*
lin jacket_1_N = mkN "jaqueta" ; --*
lin jackfruit_1_N = variants {mkN "heterophyllus" ; mkN "jaca" ; mkN "tree" ; } ; --*
lin jackfruit_2_N = variants {mkN "jaca" ; mkN "jaqueira" ; } ; --*
lin jackpot_1_N = variants {mkN "bolada" ; mkN "bolão" ; mkN "bolo" ; } ; --*
lin jacob_1_PN = variants {mkPN "Jacob" ; mkPN "Jaime" ; } ; --*
lin jacob_2_PN = mkPN "Jacó" ; --*
lin jactitation_1_N = mkN "ostentamento" ; --*
lin jade_1_N = mkN "jade" ; --*
lin jade_2_N = variants {mkN "meretriz" ; mkN "prostituta" ; mkN "woman" ; } ; --*
lin jade_3_N = variants {mkN "green" ; mkN "jade" ; } ; --*
lin jade_4_N = mkN "rocim" ; --*
lin jaggery_1_N = variants {mkN "açúcar" ; mkN "rapadura" ; } ; --*
lin jaguar_N = variants {mkN "acanguçu" ; mkN "canguçu" ; mkN "jaguar" ; mkN "jaguaretê" ; mkN "onca" ; mkN "onça-pintada" ; } ; --*
lin jaguarundi_1_N = variants {mkN "cat" ; mkN "gato-mourisco" ; mkN "jaguarundi" ; mkN "yagouaroundi" ; } ; --*
lin jail_N = variants {mkN "cadeia" ; mkN "cana" ; mkN "cárcere" ; mkN "casa" ; mkN "grades" ; mkN "grande" ; mkN "penalidade" ; mkN "penálti" ; mkN "pênalti" ; mkN "penalty" ; mkN "presídio" ; mkN "prisão" ; mkN "prisno" ; mkN "xadrez" ; mkN "xilindró" ; } ; --*
lin jail_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin jakarta_PN = variants {mkPN "Jacarta" ; mkPN "Jakarta" ; mkPN "of" ; } ; --*
lin jalapeno_1_N = variants {mkN "annuum" ; mkN "pepper" ; mkN "pimento" ; } ; --*
lin jalopy_N = mkN "calhambeque" ; --*
lin jalousie_2_N = mkN "gelosia" ; --*
lin jam_1_N = variants {mkN "atolamento" ; mkN "compota" ; mkN "conservas" ; mkN "Doce" ; mkN "geléia" ; } ; --*
lin jam_1_V2 = mkV2 (mkV "lotar") ; --*
lin jam_2_N = variants {mkN "dificuldade" ; mkN "merda" ; mkN "of" ; mkN "problema" ; } ; --*
lin jam_3_N = mkN "multidão" ; --*
lin jam_3_V2 = mkV2 (mkV "machucar") ; --*
lin jam_5_V = variants {mkV "emperrar" ; mkV "prender" ; } ; --*
lin jam_6_V2 = variants {mkV2 (mkV "lotar") ; mkV2 (mkV "up") ; } ; --*
lin jam_7_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "entupir") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "ocluir") ; mkV2 (mkV "tapar") ; mkV2 (mkV "trancar") ; mkV2 (mkV "up") ; } ; --*
lin jamaica_1_PN = mkPN "Jamaica" ; --*
lin jamaica_2_PN = mkPN "Jamaica" ; --*
lin jamaican_A = mkA "jamaicano" ; --*
lin jamaican_N = mkN "jamaicano" ; --*
lin jamb_N = mkN "portal" ; --*
lin jamboree_N = variants {mkN "affair" ; mkN "gala" ; } ; --*
lin james_10_PN = variants {mkPN "Epístola" ; mkPN "of" ; } ; --*
lin james_4_PN = variants {mkPN "James" ; mkPN "Jesse" ; } ; --*
lin james_5_PN = mkPN "James" ; --*
lin james_6_PN = mkPN "James" ; --*
lin james_7_PN = variants {mkPN "James" ; mkPN "Tiago" ; } ; --*
lin james_8_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin jampack_V2 = variants {mkV2 (mkV "lotar") ; mkV2 (mkV "up") ; } ; --*
lin jangle_V = variants {mkV "retinir" ; mkV "tilintar" ; mkV "tinir" ; } ; --*
lin janissary_2_N = mkN "janízaro" ; --*
lin janitor_N = mkN "zelador" ; --*
lin jan_PN = variants {mkPN "jan" ; mkPN "janeiro" ; mkPN "Janeiro" ; } ; --*
lin janus_PN = mkPN "Jano" ; --*
lin japan_1_PN = variants {mkPN "Archipelago" ; mkPN "Islands" ; mkPN "Japão" ; } ; --*
lin japan_2_PN = mkPN "Japão" ; --*
lin japanese_A = variants {mkA "japonês" ; mkA "nipônico" ; } ; --*
lin japaneseFem_N = variants {mkN "escrita" ; mkN "japonês" ; mkN "Japonês" ; mkN "japonesa" ; mkN "japonesas" ; mkN "japoneses" ; } ; --*
lin japaneseMasc_N = variants {mkN "escrita" ; mkN "japonês" ; mkN "Japonês" ; mkN "japonesa" ; mkN "japonesas" ; mkN "japoneses" ; } ; --*
lin japanese_N = mkN "japonês" ; --*
lin jape_N = variants {mkN "bazófia" ; mkN "brincadeira" ; mkN "caçoada" ; mkN "chiste" ; mkN "graça" ; mkN "gracejo" ; mkN "piada" ; } ; --*
lin japonica_1_N = variants {mkN "Camellia" ; mkN "japonica" ; } ; --*
lin jar_1_N = variants {mkN "garrafa" ; mkN "vasilha" ; } ; --*
lin jar_1_V = variants {mkV "colidir" ; mkV "não" ; } ; --*
lin jar_2_V2 = variants {mkV2 (mkV "abalar") ; mkV2 (mkV "agitar") ; } ; --*
lin jar_2_V = variants {mkV "abalar" ; mkV "agitar" ; } ; --*
lin jar_3_N = mkN "sacudida" ; --*
lin jar_3_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "around") ; mkV2 (mkV "up") ; } ; --*
lin jar_4_V2 = mkV2 (mkV "incomodar") ; --*
lin jar_5_V2 = mkV2 (mkV "envasar") ; --*
lin jargon_1_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin jargon_3_N = variants {mkN "jargão" ; mkN "Variação" ; } ; --*
lin jasmine_N = mkN "jasmim" ; --*
lin jason_PN = mkPN "Jasão" ; --*
lin jasper_N = mkN "jaspe" ; --*
lin jaundice_1_N = variants {mkN "ictericia" ; mkN "icterícia" ; mkN "Icterícia" ; } ; --*
lin jaundice_2_N = variants {mkN "acrimónia" ; mkN "acrimônia" ; mkN "acuidade" ; mkN "agrura" ; mkN "agudeza" ; } ; --*
lin jaunt_N = variants {mkN "excursão" ; mkN "ida" ; mkN "passeio" ; mkN "trip" ; } ; --*
lin jaunt_V = mkV "viajar" ; --*
lin jaunty_2_A = variants {mkA "alegre" ; mkA "animado" ; } ; --*
lin java_1_PN = mkPN "Java" ; --*
lin java_2_N = mkN "café" ; --*
lin java_3_PN = variants {mkPN "Java" ; mkPN "Linguagem" ; } ; --*
lin javanese_1_N = variants {mkN "jau" ; mkN "Javan" ; mkN "javanês" ; } ; --*
lin javanese_2_N = variants {mkN "jau" ; mkN "javanês" ; } ; --*
lin javanese_A = mkA "javanês" ; --*
lin javelin_2_N = variants {mkN "javalina" ; mkN "lança" ; } ; --*
lin jaw_1_N = mkN "mandíbula" ; --*
lin jaw_1_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin jaw_2_N = mkN "mandíbula" ; --*
lin jaw_3_V = variants {mkV "mascar" ; mkV "mastigar" ; } ; --*
lin jaw_4_V = variants {mkV "censurar" ; mkV "condenar" ; mkV "descompor" ; mkV "down" ; mkV "esculhambar" ; mkV "on" ; mkV "out" ; mkV "repreender" ; mkV "reprimendar" ; mkV "reprimir" ; mkV "reprovar" ; mkV "to" ; mkV "up" ; mkV "verberar" ; mkV "words" ; } ; --*
lin jawbone_N = variants {mkN "bone" ; mkN "jaw" ; mkN "jawbone" ; mkN "Mandibula" ; mkN "Mandíbula" ; mkN "maxila" ; } ; --*
lin jay_N = variants {mkN "gaio" ; mkN "gralha" ; mkN "jota" ; } ; --*
lin jay_PN = variants {mkPN "Jay" ; mkPN "John" ; } ; --*
lin jazz_2_N = variants {mkN "jazz" ; mkN "Jazz" ; } ; --*
lin jazz_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin jazz_3_N = mkN "jazz" ; --*
lin jazzy_2_A = mkA "vistoso" ; --*
lin jealous_1_A = variants {mkA "ciumento" ; mkA "invejosa" ; mkA "invejoso" ; } ; --*
lin jealous_2_A = variants {mkA "cioso" ; mkA "ciumento" ; } ; --*
lin jealousy_1_N = variants {mkN "ciúmes" ; mkN "monster" ; } ; --*
lin jean_N = mkN "Denim" ; --*
lin jean_PN = mkPN "Denim" ; --*
lin jeans_N = variants {mkN "jean" ; mkN "jeans" ; } ; --*
lin jeep_N = mkN "jipe" ; --*
lin jeer_V = variants {mkV "vaiar" ; mkV "zombar" ; } ; --*
lin jehovah_1_PN = mkPN "Jeová" ; --*
lin jehovah_2_PN = variants {mkPN "Almighty" ; mkPN "Senhor" ; mkPN "Todo-Poderoso" ; } ; --*
lin jejune_1_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin jejune_2_A = mkA "juvenil" ; --*
lin jejune_3_A = mkA "insípido" ; --*
lin jejuneness_2_N = mkN "insipidez" ; --*
lin jejunity_1_N = mkN "insipidez" ; --*
lin jejunum_N = variants {mkN "jejuno" ; mkN "Jejuno" ; } ; --*
lin jelly_1_N = mkN "gelatina" ; --*
lin jelly_2_N = mkN "gelatina" ; --*
lin jelly_3_N = mkN "gelatina" ; --*
lin jellyfish_1_N = variants {mkN "aguá-viva" ; mkN "man-of-war" ; mkN "medusa" ; } ; --*
lin jellyfish_2_N = variants {mkN "aguá-viva" ; mkN "medusa" ; mkN "Medusa" ; } ; --*
lin jelly_V2 = mkV2 (mkV "gelificar") ; --*
lin jelly_V = mkV "gelificar" ; --*
lin jemmy_N = mkN "pé-de-cabra" ; --*
lin jennet_N = variants {mkN "ass" ; mkN "burra" ; } ; --*
lin jenny_2_N = variants {mkN "ass" ; mkN "burra" ; } ; --*
lin jenny_2_PN = variants {mkPN "ass" ; mkPN "burra" ; } ; --*
lin jeopardize_1_V2 = variants {mkV2 (mkV "ameaçar") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "imperilar") ; mkV2 (mkV "perigar") ; } ; --*
lin jeopardize_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "aventurar") ; mkV2 (mkV "aventurar-se") ; } ; --*
lin jeopardy_N = variants {mkN "ameaça" ; mkN "perigo" ; mkN "risco" ; } ; --*
lin jerk_1_N = mkN "babaca" ; --*
lin jerk_3_V = variants {mkV "saculejar" ; mkV "tremer" ; } ; --*
lin jerk_4_N = variants {mkN "jerked" ; mkN "meat" ; } ; --*
lin jerk_4_V = mkV "pinotear" ; --*
lin jerk_off_V = variants {mkV "bronha" ; mkV "masturbar" ; mkV "masturbar-se" ; mkV "off" ; } ; --*
lin jerky_3_A = mkA "estúpido" ; --*
lin jerky_N = variants {mkN "jerked" ; mkN "meat" ; } ; --*
lin jeroboam_1_N = variants {mkN "I" ; mkN "Jeroboão" ; } ; --*
lin jerome_PN = variants {mkPN "Hieronymus" ; mkPN "Jerome" ; mkPN "Jerónimo" ; mkPN "Sophronius" ; } ; --*
lin jersey_1_PN = variants {mkPN "Jersey" ; mkPN "Nova" ; mkPN "State" ; } ; --*
lin jersey_2_PN = variants {mkPN "Jersey" ; mkPN "of" ; } ; --*
lin jersey_3_N = variants {mkN "camisa" ; mkN "Jersey" ; mkN "shirt" ; mkN "t-shirt" ; } ; --*
lin jersey_5_N = mkN "Gado" ; --*
lin jest_1_N = variants {mkN "bazófia" ; mkN "brincadeira" ; mkN "caçoada" ; mkN "chiste" ; mkN "graça" ; mkN "gracejo" ; mkN "piada" ; } ; --*
lin jest_1_V = variants {mkV "caçoar" ; mkV "gracejar" ; } ; --*
lin jest_2_N = mkN "brincadeira" ; --*
lin jest_2_V = mkV "caçoar" ; --*
lin jester_N = variants {mkN "bobo" ; mkN "bufão" ; mkN "fool" ; } ; --*
lin jesuit_N = variants {mkN "jesuíta" ; mkN "Jesuítas" ; } ; --*
lin jesus_PN = variants {mkPN "Christ" ; mkPN "Cristo" ; mkPN "Jesus" ; mkPN "Nazarene" ; mkPN "of" ; mkPN "Shepherd" ; } ; --*
lin jet_1_V = mkV "manar" ; --*
lin jet_2_N = mkN "esguinche" ; --*
lin jet_3_N = mkN "azeviche" ; --*
lin jet_6_N = mkN "jato" ; --*
lin jetsam_2_N = mkN "destroços" ; --*
lin jettison_1_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desfazer-se") ; } ; --*
lin jetty_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin jewel_1_N = variants {mkN "gema" ; mkN "joia" ; mkN "jóia" ; mkN "stone" ; } ; --*
lin jeweller_1_N = variants {mkN "joalheiro" ; mkN "maker" ; } ; --*
lin jeweller_2_N = mkN "joalheiro" ; --*
lin jewellery_N = variants {mkN "joalharia" ; mkN "Joalheria" ; mkN "jóia" ; } ; --*
lin jewelry_N = variants {mkN "joalharia" ; mkN "Joalheria" ; mkN "jóia" ; } ; --*
lin jewess_N = variants {mkN "judeu" ; mkN "judia" ; } ; --*
lin jewish_A = variants {mkA "judaico" ; mkA "judeu" ; mkA "judia" ; } ; --*
lin jew_N = variants {mkN "hebraica" ; mkN "hebraico" ; mkN "hebreia" ; mkN "hebreu" ; mkN "judeu" ; mkN "judia" ; } ; --*
lin jezebel_1_N = variants {mkN "Jezabel" ; mkN "Jezebel" ; } ; --*
lin jib_1_V = mkV "resistir" ; --*
lin jibe_1_V = variants {mkV "combinar" ; mkV "concordar" ; mkV "corresponder" ; } ; --*
lin jiffy_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin jig_1_N = mkN "giga" ; --*
lin jiggery_pokery_N = variants {mkN "artifício" ; mkN "artimanha" ; mkN "panky" ; mkN "subterfúgio" ; } ; --*
lin jiggle_V2 = mkV2 (mkV "menear") ; --*
lin jihad_1_N = variants {mkN "jihad" ; mkN "Jihad" ; } ; --*
lin jilt_V2 = mkV2 (mkV "abandonar") ; --*
lin jimmy_N = mkN "pé-de-cabra" ; --*
lin jimsonweed_N = variants {mkN "Datura" ; mkN "of" ; mkN "stramonium" ; mkN "thorn" ; mkN "weed" ; } ; --*
lin jingle_V = variants {mkV "retinir" ; mkV "tilintar" ; mkV "tinir" ; } ; --*
lin jingoism_2_N = variants {mkN "chauvinismo" ; mkN "Jingoísmo" ; } ; --*
lin jinks_1_N = variants {mkN "brincadeira" ; mkN "jinks" ; mkN "jinx" ; } ; --*
lin jinrikisha_N = variants {mkN "jinriquixá" ; mkN "riquixá" ; } ; --*
lin jinx_1_N = mkN "agourento" ; --*
lin jinx_2_N = variants {mkN "azaração" ; mkN "maldição" ; } ; --*
lin jitney_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin jitteriness_N = mkN "nervosismo" ; --*
lin jittery_2_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin jive_N = variants {mkN "music" ; mkN "Swing" ; } ; --*
lin job_10_N = mkN "Jó" ; --*
lin job_12_PN = variants {mkPN "Livro" ; mkPN "of" ; } ; --*
lin job_1_N = variants {mkN "função" ; mkN "lugar" ; mkN "ocupação" ; mkN "of" ; mkN "ofício" ; mkN "profissão" ; mkN "serviço" ; mkN "trabalho" ; } ; --*
lin job_2_N = variants {mkN "incumbência" ; mkN "serviço" ; } ; --*
lin job_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "subcontratar") ; } ; --*
lin job_2_V = variants {mkV "out" ; mkV "subcontratar" ; } ; --*
lin job_3_N = mkN "trabalho" ; --*
lin job_4_V = mkV "especular" ; --*
lin job_5_N = mkN "dever" ; --*
lin job_6_N = variants {mkN "tarefa" ; mkN "trabalho" ; } ; --*
lin job_7_N = mkN "trabalho" ; --*
lin job_8_N = variants {mkN "dificuldade" ; mkN "problema" ; mkN "treta" ; } ; --*
lin jockey_1_N = variants {mkN "joquei" ; mkN "jóquei" ; mkN "Jóqueis" ; } ; --*
lin jockey_1_V2 = variants {mkV2 (mkV "roubar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "trapacear") ; } ; --*
lin jockey_1_V = variants {mkV "roubar" ; mkV "sacanear" ; mkV "trapacear" ; } ; --*
lin jocose_A = variants {mkA "engraçado" ; mkA "gracejador" ; mkA "jocoso" ; } ; --*
lin jocoseness_N = mkN "humor" ; --*
lin jocosity_2_N = mkN "humor" ; --*
lin jocular_A = variants {mkA "engraçado" ; mkA "gracejador" ; mkA "jocoso" ; } ; --*
lin jocularity_3_N = mkN "brincadeira" ; --*
lin jocund_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "jovial" ; } ; --*
lin jog_3_N = mkN "cutucão" ; --*
lin jog_4_V = variants {mkV "andar" ; mkV "trotar" ; } ; --*
lin jogging_N = mkN "Cooper" ; --*
lin joggle_1_V2 = mkV2 (mkV "menear") ; --*
lin johannesburg_PN = mkPN "Joanesburgo" ; --*
lin john_1_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin john_3_PN = variants {mkPN "John" ; mkPN "the" ; } ; --*
lin john_bull_N = variants {mkN "Bull" ; mkN "John" ; } ; --*
lin johnny_PN = variants {mkPN "Johnny" ; mkPN "Reb" ; } ; --*
lin join_1_N = variants {mkN "articulação" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin join_1_V2 = variants {mkV2 (mkV "associar-se") ; mkV2 (mkV "filiar-se") ; mkV2 (mkV "in") ; mkV2 (mkV "ingressar") ; mkV2 (mkV "juntar-se") ; mkV2 (mkV "together") ; } ; --*
lin join_2_N = mkN "união" ; --*
lin join_2_V2 = variants {mkV2 (mkV "acoplar") ; mkV2 (mkV "together") ; mkV2 (mkV "unir") ; } ; --*
lin join_3_V2 = variants {mkV2 (mkV "filiar") ; mkV2 (mkV "filiar-se") ; mkV2 (mkV "incorporar-se") ; } ; --*
lin join_4_V = variants {mkV "juntar" ; mkV "unir" ; } ; --*
lin join_5_V = variants {mkV "conectar" ; mkV "juntar" ; mkV "ligar" ; mkV "unir" ; mkV "up" ; } ; --*
lin joining_N = mkN "ligação" ; --*
lin joint_1_A = mkA "solidário" ; --*
lin joint_1_N = variants {mkN "articulação" ; mkN "Articulações" ; } ; --*
lin joint_2_N = variants {mkN "buraco" ; mkN "zona" ; } ; --*
lin joint_3_N = variants {mkN "articulação" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin joint_6_N = variants {mkN "baseado" ; mkN "Baseado" ; mkN "cigarette" ; } ; --*
lin jointure_2_N = variants {mkN "junção" ; mkN "unificação" ; } ; --*
lin joist_N = mkN "viga" ; --*
lin joke_1_N = variants {mkN "bazófia" ; mkN "brincadeira" ; mkN "caçoada" ; mkN "chiste" ; mkN "graça" ; mkN "gracejo" ; mkN "piada" ; } ; --*
lin joke_1_V = variants {mkV "caçoar" ; mkV "gracejar" ; } ; --*
lin joke_2_N = mkN "brincadeira" ; --*
lin joke_2_V = mkV "caçoar" ; --*
lin joke_3_N = variants {mkN "gozação" ; mkN "sacanagem" ; mkN "travessura" ; mkN "trote" ; } ; --*
lin joker_4_N = variants {mkN "coringa" ; mkN "curinga" ; mkN "melé" ; } ; --*
lin jollification_N = mkN "celebração" ; --*
lin jollity_N = mkN "alegria" ; --*
lin jolly_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "jovial" ; } ; --*
lin jolly_Adv = variants {mkAdv "com" ; mkAdv "razoavelmente" ; } ; --*
lin jolly_V2 = variants {mkV2 (mkV "bulir") ; mkV2 (mkV "caçoar") ; } ; --*
lin jolt_1_N = mkN "sacudida" ; --*
lin jolt_1_V2 = variants {mkV2 (mkV "abalar") ; mkV2 (mkV "agitar") ; } ; --*
lin jolt_1_V = variants {mkV "abalar" ; mkV "agitar" ; } ; --*
lin jolt_2_V2 = mkV2 (mkV "chocar") ; --*
lin jonah_2_N = mkN "agourento" ; --*
lin jonah_2_PN = mkPN "agourento" ; --*
lin jonah_3_N = variants {mkN "Jonas" ; mkN "of" ; } ; --*
lin jonah_3_PN = variants {mkPN "Jonas" ; mkPN "of" ; } ; --*
lin jordan_1_PN = variants {mkPN "Jordão" ; mkPN "River" ; } ; --*
lin jordan_2_PN = variants {mkPN "Jordania" ; mkPN "Kingdom" ; } ; --*
lin jordanian_A = mkA "jordaniano" ; --*
lin jordanian_N = mkN "jordaniano" ; --*
lin joseph_1_PN = variants {mkPN "Chefe" ; mkPN "Joseph" ; } ; --*
lin joseph_2_PN = mkPN "José" ; --*
lin joseph_3_PN = mkPN "José" ; --*
lin joshua_2_PN = variants {mkPN "Josué" ; mkPN "Livro" ; mkPN "of" ; } ; --*
lin jostle_2_V2 = variants {mkV2 (mkV "acotovelar") ; mkV2 (mkV "empurrar") ; mkV2 (mkV "sacudir") ; } ; --*
lin jot_2_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin joule_1_N = variants {mkN "joule" ; mkN "Joule" ; mkN "second" ; } ; --*
lin joule_2_N = variants {mkN "James" ; mkN "Prescott" ; } ; --*
lin journal_1_N = variants {mkN "diário" ; mkN "Diários" ; } ; --*
lin journal_2_N = variants {mkN "jornal" ; mkN "revista" ; } ; --*
lin journal_4_N = mkN "diário" ; --*
lin journalism_1_N = variants {mkN "jornalismo" ; mkN "media" ; } ; --*
lin journalism_2_N = mkN "Jornalismo" ; --*
lin journalist_1_N = variants {mkN "jornalista" ; mkN "periodista" ; } ; --*
lin journalist_2_N = variants {mkN "jornalista" ; mkN "keeper" ; } ; --*
lin journalistic_1_A = variants {mkA "jornalístico" ; mkA "periodístico" ; } ; --*
lin journey_1_V = variants {mkV "andar" ; mkV "viajar" ; } ; --*
lin journey_2_V = variants {mkV "andar" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin journeyman_N = variants {mkN "artesão" ; mkN "artífice" ; } ; --*
lin journey_N = variants {mkN "jornada" ; mkN "viagem" ; } ; --*
lin joust_N = mkN "torneio" ; --*
lin jove_PN = mkPN "Júpiter" ; --*
lin jovial_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "jovial" ; } ; --*
lin joviality_1_N = mkN "alegria" ; --*
lin jowl_1_N = variants {mkN "bone" ; mkN "jaw" ; mkN "jawbone" ; mkN "Mandibula" ; mkN "Mandíbula" ; mkN "maxila" ; } ; --*
lin joy_1_N = mkN "alegria" ; --*
lin joy_1_V = variants {mkV "alegrar" ; mkV "alegrar-se" ; mkV "regozijar" ; mkV "regozijar-se" ; } ; --*
lin joy_2_N = variants {mkN "alegria" ; mkN "deleite" ; mkN "prazer" ; } ; --*
lin joy_2_V = mkV "alegrar" ; --*
lin joyce_PN = variants {mkPN "Augustine" ; mkPN "James" ; mkPN "Joyce" ; } ; --*
lin joyful_2_A = mkA "jubiloso" ; --*
lin joyfulness_N = mkN "alegria" ; --*
lin joyous_A = mkA "ditoso" ; --*
lin joyousness_N = mkN "alegria" ; --*
lin joy_stick_1_N = variants {mkN "manche" ; mkN "stick" ; } ; --*
lin joy_stick_2_N = variants {mkN "joystick" ; mkN "manche" ; } ; --*
lin jubilant_1_A = variants {mkA "exultante" ; mkA "jubiloso" ; mkA "triunfador" ; mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin jubilant_2_A = mkA "jubiloso" ; --*
lin jubilation_1_N = variants {mkN "exultação" ; mkN "júbilo" ; } ; --*
lin jubilation_2_N = variants {mkN "celebração" ; mkN "festa" ; mkN "rotulagem" ; } ; --*
lin jubilation_3_N = mkN "júbilo" ; --*
lin jubilee_N = mkN "jubileu" ; --*
lin judaic_2_A = variants {mkA "judaico" ; mkA "judeu" ; mkA "judia" ; } ; --*
lin judaism_1_N = variants {mkN "hebraismo" ; mkN "Judaismo" ; mkN "Judaísmo" ; mkN "religion" ; } ; --*
lin judaism_2_N = mkN "judaísmo" ; --*
lin judas_1_N = variants {mkN "Jude" ; mkN "São" ; } ; --*
lin judas_1_PN = variants {mkPN "Jude" ; mkPN "São" ; } ; --*
lin judas_2_N = variants {mkN "Iscariot" ; mkN "Judas" ; } ; --*
lin judas_2_PN = variants {mkPN "Iscariot" ; mkPN "Judas" ; } ; --*
lin judge_1_N = variants {mkN "juiz" ; mkN "jurista" ; mkN "magistrado" ; } ; --*
lin judge_1_V2 = mkV2 (mkV "julgar") ; --*
lin judge_1_V = mkV "julgar" ; --*
lin judge_1_VS = mkVS (mkV "julgar") ; --*
lin judge_2_N = variants {mkN "avaliador" ; mkN "julgador" ; } ; --*
lin judge_2_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "judgment") ; mkV2 (mkV "julgar") ; } ; --*
lin judge_3_V2 = variants {mkV2 (mkV "chutar") ; mkV2 (mkV "estimar") ; } ; --*
lin judge_3_V = variants {mkV "chutar" ; mkV "estimar" ; } ; --*
lin judge_3_VS = variants {mkVS (mkV "chutar") ; mkVS (mkV "estimar") ; } ; --*
lin judge_4_V2 = variants {mkV2 (mkV "julgar") ; mkV2 (mkV "pronunciar") ; mkV2 (mkV "rotular") ; } ; --*
lin judgeship_N = mkN "judicatura" ; --*
lin judgment_1_N = variants {mkN "ideia" ; mkN "juízo" ; mkN "opinião" ; } ; --*
lin judgment_2_N = variants {mkN "critica" ; mkN "juízo" ; mkN "julgamento" ; } ; --*
lin judgment_3_N = variants {mkN "decision" ; mkN "julgamento" ; mkN "sentença" ; } ; --*
lin judgment_4_N = mkN "julgamento" ; --*
lin judgment_5_N = variants {mkN "juízo" ; mkN "opinion" ; } ; --*
lin judicature_1_N = mkN "tribunal" ; --*
lin judicature_2_N = variants {mkN "Poder" ; mkN "sistema" ; mkN "system" ; } ; --*
lin judicature_3_N = mkN "justiça" ; --*
lin judicature_4_N = mkN "judicatura" ; --*
lin judicial_1_A = mkA "judiciário" ; --*
lin judicial_2_A = mkA "judiciário" ; --*
lin judicial_3_A = variants {mkA "judicial" ; mkA "judiciário" ; } ; --*
lin judiciary_2_N = variants {mkN "Poder" ; mkN "sistema" ; mkN "system" ; } ; --*
lin judith_2_PN = variants {mkPN "Livro" ; mkPN "of" ; } ; --*
lin judo_N = mkN "judô" ; --*
lin jug_1_N = variants {mkN "bilha" ; mkN "cântaro" ; mkN "jarra" ; mkN "jarro" ; mkN "Jarro" ; } ; --*
lin jug_1_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin jug_2_N = variants {mkN "jarro" ; mkN "pote" ; } ; --*
lin jugful_N = variants {mkN "jarro" ; mkN "pote" ; } ; --*
lin juggernaut_1_N = mkN "jamanta" ; --*
lin juggle_1_N = mkN "malabarismo" ; --*
lin juggle_2_N = mkN "malabarismo" ; --*
lin juggle_4_V2 = variants {mkV2 (mkV "escamotear") ; mkV2 (mkV "prestidigitar") ; } ; --*
lin juggle_4_V = variants {mkV "escamotear" ; mkV "prestidigitar" ; } ; --*
lin jugglerFem_N = variants {mkN "malabarista" ; mkN "prestidigitador" ; } ; --*
lin jugglerMasc_N = variants {mkN "malabarista" ; mkN "prestidigitador" ; } ; --*
lin jugular_1_N = variants {mkN "jugularis" ; mkN "Veia" ; mkN "vein" ; } ; --*
lin jugular_A = mkA "jugular" ; --*
lin juice_1_N = variants {mkN "seiva" ; mkN "suco" ; mkN "sumo" ; } ; --*
lin juicy_1_A = mkA "suculento" ; --*
lin juicy_2_A = mkA "voluptário" ; --*
lin juicy_4_A = mkA "verde" ; --*
lin ju_jitsu_N = variants {mkN "jiu-jitsu" ; mkN "jiu-jítsu" ; } ; --*
lin juju_2_N = mkN "fetiche" ; --*
lin jujube_2_N = variants {mkN "date" ; mkN "Jujuba" ; mkN "jujube" ; } ; --*
lin jujutsu_1_N = variants {mkN "jiu-jitsu" ; mkN "jiu-jítsu" ; } ; --*
lin jukebox_N = variants {mkN "juke-box" ; mkN "Jukebox" ; } ; --*
lin julian_PN = variants {mkPN "Claudius" ; mkPN "Juliano" ; mkPN "the" ; } ; --*
lin jumble_1_N = variants {mkN "bagunça" ; mkN "nest" ; mkN "ninho" ; mkN "zona" ; } ; --*
lin jumble_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "misturar") ; mkV2 (mkV "up") ; } ; --*
lin jumble_3_V2 = variants {mkV2 (mkV "misturar") ; mkV2 (mkV "together") ; } ; --*
lin jumble_3_V = variants {mkV "misturar" ; mkV "together" ; } ; --*
lin jumbo_A = variants {mkA "descomunal" ; mkA "elefântico" ; mkA "elefantino" ; mkA "gigantesco" ; } ; --*
lin jump_10_V2 = variants {mkV2 (mkV "pular") ; mkV2 (mkV "saltar") ; } ; --*
lin jump_10_V = variants {mkV "pular" ; mkV "saltar" ; } ; --*
lin jump_13_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "pular") ; } ; --*
lin jump_14_V = mkV "saltar" ; --*
lin jump_1_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin jump_1_V = variants {mkV "pular" ; mkV "saltar" ; } ; --*
lin jump_2_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin jump_2_V2 = variants {mkV2 (mkV "saltar") ; mkV2 (mkV "surpreender-se") ; } ; --*
lin jump_4_V = mkV "subir" ; --*
lin jump_5_N = mkN "paraquedismo" ; --*
lin jump_5_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "saltar") ; } ; --*
lin jump_5_V = variants {mkV "out" ; mkV "saltar" ; } ; --*
lin jump_6_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin jump_6_V = variants {mkV "jogar" ; mkV "lançar" ; mkV "lançar-se" ; } ; --*
lin jump_7_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin jump_9_V2 = variants {mkV2 (mkV "descarrilar") ; mkV2 (mkV "descarrilhar") ; } ; --*
lin jumper_3_N = variants {mkN "agasalho" ; mkN "camisola" ; mkN "pulôver" ; mkN "suéter" ; } ; --*
lin jumper_4_N = mkN "camisola" ; --*
lin jumper_6_N = mkN "camisola" ; --*
lin jumper_7_N = mkN "avental" ; --*
lin jumpiness_N = mkN "nervosismo" ; --*
lin jumping_2_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin jump_on_V2 = variants {mkV2 (mkV "montar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin jumpy_1_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin junction_1_N = mkN "junção" ; --*
lin junction_2_N = variants {mkN "conjunção" ; mkN "ligação" ; } ; --*
lin junction_3_N = variants {mkN "articulação" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin junction_4_N = variants {mkN "conjunção" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin junction_5_N = variants {mkN "junção" ; mkN "ligação" ; } ; --*
lin juncture_2_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin juncture_3_N = variants {mkN "articulação" ; mkN "junção" ; mkN "ligação" ; } ; --*
lin jungle_1_N = variants {mkN "floresta" ; mkN "selva" ; } ; --*
lin jungle_3_N = variants {mkN "floresta" ; mkN "mata" ; mkN "Selva" ; } ; --*
lin junior_1_A = mkA "júnior" ; --*
lin junior_2_A = mkA "penúltimo" ; --*
lin juniper_1_N = variants {mkN "bush" ; mkN "raetam" ; mkN "zimbro" ; } ; --*
lin juniper_2_N = mkN "zimbro" ; --*
lin junk_1_N = variants {mkN "destroços" ; mkN "entulho" ; mkN "escombros" ; mkN "restos" ; mkN "ruínas" ; } ; --*
lin junk_2_N = mkN "junco" ; --*
lin junket_2_N = variants {mkN "excursão" ; mkN "ida" ; mkN "passeio" ; mkN "trip" ; } ; --*
lin junkie_1_N = variants {mkN "addict" ; mkN "toxicómano" ; mkN "toxicômano" ; } ; --*
lin junkie_2_N = variants {mkN "adicto" ; mkN "viciado" ; } ; --*
lin junky_1_N = variants {mkN "addict" ; mkN "toxicómano" ; mkN "toxicômano" ; } ; --*
lin junky_2_N = variants {mkN "adicto" ; mkN "viciado" ; } ; --*
lin junta_N = variants {mkN "junta" ; mkN "Junta" ; } ; --*
lin jupiter_1_PN = mkPN "Júpiter" ; --*
lin jupiter_2_PN = mkPN "Júpiter" ; --*
lin juridical_1_A = variants {mkA "judicial" ; mkA "jurídico" ; } ; --*
lin juridical_2_A = variants {mkA "judicial" ; mkA "judiciário" ; } ; --*
lin jurisdiction_1_N = variants {mkN "jurisdição" ; mkN "power" ; } ; --*
lin jurisdiction_2_N = mkN "jurisdição" ; --*
lin jurisprudence_1_N = variants {mkN "Direito" ; mkN "jurisprudência" ; mkN "philosophy" ; } ; --*
lin jurisprudence_2_N = variants {mkN "ciências" ; mkN "jurisprudência" ; mkN "lei" ; } ; --*
lin jurist_1_N = variants {mkN "expert" ; mkN "jurista" ; } ; --*
lin jurist_2_N = variants {mkN "juiz" ; mkN "jurista" ; mkN "magistrado" ; } ; --*
lin juror_N = variants {mkN "jurado" ; mkN "júri" ; mkN "juror" ; } ; --*
lin jury_1_N = variants {mkN "júri" ; mkN "Júri" ; } ; --*
lin jury_2_N = mkN "júri" ; --*
lin juryman_N = variants {mkN "jurado" ; mkN "júri" ; mkN "juror" ; } ; --*
lin just_1_Predet = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin just_2_A = variants {mkA "equitativo" ; mkA "imparcial" ; mkA "justo" ; } ; --*
lin just_2_Predet = variants {variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin just_3_AdV = variants {mkAdV "agora" ; mkAdV "now" ; } ; --*
lin just_4_A = variants {mkA "bom" ; mkA "direito" ; mkA "justo" ; } ; --*
lin just_4_AdV = mkAdV "singelamente" ; --*
lin just_5_Adv = variants {mkAdv "dificilmente" ; mkAdv "logo" ; mkAdv "quase" ; } ; --*
lin just_5_AdV = variants {mkAdV "dificilmente" ; mkAdV "logo" ; mkAdV "quase" ; } ; --*
lin just_AdA = variants {mkAdA "certeiramente" ; mkAdA "exactamente" ; mkAdA "exatamente" ; mkAdA "precisamente" ; } ; --*
lin just_AdN = variants {mkAdN "certeiramente" ; mkAdN "exactamente" ; mkAdN "exatamente" ; mkAdN "precisamente" ; } ; --*
lin justice_1_N = variants {mkN "justeza" ; mkN "justiça" ; } ; --*
lin justice_2_N = variants {mkN "justiça" ; mkN "Justiça" ; } ; --*
lin justice_3_N = variants {mkN "juiz" ; mkN "jurista" ; mkN "magistrado" ; } ; --*
lin justice_4_N = variants {mkN "Department" ; mkN "justiça" ; mkN "Justiça" ; mkN "of" ; } ; --*
lin justifiable_A = mkA "justificável" ; --*
lin justification_1_N = variants {mkN "justificação" ; mkN "justificativa" ; } ; --*
lin justification_2_N = variants {mkN "justificação" ; mkN "justificativa" ; } ; --*
lin justification_3_N = variants {mkN "justificação" ; mkN "justificativa" ; } ; --*
lin justificative_1_A = mkA "defensivo" ; --*
lin justify_1_V2 = variants {mkV2 (mkV "justificar") ; mkV2 (mkV "vindicar") ; } ; --*
lin justify_3_V2 = mkV2 (mkV "justificar") ; --*
lin justness_2_N = variants {mkN "justeza" ; mkN "justiça" ; } ; --*
lin jute_1_N = mkN "juta" ; --*
lin jute_2_N = mkN "jutos" ; --*
lin jut_V = variants {mkV "out" ; mkV "projectar-se" ; } ; --*
lin juvenile_2_A = mkA "juvenil" ; --*
lin juvenile_N = variants {mkN "jovens" ; mkN "juvenil" ; mkN "menor" ; mkN "person" ; } ; --*
lin juxtapose_V2 = mkV2 (mkV "justapor") ; --*
lin kabob_N = mkN "kebab" ; --*
lin kaffir_1_N = variants {mkN "bicolor" ; mkN "corn" ; mkN "millet" ; mkN "sorgo" ; } ; --*
lin kafkaesque_1_A = mkA "kafkiano" ; --*
lin kafkaesque_2_A = mkA "kafkaesco" ; --*
lin kail_1_N = variants {mkN "couve-de-folhas" ; mkN "oleracea" ; } ; --*
lin kail_2_N = mkN "couve-de-folhas" ; --*
lin kaiser_N = variants {mkN "cáiser" ; mkN "Kaiser" ; } ; --*
lin kaki_1_N = variants {mkN "Caqui" ; mkN "kaki" ; mkN "persimmon" ; } ; --*
lin kale_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin kale_2_N = variants {mkN "couve-de-folhas" ; mkN "oleracea" ; } ; --*
lin kale_3_N = mkN "couve-de-folhas" ; --*
lin kaleidoscope_2_N = variants {mkN "Caleidoscopio" ; mkN "caleidoscópio" ; } ; --*
lin kamikaze_1_N = variants {mkN "camicase" ; mkN "Kamikaze" ; } ; --*
lin kampuchean_A = mkA "cambojano" ; --*
lin kampuchean_N = mkN "khmer" ; --*
lin kampuchea_PN = variants {mkPN "Camboja" ; mkPN "of" ; } ; --*
lin kanamycin_N = mkN "Canamicina" ; --*
lin kangaroo_N = variants {mkN "canguru" ; mkN "Macropodidae" ; } ; --*
lin kansas_1_PN = variants {mkPN "Kansas" ; mkPN "State" ; } ; --*
lin kansas_3_PN = variants {mkPN "Kansas" ; mkPN "River" ; } ; --*
lin kaon_N = variants {mkN "Kaon" ; mkN "káon" ; mkN "Káon" ; mkN "particle" ; } ; --*
lin kappa_N = variants {mkN "cá" ; mkN "capa" ; mkN "Κ" ; } ; --*
lin kaput_A = variants {mkA "enguiçado" ; mkA "for" ; } ; --*
lin karachi_PN = mkPN "Carachi" ; --*
lin karaoke_N = variants {mkN "Karaoke" ; mkN "karaokê" ; } ; --*
lin karate_N = mkN "caratê" ; --*
lin karat_N = mkN "quilate" ; --*
lin karma_N = variants {mkN "Carma" ; mkN "karma" ; } ; --*
lin karyotype_N = mkN "cariótipo" ; --*
lin kashmiri_1_N = mkN "caxemirense" ; --*
lin kashmiri_2_N = mkN "Língua" ; --*
lin kashmiri_A = variants {mkA "caxemir" ; mkA "caxemirense" ; } ; --*
lin kashmir_PN = variants {mkPN "and" ; mkPN "Caxemira" ; } ; --*
lin kat_1_N = variants {mkN "khat" ; mkN "tea" ; } ; --*
lin katowice_PN = mkPN "Katowice" ; --*
lin kawaka_N = variants {mkN "Libocedrus" ; mkN "plumosa" ; } ; --*
lin kayak_N = mkN "caiaque" ; --*
lin kazan_1_PN = variants {mkPN "Elia" ; mkPN "Kazan" ; mkPN "Kazanjoglous" ; } ; --*
lin kazan_2_PN = variants {mkPN "Cazã" ; mkPN "Kazan" ; } ; --*
lin kazoo_N = variants {mkN "kazoo" ; mkN "Kazoo" ; } ; --*
lin kebab_N = mkN "kebab" ; --*
lin kedgeree_N = mkN "kedgeree" ; --*
lin keel_2_N = mkN "quilha" ; --*
lin keel_3_N = mkN "quilha" ; --*
lin keel_over_V = mkV "over" ; --*
lin keen_1_A = mkA "penetrante" ; --*
lin keen_2_A = mkA "esmero" ; --*
lin keen_3_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin keen_5_A = mkA "afiado" ; --*
lin keenness_2_N = variants {mkN "anseio" ; mkN "ânsia" ; } ; --*
lin keen_V2 = mkV2 (mkV "queixar-se") ; --*
lin keep_10_V2 = variants {mkV2 (mkV "durar") ; mkV2 (mkV "on") ; mkV2 (mkV "prolongar-se") ; } ; --*
lin keep_11_V = variants {mkV "manter" ; mkV "sustentar" ; } ; --*
lin keep_13_V2 = variants {mkV2 (mkV "celebrar") ; mkV2 (mkV "festejar") ; mkV2 (mkV "solenizar") ; } ; --*
lin keep_14_V2 = mkV2 (mkV "defender") ; --*
lin keep_1_N = variants {mkN "and" ; mkN "manutenção" ; mkN "pão" ; } ; --*
lin keep_1_V2A = variants {mkV2A (mkV "conservar") ; mkV2A (mkV "manter") ; mkV2A (mkV "reter") ; } ; --*
lin keep_1_V2 = variants {mkV2 (mkV "conservar") ; mkV2 (mkV "manter") ; mkV2 (mkV "reter") ; } ; --*
lin keep_21_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "coibir") ; mkV2 (mkV "conter") ; mkV2 (mkV "deter") ; mkV2 (mkV "entravar") ; } ; --*
lin keep_22_V2A = variants {mkV2A (mkV "conservar") ; mkV2A (mkV "preservar") ; } ; --*
lin keep_2_N = variants {mkN "torre" ; mkN "Torre" ; } ; --*
lin keep_3_V2 = variants {mkV2 (mkV "guardar") ; mkV2 (mkV "manter") ; mkV2 (mkV "on") ; mkV2 (mkV "reter") ; } ; --*
lin keep_4_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; } ; --*
lin keep_5_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "seguir") ; } ; --*
lin keep_6_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "manter") ; mkV2 (mkV "observar") ; } ; --*
lin keep_8_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "registrar") ; } ; --*
lin keep_apart_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "isolar") ; mkV2 (mkV "separar") ; } ; --*
lin keep_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reter") ; } ; --*
lin keep_back_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reter") ; } ; --*
lin keep_down_2_V2 = variants {mkV2 (mkV "defazer") ; mkV2 (mkV "down") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "subjugar") ; } ; --*
lin keeper_1_N = mkN "guardião" ; --*
lin keeper_2_N = variants {mkN "guardião" ; mkN "tutor" ; } ; --*
lin keeping_2_N = variants {mkN "obrigação" ; mkN "responsabilidade" ; } ; --*
lin keeping_3_N = mkN "retenção" ; --*
lin keepsake_N = variants {mkN "recordação" ; mkN "suvenir" ; } ; --*
lin keep_to_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "seguir") ; } ; --*
lin keep_up_2_V2 = variants {mkV2 (mkV "prolongar") ; mkV2 (mkV "up") ; } ; --*
lin keep_up_3_V2 = variants {mkV2 (mkV "acautelar") ; mkV2 (mkV "up") ; } ; --*
lin keep_VV = variants {mkVV (mkV "along") ; mkVV (mkV "continuar") ; mkVV (mkV "on") ; mkVV (mkV "prosseguir") ; mkVV (mkV "seguir") ; } ; --*
lin keloid_1_N = variants {mkN "queloide" ; mkN "Quelóide" ; } ; --*
lin kelp_N = mkN "Laminariales" ; --*
lin kelt_N = variants {mkN "Celta" ; mkN "celtas" ; mkN "Celtas" ; } ; --*
lin kennel_N = variants {mkN "canil" ; mkN "casota" ; mkN "house" ; } ; --*
lin kenning_N = mkN "kenning" ; --*
lin kent_2_PN = mkPN "Kent" ; --*
lin kentucky_PN = variants {mkPN "Kentucky" ; mkPN "State" ; } ; --*
lin kenyan_A = mkA "queniano" ; --*
lin kenyan_N = mkN "queniano" ; --*
lin kenya_PN = variants {mkPN "of" ; mkPN "Quenia" ; mkPN "Quénia" ; mkPN "Quênia" ; } ; --*
lin kepi_N = variants {mkN "cap" ; mkN "quepe" ; } ; --*
lin keratin_1_N = mkN "queratina" ; --*
lin keratitis_N = variants {mkN "ceratite" ; mkN "queratite" ; } ; --*
lin keratoconus_N = mkN "ceratocone" ; --*
lin kerb_N = variants {mkN "guia" ; mkN "meio-fio" ; } ; --*
lin kerchief_N = mkN "bandana" ; --*
lin kern_1_N = variants {mkN "David" ; mkN "Jerome" ; mkN "Kern" ; } ; --*
lin kernel_3_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin kerosene_1_N = variants {mkN "oil" ; mkN "petróleo" ; mkN "querosene" ; } ; --*
lin kestrel_1_N = variants {mkN "falcão" ; mkN "hawk" ; mkN "kestrel" ; mkN "sparverius" ; } ; --*
lin kestrel_2_N = variants {mkN "falcão" ; mkN "tinnunculus" ; } ; --*
lin ketamine_N = variants {mkN "Cloridrato" ; mkN "hydrochloride" ; } ; --*
lin ketch_N = mkN "ketch" ; --*
lin ketchup_1_N = variants {mkN "catchup" ; mkN "ketchup" ; } ; --*
lin keteleeria_N = mkN "keteleéria" ; --*
lin ketoacidosis_N = variants {mkN "acidosis" ; mkN "cetoacidose" ; } ; --*
lin ketohexose_N = variants {mkN "Cetohexose" ; mkN "Ceto-hexose" ; } ; --*
lin ketonemia_1_N = mkN "cetose" ; --*
lin ketone_N = variants {mkN "cetona" ; mkN "Cetona" ; mkN "Cetonas" ; } ; --*
lin ketonuria_1_N = mkN "cetonúria" ; --*
lin ketorolac_N = mkN "Cetorolaco" ; --*
lin kettle_1_N = variants {mkN "bule" ; mkN "caldeiras" ; mkN "chaleira" ; mkN "Chaleira" ; } ; --*
lin kettle_4_N = variants {mkN "tímpano" ; mkN "Tímpano" ; } ; --*
lin kettledrum_N = variants {mkN "tímpano" ; mkN "Tímpano" ; } ; --*
lin key_11_N = mkN "chave" ; --*
lin key_14_N = variants {mkN "chave" ; mkN "Chave" ; } ; --*
lin key_15_N = mkN "tecla" ; --*
lin key_1_N = variants {mkN "botão" ; mkN "chave" ; mkN "tecla" ; } ; --*
lin key_1_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "out") ; } ; --*
lin key_2_N = mkN "segredo" ; --*
lin key_4_N = mkN "Tonalidade" ; --*
lin key_5_V2 = mkV2 (mkV "ajustar") ; --*
lin key_6_N = variants {mkN "fruit" ; mkN "sâmara" ; } ; --*
lin key_7_N = variants {mkN "Francis" ; mkN "Scott" ; } ; --*
lin key_A = variants {mkA "básico" ; mkA "central" ; mkA "fundamental" ; } ; --*
lin keyboard_1_N = variants {mkN "teclado" ; mkN "Teclado" ; mkN "Teclados" ; } ; --*
lin keyboard_2_N = mkN "teclado" ; --*
lin keyboardist_N = variants {mkN "Tecladista" ; mkN "Teclistas" ; } ; --*
lin keyhole_N = variants {mkN "fechadura" ; mkN "tranca" ; } ; --*
lin keynote_3_N = variants {mkN "Tonica" ; mkN "Tónica" ; mkN "tônica" ; } ; --*
lin keystone_1_N = mkN "ponto" ; --*
lin keystone_2_N = variants {mkN "chave" ; mkN "Chave" ; } ; --*
lin kgb_N = variants {mkN "for" ; mkN "Kgb" ; mkN "KGB" ; } ; --*
lin kg_N = variants {mkN "kg" ; mkN "kilo" ; mkN "quilo" ; mkN "quilograma" ; } ; --*
lin khan_2_N = variants {mkN "caravançará" ; mkN "caravançarai" ; mkN "Caravançarai" ; mkN "hospedaria" ; mkN "inn" ; } ; --*
lin kharkov_PN = mkPN "Carcóvia" ; --*
lin khartoum_PN = variants {mkPN "Cartum" ; mkPN "of" ; } ; --*
lin khmer_1_N = mkN "Língua" ; --*
lin khmer_2_N = mkN "khmer" ; --*
lin khz_N = variants {mkN "per" ; mkN "quilohertz" ; } ; --*
lin kibbutz_N = variants {mkN "kibboutz" ; mkN "kibutz" ; mkN "Kibutz" ; } ; --*
lin kick_1_N = mkN "chute" ; --*
lin kick_1_V2 = mkV2 (mkV "chutar") ; --*
lin kick_1_V = mkV "chutar" ; --*
lin kick_2_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin kick_2_V2 = variants {mkV2 (mkV "chutar") ; mkV2 (mkV "dar") ; } ; --*
lin kick_2_V = variants {mkV "chutar" ; mkV "dar" ; } ; --*
lin kick_3_N = variants {mkN "coice" ; mkN "recuo" ; } ; --*
lin kick_3_V2 = mkV2 (mkV "chutar") ; --*
lin kick_4_N = variants {mkN "queixa" ; mkN "reclamação" ; } ; --*
lin kick_6_V2 = variants {mkV2 (mkV "parar") ; mkV2 (mkV "up") ; } ; --*
lin kick_8_V = variants {mkV "lamentar" ; mkV "off" ; mkV "reclamar" ; } ; --*
lin kick_back_1_V2 = mkV2 (mkV "back") ; --*
lin kick_back_1_V = mkV "back" ; --*
lin kick_back_2_V = variants {mkV "back" ; mkV "recuo" ; } ; --*
lin kickback_N = mkN "propina" ; --*
lin kick_in_1_V = mkV "in" ; --*
lin kick_in_2_V = variants {mkV "contribuir" ; mkV "dar" ; mkV "in" ; mkV "outorgar" ; } ; --*
lin kickoff_2_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; mkN "time" ; } ; --*
lin kickoff_3_N = mkN "kickoff" ; --*
lin kick_off_V2 = variants {mkV2 (mkV "inaugurar") ; mkV2 (mkV "off") ; } ; --*
lin kick_off_V = variants {mkV "inaugurar" ; mkV "off" ; } ; --*
lin kick_out_1_V2 = variants {mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin kick_out_2_V2 = variants {mkV2 (mkV "enxotar") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin kick_up_V = variants {mkV "causar" ; mkV "forth" ; mkV "incitar" ; mkV "up" ; } ; --*
lin kid_1_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin kid_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "the") ; } ; --*
lin kid_1_V = variants {mkV "fazer" ; mkV "the" ; } ; --*
lin kid_2_V = variants {mkV "bulir" ; mkV "caçoar" ; } ; --*
lin kid_3_N = variants {mkN "Kid" ; mkN "Kyd" ; mkN "Thomas" ; } ; --*
lin kid_4_N = variants {mkN "criança" ; mkN "filha" ; mkN "filho" ; mkN "menino" ; } ; --*
lin kid_5_N = variants {mkN "bode" ; mkN "cabra" ; mkN "cabrita" ; mkN "cabrito" ; } ; --*
lin kidnapper_1_N = variants {mkN "raptor" ; mkN "sequestrador" ; mkN "seqüestrador" ; } ; --*
lin kidnapping_N = variants {mkN "rapto" ; mkN "sequestro" ; mkN "seqüestro" ; mkN "Seqüestro" ; mkN "Sequestros" ; } ; --*
lin kidnap_V2 = variants {mkV2 (mkV "abduzir") ; mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; mkV2 (mkV "seqüestrar") ; } ; --*
lin kidney_N = mkN "rim" ; --*
lin kieserite_N = mkN "kieserita" ; --*
lin kiev_PN = variants {mkPN "Kiev" ; mkPN "of" ; } ; --*
lin kike_N = mkN "judeu" ; --*
lin kill_11_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin kill_12_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin kill_1_N = variants {mkN "homicídio" ; mkN "morte" ; mkN "to" ; } ; --*
lin kill_1_V2 = mkV2 (mkV "matar") ; --*
lin kill_3_V2 = variants {mkV2 (mkV "matar") ; mkV2 (mkV "out") ; } ; --*
lin kill_6_V2 = mkV2 (mkV "matar") ; --*
lin killer_1_N = variants {mkN "assassino" ; mkN "matador" ; } ; --*
lin killer_4_N = variants {mkN "orca" ; mkN "Orca" ; mkN "whale" ; mkN "wolf" ; } ; --*
lin killing_1_N = variants {mkN "death" ; mkN "homicídio" ; } ; --*
lin killing_2_N = variants {mkN "homicídio" ; mkN "morte" ; mkN "to" ; } ; --*
lin kill_off_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extinguir") ; mkV2 (mkV "off") ; } ; --*
lin kiln_N = mkN "forno" ; --*
lin kilobit_N = variants {mkN "kilobit" ; mkN "quilobit" ; } ; --*
lin kilobyte_1_N = mkN "kilobyte" ; --*
lin kilobyte_2_N = mkN "kibibyte" ; --*
lin kilocycle_N = variants {mkN "per" ; mkN "quilohertz" ; } ; --*
lin kilogram_N = variants {mkN "kg" ; mkN "kilo" ; mkN "quilo" ; mkN "quilograma" ; } ; --*
lin kilohertz_N = variants {mkN "per" ; mkN "quilohertz" ; } ; --*
lin kilolitre_1_N = variants {mkN "meter" ; mkN "metre" ; mkN "metro" ; } ; --*
lin kilometre_1_N = variants {mkN "km" ; mkN "Quilometro" ; mkN "quilómetro" ; mkN "Quilómetro" ; mkN "quilômetro" ; } ; --*
lin kilo_N = variants {mkN "kg" ; mkN "kilo" ; mkN "quilo" ; mkN "quilograma" ; } ; --*
lin kilo_PN = variants {mkPN "kg" ; mkPN "kilo" ; mkPN "quilo" ; mkPN "quilograma" ; } ; --*
lin kilt_N = mkN "Kilt" ; --*
lin kimberlite_N = variants {mkN "kimberlito" ; mkN "Kimberlito" ; } ; --*
lin kimono_N = variants {mkN "kimono" ; mkN "quimono" ; } ; --*
lin kin_1_N = variants {mkN "família" ; mkN "parente" ; } ; --*
lin kin_2_N = variants {mkN "clã" ; mkN "familia" ; mkN "família" ; mkN "group" ; mkN "tribo" ; } ; --*
lin kinase_N = mkN "cinase" ; --*
lin kind_1_A = mkA "amável" ; --*
lin kinda_Adv = variants {mkAdv "bastante" ; mkAdv "bem" ; mkAdv "of" ; } ; --*
lin kindergarten_N = variants {mkN "jardim" ; mkN "Jardim" ; } ; --*
lin kindle_1_V = mkV "suscitar" ; --*
lin kindle_2_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "conflagrar") ; } ; --*
lin kindle_3_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin kindling_1_N = mkN "esporra" ; --*
lin kindling_2_N = variants {mkN "ignição" ; mkN "inflamação" ; mkN "Inflamações" ; } ; --*
lin kindly_1_A = variants {mkA "benevolente" ; mkA "benévolo" ; mkA "bondoso" ; } ; --*
lin kindness_1_N = mkN "amabilidade" ; --*
lin kindness_3_N = variants {mkN "amabilidade" ; mkN "bondade" ; mkN "delicadeza" ; mkN "gentileza" ; } ; --*
lin kind_of_N2 = variants {mkN2 (mkN "categoria") noPrep ; mkN2 (mkN "classe") noPrep ; mkN2 (mkN "espécies") noPrep ; mkN2 (mkN "género") noPrep ; mkN2 (mkN "raça") noPrep ; mkN2 (mkN "tipo") noPrep ; } ; --*
lin kindred_1_A = mkA "semelhante" ; --*
lin kindred_N = variants {mkN "clã" ; mkN "familia" ; mkN "família" ; mkN "group" ; mkN "tribo" ; } ; --*
lin kinematics_N = variants {mkN "Cinematica" ; mkN "cinemática" ; mkN "Cinemática" ; } ; --*
lin kinesiology_N = mkN "Cinesiologia" ; --*
lin kinetic_1_A = mkA "cinético" ; --*
lin kinetic_2_A = mkA "cinético" ; --*
lin kinetic_3_A = mkA "cinético" ; --*
lin kinetics_N = mkN "dinâmica" ; --*
lin king_10_N = mkN "rei" ; --*
lin king_1_N = variants {mkN "monarch" ; mkN "rei" ; } ; --*
lin king_3_N = variants {mkN "businessman" ; mkN "executive" ; mkN "leader" ; mkN "magnata" ; } ; --*
lin king_5_N = variants {mkN "Jean" ; mkN "Reis" ; } ; --*
lin king_6_N = variants {mkN "B" ; mkN "B." ; mkN "King" ; } ; --*
lin king_7_N = variants {mkN "Luther" ; mkN "Martin" ; } ; --*
lin king_8_N = mkN "Rei" ; --*
lin king_9_N = mkN "rei" ; --*
lin kingdom_1_N = mkN "domínio" ; --*
lin kingdom_2_N = mkN "reino" ; --*
lin kingdom_3_N = mkN "reino" ; --*
lin kingdom_4_N = mkN "reino" ; --*
lin kingdom_5_N = mkN "reino" ; --*
lin kingdom_6_N = mkN "reino" ; --*
lin kingfisher_N = variants {mkN "Alcedinidae" ; mkN "alcedo" ; mkN "alcíone" ; mkN "Guarda" ; mkN "guarda-rios" ; mkN "pica-peixe" ; } ; --*
lin kingston_3_PN = variants {mkPN "capital" ; mkPN "Kingston" ; mkPN "of" ; } ; --*
lin kink_1_V2 = variants {mkV2 (mkV "encrespar") ; mkV2 (mkV "frisar") ; mkV2 (mkV "up") ; } ; --*
lin kink_2_N = mkN "cacho" ; --*
lin kink_2_V = mkV "curvar" ; --*
lin kinkajou_1_N = variants {mkN "bear" ; mkN "caudivolvulus" ; mkN "flavus" ; mkN "Jupará" ; } ; --*
lin kinkajou_2_N = mkN "potto" ; --*
lin kinky_2_A = variants {mkA "crespo" ; mkA "encaracolado" ; } ; --*
lin kinky_3_A = variants {mkA "indiossincrático" ; mkA "próprio" ; mkA "único" ; } ; --*
lin kinshasa_PN = mkPN "Kinshasa" ; --*
lin kinship_1_N = variants {mkN "afinidade" ; mkN "parentesco" ; mkN "relação" ; } ; --*
lin kinship_2_N = variants {mkN "parentesco" ; mkN "relação" ; mkN "relationship" ; } ; --*
lin kinsman_N = variants {mkN "parente" ; mkN "primo" ; } ; --*
lin kiosk_N = variants {mkN "cabine" ; mkN "quiosque" ; } ; --*
lin kip_1_N = mkN "sesta" ; --*
lin kip_down_V = variants {mkV "deitar-se" ; mkV "down" ; mkV "in" ; mkV "out" ; mkV "the" ; mkV "to" ; } ; --*
lin kip_V = variants {mkV "capotar" ; mkV "dormir" ; mkV "some" ; mkV "Z's" ; } ; --*
lin kirk_N = mkN "igreja" ; --*
lin kiss_1_N = variants {mkN "beijo" ; mkN "ósculo" ; } ; --*
lin kiss_1_V2 = variants {mkV2 (mkV "beijar") ; mkV2 (mkV "dar") ; } ; --*
lin kisser_2_N = variants {mkN "face" ; mkN "Fisiognomia" ; mkN "fisionomia" ; mkN "rosto" ; } ; --*
lin kit_1_N = mkN "Equipamentos" ; --*
lin kit_2_N = variants {mkN "conjunto" ; mkN "kit" ; } ; --*
lin kitakyushu_PN = mkPN "Kitakyushu" ; --*
lin kitchenette_N = mkN "quitinete" ; --*
lin kitchen_N = mkN "cozinha" ; --*
lin kite_3_N = variants {mkN "pandorga" ; mkN "papagaio" ; mkN "pipa" ; } ; --*
lin kite_4_N = mkN "milhafre" ; --*
lin kitsch_N = mkN "kitsch" ; --*
lin kitten_N = variants {mkN "bichano" ; mkN "gatinha" ; mkN "gatinho" ; } ; --*
lin kitty_2_N = variants {mkN "bolada" ; mkN "bolão" ; mkN "bolo" ; } ; --*
lin kitty_2_PN = variants {mkPN "bolada" ; mkPN "bolão" ; mkPN "bolo" ; } ; --*
lin kitty_3_N = variants {mkN "bichano" ; mkN "gatinha" ; mkN "gatinho" ; } ; --*
lin kitty_3_PN = variants {mkPN "bichano" ; mkPN "gatinha" ; mkPN "gatinho" ; } ; --*
lin kitty_4_N = variants {mkN "gatinho" ; mkN "gato" ; } ; --*
lin kitty_4_PN = variants {mkPN "gatinho" ; mkPN "gato" ; } ; --*
lin kiwi_1_N = variants {mkN "chinensis" ; mkN "deliciosa" ; mkN "gooseberry" ; mkN "quivi" ; mkN "vine" ; } ; --*
lin kiwi_2_N = variants {mkN "neozelandês" ; mkN "Zealander" ; } ; --*
lin kiwi_3_N = variants {mkN "fruit" ; mkN "gooseberry" ; mkN "quivi" ; } ; --*
lin kiwi_4_N = variants {mkN "kiwi" ; mkN "quivi" ; } ; --*
lin klaxon_1_N = mkN "buzina" ; --*
lin klebsiella_N = mkN "klebsiela" ; --*
lin kleenex_N = mkN "Kleenex" ; --*
lin kleptomaniac_N = mkN "cleptomaníaco" ; --*
lin kleptomania_N = mkN "cleptomania" ; --*
lin km_N = variants {mkN "km" ; mkN "Quilometro" ; mkN "quilómetro" ; mkN "Quilómetro" ; mkN "quilômetro" ; } ; --*
lin knack_N = mkN "talento" ; --*
lin knap_1_V2 = mkV2 (mkV "bater") ; --*
lin knap_2_V2 = variants {mkV2 (mkV "lascar") ; mkV2 (mkV "off") ; } ; --*
lin knapsack_N = variants {mkN "alforje" ; mkN "mochila" ; mkN "Mochila" ; mkN "pack" ; } ; --*
lin knave_1_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin knave_2_N = mkN "valete" ; --*
lin knavery_N = mkN "desonestidade" ; --*
lin knavish_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin knead_1_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "trabalhar") ; } ; --*
lin knee_1_N = variants {mkN "genus" ; mkN "joelho" ; mkN "joint" ; mkN "knee" ; } ; --*
lin knee_2_N = mkN "joelho" ; --*
lin knee_3_N = mkN "joelho" ; --*
lin kneecap_1_N = variants {mkN "patela" ; mkN "Patela" ; mkN "rótula" ; } ; --*
lin kneel_N = mkN "genuflexão" ; --*
lin kneel_V = mkV "ajoelhar-se" ; --*
lin knesset_1_N = mkN "Knesset" ; --*
lin knick_knack_2_N = mkN "quinquilharias" ; --*
lin knife_1_N = mkN "faca" ; --*
lin knife_2_N = variants {mkN "coitelo" ; mkN "faca" ; } ; --*
lin knifelike_2_A = mkA "penetrante" ; --*
lin knife_V2 = variants {mkV2 (mkV "aferroar") ; mkV2 (mkV "apunhalar") ; mkV2 (mkV "esfaquear") ; } ; --*
lin knight_1_N = mkN "cavaleiro" ; --*
lin knight_2_N = mkN "cavalo" ; --*
lin knightly_1_A = mkA "medieval" ; --*
lin kniphofia_N = variants {mkN "flower" ; mkN "kniphófia" ; } ; --*
lin knit_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "tecer") ; mkV2 (mkV "tricotar") ; } ; --*
lin knit_2_V2 = mkV2 (mkV "amarrar") ; --*
lin knit_2_V = mkV "amarrar" ; --*
lin knit_3_N = mkN "malharia" ; --*
lin knit_3_V2 = mkV2 (mkV "amassar") ; --*
lin knitting_1_N = mkN "malharia" ; --*
lin knitting_needle_N = mkN "needle" ; --*
lin knob_2_N = mkN "maçaneta" ; --*
lin knobkerrie_1_N = variants {mkN "exibido" ; mkN "fanfarrão" ; } ; --*
lin knock_1_N = variants {mkN "batida" ; mkN "batidas" ; } ; --*
lin knock_1_V2 = variants {mkV2 (mkV "hard") ; mkV2 (mkV "socar") ; } ; --*
lin knock_2_V = mkV "bater" ; --*
lin knock_3_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "colidir") ; } ; --*
lin knock_4_N = variants {mkN "bomba" ; mkN "soco" ; } ; --*
lin knock_5_N = variants {mkN "batida" ; mkN "golpe" ; } ; --*
lin knock_6_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "criticar") ; } ; --*
lin knock_about_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "arrombar") ; mkV2 (mkV "golpear") ; } ; --*
lin knocker_4_N = variants {mkN "mama" ; mkN "peito" ; mkN "seio" ; mkN "seios" ; mkN "teta" ; } ; --*
lin knock_off_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "liquidar") ; mkV2 (mkV "neutralizar") ; mkV2 (mkV "off") ; } ; --*
lin knock_off_3_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "roubar") ; } ; --*
lin knock_off_5_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "off") ; } ; --*
lin knockout_1_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin knockout_2_N = mkN "nocaute" ; --*
lin knock_out_4_V2 = mkV2 (mkV "out") ; --*
lin knock_over_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin knock_up_V2 = variants {mkV2 (mkV "emprenhar") ; mkV2 (mkV "up") ; } ; --*
lin knoll_N = variants {mkN "colina" ; mkN "outeiro" ; } ; --*
lin knot_1_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "Nódulo") ; } ; --*
lin knot_2_N = variants {mkN "nó" ; mkN "Nó" ; mkN "nodo" ; mkN "Nós" ; } ; --*
lin knot_2_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; } ; --*
lin knotty_1_A = mkA "frustrante" ; --*
lin knotty_3_A = variants {mkA "convoluto" ; mkA "tortuoso" ; } ; --*
lin know_10_V = mkV "saber" ; --*
lin know_11_V2 = mkV2 (mkV "conhecer") ; --*
lin know_1_V2 = variants {mkV2 (mkV "conhecer") ; mkV2 (mkV "entender") ; mkV2 (mkV "saber") ; } ; --*
lin know_1_VS = variants {mkVS (mkV "conhecer") ; mkVS (mkV "entender") ; mkVS (mkV "saber") ; } ; --*
lin know_2_V2 = mkV2 (mkV "saber") ; --*
lin know_3_VS = variants {mkVS (mkV "conhecer") ; mkVS (mkV "saber") ; } ; --*
lin know_4_V2 = mkV2 (mkV "conhecer") ; --*
lin know_5_V2 = variants {mkV2 (mkV "conhecer") ; mkV2 (mkV "experimentar") ; } ; --*
lin know_6_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "reconhecer") ; } ; --*
lin know_6_V = variants {mkV "admitir" ; mkV "reconhecer" ; } ; --*
lin know_7_V2 = variants {mkV2 (mkV "conhecer") ; mkV2 (mkV "saber") ; } ; --*
lin know_8_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin know_all_N = variants {mkN "sabe" ; mkN "sabichão" ; mkN "sabichona" ; } ; --*
lin know_how_N = mkN "habilidade" ; --*
lin knowingness_1_N = variants {mkN "conhecimento" ; mkN "consciência" ; mkN "saber" ; mkN "sentimento" ; } ; --*
lin knowledgeable_1_A = variants {mkA "douto" ; mkA "erudito" ; mkA "instruído" ; mkA "sábio" ; } ; --*
lin knowledgeable_3_A = mkA "versado" ; --*
lin knowledge_N = variants {mkN "cognição" ; mkN "compreensão" ; mkN "conhecimento" ; mkN "noção" ; } ; --*
lin known_A = mkA "sabido" ; --*
lin knuckle_down_V = variants {mkV "down" ; mkV "mourejar" ; mkV "one's" ; } ; --*
lin knuckle_under_V = variants {mkV "ceder" ; mkV "in" ; mkV "sucumbir" ; mkV "under" ; } ; --*
lin koala_N = variants {mkN "bear" ; mkN "cinereus" ; mkN "coala" ; } ; --*
lin kobe_PN = variants {mkPN "Kobe" ; mkPN "Kōbe" ; } ; --*
lin kob_N = variants {mkN "kob" ; mkN "Kobus" ; } ; --*
lin kola_1_N = variants {mkN "acuminata" ; mkN "Cola" ; mkN "nut" ; } ; --*
lin kola_nut_1_N = mkN "nut" ; --*
lin kola_nut_2_N = variants {mkN "acuminata" ; mkN "Cola" ; mkN "nut" ; } ; --*
lin kolkhoz_N = variants {mkN "kolkhoz" ; mkN "Kolkhoz" ; } ; --*
lin koln_PN = variants {mkPN "Colónia" ; mkPN "Colônia" ; } ; --*
lin ko_N = mkN "nocaute" ; --*
lin kopeck_N = mkN "copeque" ; --*
lin kopek_N = mkN "copeque" ; --*
lin koran_1_N = variants {mkN "Alcorão" ; mkN "Al-corão" ; mkN "Al-Corão" ; } ; --*
lin korean_1_N = variants {mkN "coreana" ; mkN "coreano" ; mkN "Coreanos" ; } ; --*
lin korean_2_N = variants {mkN "coreano" ; mkN "língua" ; } ; --*
lin korean_A = mkA "coreano" ; --*
lin korea_PN = variants {mkPN "Coreia" ; mkPN "Coréia" ; mkPN "Peninsula" ; } ; --*
lin koto_N = mkN "koto" ; --*
lin koumiss_1_N = variants {mkN "kumis" ; mkN "Kumis" ; } ; --*
lin krakow_PN = mkPN "Cracóvia" ; --*
lin kremlin_1_N = mkN "Kremlin" ; --*
lin krill_N = mkN "krill" ; --*
lin krona_1_N = variants {mkN "Coroa" ; mkN "krona" ; } ; --*
lin krona_2_N = variants {mkN "Coroa" ; mkN "krona" ; } ; --*
lin krone_1_N = variants {mkN "Coroa" ; mkN "krone" ; } ; --*
lin krone_2_N = variants {mkN "Coroa" ; mkN "krone" ; } ; --*
lin krubi_N = variants {mkN "arum" ; mkN "Flor" ; mkN "titanum" ; } ; --*
lin krypton_N = variants {mkN "Cripton" ; mkN "crípton" ; mkN "Crípton" ; mkN "criptónio" ; mkN "number" ; } ; --*
lin kudos_N = variants {mkN "elogio" ; mkN "glória" ; mkN "loa" ; mkN "louvor" ; } ; --*
lin kudzu_N = variants {mkN "lobata" ; mkN "Pueraria" ; mkN "vine" ; } ; --*
lin kumquat_2_N = variants {mkN "Fortunella" ; mkN "kumquat" ; } ; --*
lin kunzite_N = mkN "kunzita" ; --*
lin kuru_N = mkN "kuru" ; --*
lin kuru_PN = mkPN "kuru" ; --*
lin kuwait_1_PN = variants {mkPN "City" ; mkPN "Coveite" ; mkPN "Cuaite" ; mkPN "Koweit" ; mkPN "Kuwait" ; mkPN "of" ; } ; --*
lin kuwait_2_PN = variants {mkPN "Coveite" ; mkPN "Cuaite" ; mkPN "Kuwait" ; mkPN "of" ; } ; --*
lin kuwait_city_PN = variants {mkPN "City" ; mkPN "Coveite" ; mkPN "Cuaite" ; mkPN "Koweit" ; mkPN "Kuwait" ; mkPN "of" ; } ; --*
lin kuwaiti_1_A = mkA "kuwaiti" ; --*
lin kuwaiti_2_A = mkA "kuwaiti" ; --*
lin kuwaiti_N = mkN "kuwaiti" ; --*
lin kvass_N = mkN "kvas" ; --*
lin kwacha_1_N = variants {mkN "kwacha" ; mkN "Kwacha" ; } ; --*
lin kwanza_2_N = mkN "Kwanzaa" ; --*
lin kwashiorkor_N = variants {mkN "kwashiorkor" ; mkN "Kwashiorkor" ; } ; --*
lin kyanite_1_N = mkN "cianite" ; --*
lin kyoto_PN = mkPN "Quioto" ; --*
lin kyphosis_N = variants {mkN "cifose" ; mkN "corcunda" ; mkN "giboso" ; } ; --*
lin la_1_N = variants {mkN "Lantanio" ; mkN "lantânio" ; mkN "number" ; } ; --*
lin la_3_N = mkN "lá" ; --*
lin label_1_N = mkN "dístico" ; --*
lin label_1_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "rotular") ; } ; --*
lin label_2_V2 = variants {mkV2 (mkV "etiquetar") ; mkV2 (mkV "rotular") ; } ; --*
lin label_3_V2 = variants {mkV2 (mkV "julgar") ; mkV2 (mkV "pronunciar") ; mkV2 (mkV "rotular") ; } ; --*
lin label_4_N = variants {mkN "etiqueta" ; mkN "rótulo" ; } ; --*
lin labium_N = mkN "lábio" ; --*
lin lab_N = variants {mkN "lab" ; mkN "Laboratorio" ; mkN "laboratório" ; mkN "laboratory" ; } ; --*
lin laboratory_1_N = variants {mkN "lab" ; mkN "Laboratorio" ; mkN "laboratório" ; mkN "laboratory" ; } ; --*
lin laboratory_2_N = variants {mkN "ground" ; mkN "laboratório" ; } ; --*
lin laborer_N = variants {mkN "laborer" ; mkN "obreiro" ; mkN "operário" ; } ; --*
lin laborious_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin labour_1_N = variants {mkN "class" ; mkN "Classe" ; mkN "daràluz" ; mkN "proletariado" ; } ; --*
lin labour_1_V = variants {mkV "esforçar" ; mkV "esforçar-se" ; mkV "pressionar" ; } ; --*
lin labour_2_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin labour_3_V = mkV "parir" ; --*
lin labour_4_N = variants {mkN "mão-de-obra" ; mkN "trabalho" ; } ; --*
lin labour_6_N = variants {mkN "Department" ; mkN "of" ; mkN "trabalho" ; mkN "Trabalho" ; } ; --*
lin labour_7_N = variants {mkN "projeto" ; mkN "tarefa" ; } ; --*
lin labourer_N = variants {mkN "laborer" ; mkN "obreiro" ; mkN "operário" ; } ; --*
lin lab_PN = variants {mkPN "lab" ; mkPN "Laboratorio" ; mkPN "laboratório" ; mkPN "laboratory" ; } ; --*
lin labrador_PN = mkPN "Labrador" ; --*
lin laburnum_N = mkN "Laburnum" ; --*
lin labyrinth_1_N = mkN "labirinto" ; --*
lin labyrinth_2_N = variants {mkN "ear" ; mkN "labirinto" ; } ; --*
lin labyrinthine_1_A = mkA "labiríntico" ; --*
lin labyrinthine_2_A = mkA "labiríntico" ; --*
lin labyrinthitis_N = variants {mkN "interna" ; mkN "labirintite" ; } ; --*
lin lace_1_V2 = variants {mkV2 (mkV "enlaçar") ; mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; mkV2 (mkV "envenenar") ; mkV2 (mkV "trançar") ; } ; --*
lin lace_2_N = mkN "renda" ; --*
lin lace_2_V2 = variants {mkV2 (mkV "entrançar") ; mkV2 (mkV "trançar") ; } ; --*
lin lace_4_V2 = variants {mkV2 (mkV "laçar") ; mkV2 (mkV "up") ; } ; --*
lin lace_5_V2 = mkV2 (mkV "envenenar") ; --*
lin lachrymal_1_A = mkA "lacrimal" ; --*
lin lacing_3_N = mkN "surra" ; --*
lin lackadaisical_1_A = mkA "lânguido" ; --*
lin lackey_2_N = variants {mkN "adulador" ; mkN "bajulador" ; mkN "lambe-botas" ; mkN "puxa-saco" ; mkN "sicofanta" ; } ; --*
lin lacking_2_A = mkA "insuficiente" ; --*
lin lackluster_1_A = mkA "sem" ; --*
lin lack_lustre_1_A = mkA "sem" ; --*
lin lack_N = variants {mkN "ausência" ; mkN "carência" ; mkN "deficiência" ; mkN "escassez" ; mkN "falta" ; } ; --*
lin lack_V2 = variants {mkV2 (mkV "carecer") ; mkV2 (mkV "faltar") ; mkV2 (mkV "necessitar") ; } ; --*
lin lac_N = mkN "laca" ; --*
lin laconic_1_A = variants {mkA "curto" ; mkA "lacônico" ; } ; --*
lin lacquer_2_N = variants {mkN "laca" ; mkN "lacas" ; mkN "verniz" ; } ; --*
lin lacrimal_1_A = mkA "lacrimal" ; --*
lin lacrimation_1_N = mkN "lacrimejamento" ; --*
lin lacrosse_N = mkN "lacrosse" ; --*
lin lactase_N = variants {mkN "lactase" ; mkN "Lactase" ; } ; --*
lin lactic_A = mkA "láctico" ; --*
lin lactose_N = variants {mkN "lactose" ; mkN "sugar" ; } ; --*
lin lacuna_N = mkN "lacuna" ; --*
lin lad_1_N = variants {mkN "cara" ; mkN "garoto" ; mkN "homem" ; mkN "menino" ; mkN "moço" ; mkN "rapaz" ; mkN "sujeito" ; } ; --*
lin lad_2_N = variants {mkN "boy" ; mkN "filho" ; mkN "garoto" ; mkN "menino" ; mkN "moço" ; } ; --*
lin ladder_1_N = variants {mkN "escada" ; mkN "Escada" ; mkN "escadademão" ; } ; --*
lin laddie_N = variants {mkN "boy" ; mkN "filho" ; mkN "garoto" ; mkN "menino" ; mkN "moço" ; } ; --*
lin lade_2_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "up") ; } ; --*
lin lading_N = mkN "carga" ; --*
lin ladle_N = mkN "concha" ; --*
lin lady_1_N = variants {mkN "dama" ; mkN "dona" ; mkN "mulher" ; mkN "senhora" ; } ; --*
lin lady_2_N = variants {mkN "dama" ; mkN "madame" ; mkN "senhora" ; } ; --*
lin lady_3_N = mkN "Lady" ; --*
lin ladybird_N = variants {mkN "beetle" ; mkN "coccinela" ; mkN "joaninha" ; } ; --*
lin ladybug_N = variants {mkN "beetle" ; mkN "coccinela" ; mkN "joaninha" ; } ; --*
lin lady_in_waiting_N = mkN "Dama" ; --*
lin lady_killer_N = variants {mkN "killer" ; mkN "man" ; mkN "sedutor" ; } ; --*
lin ladylove_N = mkN "amor" ; --*
lin lady's_maid_N = mkN "maid" ; --*
lin lag_1_N = variants {mkN "atraso" ; mkN "operação" ; } ; --*
lin lag_2_N = mkN "intervalo" ; --*
lin lag_2_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin lagoon_N = variants {mkN "lagoa" ; mkN "lagoas" ; mkN "Lagoas" ; mkN "laguna" ; mkN "Laguna" ; mkN "lagunas" ; } ; --*
lin lagophthalmos_N = variants {mkN "lagoftalmo" ; mkN "Lagoftalmo" ; } ; --*
lin lagos_PN = mkPN "Lagos" ; --*
lin lahar_N = mkN "lahar" ; --*
lin lahore_PN = mkPN "Lahore" ; --*
lin laic_A = variants {mkA "laico" ; mkA "secular" ; } ; --*
lin lair_N = variants {mkN "antro" ; mkN "covil" ; mkN "toca" ; } ; --*
lin laity_N = variants {mkN "Laico" ; mkN "os" ; } ; --*
lin lake_1_N = mkN "lago" ; --*
lin lakh_N = variants {mkN "cem" ; mkN "thousand" ; } ; --*
lin lallation_2_N = mkN "balbucio" ; --*
lin lam_1_V = variants {mkV "away" ; mkV "escapar" ; mkV "escapulir" ; mkV "for" ; mkV "fugir" ; mkV "it" ; mkV "tail" ; mkV "the" ; mkV "to" ; } ; --*
lin lam_2_V2 = mkV2 (mkV "surrar") ; --*
lin lam_2_V = mkV "surrar" ; --*
lin lama_1_N = variants {mkN "lama" ; mkN "Lama" ; mkN "Lamas" ; } ; --*
lin lama_2_N = variants {mkN "lama" ; mkN "Lama" ; } ; --*
lin lamb_1_N = variants {mkN "anho" ; mkN "cordeiro" ; } ; --*
lin lamb_5_N = variants {mkN "anho" ; mkN "borrego" ; mkN "cordeiro" ; } ; --*
lin lambaste_1_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "bater") ; } ; --*
lin lambaste_2_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin lambda_1_N = mkN "lambda" ; --*
lin lambent_A = variants {mkA "brilhante" ; mkA "luminoso" ; } ; --*
lin lambert_2_N = variants {mkN "Constant" ; mkN "Lambert" ; } ; --*
lin lambskin_2_N = variants {mkN "pergaminho" ; mkN "Pergaminho" ; } ; --*
lin lamb_V = mkV "parir" ; --*
lin lame_1_A = variants {mkA "capenga" ; mkA "debilitado" ; mkA "fraco" ; mkA "manco" ; } ; --*
lin lame_2_A = variants {mkA "aleijado" ; mkA "capenga" ; mkA "coxo" ; mkA "estropiado" ; mkA "manco" ; mkA "perneta" ; } ; --*
lin lamella_1_N = mkN "brânquias" ; --*
lin lameness_1_N = mkN "claudicação" ; --*
lin lament_1_N = variants {mkN "lamentação" ; mkN "lamento" ; mkN "pranto" ; } ; --*
lin lament_1_V2 = mkV2 (mkV "queixar-se") ; --*
lin lament_2_N = variants {mkN "pranto" ; mkN "réquiem" ; } ; --*
lin lament_2_V2 = variants {mkV2 (mkV "lamentar") ; mkV2 (mkV "lastimar") ; mkV2 (mkV "queixar-se") ; } ; --*
lin lament_3_N = variants {mkN "elegia" ; mkN "lamento" ; } ; --*
lin lamentable_A = variants {mkA "deplorável" ; mkA "lamentável" ; } ; --*
lin lamentation_1_N = variants {mkN "lamentação" ; mkN "lamento" ; mkN "pranto" ; } ; --*
lin lamentation_2_N = mkN "luto" ; --*
lin lame_V2 = mkV2 (mkV "aleijar") ; --*
lin laminate_1_V2 = mkV2 (mkV "laminar") ; --*
lin laminate_1_V = mkV "laminar" ; --*
lin laminate_N = variants {mkN "laminação" ; mkN "Laminação" ; } ; --*
lin laminectomy_N = mkN "Laminectomia" ; --*
lin lamivudine_N = mkN "Lamivudina" ; --*
lin lamp_1_N = variants {mkN "cadeeiro" ; mkN "candeia" ; mkN "lâmpada" ; mkN "lâmpadas" ; mkN "luz" ; } ; --*
lin lamp_2_N = variants {mkN "lâmpada" ; mkN "Lâmpadas" ; } ; --*
lin lamp_black_N = variants {mkN "black" ; mkN "fuligem" ; mkN "picumã" ; } ; --*
lin lampoon_N = mkN "paródia" ; --*
lin lampoon_V2 = mkV2 (mkV "satirizar") ; --*
lin lamprey_N = variants {mkN "eel" ; mkN "lampreia" ; } ; --*
lin lampshade_1_N = variants {mkN "abajur" ; mkN "shade" ; } ; --*
lin lanai_1_N = variants {mkN "Island" ; mkN "Lanai" ; } ; --*
lin lancashire_PN = mkPN "Lancashire" ; --*
lin lancaster_2_PN = variants {mkPN "Lancastre" ; mkPN "line" ; mkPN "of" ; } ; --*
lin lancastrian_2_A = mkA "lancastriano" ; --*
lin lance_1_N = mkN "lança" ; --*
lin lance_2_N = variants {mkN "arpão" ; mkN "lança" ; } ; --*
lin lance_3_N = mkN "lança" ; --*
lin lancer_N = mkN "Lanceiro" ; --*
lin lancet_2_N = mkN "lança" ; --*
lin lanchow_PN = mkPN "Lanzhou" ; --*
lin land_11_N = mkN "agricultura" ; --*
lin land_1_V = variants {mkV "aterrissar" ; mkV "down" ; mkV "pousar" ; } ; --*
lin land_2_N = variants {mkN "solo" ; mkN "solos" ; mkN "terra" ; } ; --*
lin land_2_V2 = variants {mkV2 (mkV "aterrar") ; mkV2 (mkV "down") ; } ; --*
lin land_3_N = mkN "domínio" ; --*
lin land_3_V2 = mkV2 (mkV "levar") ; --*
lin land_4_N = variants {mkN "chão" ; mkN "firma" ; mkN "ground" ; mkN "land" ; mkN "solo" ; mkN "terra" ; } ; --*
lin land_5_N = variants {mkN "nação" ; mkN "país" ; mkN "terra" ; } ; --*
lin land_6_N = mkN "domínio" ; --*
lin land_6_V = variants {mkV "ashore" ; mkV "atracar" ; } ; --*
lin land_7_N = variants {mkN "estate" ; mkN "fazenda" ; } ; --*
lin land_8_N = variants {mkN "gente" ; mkN "nação" ; mkN "povo" ; } ; --*
lin land_9_N = variants {mkN "nação" ; mkN "país" ; mkN "politic" ; mkN "publica" ; mkN "república" ; mkN "união" ; } ; --*
lin land_agent_1_N = variants {mkN "agent" ; mkN "estate" ; } ; --*
lin lander_2_N = mkN "aterrissador" ; --*
lin landfill_N = variants {mkN "aterro" ; mkN "Aterro" ; } ; --*
lin landgrave_N = mkN "landegrave" ; --*
lin landholder_N = variants {mkN "owner" ; mkN "proprietário" ; } ; --*
lin landing_3_N = variants {mkN "aterragem" ; mkN "aterrissagem" ; mkN "pouso" ; } ; --*
lin landing_field_N = variants {mkN "aeródromo" ; mkN "aeroporto" ; mkN "field" ; } ; --*
lin landing_strip_N = variants {mkN "pista" ; mkN "strip" ; } ; --*
lin landless_A = mkA "sem" ; --*
lin landlord_N = variants {mkN "dono" ; mkN "proprietário" ; mkN "senhorio" ; } ; --*
lin landmark_2_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin landmark_3_N = mkN "marco" ; --*
lin landmass_1_N = variants {mkN "continente" ; mkN "mass" ; } ; --*
lin landowner_N = variants {mkN "owner" ; mkN "proprietário" ; } ; --*
lin landrover_N = mkN "jipe" ; --*
lin landscape_1_N = mkN "paisagem" ; --*
lin landscape_1_V2 = mkV2 (mkV "ajardinar") ; --*
lin landscape_2_N = variants {mkN "áreas" ; mkN "paisagem" ; } ; --*
lin landscaping_1_N = variants {mkN "gardening" ; mkN "jardinagem" ; } ; --*
lin landscapist_1_N = mkN "paisagista" ; --*
lin landscapist_2_N = variants {mkN "architect" ; mkN "gardener" ; mkN "paisagista" ; } ; --*
lin landslide_2_N = variants {mkN "derrocadas" ; mkN "Deslizamento" ; } ; --*
lin landslip_N = variants {mkN "derrocadas" ; mkN "Deslizamento" ; } ; --*
lin lane_1_N = variants {mkN "alameda" ; mkN "caminho" ; } ; --*
lin lane_2_N = variants {mkN "beco" ; mkN "caminho" ; mkN "faixa" ; mkN "pista" ; } ; --*
lin language_1_N = variants {mkN "communication" ; mkN "idioma" ; mkN "língua" ; mkN "linguagem" ; } ; --*
lin language_2_N = variants {mkN "communication" ; mkN "idioma" ; mkN "language" ; } ; --*
lin language_3_N = variants {mkN "letra" ; mkN "Letra" ; mkN "teor" ; mkN "texto" ; } ; --*
lin language_5_N = variants {mkN "discurso" ; mkN "idioma" ; mkN "língua" ; mkN "linguagem" ; } ; --*
lin language_6_N = variants {mkN "nomenclatura" ; mkN "terminologia" ; } ; --*
lin languid_A = mkA "lânguido" ; --*
lin languish_1_V = variants {mkV "away" ; mkV "enlanguescer" ; } ; --*
lin languish_2_V = variants {mkV "ansiar" ; mkV "desejar" ; } ; --*
lin languish_3_V = mkV "enlanguescer" ; --*
lin languor_4_N = mkN "letargia" ; --*
lin languorous_A = mkA "lânguido" ; --*
lin lanolin_2_N = mkN "Lanolina" ; --*
lin lantern_N = mkN "lanterna" ; --*
lin lanthanum_N = variants {mkN "Lantanio" ; mkN "lantânio" ; mkN "number" ; } ; --*
lin lao_1_N = mkN "laosiano" ; --*
lin lao_2_N = variants {mkN "laociano" ; mkN "Língua" ; } ; --*
lin laos_PN = variants {mkPN "Lao" ; mkPN "Laos" ; mkPN "Laus" ; mkPN "People's" ; } ; --*
lin laotian_A = mkA "laosiano" ; --*
lin laotian_N = mkN "laosiano" ; --*
lin lap_1_N = variants {mkN "colo" ; mkN "Colo" ; mkN "joelho" ; mkN "regaço" ; } ; --*
lin lap_2_V2 = mkV2 (mkV "lamber") ; --*
lin lap_3_V = variants {mkV "farfalhar" ; mkV "sibilar" ; } ; --*
lin lap_4_V2 = variants {mkV2 (mkV "lamber") ; mkV2 (mkV "up") ; } ; --*
lin lap_5_V2 = mkV2 (mkV "lavar") ; --*
lin laparoscopy_N = mkN "laparoscopia" ; --*
lin laparotomy_N = mkN "laparotomia" ; --*
lin la_paz_PN = variants {mkPN "of" ; mkPN "Paz" ; } ; --*
lin lapel_N = mkN "lapela" ; --*
lin lapis_lazuli_N = variants {mkN "Lapislazuli" ; mkN "lazuli" ; } ; --*
lin lapland_PN = variants {mkPN "Lapónia" ; mkPN "Lapônia" ; } ; --*
lin la_plata_PN = variants {mkPN "de" ; mkPN "Plata" ; mkPN "River" ; } ; --*
lin la_PN = variants {mkPN "Luisiana" ; mkPN "State" ; } ; --*
lin lappet_1_N = mkN "queixo" ; --*
lin lappet_2_N = mkN "ínfula" ; --*
lin lapse_1_N = variants {mkN "descuido" ; mkN "erro" ; mkN "negligência" ; } ; --*
lin lapse_2_N = mkN "lapso" ; --*
lin lapse_3_N = variants {mkN "quebra" ; mkN "Recidiva" ; } ; --*
lin lapse_6_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin lapsed_A = mkA "decorrido" ; --*
lin laptop_N = variants {mkN "computer" ; mkN "laptop" ; mkN "Laptops" ; } ; --*
lin lap_up_V2 = variants {mkV2 (mkV "lamber") ; mkV2 (mkV "up") ; } ; --*
lin lapwing_N = variants {mkN "plover" ; mkN "quero-quero" ; } ; --*
lin larboard_A = mkA "a" ; --*
lin larboard_N = mkN "bombordo" ; --*
lin larceny_N = variants {mkN "furto" ; mkN "roubo" ; } ; --*
lin larch_1_N = variants {mkN "larice" ; mkN "lárix" ; } ; --*
lin larch_2_N = variants {mkN "larice" ; mkN "lariço" ; mkN "tree" ; } ; --*
lin lard_2_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin larder_2_N = variants {mkN "aparador" ; mkN "bodega" ; mkN "despensa" ; mkN "doçaria" ; } ; --*
lin lard_N = mkN "banha" ; --*
lin large_1_A = mkA "grande" ; --*
lin large_3_A = mkA "bombástico" ; --*
lin large_4_A = variants {mkA "generoso" ; mkA "grande" ; mkA "magnânimo" ; } ; --*
lin large_5_A = variants {mkA "ilustre" ; mkA "importante" ; mkA "proeminente" ; } ; --*
lin large_6_A = mkA "extenso" ; --*
lin large_7_A = variants {mkA "child" ; mkA "grávida" ; } ; --*
lin largemouth_N = variants {mkN "achigã" ; mkN "bass" ; mkN "black" ; mkN "salmoides" ; } ; --*
lin largeness_3_N = mkN "extensão" ; --*
lin largeness_4_N = mkN "pretensão" ; --*
lin lariat_N = mkN "laço" ; --*
lin lark_about_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin larkspur_N = variants {mkN "delfínio" ; mkN "espora-dos-jardins" ; mkN "esporeira" ; } ; --*
lin lark_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin larn_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "aprender") ; mkV2 (mkV "estudar") ; } ; --*
lin larva_N = mkN "larva" ; --*
lin laryngitis_N = mkN "laringite" ; --*
lin laryngoscope_N = mkN "laringoscópio" ; --*
lin laryngospasm_N = variants {mkN "espasmo" ; mkN "laringoespasmo" ; } ; --*
lin laryngotracheobronchitis_N = mkN "pain" ; --*
lin larynx_N = variants {mkN "box" ; mkN "laringe" ; } ; --*
lin lasagna_1_N = mkN "lasanha" ; --*
lin lasagna_2_N = mkN "lasanha" ; --*
lin lascivious_A = variants {mkA "devasso" ; mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; } ; --*
lin lasciviousness_N = variants {mkN "lasciva" ; mkN "lascívia" ; } ; --*
lin laser_N = variants {mkN "laser" ; mkN "maser" ; } ; --*
lin lash_1_N = variants {mkN "celha" ; mkN "cílio" ; mkN "pestana" ; } ; --*
lin lash_1_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin lash_2_N = variants {mkN "chicote" ; mkN "látego" ; mkN "tira" ; } ; --*
lin lash_3_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; } ; --*
lin lashing_1_N = mkN "flagelação" ; --*
lin lash_out_V = variants {mkV "agredir" ; mkV "atacar" ; mkV "out" ; } ; --*
lin la_spezia_PN = mkPN "Spezia" ; --*
lin lassie_N = variants {mkN "fille" ; mkN "garota" ; mkN "girl" ; mkN "moça" ; mkN "rapariga" ; } ; --*
lin lassitude_1_N = mkN "letargia" ; --*
lin lassitude_3_N = variants {mkN "lassidão" ; mkN "letargia" ; } ; --*
lin lass_N = variants {mkN "fille" ; mkN "garota" ; mkN "girl" ; mkN "moça" ; mkN "rapariga" ; } ; --*
lin lasso_2_N = mkN "laço" ; --*
lin lasso_V2 = mkV2 (mkV "laçar") ; --*
lin last_1_A = variants {mkA "passado" ; mkA "último" ; } ; --*
lin last_1_N = variants {mkN "acabamento" ; mkN "conclusão" ; mkN "fim" ; mkN "final" ; mkN "point" ; } ; --*
lin last_1_V = mkV "durar" ; --*
lin last_2_A = mkA "último" ; --*
lin last_2_N = mkN "último" ; --*
lin last_2_V = variants {mkV "on" ; mkV "out" ; mkV "perseverar" ; mkV "resistir" ; mkV "sobreviver" ; mkV "up" ; } ; --*
lin last_3_A = variants {mkA "final" ; mkA "último" ; } ; --*
lin last_3_N = mkN "final" ; --*
lin last_4_A = mkA "último" ; --*
lin last_4_N = mkN "morte" ; --*
lin last_5_A = mkA "último" ; --*
lin last_6_A = mkA "final" ; --*
lin last_7_A = mkA "derradeiro" ; --*
lin last_7_N = variants {mkN "fim" ; mkN "final" ; mkN "stage" ; } ; --*
lin last_8_A = variants {mkA "definitivo" ; mkA "final" ; } ; --*
lin last_9_A = variants {mkA "o" ; mkA "pior" ; } ; --*
lin lasting_1_A = variants {mkA "duradouro" ; mkA "permanente" ; } ; --*
lin lasting_2_A = variants {mkA "duradouro" ; mkA "longevo" ; } ; --*
lin lasting_3_A = mkA "duradouro" ; --*
lin lasting_4_A = mkA "duradouro" ; --*
lin lastingness_N = mkN "durabilidade" ; --*
lin lastly_Adv = variants {mkAdv "conclusion" ; mkAdv "finalmente" ; mkAdv "por" ; } ; --*
lin latakia_2_N = variants {mkN "Ladhiqiyah" ; mkN "Lataquia" ; } ; --*
lin latch_on_2_V = variants {mkV "on" ; mkV "up" ; } ; --*
lin late_1_A = mkA "tardio" ; --*
lin late_2_A = variants {mkA "tarde" ; mkA "tardio" ; } ; --*
lin late_3_A = variants {mkA "anterior" ; mkA "prévio" ; } ; --*
lin late_4_Adv = variants {mkAdv "late" ; mkAdv "recentemente" ; mkAdv "ultimamente" ; } ; --*
lin late_4_A = variants {mkA "novo" ; mkA "recente" ; } ; --*
lin late_5_A = mkA "tardio" ; --*
lin late_6_A = mkA "tardio" ; --*
lin lateen_N = variants {mkN "latinsegel" ; mkN "sail" ; } ; --*
lin lately_Adv = variants {mkAdv "late" ; mkAdv "recentemente" ; mkAdv "ultimamente" ; } ; --*
lin latency_1_N = variants {mkN "latency" ; mkN "tempo" ; } ; --*
lin latency_2_N = variants {mkN "latência" ; mkN "period" ; mkN "time" ; } ; --*
lin latency_3_N = mkN "latência" ; --*
lin latent_1_A = mkA "latente" ; --*
lin later_1_Adv = variants {mkAdv "após" ; mkAdv "mais" ; mkAdv "on" ; mkAdv "subsequentemente" ; mkAdv "subseqüentemente" ; } ; --*
lin later_2_Adv = variants {mkAdv "and" ; mkAdv "mais" ; } ; --*
lin laterality_3_N = variants {mkN "dominância" ; mkN "Lateralidade" ; } ; --*
lin laterite_N = mkN "laterita" ; --*
lin latest_1_A = variants {mkA "mais" ; mkA "último" ; } ; --*
lin latex_1_N = mkN "látex" ; --*
lin latex_2_N = variants {mkN "látex" ; mkN "paint" ; } ; --*
lin lathe_N = variants {mkN "torno" ; mkN "turno" ; } ; --*
lin lather_1_N = mkN "espuma" ; --*
lin lather_1_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin lather_4_V2 = mkV2 (mkV "ensaboar") ; --*
lin lather_4_V = mkV "ensaboar" ; --*
lin lath_N = variants {mkN "ripa" ; mkN "sarrafo" ; } ; --*
lin latin_1_A = variants {mkA "latino" ; mkA "latino-americana" ; } ; --*
lin latin_2_A = mkA "latino" ; --*
lin latin_3_A = variants {mkA "románica" ; mkA "românico" ; } ; --*
lin latin_4_A = mkA "latino-americano" ; --*
lin latinate_A = variants {mkA "derivado" ; mkA "latino" ; } ; --*
lin latinist_N = mkN "Latinistas" ; --*
lin latinize_1_V2 = variants {mkV2 (mkV "latinizar") ; mkV2 (mkV "romanizar") ; } ; --*
lin latinize_2_V2 = mkV2 (mkV "latinizar") ; --*
lin latinize_3_V2 = variants {mkV2 (mkV "catequizar") ; mkV2 (mkV "catolizar") ; mkV2 (mkV "latinizar") ; } ; --*
lin latitude_2_N = mkN "liberdade" ; --*
lin latitude_3_N = variants {mkN "latitude" ; mkN "of" ; mkN "paralelo" ; } ; --*
lin latrine_N = variants {mkN "latrina" ; mkN "privada" ; } ; --*
lin latter_A = mkA "última" ; --*
lin lattice_1_N = variants {mkN "trama" ; mkN "treliça" ; } ; --*
lin laudanum_N = variants {mkN "láudano" ; mkN "of" ; } ; --*
lin laud_V2 = variants {mkV2 (mkV "exaltar") ; mkV2 (mkV "glorificar") ; mkV2 (mkV "louvar") ; } ; --*
lin laugh_1_N = variants {mkN "risada" ; mkN "riso" ; mkN "risos" ; } ; --*
lin laugh_3_N = variants {mkN "bazófia" ; mkN "brincadeira" ; mkN "caçoada" ; mkN "chiste" ; mkN "graça" ; mkN "gracejo" ; mkN "piada" ; } ; --*
lin laughable_1_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin laughable_2_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin laugh_at_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "fun") ; mkV2 (mkV "mangar") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "zombar") ; } ; --*
lin laughing_gas_N = variants {mkN "gas" ; mkN "oxide" ; } ; --*
lin laughter_1_N = variants {mkN "risada" ; mkN "riso" ; mkN "risos" ; } ; --*
lin laugh_V2 = variants {mkV2 (mkV "joy") ; mkV2 (mkV "mirth") ; mkV2 (mkV "rir") ; } ; --*
lin laugh_V = variants {mkV "joy" ; mkV "mirth" ; mkV "rir" ; } ; --*
lin laugh_VS = variants {mkVS (mkV "joy") ; mkVS (mkV "mirth") ; mkVS (mkV "rir") ; } ; --*
lin launch_1_V2 = variants {mkV2 (mkV "estabelecer") ; mkV2 (mkV "up") ; } ; --*
lin launch_2_N = variants {mkN "lançamento" ; mkN "lancha" ; } ; --*
lin launch_2_V2 = mkV2 (mkV "lançar") ; --*
lin launch_3_V2 = mkV2 (mkV "arrojar") ; --*
lin launch_4_V = mkV "começar" ; --*
lin launch_5_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "lançar") ; } ; --*
lin launcher_2_N = mkN "catapulta" ; --*
lin launching_2_N = variants {mkN "appearance" ; mkN "apresentação" ; mkN "introdução" ; mkN "lançamento" ; } ; --*
lin launching_3_N = variants {mkN "lançamento" ; mkN "lancha" ; } ; --*
lin launder_1_V2 = mkV2 (mkV "lavar") ; --*
lin laundering_N = mkN "lavagem" ; --*
lin laundress_N = mkN "lavadeira" ; --*
lin laundry_1_N = variants {mkN "lavandaria" ; mkN "lavanderia" ; mkN "roupa" ; } ; --*
lin laundry_2_N = variants {mkN "área" ; mkN "lavanderia" ; } ; --*
lin laundrywoman_N = mkN "lavadeira" ; --*
lin laurel_2_N = variants {mkN "Laurel" ; mkN "Stan" ; mkN "Stanley" ; } ; --*
lin lausanne_PN = mkPN "Lausana" ; --*
lin lava_N = mkN "lava" ; --*
lin lavatory_1_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin lavatory_2_N = variants {mkN "lavabo" ; mkN "pia" ; } ; --*
lin lavatory_3_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "retrete" ; mkN "sanita" ; mkN "toilet" ; mkN "vaso" ; } ; --*
lin lave_1_V2 = mkV2 (mkV "lavar") ; --*
lin lave_2_V2 = variants {mkV2 (mkV "lavar") ; mkV2 (mkV "lavar-se") ; mkV2 (mkV "limpar") ; } ; --*
lin lavender_1_N = mkN "lavanda" ; --*
lin laver_1_N = variants {mkN "George" ; mkN "Laver" ; mkN "Rod" ; } ; --*
lin laver_4_N = variants {mkN "Alface-do-mar" ; mkN "lettuce" ; } ; --*
lin lavish_1_A = mkA "exuberante" ; --*
lin lavish_2_A = mkA "luxuoso" ; --*
lin lavishness_1_N = variants {mkN "luxo" ; mkN "sumptuosidade" ; } ; --*
lin lavish_V2 = mkV2 (mkV "esbanjar") ; --*
lin lav_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin law_1_N = variants {mkN "ciências" ; mkN "jurisprudência" ; mkN "lei" ; } ; --*
lin law_2_N = variants {mkN "actos" ; mkN "lei" ; mkN "leis" ; } ; --*
lin law_3_N = variants {mkN "direito" ; mkN "law" ; } ; --*
lin law_4_N = variants {mkN "lei" ; mkN "of" ; } ; --*
lin law_5_N = variants {mkN "Direito" ; mkN "jurisprudência" ; mkN "philosophy" ; } ; --*
lin law_6_N = variants {mkN "direito" ; mkN "of" ; } ; --*
lin law_7_N = variants {mkN "force" ; mkN "lei" ; mkN "polícia" ; } ; --*
lin lawbreaker_N = variants {mkN "contraventor" ; mkN "offender" ; } ; --*
lin lawful_1_A = mkA "lícito" ; --*
lin lawful_3_A = variants {mkA "legítimo" ; mkA "verdadeiro" ; } ; --*
lin lawful_4_A = variants {mkA "legítimo" ; mkA "lícito" ; } ; --*
lin lawfulness_N = mkN "legalidade" ; --*
lin lawgiver_N = mkN "legislador" ; --*
lin lawless_1_A = mkA "anárquico" ; --*
lin lawlessness_1_N = mkN "anarquia" ; --*
lin lawmaker_N = mkN "legislador" ; --*
lin lawmaking_N = mkN "legislação" ; --*
lin lawn_mower_N = variants {mkN "corta-relva" ; mkN "mower" ; } ; --*
lin lawn_N = variants {mkN "clareira" ; mkN "grama" ; mkN "gramado" ; mkN "prado" ; mkN "prados" ; mkN "relva" ; } ; --*
lin lawrence_2_PN = variants {mkPN "E." ; mkPN "Edward" ; mkPN "of" ; mkPN "T." ; } ; --*
lin lawrence_4_PN = variants {mkPN "Gertrude" ; mkPN "Lawrence" ; } ; --*
lin lawrence_6_PN = variants {mkPN "D." ; mkPN "H." ; mkPN "Herbert" ; } ; --*
lin lawrence_7_PN = variants {mkPN "Kansas" ; mkPN "Lawrence" ; } ; --*
lin lawrencium_N = variants {mkN "laurêncio" ; mkN "lawrêncio" ; mkN "number" ; } ; --*
lin lawsuit_N = variants {mkN "causa" ; mkN "pleito" ; mkN "processo" ; } ; --*
lin lawyer_N = variants {mkN "advogada" ; mkN "advogado" ; mkN "jurista" ; } ; --*
lin lax_1_A = mkA "lasso" ; --*
lin lax_2_A = mkA "lasso" ; --*
lin lax_3_A = mkA "lasso" ; --*
lin laxative_A = mkA "laxativo" ; --*
lin laxative_N = variants {mkN "laxante" ; mkN "Laxantes" ; } ; --*
lin laxity_2_N = mkN "negligência" ; --*
lin laxness_1_N = mkN "negligência" ; --*
lin lay_1_A = variants {mkA "laico" ; mkA "secular" ; } ; --*
lin lay_1_N = mkN "balada" ; --*
lin lay_1_V2 = variants {mkV2 (mkV "botar") ; mkV2 (mkV "carregar") ; mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin lay_2_N = variants {mkN "balada" ; mkN "Baladas" ; } ; --*
lin lay_2_V2 = variants {mkV2 (mkV "deitar") ; mkV2 (mkV "down") ; mkV2 (mkV "pôr") ; } ; --*
lin lay_4_V = mkV "botar" ; --*
lin layabout_N = variants {mkN "vadio" ; mkN "vagabundo" ; } ; --*
lin lay_down_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fazer") ; } ; --*
lin layer_1_N = mkN "calceteiro" ; --*
lin layer_2_N = variants {mkN "camada" ; mkN "estrato" ; } ; --*
lin layer_3_N = mkN "estrato" ; --*
lin layer_4_N = mkN "botadeira" ; --*
lin layer_5_N = variants {mkN "camada" ; mkN "estrato" ; } ; --*
lin laying_N = variants {mkN "calcetar" ; mkN "laying" ; } ; --*
lin layman_N = variants {mkN "laico" ; mkN "leigo" ; } ; --*
lin lay_off_1_V2 = variants {mkV2 (mkV "cessar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "descontinuar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin lay_off_2_V2 = variants {mkV2 (mkV "despedir") ; mkV2 (mkV "off") ; } ; --*
lin lay_out_1_N = mkN "plano" ; --*
lin lay_out_1_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "out") ; } ; --*
lin lay_out_2_N = mkN "layout" ; --*
lin lay_out_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin lay_out_4_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "out") ; } ; --*
lin lay_out_5_V2 = mkV2 (mkV "out") ; --*
lin layover_N = mkN "parada" ; --*
lin lazaret_N = variants {mkN "house" ; mkN "leprosário" ; } ; --*
lin lazarette_N = variants {mkN "house" ; mkN "leprosário" ; } ; --*
lin lazaretto_1_N = variants {mkN "house" ; mkN "leprosário" ; } ; --*
lin lazar_N = variants {mkN "leprosa" ; mkN "leproso" ; } ; --*
lin laziness_1_N = variants {mkN "inércia" ; mkN "preguiça" ; } ; --*
lin laziness_2_N = mkN "indolência" ; --*
lin laziness_3_N = mkN "preguiça" ; --*
lin lazy_1_A = mkA "mandrião" ; --*
lin lazy_2_A = variants {mkA "preguiçoso" ; mkA "vadio" ; mkA "vagaroso" ; } ; --*
lin lb_N = mkN "libra" ; --*
lin lea_2_N = variants {mkN "land" ; mkN "pastagens" ; mkN "pasto" ; mkN "prado" ; } ; --*
lin leach_3_V2 = mkV2 (mkV "sacar") ; --*
lin leach_N = mkN "lixiviação" ; --*
lin lead_10_N = variants {mkN "indicação" ; mkN "information" ; } ; --*
lin lead_10_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "reger") ; } ; --*
lin lead_11_V = mkV "ir" ; --*
lin lead_12_V2 = mkV2 (mkV "preceder") ; --*
lin lead_12_V2V = mkV2V (mkV "preceder") ; --*
lin lead_12_V = mkV "preceder" ; --*
lin lead_13_N = variants {mkN "coleira" ; mkN "trela" ; } ; --*
lin lead_1_N = mkN "liderança" ; --*
lin lead_1_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "levar") ; } ; --*
lin lead_2_N = variants {mkN "chumbo" ; mkN "number" ; } ; --*
lin lead_3_N = mkN "trilha" ; --*
lin lead_4_N = mkN "Terminal" ; --*
lin lead_4_V2 = variants {mkV2 (mkV "desbravar") ; mkV2 (mkV "liderar") ; } ; --*
lin lead_6_V = variants {mkV "estender" ; mkV "ir" ; mkV "levar" ; } ; --*
lin lead_7_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "encabeçar") ; mkV2 (mkV "gerir") ; mkV2 (mkV "liderar") ; } ; --*
lin lead_8_N = mkN "ator" ; --*
lin lead_8_V2 = mkV2 (mkV "liderar") ; --*
lin leaden_3_A = mkA "plúmbeo" ; --*
lin leader_1_N = variants {mkN "chefe" ; mkN "líder" ; } ; --*
lin leadership_1_N = mkN "liderança" ; --*
lin leadership_3_N = mkN "liderança" ; --*
lin leadership_4_N = mkN "liderança" ; --*
lin leading_1_A = mkA "o" ; --*
lin leading_2_N = mkN "liderança" ; --*
lin lead_on_2_V2 = variants {mkV2 (mkV "enganar") ; mkV2 (mkV "iludir") ; mkV2 (mkV "lograr") ; mkV2 (mkV "on") ; } ; --*
lin lead_to_V2 = mkV2 (mkV "deixar") ; --*
lin leaf_1_N = variants {mkN "folha" ; mkN "folhagem" ; mkN "folhas" ; } ; --*
lin leaf_2_N = variants {mkN "folha" ; mkN "folhas" ; } ; --*
lin leaf_2_V = mkV "folhear" ; --*
lin leaf_3_V = variants {mkV "dar" ; mkV "folhear" ; } ; --*
lin leaflet_1_N = mkN "folder" ; --*
lin leaflet_3_N = variants {mkN "brochura" ; mkN "folheto" ; mkN "livreto" ; mkN "opúsculo" ; mkN "panfleto" ; } ; --*
lin leafy_A = variants {mkA "folhosa" ; mkA "folhoso" ; mkA "foliácea" ; mkA "foliáceo" ; mkA "frondosa" ; mkA "frondoso" ; } ; --*
lin league_1_N = variants {mkN "légua" ; mkN "liga" ; mkN "ordem" ; } ; --*
lin league_2_N = variants {mkN "aliança" ; mkN "légua" ; mkN "liga" ; } ; --*
lin league_3_N = mkN "légua" ; --*
lin league_V2 = mkV2 (mkV "associar-se") ; --*
lin league_V = mkV "associar-se" ; --*
lin leak_1_N = variants {mkN "rachadura" ; mkN "vazamento" ; } ; --*
lin leak_3_V = mkV "vazar" ; --*
lin leak_4_N = variants {mkN "derrame" ; mkN "escoamento" ; } ; --*
lin leak_4_V = mkV "vazar" ; --*
lin leakage_N = variants {mkN "derrame" ; mkN "escoamento" ; } ; --*
lin leak_V2 = mkV2 (mkV "vazar") ; --*
lin lean_1_A = variants {mkA "esbelto" ; mkA "magro" ; mkA "tênue" ; } ; --*
lin lean_1_V = variants {mkV "debruçar" ; mkV "inclinar" ; } ; --*
lin lean_2_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "apoiar-se") ; } ; --*
lin lean_3_V = variants {mkV "given" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; } ; --*
lin lean_4_A = mkA "escasso" ; --*
lin lean_4_V = mkV "depender" ; --*
lin leaner_N = mkN "mais" ; --*
lin leaning_1_N = mkN "tendência" ; --*
lin leaning_2_N = variants {mkN "inclinação" ; mkN "tendência" ; } ; --*
lin leaning_3_N = mkN "inclinação" ; --*
lin lean_N = mkN "inclinação" ; --*
lin lean_on_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "on") ; } ; --*
lin leap_1_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin leap_1_V2 = variants {mkV2 (mkV "pular") ; mkV2 (mkV "saltar") ; } ; --*
lin leap_1_V = variants {mkV "pular" ; mkV "saltar" ; } ; --*
lin leap_2_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin leap_2_V = mkV "saltar" ; --*
lin leap_3_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin leap_4_N = mkN "salto" ; --*
lin leapfrog_1_N = variants {mkN "carniça" ; mkN "eixo-badeixo" ; } ; --*
lin leap_out_1_V = variants {mkV "out" ; mkV "saltar" ; } ; --*
lin leap_year_N = variants {mkN "days" ; mkN "year" ; } ; --*
lin learn_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "aprender") ; mkV2 (mkV "estudar") ; } ; --*
lin learn_2_VS = variants {mkVS (mkV "a") ; mkVS (mkV "achar") ; mkVS (mkV "descobrir") ; mkVS (mkV "informar-se") ; mkVS (mkV "out") ; mkVS (mkV "up") ; mkVS (mkV "wind") ; mkVS (mkV "word") ; } ; --*
lin learn_3_V2 = variants {mkV2 (mkV "decorar") ; mkV2 (mkV "memorizar") ; mkV2 (mkV "saber") ; } ; --*
lin learn_3_V = variants {mkV "decorar" ; mkV "memorizar" ; mkV "saber" ; } ; --*
lin learn_4_V = variants {mkV "aprender" ; mkV "cursar" ; mkV "estudar" ; } ; --*
lin learn_5_V2 = variants {mkV2 (mkV "ensinar") ; mkV2 (mkV "instruir") ; mkV2 (mkV "lecionar") ; } ; --*
lin learn_6_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin learner_1_N = variants {mkN "acadêmico" ; mkN "aluno" ; mkN "estudante" ; } ; --*
lin learner_2_N = mkN "aprendiz" ; --*
lin learning_1_N = variants {mkN "aprendizagem" ; mkN "aquisição" ; } ; --*
lin learning_2_N = variants {mkN "aprendizado" ; mkN "aprendizagem" ; mkN "Aprendizagem" ; mkN "ciência" ; mkN "erudição" ; mkN "sabedoria" ; } ; --*
lin lease_1_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "arrendar") ; } ; --*
lin lease_2_N = mkN "aluguel" ; --*
lin lease_2_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin lease_3_N = variants {mkN "arrendamento" ; mkN "of" ; } ; --*
lin lease_3_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "arrendar") ; } ; --*
lin lease_4_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin leash_1_N = variants {mkN "coleira" ; mkN "trela" ; } ; --*
lin leash_2_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin leather_N = variants {mkN "couro" ; mkN "Couros" ; mkN "pele" ; } ; --*
lin leatherneck_N = variants {mkN "dog" ; mkN "Fuzileiros" ; mkN "soldier" ; } ; --*
lin leave_10_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "legar") ; } ; --*
lin leave_12_V2 = variants {mkV2 (mkV "behind") ; mkV2 (mkV "deixar") ; } ; --*
lin leave_13_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "on") ; } ; --*
lin leave_14_V2 = variants {mkV2 (mkV "esquecer") ; mkV2 (mkV "olvidar") ; } ; --*
lin leave_1_N = variants {mkN "licença" ; mkN "of" ; } ; --*
lin leave_1_V = variants {mkV "away" ; mkV "forth" ; mkV "retirar-se" ; mkV "sair" ; } ; --*
lin leave_2_V2 = mkV2 (mkV "abandonar") ; --*
lin leave_3_N = variants {mkN "despedida" ; mkN "partida" ; } ; --*
lin leave_5_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "out") ; mkV2 (mkV "sair") ; } ; --*
lin leave_6_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "for") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "permitir") ; } ; --*
lin leave_7_V2 = mkV2 (mkV "deixar") ; --*
lin leave_8_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "partir") ; mkV2 (mkV "sair") ; mkV2 (mkV "up") ; } ; --*
lin leave_8_V = variants {mkV "abandonar" ; mkV "partir" ; mkV "sair" ; mkV "up" ; } ; --*
lin leave_9_V2 = mkV2 (mkV "entregar") ; --*
lin leaven_1_N = variants {mkN "levedura" ; mkN "leveduras" ; } ; --*
lin leaven_V2 = mkV2 (mkV "levantar") ; --*
lin leave_of_absence_CN = variants {UseN (mkN "licença") ; UseN (mkN "of") ; } ; --*
lin leave_off_2_V = variants {mkV "excetuar" ; mkV "excluir" ; mkV "off" ; mkV "omitir" ; mkV "out" ; } ; --*
lin leave_out_1_V2 = variants {mkV2 (mkV "excetuar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "off") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; } ; --*
lin leave_taking_N = variants {mkN "despedida" ; mkN "partida" ; } ; --*
lin lebanese_A = mkA "libanês" ; --*
lin lebaneseFem_N = mkN "libanês" ; --*
lin lebaneseMasc_N = mkN "libanês" ; --*
lin lebanon_PN = variants {mkPN "Libano" ; mkPN "Republic" ; mkPN "República" ; } ; --*
lin lecher_1_N = variants {mkN "depravado" ; mkN "devasso" ; mkN "sátiro" ; } ; --*
lin lecherous_A = mkA "devasso" ; --*
lin lecherousness_N = variants {mkN "luxúria" ; mkN "paixão" ; } ; --*
lin lecithin_N = mkN "lecitina" ; --*
lin lectin_N = mkN "lectina" ; --*
lin lector_1_N = mkN "leitor" ; --*
lin lector_2_N = variants {mkN "docente" ; mkN "leitor" ; mkN "prof" ; mkN "prof." ; mkN "professor" ; } ; --*
lin lecture_1_N = variants {mkN "lecture" ; mkN "palestra" ; mkN "preleção" ; } ; --*
lin lecture_1_V = variants {mkV "falar" ; mkV "palestrar" ; } ; --*
lin lecture_2_N = variants {mkN "bronca" ; mkN "to" ; } ; --*
lin lecture_2_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin lecture_3_N = mkN "conferência" ; --*
lin lecturer_1_N = variants {mkN "docente" ; mkN "leitor" ; mkN "prof" ; mkN "prof." ; mkN "professor" ; } ; --*
lin lecturer_2_N = mkN "conferencista" ; --*
lin ledger_1_N = variants {mkN "book" ; mkN "livro-caixa" ; mkN "of" ; } ; --*
lin lee_1_N = variants {mkN "Jackson" ; mkN "Lee" ; mkN "Spike" ; } ; --*
lin lee_3_N = variants {mkN "Bruce" ; mkN "Lee" ; mkN "Yuen" ; } ; --*
lin lee_4_N = variants {mkN "Dao" ; mkN "Tsung-Dao" ; } ; --*
lin lee_7_N = variants {mkN "E." ; mkN "Edward" ; mkN "Robert" ; } ; --*
lin leech_1_N = mkN "sanguessuga" ; --*
lin leech_2_N = variants {mkN "parasita" ; mkN "sanguessuga" ; } ; --*
lin leeds_PN = mkPN "Leeds" ; --*
lin leek_1_N = variants {mkN "alho" ; mkN "cebolinha-verde" ; mkN "porrum" ; } ; --*
lin leek_1_PN = variants {mkPN "alho" ; mkPN "cebolinha-verde" ; mkPN "porrum" ; } ; --*
lin leek_2_N = variants {mkN "Alho" ; mkN "alho-poró" ; mkN "alho-porro" ; mkN "Alho-porro" ; mkN "Alho-porró" ; mkN "Alho-porrô" ; mkN "porro" ; } ; --*
lin leek_2_PN = variants {mkPN "Alho" ; mkPN "alho-poró" ; mkPN "alho-porro" ; mkPN "Alho-porro" ; mkPN "Alho-porró" ; mkPN "Alho-porrô" ; mkPN "porro" ; } ; --*
lin leery_A = mkA "suspeito" ; --*
lin lees_N = mkN "borra" ; --*
lin leeward_A = mkA "sotavento" ; --*
lin left_1_A = mkA "esquerdo" ; --*
lin left_1_N = mkN "esquerda" ; --*
lin left_2_A = variants {mkA "over" ; mkA "restante" ; } ; --*
lin left_2_N = variants {mkN "esquerda" ; mkN "wing" ; } ; --*
lin left_3_N = variants {mkN "esquerda" ; mkN "hand" ; } ; --*
lin left_4_A = mkA "esquerdista" ; --*
lin left_handed_1_A = mkA "canhoto" ; --*
lin left_handed_4_A = mkA "levogiro" ; --*
lin left_handed_6_A = mkA "desengoçado" ; --*
lin leftist_A = variants {mkA "esquerda" ; mkA "esquerdista" ; } ; --*
lin leftist_N = mkN "esquerdista" ; --*
lin leftover_A = variants {mkA "over" ; mkA "restante" ; } ; --*
lin leftover_N = mkN "sobra" ; --*
lin left_winger_N = mkN "esquerdista" ; --*
lin leg_1_N = mkN "perna" ; --*
lin leg_2_N = mkN "perna" ; --*
lin leg_3_N = mkN "pé" ; --*
lin leg_6_N = variants {mkN "leg" ; mkN "perna" ; mkN "Perna-de-pau" ; } ; --*
lin leg_7_N = mkN "calça" ; --*
lin leg_9_N = variants {mkN "etapa" ; mkN "parada" ; } ; --*
lin legacy_N = variants {mkN "herança" ; mkN "legado" ; } ; --*
lin legal_1_A = mkA "legal" ; --*
lin legal_3_A = mkA "legal" ; --*
lin legality_N = mkN "legalidade" ; --*
lin legalization_1_N = mkN "legalização" ; --*
lin legalize_1_V2 = variants {mkV2 (mkV "legalizar") ; mkV2 (mkV "legitimar") ; } ; --*
lin legato_A = mkA "legato" ; --*
lin legend_1_N = variants {mkN "apólogo" ; mkN "lenda" ; } ; --*
lin legend_2_N = variants {mkN "legenda" ; mkN "lenda" ; mkN "subtítulo" ; mkN "título" ; } ; --*
lin legendary_1_A = variants {mkA "legendário" ; mkA "lendário" ; } ; --*
lin legendary_2_A = variants {mkA "lendário" ; mkA "místico" ; } ; --*
lin legerdemain_N = variants {mkN "ilusão" ; mkN "magia" ; mkN "trick" ; mkN "truque" ; } ; --*
lin leghorn_N = variants {mkN "chapéu-panamá" ; mkN "hat" ; } ; --*
lin legible_A = mkA "legível" ; --*
lin legion_1_N = variants {mkN "exército" ; mkN "hoste" ; mkN "legião" ; } ; --*
lin legion_3_N = mkN "exército" ; --*
lin legionary_N = mkN "legionário" ; --*
lin legionnaire_2_N = mkN "legionário" ; --*
lin legislate_V2 = mkV2 (mkV "legislar") ; --*
lin legislate_V = mkV "legislar" ; --*
lin legislation_1_N = variants {mkN "law" ; mkN "legislação" ; } ; --*
lin legislation_2_N = mkN "legislação" ; --*
lin legislative_1_A = mkA "legislativo" ; --*
lin legislative_2_A = mkA "legislativo" ; --*
lin legislator_N = variants {mkN "legislador" ; mkN "Legislador" ; } ; --*
lin legislature_N = variants {mkN "assembly" ; mkN "body" ; mkN "legislatura" ; } ; --*
lin legitimacy_1_N = mkN "legitimidade" ; --*
lin legitimacy_2_N = variants {mkN "autenticidade" ; mkN "legitimidade" ; } ; --*
lin legitimate_1_A = mkA "legítimo" ; --*
lin legitimate_2_A = mkA "lógico" ; --*
lin legitimate_4_A = variants {mkA "legítimo" ; mkA "lícito" ; } ; --*
lin legitimation_1_N = mkN "legitimação" ; --*
lin legitimation_2_N = mkN "legalização" ; --*
lin legitimatize_1_V2 = variants {mkV2 (mkV "legalizar") ; mkV2 (mkV "legitimar") ; } ; --*
lin legitimize_1_V2 = variants {mkV2 (mkV "legalizar") ; mkV2 (mkV "legitimar") ; } ; --*
lin legitimize_V2V = variants {mkV2V (mkV "legalizar") ; mkV2V (mkV "legitimar") ; } ; --*
lin legume_3_N = variants {mkN "legume" ; mkN "vegetal" ; } ; --*
lin le_havre_PN = mkPN "Havre" ; --*
lin leicester_1_PN = mkPN "Leicestershire" ; --*
lin leicester_2_PN = mkPN "Leicester" ; --*
lin leicestershire_PN = mkPN "Leicestershire" ; --*
lin leiden_PN = mkPN "Leida" ; --*
lin leigh_PN = variants {mkPN "Leigh" ; mkPN "Vivien" ; } ; --*
lin lei_N = variants {mkN "coroa" ; mkN "grinalda" ; mkN "guirlanda" ; mkN "terço" ; } ; --*
lin leiomyoma_N = mkN "leiomioma" ; --*
lin leipzig_PN = variants {mkPN "Leipzig" ; mkPN "Lípsia" ; } ; --*
lin leishmaniasis_1_N = variants {mkN "azar" ; mkN "leishimaniose" ; mkN "leishmaniose" ; } ; --*
lin leisure_1_N = variants {mkN "lazer" ; mkN "ócio" ; mkN "time" ; } ; --*
lin leisure_2_N = variants {mkN "lazer" ; mkN "Lazer" ; } ; --*
lin leisured_A = variants {mkA "ocioso" ; mkA "prazeroso" ; } ; --*
lin leisurely_Adv = variants {mkAdv "Calmamente" ; mkAdv "leisure" ; } ; --*
lin leitmotiv_1_N = mkN "motivo" ; --*
lin lemma_1_N = mkN "lema" ; --*
lin lemma_3_N = mkN "lema" ; --*
lin lemming_N = variants {mkN "Lemingue" ; mkN "lêmingue" ; mkN "Lêmingue" ; } ; --*
lin lemon_1_N = mkN "limão" ; --*
lin lemon_2_N = variants {mkN "amarelo" ; mkN "limão" ; mkN "yellow" ; } ; --*
lin lemon_3_N = variants {mkN "limão" ; mkN "limon" ; mkN "tree" ; } ; --*
lin lemon_5_N = mkN "fureca" ; --*
lin lemonade_N = mkN "limonada" ; --*
lin lemur_N = variants {mkN "lémure" ; mkN "lêmure" ; } ; --*
lin lend_1_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "contribuir") ; } ; --*
lin lend_2_V2 = variants {mkV2 (mkV "emprestar") ; mkV2 (mkV "prestar") ; } ; --*
lin lend_3_V2 = mkV2 (mkV "dar") ; --*
lin lending_N = mkN "empréstimo" ; --*
lin length_2_N = mkN "duração" ; --*
lin length_3_N = variants {mkN "comprimento" ; mkN "extensão" ; mkN "longitude" ; } ; --*
lin length_4_N = mkN "distância" ; --*
lin lengthen_1_V2 = mkV2 (mkV "alongar") ; --*
lin lengthen_2_V = mkV "alongar" ; --*
lin lengthiness_1_N = variants {mkN "extensão" ; mkN "longitude" ; } ; --*
lin lengthiness_2_N = variants {mkN "continuação" ; mkN "prolongamento" ; } ; --*
lin lengthways_Adv = mkAdv "ao" ; --*
lin lengthwise_Adv = mkAdv "ao" ; --*
lin lengthy_A = variants {mkA "comprido" ; mkA "longo" ; mkA "prolixo" ; mkA "prolongado" ; } ; --*
lin lenience_2_N = mkN "indulgência" ; --*
lin lenience_3_N = mkN "leniência" ; --*
lin leniency_2_N = mkN "indulgência" ; --*
lin leniency_3_N = mkN "leniência" ; --*
lin lenient_1_A = mkA "indulgente" ; --*
lin leningrad_PN = variants {mkPN "Leningrado" ; mkPN "Petersburg" ; mkPN "Petersburgo" ; mkPN "Petrogrado" ; } ; --*
lin lenitive_N = mkN "lenitivo" ; --*
lin lens_1_N = variants {mkN "lente" ; mkN "Lentes" ; mkN "system" ; } ; --*
lin lens_4_N = variants {mkN "lens" ; mkN "lente" ; mkN "of" ; } ; --*
lin lentil_1_N = mkN "lentilha" ; --*
lin lentil_3_N = variants {mkN "culinaris" ; mkN "lentilha" ; mkN "plant" ; } ; --*
lin lent_N = variants {mkN "quaresma" ; mkN "Quaresma" ; } ; --*
lin lento_Adv = mkAdv "piano" ; --*
lin leo_2_PN = variants {mkPN "Constelação" ; mkPN "Leão" ; mkPN "Leo" ; mkPN "León" ; } ; --*
lin leo_3_PN = variants {mkPN "Leão" ; mkPN "the" ; } ; --*
lin leonard_PN = variants {mkPN "John" ; mkPN "Leonard" ; mkPN "Leonardo" ; } ; --*
lin leopard_2_N = variants {mkN "leopardo" ; mkN "pardus" ; } ; --*
lin leotard_N = variants {mkN "collant" ; mkN "malha" ; mkN "suit" ; } ; --*
lin leper_1_N = variants {mkN "leprosa" ; mkN "leproso" ; } ; --*
lin lepidolite_N = mkN "Lepidolite" ; --*
lin leprechaun_N = mkN "leprechaun" ; --*
lin leprosy_N = variants {mkN "disease" ; mkN "lepra" ; } ; --*
lin lepton_2_N = variants {mkN "lépton" ; mkN "Léptons" ; } ; --*
lin lesbian_1_N = variants {mkN "Lesbica" ; mkN "lésbica" ; mkN "woman" ; } ; --*
lin lesbian_A = mkA "lésbico" ; --*
lin lesbianism_N = variants {mkN "lesbianismo" ; mkN "safismo" ; } ; --*
lin lese_majesty_N = variants {mkN "majesty" ; mkN "traição" ; mkN "treason" ; } ; --*
lin lesion_1_N = mkN "lesão" ; --*
lin lesion_2_N = variants {mkN "ferida" ; mkN "Ferida" ; mkN "ferimento" ; mkN "ferimentos" ; mkN "lesão" ; mkN "mágoa" ; } ; --*
lin lesotho_PN = variants {mkPN "Lesoto" ; mkPN "of" ; } ; --*
lin less_3_A = mkA "menos" ; --*
lin lessen_1_V = variants {mkV "decrescer" ; mkV "desabar" ; mkV "diminuir" ; mkV "minguar" ; } ; --*
lin lessen_2_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "reduzir") ; } ; --*
lin lessen_3_V = variants {mkV "diminuir" ; mkV "minguar" ; } ; --*
lin lesser_2_A = mkA "menor" ; --*
lin lesson_1_N = variants {mkN "aula" ; mkN "lição" ; } ; --*
lin lesson_2_N = variants {mkN "example" ; mkN "exemplo" ; mkN "lesson" ; mkN "lição" ; } ; --*
lin lesson_3_N = variants {mkN "lição" ; mkN "moral" ; } ; --*
lin lesson_4_N = mkN "lição" ; --*
lin let_1_N = variants {mkN "Lashkar-e-Taiba" ; mkN "of" ; } ; --*
lin let_1_V2V = variants {mkV2V (mkV "deixar") ; mkV2V (mkV "permitir") ; mkV2V (mkV "possibilitar") ; } ; --*
lin let_2_V2V = mkV2V (mkV "deixar") ; --*
lin let_3_V2V = variants {mkV2V (mkV "consentir") ; mkV2V (mkV "deixar") ; mkV2V (mkV "permitir") ; } ; --*
lin let_4_V2V = mkV2V (mkV "tornar") ; --*
lin let_6_V2V = variants {mkV2V (mkV "alugar") ; mkV2V (mkV "arrendar") ; } ; --*
lin let_down_2_V2 = variants {mkV2 (mkV "decepcionar") ; mkV2 (mkV "desapontar") ; mkV2 (mkV "down") ; } ; --*
lin let_down_N = variants {mkN "deceção" ; mkN "decepção" ; mkN "desapontamento" ; } ; --*
lin lethal_A = variants {mkA "fatal" ; mkA "letal" ; mkA "mortal" ; } ; --*
lin lethargic_1_A = mkA "letárgico" ; --*
lin lethargy_1_N = mkN "letargia" ; --*
lin lethargy_2_N = variants {mkN "lassidão" ; mkN "letargia" ; } ; --*
lin lethargy_3_N = mkN "letargia" ; --*
lin let_in_1_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "in") ; } ; --*
lin let_in_2_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "in") ; } ; --*
lin let_off_V2 = variants {mkV2 (mkV "excusar") ; mkV2 (mkV "eximir") ; mkV2 (mkV "off") ; } ; --*
lin let_on_V = variants {mkV "away" ; mkV "descerrar" ; mkV "divulgar" ; mkV "on" ; mkV "out" ; mkV "revelar" ; } ; --*
lin let_out_1_V2 = variants {mkV2 (mkV "emitir") ; mkV2 (mkV "loose") ; mkV2 (mkV "out") ; mkV2 (mkV "soltar") ; } ; --*
lin letter_1_N = variants {mkN "carta" ; mkN "missiva" ; } ; --*
lin letter_2_N = variants {mkN "caractér" ; mkN "character" ; mkN "letra" ; mkN "of" ; } ; --*
lin letter_box_2_N = variants {mkN "box" ; mkN "caixa" ; } ; --*
lin letter_box_3_N = variants {mkN "box" ; mkN "caixa" ; } ; --*
lin lettered_A = variants {mkA "douto" ; mkA "erudito" ; mkA "instruído" ; mkA "sábio" ; } ; --*
lin lettering_N = mkN "inscrição" ; --*
lin letters_1_N = mkN "cartas" ; --*
lin lettuce_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin lettuce_2_N = mkN "alface" ; --*
lin lettuce_3_N = mkN "alface" ; --*
lin let_up_1_V = variants {mkV "abater" ; mkV "amainar" ; mkV "away" ; mkV "enfraquecer" ; mkV "off" ; mkV "up" ; } ; --*
lin let_up_2_V = variants {mkV "off" ; mkV "up" ; } ; --*
lin let_up_N = mkN "pausa" ; --*
lin leucine_N = mkN "leucina" ; --*
lin leucocyte_N = variants {mkN "blood" ; mkN "cell" ; mkN "corpuscle" ; mkN "Leucocito" ; mkN "leucócito" ; mkN "Leucócitos" ; } ; --*
lin leukaemia_1_N = variants {mkN "leucemia" ; mkN "of" ; } ; --*
lin leukocyte_N = variants {mkN "blood" ; mkN "cell" ; mkN "corpuscle" ; mkN "Leucocito" ; mkN "leucócito" ; mkN "Leucócitos" ; } ; --*
lin leukocytosis_1_N = mkN "leucocitose" ; --*
lin leukopenia_1_N = mkN "leucopenia" ; --*
lin leukorrhea_1_N = variants {mkN "Leucorreia" ; mkN "Leucorréia" ; } ; --*
lin levant_2_PN = mkPN "Levante" ; --*
lin levantine_A = mkA "levantino" ; --*
lin levee_3_N = mkN "dique" ; --*
lin level_1_A = mkA "plano" ; --*
lin level_1_N = mkN "grau" ; --*
lin level_1_V2 = mkV2 (mkV "direccionar") ; --*
lin level_2_N = variants {mkN "classe" ; mkN "nível" ; mkN "posto" ; } ; --*
lin level_2_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin level_3_N = variants {mkN "ápice" ; mkN "fase" ; mkN "grau" ; mkN "nível" ; } ; --*
lin level_3_V2 = variants {mkV2 (mkV "nivelar") ; mkV2 (mkV "out") ; } ; --*
lin level_4_A = mkA "nivelado" ; --*
lin level_4_V2 = mkV2 (mkV "fazer") ; --*
lin level_5_N = variants {mkN "level" ; mkN "nível" ; } ; --*
lin level_6_V = variants {mkV "igualar" ; mkV "off" ; } ; --*
lin level_7_N = mkN "estrato" ; --*
lin level_8_N = variants {mkN "andar" ; mkN "pavimento" ; mkN "piso" ; } ; --*
lin lever_1_N = variants {mkN "alavanca" ; mkN "pé-de-cabra" ; } ; --*
lin lever_2_N = mkN "alavanca" ; --*
lin leverage_3_N = mkN "alavancagem" ; --*
lin leveret_N = mkN "lebroto" ; --*
lin lever_V2 = variants {mkV2 (mkV "alavancar") ; mkV2 (mkV "arrombar") ; } ; --*
lin levitate_1_V2 = mkV2 (mkV "levitar") ; --*
lin levitate_2_V = variants {mkV "levitar" ; mkV "pairar" ; } ; --*
lin levitation_1_N = mkN "levitação" ; --*
lin lev_N = mkN "lev" ; --*
lin levorotary_1_A = mkA "levogiro" ; --*
lin levy_1_N = mkN "imposto" ; --*
lin levy_1_V2 = mkV2 (mkV "arrecadar") ; --*
lin levy_2_N = variants {mkN "came" ; mkN "en" ; } ; --*
lin levy_2_V2 = variants {mkV2 (mkV "aliciar") ; mkV2 (mkV "angariar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "recrutar") ; } ; --*
lin lewd_1_A = variants {mkA "impudico" ; mkA "obsceno" ; } ; --*
lin lewd_2_A = variants {mkA "devasso" ; mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; } ; --*
lin lewdness_N = variants {mkN "pulha" ; mkN "salacidade" ; } ; --*
lin lewis_1_PN = variants {mkPN "Jerry" ; mkPN "Lee" ; } ; --*
lin lewis_2_PN = variants {mkPN "Carl" ; mkPN "Carleton" ; mkPN "Lewis" ; } ; --*
lin lewis_4_PN = variants {mkPN "John" ; mkPN "L." ; mkPN "Llewelly" ; } ; --*
lin lewis_6_PN = variants {mkPN "Clive" ; mkPN "S." ; mkPN "Staples" ; } ; --*
lin lexeme_N = mkN "lexema" ; --*
lin lexical_1_A = mkA "lexical" ; --*
lin lexical_2_A = variants {mkA "lexical" ; mkA "léxico" ; } ; --*
lin lexicalization_1_N = mkN "lexicalização" ; --*
lin lexicalized_1_A = mkA "lexicalizado" ; --*
lin lexicography_N = mkN "lexicografia" ; --*
lin lexicology_N = mkN "lexicologia" ; --*
lin lexicon_1_N = variants {mkN "léxico" ; mkN "lexicon" ; mkN "vocabulário" ; } ; --*
lin lexicon_2_N = variants {mkN "array" ; mkN "Dicionario" ; mkN "dicionário" ; mkN "Dicionários" ; mkN "léxico" ; mkN "vocabulário" ; } ; --*
lin lexicostatistic_A = mkA "léxico-estatístico" ; --*
lin ley_N = variants {mkN "land" ; mkN "pastagens" ; mkN "pasto" ; mkN "prado" ; } ; --*
lin li_1_N = variants {mkN "lítio" ; mkN "Lítio" ; mkN "number" ; } ; --*
lin liabilities_N = mkN "obrigação" ; --*
lin liability_1_N = variants {mkN "responsabilidade" ; mkN "responsabilização" ; } ; --*
lin liability_2_N = variants {mkN "dívida" ; mkN "endividamento" ; mkN "obligation" ; mkN "obrigação" ; mkN "passivo" ; } ; --*
lin liable_1_A = variants {mkA "responsável" ; mkA "sujeito" ; } ; --*
lin liable_4_A = variants {mkA "capaz" ; mkA "passível" ; mkA "possível" ; mkA "sujeito" ; } ; --*
lin liaise_V = variants {mkV "interceder" ; mkV "mediar" ; } ; --*
lin liaison_1_N = mkN "intimidade" ; --*
lin liana_N = variants {mkN "cipó" ; mkN "liana" ; } ; --*
lin liar_N = variants {mkN "mentirosa" ; mkN "mentiroso" ; } ; --*
lin libation_3_N = mkN "libação" ; --*
lin libel_2_N = mkN "libelo" ; --*
lin libellous_1_A = variants {mkA "calunioso" ; mkA "difamatório" ; mkA "infamante" ; } ; --*
lin liberal_1_A = mkA "liberal" ; --*
lin liberal_2_A = mkA "liberal" ; --*
lin liberal_2_N = mkN "liberal" ; --*
lin liberal_3_A = mkA "liberal" ; --*
lin liberal_4_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin liberal_5_A = mkA "liberal" ; --*
lin liberalism_1_N = variants {mkN "liberalismo" ; mkN "Liberalismo" ; } ; --*
lin liberalism_2_N = mkN "liberalismo" ; --*
lin liberality_1_N = mkN "liberalidade" ; --*
lin liberality_2_N = mkN "liberalidade" ; --*
lin liberalization_1_N = mkN "alívio" ; --*
lin liberalize_2_V2 = mkV2 (mkV "liberalizar") ; --*
lin liberate_1_V2 = mkV2 (mkV "emancipar") ; --*
lin liberate_2_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "soltar") ; } ; --*
lin liberate_3_V2 = variants {mkV2 (mkV "free") ; mkV2 (mkV "liberar") ; } ; --*
lin liberate_4_V2 = variants {mkV2 (mkV "libertar") ; mkV2 (mkV "livrar") ; mkV2 (mkV "soltar") ; } ; --*
lin liberation_1_N = mkN "emancipação" ; --*
lin liberation_3_N = mkN "demissão" ; --*
lin liberian_A = mkA "liberiano" ; --*
lin liberia_PN = variants {mkPN "Libéria" ; mkPN "of" ; } ; --*
lin libertarian_1_N = mkN "libertário" ; --*
lin libertarian_2_N = mkN "libertário" ; --*
lin libertarianism_N = variants {mkN "libertarianismo" ; mkN "Libertarianismo" ; } ; --*
lin libertine_N = variants {mkN "depravado" ; mkN "libertino" ; } ; --*
lin liberty_1_N = variants {mkN "autonomia" ; mkN "liberalismo" ; } ; --*
lin liberty_2_N = mkN "liberdade" ; --*
lin liberty_3_N = mkN "liberdade" ; --*
lin libidinous_A = variants {mkA "devasso" ; mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; } ; --*
lin libido_N = mkN "libido" ; --*
lin libra_2_PN = variants {mkPN "Balança" ; mkPN "Constelação" ; mkPN "Libra" ; } ; --*
lin libra_3_PN = variants {mkPN "Balança" ; mkPN "Libra" ; mkPN "the" ; } ; --*
lin librarian_N = variants {mkN "bibliotecário" ; mkN "Bibliotecários" ; } ; --*
lin librarianship_N = mkN "biblioteconomia" ; --*
lin library_1_N = mkN "biblioteca" ; --*
lin library_2_N = mkN "biblioteca" ; --*
lin library_3_N = variants {mkN "biblioteca" ; mkN "Bibliotecas" ; mkN "library" ; } ; --*
lin library_4_N = variants {mkN "biblioteca" ; mkN "library" ; } ; --*
lin library_5_N = mkN "biblioteca" ; --*
lin libration_N = mkN "Libração" ; --*
lin librettist_N = mkN "libretista" ; --*
lin libretto_N = variants {mkN "guião" ; mkN "libreto" ; } ; --*
lin libyan_A = mkA "líbio" ; --*
lin libya_PN = variants {mkPN "Líbia" ; mkPN "People's" ; } ; --*
lin licence_1_N = mkN "licença" ; --*
lin licence_2_N = mkN "licença" ; --*
lin licence_3_N = variants {mkN "licença" ; mkN "licenciamentos" ; } ; --*
lin licence_4_N = variants {mkN "licença" ; mkN "permissão" ; } ; --*
lin licence_V2 = variants {mkV2 (mkV "autorizar") ; mkV2 (mkV "certificar") ; mkV2 (mkV "licenciar") ; } ; --*
lin licentious_A = variants {mkA "árdego" ; mkA "desenfreado" ; mkA "imoderado" ; } ; --*
lin licentiousness_1_N = mkN "licenciosidade" ; --*
lin licentiousness_2_N = variants {mkN "devassidão" ; mkN "dissolução" ; } ; --*
lin lichen_2_N = variants {mkN "líquen" ; mkN "líquenes" ; mkN "Líquenes" ; } ; --*
lin licit_1_A = mkA "lícito" ; --*
lin licit_2_A = variants {mkA "legítimo" ; mkA "lícito" ; } ; --*
lin lick_1_V2 = mkV2 (mkV "destruir") ; --*
lin lick_2_V2 = mkV2 (mkV "lamber") ; --*
lin lick_3_N = variants {mkN "murro" ; mkN "ponche" ; mkN "soco" ; } ; --*
lin lick_3_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resolver") ; } ; --*
lin lick_4_V2 = variants {mkV2 (mkV "lamber") ; mkV2 (mkV "up") ; } ; --*
lin licking_1_N = variants {mkN "derrota" ; mkN "perda" ; mkN "vencimento" ; } ; --*
lin licking_2_N = mkN "surra" ; --*
lin lid_1_N = mkN "pálpebra" ; --*
lin lid_2_N = mkN "tampa" ; --*
lin lid_3_N = variants {mkN "chapéu" ; mkN "sombreiro" ; } ; --*
lin lidless_3_A = mkA "insone" ; --*
lin lie_1_N = variants {mkN "falsidade" ; mkN "história" ; mkN "mentira" ; } ; --*
lin lie_1_V = mkV "jazer" ; --*
lin lie_1_VS = mkVS (mkV "jazer") ; --*
lin lie_2_V = variants {mkV "estar" ; mkV "jazer" ; } ; --*
lin lie_3_N = mkN "posição" ; --*
lin lie_3_V = variants {mkV "existir" ; mkV "in" ; } ; --*
lin lie_4_V = variants {mkV "estar" ; mkV "jazer" ; } ; --*
lin lie_5_V = mkV "mentir" ; --*
lin lie_6_V = variants {mkV "jazer" ; mkV "restar" ; } ; --*
lin lie_7_V = variants {mkV "deitar-se" ; mkV "down" ; mkV "jazer" ; } ; --*
lin liechtensteiner_A = mkA "liechtensteiniano" ; --*
lin liechtenstein_PN = variants {mkPN "Liechtenstein" ; mkPN "Listenstaine" ; mkPN "of" ; } ; --*
lin lied_N = variants {mkN "lied" ; mkN "Lied" ; } ; --*
lin lie_down_V = variants {mkV "deitar-se" ; mkV "down" ; mkV "jazer" ; } ; --*
lin liege_1_N = variants {mkN "subject" ; mkN "Vassalagem" ; mkN "vassalo" ; } ; --*
lin liege_2_N = variants {mkN "lord" ; mkN "vassalo" ; } ; --*
lin liegeman_N = variants {mkN "subject" ; mkN "Vassalagem" ; mkN "vassalo" ; } ; --*
lin liege_PN = variants {mkPN "Liége" ; mkPN "Liège" ; } ; --*
lin lien_2_N = variants {mkN "baço" ; mkN "esplim" ; } ; --*
lin lie_PN = variants {mkPN "Halvden" ; mkPN "Lie" ; mkPN "Trygve" ; } ; --*
lin lieu_N = mkN "posição" ; --*
lin lieutenant_1_N = mkN "tenente" ; --*
lin lieutenant_2_N = variants {mkN "lieutenant" ; mkN "tenente" ; } ; --*
lin lieutenant_3_N = variants {mkN "substituto" ; mkN "suplente" ; } ; --*
lin lieutenant_4_N = mkN "tenente" ; --*
lin lie_with_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin life_10_N = mkN "vida" ; --*
lin life_11_N = variants {mkN "vida" ; mkN "Vida" ; } ; --*
lin life_12_N = variants {mkN "biografia" ; mkN "history" ; mkN "story" ; } ; --*
lin life_13_N = mkN "vida" ; --*
lin life_14_N = variants {mkN "prisão" ; mkN "sentence" ; } ; --*
lin life_1_N = mkN "vida" ; --*
lin life_2_N = mkN "vida" ; --*
lin life_3_N = variants {mkN "existência" ; mkN "vida" ; } ; --*
lin life_4_N = variants {mkN "animação" ; mkN "vida" ; } ; --*
lin life_5_N = variants {mkN "duração" ; mkN "vida" ; } ; --*
lin life_6_N = mkN "vida" ; --*
lin life_7_N = mkN "vida" ; --*
lin life_8_N = mkN "vida" ; --*
lin life_9_N = variants {mkN "alma" ; mkN "vida" ; } ; --*
lin lifeblood_2_N = mkN "sangue" ; --*
lin lifeguard_N = mkN "salva-vidas" ; --*
lin life_jacket_N = variants {mkN "jacket" ; mkN "vest" ; } ; --*
lin lifeless_1_A = mkA "sem" ; --*
lin lifeless_2_A = mkA "sem" ; --*
lin lifeless_3_A = mkA "sem" ; --*
lin lifeless_4_A = mkA "sem" ; --*
lin lifelike_1_A = variants {mkA "gráfico" ; mkA "vivaz" ; } ; --*
lin lifelike_2_A = mkA "natural" ; --*
lin lifelong_A = variants {mkA "por" ; mkA "vitalício" ; } ; --*
lin life_saver_1_N = mkN "salva-vidas" ; --*
lin life_span_N = variants {mkN "duração" ; mkN "vida" ; } ; --*
lin lifestyle_1_N = variants {mkN "estilo" ; mkN "style" ; mkN "vivendi" ; } ; --*
lin lifetime_N = variants {mkN "duração" ; mkN "vida" ; } ; --*
lin lift_10_N = mkN "Transporte" ; --*
lin lift_10_V2 = mkV2 (mkV "elevar") ; --*
lin lift_11_N = mkN "carona" ; --*
lin lift_11_V2 = mkV2 (mkV "sacar") ; --*
lin lift_12_N = variants {mkN "alcar" ; mkN "elevação" ; mkN "levantamento" ; } ; --*
lin lift_12_V = mkV "surgir" ; --*
lin lift_14_V2 = mkV2 (mkV "plagiar") ; --*
lin lift_14_V = mkV "plagiar" ; --*
lin lift_15_V2 = mkV2 (mkV "roubar") ; --*
lin lift_1_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "elevar") ; mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin lift_22_V2 = mkV2 (mkV "sacar") ; --*
lin lift_2_V2 = mkV2 (mkV "levantar") ; --*
lin lift_3_N = mkN "levantamento" ; --*
lin lift_4_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin lift_5_N = variants {mkN "lift" ; mkN "teleférico" ; mkN "tow" ; } ; --*
lin lift_6_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin lift_7_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin lift_7_V = variants {mkV "afanar" ; mkV "furtar" ; mkV "larapiar" ; mkV "roubar" ; mkV "surrupiar" ; } ; --*
lin lift_8_N = variants {mkN "ascensor" ; mkN "elevador" ; } ; --*
lin lift_8_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "erguer") ; mkV2 (mkV "içar") ; mkV2 (mkV "levantar") ; } ; --*
lin lift_9_V2 = mkV2 (mkV "melhorar") ; --*
lin ligament_1_N = variants {mkN "ligamento" ; mkN "Ligamentos" ; } ; --*
lin ligament_2_N = mkN "ligamento" ; --*
lin ligand_N = mkN "ligante" ; --*
lin ligature_6_N = mkN "ligatura" ; --*
lin liger_N = mkN "ligre" ; --*
lin light_11_N = variants {mkN "centelha" ; mkN "chispa" ; mkN "faísca" ; } ; --*
lin light_13_A = mkA "leve" ; --*
lin light_13_N = variants {mkN "Light" ; mkN "luz" ; mkN "Within" ; } ; --*
lin light_15_N = variants {mkN "encendedor" ; mkN "isqueiro" ; } ; --*
lin light_19_A = mkA "banal" ; --*
lin light_1_A = mkA "leve" ; --*
lin light_1_N = variants {mkN "light" ; mkN "luz" ; mkN "radiation" ; } ; --*
lin light_1_V2 = variants {mkV2 (mkV "brilhar") ; mkV2 (mkV "iluminar") ; mkV2 (mkV "up") ; } ; --*
lin light_25_A = variants {mkA "devasso" ; mkA "promíscuo" ; } ; --*
lin light_2_A = mkA "claro" ; --*
lin light_2_N = variants {mkN "luz" ; mkN "source" ; } ; --*
lin light_2_V2 = variants {mkV2 (mkV "fumar") ; mkV2 (mkV "up") ; } ; --*
lin light_3_V = mkV "desembarcar" ; --*
lin light_4_N = variants {mkN "level" ; mkN "luminosidade" ; } ; --*
lin light_4_V2 = mkV2 (mkV "acender") ; --*
lin light_5_V = variants {mkV "cair" ; mkV "ficar" ; mkV "terminar" ; } ; --*
lin light_6_A = mkA "iluminado" ; --*
lin light_6_N = mkN "iluminação" ; --*
lin light_6_V2 = variants {mkV2 (mkV "apear") ; mkV2 (mkV "apear-se") ; mkV2 (mkV "desmontar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; } ; --*
lin light_6_V = variants {mkV "apear" ; mkV "apear-se" ; mkV "desmontar" ; mkV "down" ; mkV "off" ; } ; --*
lin light_7_N = mkN "luminosidade" ; --*
lin light_9_A = mkA "friável" ; --*
lin light_9_N = variants {mkN "iluminação" ; mkN "luz" ; } ; --*
lin lighten_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "up") ; } ; --*
lin lighten_3_V = variants {mkV "animar" ; mkV "up" ; } ; --*
lin lighten_4_V2 = variants {mkV2 (mkV "clarear") ; mkV2 (mkV "up") ; } ; --*
lin lighten_5_V = variants {mkV "iluminar" ; mkV "up" ; } ; --*
lin lighten_6_V2 = mkV2 (mkV "aliviar") ; --*
lin lightening_2_N = mkN "branqueamento" ; --*
lin lighten_up_V2 = variants {mkV2 (mkV "clarear") ; mkV2 (mkV "up") ; } ; --*
lin lighten_up_V = variants {mkV "iluminar" ; mkV "up" ; } ; --*
lin lighter_1_N = variants {mkN "encendedor" ; mkN "isqueiro" ; } ; --*
lin lighter_2_N = variants {mkN "encendedor" ; mkN "isqueiro" ; } ; --*
lin lighter_3_N = variants {mkN "barca" ; mkN "barcaça" ; mkN "bateira" ; } ; --*
lin light_headed_2_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin light_headedness_1_N = variants {mkN "tontura" ; mkN "Tontura" ; mkN "vertigem" ; } ; --*
lin light_hearted_1_A = mkA "alegre" ; --*
lin lighthouse_N = variants {mkN "farol" ; mkN "light" ; } ; --*
lin lighting_1_N = variants {mkN "iluminação" ; mkN "luz" ; } ; --*
lin lighting_4_N = variants {mkN "ignição" ; mkN "inflamação" ; mkN "Inflamações" ; } ; --*
lin light_minded_A = mkA "frívolo" ; --*
lin lightness_1_N = variants {mkN "euforia" ; mkN "spirits" ; } ; --*
lin lightness_2_N = variants {mkN "leveza" ; mkN "microgravidade" ; } ; --*
lin lightness_3_N = mkN "agilidade" ; --*
lin lightness_5_N = mkN "luminosidade" ; --*
lin lightning_1_N = variants {mkN "corisco" ; mkN "raio" ; mkN "relâmpago" ; } ; --*
lin lightning_2_N = variants {mkN "raio" ; mkN "relâmpago" ; } ; --*
lin lightning_conductor_N = variants {mkN "conductor" ; mkN "rod" ; } ; --*
lin lightning_rod_2_N = variants {mkN "conductor" ; mkN "rod" ; } ; --*
lin lightsome_2_A = mkA "alegre" ; --*
lin lightsomeness_2_N = mkN "agilidade" ; --*
lin light_up_1_V = mkV "up" ; --*
lin light_up_2_V2 = variants {mkV2 (mkV "brilhar") ; mkV2 (mkV "iluminar") ; mkV2 (mkV "up") ; } ; --*
lin light_up_3_V = variants {mkV "clarear" ; mkV "up" ; } ; --*
lin light_up_4_V = mkV "up" ; --*
lin light_up_5_V2 = variants {mkV2 (mkV "fumar") ; mkV2 (mkV "up") ; } ; --*
lin lightweight_2_N = mkN "metido" ; --*
lin lightwood_N = variants {mkN "Acacia" ; mkN "melanoxylon" ; } ; --*
lin lignin_N = mkN "lignina" ; --*
lin lignite_N = variants {mkN "coal" ; mkN "Lignito" ; } ; --*
lin ligule_N = mkN "lígula" ; --*
lin likable_1_A = mkA "atractivo" ; --*
lin like_1_A = mkA "semelhante" ; --*
lin like_1_N = variants {mkN "like" ; mkN "likes" ; mkN "tipo" ; } ; --*
lin like_1_VV = variants {mkVV (mkV "desejar") ; mkVV (mkV "esperar") ; mkVV (mkV "querer") ; } ; --*
lin like_2_A = mkA "mesmo" ; --*
lin like_2_N = variants {mkN "classe" ; mkN "tipo" ; } ; --*
lin like_2_V2 = mkV2 (mkV "gostar") ; --*
lin like_2_VV = mkVV (mkV "gostar") ; --*
lin like_3_A = variants {mkA "parecido" ; mkA "semelhante" ; mkA "similar" ; } ; --*
lin like_3_V2 = mkV2 (mkV "gostar") ; --*
lin like_4_A = variants {mkA "comparável" ; mkA "correspondente" ; mkA "equivalente" ; } ; --*
lin like_4_V2 = variants {mkV2 (mkV "apreciar") ; mkV2 (mkV "gostar") ; } ; --*
lin like_5_V2 = mkV2 (mkV "querer") ; --*
lin likeable_1_A = mkA "atractivo" ; --*
lin likelihood_N = mkN "probabilidade" ; --*
lin likely_1_A = mkA "provável" ; --*
lin likely_2_A = mkA "provável" ; --*
lin likely_3_A = mkA "potencial" ; --*
lin likeness_1_N = variants {mkN "semelhança" ; mkN "similardidade" ; mkN "similitude" ; } ; --*
lin likeness_2_N = mkN "semelhança" ; --*
lin liken_V2 = mkV2 (mkV "equiparar") ; --*
lin likewise_1_Adv = variants {mkAdv "igualmente" ; mkAdv "similarmente" ; } ; --*
lin likewise_2_Adv = variants {mkAdv "ainda" ; mkAdv "idem" ; mkAdv "outrossim" ; mkAdv "também" ; mkAdv "well" ; } ; --*
lin likewise_3_Adv = mkAdv "igual" ; --*
lin liking_N = mkN "afeição" ; --*
lin lilac_N = mkN "lilás" ; --*
lin lille_PN = mkPN "Lille" ; --*
lin lilliputian_2_A = variants {mkA "diminuto" ; mkA "minúsculo" ; mkA "nanico" ; mkA "pequeno" ; } ; --*
lin lilliputian_3_A = variants {mkA "insignificante" ; mkA "pequeno" ; mkA "trivial" ; } ; --*
lin lily_N = variants {mkN "açucena" ; mkN "lírio" ; } ; --*
lin lily_PN = variants {mkPN "açucena" ; mkPN "lírio" ; } ; --*
lin lima_PN = variants {mkPN "Lima" ; mkPN "of" ; } ; --*
lin limb_1_N = variants {mkN "membro" ; mkN "perna" ; } ; --*
lin limb_6_N = mkN "braço" ; --*
lin limbo_1_N = mkN "esquecimento" ; --*
lin limbus_N = mkN "limbo" ; --*
lin lime_1_N = variants {mkN "hidróxido" ; mkN "hydrate" ; mkN "hydroxide" ; mkN "lime" ; } ; --*
lin lime_2_N = variants {mkN "cal" ; mkN "lime" ; mkN "oxide" ; } ; --*
lin lime_2_V2 = mkV2 (mkV "caiar") ; --*
lin lime_4_N = variants {mkN "aurantifolia" ; mkN "limeira" ; mkN "tree" ; } ; --*
lin lime_5_N = variants {mkN "til" ; mkN "tília" ; mkN "tree" ; } ; --*
lin limelight_1_N = variants {mkN "centro" ; mkN "eye" ; } ; --*
lin limelight_2_N = variants {mkN "light" ; mkN "Luminária" ; mkN "notoriedade" ; } ; --*
lin limerick_PN = mkPN "Limerick" ; --*
lin limestone_N = mkN "calcário" ; --*
lin lime_tree_1_N = variants {mkN "aurantifolia" ; mkN "limeira" ; mkN "tree" ; } ; --*
lin lime_tree_2_N = variants {mkN "til" ; mkN "tília" ; mkN "tree" ; } ; --*
lin limey_N = variants {mkN "Bull" ; mkN "John" ; } ; --*
lin limit_1_N = variants {mkN "fronteira" ; mkN "limitação" ; mkN "limite" ; } ; --*
lin limit_1_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin limit_2_N = variants {mkN "ad" ; mkN "point" ; mkN "ponto" ; } ; --*
lin limit_2_V2 = variants {mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin limit_3_N = mkN "limite" ; --*
lin limit_3_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "especificar") ; } ; --*
lin limit_4_N = variants {mkN "fronteira" ; mkN "limite" ; mkN "line" ; } ; --*
lin limit_5_N = variants {mkN "of" ; mkN "point" ; mkN "ponto" ; } ; --*
lin limit_6_N = variants {mkN "limitação" ; mkN "limite" ; } ; --*
lin limitation_1_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin limitation_2_N = mkN "limitação" ; --*
lin limitation_3_N = variants {mkN "limitação" ; mkN "limite" ; } ; --*
lin limitation_4_N = mkN "limitação" ; --*
lin limitation_5_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin limited_1_A = mkA "Limitado" ; --*
lin limitless_1_A = mkA "sem" ; --*
lin limitless_3_A = variants {mkA "ilimitado" ; mkA "infinito" ; } ; --*
lin limn_1_V2 = mkV2 (mkV "delinear") ; --*
lin limn_2_V2 = mkV2 (mkV "representar") ; --*
lin limnology_N = mkN "limnologia" ; --*
lin limonene_N = mkN "limoneno" ; --*
lin limonite_N = mkN "Limonite" ; --*
lin limousine_N = variants {mkN "Limusina" ; mkN "limusine" ; } ; --*
lin limp_1_V = variants {mkV "coxear" ; mkV "mancar" ; } ; --*
lin limp_2_A = mkA "capenga" ; --*
lin limp_2_V = mkV "capengar" ; --*
lin limpet_1_N = mkN "lapa" ; --*
lin limpet_2_N = mkN "Docoglossa" ; --*
lin limpid_2_A = variants {mkA "clear" ; mkA "límpido" ; mkA "transparente" ; } ; --*
lin limpid_3_A = variants {mkA "clear" ; mkA "límpido" ; } ; --*
lin limpidity_1_N = variants {mkN "lucidez" ; mkN "transparência" ; } ; --*
lin linchpin_1_N = mkN "ponto" ; --*
lin lincoln_1_PN = variants {mkPN "Abraham" ; mkPN "Lincoln" ; } ; --*
lin lincoln_2_PN = variants {mkPN "Lincoln" ; mkPN "of" ; } ; --*
lin lincolnshire_PN = mkPN "Lincolnshire" ; --*
lin lindane_N = mkN "Lindano" ; --*
lin linden_1_N = mkN "tilia" ; --*
lin linden_2_N = variants {mkN "til" ; mkN "tília" ; mkN "tree" ; } ; --*
lin linden_tree_N = variants {mkN "til" ; mkN "tília" ; mkN "tree" ; } ; --*
lin line_10_N = mkN "curso" ; --*
lin line_11_N = mkN "fronteira" ; --*
lin line_12_N = variants {mkN "ruga" ; mkN "sulco" ; } ; --*
lin line_13_N = variants {mkN "oleoduto" ; mkN "Óleoduto" ; } ; --*
lin line_14_N = variants {mkN "estrada" ; mkN "line" ; } ; --*
lin line_15_N = variants {mkN "circuit" ; mkN "line" ; mkN "linha" ; } ; --*
lin line_17_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin line_18_N = variants {mkN "corda" ; mkN "fio" ; mkN "linha" ; } ; --*
lin line_19_N = variants {mkN "função" ; mkN "lugar" ; mkN "ocupação" ; mkN "of" ; mkN "ofício" ; mkN "profissão" ; mkN "serviço" ; mkN "trabalho" ; } ; --*
lin line_1_N = mkN "bicha" ; --*
lin line_1_V2 = variants {mkV2 (mkV "along") ; mkV2 (mkV "enfileirar") ; } ; --*
lin line_20_N = variants {mkN "linha" ; mkN "risco" ; mkN "traço" ; } ; --*
lin line_21_N = variants {mkN "canal" ; mkN "channel" ; } ; --*
lin line_26_N = variants {mkN "line" ; mkN "melodia" ; mkN "phrase" ; mkN "toada" ; } ; --*
lin line_28_N = variants {mkN "bilhete" ; mkN "letter" ; mkN "nota" ; } ; --*
lin line_29_N = variants {mkN "demarcaçao" ; mkN "demarcação" ; mkN "line" ; } ; --*
lin line_30_N = variants {mkN "line" ; mkN "linha" ; } ; --*
lin line_3_N = variants {mkN "bicha" ; mkN "fila" ; mkN "linha" ; } ; --*
lin line_3_V2 = variants {mkV2 (mkV "delinear") ; mkV2 (mkV "traçar") ; } ; --*
lin line_4_N = mkN "reta" ; --*
lin line_4_V2 = mkV2 (mkV "enrugar") ; --*
lin line_5_N = variants {mkN "linha" ; mkN "melodia" ; } ; --*
lin line_8_N = variants {mkN "argument" ; mkN "argumentação" ; mkN "of" ; mkN "raciocínio" ; } ; --*
lin line_9_N = variants {mkN "cabos" ; mkN "line" ; mkN "Linha" ; mkN "linhas" ; } ; --*
lin lineage_1_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin lineage_2_N = variants {mkN "descendência" ; mkN "linhagem" ; mkN "of" ; } ; --*
lin lineage_5_N = variants {mkN "ascendência" ; mkN "origem" ; } ; --*
lin lineament_1_N = mkN "qualidade" ; --*
lin lineament_2_N = mkN "traço" ; --*
lin linear_2_A = mkA "unidimensional" ; --*
lin linear_3_A = mkA "analógico" ; --*
lin lineation_1_N = variants {mkN "borda" ; mkN "contorno" ; } ; --*
lin linebacker_2_N = variants {mkN "backer" ; mkN "linebacker" ; } ; --*
lin linelike_A = mkA "linear" ; --*
lin lineman_3_N = mkN "electricista" ; --*
lin linen_1_N = variants {mkN "linho" ; mkN "tecido" ; } ; --*
lin linen_3_N = mkN "roupa" ; --*
lin liner_4_N = variants {mkN "liner" ; mkN "transatlântico" ; } ; --*
lin line_shooter_N = mkN "pimpão" ; --*
lin linesman_2_N = mkN "electricista" ; --*
lin line_up_1_N = variants {mkN "ordem" ; mkN "order" ; } ; --*
lin line_up_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "hold") ; mkV2 (mkV "up") ; } ; --*
lin line_up_3_V = variants {mkV "enfileirar" ; mkV "up" ; } ; --*
lin line_up_4_V2 = variants {mkV2 (mkV "alinhar") ; mkV2 (mkV "up") ; } ; --*
lin line_V = variants {mkV "delinear" ; mkV "traçar" ; } ; --*
lin linger_1_V = variants {mkV "ficar" ; mkV "permanecer" ; } ; --*
lin linger_2_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin linger_3_V = variants {mkV "demorar" ; mkV "tardar" ; } ; --*
lin linger_5_V = mkV "voltear" ; --*
lin lingerie_N = variants {mkN "apparel" ; mkN "camisola" ; mkN "lingerie" ; } ; --*
lin lingonberry_1_N = variants {mkN "cranberry" ; mkN "Vaccinium" ; mkN "vitis-idaea" ; } ; --*
lin lingo_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin lingua_franca_N = variants {mkN "franca" ; mkN "lingua" ; mkN "Lingua" ; } ; --*
lin lingual_1_A = variants {mkA "linguístico" ; mkA "lingüístico" ; } ; --*
lin linguine_1_N = mkN "Linguine" ; --*
lin linguist_1_N = variants {mkN "linguista" ; mkN "scientist" ; } ; --*
lin linguist_2_N = mkN "poliglota" ; --*
lin linguistic_1_A = variants {mkA "linguístico" ; mkA "lingüístico" ; } ; --*
lin linguistic_2_A = variants {mkA "linguístico" ; mkA "lingüístico" ; } ; --*
lin linguistics_1_N = variants {mkN "Linguistica" ; mkN "linguística" ; mkN "Lingüistica" ; mkN "lingüística" ; mkN "Lingüística" ; } ; --*
lin linguistics_2_N = variants {mkN "filologia" ; mkN "Filologia" ; mkN "linguística" ; mkN "lingüística" ; } ; --*
lin link_1_N = mkN "nexo" ; --*
lin link_1_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "in") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "up") ; } ; --*
lin link_2_N = variants {mkN "agente" ; mkN "enlace" ; mkN "liame" ; mkN "ligação" ; mkN "vínculo" ; } ; --*
lin link_2_V2 = variants {mkV2 (mkV "juntar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "unir") ; mkV2 (mkV "up") ; } ; --*
lin link_3_N = variants {mkN "conexão" ; mkN "ligação" ; } ; --*
lin link_3_V = variants {mkV "conectar" ; mkV "juntar" ; mkV "ligar" ; mkV "unir" ; mkV "up" ; } ; --*
lin link_4_N = mkN "ligação" ; --*
lin link_4_V2 = variants {mkV2 (mkV "cangar") ; mkV2 (mkV "estar") ; mkV2 (mkV "jungir") ; } ; --*
lin link_5_N = mkN "elo" ; --*
lin link_6_N = variants {mkN "ligação" ; mkN "link" ; } ; --*
lin link_8_N = variants {mkN "link" ; mkN "parceria" ; } ; --*
lin linkage_1_N = mkN "ligação" ; --*
lin link_up_2_V2 = variants {mkV2 (mkV "juntar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "unir") ; mkV2 (mkV "up") ; } ; --*
lin link_up_3_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "in") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "up") ; } ; --*
lin link_up_N = variants {mkN "agente" ; mkN "enlace" ; mkN "liame" ; mkN "ligação" ; mkN "vínculo" ; } ; --*
lin linoleum_N = mkN "linóleo" ; --*
lin lino_N = mkN "linóleo" ; --*
lin linotype_N = variants {mkN "Linotipo" ; mkN "machine" ; } ; --*
lin linseed_N = mkN "linhaça" ; --*
lin lintel_N = variants {mkN "lintel" ; mkN "Lintel" ; } ; --*
lin linz_PN = mkPN "Linz" ; --*
lin lion_1_N = variants {mkN "leão" ; mkN "leo" ; mkN "of" ; } ; --*
lin lion_4_N = variants {mkN "Leão" ; mkN "the" ; } ; --*
lin lioness_N = mkN "leoa" ; --*
lin lionfish_N = variants {mkN "Peixe" ; mkN "Peixe-leão" ; } ; --*
lin lionize_1_V2 = mkV2 (mkV "celebrar") ; --*
lin lip_1_N = variants {mkN "beiço" ; mkN "lábio" ; } ; --*
lin lip_4_N = mkN "rebordo" ; --*
lin liparis_2_N = mkN "Liparis" ; --*
lin lipase_N = variants {mkN "lipase" ; mkN "Lípase" ; } ; --*
lin lipid_1_N = variants {mkN "gordura" ; mkN "lipídio" ; mkN "Lipido" ; mkN "Lípido" ; mkN "lípidos" ; mkN "Lípidos" ; } ; --*
lin lipogram_N = mkN "Lipograma" ; --*
lin lipoma_N = variants {mkN "lipoma" ; mkN "tumor" ; } ; --*
lin lipophilic_A = mkA "lipófilo" ; --*
lin lipoprotein_N = variants {mkN "lipoproteína" ; mkN "Lipoproteína" ; mkN "Lipoproteínas" ; } ; --*
lin liposome_N = mkN "lipossoma" ; --*
lin liposuction_N = variants {mkN "lipectomy" ; mkN "Lipoaspiração" ; } ; --*
lin lip_read_1_V2 = mkV2 (mkV "fazer") ; --*
lin lip_reading_N = mkN "leitura" ; --*
lin lipstick_N = variants {mkN "batom" ; mkN "rouge" ; } ; --*
lin liquefy_2_V2 = mkV2 (mkV "liquidificar") ; --*
lin liquefy_3_V = variants {mkV "liquefazer" ; mkV "liquidificar" ; } ; --*
lin liqueur_N = variants {mkN "licor" ; mkN "Licores" ; } ; --*
lin liquid_1_A = mkA "líquido" ; --*
lin liquid_1_N = mkN "líqüido" ; --*
lin liquid_2_N = variants {mkN "estado" ; mkN "liquidez" ; mkN "líquido" ; mkN "state" ; } ; --*
lin liquid_3_N = variants {mkN "líquido" ; mkN "líqüido" ; } ; --*
lin liquid_6_A = variants {mkA "fluente" ; mkA "fluido" ; } ; --*
lin liquid_7_A = mkA "líquido" ; --*
lin liquidate_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "liquidar") ; mkV2 (mkV "neutralizar") ; mkV2 (mkV "off") ; } ; --*
lin liquidate_4_V2 = mkV2 (mkV "liquidar") ; --*
lin liquidation_2_N = mkN "exterminação" ; --*
lin liquidator_1_N = variants {mkN "assassina" ; mkN "assassino" ; mkN "homicida" ; } ; --*
lin liquidity_1_N = variants {mkN "estado" ; mkN "liquidez" ; mkN "líquido" ; mkN "state" ; } ; --*
lin liquidity_2_N = variants {mkN "fluidez" ; mkN "liquidez" ; } ; --*
lin liquidity_3_N = mkN "liquidez" ; --*
lin liquidize_2_V2 = mkV2 (mkV "liquidificar") ; --*
lin liquidizer_1_N = mkN "liquidificador" ; --*
lin liquor_1_N = variants {mkN "álcool" ; mkN "Barleycorn" ; mkN "drink" ; mkN "liquor" ; } ; --*
lin liquorice_1_N = variants {mkN "Alcaçuz" ; mkN "glabra" ; } ; --*
lin lira_1_N = variants {mkN "lira" ; mkN "Lira" ; } ; --*
lin lira_2_N = mkN "lira" ; --*
lin lira_3_N = mkN "lira" ; --*
lin lisbon_PN = variants {mkPN "Distrito" ; mkPN "Lisboa" ; mkPN "of" ; } ; --*
lin lisinopril_N = mkN "Lisinopril" ; --*
lin lisp_1_N = variants {mkN "cicie" ; mkN "sigmatismo" ; } ; --*
lin lisp_2_N = variants {mkN "language" ; mkN "LISP" ; } ; --*
lin lisp_V2 = variants {mkV2 (mkV "cecear") ; mkV2 (mkV "ciciar") ; } ; --*
lin lisp_V = variants {mkV "cecear" ; mkV "ciciar" ; } ; --*
lin list_1_N = variants {mkN "lista" ; mkN "listagem" ; } ; --*
lin list_1_V2 = mkV2 (mkV "listar") ; --*
lin list_2_N = mkN "inclinação" ; --*
lin list_2_V2 = variants {mkV2 (mkV "incluir") ; mkV2 (mkV "listar") ; } ; --*
lin list_5_V2 = variants {mkV2 (mkV "enumerar") ; mkV2 (mkV "listar") ; mkV2 (mkV "numerar") ; } ; --*
lin listenerFem_N = variants {mkN "aluno" ; mkN "auditor" ; mkN "ouvinte" ; } ; --*
lin listenerMasc_N = variants {mkN "aluno" ; mkN "auditor" ; mkN "ouvinte" ; } ; --*
lin listen_in_2_V = variants {mkV "grampear" ; mkV "in" ; } ; --*
lin listening_N = variants {mkN "dar" ; mkN "escuta" ; } ; --*
lin listen_to_1_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "escutar") ; mkV2 (mkV "ouvir") ; } ; --*
lin listen_to_2_V2 = variants {mkV2 (mkV "escutar") ; mkV2 (mkV "heed") ; } ; --*
lin listen_V = variants {mkV "escutar" ; mkV "obedecer" ; } ; --*
lin listeriosis_N = variants {mkN "listeriose" ; mkN "meningitis" ; } ; --*
lin listing_1_N = variants {mkN "lista" ; mkN "listagem" ; } ; --*
lin listless_1_A = variants {mkA "apático" ; mkA "indiferente" ; mkA "lânguido" ; } ; --*
lin listless_2_A = mkA "deprimido" ; --*
lin litany_1_N = mkN "ladainha" ; --*
lin litany_2_N = mkN "litania" ; --*
lin literacy_N = variants {mkN "alfabetismo" ; mkN "alfabetização" ; } ; --*
lin literal_1_A = variants {mkA "autêntico" ; mkA "genuíno" ; mkA "literal" ; mkA "verdadeiro" ; } ; --*
lin literal_2_A = variants {mkA "literal" ; mkA "textual" ; } ; --*
lin literal_3_A = variants {mkA "literal" ; mkA "textual" ; } ; --*
lin literal_N = variants {mkN "erro" ; mkN "Erro" ; mkN "error" ; } ; --*
lin literary_1_A = mkA "literário" ; --*
lin literary_2_A = mkA "literário" ; --*
lin literary_3_A = mkA "literário" ; --*
lin literate_1_A = variants {mkA "alfabetizado" ; mkA "letrado" ; } ; --*
lin literature_1_N = mkN "literatura" ; --*
lin literature_2_N = mkN "literatura" ; --*
lin literature_3_N = mkN "literatura" ; --*
lin literature_4_N = mkN "literatura" ; --*
lin lithium_N = variants {mkN "lítio" ; mkN "Lítio" ; mkN "number" ; } ; --*
lin lithography_1_N = mkN "litografia" ; --*
lin lithography_2_N = mkN "litografia" ; --*
lin lithophyte_N = variants {mkN "litófita" ; mkN "plant" ; } ; --*
lin lithosphere_N = variants {mkN "geosfera" ; mkN "Geosfera" ; mkN "litosfera" ; } ; --*
lin litigant_N = mkN "litigante" ; --*
lin litigate_2_V2 = variants {mkV2 (mkV "acionar") ; mkV2 (mkV "ajuizar") ; mkV2 (mkV "litigar") ; } ; --*
lin litigation_N = variants {mkN "litígio" ; mkN "proceeding" ; } ; --*
lin litotes_N = mkN "litotes" ; --*
lin litre_1_N = variants {mkN "decimeter" ; mkN "decimetre" ; mkN "l" ; mkN "litro" ; } ; --*
lin litter_1_N = variants {mkN "lixos" ; mkN "ninhada" ; } ; --*
lin litter_1_V2 = variants {mkV2 (mkV "bagunçar") ; mkV2 (mkV "sujar") ; } ; --*
lin litter_2_V2 = mkV2 (mkV "sujar") ; --*
lin litter_2_V = mkV "sujar" ; --*
lin litter_3_N = variants {mkN "liteira" ; mkN "maca" ; } ; --*
lin litter_3_V2 = mkV2 (mkV "parir") ; --*
lin litter_3_V = mkV "parir" ; --*
lin litter_4_N = variants {mkN "material" ; mkN "Objetos" ; } ; --*
lin little_1_A = mkA "pequeno" ; --*
lin little_3_A = mkA "pequeno" ; --*
lin little_4_A = variants {mkA "insignificante" ; mkA "pequeno" ; mkA "trivial" ; } ; --*
lin little_5_A = variants {mkA "baixo" ; mkA "manso" ; } ; --*
lin little_6_A = mkA "baixo" ; --*
lin littoral_1_N = variants {mkN "litoral" ; mkN "zone" ; } ; --*
lin littoral_A = mkA "litoral" ; --*
lin liturgy_1_N = variants {mkN "Eucharist" ; mkN "liturgia" ; mkN "Liturgia" ; mkN "liturgy" ; mkN "of" ; mkN "Sacrament" ; mkN "Supper" ; } ; --*
lin liturgy_2_N = mkN "liturgia" ; --*
lin livable_A = mkA "habitável" ; --*
lin live_1_A = mkA "ao" ; --*
lin live_1_V = variants {mkV "habitar" ; mkV "morar" ; mkV "povoar" ; mkV "viver" ; } ; --*
lin live_2_V = mkV "viver" ; --*
lin live_3_A = mkA "vivo" ; --*
lin live_3_V = variants {mkV "on" ; mkV "out" ; mkV "perseverar" ; mkV "resistir" ; mkV "sobreviver" ; mkV "up" ; } ; --*
lin live_4_V = variants {mkV "haver" ; mkV "sobreviver" ; mkV "subsistir" ; } ; --*
lin live_6_A = mkA "elástico" ; --*
lin live_6_V = variants {mkV "conhecer" ; mkV "experimentar" ; } ; --*
lin liveable_A = mkA "habitável" ; --*
lin live_it_up_V2 = mkV2 (mkV "it") ; --*
lin livelihood_N = variants {mkN "and" ; mkN "manutenção" ; mkN "pão" ; } ; --*
lin liveliness_1_N = mkN "animação" ; --*
lin liveliness_2_N = variants {mkN "alma" ; mkN "vida" ; } ; --*
lin lively_1_A = mkA "vívido" ; --*
lin lively_4_A = mkA "elástico" ; --*
lin lively_5_A = mkA "vivo" ; --*
lin lively_6_A = variants {mkA "of" ; mkA "vital" ; } ; --*
lin liven_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "envigorar") ; mkV2 (mkV "up") ; } ; --*
lin liver_1_N = mkN "fígado" ; --*
lin liver_2_N = mkN "fígado" ; --*
lin liverpool_PN = mkPN "Liverpool" ; --*
lin liverpudlian_A = mkA "liverpuldiano" ; --*
lin liverwort_N = variants {mkN "hepática" ; mkN "hepáticas" ; mkN "Marchantiophyta" ; } ; --*
lin livery_1_N = variants {mkN "libré" ; mkN "Libré" ; } ; --*
lin livestock_N = variants {mkN "animal" ; mkN "gado" ; mkN "pecuária" ; } ; --*
lin live_together_V = variants {mkV "coabitar" ; mkV "together" ; mkV "up" ; } ; --*
lin live_up_to_V2 = variants {mkV2 (mkV "cumprir") ; mkV2 (mkV "realizar") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "up") ; } ; --*
lin live_with_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "engolir") ; mkV2 (mkV "with") ; } ; --*
lin livid_2_A = mkA "lívido" ; --*
lin livid_3_A = mkA "lívido" ; --*
lin lividity_2_N = mkN "palidez" ; --*
lin lividness_N = mkN "palidez" ; --*
lin living_1_A = mkA "viva" ; --*
lin living_1_N = mkN "vida" ; --*
lin living_2_A = variants {mkA "vivente" ; mkA "vivo" ; } ; --*
lin living_3_N = variants {mkN "animação" ; mkN "vida" ; } ; --*
lin living_4_A = mkA "vivente" ; --*
lin living_4_N = variants {mkN "and" ; mkN "manutenção" ; mkN "pão" ; } ; --*
lin living_room_N = variants {mkN "room" ; mkN "sala" ; mkN "salão" ; } ; --*
lin living_space_N = variants {mkN "espaço" ; mkN "space" ; } ; --*
lin lizard_1_N = variants {mkN "escamado" ; mkN "lagartixa" ; mkN "lagarto" ; mkN "lagartos" ; mkN "Lagartos" ; mkN "Sauria" ; } ; --*
lin ljubljana_PN = mkPN "Liubliana" ; --*
lin llama_N = variants {mkN "lhama" ; mkN "lume" ; } ; --*
lin load_1_N = mkN "carga" ; --*
lin load_1_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "up") ; } ; --*
lin load_2_N = variants {mkN "carga" ; mkN "load" ; } ; --*
lin load_3_N = mkN "carga" ; --*
lin load_4_V2 = mkV2 (mkV "carregar") ; --*
lin load_5_V2 = variants {mkV2 (mkV "adulterar") ; mkV2 (mkV "aviltar") ; mkV2 (mkV "diluir") ; } ; --*
lin load_6_N = variants {mkN "carga" ; mkN "fardo" ; mkN "preocupação" ; } ; --*
lin load_7_N = variants {mkN "filão" ; mkN "veio" ; mkN "Veio" ; } ; --*
lin load_8_N = variants {mkN "ogiva" ; mkN "Ogiva" ; } ; --*
lin loader_1_N = variants {mkN "carregador" ; mkN "estivador" ; mkN "worker" ; } ; --*
lin loading_1_N = mkN "carga" ; --*
lin loading_2_N = variants {mkN "carga" ; mkN "load" ; } ; --*
lin loading_4_N = mkN "carga" ; --*
lin loadstone_N = mkN "ímã" ; --*
lin loaf_1_N = variants {mkN "of" ; mkN "pão" ; } ; --*
lin loaf_2_N = mkN "pão" ; --*
lin loaf_2_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "around") ; mkV2 (mkV "ficar") ; mkV2 (mkV "permanecer") ; } ; --*
lin loaf_2_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin loafer_1_N = variants {mkN "vadio" ; mkN "vagabundo" ; } ; --*
lin loamy_A = mkA "margoso" ; --*
lin loan_1_N = variants {mkN "crédito" ; mkN "empréstimo" ; } ; --*
lin loan_2_N = variants {mkN "empréstimo" ; mkN "Empréstimo" ; mkN "palavra" ; } ; --*
lin loan_office_1_N = variants {mkN "casa" ; mkN "office" ; mkN "shop" ; } ; --*
lin loan_V2 = variants {mkV2 (mkV "emprestar") ; mkV2 (mkV "prestar") ; } ; --*
lin loanword_N = variants {mkN "empréstimo" ; mkN "Empréstimo" ; mkN "palavra" ; } ; --*
lin loath_1_A = mkA "contrafeito" ; --*
lin loath_2_A = mkA "avesso" ; --*
lin loathe_V2 = variants {mkV2 (mkV "abominar") ; mkV2 (mkV "detestar") ; mkV2 (mkV "execrar") ; mkV2 (mkV "odiar") ; } ; --*
lin loathing_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "detestação" ; mkN "execração" ; mkN "horror" ; mkN "ódio" ; mkN "repugnância" ; mkN "repulsa" ; mkN "repulsão" ; } ; --*
lin loathly_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin loathsome_1_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin loathsome_2_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin lobby_1_N = variants {mkN "antecâmara" ; mkN "antessala" ; mkN "átrio" ; mkN "hall" ; mkN "saguão" ; mkN "sala" ; mkN "vestíbulo" ; } ; --*
lin lobby_3_N = variants {mkN "group" ; mkN "grupos" ; mkN "house" ; } ; --*
lin lobbyist_N = mkN "lobista" ; --*
lin lobotomy_N = variants {mkN "leucotomy" ; mkN "leukotomy" ; mkN "lobotomia" ; mkN "lobotomy" ; } ; --*
lin lobster_1_N = mkN "lagosta" ; --*
lin lobster_2_N = variants {mkN "lagosta" ; mkN "Nephropidae" ; } ; --*
lin lobular_A = mkA "lobular" ; --*
lin local_1_A = mkA "local" ; --*
lin local_3_A = mkA "local" ; --*
lin locale_N = mkN "Locale" ; --*
lin locality_N = variants {mkN "bairro" ; mkN "cercania" ; mkN "of" ; mkN "proximidade" ; mkN "vizinhança" ; mkN "vizinho" ; } ; --*
lin localization_1_N = mkN "localização" ; --*
lin localize_1_V2 = mkV2 (mkV "localizar") ; --*
lin localize_4_V2 = mkV2 (mkV "localizar") ; --*
lin locate_1_V2 = variants {mkV2 (mkV "descobrir") ; mkV2 (mkV "localizar") ; mkV2 (mkV "up") ; } ; --*
lin locate_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "localizar") ; mkV2 (mkV "situar") ; } ; --*
lin location_1_N = variants {mkN "localização" ; mkN "lugar" ; mkN "ponto" ; } ; --*
lin location_2_N = variants {mkN "colocação" ; mkN "posicionamento" ; } ; --*
lin location_3_N = mkN "localização" ; --*
lin location_4_N = mkN "localização" ; --*
lin loch_1_N = mkN "fiorde" ; --*
lin lochia_N = mkN "Lochia" ; --*
lin lock_1_N = mkN "fechadura" ; --*
lin lock_1_V2 = mkV2 (mkV "trancar") ; --*
lin lock_2_N = variants {mkN "anel" ; mkN "cacho" ; } ; --*
lin lock_2_V = variants {mkV "engajar" ; mkV "engatar" ; } ; --*
lin lock_3_N = mkN "trava" ; --*
lin lock_4_N = variants {mkN "chamber" ; mkN "eclusa" ; } ; --*
lin lock_4_V2 = mkV2 (mkV "entrelaçar") ; --*
lin lock_5_V2 = mkV2 (mkV "entrelaçar-se") ; --*
lin lock_6_V2 = variants {mkV2 (mkV "trancar") ; mkV2 (mkV "travar") ; } ; --*
lin locker_1_N = variants {mkN "armário" ; mkN "locker" ; } ; --*
lin lock_in_1_V2 = mkV2 (mkV "in") ; --*
lin lockjaw_N = variants {mkN "Tetano" ; mkN "tétano" ; } ; --*
lin lockout_N = mkN "Lockout" ; --*
lin locksmith_N = mkN "chaveiro" ; --*
lin lockup_1_N = variants {mkN "cadeia" ; mkN "cana" ; mkN "cárcere" ; mkN "casa" ; mkN "grades" ; mkN "presídio" ; mkN "prisão" ; mkN "xadrez" ; mkN "xilindró" ; } ; --*
lin lock_up_1_V2 = mkV2 (mkV "up") ; --*
lin loco_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin locomotion_1_N = variants {mkN "locomoção" ; mkN "power" ; } ; --*
lin locomotion_2_N = mkN "locomoção" ; --*
lin locomotive_N = variants {mkN "engine" ; mkN "locomotiva" ; mkN "locomotive" ; mkN "máquina" ; } ; --*
lin locoweed_2_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin locus_1_N = mkN "Locale" ; --*
lin locus_2_N = mkN "locus" ; --*
lin locus_3_N = mkN "lugar" ; --*
lin locust_1_N = variants {mkN "gafanhoto" ; mkN "locustídeo" ; } ; --*
lin locust_2_N = mkN "acácia" ; --*
lin locution_N = variants {mkN "ditado" ; mkN "expressão" ; mkN "idioma" ; mkN "locução" ; mkN "provérbio" ; } ; --*
lin lode_N = variants {mkN "filão" ; mkN "veio" ; mkN "Veio" ; } ; --*
lin lodestone_N = mkN "ímã" ; --*
lin lodge_1_V = variants {mkV "alojar" ; mkV "morar" ; } ; --*
lin lodge_2_N = variants {mkN "club" ; mkN "clube" ; mkN "guilda" ; mkN "ordem" ; mkN "sociedade" ; } ; --*
lin lodge_2_V2 = mkV2 (mkV "colocar") ; --*
lin lodge_4_N = variants {mkN "lodge" ; mkN "refúgios" ; } ; --*
lin lodge_6_N = variants {mkN "albergaria" ; mkN "albergue" ; mkN "hospedaria" ; mkN "hotel" ; mkN "pousada" ; } ; --*
lin lodging_1_N = variants {mkN "abrigo" ; mkN "accommodations" ; mkN "casa" ; } ; --*
lin lodging_3_N = mkN "alojamentos" ; --*
lin loess_N = variants {mkN "loess" ; mkN "Loess" ; } ; --*
lin loft_1_N = variants {mkN "loft" ; mkN "sobrado" ; mkN "sótão" ; } ; --*
lin loft_2_N = variants {mkN "ático" ; mkN "mansarda" ; mkN "sótão" ; mkN "trapeira" ; } ; --*
lin loft_2_V2 = mkV2 (mkV "impulsionar") ; --*
lin loft_4_V2 = mkV2 (mkV "esquematizar") ; --*
lin loftiness_1_N = mkN "soberba" ; --*
lin loftiness_2_N = variants {mkN "majestade" ; mkN "títulogeraldecortesia" ; } ; --*
lin lofty_1_A = variants {mkA "elevado" ; mkA "sublime" ; } ; --*
lin lofty_2_A = variants {mkA "alto" ; mkA "elevado" ; mkA "eminente" ; mkA "magestoso" ; } ; --*
lin log_1_N = mkN "tora" ; --*
lin log_1_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "gravar") ; mkV2 (mkV "lançar") ; mkV2 (mkV "registrar") ; } ; --*
lin log_2_N = variants {mkN "logaritmo" ; mkN "Logarítmo" ; } ; --*
lin loganberry_1_N = variants {mkN "loganberry" ; mkN "loganobaccus" ; mkN "ursinus" ; } ; --*
lin loganberry_2_N = mkN "framboesa" ; --*
lin logarithm_N = variants {mkN "logaritmo" ; mkN "Logarítmo" ; } ; --*
lin logbook_N = mkN "Diário" ; --*
lin loge_2_N = mkN "camarote" ; --*
lin loggerhead_1_N = mkN "cabeça" ; --*
lin loggia_N = variants {mkN "loggia" ; mkN "Loggia" ; } ; --*
lin logging_N = variants {mkN "abate" ; mkN "indústria" ; } ; --*
lin logic_1_N = mkN "lógica" ; --*
lin logic_2_N = mkN "lógica" ; --*
lin logic_3_N = mkN "lógica" ; --*
lin logic_5_N = variants {mkN "lógica" ; mkN "of" ; mkN "system" ; } ; --*
lin logical_1_A = mkA "lógico" ; --*
lin logical_2_A = mkA "lógico" ; --*
lin logical_3_A = variants {mkA "coerente" ; mkA "consequente" ; mkA "conseqüente" ; mkA "lógico" ; } ; --*
lin logical_4_A = variants {mkA "coerente" ; mkA "lógico" ; } ; --*
lin logicality_N = mkN "lógica" ; --*
lin logician_N = mkN "lógico" ; --*
lin log_in_V = variants {mkV "fazer" ; mkV "in" ; mkV "on" ; } ; --*
lin logistical_A = mkA "logístico" ; --*
lin logistic_A = mkA "logístico" ; --*
lin logistics_N = variants {mkN "Logistica" ; mkN "logística" ; mkN "Logística" ; } ; --*
lin log_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin logogram_1_N = variants {mkN "Escritas" ; mkN "logossilabário" ; } ; --*
lin logo_N = variants {mkN "ligatura" ; mkN "logo" ; mkN "logotipo" ; mkN "logótipo" ; mkN "Logótipo" ; } ; --*
lin logorrhea_N = variants {mkN "logomania" ; mkN "logorreia" ; } ; --*
lin log_out_V = variants {mkV "off" ; mkV "out" ; } ; --*
lin logwood_2_N = variants {mkN "campechianum" ; mkN "Hematoxylon" ; mkN "tree" ; } ; --*
lin loin_1_N = mkN "lombo" ; --*
lin loin_2_N = mkN "lombo" ; --*
lin loiter_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin loll_1_V = mkV "pender" ; --*
lin lollipop_1_N = variants {mkN "lolly" ; mkN "picolé" ; } ; --*
lin lollipop_2_N = variants {mkN "pirulito" ; mkN "sucker" ; } ; --*
lin lolly_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin lolly_2_N = variants {mkN "lolly" ; mkN "picolé" ; } ; --*
lin london_1_PN = variants {mkPN "capital" ; mkPN "London" ; mkPN "Londres" ; mkPN "of" ; } ; --*
lin london_2_PN = variants {mkPN "Griffith" ; mkPN "Jack" ; mkPN "London" ; } ; --*
lin londoner_N = mkN "londrino" ; --*
lin lone_1_A = variants {mkA "solitário" ; mkA "único" ; } ; --*
lin lone_2_A = variants {mkA "só" ; mkA "solitário" ; mkA "sozinho" ; } ; --*
lin lone_3_A = variants {mkA "solitário" ; mkA "sozinho" ; } ; --*
lin loneliness_1_N = mkN "solidão" ; --*
lin loneliness_2_N = variants {mkN "Solidao" ; mkN "solidão" ; } ; --*
lin loneliness_3_N = mkN "solidão" ; --*
lin lonely_1_A = variants {mkA "só" ; mkA "solitário" ; mkA "sozinho" ; } ; --*
lin lonely_3_A = variants {mkA "solitário" ; mkA "sozinho" ; } ; --*
lin lonely_4_A = mkA "solitário" ; --*
lin lonesome_2_A = variants {mkA "solitário" ; mkA "único" ; } ; --*
lin long_1_A = mkA "de" ; --*
lin long_2_A = mkA "longo" ; --*
lin long_4_A = mkA "tenaz" ; --*
lin longan_1_N = variants {mkN "litchi" ; mkN "longan" ; mkN "Longan" ; mkN "longana" ; } ; --*
lin longanberry_1_N = variants {mkN "litchi" ; mkN "longan" ; mkN "Longan" ; mkN "longana" ; } ; --*
lin longboat_N = mkN "escaler" ; --*
lin longbow_N = mkN "arco" ; --*
lin longer_Adv = variants {mkAdv "mais" ; mkAdv "por" ; } ; --*
lin longest_Adv = mkAdv "o" ; --*
lin longevity_1_N = variants {mkN "longevidade" ; mkN "of" ; } ; --*
lin longevity_2_N = mkN "longevidade" ; --*
lin longhand_N = variants {mkN "hand" ; mkN "Letra" ; mkN "script" ; } ; --*
lin longing_N = variants {mkN "anelo" ; mkN "anseio" ; mkN "desejo" ; mkN "saudade" ; mkN "suspiro" ; } ; --*
lin longitude_N = variants {mkN "Linhas" ; mkN "longitude" ; mkN "Longitude" ; } ; --*
lin longitudinal_1_A = mkA "longitudinal" ; --*
lin longitudinal_2_A = mkA "longitudinal" ; --*
lin longitudinal_3_A = mkA "longitudinal" ; --*
lin long_lived_A = variants {mkA "duradouro" ; mkA "longevo" ; } ; --*
lin longshoreman_N = variants {mkN "carregador" ; mkN "estivador" ; mkN "worker" ; } ; --*
lin long_term_A = variants {mkA "demorado" ; mkA "duradouro" ; mkA "longo" ; } ; --*
lin long_V = variants {mkV "ansiar" ; mkV "desejar" ; mkV "suspirar" ; } ; --*
lin longways_Adv = mkAdv "ao" ; --*
lin long_windedness_N = mkN "prolixidade" ; --*
lin longwise_Adv = mkAdv "ao" ; --*
lin look_1_N = variants {mkN "aparência" ; mkN "expressão" ; mkN "expression" ; mkN "rosto" ; } ; --*
lin look_1_V = variants {mkV "mirar" ; mkV "observar" ; mkV "olhar" ; mkV "ver" ; } ; --*
lin look_2_N = variants {mkN "at" ; mkN "olhada" ; mkN "olhar" ; } ; --*
lin look_3_N = variants {mkN "aparência" ; mkN "aspecto" ; mkN "rosto" ; } ; --*
lin look_3_VA = variants {mkVA (mkV "aparentar") ; mkVA (mkV "parecer") ; } ; --*
lin look_4_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin look_4_V = variants {mkV "procurar" ; mkV "revistar" ; } ; --*
lin look_6_V2 = variants {mkV2 (mkV "care") ; mkV2 (mkV "cuidar") ; } ; --*
lin look_after_V2 = mkV2 (mkV "after") ; --*
lin look_at_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "considerar") ; } ; --*
lin look_at_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "ver") ; } ; --*
lin look_at_3_V2 = variants {mkV2 (mkV "mirar") ; mkV2 (mkV "observar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin look_back_2_V = variants {mkV "back" ; mkV "recordar" ; mkV "rever" ; } ; --*
lin look_down_on_V2 = mkV2 (mkV "down") ; --*
lin looker_1_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin looker_2_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin look_for_2_V2 = variants {mkV2 (mkV "esperar") ; mkV2 (mkV "for") ; mkV2 (mkV "to") ; } ; --*
lin look_forward_V = mkV "forward" ; --*
lin looking_1_N = variants {mkN "at" ; mkN "olhada" ; mkN "olhar" ; } ; --*
lin looking_glass_N = variants {mkN "espelho" ; mkN "glass" ; } ; --*
lin look_into_1_V2 = variants {mkV2 (mkV "into") ; mkV2 (mkV "pesquisar") ; } ; --*
lin look_into_2_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "into") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin look_on_1_V = variants {mkV "assistir" ; mkV "on" ; } ; --*
lin look_on_2_V = variants {mkV "as" ; mkV "considerar" ; mkV "of" ; mkV "on" ; mkV "to" ; mkV "upon" ; } ; --*
lin lookout_1_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin look_out_1_V = variants {mkV "out" ; mkV "ter" ; } ; --*
lin lookout_2_N = variants {mkN "observatório" ; mkN "post" ; } ; --*
lin look_out_2_V = mkV "out" ; --*
lin lookout_3_N = variants {mkN "observatório" ; mkN "station" ; mkN "tower" ; } ; --*
lin look_over_V2 = variants {mkV2 (mkV "mirar") ; mkV2 (mkV "observar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin look_to_10_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin look_to_2_V2 = variants {mkV2 (mkV "esperar") ; mkV2 (mkV "for") ; mkV2 (mkV "to") ; } ; --*
lin look_to_8_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "esperar") ; } ; --*
lin look_up_to_V2 = variants {mkV2 (mkV "admirar") ; mkV2 (mkV "up") ; } ; --*
lin look_up_V2 = variants {mkV2 (mkV "consultar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "up") ; } ; --*
lin look_up_V = variants {mkV "consultar" ; mkV "fazer" ; mkV "up" ; } ; --*
lin loom_1_V = variants {mkV "aparecer" ; mkV "assomar" ; } ; --*
lin loom_2_V = variants {mkV "atirar-se" ; mkV "erguer-se" ; mkV "predominar" ; } ; --*
lin loom_N = mkN "tear" ; --*
lin loon_2_N = variants {mkN "Gaviidae" ; mkN "mobelha" ; } ; --*
lin loo_N = variants {mkN "banheiro" ; mkN "closet" ; mkN "retrete" ; mkN "sanita" ; mkN "vaso" ; } ; --*
lin loony_1_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin loop_1_N = variants {mkN "casa" ; mkN "ilhó" ; } ; --*
lin loop_2_N = mkN "laço" ; --*
lin loop_3_N = mkN "iteração" ; --*
lin loop_4_V2 = variants {mkV2 (mkV "embobinar") ; mkV2 (mkV "enrolar") ; } ; --*
lin loop_4_V = variants {mkV "embobinar" ; mkV "enrolar" ; } ; --*
lin loop_6_N = mkN "ciclo" ; --*
lin loophole_1_N = mkN "brecha" ; --*
lin loophole_2_N = mkN "seteira" ; --*
lin loopy_2_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin loose_13_A = variants {mkA "devasso" ; mkA "promíscuo" ; } ; --*
lin loose_1_A = mkA "solto" ; --*
lin loose_1_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "soltar") ; } ; --*
lin loose_2_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "loose") ; mkV2 (mkV "soltar") ; } ; --*
lin loose_3_A = variants {mkA "frouxo" ; mkA "solto" ; } ; --*
lin loose_3_V2 = mkV2 (mkV "afrouxar") ; --*
lin loose_4_A = mkA "informal" ; --*
lin loose_4_V2 = mkV2 (mkV "sossegar") ; --*
lin loose_5_A = mkA "liberal" ; --*
lin loose_8_A = variants {mkA "queda" ; mkA "relaxado" ; mkA "sem" ; } ; --*
lin loosely_1_Adv = variants {mkAdv "de" ; mkAdv "frouxamente" ; mkAdv "relaxadamente" ; } ; --*
lin loosely_3_Adv = variants {mkAdv "em" ; mkAdv "speaking" ; } ; --*
lin loosen_1_V2 = mkV2 (mkV "afrouxar") ; --*
lin loosen_4_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "separar") ; } ; --*
lin loosen_5_V2 = mkV2 (mkV "desamarrar") ; --*
lin loosen_7_V = mkV "sossegar" ; --*
lin looseness_1_N = variants {mkN "diarreia" ; mkN "diarréia" ; mkN "of" ; } ; --*
lin looseness_6_N = variants {mkN "devassidão" ; mkN "dissolução" ; } ; --*
lin loosening_1_N = mkN "relaxamento" ; --*
lin loosen_up_4_V = variants {mkV "descontrair" ; mkV "down" ; mkV "pegar" ; mkV "relaxar" ; mkV "up" ; } ; --*
lin loosen_up_5_V = variants {mkV "espairecer" ; mkV "relaxar" ; mkV "relaxed" ; mkV "up" ; } ; --*
lin loot_1_N = variants {mkN "botim" ; mkN "espólio" ; mkN "money" ; mkN "pilhagem" ; mkN "rapina" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin loot_1_V = variants {mkV "roubar" ; mkV "saltear" ; } ; --*
lin loot_2_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin loot_2_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin looter_N = mkN "assaltante" ; --*
lin looting_N = variants {mkN "pilhagem" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin lop_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "decepar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin lop_2_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin lopsided_1_A = variants {mkA "desigual" ; mkA "torto" ; } ; --*
lin lopsidedness_N = variants {mkN "obliquidade" ; mkN "Obliqüidade" ; } ; --*
lin loquacious_A = variants {mkA "conversador" ; mkA "loquaz" ; mkA "tagarela" ; } ; --*
lin loquaciousness_N = mkN "loquacidade" ; --*
lin loquacity_N = mkN "loquacidade" ; --*
lin loquat_1_N = variants {mkN "ameixa" ; mkN "japonica" ; mkN "medlar" ; mkN "plum" ; mkN "tree" ; } ; --*
lin loquat_2_N = variants {mkN "ameixa" ; mkN "plum" ; } ; --*
lin lorazepam_N = mkN "Lorazepam" ; --*
lin lord_1_N = variants {mkN "Almighty" ; mkN "Senhor" ; mkN "Todo-Poderoso" ; } ; --*
lin lord_2_N = variants {mkN "castelão" ; mkN "senhor" ; } ; --*
lin lord_3_N = variants {mkN "Lorde" ; mkN "nobre" ; } ; --*
lin lord_it_over_V2 = variants {mkV2 (mkV "it") ; mkV2 (mkV "on") ; mkV2 (mkV "superior") ; } ; --*
lin lordliness_1_N = mkN "dignidade" ; --*
lin lordliness_2_N = variants {mkN "arrogância" ; mkN "elevado-high-handedness" ; mkN "orgulho" ; } ; --*
lin lordly_1_A = mkA "senhorial" ; --*
lin lordly_2_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin lordosis_N = mkN "lordose" ; --*
lin lordship_2_N = variants {mkN "domínio" ; mkN "O" ; } ; --*
lin lorry_2_N = variants {mkN "camião" ; mkN "caminhão" ; mkN "camiões" ; mkN "sunkvežimis" ; } ; --*
lin los_angeles_PN = variants {mkPN "Angeles" ; mkPN "of" ; } ; --*
lin lose_2_V2 = mkV2 (mkV "perder") ; --*
lin lose_3_V2 = mkV2 (mkV "perder") ; --*
lin lose_4_V2 = mkV2 (mkV "perder") ; --*
lin lose_5_V2 = mkV2 (mkV "perder") ; --*
lin lose_6_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "perder") ; } ; --*
lin loser_2_N = variants {mkN "fracassado" ; mkN "perdedor" ; mkN "person" ; } ; --*
lin lose_V = mkV "perder" ; --*
lin loss_1_N = mkN "perda" ; --*
lin loss_3_N = variants {mkN "derrota" ; mkN "perda" ; } ; --*
lin loss_4_N = variants {mkN "perda" ; mkN "prejuízo" ; mkN "privação" ; } ; --*
lin loss_6_N = variants {mkN "ink" ; mkN "perda" ; mkN "vermelho" ; } ; --*
lin loss_8_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin lost_1_A = mkA "perdido" ; --*
lin lost_2_A = mkA "perplexo" ; --*
lin lost_3_A = mkA "perdido" ; --*
lin lost_5_A = variants {mkA "sfumato" ; mkA "Sfumato" ; } ; --*
lin lost_8_A = variants {mkA "perplexo" ; mkA "sea" ; } ; --*
lin lost_9_A = mkA "indefeso" ; --*
lin lot_2_N = mkN "lote" ; --*
lin lot_3_N = variants {mkN "círculo" ; mkN "grupo" ; mkN "ordem" ; } ; --*
lin lot_4_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin lot_6_N = mkN "grupo" ; --*
lin lot_PN = variants {mkPN "Departamento" ; mkPN "Lot" ; } ; --*
lin lotsPl_Card = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin lotsSg_Card = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin lottery_1_N = mkN "loteria" ; --*
lin lottery_2_N = mkN "loteria" ; --*
lin lotto_N = mkN "bingo" ; --*
lin lotus_1_N = variants {mkN "lotus" ; mkN "lótus" ; mkN "nucifera" ; } ; --*
lin lotus_3_N = variants {mkN "lily" ; mkN "lotus" ; mkN "Nymphaea" ; mkN "water" ; } ; --*
lin loud_1_A = variants {mkA "alta" ; mkA "alto" ; mkA "berrante" ; mkA "estrepitante" ; } ; --*
lin loud_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin loud_Adv = variants {mkAdv "em" ; mkAdv "emvozalta" ; mkAdv "ruidosamente" ; } ; --*
lin loudness_1_N = variants {mkN "gritaria" ; mkN "intensidade" ; mkN "volume" ; } ; --*
lin loudspeaker_N = variants {mkN "altifalante" ; mkN "alto-falante" ; mkN "system" ; mkN "unit" ; } ; --*
lin louisiana_PN = variants {mkPN "Luisiana" ; mkPN "State" ; } ; --*
lin louis_PN = variants {mkPN "Louis" ; mkPN "Luís" ; mkPN "Luiz" ; } ; --*
lin louisville_PN = mkPN "Louisville" ; --*
lin lounge_1_N = variants {mkN "canapé" ; mkN "sofá" ; } ; --*
lin lounge_2_N = variants {mkN "area" ; mkN "room" ; mkN "saladeespera" ; } ; --*
lin lounge_2_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin lounge_chair_N = mkN "chair" ; --*
lin lour_1_V = mkV "baixar" ; --*
lin lour_2_V = variants {mkV "diminuir" ; mkV "down" ; mkV "reduzir" ; } ; --*
lin lour_3_V = variants {mkV "fazer" ; mkV "franzir" ; } ; --*
lin louse_1_N = variants {mkN "louse" ; mkN "piolho" ; } ; --*
lin louse_3_N = variants {mkN "louse" ; mkN "pulgões" ; } ; --*
lin louse_4_N = variants {mkN "louse" ; mkN "piolho" ; } ; --*
lin lousy_1_A = variants {mkA "fedida" ; mkA "fedido" ; mkA "fedorenta" ; mkA "fedorento" ; } ; --*
lin lousy_2_A = mkA "piolhoso" ; --*
lin lousy_3_A = mkA "sujo" ; --*
lin lout_N = mkN "bobo" ; --*
lin louver_N = mkN "grelha" ; --*
lin louvre_1_N = variants {mkN "Louvre" ; mkN "Museum" ; } ; --*
lin louvre_2_N = mkN "grelha" ; --*
lin lovable_1_A = mkA "amorável" ; --*
lin love_1_N = variants {mkN "afeição" ; mkN "amor" ; } ; --*
lin love_1_V2 = mkV2 (mkV "amar") ; --*
lin love_2_N = variants {mkN "afeição" ; mkN "amor" ; mkN "paixão" ; mkN "Paixão" ; } ; --*
lin love_2_V2 = variants {mkV2 (mkV "aproveitar") ; mkV2 (mkV "cultuar") ; mkV2 (mkV "desfrutar") ; mkV2 (mkV "encantar") ; mkV2 (mkV "gostar") ; mkV2 (mkV "gozar") ; } ; --*
lin love_3_N = variants {mkN "amante" ; mkN "amor" ; } ; --*
lin love_3_V2 = mkV2 (mkV "amar") ; --*
lin love_4_N = variants {mkN "amor" ; mkN "love" ; } ; --*
lin love_4_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin love_5_N = mkN "zero" ; --*
lin love_affair_N = variants {mkN "affair" ; mkN "romance" ; } ; --*
lin lovebird_1_N = variants {mkN "parakeet" ; mkN "periquito" ; mkN "Periquito" ; mkN "undulatus" ; } ; --*
lin lovebird_2_N = variants {mkN "agapornis" ; mkN "periquito-namorado" ; } ; --*
lin love_child_N = variants {mkN "bastardo" ; mkN "child" ; } ; --*
lin love_letter_N = variants {mkN "doux" ; mkN "letter" ; } ; --*
lin lovely_1_A = variants {mkA "formoso" ; mkA "maravilhoso" ; mkA "precioso" ; mkA "pulcro" ; } ; --*
lin lovely_2_A = mkA "adorável" ; --*
lin lover_1_N = variants {mkN "amado" ; mkN "amante" ; } ; --*
lin lover_2_N = mkN "amante" ; --*
lin lover_3_N = mkN "amante" ; --*
lin love_song_N = variants {mkN "canção" ; mkN "song" ; } ; --*
lin loving_A = variants {mkA "afectuoso" ; mkA "amoroso" ; mkA "carinhoso" ; mkA "queama" ; } ; --*
lin loving_cup_2_N = variants {mkN "cup" ; mkN "taça" ; } ; --*
lin lovingness_1_N = mkN "afeição" ; --*
lin lovingness_2_N = variants {mkN "afeição" ; mkN "amor" ; mkN "apego" ; } ; --*
lin low_10_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin low_1_A = variants {mkA "baixa" ; mkA "baixo" ; } ; --*
lin low_2_A = mkA "deprimido" ; --*
lin low_6_A = variants {mkA "abjeto" ; mkA "miserável" ; } ; --*
lin low_7_A = variants {mkA "humilde" ; mkA "ignoto" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin lowbred_A = mkA "grosseiro" ; --*
lin low_down_1_A = variants {mkA "abjeto" ; mkA "miserável" ; } ; --*
lin lower_1_V2 = variants {mkV2 (mkV "baixar") ; mkV2 (mkV "down") ; } ; --*
lin lower_2_V2 = mkV2 (mkV "baixar") ; --*
lin lower_3_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin lower_4_V2 = variants {mkV2 (mkV "baixar") ; mkV2 (mkV "diminuir") ; } ; --*
lin lower_5_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "franzir") ; } ; --*
lin lower_5_V = variants {mkV "fazer" ; mkV "franzir" ; } ; --*
lin lowercase_A = mkA "minúsculo" ; --*
lin lowering_1_N = mkN "abatimento" ; --*
lin lowliness_1_N = mkN "humildade" ; --*
lin lowly_1_A = variants {mkA "humilde" ; mkA "ignoto" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin lowly_3_A = mkA "humilde" ; --*
lin low_relief_N = variants {mkN "relief" ; mkN "relievo" ; mkN "rilievo" ; } ; --*
lin low_spirited_A = variants {mkA "deprimido" ; mkA "in" ; mkA "trevas" ; } ; --*
lin low_V = mkV "mugir" ; --*
lin lox_1_N = variants {mkN "Oxigénio" ; mkN "oxygen" ; } ; --*
lin loyal_1_A = variants {mkA "fiel" ; mkA "leal" ; } ; --*
lin loyal_2_A = variants {mkA "leal" ; mkA "patriótico" ; } ; --*
lin loyal_3_A = mkA "fiel" ; --*
lin loyalty_1_N = mkN "lealdade" ; --*
lin loyalty_2_N = mkN "lealdade" ; --*
lin loyalty_3_N = mkN "dedicação" ; --*
lin loyang_PN = mkPN "Luoyang" ; --*
lin lozenge_1_N = mkN "pastilha" ; --*
lin lozenge_2_N = variants {mkN "comprimido" ; mkN "pílula" ; } ; --*
lin lsd_N = variants {mkN "acid" ; mkN "dietilamida" ; } ; --*
lin luau_N = mkN "Luau" ; --*
lin lubber_1_N = mkN "bobo" ; --*
lin lubeck_PN = variants {mkPN "Lubeck" ; mkPN "Lübeck" ; } ; --*
lin lubricant_N = variants {mkN "lubrificante" ; mkN "lubrificantes" ; mkN "substance" ; } ; --*
lin lubricate_3_V2 = mkV2 (mkV "lubrificar") ; --*
lin lubrication_2_N = mkN "lubrificação" ; --*
lin lubricious_2_A = variants {mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; mkA "promíscuo" ; } ; --*
lin lucent_A = variants {mkA "brilhante" ; mkA "luminoso" ; } ; --*
lin lucerne_N = variants {mkN "alfafa" ; mkN "sativa" ; } ; --*
lin lucid_1_A = variants {mkA "clear" ; mkA "límpido" ; } ; --*
lin lucid_2_A = mkA "lúcido" ; --*
lin lucid_3_A = variants {mkA "coerente" ; mkA "lógico" ; } ; --*
lin lucid_4_A = variants {mkA "clear" ; mkA "límpido" ; mkA "transparente" ; } ; --*
lin lucidity_1_N = variants {mkN "lucidez" ; mkN "transparência" ; } ; --*
lin lucidity_2_N = mkN "lucidez" ; --*
lin lucifer_1_N = variants {mkN "diabo" ; mkN "Lúcifer" ; mkN "Nick" ; mkN "of" ; mkN "Satanás" ; mkN "Tempter" ; } ; --*
lin lucifer_2_N = variants {mkN "lúcifer" ; mkN "star" ; } ; --*
lin lucifer_3_N = variants {mkN "fósforo" ; mkN "match" ; mkN "palito" ; } ; --*
lin luciferin_N = mkN "luciferina" ; --*
lin luck_1_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin luck_2_N = variants {mkN "azar" ; mkN "ensejo" ; mkN "sorte" ; } ; --*
lin luck_3_N = variants {mkN "fortuna" ; mkN "sorte" ; } ; --*
lin luckily_Adv = variants {mkAdv "afortunadamente" ; mkAdv "felizmente" ; mkAdv "luck" ; mkAdv "por" ; } ; --*
lin lucknow_1_PN = mkPN "Lucknow" ; --*
lin luck_out_V = variants {mkV "out" ; mkV "the" ; } ; --*
lin lucky_1_A = variants {mkA "sortuda" ; mkA "sortudo" ; } ; --*
lin lucky_2_A = variants {mkA "afortunado" ; mkA "sortuda" ; mkA "sortudo" ; } ; --*
lin lucky_3_A = variants {mkA "favorável" ; mkA "propício" ; mkA "vantajoso" ; } ; --*
lin lucrative_A = variants {mkA "lucrativo" ; mkA "rentável" ; } ; --*
lin lucre_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin lucre_2_N = variants {mkN "ganancia" ; mkN "income" ; mkN "profit" ; mkN "rendimento" ; } ; --*
lin lucubration_1_N = mkN "lucubração" ; --*
lin lucy_PN = mkPN "Lucy" ; --*
lin luddite_1_N = mkN "Luddismo" ; --*
lin ludicrous_1_A = variants {mkA "grotesco" ; mkA "ridículo" ; } ; --*
lin ludicrous_2_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin luffa_2_N = variants {mkN "gourd" ; mkN "Luffa" ; mkN "vine" ; } ; --*
lin lug_1_N = mkN "Lug" ; --*
lin luggage_N = variants {mkN "bagagem" ; mkN "Bagagens" ; mkN "embrulho" ; mkN "mala" ; } ; --*
lin lugubrious_A = mkA "lúgubre" ; --*
lin lugubriousness_N = mkN "tristeza" ; --*
lin luke_2_PN = variants {mkPN "According" ; mkPN "Evangelho" ; mkPN "of" ; } ; --*
lin lukewarm_1_A = variants {mkA "morna" ; mkA "morno" ; mkA "tépida" ; mkA "tépido" ; mkA "tíbio" ; } ; --*
lin lukewarm_2_A = variants {mkA "morno" ; mkA "tépido" ; } ; --*
lin lull_1_N = mkN "pausa" ; --*
lin lull_3_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin lullaby_1_N = variants {mkN "acalento" ; mkN "canção" ; mkN "Cantiga" ; } ; --*
lin lumbar_A = mkA "lombar" ; --*
lin lumber_1_N = mkN "madeira" ; --*
lin lumberjack_1_N = variants {mkN "lenhador" ; mkN "madeireiro" ; } ; --*
lin lumberman_N = variants {mkN "lenhador" ; mkN "madeireiro" ; } ; --*
lin lumber_mill_N = mkN "serraria" ; --*
lin lumbosacral_A = mkA "lombo-sacral" ; --*
lin lumen_1_N = mkN "lúmen" ; --*
lin lumen_2_N = variants {mkN "Lumen" ; mkN "Lúmen" ; } ; --*
lin luminary_N = variants {mkN "light" ; mkN "notável" ; } ; --*
lin luminescence_1_N = variants {mkN "luminescência" ; mkN "Luminescência" ; } ; --*
lin luminism_N = mkN "Luminismo" ; --*
lin luminosity_N = variants {mkN "level" ; mkN "luminosidade" ; } ; --*
lin luminous_A = variants {mkA "brilhante" ; mkA "luminoso" ; } ; --*
lin lump_1_N = variants {mkN "bola" ; mkN "grupo" ; mkN "torrão" ; } ; --*
lin lump_2_N = variants {mkN "inchação" ; mkN "inchamento" ; mkN "turgidez" ; } ; --*
lin lump_2_V2 = mkV2 (mkV "colocar") ; --*
lin lump_3_N = mkN "bobo" ; --*
lin lump_4_N = variants {mkN "fragmento" ; mkN "naco" ; mkN "pedaço" ; } ; --*
lin lumpenproletariat_N = mkN "Lumpemproletariado" ; --*
lin lumper_1_N = variants {mkN "carregador" ; mkN "estivador" ; mkN "worker" ; } ; --*
lin lumpsucker_N = mkN "peixe-lapa" ; --*
lin lunacy_1_N = mkN "vesânia" ; --*
lin lunacy_2_N = variants {mkN "idiotice" ; mkN "tolice" ; } ; --*
lin lunar_A = mkA "lunar" ; --*
lin lunatic_1_N = variants {mkN "louco" ; mkN "maníaco" ; } ; --*
lin luncheon_N = variants {mkN "almoço" ; mkN "lanche" ; mkN "merenda" ; } ; --*
lin lunch_N = variants {mkN "almoço" ; mkN "lanche" ; mkN "merenda" ; } ; --*
lin lunchtime_N = variants {mkN "hora" ; mkN "period" ; } ; --*
lin lunch_V2 = mkV2 (mkV "alimentar") ; --*
lin lunch_V = variants {mkV "almoçar" ; mkV "comer" ; } ; --*
lin lunge_2_N = variants {mkN "impulso" ; mkN "thrust" ; } ; --*
lin lunge_V = variants {mkV "arremessar" ; mkV "impulsionar" ; } ; --*
lin lungfish_N = mkN "dipnóicos" ; --*
lin lung_N = variants {mkN "pulmão" ; mkN "Pulmão" ; } ; --*
lin lunula_1_N = mkN "Lúnula" ; --*
lin lupus_1_N = mkN "lúpus" ; --*
lin lupus_2_N = variants {mkN "Constelação" ; mkN "Lupus" ; } ; --*
lin lurch_4_V = mkV "espreitar" ; --*
lin lure_1_N = mkN "atracção" ; --*
lin lure_2_N = variants {mkN "adoçante" ; mkN "chamariz" ; mkN "engodo" ; } ; --*
lin lure_3_N = variants {mkN "Ardil" ; mkN "isca" ; } ; --*
lin lure_V2 = variants {mkV2 (mkV "desencaminhar") ; mkV2 (mkV "engodar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "induzir") ; mkV2 (mkV "seduzir") ; } ; --*
lin lurid_2_A = mkA "sensacional" ; --*
lin luridness_1_N = mkN "Sensacionalismo" ; --*
lin luridness_2_N = mkN "palidez" ; --*
lin lurk_1_V = mkV "espreitar" ; --*
lin lurk_2_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin lurk_3_V = variants {mkV "emboscar" ; mkV "estar" ; mkV "in" ; } ; --*
lin luscious_1_A = mkA "voluptário" ; --*
lin luscious_2_A = variants {mkA "apetitoso" ; mkA "delicioso" ; mkA "gostoso" ; mkA "saboroso" ; } ; --*
lin lush_1_A = mkA "abundante" ; --*
lin lush_2_A = mkA "voluptário" ; --*
lin lush_3_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin lush_N = variants {mkN "alcoólatra" ; mkN "bêbado" ; mkN "borracho" ; } ; --*
lin lust_1_N = variants {mkN "luxúria" ; mkN "paixão" ; } ; --*
lin lust_2_N = mkN "luxúria" ; --*
lin lust_after_V2 = mkV2 (mkV "after") ; --*
lin luster_1_N = variants {mkN "brilho" ; mkN "esplendor" ; mkN "lustre" ; } ; --*
lin luster_2_N = variants {mkN "brilho" ; mkN "luzeiro" ; } ; --*
lin luster_3_N = mkN "Lustre" ; --*
lin lustful_1_A = variants {mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; mkA "promíscuo" ; } ; --*
lin lustful_2_A = variants {mkA "devasso" ; mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; } ; --*
lin lustful_3_A = mkA "devasso" ; --*
lin lustre_1_N = mkN "Lustre" ; --*
lin lustre_2_N = variants {mkN "brilho" ; mkN "esplendor" ; mkN "lustre" ; } ; --*
lin lustre_3_N = variants {mkN "brilho" ; mkN "luzeiro" ; } ; --*
lin lustrous_1_A = variants {mkA "brilhoso" ; mkA "faiscante" ; mkA "luminoso" ; mkA "reluzente" ; mkA "soalheiro" ; } ; --*
lin lustrous_3_A = variants {mkA "faiscante" ; mkA "reluzente" ; } ; --*
lin lust_V = variants {mkV "desejar" ; mkV "querer" ; mkV "ter" ; } ; --*
lin lusty_1_A = mkA "devasso" ; --*
lin lute_2_N = mkN "alaúde" ; --*
lin lutefisk_1_N = mkN "lutefisk" ; --*
lin lutetium_1_N = variants {mkN "Lutecio" ; mkN "lutécio" ; mkN "number" ; } ; --*
lin lutheran_1_A = mkA "luterano" ; --*
lin lutheran_2_A = mkA "luterano" ; --*
lin lutheran_N = variants {mkN "luterana" ; mkN "luterano" ; mkN "Luteranos" ; } ; --*
lin luthier_N = mkN "luthier" ; --*
lin lux_1_N = variants {mkN "Lux" ; mkN "luz" ; } ; --*
lin lux_2_N = mkN "60" ; --*
lin luxe_A = variants {mkA "luxe" ; mkA "luxuoso" ; mkA "luxuriante" ; } ; --*
lin luxembourg_1_PN = variants {mkPN "City" ; mkPN "Luxemburgo" ; mkPN "of" ; } ; --*
lin luxembourg_2_PN = variants {mkPN "Duchy" ; mkPN "Luxemburgo" ; } ; --*
lin luxemburger_1_A = mkA "luxemburguês" ; --*
lin luxemburger_1_N = mkN "luxemburguês" ; --*
lin luxemburger_2_A = mkA "luxemburguês" ; --*
lin luxuriant_2_A = mkA "voluptuoso" ; --*
lin luxuriant_3_A = mkA "abundante" ; --*
lin luxuriate_2_V = mkV "aproveitar" ; --*
lin luxurious_1_A = mkA "voluptuoso" ; --*
lin luxurious_2_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin luxury_1_N = mkN "luxo" ; --*
lin luxury_2_N = variants {mkN "luxo" ; mkN "sumptuosidade" ; } ; --*
lin luxury_3_N = variants {mkN "luxo" ; mkN "opulência" ; mkN "sumptuosidade" ; mkN "suntuosidade" ; } ; --*
lin lyallpur_PN = mkPN "Faisalabad" ; --*
lin lycanthropy_N = mkN "licantropia" ; --*
lin lyceum_1_N = variants {mkN "ensino" ; mkN "instituto" ; mkN "school" ; } ; --*
lin lyceum_2_N = mkN "liceu" ; --*
lin lychee_1_N = variants {mkN "lichia" ; mkN "Litchi" ; mkN "nut" ; } ; --*
lin lycopene_N = mkN "licopeno" ; --*
lin lydia_PN = mkPN "Lídia" ; --*
lin lye_N = mkN "lixívia" ; --*
lin lying_N = mkN "mentira" ; --*
lin lymphadenopathy_N = variants {mkN "linfadenopatia" ; mkN "Linfadenopatia" ; } ; --*
lin lymphangioma_N = mkN "linfangioma" ; --*
lin lymphedema_N = mkN "Linfedema" ; --*
lin lymph_N = mkN "linfa" ; --*
lin lymphoblast_N = mkN "Linfoblasto" ; --*
lin lymphocyte_N = variants {mkN "cell" ; mkN "linfócito" ; } ; --*
lin lymphocytosis_N = mkN "linfocitose" ; --*
lin lymphoma_N = variants {mkN "linfoma" ; mkN "Linfoma" ; } ; --*
lin lynching_N = variants {mkN "linchagem" ; mkN "linchamento" ; } ; --*
lin lynchpin_1_N = mkN "ponto" ; --*
lin lynch_V2 = mkV2 (mkV "linchar") ; --*
lin lynx_2_N = variants {mkN "lince" ; mkN "suçuarana" ; } ; --*
lin lyons_1_PN = mkPN "Lyon" ; --*
lin lyre_N = variants {mkN "lira" ; mkN "Lira" ; } ; --*
lin lyric_1_A = mkA "lírico" ; --*
lin lyric_1_N = variants {mkN "letra" ; mkN "Letra" ; mkN "teor" ; mkN "texto" ; } ; --*
lin lyric_2_A = mkA "lírico" ; --*
lin lyric_3_A = mkA "lírico" ; --*
lin lyric_4_A = mkA "lírico" ; --*
lin lyrical_1_A = mkA "lírico" ; --*
lin lyrical_2_A = mkA "lírico" ; --*
lin lyricality_N = mkN "lirismo" ; --*
lin lyricism_1_N = mkN "lirismo" ; --*
lin lyricism_2_N = mkN "lirismo" ; --*
lin lyricist_1_N = mkN "Letrista" ; --*
lin lysine_N = mkN "lisina" ; --*
lin lysis_2_N = mkN "lise" ; --*
lin lysosome_N = mkN "lisossomo" ; --*
lin lysozyme_N = mkN "lisozima" ; --*
lin ma_1_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin ma_4_N = variants {mkN "Colony" ; mkN "Massachusetts" ; mkN "State" ; } ; --*
lin ma'am_N = variants {mkN "dama" ; mkN "madame" ; mkN "senhora" ; } ; --*
lin mac_1_N = mkN "Macintosh" ; --*
lin macabre_A = variants {mkA "horrível" ; mkA "macabro" ; } ; --*
lin macadam_2_N = variants {mkN "asfalto" ; mkN "macadame" ; } ; --*
lin macadamia_N = variants {mkN "macadâmia" ; mkN "tree" ; } ; --*
lin macaque_N = mkN "macaco" ; --*
lin macaroni_2_N = variants {mkN "macarrão" ; mkN "Macarrão" ; } ; --*
lin macaw_N = variants {mkN "arara" ; mkN "papagaio" ; } ; --*
lin mace_3_N = mkN "macis" ; --*
lin mace_4_N = variants {mkN "maça" ; mkN "macis" ; } ; --*
lin macedonian_1_N = mkN "macedônico" ; --*
lin macedonian_2_N = variants {mkN "língua" ; mkN "Língua" ; mkN "macedônio" ; } ; --*
lin macedonian_A = mkA "macedónio" ; --*
lin macerate_1_V2 = mkV2 (mkV "macerar") ; --*
lin macerate_1_V = mkV "macerar" ; --*
lin macerate_4_V2 = mkV2 (mkV "emaciar") ; --*
lin maceration_1_N = mkN "maceração" ; --*
lin machete_N = variants {mkN "catana" ; mkN "Catana" ; mkN "facão" ; mkN "peixeira" ; } ; --*
lin machiavellian_A = variants {mkA "maquiavélica" ; mkA "maquiavélico" ; } ; --*
lin machicolation_N = mkN "mata-cães" ; --*
lin machination_N = variants {mkN "conspiração" ; mkN "intriga" ; } ; --*
lin machine_1_N = variants {mkN "máquina" ; mkN "maquinaria" ; } ; --*
lin machine_2_N = mkN "máquina" ; --*
lin machine_4_N = variants {mkN "machine" ; mkN "máquina" ; mkN "Máquinas" ; } ; --*
lin machine_5_N = variants {mkN "clientelismo" ; mkN "machine" ; } ; --*
lin machine_6_N = variants {mkN "auto" ; mkN "automóvel" ; mkN "carro" ; mkN "máquina" ; mkN "veículo" ; mkN "viatura" ; } ; --*
lin machine_gun_N = mkN "gun" ; --*
lin machinery_1_N = variants {mkN "máquina" ; mkN "maquinaria" ; } ; --*
lin machinist_N = variants {mkN "mecânico" ; mkN "mechanic" ; } ; --*
lin machismo_N = mkN "machismo" ; --*
lin mach_PN = variants {mkPN "Ernst" ; mkPN "Mach" ; } ; --*
lin mackerel_1_N = variants {mkN "carapau" ; mkN "cavala" ; } ; --*
lin mackerel_2_N = variants {mkN "Carapau" ; mkN "cavala" ; } ; --*
lin mackintosh_2_N = mkN "Macintosh" ; --*
lin macrocephaly_N = mkN "macrocefalia" ; --*
lin macrocosm_N = variants {mkN "cosmo" ; mkN "criação" ; mkN "mundo" ; mkN "natureza" ; mkN "universo" ; mkN "Universo" ; } ; --*
lin macroeconomics_N = variants {mkN "macroeconomia" ; mkN "Macroeconomia" ; } ; --*
lin macroevolution_N = mkN "macroevolução" ; --*
lin macromolecule_N = variants {mkN "macromolécula" ; mkN "Macromolécula" ; } ; --*
lin macro_N = variants {mkN "instruction" ; mkN "macro" ; } ; --*
lin macron_N = variants {mkN "macro" ; mkN "Macron" ; mkN "mácron" ; } ; --*
lin macrophage_N = variants {mkN "macrófago" ; mkN "Macrófagos" ; } ; --*
lin macroscopic_1_A = mkA "nacroscópico" ; --*
lin macroscopic_2_A = mkA "nacroscópico" ; --*
lin macula_1_N = mkN "mancha" ; --*
lin macumba_3_N = mkN "macumba" ; --*
lin mad_1_A = variants {mkA "irado" ; mkA "zangado" ; } ; --*
lin mad_2_A = mkA "louco" ; --*
lin mad_3_A = variants {mkA "delirante" ; mkA "frenético" ; } ; --*
lin mad_4_A = variants {mkA "demente" ; mkA "louco" ; mkA "maluco" ; } ; --*
lin madagascan_A = variants {mkA "madagascarense" ; mkA "malgaxe" ; mkA "malgaxo" ; } ; --*
lin madagascar_1_PN = variants {mkPN "Madagascar" ; mkPN "of" ; mkPN "Republic" ; } ; --*
lin madagascar_2_PN = variants {mkPN "Madagascar" ; mkPN "Madagáscar" ; mkPN "República" ; } ; --*
lin madam_1_N = variants {mkN "dama" ; mkN "madame" ; mkN "senhora" ; } ; --*
lin madam_2_N = variants {mkN "cafetina" ; mkN "keeper" ; } ; --*
lin madame_N = variants {mkN "dama" ; mkN "senhora" ; } ; --*
lin madden_1_V2 = mkV2 (mkV "enlouquecer") ; --*
lin madden_2_V2 = mkV2 (mkV "enfurecer") ; --*
lin madeira_1_N = variants {mkN "Madeira" ; mkN "Rio" ; mkN "River" ; } ; --*
lin madeira_2_N = mkN "Madeira" ; --*
lin madeira_3_N = variants {mkN "vinho" ; mkN "Vinho" ; } ; --*
lin madman_N = variants {mkN "louco" ; mkN "maníaco" ; } ; --*
lin madness_1_N = mkN "vesânia" ; --*
lin madness_2_N = variants {mkN "hidrofobia" ; mkN "raiva" ; } ; --*
lin madness_3_N = variants {mkN "cólera" ; mkN "fúria" ; mkN "ira" ; mkN "raiva" ; } ; --*
lin madness_4_N = variants {mkN "bobeira" ; mkN "loucura" ; mkN "maluquice" ; } ; --*
lin madness_5_N = mkN "loucura" ; --*
lin madonna_1_N = variants {mkN "Maria" ; mkN "Mary" ; mkN "Virgin" ; } ; --*
lin madonna_2_N = variants {mkN "Louise" ; mkN "Madonna" ; } ; --*
lin madras_1_PN = variants {mkPN "Nadu" ; mkPN "Tâmil" ; } ; --*
lin madras_2_PN = mkPN "Chennai" ; --*
lin madrasa_1_N = mkN "madraçal" ; --*
lin madrid_PN = variants {mkPN "capital" ; mkPN "Madrid" ; mkPN "of" ; } ; --*
lin madrigalist_N = mkN "madrigalista" ; --*
lin madrigal_N = mkN "madrigal" ; --*
lin maelstrom_N = variants {mkN "espiral" ; mkN "funil" ; mkN "furacão" ; mkN "redemoinho" ; mkN "sorvedouro" ; mkN "tufão" ; mkN "turbilhão" ; mkN "voragem" ; mkN "vórtice" ; } ; --*
lin maenad_2_N = variants {mkN "Ménades" ; mkN "Mênades" ; } ; --*
lin maestro_N = mkN "mestre" ; --*
lin mafia_1_N = variants {mkN "Cosa" ; mkN "máfia" ; mkN "Nostra" ; } ; --*
lin mafia_2_N = variants {mkN "Mafia" ; mkN "Máfia" ; } ; --*
lin mafia_3_N = mkN "máfia" ; --*
lin mafioso_2_N = mkN "mafioso" ; --*
lin magazine_1_N = variants {mkN "jornal" ; mkN "revista" ; } ; --*
lin magazine_2_N = mkN "revista" ; --*
lin magazine_6_N = variants {mkN "cartucho" ; mkN "clip" ; mkN "holder" ; } ; --*
lin magenta_1_N = variants {mkN "magenta" ; mkN "Magenta" ; } ; --*
lin magenta_2_N = variants {mkN "Batalha" ; mkN "of" ; } ; --*
lin maggot_N = mkN "larva" ; --*
lin magic_1_N = variants {mkN "ilusionismo" ; mkN "magia" ; mkN "Magia" ; mkN "mágica" ; mkN "taumaturgia" ; } ; --*
lin magic_2_N = variants {mkN "ilusão" ; mkN "magia" ; mkN "trick" ; mkN "truque" ; } ; --*
lin magical_A = variants {mkA "mágico" ; mkA "que" ; } ; --*
lin magic_A = variants {mkA "mágico" ; mkA "que" ; } ; --*
lin magician_1_N = variants {mkN "ilusionista" ; mkN "Magician" ; } ; --*
lin magician_2_N = variants {mkN "assistente" ; mkN "bruxo" ; mkN "feiticeiro" ; mkN "Feiticeiro" ; mkN "mágico" ; mkN "mago" ; mkN "sortílego" ; mkN "taumaturgo" ; } ; --*
lin magisterial_2_A = mkA "mandão" ; --*
lin magisterial_3_A = mkA "distinto" ; --*
lin magistracy_N = mkN "magistratura" ; --*
lin magistrate_N = mkN "magistrado" ; --*
lin magma_N = variants {mkN "lava" ; mkN "magma" ; } ; --*
lin magnanimous_1_A = variants {mkA "brioso" ; mkA "magnânimo" ; } ; --*
lin magnanimous_2_A = variants {mkA "generoso" ; mkA "grande" ; mkA "magnânimo" ; } ; --*
lin magnate_N = variants {mkN "businessman" ; mkN "executive" ; mkN "leader" ; mkN "magnata" ; } ; --*
lin magnesia_N = variants {mkN "oxide" ; mkN "Óxido" ; } ; --*
lin magnesite_N = mkN "magnesita" ; --*
lin magnesium_N = variants {mkN "Magnesio" ; mkN "magnésio" ; mkN "number" ; } ; --*
lin magnet_1_N = variants {mkN "ímã" ; mkN "íman" ; mkN "magnete" ; } ; --*
lin magnet_2_N = variants {mkN "atração" ; mkN "feature" ; } ; --*
lin magnetic_1_A = variants {mkA "magnética" ; mkA "magnético" ; } ; --*
lin magnetic_2_A = mkA "magnético" ; --*
lin magnetic_3_A = mkA "magnético" ; --*
lin magnetic_4_A = mkA "magnético" ; --*
lin magnetic_5_A = variants {mkA "carismática" ; mkA "carismático" ; } ; --*
lin magnetism_1_N = variants {mkN "attraction" ; mkN "force" ; mkN "magnetismo" ; } ; --*
lin magnetism_2_N = mkN "magnetismo" ; --*
lin magnetite_N = variants {mkN "iron-ore" ; mkN "magnetita" ; } ; --*
lin magnetize_2_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "enfeitiçar") ; } ; --*
lin magnetometer_N = variants {mkN "Magnetometro" ; mkN "magnetómetro" ; mkN "Magnetómetro" ; mkN "Magnetômetro" ; } ; --*
lin magnetosphere_N = mkN "magnetosfera" ; --*
lin magnification_3_N = variants {mkN "exagero" ; mkN "hipérbole" ; } ; --*
lin magnification_4_N = variants {mkN "alargamento" ; mkN "ampliação" ; } ; --*
lin magnificat_N = mkN "Magnificat" ; --*
lin magnificence_2_N = mkN "fulgor" ; --*
lin magnificent_A = mkA "magnífico" ; --*
lin magnify_1_V2 = variants {mkV2 (mkV "amplificar") ; mkV2 (mkV "aumentar") ; } ; --*
lin magnify_2_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "exagerar") ; } ; --*
lin magnify_3_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "up") ; } ; --*
lin magniloquence_N = mkN "grandiosidade" ; --*
lin magnitude_1_N = variants {mkN "grandeza" ; mkN "magnitude" ; mkN "número" ; } ; --*
lin magnitude_2_N = variants {mkN "grandeza" ; mkN "magnitude" ; mkN "of" ; } ; --*
lin magnitude_3_N = variants {mkN "grandeza" ; mkN "magnitude" ; } ; --*
lin mag_N = variants {mkN "jornal" ; mkN "revista" ; } ; --*
lin magnolia_1_N = mkN "magnólia" ; --*
lin magnolia_2_N = mkN "magnólia" ; --*
lin magpie_1_N = variants {mkN "gralha" ; mkN "pega" ; mkN "pega-rabuda" ; } ; --*
lin magyar_A = mkA "húngaro" ; --*
lin magyarFem_1_N = variants {mkN "húngara" ; mkN "húngaro" ; } ; --*
lin magyarFem_2_N = variants {mkN "húngaro" ; mkN "língua" ; } ; --*
lin magyarMasc_1_N = variants {mkN "húngara" ; mkN "húngaro" ; } ; --*
lin magyarMasc_2_N = variants {mkN "húngaro" ; mkN "língua" ; } ; --*
lin maharaja_1_N = mkN "marajá" ; --*
lin mahjong_N = variants {mkN "mahjong" ; mkN "Mahjong" ; } ; --*
lin mahoe_1_N = variants {mkN "algodoeiro-da-praia" ; mkN "tiliaceus" ; } ; --*
lin mahogany_1_N = mkN "mogno" ; --*
lin mahogany_2_N = variants {mkN "mogno" ; mkN "tree" ; } ; --*
lin mahogany_3_N = variants {mkN "brown" ; mkN "lula" ; mkN "red" ; mkN "sépia" ; mkN "sienna" ; } ; --*
lin maid_1_N = variants {mkN "ama" ; mkN "arrumadeira" ; mkN "camareira" ; mkN "criada" ; mkN "empregada" ; } ; --*
lin maid_2_N = variants {mkN "donzela" ; mkN "moça" ; } ; --*
lin maiden_1_N = variants {mkN "donzela" ; mkN "moça" ; } ; --*
lin maiden_A = mkA "inaugural" ; --*
lin maidenhair_N = variants {mkN "avenca" ; mkN "fern" ; } ; --*
lin maidenhead_N = variants {mkN "hímen" ; mkN "membrane" ; } ; --*
lin maidenhead_PN = variants {mkPN "hímen" ; mkPN "membrane" ; } ; --*
lin maidservant_N = variants {mkN "ama" ; mkN "arrumadeira" ; mkN "camareira" ; mkN "criada" ; mkN "empregada" ; } ; --*
lin mail_1_N = mkN "correio" ; --*
lin mail_1_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "expedir") ; mkV2 (mkV "off") ; mkV2 (mkV "postar") ; } ; --*
lin mail_2_N = variants {mkN "correio" ; mkN "service" ; } ; --*
lin mail_2_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "mandar") ; } ; --*
lin mail_5_N = variants {mkN "armor" ; mkN "armour" ; mkN "mail" ; mkN "malha" ; } ; --*
lin mailbag_2_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin mailbox_1_N = variants {mkN "box" ; mkN "caixa" ; } ; --*
lin mailbox_2_N = variants {mkN "box" ; mkN "caixa" ; } ; --*
lin mailer_1_N = variants {mkN "Mailer" ; mkN "Norman" ; } ; --*
lin mailing_card_N = variants {mkN "card" ; mkN "Cartão" ; } ; --*
lin mailing_list_N = mkN "list" ; --*
lin mailman_N = variants {mkN "carrier" ; mkN "carteiro" ; mkN "correio" ; } ; --*
lin maim_V2 = mkV2 (mkV "mutilar") ; --*
lin main_2_A = variants {mkA "principal" ; mkA "proficiente" ; } ; --*
lin maine_PN = variants {mkPN "Maine" ; mkPN "Tree" ; } ; --*
lin mainframe_1_N = variants {mkN "computer" ; mkN "mainframe" ; } ; --*
lin mainframe_2_N = variants {mkN "CPU" ; mkN "processador" ; mkN "processing" ; mkN "processor" ; mkN "UCP" ; } ; --*
lin mainland_N = mkN "continente" ; --*
lin mainly_Adv = variants {mkAdv "especialmente" ; mkAdv "maiormente" ; mkAdv "notadamente" ; mkAdv "precipuamente" ; mkAdv "primariamente" ; mkAdv "principalmente" ; mkAdv "sobretudo" ; mkAdv "the" ; } ; --*
lin mainstay_1_N = mkN "pilar" ; --*
lin mainstay_2_N = mkN "ponto" ; --*
lin mainstay_3_N = variants {mkN "carro-chefe" ; mkN "principal" ; mkN "suporte" ; } ; --*
lin mainstream_N = variants {mkN "fluxo" ; mkN "Mainstream" ; mkN "pensamento" ; } ; --*
lin maintain_10_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "manter") ; mkV2 (mkV "observar") ; } ; --*
lin maintain_1_V2 = variants {mkV2 (mkV "conservar") ; mkV2 (mkV "manter") ; mkV2 (mkV "reter") ; } ; --*
lin maintain_2_V2 = variants {mkV2 (mkV "acautelar") ; mkV2 (mkV "up") ; } ; --*
lin maintain_3_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "sustentar") ; } ; --*
lin maintain_3_V = variants {mkV "manter" ; mkV "sustentar" ; } ; --*
lin maintain_4_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "sustentar") ; } ; --*
lin maintain_4_V = variants {mkV "manter" ; mkV "sustentar" ; } ; --*
lin maintain_4_VS = variants {mkVS (mkV "manter") ; mkVS (mkV "sustentar") ; } ; --*
lin maintain_5_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "manter") ; } ; --*
lin maintain_7_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "registrar") ; } ; --*
lin maintain_8_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "defender") ; mkV2 (mkV "manter") ; } ; --*
lin maintenance_1_N = mkN "manutenção" ; --*
lin maintenance_2_N = mkN "manutenção" ; --*
lin maintenance_3_N = mkN "pensão" ; --*
lin maintenance_4_N = mkN "sustentação" ; --*
lin maize_1_N = variants {mkN "corn" ; mkN "mays" ; mkN "milho" ; mkN "Milho" ; } ; --*
lin maize_2_N = variants {mkN "amarelo" ; mkN "limão" ; mkN "yellow" ; } ; --*
lin majestic_1_A = mkA "majestoso" ; --*
lin majestic_3_A = variants {mkA "imperial" ; mkA "real" ; } ; --*
lin majesty_N = variants {mkN "majestade" ; mkN "títulogeraldecortesia" ; } ; --*
lin major_1_N = mkN "major" ; --*
lin major_2_A = mkA "maior" ; --*
lin major_3_A = mkA "maior" ; --*
lin major_4_N = variants {mkN "área" ; mkN "especialização" ; } ; --*
lin major_5_A = mkA "maior" ; --*
lin major_7_A = mkA "maior" ; --*
lin major_domo_N = mkN "mordomo" ; --*
lin major_general_N = mkN "marechal" ; --*
lin majority_1_N = variants {mkN "ascendência" ; mkN "maioria" ; mkN "maioridade" ; } ; --*
lin majority_2_N = variants {mkN "maioria" ; mkN "majority" ; } ; --*
lin majority_3_N = variants {mkN "age" ; mkN "maioria" ; } ; --*
lin major_V = variants {mkV "diplomar" ; mkV "diplomar-se" ; } ; --*
lin make_10_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin make_11_V2 = mkV2 (mkV "fazer") ; --*
lin make_12_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "constituir") ; mkV2 (mkV "enquadrar") ; mkV2 (mkV "estabelecer") ; } ; --*
lin make_13_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin make_15_V2 = mkV2 (mkV "fabricar") ; --*
lin make_16_V2 = mkV2 (mkV "executar") ; --*
lin make_17_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "edificar") ; } ; --*
lin make_18_V2 = mkV2 (mkV "transformar") ; --*
lin make_19_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "conquistar") ; mkV2 (mkV "fazer") ; } ; --*
lin make_1_N = variants {mkN "classe" ; mkN "faça" ; mkN "make" ; mkN "tipo" ; } ; --*
lin make_20_V3 = variants {mkV3 (mkV "nomear") ; mkV3 (mkV "propor") ; } ; --*
lin make_23_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fazer") ; } ; --*
lin make_24_V2 = mkV2 (mkV "fazer") ; --*
lin make_27_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "up") ; } ; --*
lin make_29_V = variants {mkV "a" ; mkV "cagar" ; mkV "defecar" ; } ; --*
lin make_2_N = mkN "embaralhar" ; --*
lin make_2_V2A = variants {mkV2A (mkV "deixar") ; mkV2A (mkV "fazer") ; } ; --*
lin make_2_V2V = variants {mkV2V (mkV "deixar") ; mkV2V (mkV "fazer") ; } ; --*
lin make_2_V3 = variants {mkV3 (mkV "deixar") ; mkV3 (mkV "fazer") ; } ; --*
lin make_32_V2 = mkV2 (mkV "fazer") ; --*
lin make_34_V2 = mkV2 (mkV "fazer") ; --*
lin make_35_V = mkV "parecer" ; --*
lin make_38_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "fazer") ; } ; --*
lin make_39_V3 = variants {mkV3 (mkV "cozinhar") ; mkV3 (mkV "preparar") ; } ; --*
lin make_3_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "construir") ; mkV2 (mkV "criar") ; mkV2 (mkV "provocar") ; mkV2 (mkV "realizar") ; } ; --*
lin make_40_V2 = mkV2 (mkV "seduzir") ; --*
lin make_42_V = variants {mkV "atuar" ; mkV "believe" ; } ; --*
lin make_43_V2 = mkV2 (mkV "fazer") ; --*
lin make_49_V = variants {mkV "a" ; mkV "mijar" ; mkV "oneself" ; mkV "urinar" ; mkV "water" ; } ; --*
lin make_4_V2V = mkV2V (mkV "induzir") ; --*
lin make_5_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "provocar") ; } ; --*
lin make_6_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "criar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin make_9_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "instituir") ; } ; --*
lin make_believe_2_N = mkN "finja" ; --*
lin make_do_on_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "do") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; mkV2 (mkV "sobreviver") ; mkV2 (mkV "virar-se") ; } ; --*
lin make_for_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "for") ; mkV2 (mkV "trazer") ; } ; --*
lin make_into_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "fazer") ; } ; --*
lin make_it_1_V = variants {mkV "it" ; mkV "round" ; mkV "sobreviver" ; mkV "through" ; } ; --*
lin make_it_2_V = variants {mkV "alcançar" ; mkV "far" ; mkV "in" ; mkV "it" ; } ; --*
lin make_it_3_V = variants {mkV "it" ; mkV "passar" ; } ; --*
lin make_it_4_V = variants {mkV "at" ; mkV "chegar" ; } ; --*
lin make_it_5_V = mkV "fazer" ; --*
lin make_off_V = variants {mkV "desaparecer" ; mkV "escapar" ; mkV "esconder-se" ; mkV "off" ; mkV "sumir" ; } ; --*
lin make_of_V3 = variants {mkV3 (mkV "deixar") ; mkV3 (mkV "fazer") ; } ; --*
lin make_out_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin make_out_3_V2 = mkV2 (mkV "out") ; --*
lin make_out_5_V = variants {mkV "by" ; mkV "do" ; mkV "lidar" ; mkV "out" ; mkV "sobreviver" ; mkV "virar-se" ; } ; --*
lin make_out_6_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin make_out_7_V = variants {mkV "beijar" ; mkV "out" ; } ; --*
lin make_out_8_V2 = variants {mkV2 (mkV "encorpar") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin make_over_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "retrabalhar") ; } ; --*
lin make_over_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "refazer") ; mkV2 (mkV "remodelar") ; } ; --*
lin maker_1_N = mkN "fazedor" ; --*
lin maker_2_N = variants {mkN "Almighty" ; mkN "Senhor" ; mkN "Todo-Poderoso" ; } ; --*
lin maker_3_N = variants {mkN "business" ; mkN "casa" ; mkN "fabricante" ; } ; --*
lin makeshift_A = mkA "improvisado" ; --*
lin makeup_1_N = variants {mkN "maquiagem" ; mkN "paint" ; } ; --*
lin make_up_1_N = mkN "substituto" ; --*
lin make_up_1_V2 = variants {mkV2 (mkV "representar") ; mkV2 (mkV "up") ; } ; --*
lin make_up_2_N = variants {mkN "composição" ; mkN "composition" ; mkN "constituição" ; mkN "estrutura" ; } ; --*
lin makeup_2_N = mkN "substituto" ; --*
lin make_up_2_V2 = mkV2 (mkV "up") ; --*
lin makeup_3_N = variants {mkN "composição" ; mkN "composition" ; mkN "constituição" ; mkN "estrutura" ; } ; --*
lin make_up_3_N = variants {mkN "maquiagem" ; mkN "paint" ; } ; --*
lin make_up_3_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin make_up_5_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "up") ; } ; --*
lin make_up_5_V = variants {mkV "inventar" ; mkV "up" ; } ; --*
lin make_up_6_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "up") ; } ; --*
lin make_up_7_V2 = variants {mkV2 (mkV "contrabalançar") ; mkV2 (mkV "contrabalancear") ; mkV2 (mkV "corrigir") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin make_up_8_V = variants {mkV "conciliar" ; mkV "reconciliar" ; mkV "up" ; } ; --*
lin make_up_9_V2 = mkV2 (mkV "up") ; --*
lin makeweight_2_N = mkN "contrapeso" ; --*
lin making_1_N = variants {mkN "fabricação" ; mkN "fabrico" ; } ; --*
lin making_2_N = mkN "qualificação" ; --*
lin malachite_N = mkN "malaquita" ; --*
lin malacology_N = mkN "Malacologia" ; --*
lin maladroit_A = mkA "desajeitado" ; --*
lin malady_1_N = mkN "doença" ; --*
lin malady_2_N = variants {mkN "doença" ; mkN "enfermidade" ; mkN "enjoo" ; mkN "nausea" ; } ; --*
lin malaga_PN = variants {mkPN "Malaga" ; mkPN "Málaga" ; } ; --*
lin malaise_N = variants {mkN "mal" ; mkN "mal-estar" ; } ; --*
lin malamute_1_N = variants {mkN "malamute" ; mkN "Malamute" ; mkN "malamute-do-alasca" ; } ; --*
lin malapropism_N = mkN "malapropismo" ; --*
lin malaria_N = variants {mkN "Malaria" ; mkN "malária" ; mkN "Malária" ; mkN "paludismo" ; } ; --*
lin malawian_A = variants {mkA "malaui" ; mkA "malauiano" ; mkA "malauiense" ; mkA "malauista" ; mkA "malauita" ; mkA "malaviano" ; mkA "malavita" ; mkA "malawiano" ; mkA "malawiense" ; } ; --*
lin malawi_PN = variants {mkPN "Malaui" ; mkPN "Malavi" ; mkPN "Malávi" ; mkPN "Malawi" ; mkPN "of" ; } ; --*
lin malay_1_N = variants {mkN "malaio" ; mkN "Malaios" ; } ; --*
lin malay_2_N = mkN "malaio" ; --*
lin malay_A = mkA "malaio" ; --*
lin malayan_1_A = variants {mkA "malaio" ; mkA "malasiano" ; mkA "malásio" ; } ; --*
lin malayan_2_A = mkA "malaio" ; --*
lin malayan_N = variants {mkN "malaio" ; mkN "Malaios" ; } ; --*
lin malaya_PN = variants {mkPN "Malasia" ; mkPN "Malásia" ; } ; --*
lin malaysian_2_N = variants {mkN "Kebangsaan" ; mkN "Língua" ; mkN "Malaysia" ; mkN "Melayu" ; } ; --*
lin malaysian_A = variants {mkA "malaio" ; mkA "malasiano" ; mkA "malásio" ; } ; --*
lin malaysia_PN = variants {mkPN "Malasia" ; mkPN "Malásia" ; } ; --*
lin malcontent_A = mkA "rebelde" ; --*
lin male_1_A = variants {mkA "macho" ; mkA "varão" ; } ; --*
lin male_1_N = mkN "macho" ; --*
lin male_2_A = variants {mkA "macho" ; mkA "varão" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin male_2_N = variants {mkN "homem" ; mkN "macho" ; mkN "person" ; } ; --*
lin male_3_A = mkA "varão" ; --*
lin malediction_N = variants {mkN "imprecação" ; mkN "maldição" ; } ; --*
lin malefactor_N = variants {mkN "criminoso" ; mkN "fora-de-lei" ; } ; --*
lin malefic_A = variants {mkA "maligno" ; mkA "malvado" ; } ; --*
lin maleficence_2_N = mkN "falcatrua" ; --*
lin maleness_N = mkN "masculinidade" ; --*
lin malevolence_1_N = mkN "maldade" ; --*
lin malevolence_2_N = variants {mkN "maldade" ; mkN "malícia" ; } ; --*
lin malevolent_1_A = mkA "malevolente" ; --*
lin malevolent_2_A = variants {mkA "maligno" ; mkA "malvado" ; } ; --*
lin malfeasance_N = mkN "prevaricação" ; --*
lin malformation_1_N = variants {mkN "deformidade" ; mkN "malformação" ; } ; --*
lin malformation_2_N = mkN "malformação" ; --*
lin malformed_A = variants {mkA "deformado" ; mkA "disforme" ; } ; --*
lin malfunction_1_V = mkV "enguiçar" ; --*
lin malfunction_N = variants {mkN "disfunção" ; mkN "mau" ; } ; --*
lin malian_A = variants {mkA "malês" ; mkA "maliano" ; mkA "malinês" ; } ; --*
lin malian_N = mkN "Maliense" ; --*
lin malice_1_N = variants {mkN "maldade" ; mkN "malícia" ; } ; --*
lin malice_2_N = variants {mkN "maldade" ; mkN "malícia" ; } ; --*
lin malicious_A = variants {mkA "maldoso" ; mkA "malicioso" ; mkA "perverso" ; } ; --*
lin malign_1_A = variants {mkA "caluníe" ; mkA "maligno" ; } ; --*
lin malign_2_A = variants {mkA "maligno" ; mkA "malvado" ; } ; --*
lin malignancy_1_N = variants {mkN "malignidade" ; mkN "Malignidade" ; } ; --*
lin malignant_A = variants {mkA "canceroso" ; mkA "maligno" ; } ; --*
lin malignity_1_N = mkN "maldade" ; --*
lin malign_V2 = variants {mkV2 (mkV "difamar") ; mkV2 (mkV "through") ; } ; --*
lin mali_PN = variants {mkPN "Mali" ; mkPN "of" ; mkPN "Sudan" ; } ; --*
lin mall_1_N = mkN "passeio" ; --*
lin mall_2_N = variants {mkN "center" ; mkN "centre" ; mkN "centro" ; mkN "mall" ; mkN "shopping" ; } ; --*
lin mallard_N = variants {mkN "pato-real" ; mkN "platyrhynchos" ; } ; --*
lin malleability_N = variants {mkN "maleabilidade" ; mkN "plasticidade" ; mkN "plasticità" ; } ; --*
lin malleable_1_A = mkA "maleável" ; --*
lin malleable_2_A = variants {mkA "dúctil" ; mkA "maleável" ; } ; --*
lin mallet_3_N = mkN "malho" ; --*
lin malleus_N = mkN "martelo" ; --*
lin mallow_N = mkN "malva" ; --*
lin mallow_PN = mkPN "malva" ; --*
lin malmo_PN = mkPN "Malmö" ; --*
lin malnutrition_N = variants {mkN "desnutrição" ; mkN "subnutrição" ; } ; --*
lin malodor_1_N = variants {mkN "fedor" ; mkN "pejo" ; } ; --*
lin malodorous_1_A = variants {mkA "fedorento" ; mkA "malcheiroso" ; } ; --*
lin malodorousness_N = mkN "odor" ; --*
lin malpractice_1_N = mkN "negligência" ; --*
lin malt_1_N = variants {mkN "malte" ; mkN "milk" ; } ; --*
lin malt_2_N = variants {mkN "liquor" ; mkN "malte" ; } ; --*
lin malt_3_N = mkN "malte" ; --*
lin malta_1_PN = variants {mkPN "Malta" ; mkPN "of" ; } ; --*
lin malta_2_PN = variants {mkPN "Malta" ; mkPN "República" ; } ; --*
lin malted_N = variants {mkN "malte" ; mkN "milk" ; } ; --*
lin maltese_2_N = variants {mkN "language" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin maltese_4_N = variants {mkN "dog" ; mkN "Maltês" ; mkN "terrier" ; } ; --*
lin maltese_A = mkA "maltês" ; --*
lin malteseFem_N = mkN "maltês" ; --*
lin malteseMasc_N = mkN "maltês" ; --*
lin maltose_N = variants {mkN "maltose" ; mkN "sugar" ; } ; --*
lin maltreatment_N = variants {mkN "abuso" ; mkN "injúria" ; } ; --*
lin maltreat_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "destratar") ; mkV2 (mkV "maltratar") ; } ; --*
lin malvasia_N = mkN "malvasia" ; --*
lin mama_1_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin mamba_N = mkN "mamba" ; --*
lin mambo_N = mkN "mambo" ; --*
lin mamey_1_N = variants {mkN "Abricó-do-pará" ; mkN "Abricó-do-Pará" ; mkN "americana" ; mkN "apple" ; mkN "tree" ; } ; --*
lin mamma_1_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin mamma_2_N = variants {mkN "gland" ; mkN "Glândula" ; } ; --*
lin mammal_N = variants {mkN "mamífero" ; mkN "mamíferos" ; } ; --*
lin mammalogy_N = variants {mkN "Mamalogia" ; mkN "Mastozoologia" ; } ; --*
lin mammography_N = mkN "mamografia" ; --*
lin mammon_2_N = mkN "Mammon" ; --*
lin mammoth_N = mkN "mamute" ; --*
lin mammy_2_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin man_10_N = mkN "peça" ; --*
lin man_11_N = variants {mkN "beings" ; mkN "espécie" ; mkN "homem" ; mkN "humanidade" ; mkN "mundo" ; mkN "povo" ; mkN "race" ; } ; --*
lin man_1_N = variants {mkN "macho" ; mkN "male" ; mkN "varão" ; } ; --*
lin man_2_N = variants {mkN "man" ; mkN "militar" ; mkN "personnel" ; } ; --*
lin man_3_N = variants {mkN "homem" ; mkN "pessoa" ; } ; --*
lin man_4_N = variants {mkN "being" ; mkN "homem" ; mkN "hominídeo" ; mkN "ser" ; } ; --*
lin man_6_N = variants {mkN "homem" ; mkN "macho" ; mkN "varão" ; } ; --*
lin man_8_N = mkN "homem" ; --*
lin man_9_N = variants {mkN "Ilha" ; mkN "of" ; } ; --*
lin manacle_N = variants {mkN "algema" ; mkN "Algemas" ; } ; --*
lin manacle_V2 = mkV2 (mkV "algemar") ; --*
lin manage_1_VV = variants {mkVV (mkV "atingir") ; mkVV (mkV "negociar") ; mkVV (mkV "off") ; } ; --*
lin manage_2_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; mkV2 (mkV "guiar") ; mkV2 (mkV "lidar") ; } ; --*
lin manage_3_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "do") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; mkV2 (mkV "sobreviver") ; mkV2 (mkV "virar-se") ; } ; --*
lin manage_4_V2 = variants {mkV2 (mkV "chefiar") ; mkV2 (mkV "controlar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "manejar") ; mkV2 (mkV "supervisar") ; mkV2 (mkV "supervisionar") ; } ; --*
lin manage_5_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "obter") ; } ; --*
lin manage_5_V = variants {mkV "atingir" ; mkV "obter" ; } ; --*
lin manage_5_VV = variants {mkVV (mkV "atingir") ; mkVV (mkV "obter") ; } ; --*
lin manage_6_V2 = variants {mkV2 (mkV "administrar") ; mkV2 (mkV "safar-se") ; } ; --*
lin manage_7_V2 = variants {mkV2 (mkV "empunhar") ; mkV2 (mkV "manejar") ; } ; --*
lin manageable_1_A = mkA "manipulável" ; --*
lin manageable_2_A = variants {mkA "conquistável" ; mkA "realizável" ; } ; --*
lin management_1_N = variants {mkN "administração" ; mkN "gestão" ; } ; --*
lin management_2_N = mkN "administração" ; --*
lin manager_1_N = variants {mkN "director" ; mkN "diretor" ; mkN "dirigente" ; mkN "gerente" ; } ; --*
lin manager_2_N = variants {mkN "técnico" ; mkN "treinador" ; mkN "Treinador" ; mkN "Treinadores" ; } ; --*
lin manageress_N = mkN "gerente" ; --*
lin managership_N = mkN "gerência" ; --*
lin manakin_1_N = variants {mkN "manequim" ; mkN "model" ; mkN "modelo" ; } ; --*
lin manakin_2_N = variants {mkN "manequim" ; mkN "Manequim" ; } ; --*
lin manatee_N = variants {mkN "manatim" ; mkN "manatus" ; mkN "peixe-boi" ; } ; --*
lin manchester_1_PN = mkPN "Manchester" ; --*
lin manchester_2_PN = variants {mkPN "Manchester" ; mkPN "Manchéster" ; } ; --*
lin mancunian_A = mkA "manchesteriano" ; --*
lin mandala_N = mkN "mandala" ; --*
lin mandarin_1_N = variants {mkN "orange" ; mkN "reticulata" ; mkN "tangerina" ; } ; --*
lin mandarin_3_N = mkN "mandarim" ; --*
lin mandarin_4_N = mkN "mandarim" ; --*
lin mandarin_5_N = variants {mkN "bergamota" ; mkN "bergamoteira" ; mkN "mandarina" ; mkN "mexerica" ; mkN "mexeriqueira" ; mkN "orange" ; mkN "tangerina" ; } ; --*
lin mandarin_6_N = variants {mkN "Chinese" ; mkN "dialect" ; mkN "Mandarim" ; } ; --*
lin mandatary_N = mkN "mandatário" ; --*
lin mandate_1_N = mkN "mandato" ; --*
lin mandate_3_N = mkN "mandato" ; --*
lin mandator_N = mkN "mandatário" ; --*
lin mandatory_1_N = mkN "mandatário" ; --*
lin mandatory_A = variants {mkA "compulsório" ; mkA "essencial" ; mkA "forçoso" ; mkA "imprescindível" ; mkA "obrigatório" ; } ; --*
lin mandible_1_N = variants {mkN "bone" ; mkN "jaw" ; mkN "jawbone" ; mkN "Mandibula" ; mkN "Mandíbula" ; mkN "maxila" ; } ; --*
lin mandolin_N = variants {mkN "bandolim" ; mkN "Bandolim" ; } ; --*
lin mandrake_1_N = variants {mkN "Mandragora" ; mkN "root" ; } ; --*
lin mandrake_2_N = variants {mkN "apples" ; mkN "mandrágora" ; mkN "officinarum" ; } ; --*
lin mandrill_N = variants {mkN "Mandril" ; mkN "sphinx" ; } ; --*
lin mane_1_N = variants {mkN "crina" ; mkN "Crina" ; mkN "juba" ; } ; --*
lin mane_2_N = variants {mkN "cabelo" ; mkN "of" ; } ; --*
lin man_eater_1_N = mkN "canibal" ; --*
lin man_eater_2_N = variants {mkN "carcharias" ; mkN "shark" ; mkN "tubarão-branco" ; mkN "white" ; } ; --*
lin maneuver_1_N = variants {mkN "manobra" ; mkN "military" ; } ; --*
lin maneuver_2_N = variants {mkN "manobra" ; mkN "táctica" ; mkN "tática" ; } ; --*
lin maneuver_3_N = mkN "manobra" ; --*
lin maneuver_4_N = variants {mkN "maneuver" ; mkN "manobra" ; mkN "manoeuvre" ; } ; --*
lin maneuver_5_N = variants {mkN "action" ; mkN "manobra" ; } ; --*
lin manful_1_A = variants {mkA "macho" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin manful_2_A = variants {mkA "macho" ; mkA "varão" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin manfulness_N = variants {mkN "hombridade" ; mkN "virilidade" ; } ; --*
lin manganese_N = variants {mkN "Manganes" ; mkN "Manganés" ; mkN "manganês" ; mkN "number" ; } ; --*
lin mange_N = mkN "sarna" ; --*
lin manger_N = variants {mkN "cocho" ; mkN "manjedoura" ; } ; --*
lin mangle_1_V2 = mkV2 (mkV "lacerar") ; --*
lin mangle_2_V2 = mkV2 (mkV "desfigurar") ; --*
lin mangle_4_V2 = variants {mkV2 (mkV "desfigurar") ; mkV2 (mkV "mutilar") ; mkV2 (mkV "up") ; } ; --*
lin mangle_N = mkN "calandra" ; --*
lin mango_1_N = variants {mkN "indica" ; mkN "manga" ; mkN "tree" ; } ; --*
lin mango_2_N = variants {mkN "manga" ; mkN "Mangifera" ; } ; --*
lin mangosteen_2_N = mkN "mangostão" ; --*
lin mangrove_N = variants {mkN "mangle" ; mkN "mangue" ; mkN "Mangue-vermelho" ; } ; --*
lin manhandle_V2 = variants {mkV2 (mkV "espancar") ; mkV2 (mkV "maltratar") ; } ; --*
lin manhattan_1_PN = mkPN "Manhattan" ; --*
lin manhole_N = variants {mkN "bueiro" ; mkN "poço" ; mkN "Poço" ; } ; --*
lin manhood_2_N = mkN "humanidade" ; --*
lin manhood_3_N = mkN "virilidade" ; --*
lin mania_1_N = variants {mkN "cacoete" ; mkN "mania" ; } ; --*
lin mania_2_N = variants {mkN "disorder" ; mkN "mania" ; } ; --*
lin maniac_1_N = variants {mkN "louco" ; mkN "maníaco" ; } ; --*
lin maniac_2_N = mkN "maníaco" ; --*
lin maniacal_A = mkA "maníaco" ; --*
lin manicure_1_V2 = mkV2 (mkV "manicurar") ; --*
lin manicure_2_V2 = mkV2 (mkV "manicurar") ; --*
lin manicure_N = variants {mkN "manicuro" ; mkN "Manicuro" ; } ; --*
lin manifest_1_V2 = variants {mkV2 (mkV "certificar") ; mkV2 (mkV "demonstrar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "provar") ; } ; --*
lin manifest_3_V2 = mkV2 (mkV "manifestar") ; --*
lin manifest_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin manifestation_1_N = mkN "manifestação" ; --*
lin manifestation_2_N = mkN "manifestação" ; --*
lin manifestation_4_N = variants {mkN "manifestação" ; mkN "reflexão" ; } ; --*
lin manifestation_5_N = mkN "manifestação" ; --*
lin manifesto_N = variants {mkN "manifesto" ; mkN "pronunciamento" ; } ; --*
lin manifold_1_N = mkN "colector" ; --*
lin manifold_2_V2 = mkV2 (mkV "multiplicar") ; --*
lin manifold_3_N = mkN "variedade" ; --*
lin manikin_2_N = variants {mkN "manequim" ; mkN "model" ; mkN "modelo" ; } ; --*
lin manikin_3_N = variants {mkN "manequim" ; mkN "Manequim" ; } ; --*
lin manila_PN = variants {mkPN "Manila" ; mkPN "of" ; } ; --*
lin manipulate_2_V2 = variants {mkV2 (mkV "manejar") ; mkV2 (mkV "manipular") ; mkV2 (mkV "manusear") ; } ; --*
lin manipulate_3_V2 = variants {mkV2 (mkV "deturpar") ; mkV2 (mkV "falsear") ; mkV2 (mkV "falsificar") ; } ; --*
lin manipulate_5_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "manipular") ; } ; --*
lin manipulate_6_V2 = mkV2 (mkV "manipular") ; --*
lin manipulation_1_N = mkN "manipulação" ; --*
lin manipulation_2_N = variants {mkN "manejo" ; mkN "manipulação" ; } ; --*
lin manipulator_1_N = variants {mkN "manipulador" ; mkN "operador" ; } ; --*
lin manitoba_PN = mkPN "Manitoba" ; --*
lin mankind_N = variants {mkN "beings" ; mkN "espécie" ; mkN "homem" ; mkN "humanidade" ; mkN "mundo" ; mkN "povo" ; mkN "race" ; } ; --*
lin manlike_1_A = variants {mkA "macho" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin manlike_2_A = variants {mkA "macho" ; mkA "varão" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin manlike_3_A = mkA "antropóide" ; --*
lin manliness_N = variants {mkN "hombridade" ; mkN "virilidade" ; } ; --*
lin manly_1_A = variants {mkA "macho" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin manly_2_A = variants {mkA "macho" ; mkA "varão" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin manna_2_N = variants {mkN "food" ; mkN "from" ; mkN "maná" ; } ; --*
lin mannequin_1_N = variants {mkN "manequim" ; mkN "model" ; mkN "modelo" ; } ; --*
lin mannequin_2_N = variants {mkN "manequim" ; mkN "Manequim" ; } ; --*
lin manner_1_N = variants {mkN "estilo" ; mkN "maneira" ; } ; --*
lin manner_2_N = variants {mkN "maneira" ; mkN "manner" ; } ; --*
lin manner_3_N = mkN "classe" ; --*
lin mannered_A = mkA "artificioso" ; --*
lin mannerism_1_N = mkN "idiossincrasia" ; --*
lin mannerism_2_N = variants {mkN "ação" ; mkN "afetação" ; mkN "fingimento" ; } ; --*
lin mannerly_A = mkA "cortês" ; --*
lin manners_N = variants {mkN "maneira" ; mkN "modo" ; } ; --*
lin mannheim_PN = mkPN "Mannheim" ; --*
lin mannish_1_A = variants {mkA "varonil" ; mkA "viril" ; } ; --*
lin mannish_2_A = variants {mkA "varonil" ; mkA "viril" ; } ; --*
lin manoeuvre_1_N = variants {mkN "manobra" ; mkN "táctica" ; mkN "tática" ; } ; --*
lin manoeuvre_2_N = variants {mkN "manobra" ; mkN "military" ; } ; --*
lin manoeuvre_2_V2 = variants {mkV2 (mkV "canalizar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; } ; --*
lin manoeuvre_3_N = mkN "manobra" ; --*
lin manoeuvre_4_N = variants {mkN "maneuver" ; mkN "manobra" ; mkN "manoeuvre" ; } ; --*
lin manoeuvre_5_N = variants {mkN "action" ; mkN "manobra" ; } ; --*
lin manoeuvre_into_V3 = mkV3 (mkV "manobrar") ; --*
lin manoeuvre_VV = mkVV (mkV "manobrar") ; --*
lin man_of_war_1_N = variants {mkN "navio" ; mkN "of" ; } ; --*
lin man_of_war_2_N = variants {mkN "aguá-viva" ; mkN "man-of-war" ; mkN "medusa" ; } ; --*
lin manometer_N = variants {mkN "manómetro" ; mkN "manômetro" ; } ; --*
lin manpower_N = variants {mkN "força" ; mkN "force" ; mkN "homens" ; } ; --*
lin manse_1_N = variants {mkN "house" ; mkN "mansão" ; mkN "solar" ; } ; --*
lin mansfield_1_PN = variants {mkPN "Katherine" ; mkPN "Mansfield" ; } ; --*
lin mansfield_2_PN = mkPN "Mansfield" ; --*
lin mansion_1_N = variants {mkN "house" ; mkN "of" ; mkN "sign" ; mkN "signo" ; } ; --*
lin mansion_2_N = variants {mkN "house" ; mkN "mansão" ; mkN "solar" ; } ; --*
lin manslaughter_N = mkN "Homicidio" ; --*
lin manta_1_N = mkN "manta" ; --*
lin manta_2_N = variants {mkN "jamanta" ; mkN "ray" ; } ; --*
lin mantel_N = mkN "cornija" ; --*
lin mantelpiece_1_N = mkN "cornija" ; --*
lin manticore_1_N = variants {mkN "manticora" ; mkN "Manticora" ; mkN "Mantícora" ; } ; --*
lin mantis_1_N = variants {mkN "Louva" ; mkN "Louva-a-deus" ; mkN "mantídeo" ; } ; --*
lin mantissa_N = variants {mkN "mantissa" ; mkN "part" ; } ; --*
lin mantle_2_N = variants {mkN "Charles" ; mkN "Mantle" ; mkN "Mickey" ; } ; --*
lin mantle_3_N = mkN "manto" ; --*
lin mantle_5_N = mkN "manto" ; --*
lin mantle_6_N = mkN "cornija" ; --*
lin mantle_7_N = variants {mkN "cortina" ; mkN "reposteiro" ; } ; --*
lin mantra_1_N = mkN "mantra" ; --*
lin mantrap_1_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin mantrap_2_N = mkN "vide" ; --*
lin manual_1_A = mkA "manual" ; --*
lin manual_1_N = mkN "manual" ; --*
lin manual_2_A = mkA "manual" ; --*
lin manual_3_A = mkA "manual" ; --*
lin manufacture_1_N = variants {mkN "indústria" ; mkN "manufatura" ; } ; --*
lin manufacture_1_V2 = mkV2 (mkV "fabricar") ; --*
lin manufacture_2_N = mkN "fabricação" ; --*
lin manufacture_2_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "up") ; } ; --*
lin manufacture_4_V2 = mkV2 (mkV "manufaturar") ; --*
lin manufacturer_1_N = variants {mkN "business" ; mkN "casa" ; mkN "fabricante" ; } ; --*
lin manufacturer_2_N = variants {mkN "fabricante" ; mkN "produtor" ; } ; --*
lin manufacturing_N = mkN "fabricação" ; --*
lin manul_N = variants {mkN "cat" ; mkN "Gato-de-Pallas" ; mkN "manul" ; } ; --*
lin manumission_N = mkN "alforria" ; --*
lin manumit_V2 = variants {mkV2 (mkV "alforriar") ; mkV2 (mkV "emancipar") ; } ; --*
lin manure_N = variants {mkN "adubos" ; mkN "esterco" ; mkN "estrume" ; } ; --*
lin manuscript_1_N = mkN "manuscrito" ; --*
lin manuscript_2_N = variants {mkN "manuscrito" ; mkN "Manuscritos" ; } ; --*
lin manx_1_N = variants {mkN "Língua" ; mkN "manês" ; mkN "manquês" ; mkN "manx" ; } ; --*
lin manx_A = mkA "manês" ; --*
lin many_sided_3_A = mkA "interessante" ; --*
lin maoism_N = variants {mkN "Maoismo" ; mkN "maoísmo" ; mkN "Maoísmo" ; } ; --*
lin maoist_N = mkN "maoísta" ; --*
lin maori_1_N = variants {mkN "maori" ; mkN "Māori" ; } ; --*
lin maori_2_N = variants {mkN "Língua" ; mkN "maori" ; } ; --*
lin map_1_N = mkN "mapa" ; --*
lin map_2_N = variants {mkN "função" ; mkN "function" ; } ; --*
lin map_2_V2 = mkV2 (mkV "mapear") ; --*
lin maple_1_N = mkN "ácer" ; --*
lin maple_2_N = variants {mkN "ácer" ; mkN "bordo" ; mkN "roble" ; } ; --*
lin mapmaking_N = variants {mkN "cartografia" ; mkN "Cartografia" ; } ; --*
lin mapping_1_N = variants {mkN "função" ; mkN "function" ; } ; --*
lin mapping_2_N = variants {mkN "levantamentos" ; mkN "mapping" ; } ; --*
lin map_reader_N = mkN "leitor" ; --*
lin maquis_2_N = mkN "maquis" ; --*
lin mar_1_PN = mkPN "março" ; --*
lin mar_1_V2 = variants {mkV2 (mkV "deteriorar") ; mkV2 (mkV "estragar") ; } ; --*
lin mar_2_PN = mkPN "defeito" ; --*
lin mara_2_N = variants {mkN "mara" ; mkN "patagonum" ; } ; --*
lin marabou_2_N = mkN "marabou" ; --*
lin maracaibo_PN = variants {mkPN "Maracaibo" ; mkPN "Maracaíbo" ; } ; --*
lin maraca_N = mkN "maraca" ; --*
lin marasmus_N = variants {mkN "marasmo" ; mkN "Marasmo" ; } ; --*
lin marathon_1_N = variants {mkN "contest" ; mkN "maratona" ; } ; --*
lin marathon_2_N = variants {mkN "maratona" ; mkN "Maratona" ; } ; --*
lin marble_1_N = mkN "mármore" ; --*
lin marble_2_N = variants {mkN "berlinde" ; mkN "bola" ; } ; --*
lin march_1_V = variants {mkV "caminhar" ; mkV "marchar" ; } ; --*
lin march_3_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "marchar" ; } ; --*
lin march_4_V = mkV "manifestar-se" ; --*
lin march_5_V2 = mkV2 (mkV "alardear") ; --*
lin marchioness_1_N = mkN "marquesa" ; --*
lin mardi_gras_2_N = variants {mkN "Gras" ; mkN "Tuesday" ; } ; --*
lin mare_1_N = variants {mkN "égua" ; mkN "horse" ; } ; --*
lin margarin_2_N = mkN "margarina" ; --*
lin margarine_N = mkN "margarina" ; --*
lin margarita_N = mkN "Margarita" ; --*
lin margay_N = variants {mkN "cat" ; mkN "gato-maracajá" ; mkN "wiedi" ; } ; --*
lin marge_N = mkN "margarina" ; --*
lin marge_PN = mkPN "margarina" ; --*
lin margin_1_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "perímetro" ; } ; --*
lin margin_5_N = mkN "margem" ; --*
lin marginal_2_A = variants {mkA "fronteiriça" ; mkA "marginal" ; } ; --*
lin marginal_4_A = mkA "marginal" ; --*
lin marginalia_N = variants {mkN "Marginalia" ; mkN "marginália" ; } ; --*
lin marginalization_1_N = variants {mkN "marginalização" ; mkN "Marginalização" ; } ; --*
lin marginalize_1_V2 = mkV2 (mkV "marginalizar") ; --*
lin margrave_2_N = mkN "Margrave" ; --*
lin marguerite_1_N = variants {mkN "daisy" ; mkN "leucanthemum" ; mkN "margarida" ; mkN "vulgare" ; } ; --*
lin marigold_N = mkN "malmequer" ; --*
lin marihuana_1_N = variants {mkN "Cannabis" ; mkN "maconha" ; mkN "sativa" ; } ; --*
lin marihuana_2_N = variants {mkN "Canabis" ; mkN "Canábis" ; mkN "cânabis" ; mkN "erva" ; mkN "maconha" ; mkN "Maconha" ; } ; --*
lin marimba_N = variants {mkN "marimba" ; mkN "xilofone" ; } ; --*
lin marinade_N = variants {mkN "escabeche" ; mkN "marinada" ; } ; --*
lin marinade_V2 = mkV2 (mkV "marinar") ; --*
lin marina_N = variants {mkN "marina" ; mkN "marinas" ; } ; --*
lin marinate_V2 = mkV2 (mkV "marinar") ; --*
lin marine_1_A = mkA "marinho" ; --*
lin marine_1_N = variants {mkN "dog" ; mkN "Fuzileiros" ; mkN "soldier" ; } ; --*
lin marine_2_A = variants {mkA "marinho" ; mkA "marítimo" ; mkA "náutico" ; } ; --*
lin marine_2_N = mkN "fuzileiro" ; --*
lin marine_5_A = mkA "marinho" ; --*
lin mariner_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin marionette_N = variants {mkN "fantoche" ; mkN "marioneta" ; mkN "marionete" ; } ; --*
lin marital_A = variants {mkA "casado" ; mkA "conjugal" ; } ; --*
lin maritime_1_A = variants {mkA "marinho" ; mkA "marítimo" ; mkA "náutico" ; } ; --*
lin maritime_2_A = mkA "marítimo" ; --*
lin marjoram_1_N = variants {mkN "marjoram" ; mkN "Oregano" ; mkN "orégano" ; mkN "sweet" ; mkN "vulgare" ; } ; --*
lin marjoram_2_N = mkN "manjerona" ; --*
lin mark_10_N = variants {mkN "marco" ; mkN "ponto" ; } ; --*
lin mark_11_V2 = variants {mkV2 (mkV "indicar") ; mkV2 (mkV "marcar") ; } ; --*
lin mark_11_V3 = variants {mkV3 (mkV "indicar") ; mkV3 (mkV "marcar") ; } ; --*
lin mark_12_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin mark_13_N = variants {mkN "cicatriz" ; mkN "marca" ; } ; --*
lin mark_14_N = mkN "cruz" ; --*
lin mark_14_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "dar") ; } ; --*
lin mark_15_V2 = variants {mkV2 (mkV "marcar") ; mkV2 (mkV "pontuar") ; } ; --*
lin mark_15_V3 = variants {mkV3 (mkV "marcar") ; mkV3 (mkV "pontuar") ; } ; --*
lin mark_1_N = variants {mkN "classe" ; mkN "nota" ; } ; --*
lin mark_1_V2 = variants {mkV2 (mkV "etiquetar") ; mkV2 (mkV "rotular") ; } ; --*
lin mark_2_N = variants {mkN "marca" ; mkN "marcadores" ; mkN "selo" ; } ; --*
lin mark_2_V2 = mkV2 (mkV "assinalar") ; --*
lin mark_3_N = mkN "alvo" ; --*
lin mark_3_V2 = variants {mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; } ; --*
lin mark_4_N = mkN "marca" ; --*
lin mark_4_V2 = variants {mkV2 (mkV "comemorar") ; mkV2 (mkV "marcar") ; } ; --*
lin mark_5_V2 = mkV2 (mkV "marcar") ; --*
lin mark_6_N = variants {mkN "estigma" ; mkN "mancha" ; mkN "marca" ; } ; --*
lin mark_6_V2 = variants {mkV2 (mkV "denunciar") ; mkV2 (mkV "estigmatizar") ; } ; --*
lin mark_7_N = variants {mkN "Marco" ; mkN "mark" ; mkN "Mark" ; } ; --*
lin mark_7_V2 = variants {mkV2 (mkV "notar") ; mkV2 (mkV "observar") ; mkV2 (mkV "perceber") ; mkV2 (mkV "ver") ; } ; --*
lin mark_9_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin marked_1_A = mkA "marcado" ; --*
lin marker_2_N = variants {mkN "marca" ; mkN "marcadores" ; mkN "selo" ; } ; --*
lin market_1_N = variants {mkN "mercado" ; mkN "place" ; } ; --*
lin market_2_N = mkN "mercado" ; --*
lin market_3_N = variants {mkN "empório" ; mkN "feira" ; mkN "market" ; mkN "mercado" ; mkN "store" ; mkN "supermercado" ; } ; --*
lin market_4_V2 = mkV2 (mkV "comercializar") ; --*
lin market_5_N = variants {mkN "Marketplace" ; mkN "mercado" ; mkN "place" ; } ; --*
lin market_gardening_N = mkN "gardening" ; --*
lin marketing_1_N = mkN "venda" ; --*
lin marketing_2_N = variants {mkN "marketing" ; mkN "Marketing" ; mkN "mercadologia" ; } ; --*
lin marketing_3_N = mkN "marketing" ; --*
lin marketplace_1_N = variants {mkN "mercado" ; mkN "place" ; } ; --*
lin marketplace_2_N = variants {mkN "Marketplace" ; mkN "mercado" ; mkN "place" ; } ; --*
lin market_square_N = variants {mkN "market" ; mkN "marketplace" ; mkN "square" ; } ; --*
lin markhor_1_N = variants {mkN "Capra" ; mkN "falconeri" ; } ; --*
lin marking_1_N = variants {mkN "marca" ; mkN "marcadores" ; mkN "selo" ; } ; --*
lin marking_2_N = mkN "sinalização" ; --*
lin mark_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "verificar") ; } ; --*
lin mark_of_N2 = mkN2 (mkN "signo") noPrep ; --*
lin mark_out_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin marksman_N = variants {mkN "atirador" ; mkN "shot" ; } ; --*
lin mark_up_2_N = mkN "marcação" ; --*
lin marl_N = mkN "Marga" ; --*
lin marly_A = mkA "margoso" ; --*
lin marmalade_N = variants {mkN "conservas" ; mkN "geleia" ; mkN "geléia" ; } ; --*
lin marmoset_N = mkN "sagui" ; --*
lin marmot_N = mkN "marmota" ; --*
lin maroon_1_V2 = mkV2 (mkV "encalhar") ; --*
lin maroon_2_N = mkN "bordô" ; --*
lin maroon_2_V2 = mkV2 (mkV "isolar") ; --*
lin marquee_1_N = mkN "pavilhão" ; --*
lin marque_N = variants {mkN "name" ; mkN "nome" ; } ; --*
lin marquess_1_N = mkN "marquês" ; --*
lin marquess_2_N = mkN "marquês" ; --*
lin marquetry_N = mkN "marchetaria" ; --*
lin marquis_1_N = variants {mkN "Don" ; mkN "Marquis" ; mkN "Robert" ; } ; --*
lin marquis_2_N = mkN "marquês" ; --*
lin marriage_1_N = variants {mkN "casal" ; mkN "casamento" ; mkN "conúbio" ; mkN "matrimónio" ; mkN "relationship" ; } ; --*
lin marriage_2_N = variants {mkN "and" ; mkN "casal" ; mkN "couple" ; } ; --*
lin marriage_3_N = variants {mkN "casamento" ; mkN "ceremony" ; } ; --*
lin marriage_4_N = mkN "união" ; --*
lin marriageable_A = variants {mkA "casadoiro" ; mkA "núbil" ; } ; --*
lin married_1_A = mkA "casado" ; --*
lin married_2_A = variants {mkA "casado" ; mkA "conjugal" ; } ; --*
lin marrow_1_N = variants {mkN "marrow" ; mkN "medula" ; mkN "Medula" ; } ; --*
lin marrow_2_N = variants {mkN "abobrinha" ; mkN "marrow" ; mkN "squash" ; } ; --*
lin marrow_5_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin marry_1_V2 = variants {mkV2 (mkV "casar") ; mkV2 (mkV "esposar") ; mkV2 (mkV "hitched") ; mkV2 (mkV "juntar") ; mkV2 (mkV "married") ; mkV2 (mkV "up") ; } ; --*
lin marry_2_V2 = mkV2 (mkV "casar") ; --*
lin mars_1_PN = variants {mkPN "Marte" ; mkPN "Planet" ; } ; --*
lin mars_2_PN = mkPN "Marte" ; --*
lin marseille_1_N = mkN "Marselha" ; --*
lin marseilles_PN = mkPN "Marselha" ; --*
lin marsh_1_N = variants {mkN "brejo" ; mkN "lodaçal" ; mkN "marisma" ; mkN "pântano" ; mkN "pântanos" ; } ; --*
lin marsh_3_N = variants {mkN "marisma" ; mkN "Marsh" ; } ; --*
lin marshal_1_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "de") ; } ; --*
lin marshal_3_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "mobilizar") ; mkV2 (mkV "reunir") ; } ; --*
lin marshal_4_N = variants {mkN "Catlett" ; mkN "George" ; mkN "Marshall" ; } ; --*
lin marshal_5_N = variants {mkN "John" ; mkN "Marshall" ; } ; --*
lin marshmallow_N = mkN "marshmallow" ; --*
lin marsupial_N = variants {mkN "mammal" ; mkN "marsupiais" ; mkN "Marsupiais" ; } ; --*
lin marten_N = variants {mkN "cat" ; mkN "marta" ; } ; --*
lin martensite_N = mkN "Martensita" ; --*
lin martial_2_A = mkA "belicoso" ; --*
lin martial_3_A = mkA "marcial" ; --*
lin martin_4_N = variants {mkN "Dean" ; mkN "Martin" ; mkN "Paul" ; } ; --*
lin martin_4_PN = variants {mkPN "Dean" ; mkPN "Martin" ; mkPN "Paul" ; } ; --*
lin martini_N = variants {mkN "martini" ; mkN "martíni" ; } ; --*
lin mart_N = variants {mkN "Marketplace" ; mkN "mercado" ; mkN "place" ; } ; --*
lin martyr_1_N = variants {mkN "mártir" ; mkN "Mártires" ; } ; --*
lin martyr_2_N = mkN "mártir" ; --*
lin martyrdom_1_N = mkN "martírio" ; --*
lin martyrdom_2_N = variants {mkN "gólgota" ; mkN "martírio" ; } ; --*
lin marumi_N = variants {mkN "japonica" ; mkN "kumquat" ; mkN "Kumquat" ; } ; --*
lin marvel_1_V = variants {mkV "admirar" ; mkV "admirar-se" ; mkV "maravilhar" ; mkV "maravilhar-se" ; } ; --*
lin marvel_2_V = variants {mkV "estranhar" ; mkV "maravilhar-se" ; } ; --*
lin marvellous_1_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin marvellous_2_A = variants {mkA "maravilhoso" ; mkA "milagroso" ; mkA "miraculoso" ; } ; --*
lin marvellous_3_A = mkA "improvável" ; --*
lin marvel_N = variants {mkN "maravilha" ; mkN "milagre" ; } ; --*
lin marxism_N = mkN "Marxismo" ; --*
lin maryland_1_PN = variants {mkPN "Line" ; mkPN "Maryland" ; mkPN "State" ; } ; --*
lin maryland_2_PN = mkPN "Maryland" ; --*
lin mary_PN = variants {mkPN "Maria" ; mkPN "Mary" ; mkPN "Virgin" ; } ; --*
lin marzipan_N = mkN "marzipã" ; --*
lin mascara_N = mkN "rímel" ; --*
lin mascarpone_N = mkN "mascarpone" ; --*
lin mascot_N = variants {mkN "mascote" ; mkN "Mascote" ; mkN "Mascotes" ; } ; --*
lin masculine_1_A = mkA "masculina" ; --*
lin masculine_2_A = variants {mkA "macho" ; mkA "masculina" ; mkA "masculino" ; } ; --*
lin masculine_3_A = mkA "masculino" ; --*
lin masculinity_1_N = mkN "masculinidade" ; --*
lin masculinity_2_N = mkN "Masculinidade" ; --*
lin masculinization_1_N = mkN "virilização" ; --*
lin maser_N = mkN "Maser" ; --*
lin mash_1_V2 = mkV2 (mkV "esmagar") ; --*
lin mash_2_V2 = variants {mkV2 (mkV "passar") ; mkV2 (mkV "up") ; } ; --*
lin mash_3_V2 = variants {mkV2 (mkV "moer") ; mkV2 (mkV "triturar") ; } ; --*
lin mask_1_N = mkN "máscara" ; --*
lin mask_1_V2 = mkV2 (mkV "esconder") ; --*
lin mask_3_N = variants {mkN "baile" ; mkN "party" ; } ; --*
lin mask_3_V2 = variants {mkV2 (mkV "disfarçar") ; mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "mascarar") ; } ; --*
lin mask_4_N = mkN "máscara" ; --*
lin masochism_N = mkN "masoquismo" ; --*
lin masochist_N = mkN "masoquista" ; --*
lin mason_2_N = variants {mkN "James" ; mkN "Mason" ; mkN "Neville" ; } ; --*
lin mason_4_N = variants {mkN "escavador" ; mkN "mação" ; mkN "pedreiro" ; } ; --*
lin mason_5_N = variants {mkN "franco-maçom" ; mkN "maçom" ; } ; --*
lin masonic_1_A = variants {mkA "maçónico" ; mkA "maçônico" ; } ; --*
lin masonry_1_N = variants {mkN "alvenaria" ; mkN "pedraria" ; } ; --*
lin masonry_2_N = variants {mkN "francomaçonaria" ; mkN "maçonaria" ; mkN "Maçonaria" ; } ; --*
lin masonry_3_N = mkN "alvenaria" ; --*
lin masque_N = variants {mkN "baile" ; mkN "party" ; } ; --*
lin masquerade_1_N = variants {mkN "baile" ; mkN "party" ; } ; --*
lin masquerade_1_V = mkV "mascarar" ; --*
lin masquerade_2_N = variants {mkN "costume" ; mkN "disfarce" ; mkN "dress" ; } ; --*
lin masquerade_3_N = mkN "mascarada" ; --*
lin mass_1_N = mkN "peso" ; --*
lin mass_3_N = variants {mkN "cúmulo" ; mkN "massa" ; mkN "multidão" ; mkN "pilha" ; } ; --*
lin mass_4_N = mkN "missa" ; --*
lin mass_5_N = variants {mkN "massa" ; mkN "Massa" ; } ; --*
lin mass_6_N = variants {mkN "gente" ; mkN "great" ; mkN "massa" ; mkN "polloi" ; mkN "povo" ; } ; --*
lin mass_7_N = variants {mkN "extensão" ; mkN "quantidade" ; mkN "volume" ; } ; --*
lin mass_8_N = variants {mkN "missa" ; mkN "Missas" ; } ; --*
lin mass_9_N = mkN "Missa" ; --*
lin massachusetts_1_PN = variants {mkPN "Colony" ; mkPN "Massachusetts" ; mkPN "State" ; } ; --*
lin massachusetts_3_PN = variants {mkPN "Bay" ; mkPN "Massachusetts" ; } ; --*
lin massacre_N = variants {mkN "abate" ; mkN "assassinato" ; mkN "carnificina" ; mkN "massacre" ; mkN "murder" ; } ; --*
lin massacre_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "massacrar") ; mkV2 (mkV "trucidar") ; } ; --*
lin massage_2_V2 = mkV2 (mkV "massagear") ; --*
lin massage_N = variants {mkN "massagem" ; mkN "Massagem" ; } ; --*
lin massager_N = mkN "massagista" ; --*
lin massive_1_A = mkA "massivo" ; --*
lin massive_4_A = mkA "maciço" ; --*
lin mass_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin mast_1_N = mkN "mastro" ; --*
lin mast_3_N = mkN "bolota" ; --*
lin mastaba_1_N = mkN "mastaba" ; --*
lin mastectomy_N = mkN "mastectomia" ; --*
lin master_1_N = mkN "mestre" ; --*
lin master_1_V2 = variants {mkV2 (mkV "dominar") ; mkV2 (mkV "the") ; } ; --*
lin master_2_N = variants {mkN "castelão" ; mkN "senhor" ; } ; --*
lin master_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin master_3_N = mkN "vencedor" ; --*
lin master_3_V2 = variants {mkV2 (mkV "dirigir") ; mkV2 (mkV "dominar") ; mkV2 (mkV "reger") ; } ; --*
lin master_4_N = variants {mkN "chefe" ; mkN "mestre" ; mkN "patrão" ; } ; --*
lin master_5_N = mkN "reitor" ; --*
lin master_7_N = variants {mkN "capitão" ; mkN "captain" ; mkN "patrão" ; } ; --*
lin master_8_N = mkN "mestre" ; --*
lin master_9_N = variants {mkN "mestre" ; mkN "professor" ; } ; --*
lin master_at_arms_N = mkN "mestre" ; --*
lin masterful_A = mkA "consumado" ; --*
lin masterly_A = mkA "consumado" ; --*
lin mastermind_2_N = variants {mkN "gênia" ; mkN "gênio" ; } ; --*
lin mastermind_V2 = variants {mkV2 (mkV "engenhar") ; mkV2 (mkV "organizar") ; mkV2 (mkV "orquestrar") ; } ; --*
lin masterpiece_1_N = variants {mkN "obra" ; mkN "obra-prima" ; } ; --*
lin masterpiece_2_N = variants {mkN "obra" ; mkN "obra-prima" ; } ; --*
lin mastership_2_N = variants {mkN "maestria" ; mkN "mestria" ; } ; --*
lin mastery_1_N = variants {mkN "aptidão" ; mkN "controle" ; } ; --*
lin mastery_2_N = mkN "supremacia" ; --*
lin masticate_2_V2 = variants {mkV2 (mkV "mascar") ; mkV2 (mkV "mastigar") ; } ; --*
lin mastication_N = mkN "mastigação" ; --*
lin mastiff_N = mkN "mastim" ; --*
lin mastitis_N = mkN "mastite" ; --*
lin mastodon_1_N = mkN "mastodonte" ; --*
lin mastoiditis_N = mkN "mastoidite" ; --*
lin masturbate_1_V2 = mkV2 (mkV "masturbar") ; --*
lin masturbate_2_V2 = variants {mkV2 (mkV "bronha") ; mkV2 (mkV "masturbar") ; mkV2 (mkV "masturbar-se") ; mkV2 (mkV "off") ; } ; --*
lin masturbate_2_V = variants {mkV "bronha" ; mkV "masturbar" ; mkV "masturbar-se" ; mkV "off" ; } ; --*
lin masturbation_N = variants {mkN "Masturbaçao" ; mkN "masturbação" ; mkN "Masturbação" ; mkN "onanismo" ; } ; --*
lin mat_1_N = variants {mkN "capacho" ; mkN "carpete" ; mkN "tapete" ; } ; --*
lin mat_1_V2 = variants {mkV2 (mkV "emaranhar") ; mkV2 (mkV "misturar") ; } ; --*
lin mat_A = mkA "opaco" ; --*
lin match_1_N = variants {mkN "fósforo" ; mkN "match" ; mkN "palito" ; } ; --*
lin match_1_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "concordar") ; mkV2 (mkV "corresponder") ; } ; --*
lin match_2_N = variants {mkN "combate" ; mkN "jogo" ; mkN "luta" ; mkN "partida" ; } ; --*
lin match_3_V2 = variants {mkV2 (mkV "acoplar") ; mkV2 (mkV "casar") ; mkV2 (mkV "emparelhar") ; } ; --*
lin match_4_V2 = mkV2 (mkV "competir") ; --*
lin match_5_V2 = mkV2 (mkV "combinar") ; --*
lin match_6_N = mkN "partido" ; --*
lin match_7_N = variants {mkN "igual" ; mkN "par" ; mkN "pário" ; } ; --*
lin match_8_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "corresponder") ; } ; --*
lin match_9_V2 = variants {mkV2 (mkV "equiparar") ; mkV2 (mkV "igualar") ; } ; --*
lin matchet_N = variants {mkN "catana" ; mkN "Catana" ; mkN "facão" ; mkN "peixeira" ; } ; --*
lin matchless_A = variants {mkA "and" ; mkA "incomparável" ; mkA "sem" ; } ; --*
lin matchwood_1_N = mkN "farpa" ; --*
lin mate_10_N = mkN "xeque-mate" ; --*
lin mate_1_V = variants {mkV "acasalar" ; mkV "copular" ; } ; --*
lin mate_2_V2 = variants {mkV2 (mkV "acoplar") ; mkV2 (mkV "casar") ; mkV2 (mkV "emparelhar") ; } ; --*
lin mate_3_V2 = mkV2 (mkV "dar") ; --*
lin mate_7_N = variants {mkN "Chimarrao" ; mkN "paraguariensis" ; mkN "tea" ; } ; --*
lin mateFem_2_N = mkN "colega" ; --*
lin mateFem_3_N = mkN "parceiro" ; --*
lin mateFem_4_N = variants {mkN "colega" ; mkN "cónjuge" ; mkN "cônjuge" ; mkN "esposa" ; mkN "half" ; mkN "homem" ; mkN "marido" ; mkN "person" ; } ; --*
lin mateFem_8_N = mkN "colega" ; --*
lin mateMasc_2_N = mkN "colega" ; --*
lin mateMasc_3_N = mkN "parceiro" ; --*
lin mateMasc_4_N = variants {mkN "colega" ; mkN "cónjuge" ; mkN "cônjuge" ; mkN "esposa" ; mkN "half" ; mkN "homem" ; mkN "marido" ; mkN "person" ; } ; --*
lin mateMasc_8_N = mkN "colega" ; --*
lin material_1_N = mkN "materiais" ; --*
lin material_2_A = mkA "material" ; --*
lin material_2_N = variants {mkN "materiais" ; mkN "material" ; } ; --*
lin material_3_N = variants {mkN "fazenda" ; mkN "pano" ; mkN "tecido" ; mkN "têxteis" ; } ; --*
lin material_4_N = mkN "materiais" ; --*
lin material_5_A = variants {mkA "corpórea" ; mkA "corpóreo" ; } ; --*
lin material_6_A = mkA "substancial" ; --*
lin materialism_1_N = mkN "filistinismo" ; --*
lin materialism_2_N = mkN "materialismo" ; --*
lin materialistic_2_A = variants {mkA "burguês" ; mkA "burguesa" ; } ; --*
lin materialize_1_V = mkV "materializar" ; --*
lin maternal_1_A = variants {mkA "maternal" ; mkA "materno" ; } ; --*
lin maternal_2_A = mkA "materno" ; --*
lin maternal_3_A = variants {mkA "materno" ; mkA "parental" ; } ; --*
lin maternity_1_N = variants {mkN "embaraço" ; mkN "gravidez" ; } ; --*
lin maternity_2_N = mkN "maternidade" ; --*
lin mathematical_1_A = mkA "matemático" ; --*
lin mathematical_2_A = variants {mkA "matemático" ; mkA "numérico" ; } ; --*
lin mathematical_3_A = mkA "matemático" ; --*
lin mathematical_4_A = mkA "matemático" ; --*
lin mathematical_5_A = mkA "matemático" ; --*
lin mathematicianFem_N = mkN "matemático" ; --*
lin mathematicianMasc_N = mkN "matemático" ; --*
lin mathematics_N = variants {mkN "ciência" ; mkN "ciências" ; mkN "Matematica" ; mkN "matemática" ; } ; --*
lin math_N = variants {mkN "ciência" ; mkN "ciências" ; mkN "Matematica" ; mkN "matemática" ; } ; --*
lin maths_N = variants {mkN "ciência" ; mkN "ciências" ; mkN "Matematica" ; mkN "matemática" ; } ; --*
lin matriarch_1_N = mkN "matriarca" ; --*
lin matriarchy_N = mkN "Matriarcado" ; --*
lin matricide_2_N = variants {mkN "matricida" ; mkN "matricídio" ; } ; --*
lin matric_N = mkN "matrícula" ; --*
lin matriculate_V2 = mkV2 (mkV "matricular") ; --*
lin matriculate_V = mkV "matricular" ; --*
lin matriculation_N = mkN "matrícula" ; --*
lin matrimonial_A = variants {mkA "casado" ; mkA "conjugal" ; } ; --*
lin matrimony_1_N = variants {mkN "casal" ; mkN "casamento" ; mkN "conúbio" ; mkN "matrimónio" ; mkN "relationship" ; } ; --*
lin matrimony_2_N = mkN "casamento" ; --*
lin matrix_1_N = variants {mkN "matriz" ; mkN "Matrizes" ; } ; --*
lin matronymic_1_N = mkN "Matronímico" ; --*
lin matt_A = mkA "opaco" ; --*
lin matter_1_N = variants {mkN "caso" ; mkN "interesse" ; } ; --*
lin matter_2_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin matter_3_N = variants {mkN "matéria" ; mkN "substância" ; } ; --*
lin matter_4_N = mkN "problema" ; --*
lin matter_6_N = mkN "texto" ; --*
lin matter_of_fact_1_A = mkA "prosaico" ; --*
lin matter_of_fact_2_A = mkA "pragmático" ; --*
lin matter_V = variants {mkV "contar" ; mkV "importar" ; mkV "pesar" ; } ; --*
lin matthew_1_PN = variants {mkPN "Mateus" ; mkPN "Matthew" ; } ; --*
lin mattress_N = mkN "colchão" ; --*
lin maturate_1_V = mkV "amadurecer" ; --*
lin maturate_2_V = variants {mkV "envelhecer" ; mkV "on" ; } ; --*
lin maturation_1_N = variants {mkN "amadurecimento" ; mkN "maturação" ; } ; --*
lin maturation_2_N = variants {mkN "crescimento" ; mkN "ontogénese" ; mkN "ontogenia" ; } ; --*
lin maturation_3_N = mkN "supuração" ; --*
lin mature_1_A = variants {mkA "maduro" ; mkA "maturo" ; } ; --*
lin mature_1_V = mkV "amadurecer" ; --*
lin mature_3_A = variants {mkA "maduro" ; mkA "maturo" ; } ; --*
lin mature_4_A = variants {mkA "maduro" ; mkA "maturo" ; mkA "sazonado" ; } ; --*
lin mature_4_V2 = variants {mkV2 (mkV "amadurecer") ; mkV2 (mkV "madurar") ; } ; --*
lin mature_5_V = variants {mkV "envelhecer" ; mkV "on" ; } ; --*
lin mature_6_V = mkV "supurar" ; --*
lin maturity_1_N = mkN "maturidade" ; --*
lin maturity_2_N = mkN "maturidade" ; --*
lin maturity_3_N = variants {mkN "date" ; mkN "prazo" ; } ; --*
lin matutinal_A = variants {mkA "de" ; mkA "matutino" ; mkA "pela" ; } ; --*
lin matzo_1_N = variants {mkN "bread" ; mkN "hóstia" ; mkN "pão" ; } ; --*
lin maudlin_A = mkA "sentimental" ; --*
lin maul_2_V2 = mkV2 (mkV "desfigurar") ; --*
lin maul_N = variants {mkN "malho" ; mkN "marreta" ; } ; --*
lin maunder_2_V = variants {mkV "balbuciar" ; mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin maunder_3_V = mkV "tagarelar" ; --*
lin maundy_thursday_N = mkN "Thursday" ; --*
lin maundy_thursday_PN = mkPN "Thursday" ; --*
lin mauritanian_A = variants {mkA "mauriciano" ; mkA "mauritano" ; } ; --*
lin mauritania_PN = variants {mkPN "Mauritania" ; mkPN "Mauritânia" ; mkPN "Republic" ; } ; --*
lin mauritian_A = variants {mkA "mauriciano" ; mkA "mauritano" ; } ; --*
lin mauritius_1_PN = variants {mkPN "Mauricia" ; mkPN "Maurícia" ; mkPN "Maurício" ; mkPN "of" ; } ; --*
lin mausoleum_N = variants {mkN "mausoléu" ; mkN "Mausoléu" ; mkN "Mausoléus" ; } ; --*
lin maverick_1_N = mkN "rebelde" ; --*
lin mavis_N = variants {mkN "philomelos" ; mkN "thrush" ; mkN "turdo" ; } ; --*
lin mavis_PN = variants {mkPN "philomelos" ; mkPN "thrush" ; mkPN "turdo" ; } ; --*
lin mawkish_A = mkA "sentimental" ; --*
lin maw_N = variants {mkN "boca" ; mkN "goela" ; } ; --*
lin maxim_1_N = variants {mkN "adágio" ; mkN "aforismo" ; mkN "axioma" ; mkN "ditado" ; mkN "máxima" ; mkN "provérbio" ; } ; --*
lin maximal_A = mkA "maximo" ; --*
lin maximize_1_V2 = mkV2 (mkV "maximizar") ; --*
lin maximize_2_V2 = mkV2 (mkV "maximizar") ; --*
lin maximum_1_N = variants {mkN "limit" ; mkN "máximo" ; } ; --*
lin maximum_2_N = variants {mkN "best" ; mkN "limite" ; mkN "máximo" ; } ; --*
lin maximum_3_N = mkN "máximo" ; --*
lin maximum_A = mkA "maximo" ; --*
lin maxwell_2_N = variants {mkN "C." ; mkN "Clerk" ; mkN "James" ; } ; --*
lin maybe_Adv = variants {mkAdv "acaso" ; mkAdv "por" ; mkAdv "porventura" ; mkAdv "possivelmente" ; mkAdv "quiçá" ; mkAdv "talvez" ; mkAdv "vai" ; } ; --*
lin mayfly_1_N = mkN "Ephemeroptera" ; --*
lin mayonnaise_N = mkN "maionese" ; --*
lin mayo_PN = mkPN "maionese" ; --*
lin mayoress_2_N = mkN "prefeita" ; --*
lin mayor_N = variants {mkN "autarca" ; mkN "manager" ; } ; --*
lin maypole_N = mkN "Festa" ; --*
lin maypop_N = variants {mkN "incarnata" ; mkN "Passiflora" ; } ; --*
lin maze_1_N = mkN "labirinto" ; --*
lin mazed_A = variants {mkA "perplexo" ; mkA "sea" ; } ; --*
lin mazurka_2_N = mkN "mazurca" ; --*
lin mb_1_N = variants {mkN "megabit" ; mkN "Megabit" ; } ; --*
lin mb_2_N = variants {mkN "MB" ; mkN "megabyte" ; } ; --*
lin mb_3_N = variants {mkN "Mebibyte" ; mkN "MebiByte" ; mkN "megabyte" ; } ; --*
lin mccarthyism_N = mkN "Macartismo" ; --*
lin mc_N = variants {mkN "megahertz" ; mkN "MHz" ; mkN "per" ; } ; --*
lin md_1_N = variants {mkN "Mendelevio" ; mkN "mendelévio" ; mkN "number" ; } ; --*
lin md_2_N = variants {mkN "doutor" ; mkN "médico" ; } ; --*
lin md_3_N = variants {mkN "Line" ; mkN "Maryland" ; mkN "State" ; } ; --*
lin mead_1_N = variants {mkN "Margaret" ; mkN "Mead" ; } ; --*
lin mead_2_N = variants {mkN "George" ; mkN "Herbert" ; } ; --*
lin mead_3_N = variants {mkN "hidromel" ; mkN "Hidromel" ; } ; --*
lin meadow_N = variants {mkN "prado" ; mkN "Prado" ; } ; --*
lin meager_1_A = mkA "escasso" ; --*
lin meagre_A = mkA "escasso" ; --*
lin meal_1_N = variants {mkN "jantar" ; mkN "refeição" ; mkN "repasto" ; } ; --*
lin meal_2_N = mkN "refeição" ; --*
lin meal_3_N = mkN "farinha" ; --*
lin mealworm_N = mkN "Bicho-da-farinha" ; --*
lin mealy_bug_1_N = variants {mkN "bug" ; mkN "Cochonilha-farinhenta" ; } ; --*
lin mean_1_A = variants {mkA "média" ; mkA "médio" ; } ; --*
lin mean_1_VS = variants {mkVS (mkV "indicar") ; mkVS (mkV "querer") ; mkVS (mkV "significar") ; } ; --*
lin mean_2_A = mkA "mesquinho" ; --*
lin mean_3_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "significar") ; } ; --*
lin mean_4_V2 = mkV2 (mkV "pretender") ; --*
lin mean_6_VS = variants {mkVS (mkV "in") ; mkVS (mkV "of") ; mkVS (mkV "referir") ; } ; --*
lin mean_7_V2 = mkV2 (mkV "ser") ; --*
lin meander_1_N = mkN "meandro" ; --*
lin meander_V = variants {mkV "ir" ; mkV "vagar" ; } ; --*
lin meaning_1_N = variants {mkN "intenção" ; mkN "significação" ; mkN "significado" ; } ; --*
lin meaning_2_N = variants {mkN "intenção" ; mkN "sentido" ; mkN "significado" ; } ; --*
lin meaningful_A = mkA "significativo" ; --*
lin meaningless_1_A = mkA "sem" ; --*
lin meaningless_2_A = variants {mkA "fútil" ; mkA "inútil" ; mkA "nulidade" ; mkA "vão" ; } ; --*
lin meaninglessness_1_N = variants {mkN "besteira" ; mkN "disparate" ; mkN "insensatez" ; mkN "tolice" ; } ; --*
lin meanness_2_N = variants {mkN "parcimónia" ; mkN "Parcimônia" ; } ; --*
lin mean_N = variants {mkN "média" ; mkN "value" ; } ; --*
lin means_1_N = variants {mkN "caminho" ; mkN "ferramenta" ; mkN "jeito" ; mkN "maneira" ; mkN "meio" ; mkN "modo" ; } ; --*
lin means_2_N = mkN "ferramenta" ; --*
lin means_3_N = mkN "meios" ; --*
lin meantime_Adv = variants {mkAdv "entretanto" ; mkAdv "por" ; mkAdv "provisoriamente" ; mkAdv "the" ; } ; --*
lin meantime_N = mkN "intervalo" ; --*
lin mean_VV = mkVV (mkV "pretender") ; --*
lin meanwhile_1_Adv = mkAdv "enquanto" ; --*
lin meanwhile_2_Adv = variants {mkAdv "entretanto" ; mkAdv "por" ; mkAdv "provisoriamente" ; mkAdv "the" ; } ; --*
lin measles_N = variants {mkN "sarampo" ; mkN "Sarâmpo" ; } ; --*
lin measurable_1_A = mkA "mensurável" ; --*
lin measurable_2_A = variants {mkA "perceptível" ; mkA "que" ; } ; --*
lin measure_1_N = variants {mkN "medida" ; mkN "passo" ; } ; --*
lin measure_1_V2 = variants {mkV2 (mkV "medir") ; mkV2 (mkV "mensurar") ; mkV2 (mkV "out") ; } ; --*
lin measure_2_N = variants {mkN "magnitude" ; mkN "medida" ; mkN "número" ; mkN "quantia" ; mkN "quantidade" ; mkN "volume" ; } ; --*
lin measure_2_V2 = variants {mkV2 (mkV "mensurar") ; mkV2 (mkV "quantificar") ; } ; --*
lin measure_3_N = mkN "projecto" ; --*
lin measure_3_V2 = mkV2 (mkV "medir") ; --*
lin measure_4_N = variants {mkN "medição" ; mkN "medida" ; mkN "mensuração" ; } ; --*
lin measure_4_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "estimar") ; } ; --*
lin measure_5_N = variants {mkN "critério" ; mkN "padrões" ; } ; --*
lin measure_6_N = mkN "métrica" ; --*
lin measure_7_N = variants {mkN "medição" ; mkN "Metrologia" ; } ; --*
lin measure_8_N = variants {mkN "régua" ; mkN "rod" ; mkN "stick" ; } ; --*
lin measuredly_Adv = mkAdv "de" ; --*
lin measureless_A = mkA "sem" ; --*
lin measurement_N = variants {mkN "medição" ; mkN "medida" ; mkN "mensuração" ; } ; --*
lin measure_out_V2 = variants {mkV2 (mkV "medir") ; mkV2 (mkV "mensurar") ; mkV2 (mkV "out") ; } ; --*
lin measure_up_V2 = variants {mkV2 (mkV "qualificar") ; mkV2 (mkV "up") ; } ; --*
lin measure_up_V = variants {mkV "qualificar" ; mkV "up" ; } ; --*
lin meat_1_N = variants {mkN "carne" ; mkN "vianda" ; } ; --*
lin meat_3_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin meatball_N = variants {mkN "Almondega" ; mkN "almôndega" ; mkN "Almôndega" ; } ; --*
lin meaty_2_A = variants {mkA "substancial" ; mkA "substantivo" ; } ; --*
lin mebendazole_N = mkN "Mebendazol" ; --*
lin mecca_N = mkN "meca" ; --*
lin mecca_PN = variants {mkPN "Makkah" ; mkPN "Meca" ; } ; --*
lin mechanic_1_N = variants {mkN "mecânico" ; mkN "mechanic" ; } ; --*
lin mechanic_2_N = variants {mkN "mecânico" ; mkN "mechanic" ; mkN "monkey" ; } ; --*
lin mechanical_1_A = mkA "mecânico" ; --*
lin mechanical_2_A = variants {mkA "mecânico" ; mkA "skillful" ; } ; --*
lin mechanical_3_A = mkA "mecânico" ; --*
lin mechanic_A = mkA "mecânico" ; --*
lin mechanics_1_N = variants {mkN "mecânica" ; mkN "Mecânica" ; } ; --*
lin mechanics_2_N = variants {mkN "mecanica" ; mkN "mecanismo" ; } ; --*
lin mechanism_1_N = variants {mkN "mecanismo" ; mkN "mechanism" ; } ; --*
lin mechanism_2_N = variants {mkN "mecanica" ; mkN "mecanismo" ; } ; --*
lin mechanism_3_N = mkN "mecanismo" ; --*
lin mechanism_5_N = variants {mkN "máquina" ; mkN "mecanismo" ; } ; --*
lin mechanization_2_N = variants {mkN "Automaçao" ; mkN "automação" ; mkN "automatização" ; } ; --*
lin meconium_N = variants {mkN "Mecónio" ; mkN "mecônio" ; } ; --*
lin medalist_2_N = variants {mkN "medalhista" ; mkN "winner" ; } ; --*
lin medallion_1_N = mkN "medalhão" ; --*
lin medallion_4_N = variants {mkN "condecoração" ; mkN "medalha" ; mkN "wreath" ; } ; --*
lin medallist_2_N = variants {mkN "medalhista" ; mkN "winner" ; } ; --*
lin medal_N = variants {mkN "condecoração" ; mkN "medalha" ; mkN "wreath" ; } ; --*
lin medan_PN = mkPN "Medan" ; --*
lin medellin_PN = variants {mkPN "Medellin" ; mkPN "Medellín" ; } ; --*
lin mediaeval_1_A = mkA "medieval" ; --*
lin mediaeval_2_A = mkA "medieval" ; --*
lin median_N = variants {mkN "canteiro" ; mkN "mediana" ; mkN "value" ; } ; --*
lin mediastinum_N = mkN "mediastino" ; --*
lin mediate_2_A = variants {mkA "entre" ; mkA "intermediário" ; } ; --*
lin mediate_V2 = variants {mkV2 (mkV "interceder") ; mkV2 (mkV "mediar") ; } ; --*
lin mediate_V = variants {mkV "arbitrar" ; mkV "mediar" ; } ; --*
lin mediation_1_N = mkN "mediação" ; --*
lin mediation_2_N = mkN "mediação" ; --*
lin mediator_N = variants {mkN "intercessor" ; mkN "mediador" ; } ; --*
lin medic_1_N = variants {mkN "trevo" ; mkN "trifólio" ; } ; --*
lin medical_1_A = mkA "médico" ; --*
lin medical_2_A = mkA "médico" ; --*
lin medical_3_A = mkA "médico" ; --*
lin medicament_N = variants {mkN "droga" ; mkN "drug" ; mkN "medicamento" ; mkN "remédio" ; } ; --*
lin medicare_N = mkN "Medicare" ; --*
lin medicate_2_V2 = mkV2 (mkV "medicar") ; --*
lin medication_1_N = variants {mkN "droga" ; mkN "drug" ; mkN "medicamento" ; mkN "remédio" ; } ; --*
lin medication_2_N = mkN "remédio" ; --*
lin medicine_2_N = variants {mkN "droga" ; mkN "drug" ; mkN "medicamento" ; mkN "remédio" ; } ; --*
lin medicine_3_N = variants {mkN "Incisão" ; mkN "medicina" ; mkN "Medicina" ; mkN "of" ; mkN "remédio" ; } ; --*
lin medico_2_N = variants {mkN "doutor" ; mkN "médico" ; } ; --*
lin medieval_1_A = mkA "medieval" ; --*
lin medieval_2_A = mkA "medieval" ; --*
lin medieval_3_A = mkA "medieval" ; --*
lin medina_1_N = variants {mkN "Madinah" ; mkN "Medina" ; } ; --*
lin mediocre_1_A = mkA "medíocre" ; --*
lin mediocre_2_A = mkA "medíocre" ; --*
lin mediocre_3_A = mkA "medíocre" ; --*
lin meditate_1_V2 = variants {mkV2 (mkV "contemplar") ; mkV2 (mkV "over") ; mkV2 (mkV "refletir") ; } ; --*
lin meditate_1_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin meditate_2_V = variants {mkV "cogitar" ; mkV "contemplar" ; mkV "meditar" ; mkV "ponderar" ; } ; --*
lin meditation_1_N = mkN "meditação" ; --*
lin meditation_2_N = mkN "meditação" ; --*
lin mediterranean_A = variants {mkA "mediterrâneo" ; mkA "mediterrânico" ; } ; --*
lin medium_10_N = variants {mkN "comunicação" ; mkN "medium" ; } ; --*
lin medium_1_A = mkA "médio" ; --*
lin medium_1_N = variants {mkN "meios" ; mkN "mídia" ; } ; --*
lin medium_8_N = mkN "meio" ; --*
lin medium_9_N = mkN "médium" ; --*
lin medley_N = mkN "Pout-pourri" ; --*
lin medulla_1_N = mkN "mielina" ; --*
lin medulla_2_N = variants {mkN "Bulbo" ; mkN "oblongata" ; } ; --*
lin medullary_2_A = mkA "medular" ; --*
lin medusa_1_N = mkN "Medusa" ; --*
lin meerkat_1_N = variants {mkN "suricata" ; mkN "suricate" ; } ; --*
lin meet_11_V2 = variants {mkV2 (mkV "encostar") ; mkV2 (mkV "tocar") ; } ; --*
lin meet_11_V = variants {mkV "encostar" ; mkV "tocar" ; } ; --*
lin meet_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "into") ; mkV2 (mkV "ver") ; } ; --*
lin meet_3_V = variants {mkV "afluir" ; mkV "convergir" ; mkV "encontrar" ; } ; --*
lin meet_4_V2 = variants {mkV2 (mkV "satifazer") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "suprir") ; } ; --*
lin meet_5_V = mkV "reunir" ; --*
lin meet_6_V2 = mkV2 (mkV "conhecer") ; --*
lin meet_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "capaz" ; } ; --*
lin meeting_1_N = variants {mkN "meeting" ; mkN "reunião" ; } ; --*
lin meeting_2_N = variants {mkN "festa" ; mkN "reunião" ; mkN "together" ; } ; --*
lin meeting_3_N = mkN "encontro" ; --*
lin meeting_4_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; mkN "reunião" ; mkN "together" ; } ; --*
lin meeting_6_N = mkN "confluencia" ; --*
lin meeting_place_N = variants {mkN "fórum" ; mkN "newsgroup" ; mkN "place" ; } ; --*
lin meet_with_V2 = variants {mkV2 (mkV "encontrar") ; mkV2 (mkV "receber") ; } ; --*
lin megabit_N = variants {mkN "megabit" ; mkN "Megabit" ; } ; --*
lin megabyte_1_N = variants {mkN "MB" ; mkN "megabyte" ; } ; --*
lin megabyte_2_N = variants {mkN "Mebibyte" ; mkN "MebiByte" ; mkN "megabyte" ; } ; --*
lin megacolon_N = mkN "megacólon" ; --*
lin megacycle_N = variants {mkN "megahertz" ; mkN "MHz" ; mkN "per" ; } ; --*
lin megahertz_N = variants {mkN "megahertz" ; mkN "MHz" ; mkN "per" ; } ; --*
lin megakaryocyte_N = mkN "megacariócito" ; --*
lin megalith_N = variants {mkN "Monumento" ; mkN "structure" ; } ; --*
lin megalomania_N = mkN "megalomania" ; --*
lin megalopolis_N = mkN "megalópole" ; --*
lin megaphone_N = mkN "megafone" ; --*
lin megapode_N = variants {mkN "bird" ; mkN "builder" ; mkN "fowl" ; mkN "Megapodiidae" ; } ; --*
lin megaspore_N = mkN "megásporo" ; --*
lin meg_PN = variants {mkPN "milhão" ; mkPN "thousand" ; } ; --*
lin megrim_N = variants {mkN "enxaqueca" ; mkN "headache" ; } ; --*
lin meiosis_1_N = variants {mkN "division" ; mkN "meiose" ; mkN "miose" ; } ; --*
lin meiosis_2_N = mkN "litotes" ; --*
lin meitnerium_N = variants {mkN "109" ; mkN "Meitnerio" ; mkN "Meitnério" ; mkN "number" ; } ; --*
lin melamine_N = mkN "melamina" ; --*
lin melancholia_N = mkN "melancolia" ; --*
lin melancholic_A = mkA "melancólica" ; --*
lin melancholy_1_A = mkA "melancólica" ; --*
lin melancholy_1_N = mkN "melancolia" ; --*
lin melancholy_2_A = variants {mkA "escuro" ; mkA "lúgubre" ; mkA "sombrio" ; mkA "soturno" ; } ; --*
lin melanin_N = mkN "melanina" ; --*
lin melanocyte_N = mkN "melanócito" ; --*
lin melanoma_N = mkN "melanoma" ; --*
lin melanosis_N = mkN "melanismo" ; --*
lin melatonin_N = mkN "melatonina" ; --*
lin melbourne_2_PN = mkPN "Melbourne" ; --*
lin meld_3_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "fundir") ; mkV2 (mkV "misturar") ; } ; --*
lin melena_1_N = mkN "Melena" ; --*
lin meliorate_1_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "melhorar") ; } ; --*
lin meliorate_2_V = mkV "melhorar" ; --*
lin melioration_1_N = mkN "melhoramento" ; --*
lin melioration_2_N = mkN "melhora" ; --*
lin melioration_3_N = mkN "melhoramento" ; --*
lin mellow_1_A = mkA "relaxado" ; --*
lin mellow_3_A = mkA "doce" ; --*
lin mellowness_3_N = variants {mkN "maturidade" ; mkN "plenitude" ; mkN "riqueza" ; } ; --*
lin melodious_1_A = variants {mkA "melódico" ; mkA "melodioso" ; } ; --*
lin melodrama_N = mkN "melodrama" ; --*
lin melodramatic_1_A = mkA "melodramático" ; --*
lin melody_1_N = variants {mkN "line" ; mkN "melodia" ; mkN "phrase" ; mkN "toada" ; } ; --*
lin melody_2_N = variants {mkN "melodia" ; mkN "pattern" ; } ; --*
lin melon_1_N = variants {mkN "melão" ; mkN "meloeiro" ; } ; --*
lin melon_2_N = variants {mkN "melão" ; mkN "vine" ; } ; --*
lin melt_2_V = variants {mkV "amolecer" ; mkV "degelar" ; mkV "derreter" ; mkV "descongelar" ; } ; --*
lin melt_5_V = mkV "desvaneça-se" ; --*
lin meltdown_1_N = variants {mkN "derretimento" ; mkN "meltdown" ; } ; --*
lin meltdown_2_N = mkN "catástrofe" ; --*
lin melt_down_V2 = variants {mkV2 (mkV "derreter") ; mkV2 (mkV "down") ; mkV2 (mkV "fundir") ; } ; --*
lin melting_point_N = mkN "point" ; --*
lin melting_pot_2_N = variants {mkN "crisol" ; mkN "Forno" ; mkN "pot" ; } ; --*
lin member_1_N = variants {mkN "member" ; mkN "membro" ; } ; --*
lin member_2_N = mkN "membro" ; --*
lin member_3_N = mkN "membro" ; --*
lin member_5_N = variants {mkN "caralho" ; mkN "falo" ; mkN "membro" ; mkN "pênis" ; mkN "pinto" ; mkN "verga" ; } ; --*
lin membership_1_N = mkN "associação" ; --*
lin membership_2_N = variants {mkN "associação" ; mkN "sociedade" ; } ; --*
lin membrane_1_N = mkN "membrana" ; --*
lin membrane_2_N = variants {mkN "layer" ; mkN "membrana" ; } ; --*
lin membranous_1_A = mkA "membranoso" ; --*
lin meme_N = variants {mkN "mem" ; mkN "meme" ; } ; --*
lin memento_N = variants {mkN "lembrança" ; mkN "lembrancinha" ; } ; --*
lin memoir_2_N = mkN "Memórias" ; --*
lin memo_N = mkN "memorando" ; --*
lin memorable_A = variants {mkA "digna" ; mkA "memorável" ; } ; --*
lin memorandum_1_N = mkN "memorando" ; --*
lin memorial_1_N = mkN "comemoração" ; --*
lin memorial_3_N = variants {mkN "monumento" ; mkN "monumentos" ; } ; --*
lin memorialize_2_V2 = variants {mkV2 (mkV "comemorar") ; mkV2 (mkV "imortalizar") ; mkV2 (mkV "rememorar") ; } ; --*
lin memorize_1_V2 = variants {mkV2 (mkV "decorar") ; mkV2 (mkV "memorizar") ; mkV2 (mkV "saber") ; } ; --*
lin memory_1_N = mkN "memória" ; --*
lin memory_2_N = mkN "memória" ; --*
lin memory_3_N = mkN "memória" ; --*
lin memory_4_N = variants {mkN "board" ; mkN "memória" ; mkN "memory" ; mkN "storage" ; } ; --*
lin memory_5_N = variants {mkN "memória" ; mkN "Memória" ; } ; --*
lin memphis_2_PN = variants {mkPN "Menfis" ; mkPN "Mênfis" ; } ; --*
lin menace_1_N = mkN "ameaça" ; --*
lin menace_1_V2 = variants {mkV2 (mkV "ameaçar") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "imperilar") ; mkV2 (mkV "perigar") ; } ; --*
lin menace_2_N = mkN "ameaça" ; --*
lin menace_2_V2 = mkV2 (mkV "ameaçar") ; --*
lin menagerie_2_N = variants {mkN "garden" ; mkN "zôo" ; mkN "zoológico" ; } ; --*
lin mend_2_N = variants {mkN "conserto" ; mkN "reparação" ; mkN "reparo" ; } ; --*
lin mendacious_1_A = mkA "embusteiro" ; --*
lin mendacious_2_A = mkA "mentiroso" ; --*
lin mendelevium_N = variants {mkN "Mendelevio" ; mkN "mendelévio" ; mkN "number" ; } ; --*
lin mendicant_1_N = mkN "frade" ; --*
lin mendicant_2_N = variants {mkN "mendigo" ; mkN "pedinte" ; } ; --*
lin mending_2_N = variants {mkN "conserto" ; mkN "reparação" ; mkN "reparo" ; } ; --*
lin mend_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "emendar") ; mkV2 (mkV "on") ; mkV2 (mkV "reparar") ; mkV2 (mkV "up") ; } ; --*
lin mend_V = variants {mkV "cicatrizar" ; mkV "curar" ; mkV "melhorar" ; mkV "sarar" ; } ; --*
lin menhir_N = variants {mkN "menir" ; mkN "stone" ; } ; --*
lin menial_A = mkA "humilde" ; --*
lin meningioma_N = mkN "meningioma" ; --*
lin meningitis_N = mkN "meningite" ; --*
lin meningoencephalitis_N = mkN "meningoencefalite" ; --*
lin meninx_N = variants {mkN "meninges" ; mkN "Meninges" ; } ; --*
lin menopausal_A = variants {mkA "da" ; mkA "menopáusica" ; mkA "menopáusico" ; } ; --*
lin menopause_N = variants {mkN "menopausa" ; mkN "of" ; } ; --*
lin menorah_2_N = variants {mkN "Chanukiá" ; mkN "menorá" ; } ; --*
lin menorrhagia_N = mkN "Menorragia" ; --*
lin menstrual_A = variants {mkA "catamenial" ; mkA "menstrual" ; } ; --*
lin menstruate_V = mkV "menstruar" ; --*
lin menstruation_N = variants {mkN "Menstruacao" ; mkN "menstruação" ; mkN "Menstruação" ; mkN "regras" ; } ; --*
lin menstruum_2_N = variants {mkN "Menstruacao" ; mkN "menstruação" ; mkN "Menstruação" ; mkN "regras" ; } ; --*
lin mensurable_1_A = variants {mkA "medido" ; mkA "mensurável" ; } ; --*
lin mensurable_2_A = mkA "mensurável" ; --*
lin mensural_2_A = variants {mkA "medido" ; mkA "mensurável" ; } ; --*
lin mensuration_N = variants {mkN "medição" ; mkN "medida" ; mkN "mensuração" ; } ; --*
lin mental_1_A = mkA "mental" ; --*
lin mental_2_A = mkA "mental" ; --*
lin mental_4_A = mkA "mandibular" ; --*
lin mental_5_A = mkA "mental" ; --*
lin mentality_1_N = mkN "mentalidade" ; --*
lin mentality_2_N = variants {mkN "ability" ; mkN "agudez" ; mkN "agudeza" ; mkN "capacity" ; mkN "cérebro" ; mkN "inteligência" ; } ; --*
lin menthol_1_N = mkN "Mentol" ; --*
lin mention_1_N = variants {mkN "alusão" ; mkN "referência" ; } ; --*
lin mention_1_V = variants {mkV "aludir" ; mkV "citar" ; mkV "mencionar" ; mkV "up" ; } ; --*
lin mention_2_N = variants {mkN "citação" ; mkN "menção" ; mkN "referência" ; } ; --*
lin mention_2_VS = variants {mkVS (mkV "comentar") ; mkVS (mkV "mencionar") ; mkVS (mkV "notar") ; mkVS (mkV "remarcar") ; mkVS (mkV "reparar") ; } ; --*
lin mentor_N = variants {mkN "man" ; mkN "mentor" ; } ; --*
lin mentum_2_N = variants {mkN "chinchilla" ; mkN "mento" ; mkN "queixo" ; } ; --*
lin mentum_3_N = mkN "queixo" ; --*
lin menu_1_N = variants {mkN "cardápio" ; mkN "du" ; mkN "menu" ; mkN "of" ; } ; --*
lin menu_3_N = mkN "menu" ; --*
lin meow_N = variants {mkN "miado" ; mkN "miau" ; } ; --*
lin mephistophelian_1_A = mkA "diabólico" ; --*
lin mephitis_2_N = variants {mkN "fedor" ; mkN "pejo" ; } ; --*
lin mephitis_3_N = variants {mkN "cangambá" ; mkN "Mephitis" ; } ; --*
lin mercantile_1_A = mkA "mercantil" ; --*
lin mercantile_3_A = mkA "mercantil" ; --*
lin mercantilism_1_N = variants {mkN "mercantilismo" ; mkN "system" ; } ; --*
lin mercantilism_2_N = variants {mkN "comercialismo" ; mkN "comércio" ; mkN "mercantilismo" ; } ; --*
lin mercator_PN = variants {mkPN "Gerardo" ; mkPN "Kremer" ; mkPN "Mercator" ; } ; --*
lin mercenary_N = variants {mkN "mercenário" ; mkN "of" ; } ; --*
lin merchandise_N = variants {mkN "artigo" ; mkN "fazenda" ; mkN "mercadoria" ; mkN "mercadorias" ; mkN "produto" ; } ; --*
lin merchantman_N = variants {mkN "carga" ; mkN "ship" ; } ; --*
lin merchant_N = variants {mkN "comerciante" ; mkN "mercador" ; mkN "negociante" ; } ; --*
lin merciful_1_A = variants {mkA "compassivo" ; mkA "misericordioso" ; } ; --*
lin merciful_2_A = mkA "misericordioso" ; --*
lin mercifulness_1_N = mkN "compaixão" ; --*
lin mercifulness_2_N = variants {mkN "compaixão" ; mkN "misericórdia" ; mkN "piedade" ; } ; --*
lin mercifulness_3_N = variants {mkN "clemência" ; mkN "misericórdia" ; mkN "perdão" ; } ; --*
lin merciless_A = variants {mkA "imisericordioso" ; mkA "impiedoso" ; } ; --*
lin mercilessness_1_N = mkN "crueldade" ; --*
lin mercurial_1_A = variants {mkA "instável" ; mkA "volúvel" ; } ; --*
lin mercurial_3_A = variants {mkA "mercurial" ; mkA "mercuriano" ; } ; --*
lin mercury_1_N = variants {mkN "mercúrio" ; mkN "Mercúrio" ; mkN "number" ; } ; --*
lin mercury_1_PN = variants {mkPN "mercúrio" ; mkPN "Mercúrio" ; mkPN "number" ; } ; --*
lin mercury_2_N = variants {mkN "Mercúrio" ; mkN "Mércurio" ; } ; --*
lin mercury_2_PN = variants {mkPN "Mercúrio" ; mkPN "Mércurio" ; } ; --*
lin mercury_3_N = mkN "Mercúrio" ; --*
lin mercury_3_PN = mkPN "Mercúrio" ; --*
lin mercury_4_N = mkN "mercúrio" ; --*
lin mercury_4_PN = mkPN "mercúrio" ; --*
lin mercy_1_N = variants {mkN "clemência" ; mkN "misericórdia" ; mkN "perdão" ; } ; --*
lin mercy_2_N = variants {mkN "compaixão" ; mkN "misericórdia" ; mkN "piedade" ; } ; --*
lin mercy_3_N = mkN "compaixão" ; --*
lin mercy_4_N = mkN "misericórdia" ; --*
lin mercy_5_N = variants {mkN "misericórdia" ; mkN "piedade" ; } ; --*
lin mere_1_A = mkA "mero" ; --*
lin meretricious_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin meretricious_3_A = mkA "espúrio" ; --*
lin merge_1_V = variants {mkV "fundir-se" ; mkV "intercalar" ; mkV "unificar" ; mkV "unir" ; } ; --*
lin merge_2_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin merge_3_V2 = variants {mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin merger_1_N = mkN "fusão" ; --*
lin merger_2_N = variants {mkN "fusão" ; mkN "unificação" ; } ; --*
lin meridian_1_A = mkA "meridiano" ; --*
lin meridian_1_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin meridian_3_N = variants {mkN "meridiano" ; mkN "of" ; } ; --*
lin meringue_N = variants {mkN "merengue" ; mkN "Suspiro" ; } ; --*
lin meristem_N = mkN "meristema" ; --*
lin merit_1_N = variants {mkN "merecimento" ; mkN "mérito" ; mkN "virtude" ; } ; --*
lin merit_2_N = variants {mkN "merecimento" ; mkN "mérito" ; } ; --*
lin meritocracy_1_N = mkN "meritocracia" ; --*
lin meritocracy_2_N = mkN "meritocracia" ; --*
lin merit_V2 = variants {mkV2 (mkV "merecer") ; mkV2 (mkV "valer") ; } ; --*
lin mermaid_N = variants {mkN "sereia" ; mkN "sirene" ; } ; --*
lin merriment_1_N = mkN "alegria" ; --*
lin merriment_2_N = variants {mkN "divertimento" ; mkN "entreterimento" ; } ; --*
lin merry_1_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "jovial" ; } ; --*
lin merry_2_A = variants {mkA "festivo" ; mkA "vívido" ; } ; --*
lin merry_go_round_2_N = variants {mkN "carrossel" ; mkN "Carrossel" ; } ; --*
lin merrymaking_N = mkN "celebração" ; --*
lin merton_1_PN = variants {mkPN "Merton" ; mkPN "Thomas" ; } ; --*
lin mesa_1_N = mkN "Mesa" ; --*
lin mescal_1_N = variants {mkN "mescal" ; mkN "peiote" ; mkN "williamsii" ; } ; --*
lin mesenteric_A = mkA "mesentérico" ; --*
lin mesh_1_N = mkN "engranzamento" ; --*
lin mesh_1_V = variants {mkV "engajar" ; mkV "engatar" ; } ; --*
lin mesh_4_N = variants {mkN "malha" ; mkN "rede" ; mkN "trama" ; } ; --*
lin mesh_4_V2 = variants {mkV2 (mkV "enredar") ; mkV2 (mkV "laçar") ; } ; --*
lin mesh_4_V = variants {mkV "enredar" ; mkV "laçar" ; } ; --*
lin mesmerism_N = variants {mkN "hipnotismo" ; mkN "mesmerismo" ; } ; --*
lin mesmerist_N = mkN "hipnotizador" ; --*
lin mesmerize_1_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "enfeitiçar") ; } ; --*
lin mesmerize_2_V2 = variants {mkV2 (mkV "hipnotizar") ; mkV2 (mkV "mesmerizar") ; } ; --*
lin mesocarp_N = mkN "mesocarpo" ; --*
lin mesoderm_N = variants {mkN "mesoderma" ; mkN "mesoderme" ; } ; --*
lin mesolithic_A = mkA "mesolítico" ; --*
lin meson_N = variants {mkN "Meson" ; mkN "Méson" ; mkN "Mésons" ; } ; --*
lin mesosphere_N = mkN "mesosfera" ; --*
lin mesothelioma_N = mkN "mesotelioma" ; --*
lin mesothelium_N = mkN "mesotélio" ; --*
lin mesquite_1_N = mkN "Mesquite" ; --*
lin mess_1_N = mkN "bagunça" ; --*
lin mess_1_V2 = variants {mkV2 (mkV "desordenar") ; mkV2 (mkV "fazer") ; } ; --*
lin mess_1_V = variants {mkV "desordenar" ; mkV "fazer" ; } ; --*
lin mess_2_N = variants {mkN "dificuldade" ; mkN "merda" ; mkN "of" ; mkN "problema" ; } ; --*
lin mess_about_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "around") ; mkV2 (mkV "ficar") ; mkV2 (mkV "permanecer") ; } ; --*
lin mess_about_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin message_1_N = mkN "mensagem" ; --*
lin messenger_N = mkN "mensageiro" ; --*
lin messiah_1_N = mkN "messias" ; --*
lin messiah_2_N = mkN "Messias" ; --*
lin messiah_4_N = variants {mkN "Messias" ; mkN "O" ; } ; --*
lin messianic_A = mkA "messiânico" ; --*
lin messina_PN = mkPN "Messina" ; --*
lin messiness_1_N = mkN "bagunça" ; --*
lin mess_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin mess_up_3_V2 = variants {mkV2 (mkV "desorganizar") ; mkV2 (mkV "up") ; } ; --*
lin messy_1_A = variants {mkA "bagunçado" ; mkA "caótico" ; mkA "desordenado" ; } ; --*
lin mestizo_N = mkN "mestiço" ; --*
lin metabolic_1_A = mkA "metabólico" ; --*
lin metabolic_2_A = mkA "metabólico" ; --*
lin metabolism_1_N = variants {mkN "metabolismo" ; mkN "metamorfose" ; } ; --*
lin metabolism_2_N = variants {mkN "metabolismo" ; mkN "process" ; } ; --*
lin metabolite_N = variants {mkN "metabolito" ; mkN "metabólito" ; } ; --*
lin metabolize_1_V2 = mkV2 (mkV "metabolizar") ; --*
lin metacarpal_N = variants {mkN "bone" ; mkN "metacarpal" ; mkN "metacárpico" ; } ; --*
lin metacarpus_N = mkN "metacarpo" ; --*
lin metadata_N = variants {mkN "metadados" ; mkN "Metadados" ; mkN "metadata" ; } ; --*
lin metal_1_N = variants {mkN "element" ; mkN "metais" ; mkN "metal" ; } ; --*
lin metal_2_N = variants {mkN "liga" ; mkN "Liga" ; mkN "ligas" ; mkN "Ligas" ; } ; --*
lin metalanguage_N = variants {mkN "metalanguage" ; mkN "metalinguagem" ; mkN "Meta-linguagem" ; } ; --*
lin metalepsis_N = mkN "Metalepse" ; --*
lin metalhead_N = mkN "headbanger" ; --*
lin metallic_A = mkA "metálico" ; --*
lin metalloid_A = mkA "metalóide" ; --*
lin metallurgical_1_A = variants {mkA "metalúrgica" ; mkA "metalúrgico" ; } ; --*
lin metallurgy_N = variants {mkN "indústria" ; mkN "metalurgia" ; mkN "Metalurgia" ; } ; --*
lin metalwork_2_N = mkN "Indústria" ; --*
lin metalworker_N = mkN "ferreiro" ; --*
lin metalworking_N = mkN "Indústria" ; --*
lin metamorphic_1_A = mkA "metamórfico" ; --*
lin metamorphism_N = mkN "Metamorfismo" ; --*
lin metamorphose_1_V = variants {mkV "metamorfosear" ; mkV "transfigurar" ; } ; --*
lin metamorphose_2_V = variants {mkV "mudar" ; mkV "transformar" ; mkV "transmutar" ; } ; --*
lin metamorphose_V2 = variants {mkV2 (mkV "metamorfosear") ; mkV2 (mkV "transfigurar") ; } ; --*
lin metamorphosis_1_N = variants {mkN "metabolismo" ; mkN "metamorfose" ; } ; --*
lin metamorphosis_2_N = mkN "metamorfose" ; --*
lin metamorphosis_3_N = mkN "metamorfose" ; --*
lin metamorphous_1_A = mkA "metamórfico" ; --*
lin metaphase_2_N = variants {mkN "Metafase" ; mkN "Metáfase" ; } ; --*
lin metaphorical_1_A = mkA "metafórico" ; --*
lin metaphor_N = variants {mkN "Metafora" ; mkN "metáfora" ; mkN "Metáfora" ; mkN "Metáforas" ; } ; --*
lin metaphysical_1_A = variants {mkA "metafÃ­sico" ; mkA "metafísico" ; } ; --*
lin metaphysical_2_A = mkA "metafísico" ; --*
lin metaphysical_3_A = mkA "metafísico" ; --*
lin metaphysics_N = variants {mkN "metafísica" ; mkN "Metafísica" ; } ; --*
lin metaphysis_N = mkN "Metáfise" ; --*
lin metastability_N = mkN "Nível" ; --*
lin metastable_A = mkA "metaestável" ; --*
lin metastasis_N = mkN "metástase" ; --*
lin metastatic_A = mkA "metastático" ; --*
lin metatarsus_N = mkN "metatarso" ; --*
lin metempsychosis_N = mkN "metempsicose" ; --*
lin meteor_1_N = variants {mkN "estrela" ; mkN "meteoro" ; mkN "Meteoroide" ; mkN "meteoróide" ; mkN "Meteoróide" ; } ; --*
lin meteor_2_N = variants {mkN "estrela" ; mkN "meteoro" ; mkN "star" ; } ; --*
lin meteorite_N = variants {mkN "aerólito" ; mkN "meteorito" ; } ; --*
lin meteoroid_N = variants {mkN "estrela" ; mkN "meteoro" ; mkN "Meteoroide" ; mkN "meteoróide" ; mkN "Meteoróide" ; } ; --*
lin meteorology_1_N = variants {mkN "forecasting" ; mkN "meteorologia" ; mkN "previsão" ; } ; --*
lin meteorology_2_N = variants {mkN "meteorologia" ; mkN "Meteorologia" ; } ; --*
lin meter_1_N = variants {mkN "m" ; mkN "metro" ; } ; --*
lin meter_2_N = variants {mkN "contador" ; mkN "metro" ; } ; --*
lin meter_3_N = mkN "métrica" ; --*
lin meter_4_N = mkN "medidor" ; --*
lin metformin_N = mkN "metformina" ; --*
lin methadone_1_N = variants {mkN "heroin" ; mkN "hydrochloride" ; mkN "metadona" ; } ; --*
lin methamphetamine_N = variants {mkN "feed" ; mkN "hydrochloride" ; mkN "metanfetamina" ; mkN "Metanfetaminas" ; } ; --*
lin methane_N = mkN "metano" ; --*
lin methanol_N = variants {mkN "alcohol" ; mkN "metanol" ; mkN "spirit" ; } ; --*
lin methaqualone_N = mkN "Methaqualone" ; --*
lin methionine_N = mkN "metionina" ; --*
lin method_1_N = variants {mkN "metodo" ; mkN "método" ; mkN "Método" ; mkN "métodos" ; mkN "técnica" ; } ; --*
lin methodical_A = variants {mkA "metódica" ; mkA "metódico" ; } ; --*
lin methodism_N = variants {mkN "Igreja" ; mkN "Metodismo" ; } ; --*
lin methodist_A = mkA "metodista" ; --*
lin methodist_N = mkN "metodista" ; --*
lin methodological_A = mkA "metodológico" ; --*
lin methodology_1_N = variants {mkN "analysis" ; mkN "metodologia" ; } ; --*
lin methodology_2_N = variants {mkN "metodologia" ; mkN "Metodologia" ; mkN "Metodólogia" ; mkN "metodologias" ; } ; --*
lin methotrexate_N = variants {mkN "metotrexato" ; mkN "sodium" ; } ; --*
lin methuselah_1_PN = mkPN "Matusalém" ; --*
lin methuselah_2_PN = variants {mkPN "avô" ; mkPN "man" ; mkPN "velho" ; } ; --*
lin methylenedioxymethamphetamine_N = variants {mkN "êxtase" ; mkN "Metilenodioximetanfetamina" ; } ; --*
lin methyl_N = variants {mkN "group" ; mkN "metil" ; mkN "radical" ; } ; --*
lin methylphenidate_N = variants {mkN "metilfenidato" ; mkN "Ritalina" ; } ; --*
lin metic_N = mkN "metecos" ; --*
lin meticulous_1_A = variants {mkA "meticulosa" ; mkA "meticuloso" ; } ; --*
lin meticulous_2_A = mkA "cuidadoso" ; --*
lin metonymy_N = variants {mkN "Metonimia" ; mkN "metonímia" ; mkN "Metonímia" ; } ; --*
lin metre_1_N = variants {mkN "m" ; mkN "metro" ; } ; --*
lin metre_2_N = mkN "métrica" ; --*
lin metre_3_N = mkN "medidor" ; --*
lin metric_1_A = mkA "métrico" ; --*
lin metric_2_A = mkA "métrico" ; --*
lin metrical_1_A = mkA "métrico" ; --*
lin metrical_2_A = mkA "métrico" ; --*
lin metricize_1_V2 = mkV2 (mkV "metrificar") ; --*
lin metricize_2_V2 = mkV2 (mkV "metrificar") ; --*
lin metrology_N = variants {mkN "metrologia" ; mkN "Metrologia" ; } ; --*
lin metronidazole_N = mkN "metronidazol" ; --*
lin metro_N = variants {mkN "metro" ; mkN "metrô" ; mkN "metropolitano" ; mkN "system" ; } ; --*
lin metronome_N = mkN "metrônomo" ; --*
lin metropolis_1_N = variants {mkN "center" ; mkN "centro" ; mkN "cidade" ; mkN "metrópole" ; mkN "município" ; } ; --*
lin metropolis_2_N = variants {mkN "cidade" ; mkN "metrópole" ; mkN "metrópoles" ; } ; --*
lin metropolitan_1_N = mkN "metropolitano" ; --*
lin metropolitan_A = mkA "urbano" ; --*
lin mettle_N = variants {mkN "coragem" ; mkN "nervo" ; } ; --*
lin mew_1_N = variants {mkN "miado" ; mkN "miau" ; } ; --*
lin mew_1_V = mkV "miar" ; --*
lin mexican_A = mkA "mexicano" ; --*
lin mexican_N = variants {mkN "mexicana" ; mkN "mexicano" ; mkN "Mexicano" ; } ; --*
lin mexico_city_PN = variants {mkPN "capital" ; mkPN "City" ; mkPN "de" ; mkPN "of" ; } ; --*
lin mexico_PN = variants {mkPN "Mexican" ; mkPN "MEXICO" ; mkPN "México" ; } ; --*
lin mezuzah_1_N = mkN "mezuzá" ; --*
lin mezzanine_1_N = variants {mkN "balcony" ; mkN "Mezzanino" ; } ; --*
lin mezzo_soprano_2_N = variants {mkN "Mezzo" ; mkN "Mezzosoprano" ; mkN "Mezzo-soprano" ; mkN "Mezzo-sopranos" ; } ; --*
lin mg_2_N = variants {mkN "Magnesio" ; mkN "magnésio" ; mkN "number" ; } ; --*
lin mho_N = variants {mkN "ohm" ; mkN "siemens" ; } ; --*
lin mi_1_N = variants {mkN "infarct" ; mkN "infarction" ; mkN "infarto" ; } ; --*
lin mi_2_N = variants {mkN "mi" ; mkN "mile" ; mkN "milha" ; } ; --*
lin mi_3_N = variants {mkN "mi" ; mkN "mile" ; mkN "milha" ; mkN "nautical" ; mkN "nó" ; } ; --*
lin mi_4_N = variants {mkN "mi" ; mkN "mile" ; mkN "milha" ; } ; --*
lin mi_5_N = variants {mkN "Lakes" ; mkN "Michigan" ; mkN "State" ; } ; --*
lin mi_7_N = variants {mkN "Intelligence" ; mkN "MI6" ; } ; --*
lin miami_2_PN = mkPN "Miami" ; --*
lin mica_N = mkN "mica" ; --*
lin micelle_N = mkN "micela" ; --*
lin michaelmas_N = variants {mkN "29" ; mkN "Day" ; mkN "dia" ; } ; --*
lin michaelmas_PN = variants {mkPN "29" ; mkPN "Day" ; mkPN "dia" ; } ; --*
lin michael_PN = variants {mkPN "Arcanjo" ; mkPN "Maicol" ; mkPN "Michael" ; mkPN "Miguel" ; } ; --*
lin michigan_1_PN = variants {mkPN "Lakes" ; mkPN "Michigan" ; mkPN "State" ; } ; --*
lin michigan_2_PN = variants {mkPN "Lago" ; mkPN "Michigan" ; } ; --*
lin mickle_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin miconazole_N = mkN "Miconazol" ; --*
lin microbe_N = mkN "micróbio" ; --*
lin microbiologist_N = mkN "Microbiologistas" ; --*
lin microbiology_N = variants {mkN "microbiologia" ; mkN "Microbiologia" ; } ; --*
lin microcephaly_1_N = mkN "microcefalia" ; --*
lin microcosm_N = mkN "microcosmo" ; --*
lin microeconomics_N = mkN "Microeconomia" ; --*
lin microelectronics_N = variants {mkN "microelectrónica" ; mkN "microelectrônica" ; mkN "microeletrónica" ; mkN "microeletrônica" ; } ; --*
lin microevolution_N = mkN "microevolução" ; --*
lin microfilm_N = mkN "microfilme" ; --*
lin microglia_N = mkN "Micróglia" ; --*
lin micrometeorite_N = mkN "micrometeorito" ; --*
lin micrometer_1_N = variants {mkN "micrómetro" ; mkN "micrômetro" ; } ; --*
lin micrometer_2_N = variants {mkN "caliper" ; mkN "gauge" ; mkN "micrômetro" ; } ; --*
lin micron_N = variants {mkN "micrómetro" ; mkN "micrômetro" ; } ; --*
lin micronutrient_N = mkN "micronutriente" ; --*
lin microorganism_1_N = variants {mkN "microorganismo" ; mkN "microrganismo" ; } ; --*
lin micropaleontology_N = variants {mkN "micropaleontologia" ; mkN "Micropaleontologia" ; } ; --*
lin micropenis_N = variants {mkN "Micropénis" ; mkN "micropênis" ; } ; --*
lin microphone_N = mkN "microfone" ; --*
lin microprocessor_N = variants {mkN "microprocessador" ; mkN "Microprocessadores" ; } ; --*
lin microscope_N = mkN "microscópio" ; --*
lin microscopic_1_A = mkA "microscópico" ; --*
lin microscopic_2_A = mkA "microscópico" ; --*
lin microscopic_4_A = mkA "microscópico" ; --*
lin microscopical_1_A = mkA "microscópico" ; --*
lin microscopical_2_A = mkA "microscópico" ; --*
lin microscopical_3_A = mkA "microscópico" ; --*
lin microscopy_N = variants {mkN "microscopia" ; mkN "Microscopia" ; } ; --*
lin microsecond_N = mkN "Microssegundo" ; --*
lin microtome_N = mkN "Micrótomo" ; --*
lin microtubule_N = mkN "microtúbulo" ; --*
lin microwave_1_N = variants {mkN "microonda" ; mkN "microondas" ; mkN "micro-ondas" ; } ; --*
lin microwave_2_N = variants {mkN "forno" ; mkN "Forno" ; mkN "microondas" ; mkN "oven" ; } ; --*
lin micturition_N = variants {mkN "micção" ; mkN "Micção" ; mkN "urina" ; } ; --*
lin midafternoon_N = mkN "meio" ; --*
lin midazolam_N = mkN "Midazolam" ; --*
lin midbrain_N = mkN "mesencéfalo" ; --*
lin midday_N = variants {mkN "meio-dia" ; mkN "noon" ; } ; --*
lin midden_1_N = variants {mkN "cascal" ; mkN "midden" ; } ; --*
lin midden_2_N = mkN "sambaqui" ; --*
lin middle_1_A = variants {mkA "entre" ; mkA "intermediário" ; } ; --*
lin middle_1_N = mkN "jazida" ; --*
lin middle_2_N = mkN "meio" ; --*
lin middle_3_A = mkA "médio" ; --*
lin middle_4_A = mkA "mediano" ; --*
lin middle_class_A = mkA "classe" ; --*
lin middlemanFem_2_N = mkN "interlocutor" ; --*
lin middlemanFem_3_N = mkN "intermediária" ; --*
lin middlemanMasc_2_N = mkN "interlocutor" ; --*
lin middlemanMasc_3_N = mkN "intermediária" ; --*
lin middleton_PN = variants {mkPN "Middleton" ; mkPN "Thomas" ; } ; --*
lin middling_Adv = variants {mkAdv "com" ; mkAdv "razoavelmente" ; } ; --*
lin middling_A = mkA "medíocre" ; --*
lin middy_N = variants {mkN "blouse" ; mkN "marujo" ; } ; --*
lin midfield_N = mkN "meio-campo" ; --*
lin midget_N = variants {mkN "anã" ; mkN "anão" ; } ; --*
lin midland_1_N = mkN "Midland" ; --*
lin midnight_N = variants {mkN "Meia" ; mkN "meia-noite" ; mkN "Meia-noite" ; } ; --*
lin midriff_2_N = variants {mkN "diafragma" ; mkN "membrana" ; } ; --*
lin midshipman_N = variants {mkN "guarda-marinha" ; mkN "Guarda-Marinha" ; } ; --*
lin midst_N = variants {mkN "entre" ; mkN "interior" ; } ; --*
lin midsummer_N = variants {mkN "21" ; mkN "solstice" ; } ; --*
lin midterm_2_N = mkN "meio-termo" ; --*
lin midway_2_N = variants {mkN "Batalha" ; mkN "of" ; } ; --*
lin midweek_1_N = mkN "quarta-feira" ; --*
lin midwife_N = mkN "parteira" ; --*
lin midwifery_1_N = variants {mkN "obstetrícia" ; mkN "Obstetrícia" ; } ; --*
lin midwinter_N = mkN "meio" ; --*
lin mien_N = variants {mkN "comportamento" ; mkN "presença" ; } ; --*
lin miff_V2 = mkV2 (mkV "irritar") ; --*
lin might_N = variants {mkN "força" ; mkN "potência" ; } ; --*
lin mighty_A = mkA "poderoso" ; --*
lin migraine_N = variants {mkN "enxaqueca" ; mkN "headache" ; } ; --*
lin migrate_1_V = variants {mkV "emigrar" ; mkV "migrar" ; } ; --*
lin migration_1_N = mkN "migração" ; --*
lin migration_4_N = variants {mkN "migração" ; mkN "Migrações" ; mkN "Movimento" ; } ; --*
lin migrational_A = mkA "migratório" ; --*
lin mihrab_2_N = mkN "mihrab" ; --*
lin mike_N = mkN "microfone" ; --*
lin mike_PN = mkPN "microfone" ; --*
lin mil_2_N = variants {mkN "mile" ; mkN "milha" ; } ; --*
lin mil_4_N = variants {mkN "centimeter" ; mkN "centimetre" ; mkN "centímetro" ; } ; --*
lin milano_PN = mkPN "Milão" ; --*
lin milan_PN = mkPN "Milão" ; --*
lin mild_1_A = mkA "suave" ; --*
lin mildew_2_N = variants {mkN "bolor" ; mkN "míldio" ; } ; --*
lin mildness_2_N = variants {mkN "macieza" ; mkN "suavidade" ; } ; --*
lin mile_1_N = variants {mkN "mi" ; mkN "mile" ; mkN "milha" ; } ; --*
lin mile_2_N = variants {mkN "mi" ; mkN "mile" ; mkN "milha" ; mkN "nautical" ; mkN "nó" ; } ; --*
lin mile_3_N = mkN "milha" ; --*
lin mile_4_N = variants {mkN "mile" ; mkN "milha" ; } ; --*
lin mile_5_N = variants {mkN "mi" ; mkN "mile" ; mkN "milha" ; } ; --*
lin mile_6_N = variants {mkN "mile" ; mkN "milha" ; } ; --*
lin mile_7_N = variants {mkN "mile" ; mkN "milha" ; } ; --*
lin mileometer_N = variants {mkN "hodômetro" ; mkN "Odómetro" ; mkN "Odômetro" ; } ; --*
lin milestone_1_N = mkN "Marco" ; --*
lin milieu_N = variants {mkN "ambiente" ; mkN "arredores" ; mkN "cercanias" ; mkN "meio" ; } ; --*
lin militant_1_A = mkA "belicoso" ; --*
lin militant_2_A = mkA "competitivo" ; --*
lin militant_N = variants {mkN "activista" ; mkN "militante" ; } ; --*
lin militarism_N = mkN "militarismo" ; --*
lin military_1_A = variants {mkA "bélico" ; mkA "militar" ; } ; --*
lin military_2_A = mkA "militar" ; --*
lin military_3_A = mkA "militar" ; --*
lin military_N = variants {mkN "exército" ; mkN "forces" ; mkN "machine" ; mkN "services" ; } ; --*
lin militate_V = mkV "militar" ; --*
lin milk_1_N = mkN "leite" ; --*
lin milk_1_V2 = mkV2 (mkV "ordenhar") ; --*
lin milk_2_N = mkN "leite" ; --*
lin milk_2_V = mkV "ordenhar" ; --*
lin milk_3_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin milk_3_V2 = mkV2 (mkV "por") ; --*
lin milk_4_N = mkN "leite" ; --*
lin milkmaid_N = variants {mkN "leiteira" ; mkN "ordenhadora" ; } ; --*
lin milkman_N = mkN "leiteiro" ; --*
lin milk_powder_N = variants {mkN "milk" ; mkN "powder" ; } ; --*
lin milk_shake_1_N = variants {mkN "batida" ; mkN "milkshake" ; mkN "shake" ; } ; --*
lin milksop_N = variants {mkN "baitola" ; mkN "boiola" ; } ; --*
lin milk_tooth_N = mkN "tooth" ; --*
lin milkweed_2_N = variants {mkN "oleraceus" ; mkN "serralha" ; } ; --*
lin milky_A = variants {mkA "esbranquiçado" ; mkA "lácteo" ; } ; --*
lin mill_1_N = variants {mkN "fábrica" ; mkN "manufatura" ; mkN "plant" ; mkN "usina" ; } ; --*
lin mill_2_N = variants {mkN "James" ; mkN "Mill" ; } ; --*
lin mill_2_V2 = mkV2 (mkV "moer") ; --*
lin mill_4_N = variants {mkN "machinery" ; mkN "moinho" ; mkN "moinhos" ; } ; --*
lin mill_5_N = variants {mkN "pulverização" ; mkN "trituração" ; } ; --*
lin millenarianism_N = mkN "milenarismo" ; --*
lin millenary_2_N = variants {mkN "milénio" ; mkN "milênio" ; } ; --*
lin millennium_1_N = variants {mkN "milénio" ; mkN "milênio" ; } ; --*
lin millennium_2_N = mkN "milênio" ; --*
lin miller_1_N = variants {mkN "Glenn" ; mkN "Miller" ; } ; --*
lin miller_4_N = mkN "moleiro" ; --*
lin miller_5_N = variants {mkN "fresa" ; mkN "machine" ; } ; --*
lin miller_6_N = variants {mkN "miller" ; mkN "moleiro" ; } ; --*
lin millet_1_N = variants {mkN "milhete" ; mkN "milho" ; } ; --*
lin millet_3_N = mkN "milhete" ; --*
lin milliard_N = mkN "mil" ; --*
lin millibar_N = mkN "milibar" ; --*
lin milliliter_1_N = variants {mkN "centimeter" ; mkN "centimetre" ; mkN "centímetro" ; } ; --*
lin millimetre_1_N = variants {mkN "Milimetro" ; mkN "milímetro" ; mkN "mm" ; } ; --*
lin milliner_N = variants {mkN "chapeleiro" ; mkN "modista" ; } ; --*
lin millionaire_N = mkN "milionário" ; --*
lin millionairess_N = mkN "milionário" ; --*
lin millions_Card = variants {variants {} ; variants {} ; variants {} ; } ; --*
lin millionth_1_N = mkN "milionésimo" ; --*
lin millionth_2_N = mkN "milionésimo" ; --*
lin millionth_A = variants {mkA "milionésima" ; mkA "milionésimo" ; } ; --*
lin millipede_1_N = variants {mkN "centopéia" ; mkN "Diplópode" ; mkN "lacraia" ; } ; --*
lin millisecond_N = mkN "milissegundo" ; --*
lin millstone_3_N = mkN "mó" ; --*
lin milometer_N = variants {mkN "hodômetro" ; mkN "Odómetro" ; mkN "Odômetro" ; } ; --*
lin milwaukee_PN = mkPN "Milwaukee" ; --*
lin mime_1_N = variants {mkN "fantasiado" ; mkN "mímica" ; mkN "mímico" ; } ; --*
lin mime_1_V2 = mkV2 (mkV "imitar") ; --*
lin mime_1_V = mkV "imitar" ; --*
lin mime_2_N = variants {mkN "pantomima" ; mkN "show" ; } ; --*
lin mimeograph_N = variants {mkN "machine" ; mkN "Mimeógrafo" ; } ; --*
lin mimicry_1_N = variants {mkN "imitação" ; mkN "mímica" ; } ; --*
lin mimic_V2 = mkV2 (mkV "imitar") ; --*
lin mimosa_1_N = variants {mkN "Acacia" ; mkN "dealbata" ; mkN "wattle" ; } ; --*
lin mimosa_2_N = mkN "mimosa" ; --*
lin min_1_N = mkN "minuto" ; --*
lin minaret_N = mkN "minarete" ; --*
lin minatory_A = variants {mkA "ameaçador" ; mkA "ominoso" ; } ; --*
lin mince_1_V2 = mkV2 (mkV "moderar") ; --*
lin mince_N = mkN "cortarempedaçospequenos" ; --*
lin mind_1_N = variants {mkN "cabeça" ; mkN "mente" ; mkN "psique" ; } ; --*
lin mind_1_V2 = mkV2 (mkV "importar") ; --*
lin mind_2_N = mkN "memória" ; --*
lin mind_2_V2 = variants {mkV2 (mkV "importar") ; mkV2 (mkV "preocupar") ; } ; --*
lin mind_2_V = variants {mkV "importar" ; mkV "preocupar" ; } ; --*
lin mind_2_VS = variants {mkVS (mkV "importar") ; mkVS (mkV "preocupar") ; } ; --*
lin mind_3_N = variants {mkN "ideia" ; mkN "juízo" ; mkN "opinião" ; } ; --*
lin mind_3_V2 = variants {mkV2 (mkV "care") ; mkV2 (mkV "cuidar") ; } ; --*
lin mind_3_V = variants {mkV "care" ; mkV "cuidar" ; } ; --*
lin mind_3_VS = variants {mkVS (mkV "care") ; mkVS (mkV "cuidar") ; } ; --*
lin mind_4_N = variants {mkN "intelectual" ; mkN "mente" ; mkN "thinker" ; } ; --*
lin mind_4_V2 = variants {mkV2 (mkV "escutar") ; mkV2 (mkV "obedecer") ; } ; --*
lin mind_4_V = variants {mkV "escutar" ; mkV "obedecer" ; } ; --*
lin mind_5_V = variants {mkV "precaver" ; mkV "precaver-se" ; mkV "ter" ; mkV "tomar" ; } ; --*
lin mind_6_N = variants {mkN "ideia" ; mkN "intenção" ; mkN "mente" ; mkN "objectivo" ; mkN "objetivo" ; } ; --*
lin mind_6_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "lembrar") ; } ; --*
lin mind_6_V = variants {mkV "in" ; mkV "lembrar" ; } ; --*
lin mind_6_VS = variants {mkVS (mkV "in") ; mkVS (mkV "lembrar") ; } ; --*
lin mind_7_N = mkN "inteligência" ; --*
lin mind_blowing_2_A = mkA "empolgante" ; --*
lin mindful_A = mkA "consciente" ; --*
lin mindless_3_A = mkA "insensível" ; --*
lin mindless_4_A = variants {mkA "inane" ; mkA "néscio" ; } ; --*
lin mind_reader_2_N = variants {mkN "leitor" ; mkN "reader" ; } ; --*
lin mine_1_N = variants {mkN "mina" ; mkN "minas" ; } ; --*
lin mine_1_V2 = variants {mkV2 (mkV "escavar") ; mkV2 (mkV "explorar") ; mkV2 (mkV "minar") ; mkV2 (mkV "minerar") ; } ; --*
lin mine_2_N = mkN "mina" ; --*
lin mine_2_V2 = mkV2 (mkV "minar") ; --*
lin mineral_1_A = mkA "mineral" ; --*
lin mineral_N = variants {mkN "matéria" ; mkN "minerais" ; mkN "mineral" ; mkN "minérios" ; } ; --*
lin mineralocorticoid_N = variants {mkN "Mineralocorticoide" ; mkN "Mineralocorticóide" ; } ; --*
lin mineralogy_N = variants {mkN "mineralogia" ; mkN "Mineralogia" ; } ; --*
lin miner_N = mkN "mineiro" ; --*
lin minestrone_N = variants {mkN "marmite" ; mkN "minestrone" ; mkN "soup" ; } ; --*
lin minesweeper_N = variants {mkN "Draga-minas" ; mkN "Navio" ; } ; --*
lin mineworker_N = mkN "mineiro" ; --*
lin mingle_1_V2 = variants {mkV2 (mkV "confraternizar") ; mkV2 (mkV "misturar") ; } ; --*
lin miniature_1_N = mkN "Iluminura" ; --*
lin miniature_2_N = mkN "miniatura" ; --*
lin miniature_A = mkA "diminuto" ; --*
lin miniaturization_1_N = mkN "Miniaturização" ; --*
lin minibike_N = variants {mkN "mota" ; mkN "moto" ; mkN "motocicleta" ; } ; --*
lin minibus_N = variants {mkN "Microonibus" ; mkN "Micro-onibus" ; mkN "Microônibus" ; mkN "Micro-ônibus" ; } ; --*
lin minicomputer_N = variants {mkN "microcomputadores" ; mkN "Mini" ; mkN "minicomputador" ; mkN "Mini-computador" ; } ; --*
lin minim_2_N = mkN "minim" ; --*
lin minim_3_N = variants {mkN "mínima" ; mkN "note" ; } ; --*
lin minimal_A = variants {mkA "mínimo" ; mkA "minimum" ; } ; --*
lin minimalism_N = variants {mkN "art" ; mkN "Minimalismo" ; } ; --*
lin minimization_1_N = mkN "minimização" ; --*
lin minimize_1_V2 = mkV2 (mkV "minimizar") ; --*
lin minimize_2_V2 = mkV2 (mkV "minimizar") ; --*
lin minimize_3_V2 = variants {mkV2 (mkV "denegrir") ; mkV2 (mkV "depreciar") ; mkV2 (mkV "minimizar") ; } ; --*
lin minimum_1_N = variants {mkN "limit" ; mkN "mínimo" ; } ; --*
lin minimum_A = variants {mkA "mínimo" ; mkA "minimum" ; } ; --*
lin mining_1_N = variants {mkN "mineração" ; mkN "Mineração" ; mkN "movimentação" ; mkN "terraplenagem" ; } ; --*
lin miniskirt_N = variants {mkN "mini-saia" ; mkN "minissaia" ; } ; --*
lin minister_1_N = variants {mkN "cura" ; mkN "ministro" ; mkN "of" ; mkN "pároco" ; mkN "pastor" ; mkN "reitor" ; mkN "sacerdate" ; mkN "vigário" ; } ; --*
lin minister_1_V = mkV "ministrar" ; --*
lin minister_2_N = variants {mkN "minister" ; mkN "ministro" ; } ; --*
lin minister_2_V = mkV "ministrar" ; --*
lin minister_3_N = variants {mkN "minister" ; mkN "ministro" ; } ; --*
lin minister_4_N = mkN "ministro" ; --*
lin ministerial_1_A = mkA "ministerial" ; --*
lin ministerial_2_A = mkA "ministerial" ; --*
lin ministration_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "socorro" ; } ; --*
lin ministry_2_N = variants {mkN "edifício" ; mkN "edifícios" ; mkN "ministério" ; } ; --*
lin ministry_3_N = mkN "ministério" ; --*
lin minivan_N = mkN "monovolume" ; --*
lin mink_2_N = variants {mkN "coat" ; mkN "visom" ; } ; --*
lin mink_3_N = variants {mkN "visom" ; mkN "Vison" ; } ; --*
lin minneapolis_PN = mkPN "Minneapolis" ; --*
lin minnesota_PN = variants {mkPN "Minesota" ; mkPN "Minnesota" ; mkPN "Star" ; mkPN "State" ; } ; --*
lin minocycline_N = mkN "minociclina" ; --*
lin minor_10_A = variants {mkA "de" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin minor_2_A = mkA "menor" ; --*
lin minor_9_A = mkA "venial" ; --*
lin minority_1_N = mkN "minoria" ; --*
lin minority_2_N = variants {mkN "menoridade" ; mkN "minoria" ; mkN "minorias" ; } ; --*
lin minor_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin minotaur_N = mkN "Minotauro" ; --*
lin minoxidil_N = mkN "Minoxidil" ; --*
lin minsk_PN = variants {mkPN "Minsk" ; mkPN "of" ; } ; --*
lin minstrel_1_N = variants {mkN "jogral" ; mkN "poeta-cantor" ; mkN "singer" ; mkN "trovador" ; } ; --*
lin minstrel_2_N = variants {mkN "menestrel" ; mkN "Menestrel" ; } ; --*
lin mint_2_N = variants {mkN "hortelã" ; mkN "menta" ; } ; --*
lin mint_6_N = mkN "Casa" ; --*
lin mintage_1_N = variants {mkN "moeda" ; mkN "money" ; } ; --*
lin mint_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin mint_V2 = mkV2 (mkV "cunhar") ; --*
lin minuend_N = variants {mkN "diminuendo" ; mkN "minuendo" ; } ; --*
lin minuet_1_N = mkN "minueto" ; --*
lin minuet_2_N = mkN "minueto" ; --*
lin minus_2_A = mkA "negativo" ; --*
lin minuscule_1_N = variants {mkN "letra" ; mkN "letter" ; mkN "minúscula" ; } ; --*
lin minus_N = variants {mkN "sinal" ; mkN "Subtraçao" ; mkN "subtração" ; mkN "subtracção" ; } ; --*
lin minute_1_N = mkN "minuto" ; --*
lin minute_2_N = variants {mkN "instante" ; mkN "minuto" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin minute_3_N = variants {mkN "instante" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin minute_4_N = variants {mkN "minuto" ; mkN "of" ; } ; --*
lin minute_5_N = mkN "minuta" ; --*
lin minute_6_N = variants {mkN "hora" ; mkN "minuto" ; } ; --*
lin minutes_N = variants {mkN "ata" ; mkN "minuta" ; mkN "minutos" ; } ; --*
lin minutia_N = mkN "detalhe" ; --*
lin minx_N = mkN "interesseira" ; --*
lin minyan_N = mkN "Minian" ; --*
lin miracle_1_N = variants {mkN "maravilha" ; mkN "milagre" ; } ; --*
lin miracle_2_N = mkN "milagre" ; --*
lin miraculous_1_A = variants {mkA "maravilhoso" ; mkA "milagroso" ; mkA "miraculoso" ; } ; --*
lin mirage_1_N = variants {mkN "miragem" ; mkN "Miragem" ; } ; --*
lin mirage_2_N = mkN "miragem" ; --*
lin mire_1_N = mkN "pântano" ; --*
lin mire_1_V2 = mkV2 (mkV "aprisionar") ; --*
lin mire_2_V2 = variants {mkV2 (mkV "atolar") ; mkV2 (mkV "down") ; } ; --*
lin mire_3_V = variants {mkV "atolar" ; mkV "down" ; mkV "stuck" ; mkV "to" ; } ; --*
lin mire_4_V = variants {mkV "enlamear" ; mkV "up" ; } ; --*
lin miro_2_N = variants {mkN "Joan" ; mkN "Miro" ; } ; --*
lin mirror_1_N = mkN "espelho" ; --*
lin mirror_1_V2 = variants {mkV2 (mkV "espelhar") ; mkV2 (mkV "refletir") ; } ; --*
lin mirrorlike_A = mkA "especular" ; --*
lin mirthful_1_A = variants {mkA "alegre" ; mkA "contente" ; mkA "feliz" ; mkA "jovial" ; } ; --*
lin mirthful_2_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin mirth_N = variants {mkN "hilariedade" ; mkN "risada" ; } ; --*
lin misadventure_N = variants {mkN "acidente" ; mkN "azar" ; } ; --*
lin misadvise_V2 = mkV2 (mkV "extraviar") ; --*
lin misalignment_N = mkN "desalinhamento" ; --*
lin misanthrope_N = mkN "misantropo" ; --*
lin misanthropic_1_A = mkA "cínico" ; --*
lin misanthropy_1_N = mkN "mizantropeco" ; --*
lin misanthropy_2_N = variants {mkN "misantropia" ; mkN "mizantropeco" ; } ; --*
lin misapplication_2_N = variants {mkN "apropriação" ; mkN "Apropriação" ; mkN "peculato" ; } ; --*
lin misapply_V2 = variants {mkV2 (mkV "tratar") ; mkV2 (mkV "usar") ; } ; --*
lin misapprehend_V2 = variants {mkV2 (mkV "amiss") ; mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin misapprehension_N = variants {mkN "confusão" ; mkN "erro" ; mkN "mal-entendido" ; } ; --*
lin misappropriation_1_N = variants {mkN "apropriação" ; mkN "Apropriação" ; mkN "peculato" ; } ; --*
lin misappropriation_2_N = mkN "apropriação" ; --*
lin misbehavior_N = mkN "mau" ; --*
lin misbehaviour_N = mkN "mau" ; --*
lin miscalculate_1_V2 = mkV2 (mkV "errar") ; --*
lin miscalculate_1_V = mkV "errar" ; --*
lin miscalculate_2_V2 = mkV2 (mkV "subestimar") ; --*
lin miscarriage_1_N = variants {mkN "abortamento" ; mkN "aborto" ; } ; --*
lin miscarriage_2_N = variants {mkN "abortion" ; mkN "aborto" ; mkN "óbito" ; } ; --*
lin miscarry_1_V2 = variants {mkV2 (mkV "falhar") ; mkV2 (mkV "malograr") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "wrong") ; } ; --*
lin miscarry_2_V2 = mkV2 (mkV "abortar") ; --*
lin miscegenation_N = mkN "miscigenação" ; --*
lin miscellaneous_1_A = variants {mkA "misto" ; mkA "sortido" ; mkA "variado" ; } ; --*
lin miscellany_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin miscellany_2_N = variants {mkN "antologia" ; mkN "coroadeflores" ; mkN "florilégio" ; } ; --*
lin mischance_1_N = variants {mkN "infortúnio" ; mkN "luck" ; mkN "zica" ; } ; --*
lin mischance_2_N = variants {mkN "acidente" ; mkN "azar" ; } ; --*
lin mischief_2_N = mkN "falcatrua" ; --*
lin mischief_maker_N = variants {mkN "desordeiro" ; mkN "hat" ; mkN "maker" ; } ; --*
lin mischievous_1_A = variants {mkA "bagunceiro" ; mkA "sapeca" ; } ; --*
lin mischievousness_1_N = variants {mkN "mal" ; mkN "maldade" ; mkN "travessura" ; } ; --*
lin misconceive_V2 = variants {mkV2 (mkV "amiss") ; mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin misconception_N = variants {mkN "erro" ; mkN "mal-entendido" ; } ; --*
lin misconduct_2_N = variants {mkN "conduct" ; mkN "delito" ; mkN "reus" ; } ; --*
lin misconduct_2_V2 = mkV2 (mkV "gerenciar") ; --*
lin misconstrue_V2 = variants {mkV2 (mkV "amiss") ; mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin miscue_2_N = mkN "erro" ; --*
lin misdate_V2 = mkV2 (mkV "errar") ; --*
lin misdeed_N = mkN "mau" ; --*
lin misdemeanor_N = variants {mkN "infração" ; mkN "infracção" ; } ; --*
lin misdemeanour_N = variants {mkN "infração" ; mkN "infracção" ; } ; --*
lin misdirect_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin misdirect_2_V2 = variants {mkV2 (mkV "astray") ; mkV2 (mkV "induzir") ; } ; --*
lin misdirect_3_V2 = mkV2 (mkV "endereçar") ; --*
lin miserable_1_A = variants {mkA "azarado" ; mkA "miserável" ; } ; --*
lin miserable_2_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin miserable_3_A = variants {mkA "abjeto" ; mkA "miserável" ; } ; --*
lin miserable_4_A = variants {mkA "lamentável" ; mkA "miserável" ; } ; --*
lin miserable_5_A = mkA "azarado" ; --*
lin miserliness_N = variants {mkN "mesquinhez" ; mkN "parcimónia" ; } ; --*
lin miser_N = variants {mkN "avarento" ; mkN "mão-de-vaca" ; } ; --*
lin misery_1_N = variants {mkN "miséria" ; mkN "sofrimento" ; } ; --*
lin misery_2_N = mkN "tristeza" ; --*
lin misfire_1_N = mkN "gasto" ; --*
lin misfit_N = mkN "o" ; --*
lin misfortune_1_N = variants {mkN "acidente" ; mkN "infortúnio" ; mkN "luck" ; mkN "má" ; } ; --*
lin misfortune_2_N = variants {mkN "infortúnio" ; mkN "luck" ; } ; --*
lin misgiving_1_N = mkN "ressalva" ; --*
lin misgiving_2_N = variants {mkN "apreensão" ; mkN "mau" ; } ; --*
lin misgiving_3_N = variants {mkN "desconfiança" ; mkN "receio" ; } ; --*
lin misguide_1_V2 = variants {mkV2 (mkV "astray") ; mkV2 (mkV "induzir") ; } ; --*
lin misguide_2_V2 = mkV2 (mkV "extraviar") ; --*
lin mishandle_1_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin mishandle_2_V2 = mkV2 (mkV "gerenciar") ; --*
lin mishap_1_N = variants {mkN "infortúnio" ; mkN "luck" ; mkN "zica" ; } ; --*
lin mishap_2_N = variants {mkN "acidente" ; mkN "azar" ; } ; --*
lin mishmash_N = variants {mkN "and" ; mkN "gororoba" ; mkN "miscelânea" ; mkN "mistura" ; mkN "mistureba" ; } ; --*
lin misinform_V2 = mkV2 (mkV "enganar") ; --*
lin misinterpret_2_V2 = variants {mkV2 (mkV "interpretar") ; mkV2 (mkV "ler") ; } ; --*
lin misinterpret_3_V2 = variants {mkV2 (mkV "amiss") ; mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin misinterpretation_N = mkN "mal-entendido" ; --*
lin misjudge_V2 = mkV2 (mkV "mal") ; --*
lin misjudge_V = mkV "mal" ; --*
lin mislaid_A = mkA "extraviado" ; --*
lin mislay_V2 = mkV2 (mkV "perder") ; --*
lin mislead_1_V2 = variants {mkV2 (mkV "astray") ; mkV2 (mkV "induzir") ; } ; --*
lin mislead_2_V2 = mkV2 (mkV "enganar") ; --*
lin misleading_A = variants {mkA "enganador" ; mkA "enganoso" ; mkA "equivocado" ; mkA "ilusório" ; } ; --*
lin mismanage_V2 = mkV2 (mkV "gerenciar") ; --*
lin misogynic_A = mkA "misógino" ; --*
lin misogynous_A = mkA "misógino" ; --*
lin misogyny_N = variants {mkN "misoginia" ; mkN "Misoginia" ; } ; --*
lin misoneism_N = mkN "misoneísmo" ; --*
lin miso_N = mkN "missô" ; --*
lin misplace_1_V2 = mkV2 (mkV "perder") ; --*
lin misprint_N = variants {mkN "erro" ; mkN "Erro" ; mkN "error" ; } ; --*
lin mispronounce_V2 = mkV2 (mkV "mal") ; --*
lin misquote_V2 = mkV2 (mkV "citar") ; --*
lin misread_1_V2 = mkV2 (mkV "ler") ; --*
lin misread_2_V2 = variants {mkV2 (mkV "interpretar") ; mkV2 (mkV "ler") ; } ; --*
lin misrepresent_1_V2 = mkV2 (mkV "desmentir") ; --*
lin misrepresent_2_V2 = variants {mkV2 (mkV "deturpar") ; mkV2 (mkV "falsear") ; mkV2 (mkV "falsificar") ; } ; --*
lin misrepresentation_1_N = mkN "engano" ; --*
lin misrepresentation_2_N = variants {mkN "adulteração" ; mkN "falsificação" ; } ; --*
lin miss_1_N = variants {mkN "garota" ; mkN "lady" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; mkN "woman" ; } ; --*
lin miss_2_V2 = mkV2 (mkV "sentir") ; --*
lin miss_3_N = mkN "Miss" ; --*
lin miss_3_V2 = variants {mkV2 (mkV "faltar") ; mkV2 (mkV "perder") ; } ; --*
lin miss_4_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "escapar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; mkV2 (mkV "preterir") ; } ; --*
lin miss_5_V2 = mkV2 (mkV "perder") ; --*
lin miss_6_V2 = variants {mkV2 (mkV "carecer") ; mkV2 (mkV "faltar") ; mkV2 (mkV "necessitar") ; } ; --*
lin miss_7_V2 = variants {mkV2 (mkV "errar") ; mkV2 (mkV "falhar") ; } ; --*
lin miss_9_V2 = mkV2 (mkV "escapar") ; --*
lin misshapen_A = variants {mkA "deformado" ; mkA "disforme" ; } ; --*
lin missile_1_N = mkN "míssil" ; --*
lin missile_2_N = variants {mkN "míssil" ; mkN "Projéctil" ; mkN "projétil" ; } ; --*
lin missing_1_A = variants {mkA "desaparecido" ; mkA "faltante" ; mkA "perdido" ; mkA "sumido" ; } ; --*
lin mission_1_N = variants {mkN "missão" ; mkN "mission" ; mkN "post" ; mkN "station" ; } ; --*
lin mission_2_N = variants {mkN "missão" ; mkN "mission" ; } ; --*
lin mission_3_N = mkN "missão" ; --*
lin mission_4_N = variants {mkN "missão" ; mkN "work" ; } ; --*
lin mission_5_N = variants {mkN "comissão" ; mkN "comité" ; mkN "comitê" ; mkN "delegação" ; mkN "embaixada" ; mkN "missão" ; } ; --*
lin missionary_1_N = mkN "missionário" ; --*
lin missionary_2_N = variants {mkN "missionário" ; mkN "Missionários" ; } ; --*
lin mississippi_1_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin mississippi_2_PN = variants {mkPN "Mississippi" ; mkPN "Mississíppi" ; mkPN "State" ; } ; --*
lin missive_N = variants {mkN "carta" ; mkN "missiva" ; } ; --*
lin missouri_1_PN = variants {mkPN "Me" ; mkPN "Missouri" ; } ; --*
lin missouri_2_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin missouri_4_PN = variants {mkPN "Missouri" ; mkPN "Missôuri" ; } ; --*
lin misspend_1_V2 = mkV2 (mkV "gastar") ; --*
lin misspend_2_V2 = variants {mkV2 (mkV "esbanjar") ; mkV2 (mkV "malbaratar") ; } ; --*
lin miss_V = variants {mkV "errar" ; mkV "sentir" ; } ; --*
lin missy_N = variants {mkN "garota" ; mkN "lady" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; mkN "woman" ; } ; --*
lin mist_1_V = variants {mkV "nublar" ; mkV "over" ; } ; --*
lin mist_2_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "over") ; } ; --*
lin mist_3_V2 = mkV2 (mkV "enevoar") ; --*
lin mist_3_V = mkV "enevoar" ; --*
lin mistake_1_N = variants {mkN "engano" ; mkN "equívoco" ; mkN "erro" ; mkN "falha" ; } ; --*
lin mistake_1_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "identificar") ; } ; --*
lin mistake_2_N = variants {mkN "confusão" ; mkN "erro" ; mkN "mal-entendido" ; } ; --*
lin mistake_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "equivocar") ; } ; --*
lin mistake_2_V = variants {mkV "confundir" ; mkV "equivocar" ; } ; --*
lin mistake_3_N = mkN "erro" ; --*
lin mistaken_1_A = variants {mkA "enganado" ; mkA "errado" ; } ; --*
lin mister_N = variants {mkN "senhor" ; mkN "Sr" ; mkN "Sr." ; mkN "Sr.." ; } ; --*
lin mistiness_N = mkN "névoa" ; --*
lin mistletoe_2_N = variants {mkN "album" ; mkN "visco" ; mkN "World" ; } ; --*
lin mist_N = variants {mkN "bruma" ; mkN "neblina" ; mkN "névoa" ; } ; --*
lin mistral_N = variants {mkN "mistral" ; mkN "Mistral" ; } ; --*
lin mistreatment_N = mkN "mau" ; --*
lin mistreat_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "destratar") ; mkV2 (mkV "maltratar") ; } ; --*
lin mistress_1_N = variants {mkN "amante" ; mkN "woman" ; } ; --*
lin mistress_2_N = mkN "professora" ; --*
lin mistress_3_N = mkN "senhora" ; --*
lin mistrust_1_N = variants {mkN "desconfiança" ; mkN "receio" ; } ; --*
lin mistrust_2_N = variants {mkN "desconfiam" ; mkN "desconfiança" ; } ; --*
lin mistrustful_A = mkA "suspeito" ; --*
lin mistrust_V2 = mkV2 (mkV "desconfiar") ; --*
lin misty_1_A = mkA "nevoeirento" ; --*
lin misty_2_A = mkA "nevoeirento" ; --*
lin misunderstanding_1_N = mkN "mal-entendido" ; --*
lin misunderstanding_2_N = variants {mkN "confusão" ; mkN "erro" ; mkN "mal-entendido" ; } ; --*
lin misunderstand_V2 = variants {mkV2 (mkV "amiss") ; mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin misuse_1_V2 = variants {mkV2 (mkV "tratar") ; mkV2 (mkV "usar") ; } ; --*
lin misuse_2_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "desvirtuar") ; } ; --*
lin misuse_N2 = variants {mkN2 (mkN "abuso") noPrep ; mkN2 (mkN "uso") noPrep ; } ; --*
lin mite_1_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin mite_2_N = mkN "ácaro" ; --*
lin miter_1_N = variants {mkN "joint" ; mkN "mitra" ; } ; --*
lin miter_2_N = variants {mkN "mitra" ; mkN "mitras" ; } ; --*
lin miter_3_N = variants {mkN "mitra" ; mkN "Mitra" ; } ; --*
lin mitigate_1_V2 = variants {mkV2 (mkV "atenuar") ; mkV2 (mkV "mitigar") ; mkV2 (mkV "paliar") ; mkV2 (mkV "remediar") ; } ; --*
lin mitigate_2_V2 = mkV2 (mkV "mitigar") ; --*
lin mitigation_3_N = variants {mkN "mitigação" ; mkN "moderação" ; } ; --*
lin mitochondrion_N = variants {mkN "Mitocondria" ; mkN "mitocôndria" ; } ; --*
lin mitosis_N = mkN "mitose" ; --*
lin mitre_1_N = variants {mkN "joint" ; mkN "mitra" ; } ; --*
lin mitre_2_N = variants {mkN "mitra" ; mkN "mitras" ; } ; --*
lin mitre_3_N = variants {mkN "mitra" ; mkN "Mitra" ; } ; --*
lin mitre_joint_N = variants {mkN "joint" ; mkN "mitra" ; } ; --*
lin mitt_1_N = mkN "mão" ; --*
lin mittelschmerz_N = mkN "Mittelschmerz" ; --*
lin mitten_N = mkN "luva" ; --*
lin mitzvah_2_N = mkN "mitzvá" ; --*
lin mix_1_V = variants {mkV "combinar" ; mkV "fundir" ; mkV "misturar" ; } ; --*
lin mix_2_N = variants {mkN "mistura" ; mkN "mixagem" ; } ; --*
lin mix_2_V2 = mkV2 (mkV "integrar") ; --*
lin mix_3_N = mkN "mistura" ; --*
lin mix_3_V = mkV "misturar" ; --*
lin mix_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "misturar") ; } ; --*
lin mix_5_V2 = variants {mkV2 (mkV "confraternizar") ; mkV2 (mkV "misturar") ; } ; --*
lin mix_6_V2 = variants {mkV2 (mkV "baralhar") ; mkV2 (mkV "embaralhar") ; mkV2 (mkV "misturar") ; } ; --*
lin mixed_1_A = variants {mkA "misto" ; mkA "sortido" ; mkA "variado" ; } ; --*
lin mixed_up_A = variants {mkA "perplexo" ; mkA "sea" ; } ; --*
lin mixer_4_N = mkN "batedeira" ; --*
lin mixture_1_N = variants {mkN "mistura" ; mkN "Misturas" ; mkN "solução" ; } ; --*
lin mixture_2_N = mkN "mistura" ; --*
lin mixture_3_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin mixture_4_N = variants {mkN "mistura" ; mkN "mixagem" ; } ; --*
lin mixture_5_N = mkN "mistura" ; --*
lin mix_up_1_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "misturar") ; mkV2 (mkV "up") ; } ; --*
lin mix_up_2_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "up") ; } ; --*
lin mix_up_N = mkN "confusão" ; --*
lin mizen_1_N = mkN "mastro" ; --*
lin mizzen_1_N = mkN "mastro" ; --*
lin mizzen_mast_N = mkN "mastro" ; --*
lin mizzle_V = variants {mkV "borrifar" ; mkV "chuviscar" ; } ; --*
lin ml_N = variants {mkN "centimeter" ; mkN "centimetre" ; mkN "centímetro" ; } ; --*
lin mm_N = variants {mkN "Milimetro" ; mkN "milímetro" ; mkN "mm" ; } ; --*
lin mnemonic_A = mkA "mnemônico" ; --*
lin mnemonic_N = mkN "mnemônica" ; --*
lin mo_1_N = variants {mkN "instante" ; mkN "minuto" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin mo_1_PN = variants {mkPN "instante" ; mkPN "minuto" ; mkPN "momento" ; mkPN "segundo" ; } ; --*
lin mo_2_N = variants {mkN "Molibdenio" ; mkN "Molibdénio" ; mkN "molibdênio" ; mkN "number" ; } ; --*
lin mo_2_PN = variants {mkPN "Molibdenio" ; mkPN "Molibdénio" ; mkPN "molibdênio" ; mkPN "number" ; } ; --*
lin mo_3_N = variants {mkN "Me" ; mkN "Missouri" ; } ; --*
lin mo_3_PN = variants {mkPN "Me" ; mkPN "Missouri" ; } ; --*
lin moa_N = mkN "moa" ; --*
lin moan_N = variants {mkN "gemido" ; mkN "gemir" ; mkN "lamento" ; } ; --*
lin moan_V = variants {mkV "carpir" ; mkV "gemer" ; mkV "gemir" ; mkV "lamentar-se" ; } ; --*
lin moat_N = mkN "fosso" ; --*
lin mob_1_N = mkN "multidão" ; --*
lin mob_3_N = mkN "gangue" ; --*
lin mobile_1_A = mkA "nômade" ; --*
lin mobile_1_N = variants {mkN "rio" ; mkN "River" ; } ; --*
lin mobile_2_A = variants {mkA "móbil" ; mkA "móvel" ; } ; --*
lin mobile_2_N = variants {mkN "Alabama" ; mkN "Mobile" ; } ; --*
lin mobile_3_A = mkA "móvel" ; --*
lin mobility_N = mkN "mobilidade" ; --*
lin mobilization_1_N = mkN "mobilização" ; --*
lin mobilization_2_N = mkN "mobilização" ; --*
lin mobilize_1_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "mobilizar") ; mkV2 (mkV "reunir") ; } ; --*
lin mobilize_2_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "mobilizar") ; mkV2 (mkV "up") ; } ; --*
lin mobilize_2_V = variants {mkV "convocar" ; mkV "mobilizar" ; mkV "up" ; } ; --*
lin mobilize_3_V2 = mkV2 (mkV "mobilizar") ; --*
lin mobilize_3_V = mkV "mobilizar" ; --*
lin mobilize_4_V2 = variants {mkV2 (mkV "circular") ; mkV2 (mkV "mobilizar") ; } ; --*
lin mobilize_4_V = variants {mkV "circular" ; mkV "mobilizar" ; } ; --*
lin mobocracy_N = mkN "oclocracia" ; --*
lin mobster_N = variants {mkN "bandido" ; mkN "Gangster" ; mkN "gângster" ; mkN "Gângster" ; } ; --*
lin mob_V2 = mkV2 (mkV "lotar") ; --*
lin moccasin_1_N = mkN "Mocassim" ; --*
lin mock_1_V2 = variants {mkV2 (mkV "ironizar") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "zombar") ; } ; --*
lin mock_2_V2 = mkV2 (mkV "simular") ; --*
lin mockery_2_N = mkN "paródia" ; --*
lin mockery_3_N = mkN "paródia" ; --*
lin mock_N = mkN "simulado" ; --*
lin mock_up_N = mkN "modelo" ; --*
lin mock_up_V2 = variants {mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin mod_A = variants {mkA "contemporâneo" ; mkA "inovador" ; mkA "moderno" ; mkA "progressista" ; } ; --*
lin modal_1_A = mkA "modal" ; --*
lin modal_3_A = mkA "modal" ; --*
lin modality_1_N = mkN "modalidade" ; --*
lin modality_2_N = variants {mkN "modalidade" ; mkN "modo" ; } ; --*
lin mode_1_N = variants {mkN "estilo" ; mkN "maneira" ; } ; --*
lin mode_3_N = mkN "modalidade" ; --*
lin mode_4_N = variants {mkN "modalidade" ; mkN "modo" ; } ; --*
lin mode_5_N = variants {mkN "mode" ; mkN "modo" ; } ; --*
lin mode_6_N = variants {mkN "moda" ; mkN "value" ; } ; --*
lin model_1_N = variants {mkN "account" ; mkN "teoria" ; } ; --*
lin model_2_N = mkN "tipo" ; --*
lin model_2_V2 = variants {mkV2 (mkV "amoldar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "plasmar") ; } ; --*
lin model_3_N = mkN "modelo" ; --*
lin model_3_V = mkV "posar" ; --*
lin model_4_N = variants {mkN "esquema" ; mkN "modelo" ; } ; --*
lin model_5_N = variants {mkN "example" ; mkN "exemplo" ; mkN "modelo" ; } ; --*
lin model_5_V2 = variants {mkV2 (mkV "modelar") ; mkV2 (mkV "simular") ; } ; --*
lin model_6_N = variants {mkN "model" ; mkN "modelo" ; } ; --*
lin model_6_V2 = variants {mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin model_7_N = variants {mkN "exemplar" ; mkN "exemplo" ; } ; --*
lin model_8_N = variants {mkN "manequim" ; mkN "model" ; mkN "modelo" ; } ; --*
lin model_9_N = variants {mkN "modelação" ; mkN "modelagem" ; } ; --*
lin modeling_1_N = variants {mkN "Moldagem" ; mkN "sculpture" ; } ; --*
lin modeling_2_N = mkN "modelação" ; --*
lin modeling_3_N = variants {mkN "modelação" ; mkN "modelagem" ; } ; --*
lin modelling_1_N = mkN "modelação" ; --*
lin modelling_2_N = variants {mkN "modelação" ; mkN "modelagem" ; } ; --*
lin modem_N = mkN "modem" ; --*
lin moderate_1_A = mkA "moderado" ; --*
lin moderate_2_A = mkA "comedido" ; --*
lin moderate_2_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "moderar") ; } ; --*
lin moderate_3_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "in") ; mkV2 (mkV "limitar") ; mkV2 (mkV "refrear") ; } ; --*
lin moderate_4_V2 = mkV2 (mkV "moderar") ; --*
lin moderate_5_V2 = variants {mkV2 (mkV "amansar") ; mkV2 (mkV "down") ; mkV2 (mkV "moderar") ; mkV2 (mkV "suavizar") ; } ; --*
lin moderate_6_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "medir") ; mkV2 (mkV "moderar") ; mkV2 (mkV "temperar") ; } ; --*
lin moderation_1_N = variants {mkN "moderação" ; mkN "temperança" ; } ; --*
lin moderation_4_N = variants {mkN "mitigação" ; mkN "moderação" ; } ; --*
lin moderator_3_N = mkN "moderador" ; --*
lin moderator_4_N = mkN "moderador" ; --*
lin modern_1_A = variants {mkA "contemporâneo" ; mkA "moderno" ; } ; --*
lin modern_2_A = variants {mkA "contemporâneo" ; mkA "inovador" ; mkA "moderno" ; mkA "progressista" ; } ; --*
lin modern_2_N = variants {mkN "Bauer" ; mkN "font" ; } ; --*
lin modern_3_A = variants {mkA "contemporâneo" ; mkA "moderno" ; } ; --*
lin modern_4_A = variants {mkA "contemporâneo" ; mkA "inovador" ; mkA "moderno" ; mkA "progressista" ; } ; --*
lin modernism_2_N = mkN "modernidade" ; --*
lin modernism_3_N = variants {mkN "modernismo" ; mkN "Modernismo" ; } ; --*
lin modernistic_A = variants {mkA "contemporâneo" ; mkA "inovador" ; mkA "moderno" ; mkA "progressista" ; } ; --*
lin modernity_N = mkN "modernidade" ; --*
lin modernization_1_N = mkN "modernização" ; --*
lin modernize_1_V2 = mkV2 (mkV "revisar") ; --*
lin modernize_2_V2 = mkV2 (mkV "modernizar") ; --*
lin modest_1_A = variants {mkA "modesto" ; mkA "módico" ; mkA "recatado" ; } ; --*
lin modest_2_A = variants {mkA "modesto" ; mkA "pequeno" ; } ; --*
lin modest_3_A = mkA "modesto" ; --*
lin modest_4_A = mkA "modesto" ; --*
lin modest_5_A = variants {mkA "humilde" ; mkA "ignoto" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin modest_7_A = variants {mkA "de" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin modesty_1_N = variants {mkN "modéstia" ; mkN "pudor" ; } ; --*
lin modesty_2_N = variants {mkN "Modestia" ; mkN "modéstia" ; } ; --*
lin modifiable_A = variants {mkA "modificável" ; mkA "mutável" ; } ; --*
lin modification_1_N = variants {mkN "ajuste" ; mkN "alteração" ; mkN "modificação" ; } ; --*
lin modification_2_N = mkN "modificação" ; --*
lin modification_4_N = variants {mkN "alteração" ; mkN "modificação" ; mkN "mudança" ; mkN "variação" ; } ; --*
lin modifier_1_N = mkN "modificador" ; --*
lin modify_1_V2 = mkV2 (mkV "amenizar") ; --*
lin modify_2_V2 = variants {mkV2 (mkV "modificar") ; mkV2 (mkV "qualificar") ; } ; --*
lin modify_3_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "modificar") ; mkV2 (mkV "mudar") ; } ; --*
lin modiste_1_N = variants {mkN "chapeleiro" ; mkN "modista" ; } ; --*
lin modiste_2_N = variants {mkN "costureiro" ; mkN "estilista" ; mkN "modista" ; } ; --*
lin mod_N = mkN "mod" ; --*
lin modular_A = variants {mkA "feito" ; mkA "modular" ; mkA "modularizado" ; } ; --*
lin modulate_2_V2 = mkV2 (mkV "modular") ; --*
lin modulate_2_V = mkV "modular" ; --*
lin modulate_3_V2 = variants {mkV2 (mkV "modular") ; mkV2 (mkV "regular") ; } ; --*
lin modulate_4_V2 = mkV2 (mkV "modular") ; --*
lin modulate_4_V = mkV "modular" ; --*
lin modulation_1_N = mkN "modulação" ; --*
lin modulation_2_N = mkN "Modulação" ; --*
lin modulation_3_N = variants {mkN "contour" ; mkN "entonação" ; } ; --*
lin module_1_N = variants {mkN "faculdade" ; mkN "faculty" ; mkN "talento" ; } ; --*
lin module_2_N = mkN "módulo" ; --*
lin module_3_N = mkN "módulo" ; --*
lin module_4_N = mkN "módulo" ; --*
lin modus_operandi_N = variants {mkN "operandi" ; mkN "rotina" ; } ; --*
lin modus_vivendi_1_N = mkN "vivendi" ; --*
lin modus_vivendi_2_N = variants {mkN "estilo" ; mkN "style" ; mkN "vivendi" ; } ; --*
lin mogul_2_N = mkN "magnata" ; --*
lin mogul_3_N = variants {mkN "businessman" ; mkN "executive" ; mkN "leader" ; mkN "magnata" ; } ; --*
lin mohair_N = mkN "Mohair" ; --*
lin mohawk_1_N = mkN "moicano" ; --*
lin moil_1_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin moil_2_V = variants {mkV "agitar" ; mkV "bater" ; } ; --*
lin moist_A = variants {mkA "húmida" ; mkA "húmido" ; mkA "molhado" ; mkA "Quase" ; mkA "úmida" ; mkA "úmido" ; } ; --*
lin moisten_1_V2 = mkV2 (mkV "umedecer") ; --*
lin moisten_2_V = variants {mkV "borrifar" ; mkV "umeceder" ; mkV "umectar" ; } ; --*
lin moisture_N = variants {mkN "humidade" ; mkN "umidade" ; } ; --*
lin molar_1_A = mkA "molar" ; --*
lin molarity_N = variants {mkN "concentration" ; mkN "Molaridade" ; } ; --*
lin molar_N = variants {mkN "dente" ; mkN "molar" ; } ; --*
lin molasses_N = mkN "melaço" ; --*
lin mold_1_V2 = variants {mkV2 (mkV "amoldar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "plasmar") ; } ; --*
lin mold_4_V2 = variants {mkV2 (mkV "formar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "moldar") ; } ; --*
lin mold_6_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "influenciar") ; mkV2 (mkV "moldar") ; } ; --*
lin molding_1_N = mkN "fundição" ; --*
lin molding_3_N = mkN "borda" ; --*
lin molding_4_N = variants {mkN "Moldagem" ; mkN "sculpture" ; } ; --*
lin molding_5_N = mkN "modelação" ; --*
lin moldy_A = mkA "bolorento" ; --*
lin mole_1_N = variants {mkN "mol" ; mkN "molecule" ; } ; --*
lin mole_2_N = variants {mkN "espiã" ; mkN "espião" ; } ; --*
lin mole_4_N = variants {mkN "lunar" ; mkN "mancha" ; mkN "marca" ; mkN "pinta" ; mkN "sinal" ; } ; --*
lin mole_5_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin mole_6_N = variants {mkN "topeira" ; mkN "toupeira" ; } ; --*
lin molecular_2_A = mkA "molecular" ; --*
lin molecule_1_N = mkN "molécula" ; --*
lin molecule_2_N = variants {mkN "átomo" ; mkN "partícula" ; } ; --*
lin molest_1_V2 = variants {mkV2 (mkV "assediar") ; mkV2 (mkV "molestar") ; } ; --*
lin molest_2_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin mollification_2_N = mkN "pacificação" ; --*
lin mollify_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "apaziguar") ; mkV2 (mkV "aplacar") ; mkV2 (mkV "pacificar") ; mkV2 (mkV "serenar") ; mkV2 (mkV "sossegar") ; mkV2 (mkV "tranquilizar") ; } ; --*
lin mollify_2_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "medir") ; mkV2 (mkV "moderar") ; mkV2 (mkV "temperar") ; } ; --*
lin mollify_3_V2 = mkV2 (mkV "amolecer") ; --*
lin mollusc_N = variants {mkN "molusco" ; mkN "moluscos" ; } ; --*
lin mollusk_N = variants {mkN "molusco" ; mkN "moluscos" ; } ; --*
lin mollycoddle_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin moloch_1_PN = mkPN "Moloch" ; --*
lin moloch_2_PN = mkPN "Moloch" ; --*
lin molt_N = mkN "muda" ; --*
lin molybdenum_N = variants {mkN "Molibdenio" ; mkN "Molibdénio" ; mkN "molibdênio" ; mkN "number" ; } ; --*
lin mom_1_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin mombin_1_N = variants {mkN "purpurea" ; mkN "seriguela" ; mkN "Serigüela" ; mkN "tree" ; } ; --*
lin moment_1_N = variants {mkN "instante" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin moment_2_N = variants {mkN "instante" ; mkN "minuto" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin moment_3_N = variants {mkN "and" ; mkN "moment" ; mkN "neste" ; } ; --*
lin moment_4_N = variants {mkN "consequência" ; mkN "importância" ; } ; --*
lin moment_5_N = mkN "momento" ; --*
lin momentary_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "fugaz" ; mkA "fugitivo" ; mkA "momentâneo" ; } ; --*
lin momentum_1_N = variants {mkN "impulso" ; mkN "Impulso" ; } ; --*
lin momentum_2_N = mkN "quantidade" ; --*
lin mon_1_PN = variants {mkPN "seg" ; mkPN "segunda-feira" ; } ; --*
lin monaco_PN = variants {mkPN "Monaco" ; mkPN "Mônaco" ; mkPN "of" ; } ; --*
lin monarch_1_N = variants {mkN "head" ; mkN "monarca" ; mkN "suserano" ; } ; --*
lin monarch_2_N = variants {mkN "borboleta-monarca" ; mkN "butterfly" ; mkN "plexippus" ; } ; --*
lin monarchist_N = mkN "Realistas" ; --*
lin monarchy_N = mkN "monarquia" ; --*
lin monastery_N = variants {mkN "convento" ; mkN "monastério" ; mkN "mosteiro" ; } ; --*
lin monastic_1_A = mkA "monástico" ; --*
lin monasticism_N = variants {mkN "monasticismo" ; mkN "Monasticismo" ; } ; --*
lin monazite_N = mkN "monazita" ; --*
lin monegasque_A = variants {mkA "monagasco" ; mkA "monegasco" ; } ; --*
lin monetarism_N = mkN "monetarismo" ; --*
lin monetary_A = mkA "monetário" ; --*
lin money_1_N = variants {mkN "dinheiro" ; mkN "divisa" ; mkN "moeda" ; } ; --*
lin money_2_N = mkN "dinheiro" ; --*
lin money_3_N = variants {mkN "cobre" ; mkN "dinheiro" ; mkN "divisa" ; mkN "moeda" ; } ; --*
lin moneyed_2_A = variants {mkA "afluente" ; mkA "rico" ; } ; --*
lin moneylender_N = variants {mkN "agiota" ; mkN "shark" ; } ; --*
lin money_order_N = mkN "order" ; --*
lin monger_N = variants {mkN "comerciante" ; mkN "mercador" ; mkN "negociante" ; } ; --*
lin mongol_A = variants {mkA "mongol" ; mkA "mongólico" ; } ; --*
lin mongolia_1_PN = variants {mkPN "Mongolia" ; mkPN "Mongólia" ; mkPN "People's" ; } ; --*
lin mongolia_2_PN = mkPN "Mongólia" ; --*
lin mongolian_1_A = variants {mkA "da" ; mkA "mongol" ; mkA "mongólico" ; } ; --*
lin mongolian_1_N = mkN "mongol" ; --*
lin mongolian_2_A = variants {mkA "mongol" ; mkA "mongólico" ; } ; --*
lin mongolian_2_N = variants {mkN "language" ; mkN "Línguas" ; mkN "mongol" ; } ; --*
lin mongolism_N = variants {mkN "21" ; mkN "síndrome" ; mkN "Síndrome" ; mkN "syndrome" ; } ; --*
lin mongol_N = mkN "mongol" ; --*
lin mongoloid_2_A = mkA "mongol" ; --*
lin mongoose_N = variants {mkN "fuinha" ; mkN "mangusto" ; } ; --*
lin mongrel_2_N = variants {mkN "rafeiro" ; mkN "vira-lata" ; } ; --*
lin moniker_N = variants {mkN "alcunha" ; mkN "apelido" ; mkN "cognome" ; mkN "sobrenome" ; } ; --*
lin monism_N = mkN "monismo" ; --*
lin monition_1_N = variants {mkN "admonição" ; mkN "advertência" ; mkN "aviso" ; mkN "repreensão" ; } ; --*
lin monition_2_N = variants {mkN "of" ; mkN "repreensão" ; } ; --*
lin monitor_1_N = mkN "monitor" ; --*
lin monitor_1_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "monitorar") ; mkV2 (mkV "policiar") ; } ; --*
lin monitor_2_N = mkN "monitor" ; --*
lin monitor_2_V2 = mkV2 (mkV "monitorar") ; --*
lin monitor_2_V = mkV "monitorar" ; --*
lin monitor_4_N = variants {mkN "device" ; mkN "monitor" ; } ; --*
lin monitor_5_N = mkN "monitor" ; --*
lin monitor_7_N = variants {mkN "lizard" ; mkN "Varanidae" ; } ; --*
lin monitoring_N = mkN "monitorização" ; --*
lin monk_1_N = variants {mkN "frade" ; mkN "frei" ; mkN "monge" ; } ; --*
lin monk_2_N = variants {mkN "monge" ; mkN "Monk" ; mkN "Sphere" ; } ; --*
lin monkey_1_N = variants {mkN "macaco" ; mkN "mono" ; mkN "símio" ; } ; --*
lin monkey_2_N = mkN "diabrete" ; --*
lin monkey_nut_N = variants {mkN "amendoim" ; mkN "ginguba" ; mkN "nut" ; mkN "pea" ; } ; --*
lin monkey_puzzle_N = variants {mkN "araucana" ; mkN "pine" ; mkN "puzzle" ; } ; --*
lin monkey_wrench_N = variants {mkN "turquesa" ; mkN "wrench" ; } ; --*
lin monkfish_2_N = variants {mkN "Americanus" ; mkN "fish" ; mkN "Lofiformes" ; mkN "Lophiiformes" ; } ; --*
lin monkshood_N = variants {mkN "Acónito" ; mkN "Acônito" ; mkN "flower" ; mkN "napellus" ; } ; --*
lin monochromatic_1_A = mkA "monocromático" ; --*
lin monochromatic_2_A = mkA "monocromático" ; --*
lin monochromatic_3_A = mkA "monocromático" ; --*
lin monochrome_1_A = mkA "monocromático" ; --*
lin monochrome_1_N = mkN "luz" ; --*
lin monocle_N = variants {mkN "monóculo" ; mkN "Monóculo" ; mkN "óculos" ; } ; --*
lin monoclinic_A = mkA "monoclínico" ; --*
lin monoclonal_A = mkA "monoclonal" ; --*
lin monocot_N = variants {mkN "Liliopsida" ; mkN "Monocotiledonea" ; mkN "monocotiledónea" ; mkN "Monocotiledônea" ; } ; --*
lin monoculture_N = mkN "monocultura" ; --*
lin monocyte_N = mkN "monócito" ; --*
lin monogamous_A = mkA "monógamo" ; --*
lin monogamy_N = variants {mkN "monogamia" ; mkN "Monogamia" ; } ; --*
lin monogram_N = variants {mkN "monograma" ; mkN "sigla" ; } ; --*
lin monograph_N = mkN "monografia" ; --*
lin monolingual_A = variants {mkA "monolingue" ; mkA "monolingüe" ; } ; --*
lin monolithic_1_A = mkA "massivo" ; --*
lin monolithic_2_A = mkA "monolítico" ; --*
lin monolith_N = variants {mkN "Monolito" ; mkN "monólito" ; } ; --*
lin monologue_1_N = mkN "monólogo" ; --*
lin monologue_2_N = variants {mkN "monólogo" ; mkN "Monólogo" ; } ; --*
lin monologue_3_N = mkN "monólogo" ; --*
lin monomaniacal_A = mkA "monomaníaco" ; --*
lin monomania_N = mkN "monomania" ; --*
lin monomer_N = variants {mkN "Monómero" ; mkN "monômero" ; mkN "Monômeros" ; } ; --*
lin mononeuropathy_N = mkN "mononeuropatia" ; --*
lin mononuclear_1_A = mkA "mononuclear" ; --*
lin monophony_N = variants {mkN "monofonia" ; mkN "music" ; } ; --*
lin monoplane_N = mkN "monoplano" ; --*
lin monopolization_1_N = mkN "monopolização" ; --*
lin monopolize_1_V2 = variants {mkV2 (mkV "açambarcar") ; mkV2 (mkV "monopolizar") ; } ; --*
lin monopolize_2_V2 = mkV2 (mkV "monopolizar") ; --*
lin monopoly_1_N = variants {mkN "Monopolio" ; mkN "monopólio" ; mkN "Monopólio" ; } ; --*
lin monopoly_2_N = mkN "monopólio" ; --*
lin monopoly_3_N = variants {mkN "Banco" ; mkN "Monopólio" ; } ; --*
lin monopsony_N = mkN "Monopsônio" ; --*
lin monorail_N = mkN "monocarril" ; --*
lin monosaccharide_1_N = variants {mkN "Monossacarídeo" ; mkN "Monossacarídeos" ; mkN "sugar" ; } ; --*
lin monosomy_N = mkN "monossomia" ; --*
lin monotheism_N = variants {mkN "Monoteismo" ; mkN "monoteísmo" ; } ; --*
lin monotonic_1_A = mkA "monotônico" ; --*
lin monotonic_2_A = variants {mkA "monotônico" ; mkA "monótono" ; } ; --*
lin monotonous_2_A = variants {mkA "monotônico" ; mkA "monótono" ; } ; --*
lin monotony_1_N = mkN "monotonia" ; --*
lin monotreme_N = variants {mkN "mammal" ; mkN "Monotremata" ; } ; --*
lin monozygotic_A = mkA "monozigótico" ; --*
lin monsignor_N = variants {mkN "monsenhor" ; mkN "Monsenhor" ; } ; --*
lin mons_N = variants {mkN "Monte" ; mkN "pubis" ; mkN "veneris" ; } ; --*
lin monsoon_1_N = mkN "monção" ; --*
lin monsoon_2_N = mkN "monção" ; --*
lin monsoon_3_N = mkN "monção" ; --*
lin monster_1_N = mkN "monstro" ; --*
lin monster_2_N = variants {mkN "gigante" ; mkN "monstro" ; } ; --*
lin monster_3_N = variants {mkN "esdrúxulo" ; mkN "monstro" ; mkN "naturae" ; } ; --*
lin monster_4_N = variants {mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; mkN "monstro" ; mkN "ogro" ; } ; --*
lin monstrance_2_N = variants {mkN "custódia" ; mkN "ostensório" ; mkN "Ostensório" ; } ; --*
lin monstrosity_1_N = variants {mkN "esdrúxulo" ; mkN "monstro" ; mkN "naturae" ; } ; --*
lin monstrous_2_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "nefando" ; } ; --*
lin monstrous_3_A = variants {mkA "grotesco" ; mkA "monstruoso" ; } ; --*
lin montage_N = mkN "colagem" ; --*
lin montana_PN = variants {mkPN "Montana" ; mkPN "State" ; } ; --*
lin monterrey_PN = mkPN "Monterrei" ; --*
lin montevideo_PN = variants {mkPN "Montevideo" ; mkPN "Montevideu" ; mkPN "of" ; } ; --*
lin month_1_N = variants {mkN "mês" ; mkN "month" ; } ; --*
lin month_2_N = mkN "mês" ; --*
lin monthly_Adv = variants {mkAdv "mensal" ; mkAdv "mensalmente" ; } ; --*
lin monthly_A = mkA "mensal" ; --*
lin montreal_PN = variants {mkPN "Montreal" ; mkPN "Montréal" ; } ; --*
lin montserrat_PN = variants {mkPN "Monserrate" ; mkPN "Montserrat" ; } ; --*
lin monument_1_N = variants {mkN "monumento" ; mkN "monumentos" ; } ; --*
lin monument_2_N = variants {mkN "monumento" ; mkN "monumentos" ; } ; --*
lin monument_3_N = variants {mkN "monumento" ; mkN "monumentos" ; } ; --*
lin monumental_1_A = mkA "monumental" ; --*
lin monumental_2_A = mkA "monumental" ; --*
lin monumental_3_A = mkA "massivo" ; --*
lin moo_cow_N = mkN "vaca" ; --*
lin mood_1_N = mkN "humor" ; --*
lin mood_2_N = variants {mkN "clima" ; mkN "Clima" ; mkN "humor" ; } ; --*
lin mood_3_N = variants {mkN "modalidade" ; mkN "modo" ; } ; --*
lin moody_1_A = mkA "taciturno" ; --*
lin moon_1_N = variants {mkN "lua" ; mkN "Lua" ; } ; --*
lin moon_2_N = mkN "lua" ; --*
lin moon_3_N = variants {mkN "lua" ; mkN "mês" ; mkN "month" ; } ; --*
lin moon_4_N = variants {mkN "luar" ; mkN "luz" ; } ; --*
lin moon_5_N = variants {mkN "Myung" ; mkN "Sun" ; } ; --*
lin moon_6_N = variants {mkN "lua" ; mkN "satélite" ; mkN "satélites" ; } ; --*
lin moonflower_N = variants {mkN "alba" ; mkN "de" ; mkN "Ipomoea" ; } ; --*
lin moonlight_N = variants {mkN "luar" ; mkN "luz" ; } ; --*
lin moonlit_A = mkA "enluarado" ; --*
lin moo_N = mkN "mugido" ; --*
lin moonshine_1_N = variants {mkN "luar" ; mkN "luz" ; } ; --*
lin moonstone_N = mkN "pedra" ; --*
lin moonwalk_1_N = mkN "moonwalk" ; --*
lin moony_1_A = mkA "enluarado" ; --*
lin moony_2_A = mkA "sonhador" ; --*
lin moor_1_N = variants {mkN "Amarre" ; mkN "moiro" ; mkN "mouro" ; mkN "mouros" ; } ; --*
lin moor_1_V2 = variants {mkV2 (mkV "atracar") ; mkV2 (mkV "up") ; } ; --*
lin moor_2_N = variants {mkN "brejos" ; mkN "charneca" ; mkN "páramo" ; } ; --*
lin moor_3_V2 = mkV2 (mkV "atracar") ; --*
lin moorage_2_N = variants {mkN "ancoradouro" ; mkN "atracadouro" ; } ; --*
lin mooring_1_N = variants {mkN "ancoradouro" ; mkN "atracadouro" ; } ; --*
lin mooring_2_N = variants {mkN "Amarra" ; mkN "line" ; } ; --*
lin moorish_A = mkA "mouro" ; --*
lin moorland_N = variants {mkN "brejos" ; mkN "charneca" ; mkN "páramo" ; } ; --*
lin moose_N = variants {mkN "alce" ; mkN "alces" ; mkN "elk" ; mkN "grã-besta" ; } ; --*
lin moot_2_A = mkA "discutível" ; --*
lin moot_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "deliberar") ; mkV2 (mkV "over") ; } ; --*
lin moo_V = mkV "mugir" ; --*
lin moped_N = variants {mkN "ciclomotor" ; mkN "mota" ; mkN "motocicleta" ; } ; --*
lin mop_N = variants {mkN "esfregão" ; mkN "Esfregão" ; } ; --*
lin mop_up_3_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin moraine_N = mkN "morena" ; --*
lin moral_1_A = mkA "moral" ; --*
lin moral_2_A = mkA "moral" ; --*
lin morale_1_N = mkN "moral" ; --*
lin morale_2_N = variants {mkN "de" ; mkN "espírito" ; mkN "spirit" ; } ; --*
lin morality_1_N = variants {mkN "moral" ; mkN "moralidade" ; mkN "virtude" ; } ; --*
lin morality_2_N = variants {mkN "ética" ; mkN "morais" ; mkN "moral" ; mkN "motive" ; } ; --*
lin moralize_2_V = mkV "julgar" ; --*
lin moral_N = variants {mkN "lição" ; mkN "moral" ; } ; --*
lin morass_N = mkN "pântano" ; --*
lin moratorium_1_N = mkN "moratória" ; --*
lin moratorium_2_N = mkN "moratória" ; --*
lin moray_N = variants {mkN "eel" ; mkN "moreia" ; mkN "Muraenidae" ; } ; --*
lin morbid_3_A = variants {mkA "mórbido" ; mkA "patológico" ; } ; --*
lin morbidity_2_N = mkN "morbidade" ; --*
lin morbidness_1_N = mkN "morbidade" ; --*
lin mordant_2_A = variants {mkA "cáustico" ; mkA "corrosivo" ; } ; --*
lin more_2_Adv = mkAdv "mais" ; --*
lin more_N = variants {mkN "More" ; mkN "Thomas" ; } ; --*
lin more_often_than_not_Adv = variants {mkAdv "and" ; mkAdv "em" ; mkAdv "generalmente" ; mkAdv "often" ; } ; --*
lin moreover_Adv = variants {mkAdv "ademais" ; mkAdv "aliás" ; mkAdv "demais" ; mkAdv "em" ; mkAdv "is" ; mkAdv "mais" ; } ; --*
lin moresque_A = mkA "mouro" ; --*
lin morgan_2_N = variants {mkN "Hunt" ; mkN "Thomas" ; } ; --*
lin morgan_3_N = variants {mkN "Henry" ; mkN "Morgan" ; } ; --*
lin morgan_5_N = variants {mkN "John" ; mkN "P." ; mkN "Pierpont" ; } ; --*
lin morgue_N = variants {mkN "necrotério" ; mkN "room" ; } ; --*
lin moribund_2_A = mkA "moribundo" ; --*
lin morion_N = variants {mkN "bacinete" ; mkN "morrião" ; mkN "Morrião" ; } ; --*
lin mormon_1_N = variants {mkN "Mormon" ; mkN "mórmon" ; mkN "Mórmon" ; } ; --*
lin mormon_A = mkA "mórmon" ; --*
lin mormonism_N = variants {mkN "Movimento" ; mkN "os" ; mkN "Os" ; } ; --*
lin morning_1_N = variants {mkN "madrugada" ; mkN "manhã" ; mkN "time" ; } ; --*
lin morning_3_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin morning_4_N = mkN "madrugada" ; --*
lin morning_glory_N = mkN "glory" ; --*
lin morning_Interj = variants {ss "bom" ; ss "morning" ; } ; --*
lin morn_N = variants {mkN "madrugada" ; mkN "manhã" ; mkN "time" ; } ; --*
lin moroccan_A = mkA "marroquino" ; --*
lin moroccan_N = mkN "marroquino" ; --*
lin morocco_PN = variants {mkPN "Marrocos" ; mkPN "of" ; } ; --*
lin moron_1_N = variants {mkN "bobo" ; mkN "boboca" ; mkN "burro" ; mkN "cretino" ; mkN "débil" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "parvo" ; mkN "pateta" ; mkN "retardado" ; } ; --*
lin moron_2_N = mkN "Mörön" ; --*
lin morose_A = mkA "taciturno" ; --*
lin morpheme_N = mkN "morfema" ; --*
lin morpheus_PN = mkPN "Morfeu" ; --*
lin morphia_N = mkN "morfina" ; --*
lin morphine_N = mkN "morfina" ; --*
lin morphogenesis_N = variants {mkN "Morfogénese" ; mkN "Morfogênese" ; } ; --*
lin morphologic_1_A = mkA "estrutural" ; --*
lin morphologic_3_A = mkA "estrutural" ; --*
lin morphological_2_A = mkA "estrutural" ; --*
lin morphological_3_A = mkA "estrutural" ; --*
lin morphology_1_N = variants {mkN "morfologia" ; mkN "Morfologia" ; } ; --*
lin morphology_2_N = variants {mkN "morfologia" ; mkN "Morfologia" ; } ; --*
lin morphology_3_N = variants {mkN "morfologia" ; mkN "structure" ; } ; --*
lin morphology_4_N = variants {mkN "geomorfologia" ; mkN "Geomorfologia" ; mkN "morfologia" ; } ; --*
lin morrow_N = variants {mkN "amanhã" ; mkN "manhã" ; } ; --*
lin morse_1_N = variants {mkN "code" ; mkN "código" ; mkN "Morse" ; } ; --*
lin morse_2_N = variants {mkN "F." ; mkN "Finley" ; mkN "Morse" ; mkN "Samuel" ; } ; --*
lin morsel_1_N = variants {mkN "fragmento" ; mkN "pedaço" ; } ; --*
lin morsel_2_N = variants {mkN "bocada" ; mkN "bocado" ; mkN "fragmento" ; mkN "gota" ; mkN "mordida" ; mkN "pedaço" ; mkN "porção" ; } ; --*
lin mortal_1_A = mkA "mortal" ; --*
lin mortal_2_A = mkA "mortal" ; --*
lin mortal_3_A = mkA "mortal" ; --*
lin mortal_4_A = mkA "mortal" ; --*
lin mortality_1_N = mkN "mortalidade" ; --*
lin mortality_2_N = variants {mkN "mortalidade" ; mkN "rate" ; } ; --*
lin mortal_N = variants {mkN "alguém" ; mkN "indivíduo" ; mkN "pessoa" ; mkN "ser" ; } ; --*
lin mortar_1_N = variants {mkN "mortar" ; mkN "morteiro" ; mkN "obus" ; } ; --*
lin mortar_2_N = variants {mkN "almofariz" ; mkN "argamassa" ; mkN "cafelo" ; mkN "massa" ; mkN "morteiro" ; mkN "rebouco" ; } ; --*
lin mortar_3_N = variants {mkN "almofariz" ; mkN "gral" ; mkN "morteiro" ; } ; --*
lin mortgage_N = mkN "hipoteca" ; --*
lin mortgage_V2 = mkV2 (mkV "hipotecar") ; --*
lin mortician_N = variants {mkN "agente" ; mkN "director" ; mkN "undertaker" ; } ; --*
lin mortification_2_N = variants {mkN "gangrena" ; mkN "necrose" ; mkN "Necrose" ; } ; --*
lin mortify_1_V2 = mkV2 (mkV "mortificar") ; --*
lin mortify_1_V = mkV "mortificar" ; --*
lin mortify_2_V2 = mkV2 (mkV "mortificar") ; --*
lin mortify_3_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "humilhar") ; mkV2 (mkV "mortificar") ; mkV2 (mkV "rebaixar") ; } ; --*
lin mortify_4_V2 = variants {mkV2 (mkV "gangrenar") ; mkV2 (mkV "necrosar") ; } ; --*
lin mortify_4_V = variants {mkV "gangrenar" ; mkV "necrosar" ; } ; --*
lin mortmain_2_N = variants {mkN "hand" ; mkN "Mãos-mortas" ; } ; --*
lin mortuary_1_A = variants {mkA "funerário" ; mkA "mortuário" ; } ; --*
lin mortuary_2_A = mkA "mortuário" ; --*
lin mortuary_N = variants {mkN "necrotério" ; mkN "room" ; } ; --*
lin morula_N = mkN "mórula" ; --*
lin mosaic_1_N = mkN "mosaico" ; --*
lin mosaic_2_N = mkN "mosaicos" ; --*
lin mosaic_3_N = mkN "Mosaic" ; --*
lin mosaic_4_N = mkN "mosaicos" ; --*
lin moscow_PN = variants {mkPN "capital" ; mkPN "Moscou" ; mkPN "of" ; } ; --*
lin moselle_N = mkN "Mosela" ; --*
lin mosey_V = mkV "passear" ; --*
lin moshav_N = variants {mkN "moshav" ; mkN "Moshav" ; } ; --*
lin moslem_A = variants {mkA "islâmico" ; mkA "muçulmano" ; } ; --*
lin moslem_N = variants {mkN "muçulmano" ; mkN "Muçulmano" ; mkN "Muçulmanos" ; } ; --*
lin mosque_N = variants {mkN "mesquita" ; mkN "Mesquita" ; mkN "Mesquitas" ; } ; --*
lin mosquitofish_N = variants {mkN "affinis" ; mkN "Gambusia" ; } ; --*
lin mosquito_N = variants {mkN "Culicidae" ; mkN "mosquito" ; } ; --*
lin mosquito_net_N = mkN "net" ; --*
lin moss_N = variants {mkN "Bryopsida" ; mkN "musgo" ; mkN "musgos" ; } ; --*
lin most_3_Adv = variants {mkAdv "perto" ; mkAdv "por" ; mkAdv "quase" ; mkAdv "virtualmente" ; } ; --*
lin mostly_1_Adv = variants {mkAdv "maioritariamente" ; mkAdv "pela" ; mkAdv "the" ; } ; --*
lin mostly_2_Adv = variants {mkAdv "and" ; mkAdv "em" ; mkAdv "generalmente" ; mkAdv "often" ; } ; --*
lin motel_N = mkN "motel" ; --*
lin mote_N = variants {mkN "átomo" ; mkN "partícula" ; } ; --*
lin motet_N = mkN "moteto" ; --*
lin mother_1_N = variants {mkN "mãe" ; mkN "parent" ; } ; --*
lin mother_1_V2 = variants {mkV2 (mkV "paparicar") ; mkV2 (mkV "superproteger") ; } ; --*
lin mother_2_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin mother_3_N = mkN "mãe" ; --*
lin mother_4_N = mkN "mãe" ; --*
lin mother_5_N = mkN "mãe" ; --*
lin motherhood_N = mkN "maternidade" ; --*
lin mother_in_law_N = mkN "sogra" ; --*
lin motherland_N = variants {mkN "country" ; mkN "land" ; mkN "of" ; mkN "pátria" ; } ; --*
lin motherly_A = mkA "materno" ; --*
lin mother_of_pearl_N = variants {mkN "Madre" ; mkN "madrepérola" ; } ; --*
lin moth_N = variants {mkN "mariposa" ; mkN "traça" ; } ; --*
lin mothproof_V2 = variants {mkV2 (mkV "dedetizar") ; mkV2 (mkV "desinsetizar") ; } ; --*
lin motif_1_N = mkN "motivo" ; --*
lin motif_2_N = mkN "motivo" ; --*
lin motif_3_N = variants {mkN "ideia" ; mkN "motivo" ; mkN "tema" ; } ; --*
lin motility_1_N = mkN "motilidade" ; --*
lin motility_2_N = mkN "mudança" ; --*
lin motion_1_N = variants {mkN "gesto" ; mkN "Gesto" ; mkN "Gestos" ; } ; --*
lin motion_2_N = mkN "movimento" ; --*
lin motion_3_N = mkN "mudança" ; --*
lin motion_4_N = mkN "movimento" ; --*
lin motion_5_N = mkN "moção" ; --*
lin motion_6_N = variants {mkN "deslocamento" ; mkN "movimento" ; mkN "traslado" ; } ; --*
lin motion_7_N = variants {mkN "motion" ; mkN "movement" ; mkN "movimento" ; } ; --*
lin motionless_A = variants {mkA "estático" ; mkA "quedo" ; } ; --*
lin motion_V = mkV "gesticular" ; --*
lin motivate_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "incentivar") ; mkV2 (mkV "motivar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "provocar") ; } ; --*
lin motivation_1_N = variants {mkN "intenção" ; mkN "motivação" ; mkN "motivo" ; mkN "necessidade" ; } ; --*
lin motivation_2_N = mkN "motivação" ; --*
lin motive_1_N = variants {mkN "intenção" ; mkN "motivação" ; mkN "motivo" ; mkN "necessidade" ; } ; --*
lin motive_2_A = variants {mkA "motor" ; mkA "motriz" ; } ; --*
lin motive_2_N = mkN "motivo" ; --*
lin motive_3_N = mkN "motivo" ; --*
lin motley_1_A = variants {mkA "misto" ; mkA "sortido" ; mkA "variado" ; } ; --*
lin motley_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin motley_2_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin motor_1_N = variants {mkN "motor" ; mkN "motores" ; } ; --*
lin motorbike_N = variants {mkN "mota" ; mkN "moto" ; mkN "motocicleta" ; } ; --*
lin motorcar_N = variants {mkN "auto" ; mkN "automóvel" ; mkN "carro" ; mkN "máquina" ; mkN "veículo" ; mkN "viatura" ; } ; --*
lin motorcoach_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin motorcycle_N = variants {mkN "mota" ; mkN "moto" ; mkN "motocicleta" ; mkN "motocicletas" ; mkN "Motos" ; } ; --*
lin motorist_N = variants {mkN "automobilista" ; mkN "chofer" ; mkN "condutor" ; mkN "motorista" ; } ; --*
lin motorman_N = mkN "motorista" ; --*
lin motor_V = variants {mkV "dirigir" ; mkV "ir" ; } ; --*
lin motorway_N = variants {mkN "autoestrada" ; mkN "auto-estrada" ; mkN "estrada" ; mkN "highway" ; mkN "rodovia" ; mkN "super-autopista" ; mkN "via" ; mkN "vias" ; } ; --*
lin mottle_1_V2 = variants {mkV2 (mkV "manchar") ; mkV2 (mkV "riscar") ; } ; --*
lin motto_N = variants {mkN "cambial" ; mkN "lema" ; mkN "Lemas" ; mkN "mote" ; } ; --*
lin mouflon_1_N = variants {mkN "muflăo" ; mkN "Muflão" ; mkN "musimon" ; } ; --*
lin mould_1_N = mkN "mofo" ; --*
lin mould_1_V2 = variants {mkV2 (mkV "amoldar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "plasmar") ; } ; --*
lin mould_3_V2 = variants {mkV2 (mkV "formar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "moldar") ; } ; --*
lin mould_4_N = variants {mkN "bolor" ; mkN "micetes" ; mkN "mofo" ; } ; --*
lin mould_7_N = variants {mkN "Moldagem" ; mkN "sculpture" ; } ; --*
lin mould_8_N = mkN "molde" ; --*
lin moulder_1_V = variants {mkV "apodrecer" ; mkV "putrefazer" ; } ; --*
lin moulding_2_N = mkN "borda" ; --*
lin moulding_3_N = variants {mkN "Moldagem" ; mkN "sculpture" ; } ; --*
lin moulding_4_N = mkN "modelação" ; --*
lin mouldy_A = mkA "bolorento" ; --*
lin moult_1_V = variants {mkV "depenar" ; mkV "desplumar" ; mkV "mudar" ; mkV "trocar" ; } ; --*
lin moult_N = mkN "muda" ; --*
lin moult_V2 = variants {mkV2 (mkV "depenar") ; mkV2 (mkV "desplumar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin mound_2_N = variants {mkN "colina" ; mkN "outeiro" ; } ; --*
lin mound_3_N = variants {mkN "acúmulo" ; mkN "cúmulo" ; mkN "grupo" ; mkN "montão" ; mkN "monte" ; mkN "pilha" ; } ; --*
lin mound_4_N = mkN "corcova" ; --*
lin mound_5_N = mkN "arremessador" ; --*
lin mount_2_N = mkN "escalada" ; --*
lin mount_2_V = variants {mkV "crescer" ; mkV "subir" ; } ; --*
lin mount_3_N = variants {mkN "montanha" ; mkN "montanhas" ; mkN "Montanhas" ; mkN "monte" ; } ; --*
lin mount_5_V2 = variants {mkV2 (mkV "montar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin mount_6_V = variants {mkV "galgar" ; mkV "montar" ; mkV "up" ; } ; --*
lin mountaineering_N = variants {mkN "alpinismo" ; mkN "climbing" ; } ; --*
lin mountaineer_N = variants {mkN "alpinista" ; mkN "climber" ; mkN "Montanhismo" ; } ; --*
lin mountain_N = variants {mkN "montanha" ; mkN "montanhas" ; mkN "Montanhas" ; mkN "monte" ; } ; --*
lin mountain_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin mountainous_3_A = mkA "montanhoso" ; --*
lin mountainside_N = mkN "encosta" ; --*
lin mountebank_N = variants {mkN "capadócio" ; mkN "charlatão" ; mkN "curandeiro" ; mkN "impostor" ; } ; --*
lin mounting_1_N = variants {mkN "ascenção" ; mkN "escalada" ; mkN "montanhismo" ; } ; --*
lin mounting_2_N = mkN "montagem" ; --*
lin mourn_1_V2 = variants {mkV2 (mkV "estar") ; mkV2 (mkV "lamentar") ; mkV2 (mkV "prantear") ; } ; --*
lin mourn_2_V2 = variants {mkV2 (mkV "enlutar") ; mkV2 (mkV "lamentar") ; } ; --*
lin mourn_2_V = variants {mkV "enlutar" ; mkV "lamentar" ; } ; --*
lin mourner_N = mkN "carpideira" ; --*
lin mournful_1_A = variants {mkA "fúnebre" ; mkA "lutuoso" ; } ; --*
lin mournful_2_A = variants {mkA "lutuoso" ; mkA "triste" ; } ; --*
lin mourning_1_N = mkN "luto" ; --*
lin mourning_2_N = mkN "luto" ; --*
lin mouse_1_N = variants {mkN "camundongo" ; mkN "mouse" ; mkN "Mus" ; mkN "ratazana" ; mkN "rato" ; } ; --*
lin mouse_1_V = variants {mkV "esgueirar" ; mkV "ir" ; } ; --*
lin mouse_2_N = variants {mkN "eye" ; mkN "olho" ; } ; --*
lin mouse_4_N = variants {mkN "mouse" ; mkN "rato" ; } ; --*
lin mousepad_N = variants {mkN "mat" ; mkN "mousepad" ; } ; --*
lin mousetrap_1_N = mkN "ratoeira" ; --*
lin mousse_1_N = variants {mkN "mousse" ; mkN "musse" ; } ; --*
lin moustache_N = variants {mkN "barba" ; mkN "bigode" ; mkN "bigodes" ; } ; --*
lin mouth_1_N = variants {mkN "boca" ; mkN "cavity" ; mkN "fissure" ; mkN "oris" ; } ; --*
lin mouth_1_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "verbalizar") ; } ; --*
lin mouth_1_V = variants {mkV "conversar" ; mkV "dizer" ; mkV "falar" ; mkV "proferir" ; mkV "verbalizar" ; } ; --*
lin mouth_2_N = mkN "boca" ; --*
lin mouth_3_N = mkN "boca" ; --*
lin mouth_4_N = variants {mkN "desembocadura" ; mkN "foz" ; } ; --*
lin mouthful_2_N = mkN "bocado" ; --*
lin mouth_off_V = variants {mkV "off" ; mkV "on" ; mkV "reclamar" ; } ; --*
lin mouth_organ_N = variants {mkN "Harmonica" ; mkN "harmónica" ; mkN "Harmônica" ; mkN "harp" ; mkN "harpa" ; mkN "organ" ; } ; --*
lin mouton_N = variants {mkN "carne" ; mkN "carneiro" ; } ; --*
lin movable_1_A = mkA "móvel" ; --*
lin move_11_V2 = mkV2 (mkV "comover") ; --*
lin move_14_V = mkV "mover" ; --*
lin move_15_V = mkV "mover" ; --*
lin move_16_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fazer") ; } ; --*
lin move_16_V = variants {mkV "a" ; mkV "fazer" ; } ; --*
lin move_1_N = variants {mkN "movimento" ; mkN "passo" ; } ; --*
lin move_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin move_2_N = mkN "mudança" ; --*
lin move_2_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "mover") ; } ; --*
lin move_3_N = mkN "mudança" ; --*
lin move_3_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "mexer") ; mkV2 (mkV "mover") ; } ; --*
lin move_4_N = variants {mkN "deslocamento" ; mkN "movimento" ; mkN "traslado" ; } ; --*
lin move_4_V = variants {mkV "mudar" ; mkV "mudar-se" ; } ; --*
lin move_5_N = mkN "jogada" ; --*
lin move_5_V = mkV "proceder" ; --*
lin move_6_V = variants {mkV "active" ; mkV "mover" ; } ; --*
lin move_7_V = mkV "mover" ; --*
lin move_8_V = variants {mkV "agir" ; mkV "atuar" ; mkV "fazer" ; } ; --*
lin move_9_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "comover") ; mkV2 (mkV "impressionar") ; } ; --*
lin move_in_2_V = mkV "in" ; --*
lin move_in_on_2_V2 = mkV2 (mkV "in") ; --*
lin move_into_V2 = variants {mkV2 (mkV "entrar") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; } ; --*
lin movement_11_N = mkN "movimento" ; --*
lin movement_1_N = mkN "mudança" ; --*
lin movement_2_N = variants {mkN "deslocamento" ; mkN "movimento" ; mkN "traslado" ; } ; --*
lin movement_3_N = mkN "movimento" ; --*
lin movement_4_N = variants {mkN "movement" ; mkN "movimento" ; mkN "movimentos" ; mkN "Movimentos" ; } ; --*
lin movement_5_N = mkN "movimento" ; --*
lin movement_6_N = variants {mkN "campanha" ; mkN "causa" ; } ; --*
lin movement_7_N = variants {mkN "motion" ; mkN "movement" ; mkN "movimento" ; } ; --*
lin movement_9_N = mkN "tendência" ; --*
lin move_on_V = variants {mkV "ganhar" ; mkV "on" ; } ; --*
lin move_up_1_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin move_up_2_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin move_V2V = variants {mkV2V (mkV "estimular") ; mkV2V (mkV "incentivar") ; mkV2V (mkV "motivar") ; mkV2V (mkV "propulsar") ; mkV2V (mkV "provocar") ; } ; --*
lin movie_N = variants {mkN "cinema" ; mkN "filme" ; mkN "película" ; mkN "picture" ; mkN "produção" ; mkN "show" ; } ; --*
lin movies_N = variants {mkN "cinema" ; mkN "house" ; mkN "palace" ; mkN "theater" ; mkN "theatre" ; } ; --*
lin moving_1_A = mkA "movente" ; --*
lin moving_2_A = mkA "comovente" ; --*
lin mower_N = variants {mkN "corta-relva" ; mkN "mower" ; } ; --*
lin mow_V2 = variants {mkV2 (mkV "ceifar") ; mkV2 (mkV "down") ; mkV2 (mkV "foiçar") ; mkV2 (mkV "roçar") ; } ; --*
lin mozambican_1_A = mkA "moçambicano" ; --*
lin mozambique_PN = variants {mkPN "Mocambique" ; mkPN "Moçambique" ; mkPN "of" ; } ; --*
lin mozzarella_N = mkN "mozarela" ; --*
lin mp_2_N = variants {mkN "PM" ; mkN "police" ; } ; --*
lin mph_1_N = variants {mkN "Milha" ; mkN "per" ; } ; --*
lin mr_PN = variants {mkPN "senhor" ; mkPN "Sr" ; mkPN "Sr." ; mkPN "Sr.." ; } ; --*
lin ms_1_N = variants {mkN "esclerose" ; mkN "multiple" ; mkN "sclerosis" ; } ; --*
lin ms_2_PN = variants {mkPN "Mississippi" ; mkPN "Mississíppi" ; mkPN "State" ; } ; --*
lin ms_4_N = mkN "manuscrito" ; --*
lin mt_1_PN = variants {mkPN "109" ; mkPN "Meitnerio" ; mkPN "Meitnério" ; mkPN "number" ; } ; --*
lin mt_2_PN = variants {mkPN "ton" ; mkPN "tonelada" ; } ; --*
lin mt_3_PN = variants {mkPN "Montana" ; mkPN "State" ; } ; --*
lin mt_4_PN = variants {mkPN "Tradução" ; mkPN "translation" ; } ; --*
lin much_3_Adv = variants {mkAdv "good" ; mkAdv "great" ; mkAdv "lot" ; mkAdv "much" ; mkAdv "mui" ; mkAdv "muita" ; } ; --*
lin much_4_Adv = mkAdv "praticamente" ; --*
lin mucilage_2_N = variants {mkN "cola" ; mkN "colas" ; mkN "materiais" ; } ; --*
lin mucin_N = mkN "Mucina" ; --*
lin muck_1_N = variants {mkN "barro" ; mkN "gosma" ; mkN "lama" ; mkN "lodo" ; mkN "olho" ; } ; --*
lin muck_2_N = variants {mkN "bosta" ; mkN "cocô" ; mkN "esterco" ; mkN "excremento" ; mkN "fezes" ; mkN "matéria" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin muck_3_V = variants {mkV "enlamear" ; mkV "up" ; } ; --*
lin muck_heap_N = mkN "sambaqui" ; --*
lin muckle_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin mucopolysaccharidosis_N = mkN "Mucopolissacaridose" ; --*
lin mucous_1_A = mkA "mucoso" ; --*
lin mucus_N = variants {mkN "muco" ; mkN "secretion" ; } ; --*
lin mud_1_N = variants {mkN "lama" ; mkN "Lama" ; } ; --*
lin mud_1_V2 = variants {mkV2 (mkV "enlamear") ; mkV2 (mkV "up") ; } ; --*
lin muddle_1_N = variants {mkN "bagunça" ; mkN "nest" ; mkN "ninho" ; mkN "zona" ; } ; --*
lin muddle_2_N = variants {mkN "dificuldade" ; mkN "merda" ; mkN "of" ; mkN "problema" ; } ; --*
lin muddle_2_V2 = variants {mkV2 (mkV "atabalhoar") ; mkV2 (mkV "confundir") ; } ; --*
lin muddy_1_V2 = variants {mkV2 (mkV "enlamear") ; mkV2 (mkV "up") ; } ; --*
lin muddy_2_V2 = variants {mkV2 (mkV "enlamear") ; mkV2 (mkV "turvar") ; } ; --*
lin muddy_3_V2 = variants {mkV2 (mkV "enlamear") ; mkV2 (mkV "turvar") ; } ; --*
lin mudra_N = mkN "mudra" ; --*
lin mudskipper_N = mkN "Periophthalmus" ; --*
lin mudslide_N = mkN "deslizamento" ; --*
lin muesli_N = mkN "Granola" ; --*
lin muezzin_1_N = variants {mkN "almoadem" ; mkN "almuadem" ; mkN "almuédão" ; mkN "muezim" ; } ; --*
lin muff_1_N = mkN "regalo" ; --*
lin muff_1_V2 = mkV2 (mkV "falhar") ; --*
lin muff_2_N = mkN "fumble" ; --*
lin muff_2_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin muffin_N = mkN "Queque" ; --*
lin muffle_1_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; } ; --*
lin muffle_2_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "amortecer") ; mkV2 (mkV "down") ; } ; --*
lin muffler_1_N = mkN "silenciador" ; --*
lin mug_2_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin mug_3_N = variants {mkN "face" ; mkN "Fisiognomia" ; mkN "fisionomia" ; mkN "rosto" ; } ; --*
lin mug_4_N = mkN "caneca" ; --*
lin mugging_N = mkN "assalto" ; --*
lin muggins_N = variants {mkN "bobo" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "tolo" ; } ; --*
lin muggy_A = variants {mkA "pesado" ; mkA "úmido" ; } ; --*
lin mug_up_on_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "marrar") ; mkV2 (mkV "up") ; } ; --*
lin mugwort_N = mkN "artemísia" ; --*
lin muhammad_1_PN = variants {mkPN "Elijah" ; mkPN "Muhammad" ; } ; --*
lin muhammad_2_PN = variants {mkPN "Mahoma" ; mkPN "Maomé" ; mkPN "Muhammad" ; } ; --*
lin muhammadanism_1_N = mkN "islamismo" ; --*
lin mujahidin_1_N = mkN "Mujahidin" ; --*
lin mukden_PN = mkPN "Shenyang" ; --*
lin mulatto_N = mkN "mulato" ; --*
lin mulberry_1_N = variants {mkN "amoreira" ; mkN "tree" ; } ; --*
lin mulberry_2_N = variants {mkN "amora" ; mkN "amoreira" ; } ; --*
lin mulch_N = mkN "camada" ; --*
lin mulct_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin mulct_2_V2 = mkV2 (mkV "multar") ; --*
lin mule_1_N = variants {mkN "babucha" ; mkN "mu" ; mkN "mula" ; mkN "mulo" ; mkN "pantufo" ; } ; --*
lin mulishness_N = mkN "obstinação" ; --*
lin mullah_1_N = mkN "Mulá" ; --*
lin mullein_N = variants {mkN "leaf" ; mkN "plant" ; mkN "Verbascum" ; } ; --*
lin muller_1_N = variants {mkN "Hermann" ; mkN "Paul" ; } ; --*
lin muller_2_N = variants {mkN "Alex" ; mkN "Karl" ; } ; --*
lin muller_3_N = variants {mkN "Johannes" ; mkN "Peter" ; } ; --*
lin muller_4_N = variants {mkN "Johannes" ; mkN "Muller" ; } ; --*
lin muller_5_N = variants {mkN "Max" ; mkN "Muller" ; } ; --*
lin muller_6_N = variants {mkN "Hermann" ; mkN "Joseph" ; } ; --*
lin mullet_1_N = variants {mkN "mullet" ; mkN "tainha" ; } ; --*
lin mullion_N = mkN "mainel" ; --*
lin mull_over_V2 = variants {mkV2 (mkV "contemplar") ; mkV2 (mkV "over") ; mkV2 (mkV "refletir") ; } ; --*
lin multicellular_A = variants {mkA "multicelular" ; mkA "pluricelular" ; } ; --*
lin multicollinearity_N = mkN "multicolinearidade" ; --*
lin multiculturalism_N = mkN "multiculturalismo" ; --*
lin multidimensional_A = mkA "multidimensional" ; --*
lin multifactorial_A = mkA "multifatorial" ; --*
lin multi_lingual_A = variants {mkA "multilingue" ; mkA "multilíngue" ; } ; --*
lin multimedia_N = variants {mkN "Multimedia" ; mkN "system" ; } ; --*
lin multinational_A = mkA "multinacional" ; --*
lin multiple_A = mkA "múltiplo" ; --*
lin multiple_N = mkN "múltiplo" ; --*
lin multiplexer_N = mkN "Multiplexador" ; --*
lin multiplication_1_N = mkN "geração" ; --*
lin multiplication_2_N = mkN "multiplicação" ; --*
lin multiplication_3_N = mkN "multiplicação" ; --*
lin multiplicity_1_N = mkN "multiplicidade" ; --*
lin multiplier_N = variants {mkN "factor" ; mkN "multiplicador" ; } ; --*
lin multiply_4_V = variants {mkV "gerar" ; mkV "procriar" ; mkV "reproduzir" ; } ; --*
lin multiply_by_V3 = mkV3 (mkV "multiplicar") ; --*
lin multiply_V2 = mkV2 (mkV "multiplicar") ; --*
lin multipotent_A = mkA "multipotente" ; --*
lin multistage_N = mkN "multiestágio" ; --*
lin multitude_1_N = variants {mkN "batalhão" ; mkN "montão" ; mkN "multidão" ; mkN "number" ; mkN "pilha" ; } ; --*
lin multitude_2_N = variants {mkN "massa" ; mkN "multidão" ; mkN "povo" ; } ; --*
lin multitude_3_N = variants {mkN "gente" ; mkN "great" ; mkN "massa" ; mkN "polloi" ; mkN "povo" ; } ; --*
lin multitudinous_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin mum_2_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin mumble_1_V2 = variants {mkV2 (mkV "balbuciar") ; mkV2 (mkV "murmurar") ; mkV2 (mkV "resmungar") ; } ; --*
lin mumble_1_V = variants {mkV "balbuciar" ; mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin mummer_1_N = variants {mkN "fantasiado" ; mkN "mímica" ; mkN "mímico" ; } ; --*
lin mummify_1_V2 = mkV2 (mkV "mumificar") ; --*
lin mummify_2_V2 = mkV2 (mkV "mumificar") ; --*
lin mummify_3_V2 = variants {mkV2 (mkV "mumificar") ; mkV2 (mkV "up") ; } ; --*
lin mummy_1_N = variants {mkN "mãe" ; mkN "mãezinha" ; mkN "mamã" ; mkN "mamãe" ; } ; --*
lin mummy_2_N = variants {mkN "múmia" ; mkN "Múmias" ; } ; --*
lin mumps_N = variants {mkN "caxumba" ; mkN "parotitis" ; } ; --*
lin munch_1_N = variants {mkN "Edvard" ; mkN "Munch" ; } ; --*
lin mundane_1_A = variants {mkA "cotidiano" ; mkA "quotidiano" ; } ; --*
lin mundane_2_A = variants {mkA "mundano" ; mkA "terrestre" ; } ; --*
lin mung_1_N = variants {mkN "aureus" ; mkN "bean" ; mkN "gram" ; mkN "radiata" ; mkN "Vigna" ; } ; --*
lin mung_2_N = variants {mkN "aureus" ; mkN "bean" ; mkN "gram" ; mkN "radiata" ; mkN "Vigna" ; } ; --*
lin munich_PN = variants {mkPN "Alemães" ; mkPN "Munique" ; } ; --*
lin municipal_1_A = mkA "municipal" ; --*
lin municipal_2_A = variants {mkA "autárquico" ; mkA "municipal" ; } ; --*
lin municipality_1_N = mkN "município" ; --*
lin municipality_2_N = variants {mkN "municipalidade" ; mkN "município" ; } ; --*
lin munificent_A = mkA "exuberante" ; --*
lin munition_1_N = variants {mkN "arma" ; mkN "armamento" ; mkN "munição" ; mkN "of" ; mkN "system" ; } ; --*
lin munition_2_N = variants {mkN "munição" ; mkN "store" ; } ; --*
lin munition_3_N = variants {mkN "fortaleza" ; mkN "fortificação" ; } ; --*
lin mu_N = variants {mkN "mi" ; mkN "quem" ; mkN "Μ" ; } ; --*
lin muon_N = variants {mkN "muão" ; mkN "muon" ; mkN "múon" ; } ; --*
lin mural_N = variants {mkN "muralismo" ; mkN "painting" ; } ; --*
lin murder_1_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin murderer_N = variants {mkN "assassina" ; mkN "assassino" ; mkN "homicida" ; } ; --*
lin murderess_N = mkN "assassino" ; --*
lin murder_N = variants {mkN "assassinato" ; mkN "assassínio" ; mkN "homicídio" ; } ; --*
lin murk_N = variants {mkN "neblina" ; mkN "nevoeiro" ; } ; --*
lin murmur_1_V = mkV "murmurar" ; --*
lin murmur_2_V = variants {mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin murmur_3_N = variants {mkN "murmur" ; mkN "Sopro" ; } ; --*
lin murphy_N = variants {mkN "batata" ; mkN "batatinha" ; mkN "marmêndoa" ; mkN "potato" ; } ; --*
lin murrain_N = mkN "morrinha" ; --*
lin muscadine_2_N = variants {mkN "grape" ; mkN "Vitis" ; } ; --*
lin muscat_2_N = variants {mkN "Mascate" ; mkN "of" ; } ; --*
lin muscle_1_N = variants {mkN "Musculo" ; mkN "músculo" ; mkN "Músculo" ; } ; --*
lin muscle_2_N = variants {mkN "músculo" ; mkN "tissue" ; } ; --*
lin muscle_5_N = mkN "músculo" ; --*
lin muscleman_2_N = variants {mkN "builder" ; mkN "culturista" ; } ; --*
lin muscovite_2_N = mkN "moscovita" ; --*
lin muscovite_A = mkA "moscovita" ; --*
lin muscular_1_A = mkA "muscular" ; --*
lin muscular_4_A = mkA "musculoso" ; --*
lin muscularity_2_N = mkN "músculo" ; --*
lin muscularity_3_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin muse_1_N = variants {mkN "musa" ; mkN "Musas" ; } ; --*
lin muse_2_N = mkN "musa" ; --*
lin museum_N = variants {mkN "museu" ; mkN "museus" ; } ; --*
lin muse_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin mushroom_1_V = mkV "colher" ; --*
lin mushroom_3_N = mkN "cogumelos" ; --*
lin mushroom_4_N = variants {mkN "cloud" ; mkN "Nuvem" ; } ; --*
lin mushroom_5_N = variants {mkN "cogumelo" ; mkN "cogumelos" ; } ; --*
lin mushy_2_A = mkA "sentimental" ; --*
lin music_1_N = mkN "música" ; --*
lin music_2_N = variants {mkN "eufonia" ; mkN "música" ; } ; --*
lin music_3_N = mkN "música" ; --*
lin music_4_N = mkN "música" ; --*
lin musical_1_A = mkA "musical" ; --*
lin musical_2_A = mkA "musical" ; --*
lin musical_3_A = mkA "musical" ; --*
lin musical_box_N = mkN "box" ; --*
lin music_box_N = mkN "box" ; --*
lin music_hall_2_N = variants {mkN "hall" ; mkN "vaudeville" ; } ; --*
lin musicianFem_1_N = variants {mkN "instrumentalista" ; mkN "instrumentista" ; mkN "músico" ; mkN "tocador" ; } ; --*
lin musicianFem_2_N = variants {mkN "Musico" ; mkN "músico" ; mkN "Músico" ; } ; --*
lin musicianMasc_1_N = variants {mkN "instrumentalista" ; mkN "instrumentista" ; mkN "músico" ; mkN "tocador" ; } ; --*
lin musicianMasc_2_N = variants {mkN "Musico" ; mkN "músico" ; mkN "Músico" ; } ; --*
lin musicology_N = mkN "musicologia" ; --*
lin music_stand_N = variants {mkN "rack" ; mkN "stand" ; } ; --*
lin musk_2_N = variants {mkN "Almiscar" ; mkN "almíscar" ; } ; --*
lin musket_N = mkN "mosquete" ; --*
lin muskrat_1_N = variants {mkN "fur" ; mkN "rato" ; } ; --*
lin muskrat_2_N = variants {mkN "rato-almiscarado" ; mkN "zibethica" ; } ; --*
lin muslim_A = variants {mkA "islâmico" ; mkA "muçulmano" ; } ; --*
lin muslim_N = variants {mkN "muçulmano" ; mkN "Muçulmano" ; mkN "Muçulmanos" ; } ; --*
lin muslin_N = variants {mkN "musselina" ; mkN "Musselina" ; } ; --*
lin musquash_N = variants {mkN "rato-almiscarado" ; mkN "zibethica" ; } ; --*
lin mussel_1_N = mkN "mexilhão" ; --*
lin mussel_2_N = mkN "mexilhão" ; --*
lin muss_N = mkN "bagunça" ; --*
lin must_2_N = mkN "mosto" ; --*
lin mustache_N = variants {mkN "barba" ; mkN "bigode" ; mkN "bigodes" ; } ; --*
lin mustard_1_N = mkN "sinapis" ; --*
lin mustard_2_N = variants {mkN "mostarda" ; mkN "mustard" ; } ; --*
lin muster_1_V2 = variants {mkV2 (mkV "reagrupar") ; mkV2 (mkV "up") ; } ; --*
lin muster_2_N = variants {mkN "alistamento" ; mkN "conscrição" ; mkN "service" ; } ; --*
lin musth_N = mkN "musth" ; --*
lin musty_1_A = mkA "bolorento" ; --*
lin musty_2_A = mkA "bolorento" ; --*
lin mutable_1_A = variants {mkA "alterável" ; mkA "modificável" ; mkA "mutável" ; } ; --*
lin mutagen_N = variants {mkN "agente" ; mkN "Agente" ; mkN "mutagênico" ; mkN "mutagénio" ; } ; --*
lin mutant_1_N = variants {mkN "mutação" ; mkN "mutante" ; mkN "mutantes" ; } ; --*
lin mutant_2_N = mkN "mutantes" ; --*
lin mutation_1_N = variants {mkN "mutação" ; mkN "mutante" ; mkN "mutantes" ; } ; --*
lin mutation_2_N = variants {mkN "mutação" ; mkN "mutation" ; } ; --*
lin mutation_3_N = mkN "mutação" ; --*
lin mute_1_A = variants {mkA "mudo" ; mkA "sem" ; } ; --*
lin mute_1_N = variants {mkN "mudo" ; mkN "person" ; mkN "surdo-mudo" ; } ; --*
lin mute_2_A = variants {mkA "muda" ; mkA "mudo" ; } ; --*
lin muteness_2_N = mkN "silêncio" ; --*
lin mute_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "amortecer") ; mkV2 (mkV "down") ; } ; --*
lin mutilate_1_V2 = variants {mkV2 (mkV "desfigurar") ; mkV2 (mkV "mutilar") ; mkV2 (mkV "up") ; } ; --*
lin mutilation_1_N = mkN "mutilação" ; --*
lin mutilation_2_N = variants {mkN "desfiguração" ; mkN "desfiguramento" ; } ; --*
lin mutiny_N = variants {mkN "insurreição" ; mkN "motim" ; mkN "motinada" ; mkN "rebelião" ; mkN "revolta" ; mkN "sedição" ; mkN "sublevação" ; } ; --*
lin mutiny_V = variants {mkV "amotinar" ; mkV "sublevar" ; } ; --*
lin mutter_1_V2 = variants {mkV2 (mkV "balbuciar") ; mkV2 (mkV "murmurar") ; mkV2 (mkV "resmungar") ; } ; --*
lin mutter_1_V = variants {mkV "balbuciar" ; mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin mutter_2_V = variants {mkV "murmurar" ; mkV "resmungar" ; } ; --*
lin mutt_N = variants {mkN "rafeiro" ; mkN "vira-lata" ; } ; --*
lin mutton_head_N = mkN "cabeça" ; --*
lin mutton_N = variants {mkN "carne" ; mkN "carneiro" ; } ; --*
lin mutual_1_A = variants {mkA "comum" ; mkA "mútuo" ; mkA "recíproco" ; } ; --*
lin mutual_2_A = variants {mkA "mútuo" ; mkA "recíproca" ; mkA "recíproco" ; } ; --*
lin mutuality_1_N = mkN "interdependência" ; --*
lin mutuality_2_N = variants {mkN "interdependência" ; mkN "Interdependência" ; } ; --*
lin muzzle_1_N = variants {mkN "cano" ; mkN "muzzle" ; } ; --*
lin muzzle_1_V2 = mkV2 (mkV "amordaçar") ; --*
lin muzzle_2_V2 = mkV2 (mkV "amordaçar") ; --*
lin muzzle_3_N = variants {mkN "focinheira" ; mkN "mordaça" ; } ; --*
lin muzzle_3_V2 = mkV2 (mkV "amordaçar") ; --*
lin muzzle_4_N = variants {mkN "açaime" ; mkN "açaimo" ; mkN "mordaça" ; mkN "Mordaça" ; } ; --*
lin myalgia_N = variants {mkN "mialgia" ; mkN "Mialgia" ; } ; --*
lin myasthenia_1_N = variants {mkN "gravis" ; mkN "miastenia" ; } ; --*
lin mycelium_N = mkN "micélio" ; --*
lin mycology_N = variants {mkN "micologia" ; mkN "Micologia" ; } ; --*
lin mycophagy_N = mkN "micofagia" ; --*
lin mycotoxin_N = variants {mkN "micotoxina" ; mkN "Micotoxinas" ; } ; --*
lin mydriasis_N = mkN "Midríase" ; --*
lin myelin_1_N = mkN "mielina" ; --*
lin myelitis_N = mkN "mielite" ; --*
lin myeloblast_N = mkN "Mieloblasto" ; --*
lin myelocyte_N = mkN "Mielócito" ; --*
lin myelofibrosis_N = mkN "Mielofibrose" ; --*
lin myeloma_N = mkN "mieloma" ; --*
lin myiasis_N = mkN "Miíase" ; --*
lin myocardium_N = mkN "miocárdio" ; --*
lin myoclonus_N = mkN "mioclonia" ; --*
lin myofibril_1_N = mkN "Miofibrilha" ; --*
lin myoglobin_N = mkN "Mioglobina" ; --*
lin myology_N = mkN "Miologia" ; --*
lin myoma_N = mkN "mioma" ; --*
lin myometrium_N = mkN "Miométrio" ; --*
lin myopathy_N = variants {mkN "Doenças" ; mkN "Miopatia" ; } ; --*
lin myopia_N = mkN "miopia" ; --*
lin myopic_1_A = mkA "míope" ; --*
lin myosin_N = mkN "miosina" ; --*
lin myositis_N = variants {mkN "miite" ; mkN "miosite" ; mkN "Miosite" ; } ; --*
lin myriad_1_N = mkN "miríade" ; --*
lin myriad_2_N = variants {mkN "dez" ; mkN "miríade" ; mkN "thousand" ; } ; --*
lin myriad_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin myringotomy_N = mkN "Miringotomia" ; --*
lin myrmecophile_N = mkN "Mirmecofilia" ; --*
lin myrmidon_2_N = mkN "Mirmidão" ; --*
lin myrrh_N = variants {mkN "cicely" ; mkN "mirra" ; mkN "myrrh" ; } ; --*
lin myrtle_1_N = variants {mkN "minor" ; mkN "mirto" ; mkN "murta" ; mkN "murteira" ; mkN "murtinheira" ; } ; --*
lin myrtle_2_N = mkN "murta" ; --*
lin mysophobia_N = mkN "Misofobia" ; --*
lin mysterious_1_A = variants {mkA "misteriosa" ; mkA "misterioso" ; } ; --*
lin mysterious_2_A = variants {mkA "misteriosa" ; mkA "misterioso" ; mkA "místico" ; } ; --*
lin mystery_1_N = variants {mkN "book" ; mkN "misterio" ; mkN "mistério" ; } ; --*
lin mystic_1_A = variants {mkA "misteriosa" ; mkA "misterioso" ; mkA "místico" ; } ; --*
lin mystic_2_A = mkA "místico" ; --*
lin mystic_3_A = mkA "místico" ; --*
lin mystical_1_A = mkA "místico" ; --*
lin mystical_2_A = mkA "místico" ; --*
lin mystical_3_A = variants {mkA "misteriosa" ; mkA "misterioso" ; mkA "místico" ; } ; --*
lin mysticism_1_N = variants {mkN "misticismo" ; mkN "mysticism" ; } ; --*
lin mysticism_2_N = variants {mkN "misticismo" ; mkN "Misticismo" ; } ; --*
lin mystify_1_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin mystify_2_V2 = mkV2 (mkV "mistificar") ; --*
lin mythic_1_A = mkA "mítico" ; --*
lin mythic_2_A = mkA "mítico" ; --*
lin mythical_A = mkA "mítico" ; --*
lin myth_N = variants {mkN "lenda" ; mkN "mito" ; } ; --*
lin mythological_1_A = mkA "mítico" ; --*
lin mythology_1_N = variants {mkN "mitologia" ; mkN "Mitologia" ; } ; --*
lin mythology_2_N = mkN "mitologia" ; --*
lin myxedema_1_N = variants {mkN "mixedema" ; mkN "Mixedema" ; } ; --*
lin myxobacteria_1_N = variants {mkN "bacteria" ; mkN "mixobactéria" ; } ; --*
lin myxoma_N = mkN "mixoma" ; --*
lin myxomatosis_N = mkN "mixomatose" ; --*
lin nab_2_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin nab_3_V2 = mkV2 (mkV "esconder") ; --*
lin nacelle_N = mkN "nacele" ; --*
lin nacho_N = mkN "nachos" ; --*
lin nacre_N = variants {mkN "Madre" ; mkN "madrepérola" ; } ; --*
lin nacreous_2_A = mkA "iridescente" ; --*
lin nadir_1_N = variants {mkN "mark" ; mkN "nadir" ; } ; --*
lin nadir_2_N = mkN "nadir" ; --*
lin nadolol_N = variants {mkN "nadolol" ; mkN "Nadolol" ; } ; --*
lin nag_1_N = variants {mkN "rocim" ; mkN "scold" ; } ; --*
lin nag_1_V2 = variants {mkV2 (mkV "incomodar") ; mkV2 (mkV "pentelhar") ; mkV2 (mkV "reclamar") ; } ; --*
lin nag_2_N = mkN "rocim" ; --*
lin nag_2_V = variants {mkV "encher" ; mkV "incomodar" ; } ; --*
lin nag_3_V2 = variants {mkV2 (mkV "incomodar") ; mkV2 (mkV "pentelhar") ; mkV2 (mkV "reclamar") ; } ; --*
lin nagami_N = variants {mkN "kinkan" ; mkN "kumquat" ; mkN "margarita" ; } ; --*
lin nagger_N = variants {mkN "rocim" ; mkN "scold" ; } ; --*
lin nagi_N = variants {mkN "Nageia" ; mkN "nagi" ; } ; --*
lin nagoya_PN = mkPN "Nagoya" ; --*
lin naiad_2_N = mkN "Náiade" ; --*
lin nail_1_N = mkN "unha" ; --*
lin nail_1_V2 = mkV2 (mkV "pregar") ; --*
lin nail_2_N = mkN "prego" ; --*
lin nail_2_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin nail_3_V2 = mkV2 (mkV "estrelar") ; --*
lin nail_4_V2 = variants {mkV2 (mkV "conseguir") ; mkV2 (mkV "down") ; } ; --*
lin nail_down_1_V2 = variants {mkV2 (mkV "conseguir") ; mkV2 (mkV "down") ; } ; --*
lin nail_down_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "especificar") ; } ; --*
lin nail_down_3_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "down") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin nail_polish_N = variants {mkN "enamel" ; mkN "polish" ; mkN "varnish" ; } ; --*
lin nail_varnish_N = variants {mkN "enamel" ; mkN "polish" ; mkN "varnish" ; } ; --*
lin nairobi_PN = variants {mkPN "Nairobi" ; mkPN "of" ; } ; --*
lin naive_1_A = mkA "cândido" ; --*
lin naive_3_A = mkA "ingênuo" ; --*
lin naivety_1_N = variants {mkN "ingenuidade" ; mkN "singeleza" ; } ; --*
lin naked_1_A = variants {mkA "despido" ; mkA "naturel" ; mkA "nu" ; mkA "pelado" ; } ; --*
lin naked_2_A = mkA "indefeso" ; --*
lin naked_3_A = mkA "pelado" ; --*
lin nakedness_1_N = mkN "nudez" ; --*
lin nakedness_2_N = mkN "desolação" ; --*
lin naloxone_N = mkN "Naloxona" ; --*
lin naltrexone_N = mkN "Naltrexona" ; --*
lin namby_pamby_A = variants {mkA "enrolado" ; mkA "indeciso" ; } ; --*
lin name_1_N = variants {mkN "antenome" ; mkN "nome" ; mkN "prenome" ; mkN "primeiro" ; } ; --*
lin name_1_V3 = variants {mkV3 (mkV "chamar") ; mkV3 (mkV "denominar") ; mkV3 (mkV "nomear") ; } ; --*
lin name_2_N = mkN "nome" ; --*
lin name_2_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "nomear") ; } ; --*
lin name_3_N = variants {mkN "gens" ; mkN "Gens" ; } ; --*
lin name_3_V3 = variants {mkV3 (mkV "nomear") ; mkV3 (mkV "propor") ; } ; --*
lin name_4_N = variants {mkN "figure" ; mkN "pessoa" ; } ; --*
lin name_4_V3 = mkV3 (mkV "nomear") ; --*
lin name_5_V2 = variants {mkV2 (mkV "especificar") ; mkV2 (mkV "precisar") ; } ; --*
lin name_6_N = variants {mkN "epíteto" ; mkN "nome" ; } ; --*
lin name_6_V2 = variants {mkV2 (mkV "aludir") ; mkV2 (mkV "citar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "up") ; } ; --*
lin name_7_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "out") ; } ; --*
lin name_7_V3 = variants {mkV3 (mkV "identificar") ; mkV3 (mkV "out") ; } ; --*
lin name_8_V2 = mkV2 (mkV "listar") ; --*
lin name_9_V2 = mkV2 (mkV "diagnosticar") ; --*
lin name_9_V3 = mkV3 (mkV "diagnosticar") ; --*
lin name_drop_V = mkV "mencionar" ; --*
lin nameless_A = variants {mkA "anónimo" ; mkA "anônimo" ; mkA "incógnito" ; } ; --*
lin namely_Adv = variants {mkAdv "a" ; mkAdv "is" ; mkAdv "isto" ; mkAdv "wit" ; } ; --*
lin namer_N = mkN "nomeador" ; --*
lin namesake_N = variants {mkN "homônimo" ; mkN "xará" ; } ; --*
lin namibian_A = variants {mkA "namibiano" ; mkA "namíbio" ; } ; --*
lin namibia_PN = variants {mkPN "Namibia" ; mkPN "of" ; mkPN "West" ; } ; --*
lin naming_2_N = variants {mkN "designação" ; mkN "nomeação" ; } ; --*
lin nan_2_N = variants {mkN "avó" ; mkN "avô" ; mkN "vovó" ; mkN "vovozinha" ; } ; --*
lin nan_4_N = variants {mkN "naan" ; mkN "Naan" ; } ; --*
lin nanchang_PN = mkPN "Nanchang" ; --*
lin nancy_PN = mkPN "Nancy" ; --*
lin nanking_PN = variants {mkPN "Nanjing" ; mkPN "Nanquim" ; } ; --*
lin nanning_PN = mkPN "Nanning" ; --*
lin nanny_1_N = mkN "babá" ; --*
lin nanny_2_N = variants {mkN "bode" ; mkN "cabra" ; } ; --*
lin nanny_goat_N = variants {mkN "bode" ; mkN "cabra" ; } ; --*
lin nanometer_1_N = variants {mkN "Nanometro" ; mkN "nanómetro" ; mkN "nanômetro" ; mkN "Nanômetro" ; } ; --*
lin nanosecond_N = mkN "nanosegundo" ; --*
lin nanotechnology_N = mkN "nanotecnologia" ; --*
lin nap_1_N = variants {mkN "sesta" ; mkN "sono" ; } ; --*
lin nap_4_N = variants {mkN "sesta" ; mkN "sleep" ; mkN "soneca" ; mkN "winks" ; } ; --*
lin napalm_N = mkN "napalm" ; --*
lin nape_N = variants {mkN "cerviz" ; mkN "nuca" ; mkN "pescoço" ; } ; --*
lin napery_N = variants {mkN "linen" ; mkN "toalha" ; } ; --*
lin naphazoline_N = mkN "Nafazolina" ; --*
lin naphthalene_N = mkN "naftalina" ; --*
lin naphtha_N = mkN "Nafta" ; --*
lin napkin_1_N = variants {mkN "guardanapo" ; mkN "napkin" ; } ; --*
lin napkin_2_N = variants {mkN "cueiro" ; mkN "fralda" ; } ; --*
lin naples_PN = mkPN "Nápoles" ; --*
lin napoleon_1_N = variants {mkN "Bonaparte" ; mkN "Corporal" ; mkN "I" ; mkN "Napoleão" ; } ; --*
lin napoleonic_A = mkA "napoleônico" ; --*
lin napoli_PN = mkPN "Nápoles" ; --*
lin nappy_N = variants {mkN "cueiro" ; mkN "fralda" ; } ; --*
lin naproxen_N = mkN "Naproxeno" ; --*
lin nap_V = variants {mkV "a" ; mkV "cochilar" ; mkV "dormitar" ; } ; --*
lin narcissism_N = mkN "narcisismo" ; --*
lin narcissus_2_N = mkN "Narcissus" ; --*
lin narcolepsy_N = mkN "narcolepsia" ; --*
lin narcotic_1_A = mkA "narcótico" ; --*
lin narcotic_3_A = variants {mkA "soporífero" ; mkA "soporífico" ; } ; --*
lin narcotic_N = mkN "narcótico" ; --*
lin naris_N = mkN "venta" ; --*
lin nark_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin narrate_1_V2 = mkV2 (mkV "narrar") ; --*
lin narrate_2_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "narrar") ; mkV2 (mkV "recontar") ; } ; --*
lin narration_1_N = variants {mkN "história" ; mkN "Modo" ; mkN "Narração" ; mkN "narrativa" ; } ; --*
lin narration_2_N = variants {mkN "conto" ; mkN "história" ; mkN "narração" ; } ; --*
lin narrative_A = mkA "narrativo" ; --*
lin narrative_N = variants {mkN "história" ; mkN "Modo" ; mkN "Narração" ; mkN "narrativa" ; } ; --*
lin narrator_N = mkN "narrador" ; --*
lin narrow_1_A = variants {mkA "estreita" ; mkA "estreito" ; } ; --*
lin narrow_1_V2 = mkV2 (mkV "estreitar") ; --*
lin narrow_1_V = mkV "estreitar" ; --*
lin narrow_2_A = mkA "estreito" ; --*
lin narrow_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "especificar") ; } ; --*
lin narrow_3_A = mkA "estreito" ; --*
lin narrow_4_V2 = mkV2 (mkV "apertar") ; --*
lin narrow_down_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "especificar") ; } ; --*
lin narrowing_3_N = mkN "estreitamento" ; --*
lin narrow_minded_2_A = mkA "estreito" ; --*
lin narthex_2_N = variants {mkN "Nartex" ; mkN "nártex" ; } ; --*
lin narwhal_1_N = variants {mkN "monoceros" ; mkN "narval" ; } ; --*
lin nasal_1_A = mkA "nasal" ; --*
lin nasal_1_N = variants {mkN "consonant" ; mkN "nasal" ; } ; --*
lin nasal_2_A = mkA "nasal" ; --*
lin nasal_2_N = variants {mkN "bone" ; mkN "nasale" ; mkN "Osso" ; } ; --*
lin nasa_PN = variants {mkPN "Aeronautics" ; mkPN "Nasa" ; } ; --*
lin nasopharynx_N = variants {mkN "nasofaringe" ; mkN "Nasofaringe" ; } ; --*
lin nasty_1_A = variants {mkA "antipático" ; mkA "horrível" ; } ; --*
lin nasty_3_A = variants {mkA "obsceno" ; mkA "sujo" ; mkA "verde" ; } ; --*
lin nasty_4_A = variants {mkA "imunda" ; mkA "sujo" ; } ; --*
lin natal_1_A = mkA "natal" ; --*
lin nation_1_N = variants {mkN "nação" ; mkN "país" ; mkN "politic" ; mkN "publica" ; mkN "república" ; mkN "união" ; } ; --*
lin nation_2_N = variants {mkN "gente" ; mkN "nação" ; mkN "povo" ; } ; --*
lin national_1_A = mkA "nacional" ; --*
lin national_2_A = mkA "nacional" ; --*
lin national_3_A = mkA "nacional" ; --*
lin national_4_A = mkA "nacional" ; --*
lin national_5_A = mkA "nacional" ; --*
lin national_6_A = mkA "nacional" ; --*
lin national_7_A = mkA "nacional" ; --*
lin nationalism_1_N = variants {mkN "nacionalismo" ; mkN "patriotismo" ; mkN "Patriotismo" ; } ; --*
lin nationalism_4_N = mkN "nacionalismo" ; --*
lin nationalist_1_N = mkN "patriota" ; --*
lin nationality_2_N = variants {mkN "nacionalidade" ; mkN "Nacionalidade" ; } ; --*
lin nationalization_1_N = mkN "nacionalização" ; --*
lin nationalization_2_N = mkN "nacionalização" ; --*
lin nationalization_3_N = mkN "nacionalização" ; --*
lin nationalize_1_V2 = variants {mkV2 (mkV "estatizar") ; mkV2 (mkV "nacionalizar") ; } ; --*
lin national_N = mkN "cidadãos" ; --*
lin native_1_N = mkN "autóctone" ; --*
lin native_2_A = mkA "aborígena" ; --*
lin native_3_A = variants {mkA "aborígene" ; mkA "indígena" ; mkA "nativo" ; } ; --*
lin native_3_N = mkN "nativo" ; --*
lin nativist_2_A = mkA "nativista" ; --*
lin nativity_1_N = mkN "nascimento" ; --*
lin nato_PN = variants {mkPN "Atlantic" ; mkPN "NATO" ; mkPN "OTAN" ; } ; --*
lin natterjack_N = variants {mkN "calamita" ; mkN "sapo-corredor" ; } ; --*
lin natter_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin natural_10_A = mkA "natural" ; --*
lin natural_1_A = mkA "natural" ; --*
lin natural_2_A = mkA "natural" ; --*
lin natural_3_A = mkA "natural" ; --*
lin natural_4_A = mkA "natural" ; --*
lin natural_5_A = mkA "natural" ; --*
lin natural_6_A = variants {mkA "biológica" ; mkA "biológico" ; mkA "natural" ; } ; --*
lin natural_8_A = mkA "natural" ; --*
lin natural_9_A = mkA "inato" ; --*
lin naturalism_1_N = mkN "naturalismo" ; --*
lin naturalism_2_N = mkN "realismo" ; --*
lin naturalist_1_N = mkN "naturalista" ; --*
lin naturalist_2_N = variants {mkN "naturalista" ; mkN "scientist" ; } ; --*
lin naturalistic_A = mkA "realista" ; --*
lin naturalization_4_N = mkN "naturalização" ; --*
lin naturalize_5_V2 = variants {mkV2 (mkV "cultivar") ; mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin naturalness_1_N = mkN "naturalidade" ; --*
lin naturalness_2_N = variants {mkN "inocência" ; mkN "naturalidade" ; } ; --*
lin nature_1_N = mkN "natureza" ; --*
lin nature_2_N = mkN "natureza" ; --*
lin nature_3_N = mkN "Natureza" ; --*
lin nature_4_N = variants {mkN "índole" ; mkN "natureza" ; } ; --*
lin naturism_N = variants {mkN "naturismo" ; mkN "Naturismo" ; mkN "nudismo" ; } ; --*
lin naturopathy_N = mkN "Medicina" ; --*
lin naught_1_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin naughtiness_N = variants {mkN "mal" ; mkN "maldade" ; mkN "travessura" ; } ; --*
lin naughty_1_A = mkA "verde" ; --*
lin naughty_2_A = variants {mkA "levado" ; mkA "travesso" ; } ; --*
lin naumachy_1_N = mkN "naumaquia" ; --*
lin nauru_1_PN = variants {mkPN "Nauru" ; mkPN "of" ; } ; --*
lin nauru_2_PN = variants {mkPN "Island" ; mkPN "Nauru" ; } ; --*
lin nauruan_A = variants {mkA "nauruano" ; mkA "nauruense" ; } ; --*
lin nauruan_N = variants {mkN "nauruano" ; mkN "nauruense" ; } ; --*
lin nausea_1_N = variants {mkN "náusea" ; mkN "náuseas" ; } ; --*
lin nauseate_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "enjoar") ; mkV2 (mkV "one's") ; } ; --*
lin nauseate_2_V2 = variants {mkV2 (mkV "indignar") ; mkV2 (mkV "nausear") ; mkV2 (mkV "repugnar") ; mkV2 (mkV "revoltar") ; mkV2 (mkV "up") ; } ; --*
lin nauseating_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin nauseous_1_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin nauseous_2_A = mkA "nauseante" ; --*
lin nautical_A = variants {mkA "marinho" ; mkA "marítimo" ; mkA "náutico" ; } ; --*
lin nautilus_1_N = variants {mkN "submarine" ; mkN "Submarino" ; } ; --*
lin naval_A = mkA "naval" ; --*
lin navel_1_N = variants {mkN "button" ; mkN "umbigo" ; } ; --*
lin navel_2_N = variants {mkN "point" ; mkN "umbigo" ; } ; --*
lin nave_N = variants {mkN "cuboderoda" ; mkN "nave" ; mkN "Nave" ; } ; --*
lin navigable_A = mkA "navegável" ; --*
lin navigate_1_V = variants {mkV "navegar" ; mkV "velejar" ; } ; --*
lin navigate_2_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "pilotar") ; } ; --*
lin navigate_2_V = variants {mkV "conduzir" ; mkV "guiar" ; mkV "pilotar" ; } ; --*
lin navigation_1_N = variants {mkN "navegação" ; mkN "pilotagem" ; } ; --*
lin navigation_2_N = mkN "navegação" ; --*
lin navigation_3_N = variants {mkN "Navegacão" ; mkN "navegação" ; mkN "Navegação" ; } ; --*
lin navigator_3_N = mkN "navegador" ; --*
lin navvy_N = variants {mkN "peão" ; mkN "slave" ; } ; --*
lin navy_1_N = variants {mkN "armada" ; mkN "forças" ; mkN "forces" ; mkN "marinha" ; } ; --*
lin navy_2_N = variants {mkN "azul-marinho" ; mkN "blue" ; mkN "naval" ; } ; --*
lin navy_3_N = variants {mkN "Marinha" ; mkN "Navy" ; mkN "States" ; } ; --*
lin nazi_1_N = variants {mkN "nazi" ; mkN "Nazi" ; mkN "nazista" ; } ; --*
lin nazi_2_A = variants {mkA "nazista" ; mkA "socialist" ; } ; --*
lin nazism_1_N = variants {mkN "nazismo" ; mkN "Nazismo" ; mkN "socialism" ; } ; --*
lin nb_1_PN = variants {mkPN "Niobio" ; mkPN "nióbio" ; mkPN "number" ; } ; --*
lin neap_N = variants {mkN "água-morta" ; mkN "tide" ; } ; --*
lin neapolitan_A = mkA "napolitano" ; --*
lin neapolitan_N = variants {mkN "napolitana" ; mkN "napolitano" ; } ; --*
lin neap_tide_N = variants {mkN "água-morta" ; mkN "tide" ; } ; --*
lin near_1_Adv = mkAdv "perto" ; --*
lin near_1_A = variants {mkA "perto" ; mkA "próximo" ; mkA "vizinho" ; } ; --*
lin near_2_Adv = variants {mkAdv "perto" ; mkAdv "por" ; mkAdv "quase" ; mkAdv "virtualmente" ; } ; --*
lin near_5_A = mkA "querido" ; --*
lin near_6_A = mkA "aproximado" ; --*
lin nearby_Adv = variants {mkAdv "ao" ; mkAdv "perto" ; mkAdv "por" ; } ; --*
lin nearby_A = variants {mkA "junto" ; mkA "perto" ; mkA "próximo" ; } ; --*
lin nearer_Adv = variants {mkAdv "aquele" ; mkAdv "mais" ; } ; --*
lin nearest_Adv = mkAdv "o" ; --*
lin nearly_AdA = variants {mkAdA "com" ; mkAdA "intimamente" ; mkAdA "perto" ; } ; --*
lin nearly_AdV = variants {mkAdV "perto" ; mkAdV "por" ; mkAdV "quase" ; mkAdV "virtualmente" ; } ; --*
lin nearness_N = mkN "proximidade" ; --*
lin near_sighted_A = mkA "míope" ; --*
lin near_V2 = variants {mkV2 (mkV "aproximar-se") ; mkV2 (mkV "close") ; mkV2 (mkV "near") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; mkV2 (mkV "vir") ; } ; --*
lin near_V = variants {mkV "aproximar-se" ; mkV "close" ; mkV "near" ; mkV "on" ; mkV "up" ; mkV "vir" ; } ; --*
lin neat_1_A = variants {mkA "asseado" ; mkA "bem" ; mkA "em" ; mkA "limpado" ; } ; --*
lin neat_4_A = mkA "fácil" ; --*
lin neat_5_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin neatness_2_N = mkN "asseio" ; --*
lin nebraska_PN = variants {mkPN "Nebrasca" ; mkPN "Nebraska" ; mkPN "State" ; } ; --*
lin nebuchadnezzar_1_N = variants {mkN "II" ; mkN "Nabucodonosor" ; } ; --*
lin nebula_3_N = mkN "nebulosa" ; --*
lin necessary_1_A = variants {mkA "essencial" ; mkA "necessário" ; } ; --*
lin necessary_N = variants {mkN "necessidade" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin necessitate_1_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin necessitous_A = mkA "indigente" ; --*
lin necessity_1_N = mkN "necessidade" ; --*
lin necessity_2_N = variants {mkN "necessidade" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin neck_1_N = mkN "pescoço" ; --*
lin neck_5_N = variants {mkN "colarinho" ; mkN "opening" ; } ; --*
lin neckband_2_N = variants {mkN "colarinho" ; mkN "gola" ; } ; --*
lin neckband_3_N = variants {mkN "colar" ; mkN "collar" ; } ; --*
lin necklace_N = variants {mkN "colar" ; mkN "coleira" ; } ; --*
lin necktie_N = mkN "gravata" ; --*
lin neck_V = variants {mkV "beijar" ; mkV "out" ; } ; --*
lin necrology_1_N = variants {mkN "necrológio" ; mkN "obituário" ; } ; --*
lin necromancer_1_N = variants {mkN "assistente" ; mkN "bruxo" ; mkN "feiticeiro" ; mkN "Feiticeiro" ; mkN "mágico" ; mkN "mago" ; mkN "sortílego" ; mkN "taumaturgo" ; } ; --*
lin necromancer_2_N = mkN "necromante" ; --*
lin necromancy_1_N = variants {mkN "art" ; mkN "encanto" ; mkN "feitiço" ; mkN "magia" ; mkN "Magia" ; mkN "magic" ; } ; --*
lin necromancy_2_N = variants {mkN "necromancia" ; mkN "Necromancia" ; mkN "nigromancia" ; } ; --*
lin necrophilia_N = variants {mkN "necrofilia" ; mkN "Necrofilia" ; } ; --*
lin necropolis_N = variants {mkN "cemitério" ; mkN "ground" ; mkN "necrópole" ; mkN "park" ; mkN "site" ; } ; --*
lin necrosis_N = variants {mkN "gangrena" ; mkN "necrose" ; mkN "Necrose" ; } ; --*
lin necrotic_A = mkA "necrotico" ; --*
lin nectar_1_N = mkN "néctar" ; --*
lin nectar_2_N = mkN "néctar" ; --*
lin nectar_3_N = variants {mkN "ambrosia" ; mkN "Ambrosia" ; mkN "Ambrósia" ; } ; --*
lin nectarine_1_N = variants {mkN "nectarina" ; mkN "persica" ; mkN "tree" ; } ; --*
lin nectarine_2_N = mkN "nectarina" ; --*
lin need_1_N = variants {mkN "carência" ; mkN "necessidade" ; } ; --*
lin need_1_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin need_1_VV = variants {mkVV (mkV "demandar") ; mkVV (mkV "for") ; mkVV (mkV "precisar") ; mkVV (mkV "requerer") ; } ; --*
lin need_2_N = variants {mkN "desejo" ; mkN "necessidade" ; } ; --*
lin need_2_V2 = variants {mkV2 (mkV "necessitar") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin need_3_N = variants {mkN "intenção" ; mkN "motivação" ; mkN "motivo" ; mkN "necessidade" ; } ; --*
lin need_3_V2 = variants {mkV2 (mkV "necessitar") ; mkV2 (mkV "precisar") ; } ; --*
lin need_4_N = variants {mkN "indigência" ; mkN "miséria" ; } ; --*
lin needful_A = mkA "requerido" ; --*
lin neediness_1_N = variants {mkN "pobreza" ; mkN "privação" ; } ; --*
lin needle_1_N = variants {mkN "agulha" ; mkN "leaf" ; } ; --*
lin needle_1_V2 = variants {mkV2 (mkV "enfadar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; } ; --*
lin needle_2_N = mkN "agulha" ; --*
lin needle_3_N = mkN "agulha" ; --*
lin needle_4_N = variants {mkN "agulha" ; mkN "needle" ; } ; --*
lin needlecraft_1_N = mkN "bordado" ; --*
lin needlefish_1_N = variants {mkN "Gar" ; mkN "Lepisosteiformes" ; } ; --*
lin needlefish_2_N = mkN "Peixe-cachimbo" ; --*
lin needless_A = variants {mkA "desnecessário" ; mkA "gratuito" ; } ; --*
lin needlewoman_N = variants {mkN "costureiro" ; mkN "estilista" ; mkN "modista" ; } ; --*
lin needlework_1_N = mkN "bordado" ; --*
lin needs_Adv = variants {mkAdv "forçosamente" ; mkAdv "inevitavelmente" ; mkAdv "necessariamente" ; mkAdv "necessity" ; } ; --*
lin needy_1_A = mkA "indigente" ; --*
lin neem_N = variants {mkN "Azadirachta" ; mkN "indica" ; mkN "Neem" ; mkN "tree" ; } ; --*
lin ne'er_Adv = variants {mkAdv "em" ; mkAdv "jamais" ; mkAdv "nunca" ; } ; --*
lin ne'er_do_well_N = mkN "zero" ; --*
lin nefarious_A = mkA "malvado" ; --*
lin negate_1_V2 = mkV2 (mkV "desmentir") ; --*
lin negate_2_V2 = variants {mkV2 (mkV "contradizer") ; mkV2 (mkV "desdizer") ; } ; --*
lin negate_3_V2 = variants {mkV2 (mkV "contradizer") ; mkV2 (mkV "negar") ; } ; --*
lin negate_4_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "neutralizar") ; } ; --*
lin negation_2_N = mkN "negação" ; --*
lin negation_3_N = mkN "negação" ; --*
lin negative_1_N = mkN "negação" ; --*
lin negative_4_A = mkA "negativo" ; --*
lin negative_5_A = mkA "negativo" ; --*
lin negative_7_A = mkA "negativo" ; --*
lin negative_8_A = variants {mkA "charged" ; mkA "eletronegativo" ; mkA "negativo" ; } ; --*
lin negative_9_A = mkA "negativo" ; --*
lin negative_V2 = mkV2 (mkV "vetar") ; --*
lin negativity_4_N = mkN "eletronegatividade" ; --*
lin neglect_1_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "escapar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; mkV2 (mkV "preterir") ; } ; --*
lin neglect_2_N = mkN "falta" ; --*
lin neglect_2_V2 = variants {mkV2 (mkV "falhar") ; mkV2 (mkV "negligenciar") ; } ; --*
lin neglect_3_N = variants {mkN "descuido" ; mkN "negligência" ; } ; --*
lin neglect_3_V2 = variants {mkV2 (mkV "descuidar") ; mkV2 (mkV "descurar") ; mkV2 (mkV "desleixar") ; mkV2 (mkV "negligenciar") ; } ; --*
lin neglect_4_N = mkN "negligência" ; --*
lin neglect_4_V2 = variants {mkV2 (mkV "desatender") ; mkV2 (mkV "ignorar") ; mkV2 (mkV "negligenciar") ; } ; --*
lin neglect_5_N = mkN "negligência" ; --*
lin neglectful_2_A = mkA "negligente" ; --*
lin neglectfulness_N = mkN "negligência" ; --*
lin negligee_1_N = variants {mkN "cinta" ; mkN "embrulhador" ; } ; --*
lin negligence_1_N = mkN "negligência" ; --*
lin negligence_2_N = mkN "negligência" ; --*
lin negligent_A = variants {mkA "desatencioso" ; mkA "sem" ; } ; --*
lin negligible_2_A = mkA "insignificante" ; --*
lin negotiate_3_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "negociar") ; mkV2 (mkV "off") ; } ; --*
lin negotiate_7_V2 = variants {mkV2 (mkV "agenciar") ; mkV2 (mkV "negociar") ; mkV2 (mkV "terms") ; } ; --*
lin negotiation_1_N = variants {mkN "conversa" ; mkN "negociação" ; mkN "tramitação" ; } ; --*
lin negroid_N = variants {mkN "afro-americana" ; mkN "afro-americano" ; mkN "American" ; mkN "negra" ; mkN "negro" ; mkN "person" ; } ; --*
lin negro_N = variants {mkN "afro-americana" ; mkN "afro-americano" ; mkN "American" ; mkN "negra" ; mkN "negro" ; mkN "person" ; } ; --*
lin neighbour_1_N = variants {mkN "vizinha" ; mkN "vizinho" ; } ; --*
lin neighbour_1_V2 = variants {mkV2 (mkV "bordejar") ; mkV2 (mkV "ficar") ; mkV2 (mkV "morar") ; } ; --*
lin neighbour_2_N = mkN "vizinho" ; --*
lin neighbour_2_V2 = variants {mkV2 (mkV "bordejar") ; mkV2 (mkV "ficar") ; mkV2 (mkV "morar") ; } ; --*
lin neighbourhood_1_N = variants {mkN "bairro" ; mkN "cercania" ; mkN "of" ; mkN "proximidade" ; mkN "vizinhança" ; mkN "vizinho" ; } ; --*
lin neighbourhood_2_N = variants {mkN "bairro" ; mkN "vizinhança" ; } ; --*
lin neighbourhood_3_N = variants {mkN "região" ; mkN "vizinhança" ; } ; --*
lin neighbourhood_4_N = mkN "vizinhança" ; --*
lin neighbour_V = variants {mkV "bordejar" ; mkV "ficar" ; mkV "morar" ; } ; --*
lin neigh_N = mkN "relincho" ; --*
lin neigh_V = mkV "relinchar" ; --*
lin neither_A = variants {mkA "nenhum" ; mkA "nenhuma" ; } ; --*
lin nekton_N = mkN "nécton" ; --*
lin nelson_1_N = variants {mkN "Horatio" ; mkN "Nelson" ; } ; --*
lin nelson_1_PN = variants {mkPN "Horatio" ; mkPN "Nelson" ; } ; --*
lin nematode_N = variants {mkN "Nematoda" ; mkN "nemátodo" ; mkN "worm" ; } ; --*
lin nem_con_Adv = variants {mkAdv "con" ; mkAdv "contradicente" ; mkAdv "unanimemente" ; } ; --*
lin nemesis_1_N = variants {mkN "Némesis" ; mkN "Nêmesis" ; } ; --*
lin nemesis_2_N = variants {mkN "arquiinimigo" ; mkN "calamidade" ; mkN "desgraça" ; mkN "Deusa" ; mkN "nêmese" ; } ; --*
lin neoclassical_A = mkA "neoclássico" ; --*
lin neoclassic_A = mkA "neoclássico" ; --*
lin neoclassicism_N = variants {mkN "neoclassicismo" ; mkN "Neo-classicismo" ; } ; --*
lin neocolonialism_N = mkN "neocolonialismo" ; --*
lin neodymium_N = variants {mkN "Neodimio" ; mkN "neodímio" ; mkN "number" ; } ; --*
lin neoliberalism_N = variants {mkN "neoliberalismo" ; mkN "Neo-liberalismo" ; } ; --*
lin neologism_1_N = mkN "neologismo" ; --*
lin neologism_2_N = mkN "neologismo" ; --*
lin neomycin_N = mkN "neomicina" ; --*
lin neonatal_A = mkA "neonatal" ; --*
lin neon_N = variants {mkN "neão" ; mkN "Neon" ; mkN "Neón" ; mkN "néon" ; mkN "neónio" ; mkN "neônio" ; mkN "number" ; } ; --*
lin neopallium_N = variants {mkN "Neocortex" ; mkN "neocórtex" ; } ; --*
lin neophyte_2_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin neophyte_3_N = mkN "Catecumenato" ; --*
lin neoplasm_N = variants {mkN "neoplasia" ; mkN "tumor" ; mkN "tumores" ; } ; --*
lin neoprene_N = variants {mkN "Neoprene" ; mkN "Neopreno" ; } ; --*
lin neoromanticism_N = mkN "neoromanticismo" ; --*
lin neostigmine_N = mkN "neostigmina" ; --*
lin neoteny_N = mkN "neotenia" ; --*
lin nepalese_A = mkA "nepalês" ; --*
lin nepalese_N = mkN "nepali" ; --*
lin nepali_A = mkA "nepalês" ; --*
lin nepaliFem_N = mkN "nepali" ; --*
lin nepaliMasc_N = mkN "nepali" ; --*
lin nepali_N = variants {mkN "língua" ; mkN "nepalês" ; mkN "nepali" ; } ; --*
lin nepal_PN = variants {mkPN "Nepal" ; mkPN "of" ; } ; --*
lin nephew_N = mkN "sobrinho" ; --*
lin nephrectomy_N = variants {mkN "nefrectomia" ; mkN "Nefrectomia" ; } ; --*
lin nephritic_2_A = mkA "renal" ; --*
lin nephritis_N = variants {mkN "disease" ; mkN "nefrite" ; } ; --*
lin nephrology_N = variants {mkN "nefrologia" ; mkN "Nefrologia" ; } ; --*
lin nephron_N = variants {mkN "nefrónio" ; mkN "tubule" ; } ; --*
lin nephroptosis_1_N = mkN "Nefroptose" ; --*
lin ne_plus_ultra_N = variants {mkN "perfeição" ; mkN "plus" ; } ; --*
lin nepotism_N = variants {mkN "nepotismo" ; mkN "Nepotismo" ; } ; --*
lin neptune_1_PN = variants {mkPN "Neptuno" ; mkPN "Netuno" ; } ; --*
lin neptune_2_PN = variants {mkPN "Neptuno" ; mkPN "Netuno" ; } ; --*
lin neptunium_N = variants {mkN "neptúnio" ; mkN "number" ; } ; --*
lin nerd_2_N = variants {mkN "CDF" ; mkN "nerd" ; mkN "nerdi" ; } ; --*
lin nereid_N = mkN "Nereida" ; --*
lin nerve_1_N = variants {mkN "nervo" ; mkN "Nervo" ; mkN "Nervos" ; } ; --*
lin nerve_2_N = variants {mkN "coragem" ; mkN "nervo" ; } ; --*
lin nerve_3_N = variants {mkN "audácia" ; mkN "ousadia" ; } ; --*
lin nerve_cell_N = variants {mkN "cell" ; mkN "neurónio" ; mkN "neurônio" ; mkN "Neurônio" ; } ; --*
lin nerveless_2_A = mkA "fraco" ; --*
lin nerves_1_N = variants {mkN "nervosismo" ; mkN "tensão" ; } ; --*
lin nerves_2_N = mkN "nervo" ; --*
lin nerve_V2 = mkV2 (mkV "respirar") ; --*
lin nervous_2_A = variants {mkA "ansioso" ; mkA "inquieto" ; mkA "nervoso" ; } ; --*
lin nervous_3_A = mkA "nervoso" ; --*
lin nervous_4_A = mkA "nervoso" ; --*
lin nervous_5_A = variants {mkA "assustado" ; mkA "nervoso" ; } ; --*
lin nervousness_1_N = mkN "nervosismo" ; --*
lin nervousness_2_N = variants {mkN "nervosismo" ; mkN "tensão" ; } ; --*
lin nervy_1_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin nervy_3_A = mkA "insolente" ; --*
lin nescient_2_A = variants {mkA "ignorante" ; mkA "iletrado" ; mkA "néscio" ; } ; --*
lin ness_N = mkN "cabo" ; --*
lin nest_1_N = variants {mkN "fazerseuninho" ; mkN "ninho" ; } ; --*
lin nest_1_V = variants {mkV "aninhar" ; mkV "nidificar" ; mkV "ninhar" ; } ; --*
lin nest_2_V = variants {mkV "aninhar" ; mkV "nidificar" ; mkV "ninhar" ; } ; --*
lin nest_3_V = variants {mkV "acomodar" ; mkV "close" ; } ; --*
lin nestle_1_V = variants {mkV "acomodar" ; mkV "close" ; } ; --*
lin nestle_3_V2 = variants {mkV2 (mkV "acariciar") ; mkV2 (mkV "aconchegar") ; mkV2 (mkV "aconchegar-se") ; } ; --*
lin nestling_2_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin nestor_1_PN = mkPN "Nestor" ; --*
lin net_1_A = mkA "líquido" ; --*
lin net_1_N = variants {mkN "ciberespaço" ; mkN "Ciberespaço" ; mkN "internet" ; } ; --*
lin net_1_V2 = variants {mkV2 (mkV "lucrar") ; mkV2 (mkV "up") ; } ; --*
lin net_2_A = mkA "final" ; --*
lin net_2_N = mkN "rede" ; --*
lin net_2_V2 = mkV2 (mkV "render") ; --*
lin net_3_N = variants {mkN "ganancia" ; mkN "income" ; mkN "profit" ; mkN "rendimento" ; } ; --*
lin net_5_N = mkN "rede" ; --*
lin net_6_N = variants {mkN "malha" ; mkN "rede" ; mkN "trama" ; } ; --*
lin netball_N = mkN "Netball" ; --*
lin netherlander_N = variants {mkN "holandês" ; mkN "Holandês" ; mkN "neerlandês" ; } ; --*
lin netherlands_PN = variants {mkPN "Holanda" ; mkPN "Holando" ; mkPN "Neerlândia" ; mkPN "Netherlands" ; mkPN "of" ; mkPN "Países" ; } ; --*
lin nett_A = mkA "líquido" ; --*
lin netting_1_N = mkN "gaze" ; --*
lin nettle_2_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin nettle_N = variants {mkN "ortiga" ; mkN "Urtica" ; mkN "urtiga" ; } ; --*
lin network_1_N = mkN "rede" ; --*
lin network_2_N = mkN "rede" ; --*
lin network_3_N = variants {mkN "malha" ; mkN "rede" ; mkN "trama" ; } ; --*
lin network_5_N = variants {mkN "network" ; mkN "rede" ; } ; --*
lin neural_1_A = mkA "nervoso" ; --*
lin neuralgia_1_N = mkN "nevralgia" ; --*
lin neurasthenia_N = mkN "neurastenia" ; --*
lin neurasthenic_A = mkA "neurastênico" ; --*
lin neuritis_N = mkN "neurite" ; --*
lin neurobiological_A = mkA "neurobiológico" ; --*
lin neuroblast_N = mkN "Neuroblasto" ; --*
lin neuroblastoma_N = variants {mkN "neuroblastoma" ; mkN "Neuroblastoma" ; } ; --*
lin neurogenesis_N = mkN "neurogénese" ; --*
lin neurogliacyte_N = variants {mkN "cell" ; mkN "Neuróglia" ; } ; --*
lin neurolemma_1_N = mkN "Neurilema" ; --*
lin neurolinguistics_N = variants {mkN "Neurolinguística" ; mkN "Neurolingüística" ; } ; --*
lin neurological_1_A = mkA "neurológico" ; --*
lin neurologistFem_N = variants {mkN "doctor" ; mkN "neurologista" ; } ; --*
lin neurologistMasc_N = variants {mkN "doctor" ; mkN "neurologista" ; } ; --*
lin neurology_1_N = mkN "neurologia" ; --*
lin neurology_2_N = variants {mkN "neurologia" ; mkN "neurology" ; } ; --*
lin neuropathy_N = mkN "neuropatia" ; --*
lin neurophysiological_A = mkA "neurofisiológico" ; --*
lin neuropsychological_A = mkA "neuropsicológico" ; --*
lin neuroscience_N = variants {mkN "Neurociencia" ; mkN "neurociência" ; mkN "Neurociência" ; mkN "neurologia" ; } ; --*
lin neurosis_N = variants {mkN "neurose" ; mkN "obsessão" ; } ; --*
lin neurosurgeon_N = variants {mkN "neurocirurgião" ; mkN "surgeon" ; } ; --*
lin neurosurgery_N = mkN "Neurocirurgia" ; --*
lin neurosyphilis_N = mkN "neurosífilis" ; --*
lin neurotic_N = variants {mkN "case" ; mkN "neurótica" ; mkN "neurótico" ; } ; --*
lin neurotoxic_A = mkA "neurotóxico" ; --*
lin neurotoxin_N = variants {mkN "neurotoxina" ; mkN "Neurotoxina" ; } ; --*
lin neurotransmitter_N = variants {mkN "neurotransmissor" ; mkN "Neurotransmissores" ; } ; --*
lin neuter_1_A = mkA "neutro" ; --*
lin neutral_1_A = mkA "impessoal" ; --*
lin neutral_3_A = variants {mkA "neutral" ; mkA "neutro" ; } ; --*
lin neutral_4_A = mkA "neutral" ; --*
lin neutral_5_A = mkA "acromático" ; --*
lin neutrality_1_N = mkN "neutralidade" ; --*
lin neutrality_2_N = mkN "neutralidade" ; --*
lin neutrality_3_N = mkN "neutralidade" ; --*
lin neutralization_1_N = mkN "neutralização" ; --*
lin neutralization_2_N = variants {mkN "neutralização" ; mkN "reaction" ; mkN "Salificação" ; } ; --*
lin neutralization_3_N = mkN "neutralização" ; --*
lin neutralization_4_N = mkN "neutralização" ; --*
lin neutralize_2_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "neutralizar") ; } ; --*
lin neutralize_3_V2 = variants {mkV2 (mkV "contrabalancear") ; mkV2 (mkV "neutralizar") ; } ; --*
lin neutralize_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "liquidar") ; mkV2 (mkV "neutralizar") ; mkV2 (mkV "off") ; } ; --*
lin neutralize_6_V2 = mkV2 (mkV "neutralizar") ; --*
lin neutrino_N = variants {mkN "neutrino" ; mkN "Neutrino" ; } ; --*
lin neutron_N = variants {mkN "neutrão" ; mkN "Neutron" ; mkN "nêutron" ; mkN "Nêutron" ; } ; --*
lin neutropenia_N = mkN "neutropenia" ; --*
lin nevada_PN = variants {mkPN "Born" ; mkPN "Nevada" ; mkPN "State" ; } ; --*
lin never_1_Adv = variants {mkAdv "em" ; mkAdv "jamais" ; mkAdv "nunca" ; } ; --*
lin never_1_AdV = variants {mkAdV "em" ; mkAdV "jamais" ; mkAdV "nunca" ; } ; --*
lin nevermore_Adv = variants {mkAdv "again" ; mkAdv "nunca" ; } ; --*
lin nevertheless_Adv = variants {mkAdv "apesar" ; mkAdv "contudo" ; mkAdv "não" ; mkAdv "por" ; mkAdv "porém" ; mkAdv "se" ; mkAdv "so" ; mkAdv "the" ; } ; --*
lin new_1_A = mkA "novo" ; --*
lin new_2_A = variants {mkA "fresco" ; mkA "nova" ; mkA "novo" ; mkA "original" ; } ; --*
lin new_9_A = variants {mkA "contemporâneo" ; mkA "novo" ; } ; --*
lin new_AdV = variants {mkAdV "novamente" ; mkAdV "recentemente" ; } ; --*
lin newark_PN = mkPN "Newark" ; --*
lin newborn_1_A = mkA "recém-nascido" ; --*
lin newborn_2_A = mkA "recém-nascido" ; --*
lin newcomer_1_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin newcomer_2_N = mkN "recém" ; --*
lin newfoundland_1_PN = variants {mkPN "dog" ; mkPN "Terra" ; } ; --*
lin newfoundland_2_PN = variants {mkPN "Terra" ; mkPN "TerraNova" ; } ; --*
lin newlywed_N = variants {mkN "quem" ; mkN "recém-casado" ; } ; --*
lin newness_N = mkN "novidade" ; --*
lin new_orleans_PN = mkPN "Orleans" ; --*
lin newport_1_PN = mkPN "Newport" ; --*
lin newport_2_PN = variants {mkPN "Newport" ; mkPN "Rhode" ; } ; --*
lin news_1_N = variants {mkN "informação" ; mkN "notícias" ; } ; --*
lin news_2_N = variants {mkN "artigo" ; mkN "notícia" ; mkN "notícias" ; } ; --*
lin news_3_N = variants {mkN "notícias" ; mkN "program" ; mkN "show" ; } ; --*
lin newsagent_N = variants {mkN "jornaleiro" ; mkN "operator" ; } ; --*
lin newscast_N = mkN "noticiário" ; --*
lin newsdealer_N = variants {mkN "jornaleiro" ; mkN "operator" ; } ; --*
lin newsletter_N = variants {mkN "boletim" ; mkN "newsletter" ; } ; --*
lin newspaper_1_N = variants {mkN "folha" ; mkN "jornal" ; mkN "Jornal" ; mkN "papel" ; } ; --*
lin newspaper_4_N = mkN "folha" ; --*
lin newsprint_N = mkN "folha" ; --*
lin newsreader_1_N = variants {mkN "Clientes" ; mkN "reader" ; } ; --*
lin newsroom_3_N = mkN "Newsroom" ; --*
lin newssheet_N = variants {mkN "boletim" ; mkN "newsletter" ; } ; --*
lin newsstand_N = mkN "banca" ; --*
lin newsvendor_N = variants {mkN "jornaleiro" ; mkN "operator" ; } ; --*
lin newt_N = mkN "Tritão" ; --*
lin new_to_A2 = mkA2 (mkA "novo") noPrep ; --*
lin newton_1_N = variants {mkN "Isaac" ; mkN "Newton" ; } ; --*
lin newton_2_N = mkN "newton" ; --*
lin new_york_1_PN = variants {mkPN "New" ; mkPN "York" ; } ; --*
lin new_york_2_PN = variants {mkPN "Nova" ; mkPN "State" ; mkPN "York" ; } ; --*
lin new_york_3_PN = mkPN "York" ; --*
lin next_2_A = variants {mkA "adjacente" ; mkA "apenso" ; mkA "by" ; } ; --*
lin next_3_A = variants {mkA "futuro" ; mkA "sucessivo" ; } ; --*
lin nexus_1_N = mkN "nexo" ; --*
lin nexus_2_N = mkN "nexo" ; --*
lin ngultrum_N = mkN "ngultrum" ; --*
lin niacin_N = variants {mkN "acid" ; mkN "niacina" ; } ; --*
lin nib_1_N = variants {mkN "nib" ; mkN "ponta" ; } ; --*
lin nib_2_N = mkN "bico" ; --*
lin nibble_1_N = mkN "nibble" ; --*
lin nibble_2_N = mkN "mordidela" ; --*
lin nibble_2_V = mkV "roer" ; --*
lin nibble_3_V = mkV "mordiscar" ; --*
lin nibble_V2 = mkV2 (mkV "mordiscar") ; --*
lin nicaraguan_A = variants {mkA "nicaraguano" ; mkA "nicaraguense" ; } ; --*
lin nicaraguan_N = mkN "Nicaraguenses" ; --*
lin nicaragua_PN = variants {mkPN "Nicaragua" ; mkPN "of" ; } ; --*
lin nice_1_A = mkA "boa!" ; --*
lin nice_2_A = mkA "bom" ; --*
lin nice_5_A = variants {mkA "cortês" ; mkA "gentil" ; } ; --*
lin niceness_1_N = variants {mkN "cortesia" ; mkN "polidez" ; } ; --*
lin niceness_3_N = variants {mkN "fineza" ; mkN "subtileza" ; mkN "sutileza" ; } ; --*
lin nice_PN = mkPN "Nice" ; --*
lin nicety_2_N = mkN "matiz" ; --*
lin niche_2_N = mkN "nicho" ; --*
lin niche_3_N = mkN "nicho" ; --*
lin niche_4_N = variants {mkN "niche" ; mkN "nicho" ; mkN "Nicho" ; } ; --*
lin nicholas_PN = variants {mkPN "Nicholas" ; mkPN "Nicolau" ; } ; --*
lin nick_1_N = mkN "amassado" ; --*
lin nick_1_PN = mkPN "amassado" ; --*
lin nick_2_N = variants {mkN "cadeia" ; mkN "presídio" ; mkN "prisão" ; } ; --*
lin nick_2_PN = variants {mkPN "cadeia" ; mkPN "presídio" ; mkPN "prisão" ; } ; --*
lin nickel_1_N = variants {mkN "Niquel" ; mkN "níquel" ; mkN "number" ; } ; --*
lin nickel_2_N = mkN "níquel" ; --*
lin nickel_V2 = mkV2 (mkV "niquelar") ; --*
lin nicknack_N = mkN "quinquilharias" ; --*
lin nickname_1_N = variants {mkN "alcunha" ; mkN "apelido" ; mkN "cognome" ; mkN "sobrenome" ; } ; --*
lin nickname_2_N = variants {mkN "alcunha" ; mkN "apelido" ; } ; --*
lin nickname_V2 = variants {mkV2 (mkV "alcunhar") ; mkV2 (mkV "apelidar") ; mkV2 (mkV "batizar") ; } ; --*
lin nickname_V3 = variants {mkV3 (mkV "alcunhar") ; mkV3 (mkV "apelidar") ; mkV3 (mkV "batizar") ; } ; --*
lin nicotine_N = mkN "nicotina" ; --*
lin niece_N = variants {mkN "sobrinha" ; mkN "sobrinho" ; } ; --*
lin niff_N = mkN "fedor" ; --*
lin nifty_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin niger_1_PN = variants {mkPN "Níger" ; mkPN "River" ; } ; --*
lin niger_2_PN = variants {mkPN "Niger" ; mkPN "of" ; } ; --*
lin nigerian_1_A = mkA "nigeriano" ; --*
lin nigerian_2_A = mkA "nigeriano" ; --*
lin nigeria_PN = variants {mkPN "Nigeria" ; mkPN "Republic" ; } ; --*
lin nigerien_A = mkA "nigeriano" ; --*
lin niggardliness_1_N = variants {mkN "parcimónia" ; mkN "Parcimônia" ; } ; --*
lin niggardly_A = mkA "tinhoso" ; --*
lin niggard_N = variants {mkN "avarento" ; mkN "pão-duro" ; mkN "sovina" ; } ; --*
lin niggle_1_V = mkV "criar" ; --*
lin niggle_2_V = variants {mkV "bicar" ; mkV "discutir" ; } ; --*
lin nigh_1_Adv = mkAdv "perto" ; --*
lin nigh_2_Adv = variants {mkAdv "perto" ; mkAdv "por" ; mkAdv "quase" ; mkAdv "virtualmente" ; } ; --*
lin nigher_Adv = variants {mkAdv "aquele" ; mkAdv "mais" ; } ; --*
lin nighest_Adv = mkAdv "o" ; --*
lin night_1_N = variants {mkN "fim" ; mkN "noitada" ; mkN "noite" ; mkN "tarde" ; } ; --*
lin night_2_N = mkN "noite" ; --*
lin night_3_N = mkN "noite" ; --*
lin night_4_N = mkN "noite" ; --*
lin night_5_N = mkN "noite" ; --*
lin night_6_N = mkN "noite" ; --*
lin night_7_N = variants {mkN "noitada" ; mkN "noite" ; } ; --*
lin night_bird_2_N = variants {mkN "noctívago" ; mkN "owl" ; } ; --*
lin nightclub_N = variants {mkN "balada" ; mkN "boate" ; mkN "cabaré" ; mkN "club" ; } ; --*
lin nightdress_N = mkN "camisola" ; --*
lin nightfall_N = variants {mkN "anoitecer" ; mkN "crepúsculo" ; mkN "pôr" ; } ; --*
lin nightgown_N = mkN "camisola" ; --*
lin nighthawk_1_N = variants {mkN "noctívago" ; mkN "owl" ; } ; --*
lin nightie_N = mkN "camisola" ; --*
lin nightingale_1_N = variants {mkN "megarhynchos" ; mkN "rouxinol" ; } ; --*
lin nightingale_2_N = variants {mkN "Florence" ; mkN "Nightingale" ; mkN "with" ; } ; --*
lin nightjar_N = mkN "Caprimulgidae" ; --*
lin nightly_Adv = variants {mkAdv "night" ; mkAdv "toda" ; } ; --*
lin nightmare_1_N = mkN "pesadelo" ; --*
lin nightmare_2_N = variants {mkN "íncubo" ; mkN "pesadelo" ; mkN "Pesadelo" ; } ; --*
lin nightmarish_A = mkA "pesadelar" ; --*
lin night_porter_N = mkN "porter" ; --*
lin night_time_N = variants {mkN "fim" ; mkN "noitada" ; mkN "noite" ; mkN "tarde" ; } ; --*
lin night_watch_N = variants {mkN "ronda" ; mkN "watch" ; } ; --*
lin nihilism_1_N = variants {mkN "niilismo" ; mkN "Niilismo" ; } ; --*
lin nihilist_2_N = mkN "anarquista" ; --*
lin nijmegen_PN = mkPN "Nimegue" ; --*
lin nil_1_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin nilgai_1_N = variants {mkN "Boselaphus" ; mkN "bull" ; mkN "tragocamelus" ; } ; --*
lin nilotic_2_A = mkA "nilótico" ; --*
lin nimble_1_A = variants {mkA "ágil" ; mkA "ativo" ; mkA "lépido" ; mkA "lesto" ; mkA "ligeiro" ; mkA "rápido" ; mkA "serelepe" ; } ; --*
lin nimble_2_A = variants {mkA "ágil" ; mkA "ligeiro" ; } ; --*
lin nimbleness_2_N = mkN "agilidade" ; --*
lin nimbus_1_N = variants {mkN "cloud" ; mkN "nimbo" ; } ; --*
lin nimbus_2_N = variants {mkN "aura" ; mkN "auréola" ; mkN "halo" ; } ; --*
lin nincompoop_N = variants {mkN "estúpido" ; mkN "idiota" ; } ; --*
lin ninepins_N = mkN "bolão" ; --*
lin ninja_1_N = mkN "ninja" ; --*
lin ninja_2_N = mkN "ninja" ; --*
lin ninny_N = variants {mkN "estúpido" ; mkN "idiota" ; } ; --*
lin ninth_1_N = variants {mkN "nona" ; mkN "nono" ; } ; --*
lin ninth_2_N = mkN "nono" ; --*
lin niobe_PN = variants {mkPN "Niobe" ; mkPN "Níobe" ; } ; --*
lin niobite_N = mkN "Niobite" ; --*
lin niobium_N = variants {mkN "Niobio" ; mkN "nióbio" ; mkN "number" ; } ; --*
lin nip_1_N = mkN "dose" ; --*
lin nip_1_V2 = variants {mkV2 (mkV "apertar") ; mkV2 (mkV "beliscar") ; mkV2 (mkV "espremer") ; } ; --*
lin nip_2_V = mkV "mordiscar" ; --*
lin nip_3_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin nip_3_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "off") ; } ; --*
lin nip_4_N = variants {mkN "frialdade" ; mkN "frieza" ; mkN "frio" ; } ; --*
lin nip_6_N = mkN "mordiscar" ; --*
lin nip_off_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "off") ; } ; --*
lin nipper_1_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin nipper_2_N = mkN "puã" ; --*
lin nipple_1_N = variants {mkN "bico" ; mkN "chupadouro" ; mkN "chupeta" ; mkN "mama" ; mkN "mamilo" ; mkN "teta" ; } ; --*
lin nipple_2_N = variants {mkN "bico" ; mkN "chupadouro" ; } ; --*
lin nipponese_A = variants {mkA "japonês" ; mkA "nipônico" ; } ; --*
lin nirvana_1_N = mkN "nirvana" ; --*
lin nirvana_2_N = variants {mkN "alturas" ; mkN "céu" ; mkN "land" ; mkN "olimpo" ; mkN "paraíso" ; mkN "Paraíso" ; } ; --*
lin nit_2_N = mkN "lêndea" ; --*
lin nitrate_N = variants {mkN "azotato" ; mkN "nitrato" ; mkN "nitratos" ; mkN "Nitratos" ; } ; --*
lin nitre_1_N = variants {mkN "nitrate" ; mkN "Nitrato" ; mkN "salitre" ; } ; --*
lin nitride_N = variants {mkN "nitreto" ; mkN "Nitreto" ; } ; --*
lin nitrification_2_N = mkN "nitrificação" ; --*
lin nitrile_1_N = variants {mkN "cianeto" ; mkN "Nitrila" ; mkN "Nitrilas" ; } ; --*
lin nitrite_N = mkN "nitrito" ; --*
lin nitrobenzene_N = mkN "nitrobenzeno" ; --*
lin nitrogen_N = variants {mkN "azoto" ; mkN "nitrogénio" ; mkN "number" ; } ; --*
lin nitrogenous_A = variants {mkA "nitrogenosa" ; mkA "nitrogenoso" ; } ; --*
lin nitroglycerine_N = variants {mkN "nitroglicerina" ; mkN "trinitrate" ; } ; --*
lin nitroglycerin_N = variants {mkN "nitroglicerina" ; mkN "trinitrate" ; } ; --*
lin nitty_gritty_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin nitwit_N = mkN "idiota" ; --*
lin nix_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin nix_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin noah_PN = mkPN "Noé" ; --*
lin nobble_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin nobble_2_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin nobble_3_V2 = variants {mkV2 (mkV "abduzir") ; mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; mkV2 (mkV "seqüestrar") ; } ; --*
lin nobelium_N = variants {mkN "Nobelio" ; mkN "nobélio" ; mkN "number" ; } ; --*
lin nobel_PN = variants {mkPN "Alfred" ; mkPN "Bernhard" ; mkPN "Nobel" ; } ; --*
lin nobility_1_N = variants {mkN "aristocracia" ; mkN "nobreza" ; mkN "Nobreza" ; } ; --*
lin nobility_2_N = mkN "nobreza" ; --*
lin nobility_3_N = mkN "nobreza" ; --*
lin noble_1_A = variants {mkA "impo" ; mkA "nobre" ; } ; --*
lin noble_2_A = mkA "nobre" ; --*
lin noble_3_A = mkA "nobre" ; --*
lin noble_4_A = mkA "nobre" ; --*
lin nobleFem_N = variants {mkN "Lorde" ; mkN "nobre" ; } ; --*
lin nobleman_N = variants {mkN "Lorde" ; mkN "nobre" ; } ; --*
lin nobleMasc_N = variants {mkN "Lorde" ; mkN "nobre" ; } ; --*
lin noble_mindedness_N = mkN "idealismo" ; --*
lin noblesse_1_N = mkN "nobreza" ; --*
lin noctambulist_N = variants {mkN "sonâmbula" ; mkN "sonâmbulo" ; } ; --*
lin nocturnal_1_A = variants {mkA "nocturno" ; mkA "noturno" ; } ; --*
lin nocturnal_2_A = variants {mkA "nocturno" ; mkA "noturno" ; } ; --*
lin nocturne_1_N = mkN "noturno" ; --*
lin nod_1_N = mkN "afirmarcomacabeça" ; --*
lin nod_1_V = mkV "acenar" ; --*
lin nod_2_N = mkN "aceno" ; --*
lin nod_2_V = variants {mkV "acenar" ; mkV "assentir" ; } ; --*
lin nod_5_V = mkV "cabecear" ; --*
lin node_1_N = mkN "nó" ; --*
lin node_6_N = variants {mkN "gland" ; mkN "Linfonódo" ; mkN "node" ; } ; --*
lin nod_off_V = variants {mkV "asleep" ; mkV "off" ; mkV "out" ; } ; --*
lin nodular_1_A = mkA "nodular" ; --*
lin nodule_1_N = mkN "nódulo" ; --*
lin noel_N = variants {mkN "Ciclo" ; mkN "Natal" ; } ; --*
lin noel_PN = variants {mkPN "Ciclo" ; mkPN "Natal" ; } ; --*
lin no_Interj = ss "não" ; --*
lin noise_1_N = mkN "ruído" ; --*
lin noise_2_N = variants {mkN "algazarra" ; mkN "barulho" ; } ; --*
lin noise_3_N = variants {mkN "estrondo" ; mkN "ruído" ; } ; --*
lin noise_6_N = mkN "aleatoriedade" ; --*
lin noiseless_A = mkA "silencioso" ; --*
lin noise_V2 = variants {mkV2 (mkV "noise") ; mkV2 (mkV "ressoar") ; mkV2 (mkV "soar") ; } ; --*
lin noisiness_N = mkN "ruído" ; --*
lin noisome_1_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin noisome_2_A = variants {mkA "fedorento" ; mkA "fétido" ; mkA "malcheiroso" ; } ; --*
lin noisy_1_A = variants {mkA "barulhento" ; mkA "ruidoso" ; } ; --*
lin noisy_2_A = mkA "ruidoso" ; --*
lin no_longer_AdV = variants {mkAdV "longer" ; mkAdV "more" ; } ; --*
lin nomadic_A = mkA "nômade" ; --*
lin nomad_N = variants {mkN "nómada" ; mkN "nómadas" ; mkN "nômade" ; mkN "nomadismo" ; mkN "Povo" ; } ; --*
lin noma_N = mkN "Noma" ; --*
lin no_man's_land_2_N = mkN "man's" ; --*
lin nom_de_plume_N = variants {mkN "de" ; mkN "name" ; } ; --*
lin nomenclature_N = variants {mkN "nomenclatura" ; mkN "terminologia" ; } ; --*
lin nomenklatura_N = mkN "nomenklatura" ; --*
lin nominal_1_A = mkA "nominal" ; --*
lin nominal_2_A = mkA "simbólico" ; --*
lin nominal_3_A = mkA "nominal" ; --*
lin nominal_4_A = mkA "nominal" ; --*
lin nominal_5_A = mkA "nominal" ; --*
lin nominal_6_A = mkA "titular" ; --*
lin nominalism_N = mkN "nominalismo" ; --*
lin nominate_1_V2 = variants {mkV2 (mkV "forward") ; mkV2 (mkV "propor") ; mkV2 (mkV "up") ; } ; --*
lin nominate_2_V2 = variants {mkV2 (mkV "designar") ; mkV2 (mkV "nomear") ; mkV2 (mkV "propor") ; } ; --*
lin nominate_3_V2 = variants {mkV2 (mkV "nomear") ; mkV2 (mkV "propor") ; } ; --*
lin nominate_4_V2 = mkV2 (mkV "nomear") ; --*
lin nomination_1_N = mkN "nomeação" ; --*
lin nominative_1_A = mkA "nominativo" ; --*
lin nominative_2_A = mkA "nominal" ; --*
lin nominative_N = variants {mkN "case" ; mkN "nominativo" ; } ; --*
lin nominee_N = mkN "candidato" ; --*
lin nomogram_1_N = mkN "nomograma" ; --*
lin nonaccomplishment_N = variants {mkN "falha" ; mkN "insucesso" ; } ; --*
lin nonagon_N = mkN "eneágono" ; --*
lin nonalcoholic_A = mkA "não" ; --*
lin nonattendance_N = mkN "falta" ; --*
lin noncellular_A = variants {mkA "acelular" ; mkA "Acytota" ; } ; --*
lin nonce_N = variants {mkN "agora" ; mkN "being" ; } ; --*
lin nonce_word_N = variants {mkN "legomenon" ; mkN "word" ; } ; --*
lin non_compliance_N = mkN "desobediência" ; --*
lin nonconductor_N = variants {mkN "isolador" ; mkN "isolante" ; mkN "Isolante" ; } ; --*
lin nonconformity_1_N = mkN "discordância" ; --*
lin noncyclic_2_A = mkA "acíclico" ; --*
lin nonentity_1_N = mkN "inexistência" ; --*
lin nonentity_2_N = mkN "nenhumapessoa" ; --*
lin nones_N = variants {mkN "nona" ; mkN "nonas" ; } ; --*
lin nonesuch_N = mkN "apoteose" ; --*
lin nonetheless_Adv = variants {mkAdv "apesar" ; mkAdv "contudo" ; mkAdv "não" ; mkAdv "por" ; mkAdv "porém" ; mkAdv "se" ; mkAdv "so" ; mkAdv "the" ; } ; --*
lin nonexistence_N = mkN "inexistência" ; --*
lin nonextant_1_A = mkA "extinto" ; --*
lin nonfat_A = mkA "sem" ; --*
lin nonfiction_N = variants {mkN "não-ficção" ; mkN "prose" ; } ; --*
lin nonmetal_N = variants {mkN "Não" ; mkN "não-metal" ; } ; --*
lin nonmoving_A = mkA "imóvel" ; --*
lin nonparametric_A = mkA "não" ; --*
lin nonpareil_1_N = mkN "apoteose" ; --*
lin nonpareil_A = variants {mkA "and" ; mkA "incomparável" ; mkA "sem" ; } ; --*
lin nonpayment_1_N = mkN "inadimplência" ; --*
lin nonpayment_2_N = mkN "Moratória" ; --*
lin nonplus_1_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin nonrational_2_A = mkA "intuitivo" ; --*
lin nonreader_2_N = variants {mkN "analfabeto" ; mkN "person" ; } ; --*
lin nonsense_1_N = variants {mkN "besteira" ; mkN "disparate" ; mkN "insensatez" ; mkN "tolice" ; } ; --*
lin nonsensical_1_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin non_sequitur_2_N = mkN "sequitur" ; --*
lin nonsmoker_2_N = variants {mkN "car" ; mkN "não-fumante" ; } ; --*
lin nonspecific_1_A = variants {mkA "inespecífico" ; mkA "não" ; } ; --*
lin nonstarter_1_N = variants {mkN "fracassado" ; mkN "perdedor" ; mkN "person" ; } ; --*
lin nonsuch_N = mkN "apoteose" ; --*
lin nontechnical_A = mkA "não" ; --*
lin nonthermal_A = mkA "não-termal" ; --*
lin nontransferable_A = mkA "intransmissível" ; --*
lin nonviable_A = mkA "inviável" ; --*
lin nonviolence_N = variants {mkN "resistance" ; mkN "Resistência" ; } ; --*
lin noodle_1_N = variants {mkN "macarrão" ; mkN "talharim" ; } ; --*
lin nook_1_N = mkN "canto" ; --*
lin nook_2_N = variants {mkN "canto" ; mkN "quina" ; mkN "recanto" ; mkN "rincão" ; } ; --*
lin noon_N = variants {mkN "meio-dia" ; mkN "noon" ; } ; --*
lin noontide_N = variants {mkN "meio-dia" ; mkN "noon" ; } ; --*
lin noose_1_N = mkN "alçapão" ; --*
lin noose_2_N = variants {mkN "forca" ; mkN "nó" ; mkN "noose" ; } ; --*
lin noradrenaline_N = mkN "Noradrenalina" ; --*
lin nordic_2_A = mkA "nórdico" ; --*
lin nordic_N = variants {mkN "Germanic" ; mkN "language" ; mkN "Línguas" ; } ; --*
lin nor'_east_N = mkN "nordeste" ; --*
lin noria_N = variants {mkN "nora" ; mkN "Nora" ; } ; --*
lin norm_1_N = variants {mkN "norma" ; mkN "normas" ; mkN "padrão" ; mkN "padrões" ; } ; --*
lin norm_2_N = variants {mkN "média" ; mkN "Média" ; mkN "Médias" ; } ; --*
lin normal_1_A = mkA "normal" ; --*
lin normal_3_A = mkA "normal" ; --*
lin normalcy_1_N = mkN "normalidade" ; --*
lin normality_1_N = mkN "normalidade" ; --*
lin normality_4_N = mkN "normalidade" ; --*
lin normalization_1_N = variants {mkN "estandardização" ; mkN "homologação" ; mkN "normalização" ; mkN "padronização" ; } ; --*
lin normalize_3_V2 = mkV2 (mkV "temperar") ; --*
lin normally_Adv = variants {mkAdv "comumente" ; mkAdv "geralmente" ; mkAdv "habitualmente" ; mkAdv "normalmente" ; mkAdv "ordinariamente" ; mkAdv "popularmente" ; mkAdv "usualmente" ; } ; --*
lin normal_N = mkN "pauta" ; --*
lin norman_1_A = mkA "normando" ; --*
lin norman_1_PN = variants {mkPN "Norman" ; mkPN "Normando" ; } ; --*
lin norman_2_A = mkA "normando" ; --*
lin norman_N = mkN "normando" ; --*
lin normative_1_A = mkA "normativo" ; --*
lin normative_2_A = mkA "normativo" ; --*
lin norse_1_A = mkA "escandinavo" ; --*
lin norse_1_N = mkN "Escandinavo" ; --*
lin norse_2_A = mkA "norueguês" ; --*
lin norse_2_N = variants {mkN "norueguês" ; mkN "Norueguês" ; mkN "norueguesa" ; } ; --*
lin norse_3_N = variants {mkN "Germanic" ; mkN "language" ; mkN "Línguas" ; } ; --*
lin north_1_N = variants {mkN "Nord" ; mkN "norte" ; } ; --*
lin north_2_N = variants {mkN "Norte" ; mkN "União" ; } ; --*
lin north_3_N = variants {mkN "norte" ; mkN "Norte" ; mkN "north" ; } ; --*
lin north_4_N = mkN "norte" ; --*
lin north_6_N = variants {mkN "norte" ; mkN "north" ; } ; --*
lin north_Adv = mkAdv "para" ; --*
lin northampton_PN = mkPN "Northampton" ; --*
lin northamptonshire_PN = mkPN "Northamptonshire" ; --*
lin north_A = variants {mkA "nórdico" ; mkA "nortista" ; } ; --*
lin northeast_1_Adv = mkAdv "nordeste" ; --*
lin northeast_1_N = mkN "nordeste" ; --*
lin northeasterly_1_A = mkA "do" ; --*
lin northeasterly_2_A = variants {mkA "do" ; mkA "nordestina" ; mkA "nordestino" ; mkA "para" ; } ; --*
lin northeastern_1_A = variants {mkA "do" ; mkA "nordestina" ; mkA "nordestino" ; mkA "para" ; } ; --*
lin northerly_2_A = mkA "setentrional" ; --*
lin northerly_Adv = mkAdv "para" ; --*
lin northern_1_A = variants {mkA "boreal" ; mkA "do" ; mkA "setentrional" ; } ; --*
lin northern_3_A = mkA "setentrional" ; --*
lin northern_4_A = mkA "setentrional" ; --*
lin northerner_2_N = variants {mkN "gringa" ; mkN "gringo" ; mkN "ianque" ; } ; --*
lin north_korea_PN = variants {mkPN "Coreia" ; mkPN "Korea" ; mkPN "People's" ; } ; --*
lin northland_N = mkN "norte" ; --*
lin northman_N = mkN "Escandinavo" ; --*
lin northumberland_PN = mkPN "Northumberland" ; --*
lin northward_Adv = mkAdv "para" ; --*
lin northwards_Adv = mkAdv "para" ; --*
lin northwest_1_Adv = mkAdv "noroeste" ; --*
lin northwest_1_N = variants {mkN "Noroeste" ; mkN "United" ; } ; --*
lin northwest_3_N = mkN "noroeste" ; --*
lin northwesterly_1_A = mkA "do" ; --*
lin northwesterly_2_A = mkA "do" ; --*
lin northwestern_1_A = mkA "do" ; --*
lin nortriptyline_N = mkN "Nortriptilina" ; --*
lin norway_PN = variants {mkPN "Bairros" ; mkPN "Noruega" ; mkPN "of" ; } ; --*
lin norwegian_A = mkA "norueguês" ; --*
lin norwegianFem_N = variants {mkN "norueguês" ; mkN "Norueguês" ; mkN "norueguesa" ; } ; --*
lin norwegianMasc_N = variants {mkN "norueguês" ; mkN "Norueguês" ; mkN "norueguesa" ; } ; --*
lin norwegian_N = variants {mkN "língua" ; mkN "norueguês" ; } ; --*
lin nor'_west_N = mkN "noroeste" ; --*
lin nose_1_N = variants {mkN "nariz" ; mkN "organ" ; } ; --*
lin nose_1_V = variants {mkV "in" ; mkV "intrometer" ; mkV "intrometer-se" ; } ; --*
lin nose_2_N = variants {mkN "focinho" ; mkN "focinhos" ; mkN "tromba" ; } ; --*
lin nose_5_N = mkN "nariz" ; --*
lin nose_6_N = variants {mkN "nariz" ; mkN "olfato" ; } ; --*
lin nose_8_N = variants {mkN "boquilha" ; mkN "tubeira" ; } ; --*
lin nosebag_N = mkN "civadeira" ; --*
lin nosebleed_N = variants {mkN "epistaxe" ; mkN "Epistaxe" ; mkN "epistaxis" ; mkN "hemorragia" ; } ; --*
lin nosegay_N = mkN "buquê" ; --*
lin nose_out_1_V2 = mkV2 (mkV "out") ; --*
lin nosocomial_A = mkA "nosocomial" ; --*
lin nostalgia_N = variants {mkN "anelo" ; mkN "nostalgia" ; mkN "saudade" ; } ; --*
lin nostalgic_A = mkA "nostálgico" ; --*
lin nostril_N = variants {mkN "narina" ; mkN "naris" ; } ; --*
lin nostrum_1_N = variants {mkN "panaceia" ; mkN "panacéia" ; } ; --*
lin notability_N = variants {mkN "light" ; mkN "notável" ; } ; --*
lin notable_1_A = variants {mkA "célebre" ; mkA "comemorado" ; mkA "de" ; mkA "famoso" ; mkA "ilustre" ; mkA "notável" ; mkA "renomado" ; } ; --*
lin notable_2_A = variants {mkA "digno" ; mkA "notável" ; } ; --*
lin notable_N = variants {mkN "light" ; mkN "notável" ; } ; --*
lin notary_N = variants {mkN "notário" ; mkN "public" ; } ; --*
lin notation_1_N = variants {mkN "notação" ; mkN "system" ; } ; --*
lin notation_2_N = variants {mkN "anotação" ; mkN "apontamento" ; mkN "nota" ; } ; --*
lin notch_2_N = variants {mkN "pass" ; mkN "Passo" ; mkN "Passos" ; } ; --*
lin note_1_N = mkN "nota" ; --*
lin note_1_VS = variants {mkVS (mkV "comentar") ; mkVS (mkV "mencionar") ; mkVS (mkV "notar") ; mkVS (mkV "remarcar") ; mkVS (mkV "reparar") ; } ; --*
lin note_2_N = variants {mkN "bilhete" ; mkN "letter" ; mkN "nota" ; } ; --*
lin note_2_VS = variants {mkVS (mkV "notar") ; mkVS (mkV "observar") ; mkVS (mkV "perceber") ; mkVS (mkV "ver") ; } ; --*
lin note_3_N = variants {mkN "nota" ; mkN "note" ; mkN "tom" ; } ; --*
lin note_3_V2 = variants {mkV2 (mkV "note") ; mkV2 (mkV "observar") ; } ; --*
lin note_4_V2 = variants {mkV2 (mkV "anotar") ; mkV2 (mkV "down") ; } ; --*
lin note_6_N = variants {mkN "bill" ; mkN "cédula" ; mkN "nota" ; mkN "note" ; mkN "Reserve" ; } ; --*
lin note_7_N = variants {mkN "anotação" ; mkN "apontamento" ; mkN "nota" ; } ; --*
lin note_9_N = variants {mkN "nota" ; mkN "note" ; mkN "of" ; } ; --*
lin notebook_1_N = variants {mkN "caderno" ; mkN "livro" ; } ; --*
lin notebook_2_N = variants {mkN "caderno" ; mkN "computer" ; } ; --*
lin notecase_N = mkN "carteira" ; --*
lin noted_A = variants {mkA "célebre" ; mkA "comemorado" ; mkA "de" ; mkA "famoso" ; mkA "ilustre" ; mkA "notável" ; mkA "renomado" ; } ; --*
lin notepad_N = mkN "bloco" ; --*
lin note_V = variants {mkV "note" ; mkV "observar" ; } ; --*
lin noteworthy_A = variants {mkA "digno" ; mkA "notável" ; } ; --*
lin nothings_N = mkN "fuxico" ; --*
lin notice_1_N = variants {mkN "anúncio" ; mkN "aviso" ; } ; --*
lin notice_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "detectar") ; mkV2 (mkV "ver") ; } ; --*
lin notice_2_N = variants {mkN "observação" ; mkN "percepção" ; } ; --*
lin notice_2_V2 = variants {mkV2 (mkV "notar") ; mkV2 (mkV "observar") ; mkV2 (mkV "perceber") ; mkV2 (mkV "ver") ; } ; --*
lin notice_2_VS = variants {mkVS (mkV "notar") ; mkVS (mkV "observar") ; mkVS (mkV "perceber") ; mkVS (mkV "ver") ; } ; --*
lin notice_3_N = mkN "notificação" ; --*
lin notice_3_V2 = variants {mkV2 (mkV "comentar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "out") ; } ; --*
lin notice_4_N = variants {mkN "aviso" ; mkN "comunicação" ; mkN "nota" ; mkN "notificação" ; } ; --*
lin notice_4_V2 = variants {mkV2 (mkV "notar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin notice_5_N = variants {mkN "anúncio" ; mkN "cartaz" ; mkN "edital" ; mkN "letreiro" ; mkN "papeleta" ; mkN "rótulo" ; } ; --*
lin noticeable_1_A = variants {mkA "percebível" ; mkA "que" ; } ; --*
lin notice_board_N = mkN "board" ; --*
lin notice_V = variants {mkV "notar" ; mkV "observar" ; mkV "perceber" ; mkV "ver" ; } ; --*
lin notification_2_N = variants {mkN "anúncio" ; mkN "aviso" ; } ; --*
lin notification_3_N = mkN "notificação" ; --*
lin notify_V2 = variants {mkV2 (mkV "advertir") ; mkV2 (mkV "anunciar") ; mkV2 (mkV "avisar") ; mkV2 (mkV "notice") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "notificar") ; mkV2 (mkV "word") ; } ; --*
lin notion_1_N = variants {mkN "crença" ; mkN "ideia" ; mkN "idéia" ; mkN "impressão" ; mkN "opinião" ; } ; --*
lin notion_2_N = variants {mkN "ideia" ; mkN "idéia" ; mkN "noção" ; } ; --*
lin notional_1_A = mkA "imaginário" ; --*
lin notional_2_A = mkA "especulativo" ; --*
lin notion_of_N2 = variants {mkN2 (mkN "caprichoso") noPrep ; mkN2 (mkN "ideia") noPrep ; mkN2 (mkN "idéia") noPrep ; mkN2 (mkN "noção") noPrep ; } ; --*
lin notochord_N = mkN "Corda" ; --*
lin notorious_A = variants {mkA "famigerado" ; mkA "infame" ; mkA "notório" ; } ; --*
lin notwithstanding_Adv = variants {mkAdv "apesar" ; mkAdv "contudo" ; mkAdv "não" ; mkAdv "por" ; mkAdv "porém" ; mkAdv "se" ; mkAdv "so" ; mkAdv "the" ; } ; --*
lin nought_N = variants {mkN "número" ; mkN "zero" ; } ; --*
lin noumenon_N = variants {mkN "Coisa" ; mkN "coisa-em-si" ; } ; --*
lin noun_1_N = variants {mkN "nome" ; mkN "substantivo" ; } ; --*
lin noun_2_N = variants {mkN "nominal" ; mkN "substantivo" ; } ; --*
lin nourish_1_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "nutrir") ; } ; --*
lin nourish_2_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "nutrir") ; } ; --*
lin nourishment_1_N = variants {mkN "alimentação" ; mkN "alimento" ; mkN "comida" ; mkN "nutrição" ; mkN "nutrientes" ; mkN "pão" ; } ; --*
lin nourishment_2_N = variants {mkN "alimentação" ; mkN "nutrição" ; } ; --*
lin nous_1_N = mkN "nous" ; --*
lin nous_2_N = variants {mkN "cabeça" ; mkN "mente" ; mkN "psique" ; } ; --*
lin nova_N = mkN "nova" ; --*
lin nova_scotia_1_PN = mkPN "Scotia" ; --*
lin novel_1_A = variants {mkA "fresco" ; mkA "nova" ; mkA "novo" ; mkA "original" ; } ; --*
lin novel_1_N = mkN "romance" ; --*
lin novel_2_N = variants {mkN "romance" ; mkN "Romance" ; } ; --*
lin novelist_N = mkN "escritor" ; --*
lin novelization_1_N = mkN "romantização" ; --*
lin novelty_1_N = variants {mkN "coisa" ; mkN "frescor" ; mkN "frescura" ; mkN "novidade" ; } ; --*
lin novelty_2_N = mkN "novidade" ; --*
lin novena_N = mkN "novena" ; --*
lin novice_2_N = variants {mkN "novato" ; mkN "principiante" ; } ; --*
lin noviciate_N = mkN "noviciado" ; --*
lin novitiate_1_N = mkN "noviciado" ; --*
lin novosibirsk_PN = mkPN "Novosibirsk" ; --*
lin nov_PN = variants {mkPN "Nazaré" ; mkPN "nov" ; mkPN "novembro" ; mkPN "Novembro" ; } ; --*
lin now_2_Adv = variants {mkAdv "actualmente" ; mkAdv "atualmente" ; mkAdv "hoje" ; mkAdv "presentemente" ; } ; --*
lin now_2_AdV = variants {mkAdV "actualmente" ; mkAdV "atualmente" ; mkAdV "hoje" ; mkAdV "presentemente" ; } ; --*
lin now_4_Adv = variants {mkAdv "agora" ; mkAdv "ora" ; mkAdv "present" ; } ; --*
lin now_4_AdV = variants {mkAdV "agora" ; mkAdV "ora" ; mkAdV "present" ; } ; --*
lin now_5_Adv = variants {mkAdv "a" ; mkAdv "agora" ; mkAdv "away" ; mkAdv "directamente" ; mkAdv "em" ; mkAdv "imediatamente" ; mkAdv "instantaneamente" ; mkAdv "off" ; mkAdv "once" ; } ; --*
lin now_5_AdV = variants {mkAdV "a" ; mkAdV "agora" ; mkAdV "away" ; mkAdV "directamente" ; mkAdV "em" ; mkAdV "imediatamente" ; mkAdV "instantaneamente" ; mkAdV "off" ; mkAdV "once" ; } ; --*
lin nowadays_Adv = variants {mkAdv "actualmente" ; mkAdv "atualmente" ; mkAdv "hoje" ; mkAdv "presentemente" ; } ; --*
lin now_and_again_Adv = variants {mkAdv "and" ; mkAdv "in" ; mkAdv "ocasionalmente" ; mkAdv "occasion" ; mkAdv "time" ; mkAdv "times" ; } ; --*
lin now_and_then_Adv = variants {mkAdv "and" ; mkAdv "in" ; mkAdv "ocasionalmente" ; mkAdv "occasion" ; mkAdv "time" ; mkAdv "times" ; } ; --*
lin nowhere_Adv = mkAdv "em" ; --*
lin nowise_Adv = variants {mkAdv "de" ; mkAdv "no" ; } ; --*
lin now_N = mkN "agora" ; --*
lin noxious_A = variants {mkA "nocivo" ; mkA "tóxico" ; } ; --*
lin nozzle_1_N = variants {mkN "boquilha" ; mkN "tubeira" ; } ; --*
lin nozzle_2_N = variants {mkN "bocal" ; mkN "focinho" ; } ; --*
lin nth_1_A = variants {mkA "enegésimo" ; mkA "enésimo" ; } ; --*
lin nuance_N = mkN "matiz" ; --*
lin nub_3_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin nubile_A = variants {mkA "casadoiro" ; mkA "núbil" ; } ; --*
lin nuclear_2_A = variants {mkA "atómico" ; mkA "nuclear" ; } ; --*
lin nuclear_3_A = variants {mkA "atómico" ; mkA "nuclear" ; } ; --*
lin nuclear_4_A = variants {mkA "atómico" ; mkA "nuclear" ; } ; --*
lin nuclear_fission_N = variants {mkN "fissão" ; mkN "fission" ; } ; --*
lin nuclear_physics_N = variants {mkN "Física" ; mkN "physics" ; } ; --*
lin nuclear_weapon_N = mkN "weapon" ; --*
lin nuclease_N = mkN "Nuclease" ; --*
lin nucleolus_1_N = variants {mkN "Nucleolo" ; mkN "nucléolo" ; } ; --*
lin nucleon_N = variants {mkN "nucleão" ; mkN "nucleon" ; mkN "Núcleon" ; mkN "Nucleons" ; } ; --*
lin nucleoplasm_N = mkN "hialoplasma" ; --*
lin nucleoside_N = mkN "Nucleosídeos" ; --*
lin nucleosynthesis_N = mkN "nucleossíntese" ; --*
lin nucleotide_N = variants {mkN "nucleotídeo" ; mkN "Nucleótido" ; mkN "Nucleótidos" ; } ; --*
lin nucleus_1_N = variants {mkN "Nucleo" ; mkN "núcleo" ; mkN "nucleus" ; } ; --*
lin nucleus_2_N = mkN "núcleo" ; --*
lin nucleus_5_N = mkN "núcleo" ; --*
lin nude_A = variants {mkA "despido" ; mkA "naturel" ; mkA "nu" ; mkA "pelado" ; } ; --*
lin nudge_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "cutucar") ; } ; --*
lin nudge_N = mkN "cutucão" ; --*
lin nudism_N = variants {mkN "naturismo" ; mkN "Naturismo" ; mkN "nudismo" ; } ; --*
lin nudity_N = mkN "nudez" ; --*
lin nugget_N = mkN "pepita" ; --*
lin nuisance_1_N = variants {mkN "chateação" ; mkN "contrariedade" ; mkN "distúrbios" ; mkN "incômodo" ; mkN "moléstia" ; mkN "pertubação" ; } ; --*
lin nuisance_2_N = variants {mkN "chato" ; mkN "in" ; } ; --*
lin null_A = variants {mkA "inválido" ; mkA "nulo" ; } ; --*
lin nullification_2_N = mkN "anulação" ; --*
lin nullify_1_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "invalidar") ; mkV2 (mkV "revogar") ; } ; --*
lin nullify_2_V2 = mkV2 (mkV "invalidar") ; --*
lin nullify_3_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "neutralizar") ; } ; --*
lin numbat_N = variants {mkN "anteater" ; mkN "fasciatus" ; mkN "numbat" ; } ; --*
lin number_11_N = mkN "número" ; --*
lin number_1_N = mkN "número" ; --*
lin number_1_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "up") ; } ; --*
lin number_2_N = variants {mkN "numeral" ; mkN "número" ; } ; --*
lin number_2_V2 = mkV2 (mkV "numerar") ; --*
lin number_3_N = mkN "número" ; --*
lin number_3_V2 = variants {mkV2 (mkV "enumerar") ; mkV2 (mkV "listar") ; mkV2 (mkV "numerar") ; } ; --*
lin number_4_N = variants {mkN "number" ; mkN "número" ; } ; --*
lin number_4_V2 = mkV2 (mkV "contar") ; --*
lin number_5_N = variants {mkN "numeral" ; mkN "número" ; } ; --*
lin number_5_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "enumerar") ; } ; --*
lin number_6_N = mkN "número" ; --*
lin number_8_N = variants {mkN "number" ; mkN "número" ; } ; --*
lin numberless_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin numberplate_N = variants {mkN "placa" ; mkN "plate" ; } ; --*
lin numbness_1_N = mkN "dormência" ; --*
lin numbness_2_N = variants {mkN "apatia" ; mkN "indiferença" ; } ; --*
lin numb_V2 = mkV2 (mkV "anestesiar") ; --*
lin numb_with_A2 = variants {mkA2 (mkA "entorpecida") noPrep ; mkA2 (mkA "entorpecido") noPrep ; } ; --*
lin numen_N = mkN "numina" ; --*
lin numeral_A = mkA "numérico" ; --*
lin numeral_N = variants {mkN "numeral" ; mkN "número" ; } ; --*
lin numeration_1_N = mkN "numeração" ; --*
lin numeration_2_N = variants {mkN "conta" ; mkN "contagem" ; mkN "enumeração" ; } ; --*
lin numerator_N = mkN "numerador" ; --*
lin numeric_1_A = mkA "numérico" ; --*
lin numeric_2_A = mkA "numérico" ; --*
lin numerical_1_A = mkA "numérico" ; --*
lin numerical_2_A = mkA "numérico" ; --*
lin numerical_3_A = variants {mkA "matemático" ; mkA "numérico" ; } ; --*
lin numerology_N = variants {mkN "numerologia" ; mkN "Numerologia" ; } ; --*
lin numerous_A = mkA "numeroso" ; --*
lin numismatist_N = variants {mkN "collector" ; mkN "numismata" ; } ; --*
lin numskull_N = mkN "cabeça" ; --*
lin nun_1_N = variants {mkN "freira" ; mkN "Freiras" ; mkN "madre" ; mkN "monja" ; mkN "religiosa" ; } ; --*
lin nu_N = variants {mkN "nem" ; mkN "ni" ; mkN "ν" ; } ; --*
lin nuptial_A = mkA "nupcial" ; --*
lin nurse_1_N = variants {mkN "aia" ; mkN "ama-seca" ; mkN "enfermeira" ; mkN "enfermeiro" ; mkN "Enfermeiros" ; } ; --*
lin nurse_2_N = mkN "babá" ; --*
lin nurse_2_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "sustentar") ; } ; --*
lin nurse_3_V2 = mkV2 (mkV "cuidar") ; --*
lin nurse_5_V2 = variants {mkV2 (mkV "aleitar") ; mkV2 (mkV "amamentar") ; mkV2 (mkV "lactar") ; mkV2 (mkV "suck") ; } ; --*
lin nurseling_N = mkN "primeira" ; --*
lin nursemaid_N = mkN "babá" ; --*
lin nurseryman_N = mkN "jardineiro" ; --*
lin nursery_N = variants {mkN "quarto" ; mkN "room" ; } ; --*
lin nursing_2_N = variants {mkN "enfermagem" ; mkN "Enfermagem" ; } ; --*
lin nursing_3_N = variants {mkN "amamentação" ; mkN "feeding" ; } ; --*
lin nursing_home_N = variants {mkN "casa" ; mkN "home" ; } ; --*
lin nursling_N = mkN "primeira" ; --*
lin nurture_1_V2 = mkV2 (mkV "alimentar") ; --*
lin nurture_2_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "up") ; } ; --*
lin nurture_3_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "nutrir") ; } ; --*
lin nut_1_N = variants {mkN "fruta" ; mkN "noz" ; mkN "Noz" ; } ; --*
lin nut_3_N = mkN "porca" ; --*
lin nut_4_N = mkN "ene" ; --*
lin nut_5_N = variants {mkN "aloprado" ; mkN "case" ; mkN "maluco" ; } ; --*
lin nut_6_N = variants {mkN "adicto" ; mkN "viciado" ; } ; --*
lin nut_7_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin nutation_N = mkN "nutação" ; --*
lin nut_brown_A = mkA "escareado" ; --*
lin nutcracker_1_N = mkN "quebra-nozes" ; --*
lin nutcracker_3_N = mkN "quebra-nozes" ; --*
lin nutgrass_1_N = variants {mkN "Cyperus" ; mkN "grass" ; mkN "rotundus" ; mkN "sedge" ; } ; --*
lin nutmeg_1_N = variants {mkN "fragrans" ; mkN "noz-moscada" ; mkN "tree" ; } ; --*
lin nutmeg_2_N = variants {mkN "noz" ; mkN "noz-moscada" ; } ; --*
lin nut_PN = mkPN "Nut" ; --*
lin nutria_N = variants {mkN "coypus" ; mkN "nútria" ; mkN "Ratão-do-banhado" ; } ; --*
lin nutrient_1_N = variants {mkN "alimento" ; mkN "comida" ; mkN "nutriente" ; } ; --*
lin nutrient_2_N = variants {mkN "nutriente" ; mkN "Nutrientes" ; } ; --*
lin nutrient_A = variants {mkA "alimentar" ; mkA "alimentário" ; mkA "nutritivo" ; } ; --*
lin nutriment_N = variants {mkN "alimentação" ; mkN "alimento" ; mkN "comida" ; mkN "nutrição" ; mkN "nutrientes" ; mkN "pão" ; } ; --*
lin nutrition_1_N = mkN "nutrição" ; --*
lin nutrition_2_N = variants {mkN "alimentação" ; mkN "alimento" ; mkN "comida" ; mkN "nutrição" ; mkN "nutrientes" ; mkN "pão" ; } ; --*
lin nutritional_A = variants {mkA "nutricional" ; mkA "nutritiva" ; mkA "nutritivo" ; } ; --*
lin nutritious_A = variants {mkA "alimentar" ; mkA "alimentário" ; mkA "nutritivo" ; } ; --*
lin nutritive_A = variants {mkA "alimentar" ; mkA "alimentário" ; mkA "nutritivo" ; } ; --*
lin nuts_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin nutty_2_A = variants {mkA "doidão" ; mkA "doido" ; mkA "lelé" ; mkA "pirado" ; mkA "sandeu" ; mkA "the" ; } ; --*
lin nuzzle_1_V = variants {mkV "acomodar" ; mkV "close" ; } ; --*
lin nybble_N = mkN "nibble" ; --*
lin nyctalopia_N = variants {mkN "blindness" ; mkN "Nictalopia" ; } ; --*
lin nyctophobia_N = mkN "nictofobia" ; --*
lin nylon_1_N = mkN "náilon" ; --*
lin nylon_2_N = variants {mkN "denáilon" ; mkN "náilon" ; } ; --*
lin nymph_1_N = variants {mkN "ninfa" ; mkN "Ninfas" ; } ; --*
lin nymph_2_N = mkN "ninfa" ; --*
lin nymph_3_N = mkN "huri" ; --*
lin nymphomaniacal_A = mkA "ninfomaníaco" ; --*
lin nymphomaniac_A = mkA "ninfomaníaco" ; --*
lin nymphomania_N = mkN "ninfomania" ; --*
lin nystagmus_N = mkN "nistagmo" ; --*
lin nystatin_N = mkN "nistatina" ; --*
lin oaf_N = mkN "bobo" ; --*
lin oak_1_N = mkN "carvalho" ; --*
lin oak_2_N = variants {mkN "carvalho" ; mkN "tree" ; } ; --*
lin oak_apple_N = mkN "apple" ; --*
lin oaken_A = mkA "carvalhal" ; --*
lin oarfish_N = variants {mkN "glesne" ; mkN "of" ; mkN "Regaleco" ; } ; --*
lin oar_N = variants {mkN "pá" ; mkN "remo" ; } ; --*
lin oasis_1_N = mkN "oásis" ; --*
lin oasis_2_N = mkN "oásis" ; --*
lin oat_1_N = variants {mkN "aveia" ; mkN "Avena" ; } ; --*
lin oat_2_N = mkN "aveia" ; --*
lin oath_1_N = variants {mkN "expletivo" ; mkN "palavrão" ; mkN "word" ; } ; --*
lin oath_2_N = mkN "juramento" ; --*
lin oath_3_N = variants {mkN "juramento" ; mkN "promessa" ; } ; --*
lin ob_1_PN = variants {mkPN "rio" ; mkPN "River" ; } ; --*
lin ob_2_PN = variants {mkPN "obstetrícia" ; mkPN "Obstetrícia" ; } ; --*
lin obbligato_2_N = mkN "obbligato" ; --*
lin obduracy_N = mkN "obstinação" ; --*
lin obedience_1_N = mkN "obediência" ; --*
lin obedience_2_N = mkN "obediência" ; --*
lin obedience_3_N = mkN "obediência" ; --*
lin obedient_A = mkA "obediente" ; --*
lin obeisance_2_N = mkN "obediência" ; --*
lin obelisk_1_N = variants {mkN "obelisco" ; mkN "Obelisco" ; mkN "Obeliscos" ; } ; --*
lin obelisk_2_N = mkN "obelisco" ; --*
lin obese_A = variants {mkA "corpulento" ; mkA "encorpado" ; mkA "espesso" ; mkA "gordo" ; mkA "grosso" ; mkA "obeso" ; } ; --*
lin obesity_N = variants {mkN "corpulência" ; mkN "obesidade" ; mkN "Obesidade" ; } ; --*
lin obey_V2 = mkV2 (mkV "obedecer") ; --*
lin obey_V = mkV "obedecer" ; --*
lin obfuscate_V2 = mkV2 (mkV "ofuscar") ; --*
lin obiter_dictum_2_N = variants {mkN "dictum" ; mkN "obiter" ; } ; --*
lin obituary_N = variants {mkN "necrológio" ; mkN "obituário" ; } ; --*
lin object_1_N = variants {mkN "object" ; mkN "objeto" ; } ; --*
lin object_2_N = variants {mkN "fim" ; mkN "ideia" ; mkN "intenção" ; mkN "objetivo" ; mkN "ponto" ; } ; --*
lin object_3_N = variants {mkN "Complemento" ; mkN "objeto" ; } ; --*
lin object_4_N = variants {mkN "objecto" ; mkN "objetivo" ; mkN "objeto" ; } ; --*
lin object_5_N = mkN "objeto" ; --*
lin objection_1_N = mkN "objeção" ; --*
lin objection_2_N = mkN "objeção" ; --*
lin objection_3_N = mkN "protesto" ; --*
lin objectionable_1_A = variants {mkA "desagradável" ; mkA "detestável" ; mkA "enjoativo" ; mkA "insuportável" ; mkA "odioso" ; } ; --*
lin objectionable_2_A = mkA "inaceitável" ; --*
lin objective_1_A = variants {mkA "não" ; mkA "objetivo" ; } ; --*
lin objective_1_N = variants {mkN "fim" ; mkN "ideia" ; mkN "intenção" ; mkN "objetivo" ; mkN "ponto" ; } ; --*
lin objective_2_A = mkA "acusativo" ; --*
lin objective_2_N = variants {mkN "glass" ; mkN "lens" ; mkN "objetiva" ; } ; --*
lin objective_3_A = mkA "documental" ; --*
lin objectivity_N = mkN "objetividade" ; --*
lin objector_N = variants {mkN "dissidência" ; mkN "dissidente" ; } ; --*
lin object_to_1_V2 = mkV2 (mkV "objectar") ; --*
lin object_VS = mkVS (mkV "objectar") ; --*
lin objurgate_1_V2 = variants {mkV2 (mkV "condenar") ; mkV2 (mkV "desaprovar") ; mkV2 (mkV "reprovar") ; } ; --*
lin objurgate_2_V2 = mkV2 (mkV "castigar") ; --*
lin obligate_1_V2 = variants {mkV2 (mkV "compelir") ; mkV2 (mkV "constranger") ; mkV2 (mkV "forçar") ; mkV2 (mkV "obrigar") ; } ; --*
lin obligate_3_V2 = variants {mkV2 (mkV "obrigar") ; mkV2 (mkV "prender") ; mkV2 (mkV "vincular") ; } ; --*
lin obligate_V2V = variants {mkV2V (mkV "obrigar") ; mkV2V (mkV "prender") ; mkV2V (mkV "vincular") ; } ; --*
lin obligation_1_N = variants {mkN "dever" ; mkN "responsabilidade" ; } ; --*
lin obligation_2_N = mkN "obrigação" ; --*
lin obligation_5_N = mkN "obrigação" ; --*
lin obligatory_1_A = variants {mkA "essencial" ; mkA "imprescindível" ; mkA "obrigatório" ; } ; --*
lin obligatory_2_A = variants {mkA "essencial" ; mkA "imprescindível" ; mkA "obrigatório" ; } ; --*
lin oblige_1_V2 = variants {mkV2 (mkV "compelir") ; mkV2 (mkV "constranger") ; mkV2 (mkV "forçar") ; mkV2 (mkV "obrigar") ; } ; --*
lin oblige_2_V2 = variants {mkV2 (mkV "obrigar") ; mkV2 (mkV "prender") ; mkV2 (mkV "vincular") ; } ; --*
lin obliging_A = mkA "obsequioso" ; --*
lin oblique_1_A = mkA "oblíquo" ; --*
lin oblique_1_N = variants {mkN "case" ; mkN "caso" ; } ; --*
lin obliterable_A = mkA "obliterável" ; --*
lin obliterate_1_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin obliterate_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "esconder") ; mkV2 (mkV "out") ; } ; --*
lin obliterate_4_V2 = mkV2 (mkV "aniquilar") ; --*
lin obliteration_1_N = mkN "obliteração" ; --*
lin obliteration_2_N = variants {mkN "aniquilação" ; mkN "erradicação" ; } ; --*
lin oblivion_1_N = mkN "esquecimento" ; --*
lin oblivion_2_N = mkN "esquecimento" ; --*
lin oblivious_A = variants {mkA "distraído" ; mkA "esquecido" ; } ; --*
lin obliviousness_N = mkN "esquecimento" ; --*
lin oblong_1_A = mkA "oblongo" ; --*
lin obloquy_1_N = mkN "xingamento" ; --*
lin obnoxious_A = variants {mkA "desagradável" ; mkA "detestável" ; mkA "enjoativo" ; mkA "insuportável" ; mkA "odioso" ; } ; --*
lin oboe_N = mkN "oboé" ; --*
lin obscene_1_A = mkA "obsceno" ; --*
lin obscene_2_A = variants {mkA "abominoso" ; mkA "aborrecivel" ; mkA "repugnante" ; } ; --*
lin obscene_3_A = variants {mkA "impudico" ; mkA "obsceno" ; } ; --*
lin obscenity_1_N = variants {mkN "pulha" ; mkN "salacidade" ; } ; --*
lin obscenity_2_N = variants {mkN "indecência" ; mkN "obscenidade" ; mkN "palavrão" ; mkN "vulgaridade" ; mkN "word" ; } ; --*
lin obscenity_3_N = mkN "obscenidade" ; --*
lin obscurantism_2_N = mkN "Obscurantismo" ; --*
lin obscure_1_A = mkA "vago" ; --*
lin obscure_1_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "over") ; } ; --*
lin obscure_2_A = mkA "obscuro" ; --*
lin obscure_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "obnubilar") ; mkV2 (mkV "obscurecer") ; } ; --*
lin obscure_4_A = variants {mkA "desconhecido" ; mkA "obscuro" ; } ; --*
lin obscure_5_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "esconder") ; mkV2 (mkV "out") ; } ; --*
lin obscure_6_A = mkA "isolado" ; --*
lin obscureness_1_N = mkN "humildade" ; --*
lin obscureness_2_N = mkN "obscuridade" ; --*
lin obscureness_3_N = mkN "obscuridade" ; --*
lin obscurity_1_N = mkN "obscuridade" ; --*
lin obscurity_3_N = mkN "obscuridade" ; --*
lin obsequious_2_A = mkA "servil" ; --*
lin observable_A = variants {mkA "evidente" ; mkA "observável" ; } ; --*
lin observance_1_N = variants {mkN "observação" ; mkN "observância" ; mkN "vislumbre" ; } ; --*
lin observance_2_N = variants {mkN "cerimónia" ; mkN "cerimônia" ; mkN "festa" ; mkN "occasion" ; } ; --*
lin observance_3_N = variants {mkN "observação" ; mkN "percepção" ; } ; --*
lin observation_1_N = mkN "observação" ; --*
lin observation_2_N = variants {mkN "observação" ; mkN "observância" ; mkN "vislumbre" ; } ; --*
lin observation_3_N = variants {mkN "observação" ; mkN "reflexão" ; } ; --*
lin observation_4_N = mkN "observação" ; --*
lin observation_5_N = variants {mkN "observação" ; mkN "percepção" ; } ; --*
lin observatory_1_N = mkN "observatório" ; --*
lin observatory_2_N = variants {mkN "observatório" ; mkN "station" ; mkN "tower" ; } ; --*
lin observe_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "detectar") ; mkV2 (mkV "ver") ; } ; --*
lin observe_2_VS = variants {mkVS (mkV "comentar") ; mkVS (mkV "mencionar") ; mkVS (mkV "notar") ; mkVS (mkV "remarcar") ; mkVS (mkV "reparar") ; } ; --*
lin observe_3_V2 = variants {mkV2 (mkV "note") ; mkV2 (mkV "observar") ; } ; --*
lin observe_3_VS = variants {mkVS (mkV "note") ; mkVS (mkV "observar") ; } ; --*
lin observe_4_V2 = mkV2 (mkV "observar") ; --*
lin observe_5_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "homenagear") ; mkV2 (mkV "honrar") ; mkV2 (mkV "prestigiar") ; mkV2 (mkV "respeitar") ; } ; --*
lin observe_6_V2 = variants {mkV2 (mkV "celebrar") ; mkV2 (mkV "festejar") ; mkV2 (mkV "solenizar") ; } ; --*
lin observe_7_V2 = variants {mkV2 (mkV "an") ; mkV2 (mkV "assistir") ; mkV2 (mkV "guardar") ; mkV2 (mkV "observar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "over") ; mkV2 (mkV "ver") ; } ; --*
lin observe_8_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "manter") ; mkV2 (mkV "observar") ; } ; --*
lin observe_9_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "seguir") ; } ; --*
lin observer_1_N = variants {mkN "espectador" ; mkN "observador" ; } ; --*
lin observer_2_N = variants {mkN "comentarista" ; mkN "observador" ; } ; --*
lin obsess_1_V2 = variants {mkV2 (mkV "amedrontar") ; mkV2 (mkV "apavorar") ; mkV2 (mkV "assombrar") ; mkV2 (mkV "obsedar") ; } ; --*
lin obsess_2_V2 = variants {mkV2 (mkV "obcecar") ; mkV2 (mkV "obsediar") ; } ; --*
lin obsession_1_N = variants {mkN "compulsão" ; mkN "obsessão" ; } ; --*
lin obsession_2_N = variants {mkN "idéia" ; mkN "obsessão" ; } ; --*
lin obsessional_A = mkA "compulsivo" ; --*
lin obsessive_A = mkA "compulsivo" ; --*
lin obsidian_N = mkN "obsidiana" ; --*
lin obsolescence_N = mkN "obsolescência" ; --*
lin obsolete_A = variants {mkA "obsoleta" ; mkA "obsoleto" ; } ; --*
lin obstacle_1_N = mkN "obstáculo" ; --*
lin obstacle_2_N = mkN "obstáculo" ; --*
lin obstetrical_A = variants {mkA "obstetrício" ; mkA "obstétrico" ; } ; --*
lin obstetric_A = variants {mkA "obstetrício" ; mkA "obstétrico" ; } ; --*
lin obstetrician_N = mkN "obstetra" ; --*
lin obstetrics_N = variants {mkN "obstetrícia" ; mkN "Obstetrícia" ; } ; --*
lin obstinacy_1_N = mkN "obstinação" ; --*
lin obstinate_1_A = variants {mkA "obstinado" ; mkA "teimosa" ; mkA "teimoso" ; } ; --*
lin obstruct_1_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin obstruct_2_V2 = variants {mkV2 (mkV "barrar") ; mkV2 (mkV "entupir") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "ocluir") ; mkV2 (mkV "tapar") ; mkV2 (mkV "trancar") ; mkV2 (mkV "up") ; } ; --*
lin obstruct_3_V2 = mkV2 (mkV "tapar") ; --*
lin obstruction_1_N = mkN "obstáculo" ; --*
lin obstruction_3_N = mkN "obstáculo" ; --*
lin obstruction_4_N = mkN "obstrução" ; --*
lin obstruction_5_N = mkN "obstrução" ; --*
lin obstructive_A = mkA "obstrutivo" ; --*
lin obtain_1_V2 = mkV2 (mkV "obter") ; --*
lin obtain_2_V2 = variants {mkV2 (mkV "incorrer") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin obtain_3_V = variants {mkV "obter" ; mkV "prevalecer" ; mkV "primar" ; } ; --*
lin obtainable_A = variants {mkA "adquirível" ; mkA "obtenível" ; } ; --*
lin obtainment_N = mkN "obtenção" ; --*
lin obtrude_1_V2 = variants {mkV2 (mkV "expor") ; mkV2 (mkV "out") ; } ; --*
lin obtrude_1_V = variants {mkV "expor" ; mkV "out" ; } ; --*
lin obtuse_1_A = mkA "obtuso" ; --*
lin obtuse_2_A = mkA "obtuso" ; --*
lin obtuse_3_A = mkA "obtuso" ; --*
lin obtuse_4_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "fátuo" ; mkA "idiota" ; mkA "imbecil" ; } ; --*
lin obviate_2_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin obvious_A = variants {mkA "evidente" ; mkA "obvio" ; mkA "óbvio" ; } ; --*
lin ocarina_N = variants {mkN "ocarina" ; mkN "potato" ; } ; --*
lin occasion_2_N = variants {mkN "acontecimento" ; mkN "festa" ; mkN "function" ; mkN "occasion" ; } ; --*
lin occasion_3_N = mkN "razão" ; --*
lin occasion_4_N = mkN "feita" ; --*
lin occasion_5_N = variants {mkN "chance" ; mkN "ocasião" ; mkN "vez" ; } ; --*
lin occasional_1_A = mkA "ocasional" ; --*
lin occasional_2_A = variants {mkA "episódico" ; mkA "ocasional" ; } ; --*
lin occasional_3_A = variants {mkA "eventual" ; mkA "ocasional" ; } ; --*
lin occasional_4_A = variants {mkA "ocasional" ; mkA "periódico" ; } ; --*
lin occasion_V2 = mkV2 (mkV "causar") ; --*
lin occident_2_PN = variants {mkPN "hemisphere" ; mkPN "poente" ; mkPN "World" ; } ; --*
lin occidental_1_N = mkN "interlingue" ; --*
lin occidental_2_N = mkN "Interlingue" ; --*
lin occidental_A = mkA "ocidental" ; --*
lin occipital_A = mkA "occipital" ; --*
lin occiput_N = mkN "Occipício" ; --*
lin occlusion_1_N = mkN "oclusão" ; --*
lin occlusion_2_N = variants {mkN "Frente" ; mkN "front" ; } ; --*
lin occlusion_4_N = mkN "obstáculo" ; --*
lin occlusive_A = mkA "oclusivo" ; --*
lin occult_1_N = variants {mkN "ocultismo" ; mkN "oculto" ; mkN "sobrenatural" ; } ; --*
lin occult_2_A = variants {mkA "misteriosa" ; mkA "misterioso" ; mkA "místico" ; } ; --*
lin occultism_1_N = mkN "ocultismo" ; --*
lin occultism_2_N = mkN "ocultismo" ; --*
lin occultist_N = mkN "ocultista" ; --*
lin occupancy_1_N = mkN "locação" ; --*
lin occupant_N = variants {mkN "morador" ; mkN "ocupante" ; } ; --*
lin occupation_1_N = variants {mkN "função" ; mkN "lugar" ; mkN "ocupação" ; mkN "of" ; mkN "ofício" ; mkN "profissão" ; mkN "serviço" ; mkN "trabalho" ; } ; --*
lin occupation_2_N = variants {mkN "control" ; mkN "(militar)" ; } ; --*
lin occupation_3_N = variants {mkN "emprego" ; mkN "ocupação" ; } ; --*
lin occupation_5_N = mkN "ocupação" ; --*
lin occupational_A = variants {mkA "laboral" ; mkA "ocupacional" ; mkA "trabalhista" ; } ; --*
lin occupier_1_N = variants {mkN "morador" ; mkN "ocupante" ; } ; --*
lin occupy_1_V2 = mkV2 (mkV "ocupar") ; --*
lin occupy_2_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "residir") ; mkV2 (mkV "viver") ; } ; --*
lin occupy_3_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "ocupar") ; } ; --*
lin occupy_4_V = variants {mkV "dizer" ; mkV "preocupar" ; mkV "ter" ; } ; --*
lin occupy_5_V2 = variants {mkV2 (mkV "invadir") ; mkV2 (mkV "ocupar") ; } ; --*
lin occupy_6_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "ocupar") ; mkV2 (mkV "up") ; } ; --*
lin occupy_7_V2 = mkV2 (mkV "ocupar") ; --*
lin occur_1_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin occur_2_V = variants {mkV "acontecer" ; mkV "terlugar" ; } ; --*
lin occur_3_V = variants {mkV "encontrar-se" ; mkV "ocorrer" ; } ; --*
lin occurrence_1_N = variants {mkN "acontecimento" ; mkN "event" ; mkN "evento" ; mkN "ocorrência" ; } ; --*
lin occurrence_2_N = mkN "existência" ; --*
lin ocean_1_N = variants {mkN "mar" ; mkN "oceano" ; mkN "oceanos" ; } ; --*
lin ocean_2_N = variants {mkN "infinidade" ; mkN "mar" ; mkN "oceano" ; mkN "Oceano" ; } ; --*
lin oceanic_1_A = variants {mkA "oceânico" ; mkA "pelágico" ; } ; --*
lin oceanic_2_A = mkA "dooceano" ; --*
lin oceanic_3_A = variants {mkA "oceâneo" ; mkA "oceânico" ; } ; --*
lin oceanographer_N = mkN "oceanógrafo" ; --*
lin oceanography_N = variants {mkN "oceanografia" ; mkN "Oceanografia" ; mkN "oceanologia" ; } ; --*
lin ocelot_N = variants {mkN "cat" ; mkN "ocelote" ; mkN "pardalis" ; } ; --*
lin ocher_1_N = variants {mkN "ocra" ; mkN "ocre" ; mkN "Ocre" ; } ; --*
lin ocher_2_N = mkN "ocre" ; --*
lin ochre_1_N = mkN "ocre" ; --*
lin ochre_2_N = variants {mkN "ocra" ; mkN "ocre" ; mkN "Ocre" ; } ; --*
lin oclock_Adv = mkAdv "horas" ; --*
lin octagonal_A = mkA "octogonal" ; --*
lin octagon_N = variants {mkN "octágono" ; mkN "Octogono" ; mkN "octógono" ; } ; --*
lin octahedron_N = mkN "octaedro" ; --*
lin octal_A = mkA "octal" ; --*
lin octane_N = mkN "octano" ; --*
lin octangular_A = mkA "octogonal" ; --*
lin octant_N = mkN "oitante" ; --*
lin octave_2_N = variants {mkN "octave" ; mkN "oitava" ; } ; --*
lin octet_1_N = variants {mkN "from" ; mkN "oito" ; mkN "Oito" ; } ; --*
lin octet_4_N = mkN "octeto" ; --*
lin octette_3_N = mkN "octeto" ; --*
lin octopus_1_N = variants {mkN "polvo" ; mkN "pop" ; } ; --*
lin octopus_2_N = mkN "polvo" ; --*
lin oct_PN = variants {mkPN "outubro" ; mkPN "Outubro" ; } ; --*
lin ocular_1_A = variants {mkA "ocular" ; mkA "óptico" ; } ; --*
lin ocular_2_A = variants {mkA "da" ; mkA "ocular" ; mkA "visual" ; } ; --*
lin ocular_3_A = mkA "visual" ; --*
lin oculist_1_N = variants {mkN "oculista" ; mkN "optômetro" ; } ; --*
lin oculist_2_N = variants {mkN "doctor" ; mkN "oculista" ; mkN "oftalmologista" ; } ; --*
lin oculomotor_N = variants {mkN "cranial" ; mkN "nerve" ; mkN "oculomotor" ; mkN "oculomotorius" ; } ; --*
lin odalisque_N = mkN "odalisca" ; --*
lin odd_1_A = mkA "ímpar" ; --*
lin odd_3_A = mkA "Ímpar" ; --*
lin odd_4_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin odd_6_A = variants {mkA "over" ; mkA "restante" ; } ; --*
lin oddity_3_N = variants {mkN "curiosidade" ; mkN "raridade" ; } ; --*
lin oddment_1_N = variants {mkN "resto" ; mkN "sobra" ; } ; --*
lin oddment_2_N = variants {mkN "curiosidade" ; mkN "raridade" ; } ; --*
lin odds_1_N = variants {mkN "chance" ; mkN "chances" ; } ; --*
lin ode_N = mkN "ode" ; --*
lin odessa_1_PN = mkPN "Odessa" ; --*
lin odessa_2_PN = mkPN "Odessa" ; --*
lin odious_A = variants {mkA "abominável" ; mkA "detestável" ; mkA "Detestável" ; mkA "execrável" ; mkA "odioso" ; } ; --*
lin odium_2_N = variants {mkN "abominação" ; mkN "asco" ; mkN "aversão" ; mkN "detestação" ; mkN "execração" ; mkN "horror" ; mkN "ódio" ; mkN "repugnância" ; mkN "repulsa" ; mkN "repulsão" ; } ; --*
lin odometer_1_N = variants {mkN "hodômetro" ; mkN "Odómetro" ; mkN "Odômetro" ; } ; --*
lin odonate_N = mkN "odonatos" ; --*
lin odoriferous_2_A = variants {mkA "cheiroso" ; mkA "perfumado" ; } ; --*
lin odorous_3_A = variants {mkA "cheiroso" ; mkA "perfumado" ; } ; --*
lin odour_1_N = variants {mkN "cheiro" ; mkN "odor" ; mkN "odores" ; mkN "perception" ; mkN "sensation" ; } ; --*
lin odour_2_N = variants {mkN "cheiro" ; mkN "hálito" ; mkN "odor" ; mkN "odores" ; mkN "property" ; } ; --*
lin odourless_A = mkA "inodoro" ; --*
lin odyssey_1_N = mkN "odisseia" ; --*
lin odyssey_2_N = variants {mkN "Odisseia" ; mkN "Odisséia" ; } ; --*
lin oecumenical_1_A = variants {mkA "ecuménico" ; mkA "ecumênico" ; } ; --*
lin oecumenical_2_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin oed_N = variants {mkN "English" ; mkN "Oxford" ; } ; --*
lin oersted_1_N = mkN "Oersted" ; --*
lin oesophagus_N = variants {mkN "esófago" ; mkN "esôfago" ; mkN "garganta" ; mkN "gorja" ; } ; --*
lin oeuvre_N = variants {mkN "of" ; mkN "produção" ; } ; --*
lin of_course_Adv = variants {mkAdv "claro" ; mkAdv "compreensivelmente" ; mkAdv "course" ; mkAdv "decerto" ; mkAdv "naturalmente" ; } ; --*
lin off_1_Adv = mkAdv "embora" ; --*
lin offal_N = mkN "Víscera" ; --*
lin offbeat_A = variants {mkA "indiossincrático" ; mkA "próprio" ; mkA "único" ; } ; --*
lin off_day_N = mkN "dia" ; --*
lin offenbach_PN = variants {mkPN "Jacques" ; mkPN "Offenbach" ; } ; --*
lin offence_1_N = mkN "ofensiva" ; --*
lin offence_4_N = variants {mkN "activity" ; mkN "desfeita" ; mkN "injúria" ; mkN "ofensa" ; } ; --*
lin offence_5_N = variants {mkN "crime" ; mkN "ofensa" ; mkN "offence" ; mkN "offense" ; } ; --*
lin offend_1_V2 = variants {mkV2 (mkV "injuriar") ; mkV2 (mkV "insultar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "ofender") ; } ; --*
lin offend_2_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "infringir") ; mkV2 (mkV "ofender") ; mkV2 (mkV "pecar") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "transgredir") ; mkV2 (mkV "violar") ; } ; --*
lin offend_3_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "escandalizar") ; mkV2 (mkV "horrorizar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "ultrajar") ; } ; --*
lin offend_4_V2 = variants {mkV2 (mkV "magoar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "provocar") ; } ; --*
lin offenderFem_N = mkN "culpado" ; --*
lin offenderMasc_N = mkN "culpado" ; --*
lin offensive_2_A = variants {mkA "de" ; mkA "ofensivo" ; } ; --*
lin offensive_3_A = variants {mkA "ofensiva" ; mkA "ofensivo" ; } ; --*
lin offensive_5_A = mkA "ofensivo" ; --*
lin offensive_6_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin offensive_N = mkN "ofensiva" ; --*
lin offer_10_V2 = variants {mkV2 (mkV "oferecer") ; mkV2 (mkV "up") ; } ; --*
lin offer_12_V2 = variants {mkV2 (mkV "oneself") ; mkV2 (mkV "propor") ; mkV2 (mkV "the") ; } ; --*
lin offer_1_N = mkN "oferecimento" ; --*
lin offer_1_V2 = mkV2 (mkV "oferecer") ; --*
lin offer_2_V2 = mkV2 (mkV "oferecer") ; --*
lin offer_3_N = mkN "tentativa" ; --*
lin offer_3_VV = variants {mkVV (mkV "apresentar") ; mkVV (mkV "oferecer") ; mkVV (mkV "voluntariar") ; } ; --*
lin offer_4_V2 = mkV2 (mkV "oferecer") ; --*
lin offer_7_V2 = mkV2 (mkV "oferecer") ; --*
lin offering_2_N = mkN "oferenda" ; --*
lin offering_3_N = mkN "oferecimento" ; --*
lin offhand_1_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin offhanded_1_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin office_1_N = variants {mkN "escritório" ; mkN "office" ; } ; --*
lin office_2_N = variants {mkN "agência" ; mkN "agency" ; mkN "escritório" ; mkN "Governo" ; mkN "instituição" ; } ; --*
lin office_3_N = variants {mkN "função" ; mkN "papel" ; } ; --*
lin office_4_N = variants {mkN "cargo" ; mkN "ofício" ; mkN "poder" ; } ; --*
lin office_5_N = variants {mkN "mediação" ; mkN "staff" ; } ; --*
lin office_7_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin office_boy_N = mkN "boy" ; --*
lin office_holder_2_N = variants {mkN "incumbente" ; mkN "titular" ; } ; --*
lin officer_3_N = variants {mkN "guarda" ; mkN "officer" ; mkN "polícia" ; mkN "policial" ; } ; --*
lin official_1_A = mkA "oficial" ; --*
lin official_3_A = mkA "oficial" ; --*
lin official_4_A = mkA "oficial" ; --*
lin official_5_A = mkA "oficial" ; --*
lin officialdom_N = variants {mkN "burocracia" ; mkN "officials" ; } ; --*
lin officialFem_1_N = variants {mkN "funcionário" ; mkN "servidor" ; } ; --*
lin officialFem_2_N = variants {mkN "árbitro" ; mkN "juiz" ; } ; --*
lin officialMasc_1_N = variants {mkN "funcionário" ; mkN "servidor" ; } ; --*
lin officialMasc_2_N = variants {mkN "árbitro" ; mkN "juiz" ; } ; --*
lin officiate_1_V = mkV "oficiar" ; --*
lin officiate_2_V = variants {mkV "funcionar" ; mkV "oficiar" ; } ; --*
lin off_licence_N = variants {mkN "loja" ; mkN "store" ; } ; --*
lin offset_1_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; mkN "time" ; } ; --*
lin offset_1_V2 = mkV2 (mkV "compensar") ; --*
lin offset_2_N = mkN "contrapeso" ; --*
lin offset_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; } ; --*
lin offset_3_N = mkN "Estolho" ; --*
lin offset_5_N = variants {mkN "offset" ; mkN "printing" ; } ; --*
lin offshore_2_A = mkA "em" ; --*
lin offspring_1_N = variants {mkN "descendência" ; mkN "descendente" ; mkN "filho" ; } ; --*
lin offspring_3_N = variants {mkN "cria" ; mkN "filhote" ; mkN "prole" ; } ; --*
lin off_white_A = mkA "esbranquiçado" ; --*
lin oft_Adv = variants {mkAdv "amiúde" ; mkAdv "com" ; mkAdv "frequentemente" ; mkAdv "freqüentemente" ; mkAdv "muitas" ; mkAdv "vira" ; } ; --*
lin often_1_AdA = variants {mkAdA "amiúde" ; mkAdA "com" ; mkAdA "frequentemente" ; mkAdA "freqüentemente" ; mkAdA "muitas" ; mkAdA "vira" ; } ; --*
lin often_1_AdV = variants {mkAdV "amiúde" ; mkAdV "com" ; mkAdV "frequentemente" ; mkAdV "freqüentemente" ; mkAdV "muitas" ; mkAdV "vira" ; } ; --*
lin oft_times_Adv = variants {mkAdv "amiúde" ; mkAdv "com" ; mkAdv "frequentemente" ; mkAdv "freqüentemente" ; mkAdv "muitas" ; mkAdv "vira" ; } ; --*
lin ogle_V2 = mkV2 (mkV "flertar") ; --*
lin ogle_V = mkV "flertar" ; --*
lin ogre_1_N = variants {mkN "demónio" ; mkN "demônio" ; mkN "diabo" ; mkN "monstro" ; mkN "ogro" ; } ; --*
lin ogre_2_N = variants {mkN "ogre" ; mkN "ogro" ; } ; --*
lin ohio_1_PN = variants {mkPN "Ohio" ; mkPN "State" ; } ; --*
lin ohio_2_PN = variants {mkPN "Ohio" ; mkPN "Rio" ; mkPN "River" ; } ; --*
lin ohm_1_N = variants {mkN "ohm" ; mkN "Ohm" ; } ; --*
lin ohmmeter_N = variants {mkN "Ohmimetro" ; mkN "ohmímetro" ; } ; --*
lin oil_1_N = mkN "óleo" ; --*
lin oil_1_V2 = mkV2 (mkV "azeitar") ; --*
lin oil_2_N = variants {mkN "color" ; mkN "colour" ; mkN "óleo" ; } ; --*
lin oil_2_V2 = variants {mkV2 (mkV "ungir") ; mkV2 (mkV "untar") ; } ; --*
lin oil_3_N = variants {mkN "nafta" ; mkN "oil" ; mkN "óleo" ; mkN "petróleo" ; } ; --*
lin oil_4_N = variants {mkN "oil" ; mkN "óleos" ; } ; --*
lin oiler_2_N = variants {mkN "poço" ; mkN "well" ; } ; --*
lin oiler_3_N = variants {mkN "petroleiro" ; mkN "petroleiros" ; mkN "ship" ; mkN "tanker" ; } ; --*
lin oilfield_N = mkN "campo" ; --*
lin oil_painting_2_N = mkN "painting" ; --*
lin oil_palm_N = mkN "palm" ; --*
lin oil_rig_1_N = variants {mkN "plataforma" ; mkN "rig" ; } ; --*
lin oil_slick_N = mkN "slick" ; --*
lin oil_tanker_N = variants {mkN "petroleiro" ; mkN "petroleiros" ; mkN "ship" ; mkN "tanker" ; } ; --*
lin oil_well_N = variants {mkN "poço" ; mkN "well" ; } ; --*
lin oily_1_A = variants {mkA "gordo" ; mkA "gordurento" ; mkA "gorduroso" ; mkA "oleoso" ; } ; --*
lin oily_3_A = mkA "oleoso" ; --*
lin oily_4_A = mkA "gordo" ; --*
lin ointment_1_N = variants {mkN "pomada" ; mkN "reboco" ; mkN "ungüento" ; } ; --*
lin ointment_2_N = mkN "creme" ; --*
lin okapi_N = variants {mkN "johnstoni" ; mkN "Okapi" ; } ; --*
lin okay_1_A = variants {mkA "bem" ; mkA "bom" ; mkA "right" ; } ; --*
lin okay_Adv = variants {mkAdv "bem" ; mkAdv "right" ; } ; --*
lin okay_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "deferir") ; mkV2 (mkV "sancionar") ; } ; --*
lin oklahoma_city_PN = variants {mkPN "City" ; mkPN "of" ; } ; --*
lin oklahoma_PN = variants {mkPN "Oklahoma" ; mkPN "State" ; } ; --*
lin okra_2_N = variants {mkN "esculentus" ; mkN "plant" ; mkN "quiabeiro" ; mkN "quiabo" ; } ; --*
lin okra_3_N = variants {mkN "quiabeiro" ; mkN "quiabo" ; } ; --*
lin old_1_A = mkA "velho" ; --*
lin old_2_A = variants {mkA "antigo" ; mkA "velho" ; } ; --*
lin old_4_A = mkA "mais" ; --*
lin old_5_A = mkA "antigo" ; --*
lin old_6_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin old_age_N = variants {mkN "age" ; mkN "idade" ; mkN "velhice" ; } ; --*
lin oldenburg_PN = variants {mkPN "Claes" ; mkPN "Oldenburg" ; mkPN "Thure" ; } ; --*
lin old_fashioned_A = variants {mkA "antiquado" ; mkA "defasado" ; mkA "démodé" ; mkA "fora" ; mkA "obsoleto" ; mkA "passado" ; } ; --*
lin oldie_N = variants {mkN "oldie" ; mkN "Oldies" ; } ; --*
lin oldness_1_N = mkN "velhice" ; --*
lin oldster_N = variants {mkN "ager" ; mkN "citizen" ; mkN "person" ; mkN "velho" ; } ; --*
lin old_timer_1_N = variants {mkN "hand" ; mkN "stager" ; mkN "veterano" ; } ; --*
lin old_timer_2_N = variants {mkN "geezer" ; mkN "velho" ; } ; --*
lin oleaginous_2_A = variants {mkA "gordo" ; mkA "gordurento" ; mkA "gorduroso" ; mkA "oleoso" ; } ; --*
lin oleander_N = variants {mkN "bay" ; mkN "oleander" ; mkN "Oleandro" ; } ; --*
lin olfactory_A = mkA "olfatório" ; --*
lin oligarchic_1_A = mkA "oligárquico" ; --*
lin oligarch_N = mkN "oligarca" ; --*
lin oligarchy_N = variants {mkN "oligarquia" ; mkN "Oligarquia" ; } ; --*
lin oligodendrocyte_N = mkN "oligodendrócito" ; --*
lin oligopoly_N = variants {mkN "Oligopolio" ; mkN "oligopólio" ; } ; --*
lin oligosaccharide_N = variants {mkN "oligossacarídeo" ; mkN "Oligossacarídeo" ; } ; --*
lin oliguria_1_N = mkN "oliguria" ; --*
lin oliguria_2_N = mkN "oligúria" ; --*
lin olive_1_N = mkN "azeitona" ; --*
lin olive_1_PN = mkPN "azeitona" ; --*
lin olive_2_N = variants {mkN "europaea" ; mkN "olive" ; mkN "oliveira" ; } ; --*
lin olive_2_PN = variants {mkPN "europaea" ; mkPN "olive" ; mkPN "oliveira" ; } ; --*
lin olive_3_N = mkN "oliveira" ; --*
lin olive_3_PN = mkPN "oliveira" ; --*
lin olive_4_N = variants {mkN "azeitona" ; mkN "oliva" ; } ; --*
lin olive_4_PN = variants {mkPN "azeitona" ; mkPN "oliva" ; } ; --*
lin olive_A = variants {mkA "olivo" ; mkA "verde-azeitona" ; } ; --*
lin olive_tree_N = mkN "tree" ; --*
lin olivine_N = mkN "olivina" ; --*
lin olm_N = variants {mkN "anguinus" ; mkN "Proteus" ; } ; --*
lin olympiad_1_N = variants {mkN "olimpíada" ; mkN "Olimpíada" ; } ; --*
lin olympiad_2_N = variants {mkN "Games" ; mkN "olimpíada" ; mkN "Olimpíadas" ; } ; --*
lin olympian_1_A = mkA "olímpico" ; --*
lin olympian_2_A = mkA "olímpico" ; --*
lin olympian_3_A = mkA "majestoso" ; --*
lin olympian_4_A = mkA "excepcional" ; --*
lin olympic_1_A = mkA "olímpico" ; --*
lin olympic_2_A = mkA "olímpico" ; --*
lin olympics_PN = variants {mkPN "Games" ; mkPN "olimpíada" ; mkPN "Olimpíadas" ; } ; --*
lin omani_A = variants {mkA "omanense" ; mkA "omani" ; mkA "omaniano" ; } ; --*
lin omani_N = mkN "omanense" ; --*
lin oman_PN = variants {mkPN "and" ; mkPN "of" ; mkPN "Oman" ; } ; --*
lin omega_1_N = variants {mkN "omêga" ; mkN "ómega" ; mkN "ômega" ; } ; --*
lin omega_2_N = variants {mkN "omêga" ; mkN "ómega" ; mkN "Ω" ; } ; --*
lin omelet_N = variants {mkN "fritada" ; mkN "omelete" ; } ; --*
lin omelette_N = variants {mkN "fritada" ; mkN "omelete" ; } ; --*
lin omen_N = variants {mkN "adivinhação" ; mkN "agoiro" ; mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; mkN "profecia" ; mkN "prognóstico" ; } ; --*
lin omen_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin omeprazole_N = mkN "Omeprazol" ; --*
lin omicron_N = mkN "ômicron" ; --*
lin ominous_1_A = variants {mkA "ameaçador" ; mkA "ominoso" ; } ; --*
lin ominous_2_A = variants {mkA "agourento" ; mkA "ameaçador" ; } ; --*
lin omission_1_N = mkN "omissão" ; --*
lin omission_4_N = mkN "omissão" ; --*
lin omit_1_V2 = variants {mkV2 (mkV "excetuar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "off") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; } ; --*
lin omit_2_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "escapar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; mkV2 (mkV "preterir") ; } ; --*
lin ommatidium_N = mkN "omatídeo" ; --*
lin omnibus_1_N = mkN "compilação" ; --*
lin omnibus_2_N = variants {mkN "autocarro" ; mkN "machimbombo" ; mkN "microlete" ; mkN "ônibus" ; mkN "otocarro" ; mkN "toca-toca" ; mkN "vehicle" ; } ; --*
lin omnidirectional_A = mkA "omnidirecional" ; --*
lin omnipotence_N = mkN "omnipotência" ; --*
lin omnipotent_A = variants {mkA "omnipotente" ; mkA "onipotente" ; mkA "todo-poderoso" ; } ; --*
lin omnipresent_A = variants {mkA "omnipresente" ; mkA "onipresente" ; mkA "ubíquo" ; } ; --*
lin omniscience_N = variants {mkN "onisciência" ; mkN "Onisciência" ; } ; --*
lin omniscient_A = variants {mkA "omnisciente" ; mkA "onisciente" ; } ; --*
lin omnivore_2_N = mkN "omnívoro" ; --*
lin omsk_PN = mkPN "Omsk" ; --*
lin on_account_of_Prep = variants {mkPrep "causa" ; mkPrep "conta" ; } ; --*
lin onager_1_N = variants {mkN "balista" ; mkN "catapulta" ; mkN "manganela" ; mkN "trabuco" ; } ; --*
lin onager_2_N = variants {mkN "Hemíono" ; mkN "hemionus" ; } ; --*
lin once_1_Adv = variants {mkAdv "one" ; mkAdv "time" ; mkAdv "uma" ; } ; --*
lin once_3_Adv = variants {mkAdv "antigamente" ; mkAdv "em" ; mkAdv "one" ; } ; --*
lin once_in_a_while_Adv = variants {mkAdv "and" ; mkAdv "in" ; mkAdv "ocasionalmente" ; mkAdv "occasion" ; mkAdv "time" ; mkAdv "times" ; } ; --*
lin onchocerciasis_N = variants {mkN "blindness" ; mkN "onchocerquioses" ; } ; --*
lin oncogene_N = variants {mkN "gene" ; mkN "oncogene" ; } ; --*
lin oncological_1_A = mkA "oncológico" ; --*
lin oncologist_N = mkN "oncologista" ; --*
lin oncology_N = variants {mkN "Cancerologia" ; mkN "oncologia" ; mkN "Oncologia" ; } ; --*
lin oncoming_N = variants {mkN "começo" ; mkN "início" ; mkN "investida" ; } ; --*
lin one_eyed_A = mkA "caolho" ; --*
lin oneness_N = mkN "unidade" ; --*
lin onerous_A = variants {mkA "exigente" ; mkA "onerosa" ; mkA "oneroso" ; mkA "pesado" ; } ; --*
lin one_sided_2_A = mkA "unilateral" ; --*
lin one_sided_3_A = variants {mkA "parcial" ; mkA "tendencioso" ; } ; --*
lin one_time_A = mkA "antigo" ; --*
lin ongoing_1_A = variants {mkA "actual" ; mkA "em" ; } ; --*
lin onion_1_N = mkN "cebola" ; --*
lin onion_2_N = variants {mkN "cebola" ; mkN "cepa" ; mkN "plant" ; } ; --*
lin onion_3_N = mkN "cebola" ; --*
lin online_1_A = mkA "conectado" ; --*
lin online_2_A = mkA "on-line" ; --*
lin online_3_A = variants {mkA "em" ; mkA "ligado" ; mkA "online" ; } ; --*
lin only_7_Adv = variants {mkAdv "apenas" ; mkAdv "somente" ; } ; --*
lin only_AdA = variants {mkAdA "apenas" ; mkAdA "exclusivamente" ; mkAdA "exclusive" ; mkAdA "não" ; mkAdA "somente" ; mkAdA "unicamente" ; } ; --*
lin only_Predet = variants {variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; variants {} ; } ; --*
lin on_occasion_Adv = variants {mkAdv "and" ; mkAdv "in" ; mkAdv "ocasionalmente" ; mkAdv "occasion" ; mkAdv "time" ; mkAdv "times" ; } ; --*
lin onomastics_N = variants {mkN "onomástica" ; mkN "Onomástica" ; mkN "onomástico" ; } ; --*
lin onomatomania_N = mkN "onomatomania" ; --*
lin onomatopoeia_N = variants {mkN "onomatopeia" ; mkN "onomatopéia" ; mkN "Onomatopéia" ; } ; --*
lin onomatopoeic_1_A = variants {mkA "onomatopaico" ; mkA "onomatopeico" ; mkA "onomatópico" ; } ; --*
lin onrush_1_N = mkN "ataque" ; --*
lin onset_1_N = variants {mkN "começo" ; mkN "início" ; mkN "investida" ; } ; --*
lin onset_2_N = mkN "ataque" ; --*
lin onslaught_2_N = mkN "ataque" ; --*
lin onslaught_3_N = mkN "barragem" ; --*
lin ontario_1_PN = variants {mkPN "Lago" ; mkPN "Ontario" ; } ; --*
lin ontario_2_PN = variants {mkPN "Ontario" ; mkPN "Ontário" ; } ; --*
lin ontological_A = mkA "ontológico" ; --*
lin ontology_2_N = variants {mkN "ontologia" ; mkN "Ontologia" ; } ; --*
lin onus_N = variants {mkN "carga" ; mkN "fardo" ; mkN "preocupação" ; } ; --*
lin onward_1_Adv = variants {mkAdv "a" ; mkAdv "de" ; mkAdv "doravante" ; mkAdv "para" ; } ; --*
lin onward_2_Adv = variants {mkAdv "a" ; mkAdv "para" ; } ; --*
lin onwards_Adv = variants {mkAdv "a" ; mkAdv "para" ; } ; --*
lin onychophoran_N = variants {mkN "Onychophora" ; mkN "worm" ; } ; --*
lin onyx_N = mkN "ônix" ; --*
lin oocyte_N = variants {mkN "oócito" ; mkN "ovócito" ; } ; --*
lin oogenesis_N = mkN "ovulogênese" ; --*
lin oolong_N = mkN "oolong" ; --*
lin oomph_2_N = mkN "dinamismo" ; --*
lin oophorectomy_N = mkN "Ooforectomia" ; --*
lin ooze_1_N = variants {mkN "barro" ; mkN "gosma" ; mkN "lama" ; mkN "lodo" ; mkN "olho" ; } ; --*
lin ooze_1_V2 = variants {mkV2 (mkV "escoar") ; mkV2 (mkV "segregar") ; } ; --*
lin ooze_1_V = variants {mkV "escoar" ; mkV "segregar" ; } ; --*
lin ooze_2_V2 = variants {mkV2 (mkV "exsudar") ; mkV2 (mkV "out") ; mkV2 (mkV "transpirar") ; } ; --*
lin opacity_1_N = mkN "opacidade" ; --*
lin opacity_2_N = mkN "opacidade" ; --*
lin opacity_3_N = mkN "opacidade" ; --*
lin opalescence_N = mkN "Iridescência" ; --*
lin opalescent_A = mkA "iridescente" ; --*
lin opal_N = mkN "opala" ; --*
lin opaque_1_A = mkA "opaco" ; --*
lin opaque_2_A = mkA "opaco" ; --*
lin opaqueness_1_N = mkN "opacidade" ; --*
lin opaqueness_2_N = mkN "opacidade" ; --*
lin op_art_N = mkN "art" ; --*
lin opec_PN = variants {mkPN "of" ; mkPN "OPEP" ; } ; --*
lin open_11_V2 = mkV2 (mkV "abrir") ; --*
lin open_13_A = mkA "aberto" ; --*
lin open_16_A = mkA "aberto" ; --*
lin open_1_A = mkA "aberto" ; --*
lin open_1_N = mkN "campos" ; --*
lin open_1_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "up") ; } ; --*
lin open_21_A = mkA "aberto" ; --*
lin open_2_A = mkA "aberto" ; --*
lin open_2_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "up") ; } ; --*
lin open_3_A = mkA "aberto" ; --*
lin open_3_V = variants {mkV "abrir" ; mkV "up" ; } ; --*
lin open_4_A = mkA "aberto" ; --*
lin open_4_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "começar") ; } ; --*
lin open_5_A = mkA "aberto" ; --*
lin open_5_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "desdobrar") ; mkV2 (mkV "out") ; } ; --*
lin open_6_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "up") ; } ; --*
lin open_7_A = mkA "aberto" ; --*
lin open_7_V = variants {mkV "abrir" ; mkV "up" ; } ; --*
lin open_9_V = mkV "abrir" ; --*
lin opener_1_N = mkN "abertura" ; --*
lin opener_2_N = mkN "abridor" ; --*
lin opener_3_N = mkN "navalha" ; --*
lin open_handed_A = variants {mkA "generoso" ; mkA "liberal" ; } ; --*
lin open_hearted_1_A = variants {mkA "benevolente" ; mkA "benévolo" ; mkA "bondoso" ; } ; --*
lin opening_10_N = mkN "abertura" ; --*
lin opening_12_N = variants {mkN "abertura" ; mkN "opening" ; } ; --*
lin opening_13_N = variants {mkN "iniciativa" ; mkN "move" ; mkN "step" ; } ; --*
lin opening_1_N = mkN "fenda" ; --*
lin opening_2_N = mkN "inauguração" ; --*
lin opening_3_N = mkN "abertura" ; --*
lin opening_6_N = mkN "chance" ; --*
lin opening_7_N = mkN "abertura" ; --*
lin opening_8_N = variants {mkN "action" ; mkN "possibilidade" ; } ; --*
lin opening_9_N = mkN "orifício" ; --*
lin open_up_1_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "up") ; } ; --*
lin open_up_2_V = variants {mkV "abrir" ; mkV "up" ; } ; --*
lin open_up_3_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "up") ; } ; --*
lin open_up_5_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "up") ; } ; --*
lin open_up_6_V = variants {mkV "abrir" ; mkV "up" ; } ; --*
lin opera_1_N = mkN "ópera" ; --*
lin opera_2_N = mkN "Opera" ; --*
lin opera_3_N = variants {mkN "Casas" ; mkN "house" ; mkN "ópera" ; } ; --*
lin operable_1_A = mkA "operável" ; --*
lin operable_2_A = variants {mkA "funcional" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin opera_hat_N = variants {mkN "cartola" ; mkN "hat" ; } ; --*
lin opera_house_N = variants {mkN "Casas" ; mkN "house" ; mkN "ópera" ; } ; --*
lin operand_N = mkN "operando" ; --*
lin operate_1_V2 = mkV2 (mkV "operar") ; --*
lin operate_2_V = variants {mkV "funcionar" ; mkV "operar" ; } ; --*
lin operate_3_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "operar") ; } ; --*
lin operate_5_V = variants {mkV "engajar" ; mkV "engatar" ; } ; --*
lin operate_6_V = variants {mkV "on" ; mkV "operar" ; } ; --*
lin operating_theatre_N = variants {mkN "room" ; mkN "sala" ; mkN "theater" ; mkN "theatre" ; } ; --*
lin operation_10_N = variants {mkN "operação" ; mkN "operation" ; mkN "process" ; } ; --*
lin operation_1_N = mkN "funcionamento" ; --*
lin operation_2_N = mkN "operação" ; --*
lin operation_3_N = mkN "operação" ; --*
lin operation_4_N = mkN "operação" ; --*
lin operation_5_N = variants {mkN "operação" ; mkN "operation" ; } ; --*
lin operation_6_N = variants {mkN "cirurgia" ; mkN "operação" ; mkN "operation" ; mkN "procedure" ; mkN "process" ; } ; --*
lin operation_7_N = variants {mkN "operação" ; mkN "procedimento" ; } ; --*
lin operation_8_N = variants {mkN "funcionamento" ; mkN "operação" ; } ; --*
lin operational_1_A = mkA "operacional" ; --*
lin operational_2_A = variants {mkA "funcional" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin operational_4_A = variants {mkA "operation" ; mkA "operativo" ; } ; --*
lin operative_1_N = variants {mkN "agent" ; mkN "espião" ; mkN "officer" ; } ; --*
lin operative_2_A = mkA "cirúrgico" ; --*
lin operative_2_N = variants {mkN "detective" ; mkN "detetive" ; mkN "eye" ; mkN "investigator" ; } ; --*
lin operative_3_A = mkA "operativa" ; --*
lin operative_4_A = mkA "funcional" ; --*
lin operator_1_N = mkN "operador" ; --*
lin operator_2_N = variants {mkN "manipulador" ; mkN "operador" ; } ; --*
lin operator_4_N = variants {mkN "dealer" ; mkN "michê" ; } ; --*
lin operetta_N = variants {mkN "opera" ; mkN "opereta" ; } ; --*
lin operon_N = mkN "Operão" ; --*
lin ophthalmia_N = mkN "oftalmia" ; --*
lin ophthalmic_2_A = variants {mkA "ocular" ; mkA "óptico" ; } ; --*
lin ophthalmologist_N = variants {mkN "doctor" ; mkN "oculista" ; mkN "oftalmologista" ; } ; --*
lin ophthalmology_N = variants {mkN "oftalmologia" ; mkN "Oftalmologia" ; } ; --*
lin ophthalmoscope_N = mkN "Oftalmoscópio" ; --*
lin opiate_N = mkN "Opioides" ; --*
lin opine_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "opinar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin opine_1_VS = variants {mkVS (mkV "off") ; mkVS (mkV "opinar") ; mkVS (mkV "out") ; mkVS (mkV "up") ; } ; --*
lin opine_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "esperar") ; mkVS (mkV "pensar") ; mkVS (mkV "supor") ; } ; --*
lin opinion_1_N = variants {mkN "ideia" ; mkN "idéia" ; mkN "opinião" ; mkN "pensamento" ; mkN "perspicácia" ; } ; --*
lin opinion_2_N = mkN "opinião" ; --*
lin opinion_3_N = variants {mkN "opinião" ; mkN "opinion" ; mkN "populi" ; } ; --*
lin opinion_4_N = variants {mkN "juízo" ; mkN "opinion" ; } ; --*
lin opinion_5_N = variants {mkN "ditame" ; mkN "julgamento" ; mkN "sentença" ; } ; --*
lin opinion_6_N = variants {mkN "crença" ; mkN "ideia" ; mkN "idéia" ; mkN "impressão" ; mkN "opinião" ; } ; --*
lin opium_N = variants {mkN "Opio" ; mkN "ópio" ; } ; --*
lin opossum_2_N = variants {mkN "cuíca" ; mkN "didelfo" ; mkN "Didelphidae" ; mkN "Didelphimorphia" ; mkN "gambá" ; mkN "saragüéia" ; mkN "sarigueia" ; mkN "seringüê" ; mkN "timbu" ; } ; --*
lin opponent_A = variants {mkA "contrário" ; mkA "oposto" ; } ; --*
lin opponentFem_1_N = variants {mkN "adversário" ; mkN "oponente" ; mkN "opositor" ; } ; --*
lin opponentFem_2_N = variants {mkN "adversário" ; mkN "antagonista" ; mkN "inimigo" ; mkN "opositor" ; } ; --*
lin opponentMasc_1_N = variants {mkN "adversário" ; mkN "oponente" ; mkN "opositor" ; } ; --*
lin opponentMasc_2_N = variants {mkN "adversário" ; mkN "antagonista" ; mkN "inimigo" ; mkN "opositor" ; } ; --*
lin opportune_A = variants {mkA "cómodo" ; mkA "oportuno" ; mkA "propício" ; } ; --*
lin opportunism_N = mkN "oportunismo" ; --*
lin opportunistFem_N = mkN "oportunista" ; --*
lin opportunistMasc_N = mkN "oportunista" ; --*
lin opportunity_N = variants {mkN "chance" ; mkN "oportunidade" ; } ; --*
lin oppose_1_V2 = variants {mkV2 (mkV "opor") ; mkV2 (mkV "opor-se") ; } ; --*
lin oppose_2_V = variants {mkV "back" ; mkV "brigar" ; mkV "down" ; mkV "lutar" ; mkV "opor" ; } ; --*
lin oppose_3_V2 = variants {mkV2 (mkV "contrabalancear") ; mkV2 (mkV "contrapesar") ; } ; --*
lin oppose_3_V = variants {mkV "contrabalancear" ; mkV "contrapesar" ; } ; --*
lin oppose_6_V2 = mkV2 (mkV "opor") ; --*
lin opposed_A = variants {mkA "contraposto" ; mkA "contrário" ; mkA "oposto" ; } ; --*
lin opposite_1_A = mkA "oposto" ; --*
lin opposite_1_N = variants {mkN "antónimo" ; mkN "antônimo" ; mkN "word" ; } ; --*
lin opposite_2_N = variants {mkN "contrário" ; mkN "oposto" ; mkN "reverso" ; } ; --*
lin opposite_3_N = variants {mkN "adversário" ; mkN "oponente" ; mkN "opositor" ; } ; --*
lin opposite_4_N = mkN "inversão" ; --*
lin opposition_1_N = mkN "oposição" ; --*
lin opposition_2_N = mkN "oposição" ; --*
lin opposition_3_N = variants {mkN "confronto" ; mkN "oposição" ; } ; --*
lin opposition_4_N = variants {mkN "adversário" ; mkN "oponente" ; mkN "opositor" ; } ; --*
lin opposition_6_N = mkN "oposição" ; --*
lin opposition_7_N = mkN "inimigo" ; --*
lin opposition_8_N = mkN "oposição" ; --*
lin oppress_1_V2 = mkV2 (mkV "oprimir") ; --*
lin oppress_2_V2 = mkV2 (mkV "acossar") ; --*
lin oppression_1_N = mkN "opressão" ; --*
lin oppression_2_N = mkN "opressão" ; --*
lin oppression_3_N = mkN "opressão" ; --*
lin oppressive_2_A = variants {mkA "opressivo" ; mkA "opressor" ; mkA "tirano" ; } ; --*
lin oppressor_N = mkN "opressor" ; --*
lin opprobrious_1_A = mkA "injurioso" ; --*
lin opprobrious_2_A = variants {mkA "desgraçado" ; mkA "ignominioso" ; mkA "torpe" ; } ; --*
lin opprobrium_1_N = mkN "xingamento" ; --*
lin opprobrium_2_N = mkN "infâmia" ; --*
lin oppugn_V2 = variants {mkV2 (mkV "into") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "qüestionar") ; } ; --*
lin opsin_N = mkN "opsina" ; --*
lin optative_2_A = mkA "optativo" ; --*
lin opt_for_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "optar") ; mkV2 (mkV "preferir") ; } ; --*
lin optic_1_A = variants {mkA "ocular" ; mkA "óptico" ; } ; --*
lin optic_2_A = variants {mkA "da" ; mkA "ocular" ; mkA "visual" ; } ; --*
lin optical_1_A = variants {mkA "óptico" ; mkA "ótico" ; } ; --*
lin optical_2_A = variants {mkA "da" ; mkA "ocular" ; mkA "visual" ; } ; --*
lin optical_3_A = variants {mkA "ocular" ; mkA "óptico" ; } ; --*
lin optician_N = variants {mkN "maker" ; mkN "oculista" ; } ; --*
lin optic_N = variants {mkN "óculo" ; mkN "olho" ; } ; --*
lin optics_1_N = variants {mkN "óptica" ; mkN "Óptica" ; } ; --*
lin optimal_A = variants {mkA "óptimo" ; mkA "ótimo" ; } ; --*
lin optimism_1_N = variants {mkN "optimismo" ; mkN "otimismo" ; } ; --*
lin optimism_2_N = mkN "otimismo" ; --*
lin optimistFem_N = variants {mkN "optimista" ; mkN "otimista" ; } ; --*
lin optimistic_1_A = variants {mkA "optimista" ; mkA "otimista" ; } ; --*
lin optimistic_2_A = variants {mkA "afirmativo" ; mkA "otimista" ; } ; --*
lin optimistMasc_N = variants {mkN "optimista" ; mkN "otimista" ; } ; --*
lin optimization_1_N = variants {mkN "optimização" ; mkN "otimização" ; } ; --*
lin optimum_A = variants {mkA "óptimo" ; mkA "ótimo" ; } ; --*
lin option_1_N = mkN "Mercado" ; --*
lin option_2_N = variants {mkN "alternativa" ; mkN "eleição" ; mkN "escolha" ; mkN "intercorrência" ; mkN "opção" ; } ; --*
lin option_3_N = variants {mkN "escolha" ; mkN "seleção" ; mkN "selecção" ; } ; --*
lin optional_A = mkA "opcional" ; --*
lin optometrist_N = variants {mkN "oculista" ; mkN "optômetro" ; } ; --*
lin optometry_N = variants {mkN "optometria" ; mkN "Optometria" ; } ; --*
lin opt_VV = variants {mkVV (mkV "escolher") ; mkVV (mkV "optar") ; mkVV (mkV "preferir") ; } ; --*
lin opulence_N = variants {mkN "luxo" ; mkN "opulência" ; mkN "sumptuosidade" ; mkN "suntuosidade" ; } ; --*
lin opulent_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin opus_N = variants {mkN "Composição" ; mkN "composition" ; mkN "of" ; } ; --*
lin orach_1_N = mkN "atríplex" ; --*
lin oracle_1_N = variants {mkN "profeta" ; mkN "vidente" ; } ; --*
lin oracle_2_N = mkN "oráculo" ; --*
lin oracle_3_N = mkN "oráculo" ; --*
lin oracular_1_A = mkA "oracular" ; --*
lin oracular_3_A = mkA "enigmático" ; --*
lin oral_1_A = variants {mkA "bucal" ; mkA "oral" ; } ; --*
lin oral_3_A = mkA "oral" ; --*
lin orange_1_N = mkN "laranja" ; --*
lin orange_2_N = variants {mkN "alaranjado" ; mkN "cor-de-laranja" ; mkN "laranja" ; } ; --*
lin orange_3_N = variants {mkN "laranjeira" ; mkN "tree" ; } ; --*
lin orange_4_N = mkN "laranja" ; --*
lin orange_5_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin orange_A = variants {mkA "alaranjado" ; mkA "cor-de-laranja" ; mkA "laranja" ; } ; --*
lin orangeade_N = mkN "laranjada" ; --*
lin orangery_N = mkN "orangerie" ; --*
lin orangutan_1_N = variants {mkN "orangotango" ; mkN "pygmaeus" ; } ; --*
lin orate_V = variants {mkV "orar" ; mkV "professar" ; } ; --*
lin oratorFem_N = variants {mkN "discursante" ; mkN "interveniente" ; mkN "orador" ; mkN "speaker" ; } ; --*
lin oratorical_A = mkA "oratório" ; --*
lin oratorio_N = variants {mkN "oratório" ; mkN "Oratório" ; mkN "Oratórios" ; } ; --*
lin oratorMasc_N = variants {mkN "discursante" ; mkN "interveniente" ; mkN "orador" ; mkN "speaker" ; } ; --*
lin oratory_N = mkN "oratória" ; --*
lin orb_1_N = variants {mkN "bolbo" ; mkN "globo" ; } ; --*
lin orb_2_N = variants {mkN "bola" ; mkN "esfera" ; mkN "orbe" ; } ; --*
lin orbit_1_N = variants {mkN "orbit" ; mkN "órbita" ; } ; --*
lin orbit_2_N = variants {mkN "domínio" ; mkN "esfera" ; } ; --*
lin orbit_3_N = variants {mkN "alcance" ; mkN "áreas" ; mkN "escopo" ; } ; --*
lin orbit_4_N = variants {mkN "orbit" ; mkN "órbita" ; } ; --*
lin orbit_5_N = variants {mkN "cavity" ; mkN "orbit" ; mkN "órbita" ; mkN "socket" ; } ; --*
lin orbital_1_A = mkA "orbital" ; --*
lin orbital_2_A = mkA "orbital" ; --*
lin orbit_around_V2 = mkV2 (mkV "orbitar") ; --*
lin orbit_V2 = mkV2 (mkV "orbitar") ; --*
lin orchard_N = variants {mkN "horta" ; mkN "pomar" ; mkN "Pomar" ; mkN "vergel" ; } ; --*
lin orchestra_1_N = variants {mkN "orquestra" ; mkN "Orquestras" ; } ; --*
lin orchestra_2_N = mkN "orquestra" ; --*
lin orchestrate_1_V2 = mkV2 (mkV "orquestrar") ; --*
lin orchestrate_2_V2 = variants {mkV2 (mkV "engenhar") ; mkV2 (mkV "organizar") ; mkV2 (mkV "orquestrar") ; } ; --*
lin orchestration_1_N = mkN "orquestração" ; --*
lin orchid_N = variants {mkN "orquídea" ; mkN "plant" ; } ; --*
lin orchis_1_N = mkN "orquídea" ; --*
lin orchis_2_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin orchitis_N = mkN "orquite" ; --*
lin ordain_1_V2 = variants {mkV2 (mkV "decretar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "promulgar") ; } ; --*
lin ordain_2_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "sagrar") ; } ; --*
lin ordeal_1_N = variants {mkN "Calvário" ; mkN "ordália" ; mkN "ordálio" ; } ; --*
lin ordeal_2_N = variants {mkN "by" ; mkN "Ordália" ; } ; --*
lin order_10_N = variants {mkN "Ordem" ; mkN "Order" ; } ; --*
lin order_12_N = mkN "ordem" ; --*
lin order_13_N = mkN "ordem" ; --*
lin order_15_N = mkN "ordenação" ; --*
lin order_1_N = mkN "ordem" ; --*
lin order_1_V2V = variants {mkV2V (mkV "impetrar") ; mkV2V (mkV "intimar") ; mkV2V (mkV "mandar") ; mkV2V (mkV "ordenar") ; } ; --*
lin order_2_N = variants {mkN "of" ; mkN "ordem" ; } ; --*
lin order_2_V2 = variants {mkV2 (mkV "encomendar") ; mkV2 (mkV "pedir") ; } ; --*
lin order_3_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "ditar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "prescrever") ; mkV2 (mkV "receitar") ; } ; --*
lin order_4_N = mkN "ordem" ; --*
lin order_4_V2 = variants {mkV2 (mkV "regulamentar") ; mkV2 (mkV "regularizar") ; } ; --*
lin order_5_N = mkN "ordem" ; --*
lin order_5_V2 = mkV2 (mkV "ordenar") ; --*
lin order_6_N = variants {mkN "acta" ; mkN "decreto" ; } ; --*
lin order_6_V2 = mkV2 (mkV "ordenar") ; --*
lin order_7_N = variants {mkN "order" ; mkN "pedido" ; } ; --*
lin order_7_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "sagrar") ; } ; --*
lin order_8_N = variants {mkN "club" ; mkN "clube" ; mkN "guilda" ; mkN "ordem" ; mkN "sociedade" ; } ; --*
lin order_8_V2 = variants {mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin order_9_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "ranquiar") ; } ; --*
lin ordering_1_N = mkN "ordem" ; --*
lin ordering_2_N = mkN "ordenação" ; --*
lin orderliness_2_N = mkN "ordem" ; --*
lin orderly_2_A = variants {mkA "asseado" ; mkA "bem" ; mkA "em" ; mkA "limpado" ; } ; --*
lin ordinal_1_A = mkA "ordinal" ; --*
lin ordinal_2_A = mkA "ordinal" ; --*
lin ordinal_N = variants {mkN "number" ; mkN "número" ; } ; --*
lin ordinance_1_N = mkN "ordenamento" ; --*
lin ordinance_3_N = mkN "Ordenação" ; --*
lin ordinary_1_A = variants {mkA "comum" ; mkA "costumeiro" ; mkA "normal" ; mkA "ordinário" ; mkA "rotineiro" ; } ; --*
lin ordinary_5_N = mkN "Peças" ; --*
lin ordinate_N = mkN "ordenada" ; --*
lin ordination_2_N = mkN "ordem" ; --*
lin ordination_3_N = mkN "Ordenação" ; --*
lin ordnance_1_N = variants {mkN "munição" ; mkN "store" ; } ; --*
lin ordnance_2_N = variants {mkN "arma" ; mkN "artilharia" ; mkN "weapon" ; } ; --*
lin ordure_N = variants {mkN "fezes" ; mkN "Fezes" ; mkN "matter" ; mkN "merda" ; } ; --*
lin ore_1_N = variants {mkN "minério" ; mkN "minérios" ; } ; --*
lin oregano_1_N = variants {mkN "marjoram" ; mkN "Oregano" ; mkN "orégano" ; mkN "sweet" ; mkN "vulgare" ; } ; --*
lin oregano_2_N = mkN "manjerona" ; --*
lin oregon_PN = variants {mkPN "Oregão" ; mkPN "Oregon" ; mkPN "State" ; } ; --*
lin organ_1_N = mkN "órgão" ; --*
lin organ_2_N = mkN "órgão" ; --*
lin organ_3_N = variants {mkN "organ" ; mkN "órgão" ; } ; --*
lin organ_4_N = variants {mkN "órgão" ; mkN "Órgão" ; mkN "Órgãos" ; } ; --*
lin organ_5_N = variants {mkN "organ" ; mkN "órgão" ; } ; --*
lin organ_6_N = variants {mkN "organ" ; mkN "órgão" ; mkN "Órgão" ; } ; --*
lin organelle_N = variants {mkN "organ" ; mkN "organelle" ; mkN "Organelos" ; } ; --*
lin organic_1_A = mkA "orgânico" ; --*
lin organic_2_A = mkA "orgânico" ; --*
lin organic_3_A = mkA "orgânico" ; --*
lin organic_4_A = mkA "orgânico" ; --*
lin organic_5_A = mkA "orgânico" ; --*
lin organic_6_A = variants {mkA "constitucional" ; mkA "constituinte" ; mkA "orgânico" ; } ; --*
lin organism_1_N = variants {mkN "criatura" ; mkN "organismo" ; mkN "ser" ; } ; --*
lin organism_2_N = variants {mkN "organismo" ; mkN "organismos" ; } ; --*
lin organist_N = variants {mkN "organista" ; mkN "Organista" ; mkN "Organistas" ; } ; --*
lin organization_1_N = mkN "organização" ; --*
lin organization_2_N = variants {mkN "estrutura" ; mkN "ordem" ; mkN "organização" ; mkN "sistema" ; } ; --*
lin organization_3_N = variants {mkN "administração" ; mkN "body" ; mkN "organização" ; } ; --*
lin organization_4_N = mkN "organização" ; --*
lin organization_5_N = mkN "organização" ; --*
lin organization_6_N = mkN "organização" ; --*
lin organization_7_N = variants {mkN "constituição" ; mkN "estabelecimento" ; mkN "organização" ; } ; --*
lin organizational_1_A = mkA "organizacional" ; --*
lin organize_1_V2 = mkV2 (mkV "organizar") ; --*
lin organize_2_V2 = mkV2 (mkV "organizar") ; --*
lin organize_2_V2V = mkV2V (mkV "organizar") ; --*
lin organize_3_V2 = variants {mkV2 (mkV "engenhar") ; mkV2 (mkV "organizar") ; mkV2 (mkV "orquestrar") ; } ; --*
lin organize_4_V2 = variants {mkV2 (mkV "coordenar") ; mkV2 (mkV "organizar") ; } ; --*
lin organize_5_V2 = variants {mkV2 (mkV "confabular") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin organize_6_V2V = mkV2V (mkV "organizar") ; --*
lin organizer_1_N = mkN "organizador" ; --*
lin organizer_3_N = variants {mkN "agenda" ; mkN "digital" ; mkN "organiser" ; mkN "organizer" ; mkN "PDA" ; } ; --*
lin organophosphate_N = variants {mkN "Organofosfatos" ; mkN "organofosforados" ; } ; --*
lin organza_N = mkN "Organza" ; --*
lin orgasm_N = variants {mkN "climax" ; mkN "orgasmo" ; } ; --*
lin orgiastic_1_A = mkA "orgíaco" ; --*
lin orgiastic_2_A = mkA "orgíaco" ; --*
lin orgy_1_N = mkN "bacanal" ; --*
lin orgy_3_N = variants {mkN "deboche" ; mkN "dissipação" ; mkN "farra" ; mkN "orgia" ; mkN "revelry" ; mkN "viveremfarra" ; } ; --*
lin oriel_N = variants {mkN "olhador" ; mkN "window" ; } ; --*
lin orient_1_N = variants {mkN "Do" ; mkN "levante" ; mkN "nascente" ; mkN "oriente" ; mkN "Oriente" ; } ; --*
lin orient_3_V2 = mkV2 (mkV "orientar") ; --*
lin orient_4_V2 = mkV2 (mkV "orientar") ; --*
lin orient_5_V2 = mkV2 (mkV "orientar") ; --*
lin oriental_A = mkA "oriental" ; --*
lin orientalism_1_N = variants {mkN "Orientalismo" ; mkN "Studies" ; } ; --*
lin orientation_1_N = mkN "orientação" ; --*
lin orientation_2_N = mkN "orientação" ; --*
lin orientation_3_N = variants {mkN "orientação" ; mkN "Orientação" ; } ; --*
lin orientation_4_N = mkN "preferência" ; --*
lin orifice_N = mkN "orifício" ; --*
lin origami_N = variants {mkN "origami" ; mkN "Origami" ; } ; --*
lin origin_1_N = variants {mkN "fonte" ; mkN "manancial" ; mkN "nascente" ; mkN "procedência" ; mkN "prosedensia" ; mkN "raiz" ; } ; --*
lin origin_2_N = variants {mkN "extração" ; mkN "origem" ; } ; --*
lin origin_3_N = variants {mkN "começo" ; mkN "gênese" ; mkN "iniciação" ; mkN "origem" ; } ; --*
lin origin_4_N = variants {mkN "origem" ; mkN "Origem" ; } ; --*
lin origin_6_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin original_1_A = mkA "original" ; --*
lin original_2_N = variants {mkN "arquetipo" ; mkN "Arquetipo" ; mkN "arquétipo" ; } ; --*
lin original_3_A = mkA "original" ; --*
lin originality_1_N = mkN "originalidade" ; --*
lin originality_2_N = mkN "originalidade" ; --*
lin originate_1_V = variants {mkV "originar-se" ; mkV "provir" ; mkV "surgir" ; mkV "up" ; } ; --*
lin originate_2_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "originar") ; mkV2 (mkV "provir") ; mkV2 (mkV "tomar") ; } ; --*
lin orison_N = variants {mkN "oração" ; mkN "petição" ; mkN "reza" ; } ; --*
lin orleans_2_PN = variants {mkPN "of" ; mkPN "Orleães" ; } ; --*
lin ornament_1_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "embelezar") ; mkV2 (mkV "empetecar") ; mkV2 (mkV "enfeitar") ; mkV2 (mkV "ornamentar") ; mkV2 (mkV "ornar") ; } ; --*
lin ornament_2_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "decorar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ornamentar") ; } ; --*
lin ornamental_A = variants {mkA "cosmético" ; mkA "decorativo" ; mkA "ornamental" ; } ; --*
lin ornamental_N = variants {mkN "Planta" ; mkN "Plantas" ; } ; --*
lin ornamentation_1_N = mkN "ornamentação" ; --*
lin ornamentation_2_N = variants {mkN "adorno" ; mkN "decoração" ; mkN "ornamento" ; mkN "ornato" ; } ; --*
lin ornamentation_3_N = variants {mkN "decoração" ; mkN "ornamento" ; } ; --*
lin ornament_N = variants {mkN "adorno" ; mkN "decoração" ; mkN "ornamento" ; mkN "ornato" ; } ; --*
lin ornateness_1_N = mkN "grandiosidade" ; --*
lin ornateness_2_N = mkN "elaboração" ; --*
lin ornery_A = mkA "resmungão" ; --*
lin ornithine_N = mkN "ornitina" ; --*
lin ornithology_N = variants {mkN "ornitologia" ; mkN "Ornitologia" ; } ; --*
lin ornithopod_N = variants {mkN "dinosaur" ; mkN "ornitópodes" ; } ; --*
lin orogeny_N = variants {mkN "orogénese" ; mkN "Orogénese" ; mkN "Orogênese" ; mkN "Orogenias" ; } ; --*
lin orology_N = mkN "orografia" ; --*
lin oropharynx_N = variants {mkN "bucofaringe" ; mkN "orofaringe" ; mkN "Orofaringe" ; } ; --*
lin orotund_1_A = mkA "bombástico" ; --*
lin orotund_2_A = mkA "rotundo" ; --*
lin orphan_1_N = variants {mkN "Orfandade" ; mkN "órfão" ; } ; --*
lin orphanage_2_N = variants {mkN "asylum" ; mkN "Orfanato" ; } ; --*
lin orpiment_N = mkN "Auripigmento" ; --*
lin orthoclase_N = mkN "ortoclase" ; --*
lin orthodontic_A = mkA "ortodôntico" ; --*
lin orthodontics_1_N = variants {mkN "orthopaedics" ; mkN "orthopedics" ; mkN "ortodontia" ; } ; --*
lin orthodontist_N = mkN "ortodontista" ; --*
lin orthodox_2_A = mkA "ortodoxo" ; --*
lin orthodoxy_1_N = mkN "ortodoxia" ; --*
lin orthoepy_1_N = variants {mkN "prolação" ; mkN "Pronuncia" ; mkN "pronúncia" ; mkN "pronunciação" ; } ; --*
lin orthoepy_2_N = variants {mkN "ortoepia" ; mkN "ortoépia" ; } ; --*
lin orthogonal_3_A = variants {mkA "ortogonal" ; mkA "perpendicular" ; mkA "retangular" ; } ; --*
lin orthographic_A = mkA "ortográfico" ; --*
lin orthography_N = variants {mkN "Ortografia" ; mkN "system" ; } ; --*
lin orthopaedics_1_N = mkN "ortopedia" ; --*
lin orthopedist_1_N = mkN "ortopedista" ; --*
lin orthostatic_A = mkA "ortostático" ; --*
lin orzo_N = variants {mkN "orzo" ; mkN "Orzo" ; } ; --*
lin os_2_N = variants {mkN "number" ; mkN "Osmio" ; mkN "ósmio" ; } ; --*
lin os_3_N = variants {mkN "sistema" ; mkN "system" ; } ; --*
lin os_5_N = mkN "osso" ; --*
lin osaka_PN = mkPN "Osaka" ; --*
lin oscar_N = variants {mkN "Award" ; mkN "Oscar" ; } ; --*
lin oscar_PN = variants {mkPN "Award" ; mkPN "Oscar" ; } ; --*
lin oscillate_1_V = mkV "vacilar" ; --*
lin oscillate_2_V = variants {mkV "fremir" ; mkV "vibrar" ; } ; --*
lin oscillation_1_N = mkN "oscilação" ; --*
lin oscillation_2_N = variants {mkN "oscilação" ; mkN "vibração" ; mkN "Vibração" ; mkN "vibrações" ; } ; --*
lin oscillator_N = variants {mkN "oscilação" ; mkN "oscilador" ; } ; --*
lin oscilloscope_N = variants {mkN "oscilloscope" ; mkN "oscilógrafo" ; mkN "osciloscópio" ; } ; --*
lin oscitancy_2_N = mkN "bocejo" ; --*
lin osculation_2_N = variants {mkN "beijo" ; mkN "ósculo" ; } ; --*
lin oslo_PN = variants {mkPN "of" ; mkPN "Oslo" ; } ; --*
lin osmiridium_N = mkN "osmirídio" ; --*
lin osmium_N = variants {mkN "number" ; mkN "Osmio" ; mkN "ósmio" ; } ; --*
lin osmosis_N = mkN "osmose" ; --*
lin osmotic_1_A = mkA "osmótico" ; --*
lin osprey_N = variants {mkN "águia-pesqueira" ; mkN "eagle" ; mkN "haliaetus" ; mkN "hawk" ; } ; --*
lin osseous_A = mkA "ósseo" ; --*
lin ossicle_N = mkN "ossículo" ; --*
lin ossify_1_V = mkV "ossificar" ; --*
lin ossify_2_V = variants {mkV "enrijecer" ; mkV "rigidificar" ; } ; --*
lin ossify_3_V2 = mkV2 (mkV "ossificar") ; --*
lin ossuary_N = variants {mkN "ossário" ; mkN "ossuário" ; } ; --*
lin osteal_2_A = mkA "ósseo" ; --*
lin osteitis_N = mkN "osteíte" ; --*
lin ostensible_1_A = mkA "aparente" ; --*
lin ostensible_2_A = mkA "aparente" ; --*
lin ostensive_2_A = mkA "aparente" ; --*
lin ostentation_2_N = mkN "fausto" ; --*
lin ostentatious_1_A = mkA "presumido" ; --*
lin ostentatious_2_A = mkA "presumido" ; --*
lin osteoarthritis_N = variants {mkN "arthritis" ; mkN "joint" ; mkN "Osteoartrite" ; } ; --*
lin osteoblast_N = variants {mkN "cell" ; mkN "osteoblasto" ; } ; --*
lin osteoblastoma_N = mkN "osteoblastoma" ; --*
lin osteoclast_N = mkN "osteoclasto" ; --*
lin osteocyte_N = mkN "osteócito" ; --*
lin osteomalacia_N = mkN "osteomalacia" ; --*
lin osteoma_N = mkN "osteoma" ; --*
lin osteomyelitis_N = mkN "osteomielite" ; --*
lin osteopathy_N = mkN "osteopatia" ; --*
lin osteoporosis_N = mkN "osteoporose" ; --*
lin osteosarcoma_N = variants {mkN "osteossarcoma" ; mkN "sarcoma" ; } ; --*
lin osteosclerosis_N = mkN "osteosclerose" ; --*
lin osteotomy_N = mkN "osteotomia" ; --*
lin ostinato_N = mkN "ostinato" ; --*
lin ostler_1_N = mkN "palafreneiro" ; --*
lin ostracism_1_N = variants {mkN "banimento" ; mkN "desterro" ; mkN "ostracismo" ; } ; --*
lin ostracism_2_N = mkN "ostracismo" ; --*
lin ostracize_1_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "ostracizar") ; mkV2 (mkV "out") ; } ; --*
lin ostracize_2_V2 = variants {mkV2 (mkV "marginalizar") ; mkV2 (mkV "ostracizar") ; } ; --*
lin ostracoderm_N = variants {mkN "Ostracodermes" ; mkN "Ostracodermos" ; } ; --*
lin ostrich_2_N = variants {mkN "avestruz" ; mkN "camelus" ; } ; --*
lin oswald_PN = variants {mkPN "Harvey" ; mkPN "Lee" ; } ; --*
lin other_1_A = mkA "outro" ; --*
lin other_4_A = variants {mkA "diferente" ; mkA "estranho" ; } ; --*
lin otherness_N = mkN "alteridade" ; --*
lin otherwise_AdA = mkAdA "caso" ; --*
lin otherwise_Adv = variants {mkAdv "diferentemente" ; mkAdv "excepcionalmente" ; mkAdv "than" ; } ; --*
lin otic_A = mkA "ótico" ; --*
lin otiose_1_A = mkA "vão" ; --*
lin otiose_2_A = variants {mkA "fútil" ; mkA "inútil" ; mkA "nulidade" ; mkA "vão" ; } ; --*
lin otiose_3_A = variants {mkA "preguiçoso" ; mkA "vadio" ; mkA "vagaroso" ; } ; --*
lin otitis_N = mkN "otite" ; --*
lin otology_N = variants {mkN "otologia" ; mkN "Otologia" ; } ; --*
lin otoplasty_N = mkN "Otoplastia" ; --*
lin otorrhea_N = mkN "otorréia" ; --*
lin otosclerosis_N = mkN "otosclerose" ; --*
lin otoscope_N = mkN "otoscópio" ; --*
lin ottawa_2_PN = variants {mkPN "Otava" ; mkPN "Outaouais" ; mkPN "river" ; } ; --*
lin ottawa_3_PN = variants {mkPN "capital" ; mkPN "of" ; mkPN "Otava" ; } ; --*
lin otter_2_N = variants {mkN "lontra" ; mkN "Lontra" ; } ; --*
lin ottomanFem_1_N = variants {mkN "turco" ; mkN "Turk" ; } ; --*
lin ottomanFem_2_N = variants {mkN "Dinastia" ; mkN "dynasty" ; } ; --*
lin ottomanMasc_1_N = variants {mkN "turco" ; mkN "Turk" ; } ; --*
lin ottomanMasc_2_N = variants {mkN "Dinastia" ; mkN "dynasty" ; } ; --*
lin ouija_N = variants {mkN "board" ; mkN "Tabuleiro" ; } ; --*
lin ounce_2_N = variants {mkN "onça" ; mkN "Onça" ; } ; --*
lin ounce_3_N = variants {mkN "leopard" ; mkN "onça" ; mkN "uncia" ; } ; --*
lin oust_1_V2 = variants {mkV2 (mkV "enxotar") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin oust_2_V2 = variants {mkV2 (mkV "derrubar") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "substituir") ; } ; --*
lin out_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "sair") ; } ; --*
lin out_2_A = variants {mkA "extincto" ; mkA "extinto" ; } ; --*
lin out_2_V2 = mkV2 (mkV "revelar") ; --*
lin out_6_A = variants {mkA "proibido" ; mkA "vedado" ; } ; --*
lin outage_1_N = mkN "falha" ; --*
lin outback_A = variants {mkA "distante" ; mkA "inacessível" ; mkA "isolado" ; } ; --*
lin outback_N = mkN "Outback" ; --*
lin outbalance_V2 = variants {mkV2 (mkV "preponderar") ; mkV2 (mkV "prevalecer") ; } ; --*
lin outbreak_N = variants {mkN "deflagração" ; mkN "epidemia" ; mkN "erupção" ; mkN "explosão" ; mkN "surto" ; mkN "Surto" ; } ; --*
lin outburst_1_N = mkN "ebulição" ; --*
lin outburst_2_N = mkN "explosão" ; --*
lin outburst_3_N = variants {mkN "disturbance" ; mkN "explosão" ; } ; --*
lin outcast_A = mkA "sem" ; --*
lin outclass_V2 = mkV2 (mkV "desclassificar") ; --*
lin outcome_1_N = variants {mkN "placar" ; mkN "result" ; mkN "resultado" ; } ; --*
lin outcome_2_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin outcrop_N = variants {mkN "Afloramento" ; mkN "outcrop" ; } ; --*
lin outcry_N = variants {mkN "brado" ; mkN "chamada" ; mkN "grito" ; } ; --*
lin outdated_A = variants {mkA "antigo" ; mkA "antiquado" ; mkA "desatualizado" ; mkA "obsoleto" ; } ; --*
lin outdistance_V2 = mkV2 (mkV "distanciar") ; --*
lin outdo_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin outdo_2_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; mkV2 (mkV "triunfar") ; mkV2 (mkV "vencer") ; } ; --*
lin outdoor_2_A = mkA "ao" ; --*
lin outdoors_Adv = variants {mkAdv "a" ; mkAdv "ao" ; mkAdv "of" ; } ; --*
lin outer_1_A = mkA "adventício" ; --*
lin outer_3_A = variants {mkA "exterior" ; mkA "externo" ; } ; --*
lin outfit_2_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin outfit_3_N = variants {mkN "conjunto" ; mkN "kit" ; } ; --*
lin outfit_V2 = variants {mkV2 (mkV "apetrechar") ; mkV2 (mkV "equipar") ; mkV2 (mkV "out") ; mkV2 (mkV "suprir") ; } ; --*
lin outflank_1_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "flanquear") ; } ; --*
lin outflank_2_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; mkV2 (mkV "triunfar") ; mkV2 (mkV "vencer") ; } ; --*
lin outflow_1_N = variants {mkN "derrame" ; mkN "escoamento" ; } ; --*
lin outflow_2_N = mkN "efluxo" ; --*
lin outflow_3_N = variants {mkN "Nascente" ; mkN "spring" ; } ; --*
lin outfox_2_V2 = mkV2 (mkV "enganar") ; --*
lin outgoing_1_A = mkA "extrovertido" ; --*
lin outgoing_2_A = mkA "extrovertido" ; --*
lin outgoing_3_A = mkA "extrovertido" ; --*
lin outgo_N = variants {mkN "despesa" ; mkN "gasto" ; } ; --*
lin outgo_V = variants {mkV "apresentar" ; mkV "ser" ; mkV "superar" ; mkV "ultrapassar" ; } ; --*
lin outgrowth_2_N = variants {mkN "crescimento" ; mkN "emergência" ; } ; --*
lin outing_1_N = variants {mkN "excursão" ; mkN "ida" ; mkN "passeio" ; mkN "trip" ; } ; --*
lin outing_2_N = variants {mkN "day" ; mkN "passeio" ; mkN "picnic" ; } ; --*
lin outlandish_A = variants {mkA "bizarro" ; mkA "bizzaro" ; mkA "estranho" ; } ; --*
lin outlandishness_N = variants {mkN "esquisitisse" ; mkN "excentricidade" ; } ; --*
lin outlast_V2 = mkV2 (mkV "sobreviver") ; --*
lin outlaw_N = variants {mkN "criminoso" ; mkN "fora-de-lei" ; } ; --*
lin outlaw_V2 = variants {mkV2 (mkV "criminalizar") ; mkV2 (mkV "proscrever") ; } ; --*
lin outlay_2_N = variants {mkN "despesa" ; mkN "gasto" ; } ; --*
lin outlet_1_N = variants {mkN "establishment" ; mkN "outlet" ; mkN "shopping" ; mkN "store" ; } ; --*
lin outlet_2_N = variants {mkN "outlet" ; mkN "plug" ; mkN "receptacle" ; mkN "socket" ; mkN "tomada" ; } ; --*
lin outlet_3_N = variants {mkN "escapatória" ; mkN "out" ; mkN "porta" ; mkN "saída" ; } ; --*
lin outlet_4_N = mkN "desabafo" ; --*
lin outline_1_N = variants {mkN "borda" ; mkN "contorno" ; } ; --*
lin outline_1_V2 = mkV2 (mkV "criar") ; --*
lin outline_2_N = variants {mkN "resumo" ; mkN "sinopse" ; mkN "sumário" ; } ; --*
lin outline_3_N = variants {mkN "esquema" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin outline_3_V2 = mkV2 (mkV "delinear") ; --*
lin outlive_V2 = mkV2 (mkV "sobreviver") ; --*
lin outlook_1_N = mkN "mentalidade" ; --*
lin outlook_2_N = variants {mkN "expectativa" ; mkN "expetativa" ; } ; --*
lin outmatch_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin outmoded_A = variants {mkA "antiquado" ; mkA "defasado" ; mkA "démodé" ; mkA "fora" ; mkA "obsoleto" ; mkA "passado" ; } ; --*
lin outnumber_V2 = variants {mkV2 (mkV "exceder") ; mkV2 (mkV "ser") ; } ; --*
lin out_of_date_A = variants {mkA "antigo" ; mkA "antiquado" ; mkA "desatualizado" ; mkA "obsoleto" ; } ; --*
lin out_of_door_A = mkA "ao" ; --*
lin out_of_work_A = variants {mkA "desempregado" ; mkA "of" ; } ; --*
lin outpatient_N = mkN "paciente" ; --*
lin outperform_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin outplay_V2 = mkV2 (mkV "superar") ; --*
lin outpost_3_N = mkN "posto" ; --*
lin outpouring_1_N = variants {mkN "Nascente" ; mkN "spring" ; } ; --*
lin outpouring_4_N = mkN "barragem" ; --*
lin outpouring_5_N = variants {mkN "enchente" ; mkN "inundação" ; } ; --*
lin output_1_N = variants {mkN "produção" ; mkN "product" ; } ; --*
lin output_2_N = mkN "rendimento" ; --*
lin output_4_N = mkN "produção" ; --*
lin output_5_N = mkN "produção" ; --*
lin outrage_1_N = variants {mkN "indignação" ; mkN "raiva" ; } ; --*
lin outrage_1_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "escandalizar") ; mkV2 (mkV "horrorizar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "ultrajar") ; } ; --*
lin outrage_2_N = mkN "atrocidade" ; --*
lin outrage_2_V2 = variants {mkV2 (mkV "dessacralizar") ; mkV2 (mkV "profanar") ; mkV2 (mkV "violar") ; } ; --*
lin outrage_3_N = mkN "escândalo" ; --*
lin outrage_3_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atentar") ; mkV2 (mkV "estuprar") ; mkV2 (mkV "violentar") ; } ; --*
lin outrageous_1_A = mkA "terrível" ; --*
lin outrageous_2_A = variants {mkA "descomunal" ; mkA "exorbitante" ; } ; --*
lin outright_2_Adv = mkAdv "francamente" ; --*
lin outright_3_Adv = variants {mkAdv "a" ; mkAdv "imediatamente" ; mkAdv "instantaneamente" ; } ; --*
lin outright_A = mkA "ilimitado" ; --*
lin outset_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; mkN "time" ; } ; --*
lin outshine_1_V2 = mkV2 (mkV "brilhar") ; --*
lin outside_1_Adv = variants {mkAdv "a" ; mkAdv "ao" ; mkAdv "of" ; } ; --*
lin outside_2_Adv = mkAdv "fora" ; --*
lin outside_2_A = mkA "externo" ; --*
lin outside_2_N = variants {mkN "exterior" ; mkN "lado" ; } ; --*
lin outside_4_A = mkA "ao" ; --*
lin outside_7_A = variants {mkA "externo" ; mkA "internacional" ; } ; --*
lin outsider_1_N = variants {mkN "estrangeiro" ; mkN "forasteiro" ; mkN "marginal" ; } ; --*
lin outskirts_N = mkN "periferia" ; --*
lin outsmart_1_V2 = mkV2 (mkV "enganar") ; --*
lin outspoken_2_A = mkA "correto" ; --*
lin outspokenness_N = mkN "franqueza" ; --*
lin outstanding_1_A = variants {mkA "destacado" ; mkA "excepcional" ; mkA "extraordinário" ; } ; --*
lin outstanding_2_A = mkA "proeminente" ; --*
lin outstanding_4_A = mkA "o" ; --*
lin outstrip_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin outstrip_2_V2 = mkV2 (mkV "distanciar") ; --*
lin outtake_N = mkN "Outtake" ; --*
lin outward_Adv = mkAdv "para" ; --*
lin outwardness_2_N = mkN "externalidades" ; --*
lin outwards_Adv = mkAdv "para" ; --*
lin outwear_2_V2 = variants {mkV2 (mkV "cansar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "exaurir-se") ; mkV2 (mkV "out") ; mkV2 (mkV "upon") ; } ; --*
lin outweigh_1_V2 = mkV2 (mkV "pesar") ; --*
lin outweigh_2_V2 = variants {mkV2 (mkV "preponderar") ; mkV2 (mkV "prevalecer") ; } ; --*
lin outwit_V2 = mkV2 (mkV "enganar") ; --*
lin ouzel_1_N = variants {mkN "blackbird" ; mkN "melro" ; mkN "melro-preto" ; mkN "merula" ; } ; --*
lin oval_A = variants {mkA "elíptico" ; mkA "oval" ; mkA "ovalado" ; mkA "ovóide" ; } ; --*
lin oval_N = variants {mkN "elipse" ; mkN "oval" ; } ; --*
lin ovarian_A = variants {mkA "do" ; mkA "ovariano" ; } ; --*
lin ovary_1_N = mkN "ovário" ; --*
lin ovary_2_N = mkN "ovário" ; --*
lin ovate_2_A = variants {mkA "elíptico" ; mkA "oval" ; mkA "ovalado" ; mkA "ovóide" ; } ; --*
lin ovation_N = variants {mkN "ovação" ; mkN "ovation" ; } ; --*
lin ovenbird_2_N = variants {mkN "Furnariidae" ; mkN "Furnariídeos" ; } ; --*
lin oven_N = variants {mkN "forno" ; mkN "fornos" ; } ; --*
lin over_1_Adv = mkAdv "de" ; --*
lin over_5_Adv = variants {mkAdv "over" ; mkAdv "por" ; } ; --*
lin overactive_A = variants {mkA "ativo" ; mkA "hiperativo" ; } ; --*
lin overactivity_N = variants {mkN "atividade" ; mkN "hiperatividade" ; } ; --*
lin overall_1_N = variants {mkN "jardineira" ; mkN "macacão" ; } ; --*
lin overall_2_N = variants {mkN "macacão" ; mkN "suit" ; } ; --*
lin overawe_V2 = mkV2 (mkV "aterrorizar") ; --*
lin overbalance_1_V2 = variants {mkV2 (mkV "preponderar") ; mkV2 (mkV "prevalecer") ; } ; --*
lin overbearing_1_A = variants {mkA "autoritário" ; mkA "ditatorial" ; } ; --*
lin overbearing_2_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin overblown_1_A = mkA "pomposo" ; --*
lin overbold_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin overburden_2_N = mkN "sobrecarga" ; --*
lin overcapitalize_1_V2 = mkV2 (mkV "superestimar") ; --*
lin overcapitalize_2_V2 = mkV2 (mkV "superestimar") ; --*
lin overcast_1_N = variants {mkN "cover" ; mkN "Nebulosidade" ; } ; --*
lin overcast_A = mkA "nublado" ; --*
lin overcharge_1_V2 = mkV2 (mkV "roubar") ; --*
lin overcharge_1_V = mkV "roubar" ; --*
lin overcharge_2_V2 = mkV2 (mkV "sobrecarregar") ; --*
lin overcloud_1_V = variants {mkV "nublar" ; mkV "over" ; mkV "up" ; } ; --*
lin overcoat_1_N = variants {mkN "casacão" ; mkN "paletó" ; mkN "sobretudo" ; mkN "Sobretudo" ; } ; --*
lin overcome_1_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "the") ; mkV2 (mkV "vencer") ; } ; --*
lin overcome_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin overcome_3_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "superar") ; } ; --*
lin overcome_3_V = variants {mkV "over" ; mkV "superar" ; } ; --*
lin overcome_4_V2 = variants {mkV2 (mkV "the") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin overcome_4_V = variants {mkV "the" ; mkV "ultrapassar" ; mkV "vencer" ; } ; --*
lin overconfidence_N = mkN "certeza" ; --*
lin overconfident_A = mkA "presunçoso" ; --*
lin overcook_V2 = mkV2 (mkV "cozinhar") ; --*
lin overcritical_A = mkA "supercrítico" ; --*
lin overdo_V2 = variants {mkV2 (mkV "agigantar") ; mkV2 (mkV "exagerar") ; } ; --*
lin overdraw_1_V2 = mkV2 (mkV "fazer") ; --*
lin overdraw_2_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "exagerar") ; } ; --*
lin overdress_2_V = variants {mkV "arrumar" ; mkV "out" ; mkV "up" ; mkV "vestir" ; } ; --*
lin overdrive_1_N = mkN "ultrapassagem" ; --*
lin overdue_A = mkA "que" ; --*
lin overeat_V = variants {mkV "devorar" ; mkV "encher" ; mkV "out" ; } ; --*
lin overestimate_1_V2 = variants {mkV2 (mkV "superestimar") ; mkV2 (mkV "supervalorizar") ; } ; --*
lin overestimate_2_V2 = variants {mkV2 (mkV "superestimar") ; mkV2 (mkV "supervalorizar") ; } ; --*
lin overexploitation_N = mkN "sobreexploração" ; --*
lin overflow_1_N = variants {mkN "enchente" ; mkN "inundação" ; } ; --*
lin overflow_1_V2 = variants {mkV2 (mkV "infestar") ; mkV2 (mkV "over") ; } ; --*
lin overflow_1_V = variants {mkV "infestar" ; mkV "over" ; } ; --*
lin overflow_2_N = mkN "runoff" ; --*
lin overflow_2_V = variants {mkV "babar" ; mkV "over" ; } ; --*
lin overfly_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "sobrevoar") ; } ; --*
lin overfull_A = mkA "cheio" ; --*
lin overgenerous_A = mkA "exuberante" ; --*
lin overgrowth_1_N = variants {mkN "crescimento" ; mkN "gigantismo" ; } ; --*
lin overhang_N = mkN "colapso" ; --*
lin overhasty_A = mkA "precipitado" ; --*
lin overhaul_1_N = variants {mkN "and" ; mkN "manutenção" ; } ; --*
lin overhaul_2_N = mkN "renovação" ; --*
lin overhaul_2_V2 = mkV2 (mkV "revisar") ; --*
lin overhead_1_Adv = mkAdv "de" ; --*
lin overhead_2_N = variants {mkN "command" ; mkN "overhead" ; mkN "processing" ; } ; --*
lin overhead_3_N = mkN "overhead" ; --*
lin overheat_1_V2 = variants {mkV2 (mkV "sobreaquecer") ; mkV2 (mkV "superaquecer") ; } ; --*
lin overheat_2_V2 = mkV2 (mkV "superaquecer") ; --*
lin overheating_N = variants {mkN "reaquecimento" ; mkN "sobre-aquecimento" ; } ; --*
lin overindulge_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "encher") ; mkV2 (mkV "out") ; } ; --*
lin overjealous_A = variants {mkA "cioso" ; mkA "ciumento" ; } ; --*
lin overlap_1_N = mkN "sobreposição" ; --*
lin overlap_1_V = variants {mkV "cavalgar" ; mkV "coincidir" ; mkV "cruzar-se" ; } ; --*
lin overlap_2_N = mkN "sobreposição" ; --*
lin overlap_2_V = variants {mkV "cobrir" ; mkV "sobrepor" ; } ; --*
lin overlay_1_N = mkN "folha" ; --*
lin overlay_1_V2 = variants {mkV2 (mkV "encapar") ; mkV2 (mkV "enfronhar") ; } ; --*
lin overleap_3_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "escapar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; mkV2 (mkV "preterir") ; } ; --*
lin overload_1_V2 = mkV2 (mkV "sobrecarregar") ; --*
lin overload_2_N = mkN "sobrecarga" ; --*
lin overload_3_V2 = mkV2 (mkV "sobrecarregar") ; --*
lin overlook_1_V2 = mkV2 (mkV "negligenciar") ; --*
lin overlook_3_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "escapar") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; mkV2 (mkV "preterir") ; } ; --*
lin overlook_5_V2 = mkV2 (mkV "supervisionar") ; --*
lin overlook_N = variants {mkN "mirante" ; mkN "negligencie" ; } ; --*
lin overlord_N = variants {mkN "castelão" ; mkN "senhor" ; } ; --*
lin overly_AdA = variants {mkAdA "a" ; mkAdA "demais" ; mkAdA "excessivamente" ; mkAdA "medos" ; } ; --*
lin overmaster_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; } ; --*
lin overmuch_Adv = variants {mkAdv "demasiadamente" ; mkAdv "much" ; } ; --*
lin overpass_N = mkN "viaduto" ; --*
lin overpay_V2 = variants {mkV2 (mkV "pagar") ; mkV2 (mkV "sobrepagar") ; } ; --*
lin overpay_V = variants {mkV "pagar" ; mkV "sobrepagar" ; } ; --*
lin overplus_N = variants {mkN "excesso" ; mkN "pletora" ; mkN "superabundância" ; } ; --*
lin overpopulation_N = variants {mkN "concentração" ; mkN "sobrepopulação" ; mkN "superpopulação" ; } ; --*
lin overpower_1_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; } ; --*
lin overpower_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "superar") ; } ; --*
lin overpowering_A = variants {mkA "esmagador" ; mkA "irresistível" ; } ; --*
lin overproduce_1_V2 = mkV2 (mkV "superproduzir") ; --*
lin overproduce_1_V = mkV "superproduzir" ; --*
lin overproduce_2_V2 = mkV2 (mkV "superproduzir") ; --*
lin overproduction_N = variants {mkN "produção" ; mkN "superprodução" ; } ; --*
lin overrate_V2 = variants {mkV2 (mkV "superestimar") ; mkV2 (mkV "supervalorizar") ; } ; --*
lin overreach_2_V2 = mkV2 (mkV "enganar") ; --*
lin overreact_V = mkV "exagerar" ; --*
lin override_1_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "derrubar") ; } ; --*
lin override_2_N = mkN "anulação" ; --*
lin overriding_A = variants {mkA "o" ; mkA "preeminente" ; mkA "preponderante" ; mkA "primordial" ; } ; --*
lin overrule_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "derrubar") ; } ; --*
lin overrun_2_V2 = variants {mkV2 (mkV "infestar") ; mkV2 (mkV "invadir") ; } ; --*
lin overrun_3_V2 = variants {mkV2 (mkV "infestar") ; mkV2 (mkV "over") ; } ; --*
lin overrun_5_V2 = mkV2 (mkV "ir") ; --*
lin oversea_A = mkA "ultramar" ; --*
lin overseas_1_A = mkA "ao" ; --*
lin overseas_2_Adv = mkAdv "no" ; --*
lin overseas_2_A = mkA "ultramar" ; --*
lin overseer_N = variants {mkN "feitor" ; mkN "superintendente" ; } ; --*
lin oversee_V2 = variants {mkV2 (mkV "chefiar") ; mkV2 (mkV "controlar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "manejar") ; mkV2 (mkV "supervisar") ; mkV2 (mkV "supervisionar") ; } ; --*
lin overshadow_1_V2 = mkV2 (mkV "eclipsar") ; --*
lin overshoe_N = mkN "galocha" ; --*
lin overshoot_2_V2 = mkV2 (mkV "exceder") ; --*
lin oversight_1_N = mkN "desatenção" ; --*
lin oversight_2_N = variants {mkN "superintendência" ; mkN "supervisão" ; } ; --*
lin oversight_3_N = variants {mkN "descuido" ; mkN "erro" ; mkN "negligência" ; } ; --*
lin oversleep_V = mkV "dormir" ; --*
lin overspill_2_N = mkN "runoff" ; --*
lin overstatement_N = variants {mkN "exagero" ; mkN "hipérbole" ; } ; --*
lin overstate_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "exagerar") ; } ; --*
lin overstep_1_V2 = mkV2 (mkV "transgredir") ; --*
lin overstep_2_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "exceder") ; mkV2 (mkV "past") ; mkV2 (mkV "superar") ; mkV2 (mkV "transcender") ; } ; --*
lin overstrain_V2 = mkV2 (mkV "esforçar") ; --*
lin overstrung_1_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin overt_A = mkA "aberto" ; --*
lin overtake_1_V2 = variants {mkV2 (mkV "avaçar") ; mkV2 (mkV "up") ; } ; --*
lin overtake_3_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "superar") ; } ; --*
lin overtax_V2 = mkV2 (mkV "onerar") ; --*
lin overthrow_1_N = mkN "deitarporterra" ; --*
lin overthrow_1_V2 = variants {mkV2 (mkV "derribar") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; mkV2 (mkV "subverter") ; } ; --*
lin overthrow_2_N = mkN "desarranjo" ; --*
lin overthrow_2_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "derrubar") ; } ; --*
lin overtime_1_N = mkN "hora" ; --*
lin overtime_2_N = variants {mkN "prorrogação" ; mkN "time" ; } ; --*
lin overtone_1_N = mkN "tom" ; --*
lin overtone_2_N = variants {mkN "sobretom" ; mkN "tone" ; } ; --*
lin overture_1_N = mkN "ouverture" ; --*
lin overturn_1_V = variants {mkV "derrubar" ; mkV "over" ; } ; --*
lin overturn_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin overturn_3_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "derrubar") ; } ; --*
lin overturn_4_V2 = variants {mkV2 (mkV "derribar") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; mkV2 (mkV "subverter") ; } ; --*
lin overturn_5_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin overturn_6_V2 = mkV2 (mkV "revolucionar") ; --*
lin overvalue_V2 = variants {mkV2 (mkV "superestimar") ; mkV2 (mkV "supervalorizar") ; } ; --*
lin overview_N = variants {mkN "resumo" ; mkN "revisão" ; mkN "sumário" ; } ; --*
lin overweening_1_A = mkA "excessivo" ; --*
lin overweight_N = variants {mkN "corpulência" ; mkN "que" ; mkN "sobrepeso" ; } ; --*
lin overwhelm_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "superar") ; } ; --*
lin overwhelm_3_V2 = variants {mkV2 (mkV "afogar") ; mkV2 (mkV "submergir") ; } ; --*
lin overwhelm_4_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; } ; --*
lin overwhelming_1_A = variants {mkA "esmagador" ; mkA "irresistível" ; } ; --*
lin overwrought_A = variants {mkA "perturbado" ; mkA "transtornado" ; } ; --*
lin overzealous_A = variants {mkA "fanático" ; mkA "furiosa" ; mkA "furiosas" ; mkA "furiosos" ; mkA "hidrofóbico" ; } ; --*
lin oviduct_N = variants {mkN "Tuba" ; mkN "tube" ; } ; --*
lin oviedo_PN = mkPN "Oviedo" ; --*
lin ovine_A = mkA "ovino" ; --*
lin oviparous_A = mkA "ovíparo" ; --*
lin ovoid_A = variants {mkA "elíptico" ; mkA "oval" ; mkA "ovalado" ; mkA "ovóide" ; } ; --*
lin ovulation_N = mkN "ovulação" ; --*
lin ovum_N = variants {mkN "cell" ; mkN "óvulo" ; } ; --*
lin owe_1_V2 = mkV2 (mkV "dever") ; --*
lin owe_1_V = mkV "dever" ; --*
lin owe_2_V2 = mkV2 (mkV "dever") ; --*
lin owe_3_V2 = mkV2 (mkV "dever") ; --*
lin owe_3_V = mkV "dever" ; --*
lin owl_N = variants {mkN "bufo" ; mkN "coruja" ; mkN "corujão" ; mkN "Corujas" ; mkN "mocho" ; mkN "of" ; } ; --*
lin own_A = mkA "próprio" ; --*
lin owner_1_N = variants {mkN "dono" ; mkN "proprietário" ; } ; --*
lin owner_2_N = variants {mkN "amo" ; mkN "dono" ; mkN "possuidor" ; mkN "proprietário" ; } ; --*
lin ownership_1_N = variants {mkN "possessão" ; mkN "propriedade" ; } ; --*
lin ownership_2_N = variants {mkN "possessão" ; mkN "propriedade" ; } ; --*
lin own_up_V = variants {mkV "a" ; mkV "up" ; } ; --*
lin own_V2 = variants {mkV2 (mkV "fruir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "ter") ; } ; --*
lin ox_1_N = mkN "boi" ; --*
lin ox_2_N = variants {mkN "boi" ; mkN "ox" ; } ; --*
lin oxalate_N = variants {mkN "oxalato" ; mkN "Oxalatos" ; } ; --*
lin oxazepam_N = mkN "Oxazepam" ; --*
lin oxford_1_PN = mkPN "Oxford" ; --*
lin oxidant_N = variants {mkN "agent" ; mkN "agentes" ; mkN "comburente" ; } ; --*
lin oxidase_N = mkN "oxidase" ; --*
lin oxidation_N = mkN "oxidação" ; --*
lin oxide_N = variants {mkN "óxido" ; mkN "óxidos" ; mkN "Óxidos" ; } ; --*
lin oxidization_1_N = mkN "oxidação" ; --*
lin oxidize_V2 = mkV2 (mkV "oxidar") ; --*
lin oxidize_V = mkV "oxidar" ; --*
lin oxidoreductase_N = mkN "oxirredutase" ; --*
lin oxime_N = mkN "oxima" ; --*
lin oxonian_2_A = mkA "oxfordiano" ; --*
lin oxtongue_N = variants {mkN "echioides" ; mkN "oxtongue" ; mkN "Picris" ; } ; --*
lin oxyacetylene_N = mkN "oxiacetileno" ; --*
lin oxyacid_N = variants {mkN "acid" ; mkN "oxiácido" ; } ; --*
lin oxygenase_N = mkN "oxigenase" ; --*
lin oxygenation_N = mkN "oxigenação" ; --*
lin oxygen_N = variants {mkN "number" ; mkN "Oxigenio" ; mkN "oxigénio" ; mkN "oxigênio" ; mkN "Oxígênio" ; } ; --*
lin oxymoron_N = variants {mkN "oximoro" ; mkN "oxímoro" ; } ; --*
lin oxytocin_N = variants {mkN "ocitocina" ; mkN "oxitocina" ; } ; --*
lin oxytone_N = mkN "oxítona" ; --*
lin oyster_1_N = mkN "ostra" ; --*
lin oyster_2_N = variants {mkN "marisco" ; mkN "ostra" ; } ; --*
lin oyster_3_N = mkN "ostra" ; --*
lin ozone_N = variants {mkN "Ozonio" ; mkN "ozónio" ; mkN "Ozónio" ; mkN "ozônio" ; mkN "ozono" ; } ; --*
lin pa_1_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "papai" ; } ; --*
lin pa_2_N = variants {mkN "number" ; mkN "Protactinio" ; mkN "protactínio" ; } ; --*
lin pa_3_N = variants {mkN "pascal" ; mkN "Pascal" ; } ; --*
lin pa_4_N = variants {mkN "Pensilvânia" ; mkN "State" ; } ; --*
lin pabulum_1_N = mkN "alimento" ; --*
lin paca_N = mkN "paca" ; --*
lin pace_1_N = mkN "ritmo" ; --*
lin pace_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "dar" ; mkV "passear" ; } ; --*
lin pace_2_N = mkN "passo" ; --*
lin pace_2_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "passear" ; } ; --*
lin pace_3_N = variants {mkN "passo" ; mkN "ritmo" ; } ; --*
lin pace_4_N = variants {mkN "passo" ; mkN "pernada" ; } ; --*
lin pace_4_V2 = variants {mkV2 (mkV "cadenciar") ; mkV2 (mkV "controlar") ; mkV2 (mkV "ritmar") ; } ; --*
lin pace_5_N = variants {mkN "ritmo" ; mkN "taxas" ; } ; --*
lin pace_6_N = mkN "jarda" ; --*
lin pacemaker_2_N = variants {mkN "Nó" ; mkN "node" ; mkN "pacemaker" ; } ; --*
lin pacemaker_3_N = variants {mkN "Marcapasso" ; mkN "pacemaker" ; } ; --*
lin pachinko_N = mkN "pachinko" ; --*
lin pachydermatous_2_A = mkA "insensível" ; --*
lin pacific_2_A = mkA "pacífico" ; --*
lin pacific_3_A = mkA "pacífico" ; --*
lin pacification_1_N = mkN "pacificação" ; --*
lin pacification_2_N = variants {mkN "pacificação" ; mkN "paz" ; mkN "treaty" ; } ; --*
lin pacific_PN = variants {mkPN "Ocean" ; mkPN "Pacífico" ; } ; --*
lin pacifier_1_N = variants {mkN "conciliador" ; mkN "pacificador" ; } ; --*
lin pacifier_2_N = mkN "Chupeta" ; --*
lin pacifier_3_N = variants {mkN "chupeta" ; mkN "dummy" ; mkN "ring" ; } ; --*
lin pacifism_2_N = variants {mkN "pacifismo" ; mkN "Pacifismo" ; } ; --*
lin pacifistFem_N = mkN "pacifista" ; --*
lin pacifistMasc_N = mkN "pacifista" ; --*
lin pacify_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "apaziguar") ; mkV2 (mkV "aplacar") ; mkV2 (mkV "pacificar") ; mkV2 (mkV "serenar") ; mkV2 (mkV "sossegar") ; mkV2 (mkV "tranquilizar") ; } ; --*
lin pacify_2_V2 = mkV2 (mkV "pacificar") ; --*
lin pacing_1_N = mkN "andamento" ; --*
lin pack_10_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "empacotar") ; } ; --*
lin pack_11_V = mkV "embalar" ; --*
lin pack_1_N = variants {mkN "batalhão" ; mkN "montão" ; mkN "multidão" ; mkN "number" ; mkN "pilha" ; } ; --*
lin pack_1_V2 = mkV2 (mkV "encaixotar") ; --*
lin pack_4_N = mkN "gangue" ; --*
lin pack_5_N = variants {mkN "camarilha" ; mkN "circle" ; } ; --*
lin pack_6_N = mkN "matilha" ; --*
lin pack_6_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "portar") ; } ; --*
lin pack_7_V2 = mkV2 (mkV "lotar") ; --*
lin pack_8_V2 = mkV2 (mkV "mochilar") ; --*
lin pack_8_V = mkV "mochilar" ; --*
lin pack_9_N = mkN "fardo" ; --*
lin pack_9_V2 = variants {mkV2 (mkV "compactar") ; mkV2 (mkV "down") ; } ; --*
lin package_1_N = mkN "pacote" ; --*
lin package_2_N = mkN "pacote" ; --*
lin package_3_N = variants {mkN "package" ; mkN "program" ; mkN "software" ; mkN "Software" ; mkN "system" ; } ; --*
lin packaging_2_N = variants {mkN "material" ; mkN "promoção" ; mkN "propaganda" ; mkN "publicidade" ; } ; --*
lin pack_animal_N = variants {mkN "animal" ; mkN "burro" ; } ; --*
lin packet_1_N = mkN "pacote" ; --*
lin packet_3_N = mkN "pacote" ; --*
lin packing_1_N = variants {mkN "algodão" ; mkN "material" ; } ; --*
lin packrat_2_N = variants {mkN "cinerea" ; mkN "Neotoma" ; mkN "rat" ; mkN "woodrat" ; } ; --*
lin pact_N = variants {mkN "acordo" ; mkN "convenção" ; mkN "convênio" ; mkN "pacto" ; mkN "tratado" ; } ; --*
lin pad_1_N = variants {mkN "bloco" ; mkN "of" ; } ; --*
lin pad_1_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "engrandecer") ; mkV2 (mkV "up") ; } ; --*
lin paddle_1_V2 = variants {mkV2 (mkV "chapinhar") ; mkV2 (mkV "patejar") ; } ; --*
lin paddle_3_V2 = mkV2 (mkV "nadar") ; --*
lin paddle_3_V = mkV "nadar" ; --*
lin paddle_4_N = variants {mkN "paddle" ; mkN "pagaia" ; mkN "remo" ; } ; --*
lin paddlefish_N = variants {mkN "peixe-espátula" ; mkN "spathula" ; } ; --*
lin paddle_steamer_N = variants {mkN "Barcos" ; mkN "steamer" ; } ; --*
lin paddy_2_N = variants {mkN "arrozal" ; mkN "field" ; mkN "paddy" ; } ; --*
lin paddy_field_N = variants {mkN "arrozal" ; mkN "field" ; mkN "paddy" ; } ; --*
lin padlock_N = variants {mkN "cadeado" ; mkN "tranca" ; } ; --*
lin padova_PN = variants {mkPN "Padua" ; mkPN "Pádua" ; } ; --*
lin padre_2_N = mkN "padre" ; --*
lin padua_PN = variants {mkPN "Padua" ; mkPN "Pádua" ; } ; --*
lin paean_1_N = variants {mkN "elogio" ; mkN "panegírico" ; } ; --*
lin paean_2_N = mkN "peã" ; --*
lin paederasty_N = variants {mkN "pederastia" ; mkN "Pederastia" ; } ; --*
lin paediatrics_N = variants {mkN "medicine" ; mkN "pediatria" ; mkN "Pediatria" ; mkN "pedologia" ; } ; --*
lin paella_N = variants {mkN "paeja" ; mkN "paelha" ; mkN "paella" ; } ; --*
lin paeony_N = mkN "peônia" ; --*
lin pagan_1_N = mkN "pagão" ; --*
lin pagan_A = mkA "pagão" ; --*
lin paganism_N = variants {mkN "paganismo" ; mkN "Paganismo" ; mkN "religion" ; } ; --*
lin page_1_N = variants {mkN "escudeiro" ; mkN "lauda" ; mkN "página" ; } ; --*
lin page_3_V2 = variants {mkV2 (mkV "compaginar") ; mkV2 (mkV "numerar") ; mkV2 (mkV "paginar") ; } ; --*
lin page_4_N = variants {mkN "pagem" ; mkN "pajem" ; } ; --*
lin pageboy_1_N = variants {mkN "pagem" ; mkN "pajem" ; } ; --*
lin pagination_N = variants {mkN "number" ; mkN "número" ; mkN "paginação" ; } ; --*
lin paging_1_N = mkN "Memória" ; --*
lin paging_2_N = variants {mkN "number" ; mkN "número" ; mkN "paginação" ; } ; --*
lin pagoda_N = mkN "pagode" ; --*
lin pahautea_N = variants {mkN "bidwillii" ; mkN "Libocedrus" ; mkN "pine" ; } ; --*
lin pahoehoe_N = variants {mkN "lava" ; mkN "pahoehoe" ; } ; --*
lin paid_1_A = mkA "pagado" ; --*
lin pail_1_N = variants {mkN "balde" ; mkN "caçamba" ; mkN "cubeta" ; } ; --*
lin pain_1_N = variants {mkN "cefaleia" ; mkN "dor" ; } ; --*
lin pain_2_N = variants {mkN "angústia" ; mkN "dor" ; mkN "Dor" ; } ; --*
lin pain_2_V2 = variants {mkV2 (mkV "angustiar") ; mkV2 (mkV "doer") ; mkV2 (mkV "machucar") ; } ; --*
lin pain_3_N = variants {mkN "dor" ; mkN "sensation" ; } ; --*
lin pain_4_N = variants {mkN "chato" ; mkN "in" ; } ; --*
lin pain_5_N = variants {mkN "contrariedade" ; mkN "in" ; mkN "incômodo" ; mkN "moléstia" ; } ; --*
lin painful_1_A = variants {mkA "árduo" ; mkA "doído" ; mkA "dolorido" ; mkA "doloroso" ; mkA "extenuante" ; } ; --*
lin painful_2_A = variants {mkA "dolorido" ; mkA "doloroso" ; mkA "lamentável" ; mkA "triste" ; } ; --*
lin painful_3_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin painful_4_A = variants {mkA "doloroso" ; mkA "irritante" ; } ; --*
lin painfulness_1_N = variants {mkN "angústia" ; mkN "dor" ; mkN "Dor" ; } ; --*
lin painkiller_N = variants {mkN "analgésico" ; mkN "Analgésicos" ; mkN "pill" ; } ; --*
lin painless_1_A = mkA "indolor" ; --*
lin painless_2_A = mkA "indolor" ; --*
lin painstaking_A = variants {mkA "consciencioso" ; mkA "consciensiosamente" ; } ; --*
lin paint_1_N = variants {mkN "cor" ; mkN "pintura" ; mkN "tinta" ; } ; --*
lin paint_1_V2 = variants {mkV2 (mkV "pincelar") ; mkV2 (mkV "pintar") ; } ; --*
lin paint_2_V2A = mkV2A (mkV "pintar") ; --*
lin paint_3_N = mkN "blush" ; --*
lin paint_3_V2 = mkV2 (mkV "pintar") ; --*
lin paint_4_V2 = mkV2 (mkV "aplicar") ; --*
lin paint_4_V = mkV "aplicar" ; --*
lin paintball_2_N = variants {mkN "Paint" ; mkN "Paintball" ; } ; --*
lin paintbrush_N = mkN "pincel" ; --*
lin painter_1_N = variants {mkN "pintor" ; mkN "pintora" ; } ; --*
lin painter_2_N = mkN "pintor" ; --*
lin painter_4_N = variants {mkN "concolor" ; mkN "leão-baio" ; mkN "lion" ; mkN "onça-parda" ; mkN "pantera" ; mkN "puma" ; mkN "suçuarana" ; } ; --*
lin painting_1_N = mkN "pintura" ; --*
lin painting_2_N = mkN "pintura" ; --*
lin painting_3_N = variants {mkN "pintura" ; mkN "Pintura" ; } ; --*
lin painting_4_N = variants {mkN "painting" ; mkN "pintura" ; } ; --*
lin pair_1_N = variants {mkN "par" ; mkN "parelha" ; } ; --*
lin pair_2_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin pair_2_V2 = variants {mkV2 (mkV "acoplar") ; mkV2 (mkV "casar") ; mkV2 (mkV "emparelhar") ; } ; --*
lin pair_3_N = variants {mkN "dupla" ; mkN "par" ; } ; --*
lin pair_4_V2 = mkV2 (mkV "emparelhar") ; --*
lin pair_5_V = variants {mkV "acasalar" ; mkV "copular" ; } ; --*
lin pairing_1_N = variants {mkN "Acasalamento" ; mkN "acoplamento" ; mkN "Cópula" ; mkN "union" ; } ; --*
lin pair_off_V = variants {mkV "emparelhar" ; mkV "juntar" ; mkV "off" ; } ; --*
lin pajama_2_N = mkN "pijama" ; --*
lin pakistani_A = mkA "paquistanês" ; --*
lin pakistaniFem_N = mkN "paquistanês" ; --*
lin pakistaniMasc_N = mkN "paquistanês" ; --*
lin pakistan_PN = variants {mkPN "Pakistan" ; mkPN "Paquistao" ; mkPN "Republic" ; } ; --*
lin palace_1_N = variants {mkN "castelo" ; mkN "palácio" ; } ; --*
lin palace_2_N = mkN "palácio" ; --*
lin palace_4_N = variants {mkN "palácio" ; mkN "Palácio" ; mkN "Palácios" ; } ; --*
lin paladin_N = variants {mkN "guerreiro" ; mkN "herói" ; mkN "paladino" ; } ; --*
lin palaeolithic_A = mkA "paleolítico" ; --*
lin palaeontologist_N = variants {mkN "paleontologista" ; mkN "paleontólogo" ; } ; --*
lin palaeontology_N = variants {mkN "paleontologia" ; mkN "Paleontologia" ; } ; --*
lin palankeen_N = mkN "palanquim" ; --*
lin palanquin_N = mkN "palanquim" ; --*
lin palatal_N = mkN "palatal" ; --*
lin palate_N = variants {mkN "of" ; mkN "palato" ; } ; --*
lin palatial_2_A = mkA "palaciano" ; --*
lin palatine_3_N = mkN "Palatino" ; --*
lin palatine_4_N = variants {mkN "bone" ; mkN "Osso" ; mkN "palatinum" ; } ; --*
lin palaver_1_V = mkV "tagarelar" ; --*
lin palaver_2_V = mkV "adular" ; --*
lin palaver_3_V = mkV "palavrear" ; --*
lin pale_2_A = variants {mkA "de" ; mkA "fraco" ; } ; --*
lin pale_3_A = mkA "pálido" ; --*
lin pale_4_A = variants {mkA "claro" ; mkA "pálido" ; } ; --*
lin paleness_1_N = mkN "palidez" ; --*
lin paleobiology_1_N = mkN "Paleobiologia" ; --*
lin paleoclimatology_1_N = mkN "paleoclimatologia" ; --*
lin paleoecology_1_N = mkN "paleoecologia" ; --*
lin paleoethnography_1_N = mkN "paleoetnografia" ; --*
lin paleolithic_A = mkA "paleolítico" ; --*
lin paleolith_N = mkN "paleolito" ; --*
lin paleontological_1_A = mkA "paleontológico" ; --*
lin paleontologist_N = variants {mkN "paleontologista" ; mkN "paleontólogo" ; } ; --*
lin paleontology_N = variants {mkN "paleontologia" ; mkN "Paleontologia" ; } ; --*
lin paleopathology_1_N = mkN "paleopatologia" ; --*
lin palermo_PN = mkPN "Palermo" ; --*
lin palestine_1_PN = variants {mkPN "Estado" ; mkPN "Palestina" ; mkPN "Território" ; } ; --*
lin palestine_2_PN = variants {mkPN "Canaã" ; mkPN "Land" ; } ; --*
lin palestinian_A = variants {mkA "palestina" ; mkA "palestiniano" ; mkA "palestino" ; } ; --*
lin palestinian_N = variants {mkN "Arab" ; mkN "palestiniano" ; } ; --*
lin palette_2_N = variants {mkN "Paleta" ; mkN "pálete" ; } ; --*
lin palette_3_N = mkN "paleta" ; --*
lin pale_V = variants {mkV "clarear" ; mkV "empalidecer" ; } ; --*
lin palimpsest_N = variants {mkN "palimpsesto" ; mkN "Palimpsesto" ; } ; --*
lin palindrome_N = mkN "palíndromo" ; --*
lin palingenesis_N = mkN "palingenesia" ; --*
lin palisade_N = variants {mkN "estacada" ; mkN "paliçada" ; } ; --*
lin palisade_V2 = variants {mkV2 (mkV "emparedar") ; mkV2 (mkV "in") ; } ; --*
lin pall_2_N = variants {mkN "mortalha" ; mkN "sudário" ; mkN "Sudário" ; } ; --*
lin pall_2_V = variants {mkV "assustar" ; mkV "away" ; mkV "desalentar" ; mkV "intimidar" ; mkV "off" ; } ; --*
lin pall_3_N = variants {mkN "cortina" ; mkN "reposteiro" ; } ; --*
lin pall_6_V = variants {mkV "ficar" ; mkV "flat" ; } ; --*
lin pall_8_V = mkV "fatigar" ; --*
lin palladium_N = variants {mkN "number" ; mkN "Paladio" ; mkN "paládio" ; } ; --*
lin pallet_5_N = variants {mkN "Paleta" ; mkN "pálete" ; } ; --*
lin pallette_N = mkN "paleta" ; --*
lin palliate_1_V2 = variants {mkV2 (mkV "atenuar") ; mkV2 (mkV "mitigar") ; mkV2 (mkV "paliar") ; mkV2 (mkV "remediar") ; } ; --*
lin palliate_2_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "amenizar") ; mkV2 (mkV "atenuar") ; mkV2 (mkV "melhorar") ; } ; --*
lin palliative_A = mkA "paliativo" ; --*
lin pallid_1_A = variants {mkA "claro" ; mkA "pálido" ; } ; --*
lin pallid_2_A = variants {mkA "de" ; mkA "fraco" ; } ; --*
lin pallid_3_A = mkA "pálido" ; --*
lin pallidness_N = mkN "palidez" ; --*
lin pallidum_N = variants {mkN "Globo" ; mkN "pallidus" ; } ; --*
lin pallium_1_N = variants {mkN "cortex" ; mkN "córtex" ; mkN "mantle" ; } ; --*
lin pallium_2_N = mkN "manto" ; --*
lin pallium_3_N = mkN "pálio" ; --*
lin pallor_N = mkN "palidez" ; --*
lin palm_1_N = mkN "palma" ; --*
lin palm_3_N = variants {mkN "palma" ; mkN "tree" ; } ; --*
lin palm_4_N = variants {mkN "condecoração" ; mkN "medalha" ; mkN "wreath" ; } ; --*
lin palmar_A = mkA "palmar" ; --*
lin palmistry_N = variants {mkN "leitura" ; mkN "quiromancia" ; mkN "reading" ; } ; --*
lin palm_oil_N = mkN "oil" ; --*
lin palm_V2 = variants {mkV2 (mkV "manusear") ; mkV2 (mkV "tocar") ; } ; --*
lin palmy_A = variants {mkA "lucrável" ; mkA "próspero" ; mkA "viçoso" ; } ; --*
lin pal_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin palpable_1_A = variants {mkA "físico" ; mkA "palpável" ; mkA "tangível" ; } ; --*
lin palpable_2_A = mkA "palpável" ; --*
lin palpable_3_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin palpitate_1_V = mkV "palpitar" ; --*
lin palpitate_2_V = variants {mkV "tiritar" ; mkV "tremer" ; mkV "vibrar" ; } ; --*
lin palpitation_1_N = variants {mkN "palpitação" ; mkN "Palpitação" ; } ; --*
lin palpitation_2_N = variants {mkN "palpitação" ; mkN "tremor" ; mkN "trêmulo" ; } ; --*
lin palsy_1_N = variants {mkN "marasmo" ; mkN "paralisia" ; } ; --*
lin palsy_V2 = mkV2 (mkV "paralisar") ; --*
lin palter_V = variants {mkV "around" ; mkV "embromar" ; mkV "enrolar" ; mkV "mentir" ; mkV "tergiversar" ; } ; --*
lin paltry_1_A = mkA "insignificante" ; --*
lin pamper_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin pamphlet_1_N = variants {mkN "brochura" ; mkN "folheto" ; mkN "livreto" ; mkN "opúsculo" ; mkN "panfleto" ; } ; --*
lin pamphlet_2_N = mkN "tratado" ; --*
lin pan_1_N = variants {mkN "caçarola" ; mkN "pan" ; } ; --*
lin pan_2_N = variants {mkN "god" ; mkN "Pã" ; } ; --*
lin pan_3_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "destruir") ; } ; --*
lin pan_4_N = variants {mkN "chimpanzé" ; mkN "Pan" ; } ; --*
lin panacea_1_N = variants {mkN "Panaceia" ; mkN "Panacéia" ; } ; --*
lin panacea_2_N = variants {mkN "panaceia" ; mkN "panacéia" ; } ; --*
lin panache_1_N = variants {mkN "elegância" ; mkN "estilo" ; } ; --*
lin panache_2_N = mkN "penacho" ; --*
lin panama_1_N = variants {mkN "of" ; mkN "Panamá" ; } ; --*
lin panama_1_PN = variants {mkPN "of" ; mkPN "Panamá" ; } ; --*
lin panama_2_N = variants {mkN "chapéu-panamá" ; mkN "hat" ; } ; --*
lin panama_2_PN = variants {mkPN "chapéu-panamá" ; mkPN "hat" ; } ; --*
lin panamanian_A = variants {mkA "panamaense" ; mkA "panamenho" ; mkA "panamense" ; } ; --*
lin panamanian_N = mkN "panamenho" ; --*
lin pancake_N = variants {mkN "bolo" ; mkN "cake" ; mkN "panqueca" ; } ; --*
lin pancreas_N = variants {mkN "Pancreas" ; mkN "pâncreas" ; mkN "Pâncreas" ; } ; --*
lin pancreatitis_N = mkN "pancreatite" ; --*
lin pancytopenia_N = mkN "pancitopenia" ; --*
lin panda_1_N = variants {mkN "bear" ; mkN "melanoleuca" ; mkN "panda" ; } ; --*
lin pandemic_N = variants {mkN "pandemia" ; mkN "Pandemias" ; } ; --*
lin pandemonium_N = variants {mkN "balbúrdia" ; mkN "caos" ; mkN "confusão" ; mkN "tumulto" ; } ; --*
lin pander_1_N = variants {mkN "cafetão" ; mkN "chulo" ; mkN "man" ; mkN "proxeneta" ; mkN "proxenetismo" ; mkN "safado" ; } ; --*
lin pander_1_V = mkV "indulgir" ; --*
lin pander_2_V = mkV "arranjar" ; --*
lin panderer_1_N = variants {mkN "cafetão" ; mkN "chulo" ; mkN "man" ; mkN "proxeneta" ; mkN "proxenetismo" ; mkN "safado" ; } ; --*
lin panderer_2_N = mkN "pândego" ; --*
lin pane_2_N = mkN "Apainelamento" ; --*
lin pane_3_N = variants {mkN "breaker" ; mkN "in" ; mkN "Lucy" ; mkN "pane" ; mkN "toons" ; } ; --*
lin panegyric_N = variants {mkN "elogio" ; mkN "panegírico" ; } ; --*
lin panel_1_N = mkN "painel" ; --*
lin panel_2_N = mkN "júri" ; --*
lin panel_2_V2 = mkV2 (mkV "selecionar") ; --*
lin panel_7_N = variants {mkN "box" ; mkN "caixa" ; } ; --*
lin panel_8_N = variants {mkN "board" ; mkN "panel" ; mkN "tabuleiro" ; } ; --*
lin paneling_N = mkN "Apainelamento" ; --*
lin panelling_N = mkN "Apainelamento" ; --*
lin panga_N = variants {mkN "catana" ; mkN "Catana" ; mkN "facão" ; mkN "peixeira" ; } ; --*
lin pangolin_N = variants {mkN "anteater" ; mkN "pangolim" ; mkN "tamanduá" ; } ; --*
lin panhandle_1_N = mkN "cabo" ; --*
lin panhandle_V = variants {mkV "esmolar" ; mkV "mendigar" ; mkV "pedir" ; } ; --*
lin panic_1_N = variants {mkN "medo" ; mkN "pânico" ; mkN "terror" ; } ; --*
lin panic_1_V = variants {mkV "apavorar" ; mkV "apavorar-se" ; mkV "temer" ; } ; --*
lin panic_2_N = variants {mkN "Panico" ; mkN "pânico" ; } ; --*
lin panic_2_V2 = mkV2 (mkV "apavorar") ; --*
lin panicle_N = variants {mkN "Panicula" ; mkN "panícula" ; mkN "Panícula" ; } ; --*
lin panjandrum_N = variants {mkN "dignitário" ; mkN "important" ; mkN "muckamuck" ; mkN "personalidade" ; mkN "Vip" ; mkN "VIP" ; } ; --*
lin panoplied_1_A = mkA "armado" ; --*
lin panoptic_2_A = mkA "amplo" ; --*
lin panorama_1_N = variants {mkN "panorama" ; mkN "vista" ; } ; --*
lin panorama_2_N = variants {mkN "diorama" ; mkN "panorama" ; mkN "Panorama" ; } ; --*
lin panoramic_A = mkA "panorâmico" ; --*
lin pansexual_N = mkN "pansexual" ; --*
lin pansy_1_N = variants {mkN "amor-perfeito" ; mkN "tricolor" ; } ; --*
lin pansy_2_N = variants {mkN "baitola" ; mkN "boiola" ; } ; --*
lin pansy_3_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin pant_1_V = variants {mkV "bufar" ; mkV "ofegar" ; } ; --*
lin pant_2_N = mkN "calça" ; --*
lin pant_2_V = mkV "arfar" ; --*
lin pant_3_N = mkN "ofego" ; --*
lin pantheism_1_N = mkN "panteísmo" ; --*
lin pantheism_2_N = mkN "panteísmo" ; --*
lin pantheist_N = mkN "panteísta" ; --*
lin pantheon_3_N = variants {mkN "panteão" ; mkN "Panteão" ; } ; --*
lin panther_1_N = variants {mkN "acanguçu" ; mkN "canguçu" ; mkN "jaguar" ; mkN "jaguaretê" ; mkN "onca" ; mkN "onça-pintada" ; } ; --*
lin panther_2_N = mkN "pantera" ; --*
lin panther_3_N = variants {mkN "concolor" ; mkN "leão-baio" ; mkN "lion" ; mkN "onça-parda" ; mkN "pantera" ; mkN "puma" ; mkN "suçuarana" ; } ; --*
lin pantie_1_N = mkN "calcinha" ; --*
lin pantograph_N = mkN "pantógrafo" ; --*
lin pantomime_N = variants {mkN "pantomima" ; mkN "show" ; } ; --*
lin pantryman_N = mkN "mordomo" ; --*
lin pantry_N = variants {mkN "aparador" ; mkN "bodega" ; mkN "despensa" ; mkN "doçaria" ; } ; --*
lin pant_V2 = mkV2 (mkV "arfar") ; --*
lin pantyhose_N = variants {mkN "meia-calça" ; mkN "meias-calças" ; } ; --*
lin panzer_N = mkN "Panzer" ; --*
lin pap_3_N = variants {mkN "bico" ; mkN "chupadouro" ; mkN "chupeta" ; mkN "mama" ; mkN "mamilo" ; mkN "teta" ; } ; --*
lin papa_1_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "papai" ; } ; --*
lin papacy_N = mkN "papado" ; --*
lin papain_N = mkN "papaína" ; --*
lin papal_A = mkA "papal" ; --*
lin paparazzo_N = mkN "paparazzo" ; --*
lin papaverine_N = mkN "Papaverina" ; --*
lin papaw_2_N = mkN "Asimina" ; --*
lin papaya_1_N = variants {mkN "Mamão" ; mkN "papaya" ; mkN "tree" ; } ; --*
lin papaya_2_N = variants {mkN "mamão" ; mkN "mamoeiro" ; mkN "papaia" ; } ; --*
lin paper_1_N = variants {mkN "carta" ; mkN "papel" ; mkN "Papel" ; } ; --*
lin paper_2_N = variants {mkN "ensaio" ; mkN "relatório" ; } ; --*
lin paper_3_N = variants {mkN "folha" ; mkN "jornal" ; mkN "Jornal" ; mkN "papel" ; } ; --*
lin paper_4_N = mkN "papel" ; --*
lin paper_5_N = mkN "artigo" ; --*
lin paper_8_N = variants {mkN "document" ; mkN "documento" ; mkN "documentos" ; } ; --*
lin paperback_A = variants {mkA "brochado" ; mkA "nãoencadernado" ; } ; --*
lin paperbacked_A = variants {mkA "brochado" ; mkA "nãoencadernado" ; } ; --*
lin paperback_N = variants {mkN "book" ; mkN "brochura" ; } ; --*
lin paperboy_N = mkN "ardina" ; --*
lin paperclip_1_N = variants {mkN "clip" ; mkN "clipe" ; } ; --*
lin paperwork_N = mkN "papelada" ; --*
lin papilledema_N = variants {mkN "edema" ; mkN "papiledema" ; mkN "Papiledema" ; } ; --*
lin papilloma_N = variants {mkN "papiloma" ; mkN "tumor" ; mkN "tumour" ; } ; --*
lin papist_1_A = variants {mkA "Catholic" ; mkA "católica" ; mkA "papista" ; mkA "romanista" ; } ; --*
lin papist_N = mkN "papismo" ; --*
lin paprika_1_N = variants {mkN "annuum" ; mkN "pepper" ; mkN "pimentão" ; mkN "pimento" ; } ; --*
lin paprika_2_N = mkN "páprica" ; --*
lin papuan_A = variants {mkA "papua" ; mkA "papuásio" ; } ; --*
lin papua_PN = mkPN "Papua" ; --*
lin papyrus_2_N = variants {mkN "Cyperus" ; mkN "paper" ; mkN "papyrus" ; mkN "plant" ; mkN "rush" ; } ; --*
lin papyrus_3_N = mkN "papiro" ; --*
lin par_1_N = mkN "par" ; --*
lin par_2_N = variants {mkN "eqüidade" ; mkN "equivalência" ; mkN "igualdade" ; mkN "Igualdade" ; } ; --*
lin para_3_N = mkN "paraquedista" ; --*
lin para_4_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin para_5_N = variants {mkN "Lusitania" ; mkN "Maria" ; mkN "Mary" ; mkN "Santa" ; } ; --*
lin parable_1_N = variants {mkN "alegoria" ; mkN "apólogo" ; mkN "Apólogo" ; mkN "parábola" ; } ; --*
lin parable_2_N = variants {mkN "parábola" ; mkN "Parábola" ; } ; --*
lin parabola_N = mkN "parábola" ; --*
lin parabolic_1_A = mkA "parabólico" ; --*
lin parabolic_2_A = mkA "parabólico" ; --*
lin parabolical_1_A = mkA "parabólico" ; --*
lin parabolical_2_A = mkA "parabólico" ; --*
lin paraboloid_N = variants {mkN "paraboloide" ; mkN "Parabolóide" ; } ; --*
lin parachute_N = mkN "paraquedas" ; --*
lin parachute_V2 = variants {mkV2 (mkV "pular") ; mkV2 (mkV "saltar") ; } ; --*
lin parachute_V = variants {mkV "pular" ; mkV "saltar" ; } ; --*
lin parachutist_N = variants {mkN "jumper" ; mkN "paraquedista" ; mkN "pára-quedista" ; } ; --*
lin parade_1_N = variants {mkN "Desfile" ; mkN "formaremparada" ; mkN "parada" ; } ; --*
lin parade_2_N = mkN "procissão" ; --*
lin parade_V2 = mkV2 (mkV "alardear") ; --*
lin paradiddle_N = variants {mkN "batida" ; mkN "roll" ; mkN "rufo" ; } ; --*
lin paradigm_1_N = mkN "paradigma" ; --*
lin paradigm_2_N = variants {mkN "Prototipo" ; mkN "protótipo" ; mkN "Protótipo" ; } ; --*
lin paradigm_4_N = mkN "paradigma" ; --*
lin paradise_1_N = variants {mkN "alturas" ; mkN "céu" ; mkN "land" ; mkN "olimpo" ; mkN "paraíso" ; mkN "Paraíso" ; } ; --*
lin paradoxical_A = mkA "paradoxal" ; --*
lin paradox_N = mkN "paradoxo" ; --*
lin paraffin_1_N = variants {mkN "parafina" ; mkN "wax" ; } ; --*
lin paraffin_2_N = variants {mkN "alcano" ; mkN "series" ; } ; --*
lin paragon_1_N = variants {mkN "ideal" ; mkN "ídolo" ; mkN "modelo" ; mkN "perfeição" ; } ; --*
lin paragon_2_N = mkN "apoteose" ; --*
lin paragraph_N = variants {mkN "alínea" ; mkN "parágrafo" ; } ; --*
lin paraguayan_A = mkA "paraguaio" ; --*
lin paraguayan_N = mkN "paraguaio" ; --*
lin paraguay_PN = variants {mkPN "of" ; mkPN "Paraguai" ; } ; --*
lin parakeet_1_N = variants {mkN "periquito" ; mkN "Piriquito" ; } ; --*
lin paralegal_N = variants {mkN "assistant" ; mkN "Técnico" ; } ; --*
lin parallax_N = mkN "paralaxe" ; --*
lin parallel_1_A = variants {mkA "paralela" ; mkA "paralelo" ; } ; --*
lin parallel_1_N = mkN "análogo" ; --*
lin parallel_2_A = mkA "paralelo" ; --*
lin parallel_2_N = variants {mkN "latitude" ; mkN "of" ; mkN "paralelo" ; } ; --*
lin parallel_3_N = variants {mkN "retas" ; mkN "Retas" ; } ; --*
lin parallelepiped_1_N = variants {mkN "Paralelepipedo" ; mkN "paralelepípedo" ; } ; --*
lin parallelism_N = variants {mkN "correspondência" ; mkN "paralelismo" ; mkN "semelhança" ; } ; --*
lin parallelogram_N = mkN "paralelogramo" ; --*
lin paralyse_1_V2 = variants {mkV2 (mkV "entorpecer") ; mkV2 (mkV "paralisar") ; } ; --*
lin paralyse_2_V2 = mkV2 (mkV "paralisar") ; --*
lin paralysis_N = variants {mkN "marasmo" ; mkN "paralisia" ; } ; --*
lin paralytic_1_A = mkA "paralítico" ; --*
lin paralytic_2_A = mkA "paralítico" ; --*
lin paralyze_1_V2 = variants {mkV2 (mkV "entorpecer") ; mkV2 (mkV "paralisar") ; } ; --*
lin paralyze_2_V2 = mkV2 (mkV "paralisar") ; --*
lin paramagnetism_N = mkN "paramagnetismo" ; --*
lin paramedic_1_N = variants {mkN "Paramedico" ; mkN "paramédico" ; } ; --*
lin parameter_1_N = variants {mkN "parâmetro" ; mkN "quantity" ; } ; --*
lin parameter_2_N = variants {mkN "parâmetro" ; mkN "parâmetros" ; } ; --*
lin parameter_3_N = variants {mkN "parâmetro" ; mkN "Parâmetro" ; } ; --*
lin parameter_4_N = variants {mkN "parâmetro" ; mkN "parâmetros" ; } ; --*
lin parametric_A = mkA "paramétrico" ; --*
lin paramilitary_A = mkA "paramilitar" ; --*
lin paramilitary_N = variants {mkN "Força" ; mkN "force" ; mkN "organisation" ; mkN "organization" ; mkN "unit" ; } ; --*
lin paramount_A = variants {mkA "o" ; mkA "preeminente" ; mkA "preponderante" ; mkA "primordial" ; } ; --*
lin paramour_2_N = variants {mkN "concubina" ; mkN "cortesã" ; mkN "odalisca" ; } ; --*
lin paramyxovirus_N = mkN "Paramyxovirus" ; --*
lin paranoiac_N = mkN "pessoa" ; --*
lin paranoia_N = variants {mkN "paranoia" ; mkN "paranóia" ; mkN "Paranóia" ; } ; --*
lin paranoid_A = variants {mkA "paranoico" ; mkA "paranóico" ; } ; --*
lin paranoid_N = mkN "pessoa" ; --*
lin paranormal_1_A = mkA "paranormal" ; --*
lin paranormal_2_A = variants {mkA "Fenômenos" ; mkA "paranormal" ; } ; --*
lin parapet_1_N = variants {mkN "Para" ; mkN "parapeito" ; } ; --*
lin paraphernalia_N = mkN "parafernália" ; --*
lin paraphilia_N = variants {mkN "parafilia" ; mkN "Parafilia" ; } ; --*
lin paraphrase_1_N = variants {mkN "Parafrase" ; mkN "paráfrase" ; } ; --*
lin paraphrase_V2 = mkV2 (mkV "parafrasear") ; --*
lin paraplegia_N = mkN "paraplegia" ; --*
lin parapodium_N = variants {mkN "parápode" ; mkN "Parápode" ; } ; --*
lin paraquat_N = mkN "Paraquat" ; --*
lin parasailing_N = variants {mkN "parapente" ; mkN "para-pente" ; } ; --*
lin parasite_1_N = variants {mkN "comensalismo" ; mkN "parasita" ; } ; --*
lin parasite_2_N = variants {mkN "parasita" ; mkN "sanguessuga" ; } ; --*
lin parasitic_3_A = mkA "parasita" ; --*
lin parasitical_2_A = mkA "parasita" ; --*
lin parasol_N = mkN "guarda-chuva" ; --*
lin parathion_N = mkN "paration" ; --*
lin paratrooper_N = mkN "paraquedista" ; --*
lin paratroops_N = variants {mkN "paraquedista" ; mkN "paraquedistas" ; } ; --*
lin parcel_1_N = mkN "pacote" ; --*
lin parcel_1_V2 = mkV2 (mkV "parcelar") ; --*
lin parcel_2_N = variants {mkN "parcela" ; mkN "parte" ; } ; --*
lin parcel_3_N = variants {mkN "of" ; mkN "região" ; mkN "terreno" ; } ; --*
lin parcel_3_V2 = mkV2 (mkV "embrulhar") ; --*
lin parcel_4_N = mkN "pacote" ; --*
lin parchment_2_N = variants {mkN "pergaminho" ; mkN "Pergaminho" ; } ; --*
lin parch_V2 = variants {mkV2 (mkV "estorricar") ; mkV2 (mkV "ressecar") ; } ; --*
lin pardon_1_N = mkN "perdão" ; --*
lin pardon_1_V2 = variants {mkV2 (mkV "desculpar") ; mkV2 (mkV "escusar") ; mkV2 (mkV "perdoar") ; } ; --*
lin pardon_2_N = variants {mkN "anistia" ; mkN "perdão" ; } ; --*
lin pardon_2_V2 = variants {mkV2 (mkV "escusar") ; mkV2 (mkV "perdoar") ; } ; --*
lin pardon_3_N = variants {mkN "amnistia" ; mkN "pardon" ; mkN "perdão" ; } ; --*
lin pardonable_A = mkA "perdoável" ; --*
lin pare_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin pare_3_V2 = variants {mkV2 (mkV "descascar") ; mkV2 (mkV "despelar") ; mkV2 (mkV "pelar") ; } ; --*
lin pare_4_V2 = variants {mkV2 (mkV "podar") ; mkV2 (mkV "recortar") ; } ; --*
lin pare_down_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin paregoric_N = variants {mkN "tincture" ; mkN "Tintura" ; } ; --*
lin parenchyma_1_N = mkN "parênquima" ; --*
lin parent_1_N = variants {mkN "genitor" ; mkN "mãe" ; mkN "pai" ; mkN "progenitor" ; } ; --*
lin parent_2_N = variants {mkN "pais" ; mkN "progenitor" ; } ; --*
lin parentage_2_N = mkN "paternidade" ; --*
lin parentage_3_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin parental_1_A = mkA "parental" ; --*
lin parental_2_A = variants {mkA "materno" ; mkA "parental" ; } ; --*
lin parenthesis_1_N = mkN "parêntese" ; --*
lin parenthesis_2_N = variants {mkN "excurso" ; mkN "parêntese" ; } ; --*
lin paresis_N = mkN "paresia" ; --*
lin paresthesia_1_N = variants {mkN "parestesia" ; mkN "Parestesia" ; } ; --*
lin parietal_A = mkA "parietal" ; --*
lin paring_2_N = mkN "casca" ; --*
lin paris_1_PN = variants {mkPN "capital" ; mkPN "of" ; mkPN "Paris" ; } ; --*
lin paris_3_PN = mkPN "Páris" ; --*
lin paris_4_PN = mkPN "Paris" ; --*
lin parish_1_N = variants {mkN "Freguesias" ; mkN "paróquia" ; mkN "paroquianos" ; } ; --*
lin parish_2_N = mkN "paróquia" ; --*
lin parishioner_N = mkN "paroquiano" ; --*
lin parisian_A = mkA "parisiense" ; --*
lin parisian_N = mkN "parisiense" ; --*
lin parity_2_N = mkN "Números" ; --*
lin parity_3_N = variants {mkN "bit" ; mkN "paridade" ; } ; --*
lin parity_4_N = variants {mkN "of" ; mkN "paridade" ; mkN "symmetry" ; } ; --*
lin parity_5_N = mkN "paridade" ; --*
lin park_1_N = variants {mkN "paisagens" ; mkN "parque" ; } ; --*
lin park_1_V2 = mkV2 (mkV "estacionar") ; --*
lin park_2_N = variants {mkN "espaços" ; mkN "parque" ; } ; --*
lin park_2_V2 = mkV2 (mkV "estacionar") ; --*
lin park_5_N = variants {mkN "area" ; mkN "garagem" ; mkN "lot" ; mkN "park" ; } ; --*
lin parka_N = variants {mkN "anoraque" ; mkN "parca" ; } ; --*
lin parking_1_N = mkN "estacionamento" ; --*
lin parking_2_N = variants {mkN "estacionamento" ; mkN "parques" ; } ; --*
lin park_V = mkV "estacionar" ; --*
lin parky_A = mkA "frio" ; --*
lin parliament_1_N = mkN "parlamento" ; --*
lin parliament_2_N = mkN "Dominó" ; --*
lin parliamentarian_2_N = mkN "parlamentar" ; --*
lin parliamentary_1_A = mkA "parlamentar" ; --*
lin parliamentary_2_A = mkA "parlamentar" ; --*
lin parliamentary_3_A = mkA "parlamentar" ; --*
lin parlor_1_N = variants {mkN "sala" ; mkN "salão" ; } ; --*
lin parlor_2_N = variants {mkN "room" ; mkN "sala" ; mkN "salão" ; } ; --*
lin parlour_1_N = variants {mkN "sala" ; mkN "salão" ; } ; --*
lin parlour_2_N = variants {mkN "room" ; mkN "sala" ; mkN "salão" ; } ; --*
lin parlous_A = variants {mkA "arriscado" ; mkA "periculoso" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin parochial_1_A = mkA "paroquial" ; --*
lin parochial_2_A = mkA "paroquial" ; --*
lin parody_1_N = mkN "paródia" ; --*
lin parody_1_V2 = mkV2 (mkV "parodiar") ; --*
lin parody_2_N = mkN "paródia" ; --*
lin parody_2_V2 = variants {mkV2 (mkV "arremedar") ; mkV2 (mkV "parodiar") ; } ; --*
lin parole_1_N = variants {mkN "of" ; mkN "palavra" ; } ; --*
lin parole_2_N = variants {mkN "contra-senha" ; mkN "palavra" ; mkN "password" ; mkN "senha" ; } ; --*
lin parole_3_N = variants {mkN "condicional" ; mkN "liberdade" ; } ; --*
lin paronychia_1_N = mkN "Paronychia" ; --*
lin paroquet_1_N = variants {mkN "periquito" ; mkN "Piriquito" ; } ; --*
lin parotitis_N = mkN "parotidite" ; --*
lin paroxysm_N = variants {mkN "convulsão" ; mkN "crise" ; mkN "paroxismo" ; } ; --*
lin paroxytone_N = mkN "paroxítona" ; --*
lin parr_1_N = variants {mkN "Catarina" ; mkN "Parr" ; } ; --*
lin parrot_1_N = variants {mkN "papagaio" ; mkN "Psittaciformes" ; } ; --*
lin parry_1_V2 = variants {mkV2 (mkV "bloquear") ; mkV2 (mkV "defletir") ; mkV2 (mkV "impedir") ; } ; --*
lin parry_2_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin parsec_N = mkN "parsec" ; --*
lin parse_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "analizar") ; mkV2 (mkV "decompor") ; } ; --*
lin parsimony_1_N = variants {mkN "parcimónia" ; mkN "parcimônia" ; } ; --*
lin parsimony_2_N = variants {mkN "parcimónia" ; mkN "Parcimônia" ; } ; --*
lin parsley_1_N = variants {mkN "crispum" ; mkN "salsa" ; } ; --*
lin parsley_2_N = mkN "salsa" ; --*
lin parsnip_2_N = variants {mkN "Pastinaca" ; mkN "sativa" ; } ; --*
lin parsonage_N = mkN "reitoria" ; --*
lin parson_N = variants {mkN "cura" ; mkN "ministro" ; mkN "of" ; mkN "pároco" ; mkN "pastor" ; mkN "reitor" ; mkN "sacerdate" ; mkN "vigário" ; } ; --*
lin part_10_N = mkN "risco" ; --*
lin part_12_N = mkN "contribuição" ; --*
lin part_1_V = variants {mkV "partir" ; mkV "separar" ; } ; --*
lin part_2_N = variants {mkN "parte" ; mkN "porção" ; } ; --*
lin part_2_V = variants {mkV "partir" ; mkV "separar" ; mkV "up" ; } ; --*
lin part_3_N = variants {mkN "parte" ; mkN "pedaço" ; mkN "porção" ; mkN "secção" ; mkN "tomo" ; } ; --*
lin part_3_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin part_4_V = variants {mkV "dividir" ; mkV "separar" ; } ; --*
lin part_5_N = mkN "região" ; --*
lin part_5_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "partir") ; mkV2 (mkV "separar") ; } ; --*
lin part_6_N = variants {mkN "função" ; mkN "papel" ; } ; --*
lin part_7_N = variants {mkN "papel" ; mkN "personagem" ; mkN "role" ; } ; --*
lin part_8_N = mkN "atribuição" ; --*
lin part_9_N = mkN "componente" ; --*
lin part_Adv = variants {mkAdv "em" ; mkAdv "parcialmente" ; } ; --*
lin partake_3_V2 = mkV2 (mkV "tocar") ; --*
lin parterre_1_N = mkN "parterre" ; --*
lin parterre_2_N = variants {mkN "circle" ; mkN "platéia" ; } ; --*
lin parthenocarpy_N = mkN "Partenocárpico" ; --*
lin parthenogenesis_2_N = variants {mkN "Partenogenese" ; mkN "partenogénese" ; mkN "partenogênese" ; mkN "Partenogênese" ; } ; --*
lin parthian_A = mkA "parta" ; --*
lin partial_1_A = mkA "parcial" ; --*
lin partial_1_N = variants {mkN "derivada" ; mkN "derivative" ; } ; --*
lin partial_2_A = mkA "parcial" ; --*
lin partial_2_N = variants {mkN "sobretom" ; mkN "tone" ; } ; --*
lin partiality_2_N = variants {mkN "parcialidade" ; mkN "partidarismo" ; } ; --*
lin participant_1_N = variants {mkN "parte" ; mkN "participante" ; } ; --*
lin participant_2_N = variants {mkN "jogador" ; mkN "participante" ; } ; --*
lin participate_1_V2 = variants {mkV2 (mkV "comparticipar") ; mkV2 (mkV "part") ; mkV2 (mkV "participar") ; } ; --*
lin participate_1_V = variants {mkV "comparticipar" ; mkV "part" ; mkV "participar" ; } ; --*
lin participate_2_V2 = mkV2 (mkV "entrar") ; --*
lin participation_1_N = mkN "participação" ; --*
lin participation_2_N = mkN "participação" ; --*
lin participial_A = mkA "participial" ; --*
lin participle_N = mkN "particípio" ; --*
lin particle_1_N = variants {mkN "átomo" ; mkN "partícula" ; } ; --*
lin particle_2_N = variants {mkN "particle" ; mkN "partícula" ; mkN "Partícula" ; mkN "partículas" ; } ; --*
lin particle_3_N = mkN "partícula" ; --*
lin parti_coloured_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin particular_2_A = variants {mkA "especial" ; mkA "excepcional" ; } ; --*
lin particular_2_N = variants {mkN "componente" ; mkN "elemento" ; } ; --*
lin particular_3_A = variants {mkA "avulso" ; mkA "especial" ; mkA "particular" ; mkA "peculiar" ; mkA "próprio" ; } ; --*
lin particular_4_A = mkA "especial" ; --*
lin particular_5_A = variants {mkA "detalhista" ; mkA "exigente" ; } ; --*
lin particularity_N = mkN "particularidade" ; --*
lin particularize_1_V = variants {mkV "especificar" ; mkV "particularizar" ; } ; --*
lin particularize_V2 = variants {mkV2 (mkV "especificar") ; mkV2 (mkV "particularizar") ; } ; --*
lin particulate_N = variants {mkN "material" ; mkN "matter" ; } ; --*
lin parting_1_N = variants {mkN "despedida" ; mkN "partida" ; } ; --*
lin parting_2_N = mkN "risco" ; --*
lin partisan_1_N = variants {mkN "fanático" ; mkN "xiita" ; } ; --*
lin partisanship_N = variants {mkN "parcialidade" ; mkN "partidarismo" ; } ; --*
lin partition_1_N = variants {mkN "divisória" ; mkN "parede" ; mkN "paredes" ; } ; --*
lin partition_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "partilhar") ; } ; --*
lin partition_2_N = mkN "partição" ; --*
lin partition_4_N = variants {mkN "divisão" ; mkN "partição" ; mkN "segmentação" ; mkN "separação" ; } ; --*
lin partitive_1_A = mkA "partitivo" ; --*
lin partitive_N = mkN "partitivo" ; --*
lin partly_Adv = variants {mkAdv "em" ; mkAdv "parcialmente" ; } ; --*
lin partner_1_N = variants {mkN "colega" ; mkN "cónjuge" ; mkN "cônjuge" ; mkN "esposa" ; mkN "half" ; mkN "homem" ; mkN "marido" ; mkN "person" ; } ; --*
lin partner_1_V2 = mkV2 (mkV "associar-se") ; --*
lin partner_2_N = variants {mkN "colaborador" ; mkN "colega" ; mkN "parceiro" ; } ; --*
lin partner_3_N = variants {mkN "colega" ; mkN "parceiro" ; mkN "sócio" ; } ; --*
lin partnership_3_N = mkN "sociedade" ; --*
lin part_of_N2 = variants {mkN2 (mkN "categoria") noPrep ; mkN2 (mkN "componente") noPrep ; mkN2 (mkN "part") noPrep ; mkN2 (mkN "parte") noPrep ; mkN2 (mkN "porção") noPrep ; } ; --*
lin part_owner_N = mkN "sócio" ; --*
lin partridge_1_N = mkN "perdiz" ; --*
lin partridge_2_N = mkN "perdiz" ; --*
lin parts_N = mkN "partes" ; --*
lin part_time_A = mkA "(de)" ; --*
lin parturient_2_A = variants {mkA "parturienta" ; mkA "parturiente" ; } ; --*
lin parturition_N = variants {mkN "birth" ; mkN "nascimento" ; } ; --*
lin party_1_N = variants {mkN "legenda" ; mkN "partido" ; mkN "party" ; } ; --*
lin party_2_N = mkN "festa" ; --*
lin party_4_N = variants {mkN "balada" ; mkN "banquete" ; mkN "festa" ; mkN "night" ; mkN "reveillon" ; } ; --*
lin parvenu_2_A = variants {mkA "parvenida" ; mkA "parvenido" ; } ; --*
lin parvovirus_N = variants {mkN "Parvovirus" ; mkN "parvovírus" ; mkN "Parvovírus" ; } ; --*
lin pascal_1_N = variants {mkN "pascal" ; mkN "Pascal" ; } ; --*
lin pascal_2_N = variants {mkN "Blaise" ; mkN "Pascal" ; } ; --*
lin pascal_3_N = variants {mkN "Pascal" ; mkN "PASCAL" ; } ; --*
lin pasha_1_N = mkN "paxá" ; --*
lin pashto_1_N = variants {mkN "afegane" ; mkN "afegão" ; mkN "Língua" ; mkN "pastó" ; } ; --*
lin pas_N = mkN "pas" ; --*
lin pass_10_V = mkV "fazer" ; --*
lin pass_11_V = variants {mkV "correr" ; mkV "passar" ; } ; --*
lin pass_13_V = variants {mkV "desaparecer" ; mkV "esvanecer" ; mkV "off" ; mkV "over" ; } ; --*
lin pass_14_N = mkN "tentativa" ; --*
lin pass_14_V = variants {mkV "it" ; mkV "passar" ; } ; --*
lin pass_15_N = mkN "lance" ; --*
lin pass_15_V = variants {mkV "avançar" ; mkV "exceder" ; mkV "past" ; mkV "superar" ; mkV "transcender" ; } ; --*
lin pass_16_N = mkN "aprovação" ; --*
lin pass_16_V = mkV "passar" ; --*
lin pass_18_V = mkV "acontecer" ; --*
lin pass_1_N = variants {mkN "andada" ; mkN "on" ; } ; --*
lin pass_1_V = variants {mkV "across" ; mkV "passar" ; mkV "through" ; } ; --*
lin pass_22_V = variants {mkV "pass" ; mkV "passar" ; } ; --*
lin pass_23_V = variants {mkV "autorizar" ; mkV "permitir" ; } ; --*
lin pass_24_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin pass_25_V = mkV "expelir" ; --*
lin pass_3_V = mkV "legislar" ; --*
lin pass_4_N = variants {mkN "pass" ; mkN "Passo" ; mkN "Passos" ; } ; --*
lin pass_4_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin pass_5_N = mkN "passaporte" ; --*
lin pass_5_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "passar") ; } ; --*
lin pass_6_N = variants {mkN "passe" ; mkN "passer" ; } ; --*
lin pass_6_V = variants {mkV "estender" ; mkV "ir" ; mkV "levar" ; } ; --*
lin pass_8_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin passage_1_N = variants {mkN "passagem" ; mkN "transição" ; } ; --*
lin passage_2_N = mkN "passagem" ; --*
lin passage_3_N = mkN "estrada" ; --*
lin passage_7_N = mkN "canal" ; --*
lin passage_9_N = mkN "passagem" ; --*
lin passageway_1_N = variants {mkN "corredor" ; mkN "galeria" ; mkN "passagem" ; mkN "viela" ; } ; --*
lin passageway_2_N = mkN "canal" ; --*
lin pass_around_1_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "lançar") ; mkV2 (mkV "on") ; } ; --*
lin pass_around_2_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin pass_away_1_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin pass_by_V = variants {mkV "by" ; mkV "ir" ; mkV "past" ; } ; --*
lin passenger_N = mkN "passageiro" ; --*
lin passer_1_N = variants {mkN "pedestre" ; mkN "transeunte" ; } ; --*
lin passer_5_N = mkN "Passer" ; --*
lin passerine_N = variants {mkN "bird" ; mkN "Passeriformes" ; } ; --*
lin passing_1_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "passageiro" ; mkA "temporário" ; mkA "transitório" ; } ; --*
lin passing_2_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin passing_3_N = mkN "passagem" ; --*
lin passing_7_N = mkN "aprovação" ; --*
lin passing_Adv = variants {mkAdv "demasiado" ; mkAdv "excessivo" ; mkAdv "extremamente" ; mkAdv "muito" ; } ; --*
lin passion_1_N = variants {mkN "ardor" ; mkN "paixão" ; } ; --*
lin passion_2_N = mkN "paixão" ; --*
lin passion_3_N = mkN "paixão" ; --*
lin passion_4_N = variants {mkN "cacoete" ; mkN "mania" ; } ; --*
lin passion_5_N = mkN "paixão" ; --*
lin passion_6_N = variants {mkN "afeição" ; mkN "amor" ; mkN "paixão" ; mkN "Paixão" ; } ; --*
lin passion_7_N = variants {mkN "of" ; mkN "Paixão" ; } ; --*
lin passionate_A = mkA "passional" ; --*
lin passive_1_A = variants {mkA "inativo" ; mkA "passivo" ; } ; --*
lin passive_2_A = variants {mkA "pacífico" ; mkA "passivo" ; } ; --*
lin pass_off_5_V = variants {mkV "about" ; mkV "ocorrer" ; mkV "off" ; mkV "on" ; mkV "out" ; mkV "passar" ; mkV "place" ; mkV "suceder" ; } ; --*
lin pass_on_1_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "passar") ; } ; --*
lin pass_on_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "on") ; } ; --*
lin pass_on_3_V = variants {mkV "ganhar" ; mkV "on" ; } ; --*
lin pass_on_6_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "lançar") ; mkV2 (mkV "on") ; } ; --*
lin pass_on_7_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "along") ; mkV2 (mkV "comunicar") ; mkV2 (mkV "on") ; mkV2 (mkV "transmitir") ; } ; --*
lin pass_out_1_V = variants {mkV "desfalecer" ; mkV "desmaiar" ; mkV "esvanecer" ; mkV "out" ; } ; --*
lin pass_over_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "pular") ; } ; --*
lin pass_over_2_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin pass_over_3_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin pass_over_4_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "sobrevoar") ; } ; --*
lin pass_over_4_V = variants {mkV "over" ; mkV "sobrevoar" ; } ; --*
lin pass_over_5_V2 = variants {mkV2 (mkV "enxugar") ; mkV2 (mkV "limpar") ; mkV2 (mkV "over") ; } ; --*
lin pass_over_5_V = variants {mkV "enxugar" ; mkV "limpar" ; mkV "over" ; } ; --*
lin passover_N = variants {mkN "of" ; mkN "Páscoa" ; mkN "Pessach" ; } ; --*
lin passport_1_N = mkN "passaporte" ; --*
lin passport_2_N = variants {mkN "passaporte" ; mkN "Passaportes" ; } ; --*
lin passport_3_N = mkN "passaporte" ; --*
lin pass_through_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin pass_through_3_V2 = variants {mkV2 (mkV "infiltrar") ; mkV2 (mkV "through") ; } ; --*
lin pass_up_1_V2 = variants {mkV2 (mkV "declinar") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; mkV2 (mkV "up") ; } ; --*
lin password_N = variants {mkN "contra-senha" ; mkN "palavra" ; mkN "password" ; mkN "senha" ; } ; --*
lin past_1_A = mkA "passado" ; --*
lin past_1_N = variants {mkN "passado" ; mkN "times" ; } ; --*
lin past_3_N = variants {mkN "pretérito" ; mkN "tense" ; } ; --*
lin pasta_2_N = variants {mkN "massa" ; mkN "Massa" ; mkN "paste" ; } ; --*
lin past_Adv = mkAdv "por" ; --*
lin paste_1_V2 = mkV2 (mkV "colar") ; --*
lin paste_2_N = mkN "strass" ; --*
lin paste_4_N = mkN "pasta" ; --*
lin pastel_N = mkN "Pastel" ; --*
lin paster_2_N = variants {mkN "etiqueta" ; mkN "label" ; } ; --*
lin pasteurization_1_N = variants {mkN "pasteurização" ; mkN "Pasteurização" ; } ; --*
lin pasteurize_1_V2 = mkV2 (mkV "pasteurizar") ; --*
lin pastiche_1_N = mkN "Pout-pourri" ; --*
lin pastiche_2_N = mkN "pastiche" ; --*
lin pastime_N = variants {mkN "entreterimento" ; mkN "jogo" ; mkN "passatempo" ; } ; --*
lin pastis_N = mkN "pastis" ; --*
lin pastor_1_N = variants {mkN "cura" ; mkN "ministro" ; mkN "of" ; mkN "pároco" ; mkN "pastor" ; mkN "reitor" ; mkN "sacerdate" ; mkN "vigário" ; } ; --*
lin pastoral_1_A = mkA "pastoral" ; --*
lin pastoral_3_A = mkA "bucólico" ; --*
lin pastrami_N = mkN "pastrami" ; --*
lin pastry_1_N = variants {mkN "dough" ; mkN "massa" ; } ; --*
lin pastry_2_N = mkN "pastel" ; --*
lin pasturage_2_N = variants {mkN "pasto" ; mkN "pastos" ; } ; --*
lin pasture_1_N = variants {mkN "land" ; mkN "pastagens" ; mkN "pasto" ; mkN "prado" ; } ; --*
lin pasture_1_V2 = mkV2 (mkV "pastar") ; --*
lin pasture_1_V = mkV "pastar" ; --*
lin pasture_2_N = variants {mkN "pasto" ; mkN "pastos" ; } ; --*
lin pasture_2_V = mkV "pastar" ; --*
lin pasty_2_A = mkA "viscoso" ; --*
lin pat_1_V2 = mkV2 (mkV "acariciar") ; --*
lin pat_1_V = mkV "acariciar" ; --*
lin pat_2_A = mkA "atempado" ; --*
lin pat_2_N = mkN "baterdeleve" ; --*
lin pat_2_PN = mkPN "baterdeleve" ; --*
lin pat_2_V2 = mkV2 (mkV "dar") ; --*
lin pataca_N = variants {mkN "a" ; mkN "pataca" ; } ; --*
lin patch_1_N = mkN "mancha" ; --*
lin patch_2_N = variants {mkN "campos" ; mkN "of" ; } ; --*
lin patch_3_N = variants {mkN "patch" ; mkN "remendo" ; } ; --*
lin patch_3_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "up") ; } ; --*
lin patch_4_N = variants {mkN "instante" ; mkN "momento" ; mkN "quando" ; mkN "segundo" ; mkN "tempo" ; } ; --*
lin patch_4_V2 = mkV2 (mkV "consertar") ; --*
lin patch_8_N = variants {mkN "Tapa" ; mkN "tapa-olho" ; } ; --*
lin patch_9_N = variants {mkN "atadura" ; mkN "esparadrapo" ; mkN "ligadura" ; mkN "penso" ; } ; --*
lin patchouli_1_N = variants {mkN "cablin" ; mkN "Patchouli" ; } ; --*
lin patchwork_3_N = mkN "patchwork" ; --*
lin patchy_A = variants {mkA "cheio" ; mkA "desigual" ; } ; --*
lin pate_de_foie_gras_N = variants {mkN "de" ; mkN "gras" ; } ; --*
lin patella_1_N = variants {mkN "patela" ; mkN "Patela" ; mkN "rótula" ; } ; --*
lin patellar_A = mkA "patelar" ; --*
lin patency_1_N = mkN "patência" ; --*
lin patent_1_N = variants {mkN "of" ; mkN "patente" ; } ; --*
lin patent_2_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin patent_2_N = variants {mkN "carta-patente" ; mkN "patent" ; } ; --*
lin patent_2_V2 = mkV2 (mkV "patentear") ; --*
lin patentee_N = mkN "patenteador" ; --*
lin paterfamilias_N = mkN "patriarca" ; --*
lin paternal_1_A = mkA "paternal" ; --*
lin paternal_2_A = mkA "paterno" ; --*
lin paternal_3_A = variants {mkA "materno" ; mkA "parental" ; } ; --*
lin paternalism_N = mkN "paternalismo" ; --*
lin paternity_2_N = mkN "paternidade" ; --*
lin paternoster_2_N = mkN "pai-nosso" ; --*
lin path_1_N = variants {mkN "caminho" ; mkN "of" ; } ; --*
lin path_2_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "trilha" ; } ; --*
lin path_3_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "itinerário" ; mkN "itinerários" ; mkN "linha" ; mkN "percurso" ; mkN "rota" ; } ; --*
lin path_4_N = variants {mkN "caminho" ; mkN "curso" ; } ; --*
lin pathetic_1_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin pathetic_2_A = mkA "patético" ; --*
lin pathetic_3_A = mkA "ridículo" ; --*
lin pathogenesis_N = mkN "patogênese" ; --*
lin pathogen_N = variants {mkN "Agente" ; mkN "microrganismos" ; mkN "patógeno" ; } ; --*
lin pathological_1_A = mkA "patológico" ; --*
lin pathological_2_A = mkA "patológico" ; --*
lin pathological_3_A = variants {mkA "mórbido" ; mkA "patológico" ; } ; --*
lin pathologist_N = mkN "patologista" ; --*
lin pathology_1_N = mkN "patologia" ; --*
lin pathology_2_N = variants {mkN "doença" ; mkN "patologia" ; } ; --*
lin pathos_2_N = variants {mkN "coisa" ; mkN "compaixão" ; mkN "piedade" ; } ; --*
lin pathway_2_N = variants {mkN "caminho" ; mkN "caminhos" ; mkN "senda" ; mkN "trilho" ; mkN "trilhos" ; } ; --*
lin patience_1_N = variants {mkN "longanimidade" ; mkN "paciência" ; } ; --*
lin patience_2_N = variants {mkN "paciência" ; mkN "Paciência" ; } ; --*
lin patient_1_N = variants {mkN "paciente" ; mkN "Paciente" ; } ; --*
lin patient_A = mkA "paciente" ; --*
lin patina_1_N = variants {mkN "pátina" ; mkN "zinabre" ; } ; --*
lin patio_N = variants {mkN "pátio" ; mkN "terraço" ; } ; --*
lin patisserie_N = variants {mkN "confeitaria" ; mkN "patisseria" ; } ; --*
lin patois_1_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin patois_2_N = mkN "Patoá" ; --*
lin patrai_PN = variants {mkPN "Patras" ; mkPN "Pátras" ; } ; --*
lin patriarch_1_N = mkN "patriarca" ; --*
lin patriarch_2_N = mkN "patriarca" ; --*
lin patriarch_3_N = mkN "patriarca" ; --*
lin patriarch_4_N = mkN "patriarca" ; --*
lin patriarchate_2_N = mkN "patriarcado" ; --*
lin patriarchy_N = mkN "patriarcado" ; --*
lin patrician_2_A = variants {mkA "aristocrata" ; mkA "aristocrático" ; } ; --*
lin patrician_2_N = variants {mkN "aristocrata" ; mkN "blood" ; mkN "patrício" ; } ; --*
lin patrick_PN = variants {mkPN "Patrick" ; mkPN "São" ; } ; --*
lin patrimonial_A = variants {mkA "hereditário" ; mkA "patrimonial" ; } ; --*
lin patrimony_1_N = mkN "patrimônio" ; --*
lin patrimony_2_N = mkN "patrimônio" ; --*
lin patriotic_1_A = variants {mkA "leal" ; mkA "patriótico" ; } ; --*
lin patriotism_N = variants {mkN "nacionalismo" ; mkN "patriotismo" ; mkN "Patriotismo" ; } ; --*
lin patriot_N = mkN "patriota" ; --*
lin patristics_1_N = mkN "patrística" ; --*
lin patristics_2_N = mkN "patrística" ; --*
lin patrol_1_N = variants {mkN "patrulha" ; mkN "patrulhe" ; mkN "ronda" ; } ; --*
lin patrol_3_N = mkN "patrulha" ; --*
lin patrol_V2 = mkV2 (mkV "patrulhar") ; --*
lin patrol_V = mkV "patrulhar" ; --*
lin patron_1_N = variants {mkN "cliente" ; mkN "freguês" ; mkN "habitual" ; mkN "patrono" ; } ; --*
lin patron_3_N = variants {mkN "fiador" ; mkN "padrinho" ; mkN "Patrocinio" ; } ; --*
lin patronage_1_N = variants {mkN "mecenato" ; mkN "proteção" ; } ; --*
lin patronage_2_N = variants {mkN "clientela" ; mkN "freguesia" ; } ; --*
lin patronage_3_N = mkN "condescendência" ; --*
lin patronage_5_N = variants {mkN "negociação" ; mkN "transação" ; } ; --*
lin patronize_1_V2 = variants {mkV2 (mkV "fiar") ; mkV2 (mkV "patrocinar") ; } ; --*
lin patronize_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "patrocinar") ; } ; --*
lin patronize_3_V2 = mkV2 (mkV "condescender") ; --*
lin patronize_4_V2 = variants {mkV2 (mkV "going") ; mkV2 (mkV "patrocinar") ; mkV2 (mkV "suportar") ; } ; --*
lin patronize_5_V2 = mkV2 (mkV "patrocinar") ; --*
lin patronymic_1_N = mkN "patronímico" ; --*
lin patronymic_A = mkA "patronímico" ; --*
lin patten_N = mkN "tamanco" ; --*
lin patter_1_V = mkV "borrifar" ; --*
lin pattern_1_N = variants {mkN "forma" ; mkN "padrão" ; } ; --*
lin pattern_2_N = variants {mkN "costume" ; mkN "hábito" ; } ; --*
lin pattern_3_N = mkN "ornamento" ; --*
lin pattern_4_N = mkN "pauta" ; --*
lin pattern_5_N = variants {mkN "modelo" ; mkN "molde" ; mkN "norma" ; mkN "Padrões" ; } ; --*
lin pattern_6_N = variants {mkN "desenho" ; mkN "esquema" ; mkN "figura" ; mkN "ilustração" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin paucity_N = mkN "escassez" ; --*
lin paul_2_PN = variants {mkPN "of" ; mkPN "Paul" ; mkPN "Paulo" ; mkPN "the" ; } ; --*
lin paunch_N = mkN "pança" ; --*
lin paunchy_A = variants {mkA "abdominal" ; mkA "pançudo" ; } ; --*
lin pauperism_N = variants {mkN "indigência" ; mkN "miséria" ; } ; --*
lin pauperization_1_N = variants {mkN "indigência" ; mkN "miséria" ; } ; --*
lin pauperization_2_N = mkN "empobrecimento" ; --*
lin pauperize_1_V2 = mkV2 (mkV "empobrecer") ; --*
lin pause_1_N = variants {mkN "fazerumapausa" ; mkN "interrupção" ; mkN "pausa" ; mkN "suspensão" ; } ; --*
lin pause_1_V = mkV "vacilar" ; --*
lin pause_2_N = variants {mkN "intervalo" ; mkN "pausa" ; } ; --*
lin pause_2_V = variants {mkV "interromper" ; mkV "parar" ; mkV "pausar" ; } ; --*
lin pavement_2_N = variants {mkN "material" ; mkN "Piso" ; } ; --*
lin pavement_3_N = variants {mkN "calçada" ; mkN "passeio" ; } ; --*
lin pave_V2 = mkV2 (mkV "pavimentar") ; --*
lin pavilion_N = mkN "pavilhão" ; --*
lin paving_1_N = variants {mkN "material" ; mkN "Piso" ; } ; --*
lin pavlova_1_N = variants {mkN "Anna" ; mkN "Pavlova" ; } ; --*
lin pavlova_2_N = mkN "pavlova" ; --*
lin paw_1_N = variants {mkN "Pata" ; mkN "pé" ; } ; --*
lin paw_2_N = mkN "mão" ; --*
lin pawl_N = mkN "prendedor" ; --*
lin pawn_1_N = mkN "penhor" ; --*
lin pawn_2_N = mkN "peão" ; --*
lin pawn_3_N = mkN "peão" ; --*
lin pawnshop_N = variants {mkN "casa" ; mkN "office" ; mkN "shop" ; } ; --*
lin pawn_V2 = mkV2 (mkV "empenhar") ; --*
lin pawpaw_1_N = variants {mkN "Mamão" ; mkN "papaya" ; mkN "tree" ; } ; --*
lin pawpaw_3_N = mkN "Asimina" ; --*
lin pax_N = variants {mkN "of" ; mkN "paz" ; } ; --*
lin pax_romana_N = mkN "Romana" ; --*
lin pay_1_V2 = mkV2 (mkV "pagar") ; --*
lin pay_5_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin pay_6_V2 = mkV2 (mkV "prestar") ; --*
lin payable_A = variants {mkA "coletável" ; mkA "pagável" ; } ; --*
lin pay_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "premiar") ; mkV2 (mkV "recompensar") ; } ; --*
lin pay_back_1_V = variants {mkV "back" ; mkV "premiar" ; mkV "recompensar" ; } ; --*
lin payback_2_N = mkN "vingança" ; --*
lin paycheck_N = variants {mkN "check" ; mkN "contra-cheque" ; } ; --*
lin pay_claim_N = mkN "claim" ; --*
lin payload_1_N = variants {mkN "ogiva" ; mkN "Ogiva" ; } ; --*
lin payload_2_N = mkN "carga" ; --*
lin payment_1_N = variants {mkN "pagamento" ; mkN "recompensa" ; } ; --*
lin payment_2_N = mkN "pagamento" ; --*
lin pay_N = variants {mkN "ordenado" ; mkN "remuneração" ; mkN "retribuição" ; mkN "salário" ; } ; --*
lin payoff_2_N = variants {mkN "dinheiro" ; mkN "suborno" ; } ; --*
lin payoff_3_N = variants {mkN "receita" ; mkN "renda" ; mkN "rendimento" ; } ; --*
lin pay_off_4_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin pay_off_5_V2 = mkV2 (mkV "off") ; --*
lin pay_off_5_V = mkV "off" ; --*
lin payola_N = variants {mkN "Jabacule" ; mkN "Jabaculê" ; } ; --*
lin pay_out_V = variants {mkV "gastar" ; mkV "out" ; } ; --*
lin payroll_3_N = variants {mkN "department" ; mkN "Folha" ; } ; --*
lin pay_up_V = variants {mkV "pagar" ; mkV "up" ; } ; --*
lin pay_V = variants {mkV "pagar" ; mkV "up" ; } ; --*
lin pay_VV = variants {mkVV (mkV "pagar") ; mkVV (mkV "valer") ; } ; --*
lin pc_PN = variants {mkPN "Computador" ; mkPN "computer" ; mkPN "microcomputadores" ; mkPN "PC" ; } ; --*
lin pea_1_N = variants {mkN "ervilha" ; mkN "ervilheira" ; } ; --*
lin pea_2_N = mkN "ervilha" ; --*
lin pea_3_N = variants {mkN "ervilha" ; mkN "plant" ; } ; --*
lin peace_1_N = mkN "paz" ; --*
lin peace_2_N = mkN "paz" ; --*
lin peace_3_N = variants {mkN "of" ; mkN "paz" ; mkN "Paz" ; mkN "repouso" ; mkN "serenidade" ; } ; --*
lin peace_4_N = variants {mkN "security" ; mkN "segurança" ; } ; --*
lin peace_5_N = variants {mkN "pacificação" ; mkN "paz" ; mkN "treaty" ; } ; --*
lin peaceable_2_A = mkA "pacífico" ; --*
lin peaceable_3_A = mkA "pacífico" ; --*
lin peaceableness_N = mkN "paz" ; --*
lin peaceful_1_A = mkA "pacífico" ; --*
lin peaceful_2_A = variants {mkA "pacífico" ; mkA "passivo" ; } ; --*
lin peacefulness_1_N = mkN "paz" ; --*
lin peacefulness_2_N = variants {mkN "of" ; mkN "paz" ; mkN "Paz" ; mkN "repouso" ; mkN "serenidade" ; } ; --*
lin peacekeeping_N = variants {mkN "Boinas" ; mkN "mission" ; mkN "operation" ; } ; --*
lin peacemaker_1_N = variants {mkN "conciliador" ; mkN "pacificador" ; } ; --*
lin peach_1_N = variants {mkN "persica" ; mkN "pessegueiro" ; mkN "tree" ; } ; --*
lin peach_2_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin peach_3_N = mkN "pêssego" ; --*
lin peach_4_N = variants {mkN "pink" ; mkN "salmão" ; } ; --*
lin peach_V = variants {mkV "falar" ; mkV "out" ; mkV "the" ; } ; --*
lin peachy_1_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin peacock_1_N = variants {mkN "butterfly" ; mkN "Inachis" ; mkN "io" ; } ; --*
lin peacock_2_N = mkN "pavão" ; --*
lin peafowl_N = variants {mkN "of" ; mkN "pavão" ; } ; --*
lin peahen_N = mkN "pavoa" ; --*
lin peak_1_N = mkN "máximo" ; --*
lin peak_2_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin peak_3_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin peak_4_N = variants {mkN "cima" ; mkN "cume" ; mkN "pico" ; mkN "topo" ; } ; --*
lin peak_5_N = variants {mkN "pico" ; mkN "ponta" ; } ; --*
lin peak_6_N = variants {mkN "topo" ; mkN "vértice" ; } ; --*
lin peal_1_V = mkV "soar" ; --*
lin peal_2_V = variants {mkV "soar" ; mkV "tocar" ; } ; --*
lin peanut_1_N = mkN "aráquida" ; --*
lin peanut_2_N = variants {mkN "amendoim" ; mkN "hypogaea" ; mkN "vine" ; } ; --*
lin peanut_4_N = variants {mkN "amendoim" ; mkN "ginguba" ; mkN "nut" ; mkN "pea" ; } ; --*
lin pear_1_N = mkN "pêra" ; --*
lin pear_2_N = variants {mkN "communis" ; mkN "pêra" ; mkN "tree" ; } ; --*
lin pearl_1_N = mkN "pérola" ; --*
lin pearl_1_PN = mkPN "pérola" ; --*
lin pearl_2_N = mkN "pérola" ; --*
lin pearl_2_PN = mkPN "pérola" ; --*
lin pearl_3_N = variants {mkN "gota" ; mkN "pérola" ; } ; --*
lin pearl_3_PN = variants {mkPN "gota" ; mkPN "pérola" ; } ; --*
lin peasantFem_1_N = variants {mkN "camponês" ; mkN "paisano" ; } ; --*
lin peasantFem_2_N = mkN "camponês" ; --*
lin peasantFem_3_N = mkN "indivíduo" ; --*
lin peasantMasc_1_N = variants {mkN "camponês" ; mkN "paisano" ; } ; --*
lin peasantMasc_2_N = mkN "camponês" ; --*
lin peasantMasc_3_N = mkN "indivíduo" ; --*
lin peat_N = mkN "turfa" ; --*
lin peaty_A = mkA "turfoso" ; --*
lin peba_N = variants {mkN "armadillo" ; mkN "novemcinctus" ; mkN "tatu-de-folha" ; mkN "tatuetê" ; } ; --*
lin pebble_N = variants {mkN "pedra" ; mkN "pedregulho" ; mkN "pedrinha" ; mkN "seixo" ; } ; --*
lin pecan_2_N = variants {mkN "illinoensis" ; mkN "illinoinsis" ; mkN "Nogueira-pecã" ; mkN "tree" ; } ; --*
lin pecan_3_N = mkN "nogueira-pecã" ; --*
lin peccary_N = variants {mkN "hog" ; mkN "pecari" ; } ; --*
lin peck_2_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "up") ; } ; --*
lin peck_2_V = variants {mkV "comer" ; mkV "up" ; } ; --*
lin peck_3_V2 = mkV2 (mkV "beijar") ; --*
lin peck_3_V = mkV "beijar" ; --*
lin peck_5_V2 = variants {mkV2 (mkV "incomodar") ; mkV2 (mkV "pentelhar") ; mkV2 (mkV "reclamar") ; } ; --*
lin pecker_1_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin pecker_2_N = variants {mkN "fuinho" ; mkN "pica-pau" ; } ; --*
lin pecker_3_N = mkN "bico" ; --*
lin peckish_2_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin peck_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin pectin_N = mkN "pectina" ; --*
lin pectoral_A = variants {mkA "peitoral" ; mkA "torácico" ; } ; --*
lin peculation_N = variants {mkN "apropriação" ; mkN "Apropriação" ; mkN "peculato" ; } ; --*
lin peculiar_1_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin peculiar_4_A = variants {mkA "avulso" ; mkA "especial" ; mkA "particular" ; mkA "peculiar" ; mkA "próprio" ; } ; --*
lin peculiarity_1_N = variants {mkN "carácter" ; mkN "characteristic" ; mkN "feature" ; } ; --*
lin peculiarity_2_N = mkN "especialidade" ; --*
lin peculiarity_3_N = variants {mkN "curiosidade" ; mkN "raridade" ; } ; --*
lin pecuniary_A = mkA "monetário" ; --*
lin pedagogical_A = mkA "pedagógico" ; --*
lin pedagogic_A = mkA "pedagógico" ; --*
lin pedagogueFem_1_N = variants {mkN "educacionista" ; mkN "educador" ; mkN "pedagogo" ; } ; --*
lin pedagogueMasc_1_N = variants {mkN "educacionista" ; mkN "educador" ; mkN "pedagogo" ; } ; --*
lin pedagogy_1_N = variants {mkN "method" ; mkN "métodos" ; } ; --*
lin pedagogy_2_N = variants {mkN "educação" ; mkN "ensino" ; mkN "pedagogia" ; } ; --*
lin pedagogy_3_N = variants {mkN "activity" ; mkN "didáctica" ; mkN "educação" ; mkN "Educação" ; mkN "ensino" ; mkN "formação" ; mkN "instrução" ; } ; --*
lin pedal_1_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin pedal_2_N = variants {mkN "lever" ; mkN "pedal" ; } ; --*
lin pedal_2_V2 = mkV2 (mkV "pedalar") ; --*
lin pedal_2_V = mkV "pedalar" ; --*
lin pedantic_1_A = variants {mkA "pedante" ; mkA "petimetre" ; } ; --*
lin pedant_N = mkN "pedante" ; --*
lin peddler_1_N = mkN "camelô" ; --*
lin peddler_2_N = variants {mkN "dealer" ; mkN "peddler" ; mkN "trafficker" ; mkN "traficante" ; } ; --*
lin peddle_V2 = variants {mkV2 (mkV "chatinar") ; mkV2 (mkV "mercadejar") ; mkV2 (mkV "traficar") ; } ; --*
lin peddle_V = variants {mkV "chatinar" ; mkV "mercadejar" ; mkV "traficar" ; } ; --*
lin pederast_1_N = variants {mkN "molester" ; mkN "pederasta" ; mkN "pedófilo" ; } ; --*
lin pederasty_N = variants {mkN "pederastia" ; mkN "Pederastia" ; } ; --*
lin pedestal_1_N = mkN "pé" ; --*
lin pedestal_3_N = variants {mkN "base" ; mkN "pedestal" ; mkN "suporte" ; } ; --*
lin pedestrian_A = mkA "prosaico" ; --*
lin pedestrian_N = variants {mkN "peão" ; mkN "pedestre" ; } ; --*
lin pediatrician_1_N = variants {mkN "doctor" ; mkN "pediatra" ; } ; --*
lin pediatrics_N = variants {mkN "medicine" ; mkN "pediatria" ; mkN "Pediatria" ; mkN "pedologia" ; } ; --*
lin pedicab_N = variants {mkN "ciclo-riquixá" ; mkN "rickshaw" ; } ; --*
lin pedicure_N = mkN "Pedicuro" ; --*
lin pedigree_1_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin pedigree_2_N = mkN "pedigree" ; --*
lin pedigree_3_N = mkN "pedigree" ; --*
lin pediment_N = mkN "frontão" ; --*
lin pedlar_N = mkN "camelô" ; --*
lin pedometer_N = variants {mkN "pedómetro" ; mkN "pedômetro" ; mkN "podómetro" ; mkN "podômetro" ; } ; --*
lin pedophile_1_N = variants {mkN "pedófila" ; mkN "pedofilia" ; mkN "Pedofilia" ; mkN "pedófilo" ; } ; --*
lin pedophilia_1_N = mkN "pedofilia" ; --*
lin peduncle_2_N = variants {mkN "Pedunculo" ; mkN "pedúnculo" ; } ; --*
lin pee_1_N = variants {mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin pee_2_N = variants {mkN "mijo" ; mkN "pê" ; mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin peeing_N = variants {mkN "mijo" ; mkN "pê" ; mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin peek_N = mkN "olhada" ; --*
lin peek_V = variants {mkV "olhar" ; mkV "ver" ; } ; --*
lin peel_1_N = variants {mkN "Peel" ; mkN "Robert" ; } ; --*
lin peel_1_V2 = variants {mkV2 (mkV "descascar") ; mkV2 (mkV "despelar") ; mkV2 (mkV "pelar") ; } ; --*
lin peel_2_N = variants {mkN "casca" ; mkN "crosta" ; mkN "pele" ; } ; --*
lin peel_3_V2 = variants {mkV2 (mkV "desnudar") ; mkV2 (mkV "despir") ; mkV2 (mkV "despojar") ; mkV2 (mkV "down") ; } ; --*
lin peel_3_V = variants {mkV "desnudar" ; mkV "despir" ; mkV "despojar" ; mkV "down" ; } ; --*
lin peel_off_4_V = variants {mkV "cascar" ; mkV "off" ; } ; --*
lin peel_off_5_V = variants {mkV "descamar" ; mkV "off" ; } ; --*
lin peep_1_N = mkN "pio" ; --*
lin peep_2_N = mkN "olhada" ; --*
lin peep_3_V = variants {mkV "chilrear" ; mkV "cricrilar" ; mkV "gorjear" ; mkV "piar" ; mkV "pipilar" ; mkV "trinar" ; } ; --*
lin peer_1_N = variants {mkN "igual" ; mkN "par" ; mkN "pário" ; } ; --*
lin peer_2_N = mkN "par" ; --*
lin peerage_N = variants {mkN "nobreza" ; mkN "pariato" ; mkN "Pariato" ; } ; --*
lin peeress_N = mkN "Lady" ; --*
lin peerless_A = variants {mkA "and" ; mkA "incomparável" ; mkA "sem" ; } ; --*
lin pee_V = variants {mkV "a" ; mkV "mijar" ; mkV "oneself" ; mkV "urinar" ; mkV "water" ; } ; --*
lin peeve_V2 = variants {mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; } ; --*
lin peevish_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin peevishness_1_N = mkN "irritabilidade" ; --*
lin peewit_1_N = variants {mkN "plover" ; mkN "quero-quero" ; } ; --*
lin peg_1_V2 = variants {mkV2 (mkV "conseguir") ; mkV2 (mkV "down") ; } ; --*
lin peg_4_N = variants {mkN "leg" ; mkN "perna" ; mkN "Perna-de-pau" ; } ; --*
lin peg_down_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "especificar") ; } ; --*
lin pegmatite_N = mkN "pegmatito" ; --*
lin peignoir_N = variants {mkN "cinta" ; mkN "embrulhador" ; } ; --*
lin pejorative_A = mkA "pejorativo" ; --*
lin peke_N = mkN "pequinês" ; --*
lin pekinese_1_N = mkN "pequinês" ; --*
lin peking_PN = variants {mkPN "of" ; mkPN "Pequim" ; } ; --*
lin pelf_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin pelican_N = mkN "pelicano" ; --*
lin pellagra_N = variants {mkN "de" ; mkN "Ignatius'" ; mkN "pelagra" ; mkN "Pelagra" ; mkN "rosso" ; mkN "scurvy" ; } ; --*
lin pellet_1_N = variants {mkN "bola" ; mkN "pelota" ; } ; --*
lin pellucid_1_A = variants {mkA "clear" ; mkA "límpido" ; mkA "transparente" ; } ; --*
lin pellucid_2_A = variants {mkA "clear" ; mkA "límpido" ; } ; --*
lin pelt_1_N = variants {mkN "pele" ; mkN "peles" ; } ; --*
lin pelt_2_N = mkN "pele" ; --*
lin pelt_3_V = variants {mkV "buckets" ; mkV "cats" ; mkV "chover" ; } ; --*
lin pelter_1_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin peludo_N = variants {mkN "sexcinctus" ; mkN "Tatupeba" ; mkN "Tatu-peba" ; } ; --*
lin pelvic_A = mkA "pélvico" ; --*
lin pelvis_1_N = variants {mkN "alguidar" ; mkN "arch" ; mkN "bacia" ; mkN "girdle" ; mkN "pélvis" ; mkN "tijela" ; } ; --*
lin pelvis_2_N = variants {mkN "Pelve" ; mkN "pelvis" ; } ; --*
lin pelycosaur_N = variants {mkN "pelicossauros" ; mkN "Pelycosauria" ; } ; --*
lin pembroke_PN = mkPN "Welsh" ; --*
lin pemphigus_N = mkN "pênfigo" ; --*
lin pen_1_N = variants {mkN "caneta" ; mkN "caneta-tinteiro" ; } ; --*
lin pen_2_N = mkN "Curral" ; --*
lin pen_3_N = variants {mkN "cercadinho" ; mkN "chiqueirinho" ; } ; --*
lin pen_4_N = variants {mkN "penitenciária" ; mkN "presídio" ; } ; --*
lin pen_5_N = mkN "cisne" ; --*
lin penal_1_A = mkA "penal" ; --*
lin penal_2_A = mkA "penal" ; --*
lin penal_3_A = mkA "penal" ; --*
lin penalization_1_N = variants {mkN "castigo" ; mkN "penalidade" ; mkN "penalização" ; mkN "punição" ; } ; --*
lin penalize_1_V2 = variants {mkV2 (mkV "castigar") ; mkV2 (mkV "penalizar") ; mkV2 (mkV "punir") ; } ; --*
lin penalty_1_N = variants {mkN "castigo" ; mkN "penalidade" ; mkN "penalização" ; mkN "punição" ; } ; --*
lin penance_1_N = variants {mkN "arrependimento" ; mkN "penitência" ; mkN "pesar" ; mkN "remorso" ; } ; --*
lin penance_2_N = variants {mkN "penitência" ; mkN "Penitência" ; } ; --*
lin penance_3_N = mkN "penitência" ; --*
lin penchant_N = variants {mkN "predileção" ; mkN "preferência" ; mkN "tendência" ; } ; --*
lin pencil_1_N = variants {mkN "lápis" ; mkN "Lápis" ; } ; --*
lin pencil_3_N = mkN "lápis" ; --*
lin pendant_1_N = mkN "penduricalho" ; --*
lin pendant_2_N = variants {mkN "candeeiro" ; mkN "candelabro" ; mkN "lustre" ; mkN "mais" ; } ; --*
lin pendent_1_A = mkA "suspenso" ; --*
lin pendulum_N = variants {mkN "pêndulo" ; mkN "Pêndulo" ; } ; --*
lin penelope_1_PN = mkPN "Penélope" ; --*
lin penelope_2_PN = mkPN "Penelope" ; --*
lin peneplain_1_N = mkN "Peneplanície" ; --*
lin penetrable_1_A = mkA "penetrável" ; --*
lin penetrate_1_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "perfurar") ; } ; --*
lin penetrate_2_V2 = variants {mkV2 (mkV "aprofundar") ; mkV2 (mkV "comprender") ; } ; --*
lin penetrate_2_V = variants {mkV "aprofundar" ; mkV "comprender" ; } ; --*
lin penetrate_3_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "clicar") ; mkV2 (mkV "despontar") ; mkV2 (mkV "entender") ; mkV2 (mkV "home") ; mkV2 (mkV "in") ; mkV2 (mkV "into") ; mkV2 (mkV "through") ; } ; --*
lin penetrate_4_V2 = variants {mkV2 (mkV "infiltrar") ; mkV2 (mkV "penetrar") ; } ; --*
lin penetrate_5_V2 = mkV2 (mkV "penetrar") ; --*
lin penetrate_6_V2 = mkV2 (mkV "penetrar") ; --*
lin penetrate_7_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "permear") ; } ; --*
lin penetration_1_N = mkN "invasão" ; --*
lin penetration_4_N = mkN "penetracão" ; --*
lin penetration_of_N2 = mkN2 (mkN "penetração") noPrep ; --*
lin penetrative_1_A = mkA "penetrante" ; --*
lin pen_friend_N = variants {mkN "amigo" ; mkN "correspondente" ; mkN "pal" ; } ; --*
lin penguin_N = mkN "pinguim" ; --*
lin penicillamine_N = mkN "Penicilamina" ; --*
lin penicillinase_N = variants {mkN "Betalactamase" ; mkN "Beta-lactamase" ; } ; --*
lin penicillin_N = mkN "penicilina" ; --*
lin peninsula_N = mkN "península" ; --*
lin penis_N = variants {mkN "caralho" ; mkN "falo" ; mkN "membro" ; mkN "pênis" ; mkN "pinto" ; mkN "verga" ; } ; --*
lin penitence_N = variants {mkN "arrependimento" ; mkN "penitência" ; mkN "pesar" ; mkN "remorso" ; } ; --*
lin penitent_A = mkA "penitente" ; --*
lin penitential_A = mkA "penitencial" ; --*
lin penitentiary_1_A = mkA "penitenciário" ; --*
lin penitentiary_2_A = mkA "penitencial" ; --*
lin penitentiary_N = variants {mkN "penitenciária" ; mkN "presídio" ; } ; --*
lin penknife_N = mkN "canivete" ; --*
lin penmanship_N = variants {mkN "caligrafia" ; mkN "Caligrafia" ; mkN "quirografia" ; } ; --*
lin pen_name_N = variants {mkN "de" ; mkN "name" ; } ; --*
lin penne_N = mkN "penne" ; --*
lin penniless_A = variants {mkA "duro" ; mkA "straitened" ; mkA "up" ; } ; --*
lin pennsylvania_1_PN = variants {mkPN "Pensilvânia" ; mkPN "State" ; } ; --*
lin pennsylvania_2_PN = mkPN "Pensilvânia" ; --*
lin pennsylvania_3_PN = variants {mkPN "of" ; mkPN "Universidade" ; } ; --*
lin penny_1_N = variants {mkN "péni" ; mkN "pêni" ; } ; --*
lin penny_1_PN = variants {mkPN "péni" ; mkPN "pêni" ; } ; --*
lin penny_2_N = variants {mkN "centavo" ; mkN "cêntimo" ; mkN "moeda" ; } ; --*
lin penny_2_PN = variants {mkPN "centavo" ; mkPN "cêntimo" ; mkPN "moeda" ; } ; --*
lin pennyroyal_1_N = variants {mkN "Poejo" ; mkN "pulegium" ; } ; --*
lin pennyweight_N = mkN "Pennyweight" ; --*
lin pennywhistle_N = variants {mkN "flauta" ; mkN "whistle" ; } ; --*
lin penology_1_N = mkN "Penologia" ; --*
lin pensioner_N = mkN "pensionista" ; --*
lin pension_N = mkN "pensão" ; --*
lin pensive_2_A = mkA "pensativo" ; --*
lin penstock_1_N = variants {mkN "Descarregador" ; mkN "gate" ; mkN "valve" ; } ; --*
lin penstock_2_N = variants {mkN "canal" ; mkN "ducto" ; mkN "duto" ; } ; --*
lin pentacle_1_N = mkN "pentagrama" ; --*
lin pentagon_3_N = variants {mkN "Pentagono" ; mkN "pentágono" ; } ; --*
lin pentagonal_1_A = mkA "pentagonal" ; --*
lin pentateuch_N = variants {mkN "pentateuco" ; mkN "Pentateuco" ; } ; --*
lin pentathlete_N = mkN "pentatleta" ; --*
lin pentathlon_N = mkN "pentatlo" ; --*
lin pentavalent_A = mkA "pentavalente" ; --*
lin pentecost_1_N = mkN "Pentecostes" ; --*
lin pentecost_2_N = variants {mkN "of" ; mkN "Shavuot" ; mkN "Shavuót" ; } ; --*
lin penthouse_N = mkN "cobertura" ; --*
lin pentose_N = mkN "pentose" ; --*
lin penultimate_A = mkA "penúltimo" ; --*
lin penumbra_N = mkN "penumbra" ; --*
lin penurious_1_A = variants {mkA "duro" ; mkA "straitened" ; mkA "up" ; } ; --*
lin penuriousness_2_N = variants {mkN "parcimónia" ; mkN "pobreza" ; } ; --*
lin penury_N = variants {mkN "indigência" ; mkN "miséria" ; } ; --*
lin pen_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "escrever") ; } ; --*
lin peon_N = variants {mkN "peão" ; mkN "slave" ; } ; --*
lin peony_N = mkN "peônia" ; --*
lin people_1_N = variants {mkN "gente" ; mkN "pessoas" ; mkN "população" ; mkN "povo" ; } ; --*
lin people_1_V2 = variants {mkV2 (mkV "povoar") ; mkV2 (mkV "povoar-se") ; } ; --*
lin people_2_N = variants {mkN "cidadania" ; mkN "gente" ; mkN "população" ; mkN "povo" ; } ; --*
lin people_3_N = mkN "família" ; --*
lin people_4_N = variants {mkN "gente" ; mkN "great" ; mkN "massa" ; mkN "polloi" ; mkN "povo" ; } ; --*
lin peoples_N = variants {mkN "povo" ; mkN "povos" ; } ; --*
lin pep_N = mkN "energia" ; --*
lin pepper_1_N = variants {mkN "nigrum" ; mkN "pepper" ; mkN "Pimenta-preta" ; } ; --*
lin pepper_1_V2 = mkV2 (mkV "apimentar") ; --*
lin pepper_3_N = mkN "pimenta" ; --*
lin pepper_4_N = mkN "pimento" ; --*
lin peppercorn_N = mkN "pimenta" ; --*
lin peppermint_1_N = variants {mkN "mentha" ; mkN "piperita" ; } ; --*
lin pepperoni_N = mkN "pepperoni" ; --*
lin pepsin_N = mkN "pepsina" ; --*
lin peptide_N = variants {mkN "Peptideo" ; mkN "peptídeo" ; mkN "Peptídeos" ; } ; --*
lin pep_up_1_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin peradventure_Adv = variants {mkAdv "acaso" ; mkAdv "por" ; mkAdv "porventura" ; mkAdv "possivelmente" ; mkAdv "quiçá" ; mkAdv "talvez" ; mkAdv "vai" ; } ; --*
lin perambulation_2_N = variants {mkN "dê" ; mkN "passeio" ; } ; --*
lin perambulator_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin percale_N = mkN "Percal" ; --*
lin perceivable_2_A = variants {mkA "compreensível" ; mkA "entendível" ; } ; --*
lin perceive_1_V2 = variants {mkV2 (mkV "aperceber") ; mkV2 (mkV "aperceber-se") ; mkV2 (mkV "entender") ; mkV2 (mkV "perceber") ; } ; --*
lin perceive_2_V2 = mkV2 (mkV "perceber") ; --*
lin perceiver_N = variants {mkN "espectador" ; mkN "observador" ; } ; --*
lin percentage_1_N = variants {mkN "centum" ; mkN "percentagem" ; mkN "percento" ; mkN "porcentagem" ; } ; --*
lin percentage_2_N = mkN "atribuição" ; --*
lin percent_N = variants {mkN "centum" ; mkN "percentagem" ; mkN "percento" ; mkN "porcentagem" ; } ; --*
lin perceptible_2_A = mkA "detectável" ; --*
lin perception_3_N = variants {mkN "percepção" ; mkN "Percepção" ; } ; --*
lin perception_5_N = mkN "percepção" ; --*
lin perceptive_2_A = mkA "perspicaz" ; --*
lin perceptiveness_1_N = variants {mkN "entendimento" ; mkN "percepção" ; } ; --*
lin perceptiveness_2_N = mkN "sabor" ; --*
lin perch_1_N = mkN "poleiro" ; --*
lin perch_2_N = mkN "rod" ; --*
lin perch_2_V = mkV "desembarcar" ; --*
lin perch_7_N = mkN "Perca" ; --*
lin perchance_1_Adv = variants {mkAdv "acaso" ; mkAdv "chance" ; } ; --*
lin perchance_2_Adv = variants {mkAdv "acaso" ; mkAdv "por" ; mkAdv "porventura" ; mkAdv "possivelmente" ; mkAdv "quiçá" ; mkAdv "talvez" ; mkAdv "vai" ; } ; --*
lin perchlorate_N = variants {mkN "perclorato" ; mkN "Perclorato" ; mkN "Percloratos" ; } ; --*
lin percolate_3_V2 = variants {mkV2 (mkV "passar") ; mkV2 (mkV "percolar") ; } ; --*
lin percolation_1_N = mkN "infiltração" ; --*
lin percolation_3_N = mkN "percolação" ; --*
lin percussion_2_N = mkN "percussão" ; --*
lin percussion_3_N = variants {mkN "percussão" ; mkN "section" ; } ; --*
lin percussion_4_N = mkN "percussão" ; --*
lin perdition_N = variants {mkN "inferno" ; mkN "region" ; } ; --*
lin peregrination_N = mkN "peregrinação" ; --*
lin peregrine_N = variants {mkN "falcão" ; mkN "falcon" ; mkN "peregrinus" ; } ; --*
lin peremptory_1_A = mkA "mandão" ; --*
lin perennial_1_A = mkA "perene" ; --*
lin perennial_2_A = mkA "perene" ; --*
lin perennial_3_A = variants {mkA "perene" ; mkA "recorrente" ; } ; --*
lin perennial_N = mkN "Planta" ; --*
lin perestroika_N = mkN "perestroika" ; --*
lin perfect_1_A = variants {mkA "aprimorado" ; mkA "perfeito" ; } ; --*
lin perfecter_N = mkN "aperfeiçoador" ; --*
lin perfection_1_N = variants {mkN "perfeição" ; mkN "plus" ; } ; --*
lin perfection_2_N = variants {mkN "ideal" ; mkN "ídolo" ; mkN "modelo" ; mkN "perfeição" ; } ; --*
lin perfection_3_N = variants {mkN "aperfeiçoamento" ; mkN "perfeição" ; } ; --*
lin perfectionism_N = mkN "perfeccionismo" ; --*
lin perfective_2_N = variants {mkN "aspect" ; mkN "perfeito" ; } ; --*
lin perfect_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "perfazer") ; } ; --*
lin perfervid_A = mkA "ardente" ; --*
lin perfidious_A = variants {mkA "perfido" ; mkA "pérfido" ; mkA "traiçoeiro" ; } ; --*
lin perfidiousness_N = variants {mkN "perfídia" ; mkN "traição" ; } ; --*
lin perfidy_1_N = variants {mkN "perfídia" ; mkN "traição" ; } ; --*
lin perfidy_2_N = mkN "traição" ; --*
lin perfluorocarbon_N = mkN "Perfluorcarboneto" ; --*
lin perforate_1_V2 = variants {mkV2 (mkV "atravessar") ; mkV2 (mkV "furar") ; mkV2 (mkV "perfurar") ; } ; --*
lin perforate_2_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "perfurar") ; } ; --*
lin perforation_2_N = mkN "perfuração" ; --*
lin perforation_3_N = mkN "perfuração" ; --*
lin perform_1_V2 = variants {mkV2 (mkV "desempenhar") ; mkV2 (mkV "executar") ; mkV2 (mkV "fazer") ; } ; --*
lin perform_2_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "executar") ; mkV2 (mkV "fazer") ; } ; --*
lin perform_3_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "desempenhar") ; mkV2 (mkV "fazer") ; } ; --*
lin perform_3_V = variants {mkV "apresentar" ; mkV "desempenhar" ; mkV "fazer" ; } ; --*
lin perform_4_V2 = variants {mkV2 (mkV "cumprir") ; mkV2 (mkV "desempenhar") ; mkV2 (mkV "realizar") ; } ; --*
lin performance_1_N = variants {mkN "atuação" ; mkN "presentation" ; } ; --*
lin performance_2_N = variants {mkN "apresentação" ; mkN "interpretação" ; } ; --*
lin performance_3_N = variants {mkN "desempenho" ; mkN "execução" ; mkN "into" ; mkN "out" ; } ; --*
lin performance_5_N = variants {mkN "funcionamento" ; mkN "operação" ; } ; --*
lin performer_N = variants {mkN "artist" ; mkN "intérprete" ; } ; --*
lin perfume_1_N = variants {mkN "cheiro" ; mkN "fragrância" ; mkN "odor" ; mkN "perfume" ; } ; --*
lin perfume_2_N = variants {mkN "Perfumaria" ; mkN "perfume" ; } ; --*
lin perfume_2_V2 = mkV2 (mkV "perfumar") ; --*
lin perfumery_3_N = mkN "perfumaria" ; --*
lin perfusion_N = variants {mkN "perfusão" ; mkN "Perfusão" ; } ; --*
lin pergola_N = mkN "pérgola" ; --*
lin perhaps_Adv = variants {mkAdv "acaso" ; mkAdv "por" ; mkAdv "porventura" ; mkAdv "possivelmente" ; mkAdv "quiçá" ; mkAdv "talvez" ; mkAdv "vai" ; } ; --*
lin perianal_A = mkA "perianal" ; --*
lin pericarditis_N = mkN "pericardite" ; --*
lin pericardium_N = variants {mkN "Pericardio" ; mkN "pericárdio" ; } ; --*
lin pericarp_N = variants {mkN "epicarpo" ; mkN "vessel" ; } ; --*
lin periclase_N = variants {mkN "oxide" ; mkN "Óxido" ; } ; --*
lin peridotite_N = mkN "Peridotito" ; --*
lin perigon_N = variants {mkN "angle" ; mkN "ângulo" ; } ; --*
lin perihelion_N = variants {mkN "Perélio" ; mkN "periélio" ; mkN "Periélio" ; } ; --*
lin peril_1_N = variants {mkN "ameaça" ; mkN "perigo" ; mkN "risco" ; } ; --*
lin peril_1_V2 = variants {mkV2 (mkV "ameaçar") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "imperilar") ; mkV2 (mkV "perigar") ; } ; --*
lin peril_2_N = variants {mkN "escabrosidade" ; mkN "perigo" ; } ; --*
lin peril_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "comprometer") ; } ; --*
lin peril_3_N = variants {mkN "perigo" ; mkN "risco" ; } ; --*
lin perilous_A = variants {mkA "arriscado" ; mkA "periculoso" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin perilymph_N = variants {mkN "perilinfa" ; mkN "Perilinfa" ; } ; --*
lin perimeter_1_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "limite" ; mkN "perímetro" ; } ; --*
lin perimeter_2_N = variants {mkN "limite" ; mkN "perímetro" ; } ; --*
lin perimeter_3_N = variants {mkN "circunferência" ; mkN "comprimento" ; mkN "perímetro" ; } ; --*
lin perimysium_N = mkN "Perimísio" ; --*
lin perinatal_A = mkA "perinatal" ; --*
lin perineal_A = mkA "perineal" ; --*
lin perineum_N = mkN "períneo" ; --*
lin period_1_N = variants {mkN "of" ; mkN "period" ; mkN "período" ; } ; --*
lin period_2_N = mkN "período" ; --*
lin period_4_N = variants {mkN "period" ; mkN "período" ; } ; --*
lin period_5_N = mkN "ponto" ; --*
lin period_6_N = variants {mkN "Menstruacao" ; mkN "menstruação" ; mkN "Menstruação" ; mkN "regras" ; } ; --*
lin period_7_N = variants {mkN "point" ; mkN "ponto" ; mkN "Ponto" ; mkN "stop" ; } ; --*
lin periodic_1_A = variants {mkA "periodico" ; mkA "periódico" ; } ; --*
lin periodic_2_A = variants {mkA "ocasional" ; mkA "periódico" ; } ; --*
lin periodical_A = variants {mkA "periodico" ; mkA "periódico" ; } ; --*
lin periodical_N = variants {mkN "jornal" ; mkN "periódico" ; mkN "publicação" ; mkN "revista" ; } ; --*
lin periodontic_1_A = mkA "periodontal" ; --*
lin peripatetic_2_A = mkA "peripatético" ; --*
lin peripheral_1_A = mkA "periférico" ; --*
lin peripheral_2_A = mkA "periférico" ; --*
lin peripheral_N = variants {mkN "device" ; mkN "Periferico" ; mkN "peripheral" ; } ; --*
lin periphery_N = variants {mkN "boundary" ; mkN "limite" ; mkN "margem" ; mkN "periferia" ; } ; --*
lin periscope_N = mkN "periscópio" ; --*
lin perishable_A = mkA "perecível" ; --*
lin perish_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "bater") ; mkV2 (mkV "dead") ; mkV2 (mkV "falecer") ; mkV2 (mkV "in") ; mkV2 (mkV "it") ; mkV2 (mkV "morrer") ; mkV2 (mkV "off") ; mkV2 (mkV "perecer") ; mkV2 (mkV "the") ; } ; --*
lin perish_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin peristalsis_N = variants {mkN "peristalse" ; mkN "peristaltismo" ; } ; --*
lin peristyle_N = mkN "peristilo" ; --*
lin peritoneal_A = mkA "peritoneal" ; --*
lin peritoneum_N = variants {mkN "peritoneu" ; mkN "Peritónio" ; mkN "peritônio" ; mkN "Peritônio" ; } ; --*
lin peritonitis_N = variants {mkN "inflammation" ; mkN "Peritonite" ; } ; --*
lin perjure_V2 = mkV2 (mkV "perjurar") ; --*
lin perjury_N = variants {mkN "false" ; mkN "perjúrio" ; mkN "under" ; } ; --*
lin perk_up_2_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "energizar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "up") ; } ; --*
lin perm_1_N = mkN "Perm" ; --*
lin perm_1_PN = mkPN "Perm" ; --*
lin permafrost_N = mkN "permafrost" ; --*
lin permanence_N = mkN "permanência" ; --*
lin permanency_N = mkN "permanência" ; --*
lin permanent_1_A = variants {mkA "duradouro" ; mkA "permanente" ; } ; --*
lin permanent_2_A = mkA "permanente" ; --*
lin permanganate_N = mkN "permanganato" ; --*
lin permeability_N = mkN "permeabilidade" ; --*
lin permeable_A = mkA "permeável" ; --*
lin permeate_1_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "permear") ; } ; --*
lin permeate_3_V2 = variants {mkV2 (mkV "interpenetrar") ; mkV2 (mkV "permear") ; } ; --*
lin permeate_3_V = variants {mkV "interpenetrar" ; mkV "permear" ; } ; --*
lin permeation_1_N = mkN "osmose" ; --*
lin permission_1_N = variants {mkN "aprovação" ; mkN "autorização" ; mkN "consenso" ; mkN "consentimento" ; mkN "sanção" ; } ; --*
lin permission_2_N = variants {mkN "licença" ; mkN "permissão" ; } ; --*
lin permissive_1_A = mkA "permissivo" ; --*
lin permissive_2_A = mkA "permissivo" ; --*
lin permissiveness_N = mkN "tolerância" ; --*
lin permit_1_N = variants {mkN "licença" ; mkN "licenciamentos" ; } ; --*
lin permit_2_N = variants {mkN "licença" ; mkN "permissão" ; } ; --*
lin permit_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "agüentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; } ; --*
lin permit_V2V = variants {mkV2V (mkV "deixar") ; mkV2V (mkV "permitir") ; mkV2V (mkV "possibilitar") ; } ; --*
lin permutation_4_N = mkN "permutação" ; --*
lin permute_V2 = mkV2 (mkV "transpor") ; --*
lin pernicious_1_A = variants {mkA "perniciosa" ; mkA "pernicioso" ; } ; --*
lin pernicious_2_A = mkA "insidioso" ; --*
lin perniciousness_N = variants {mkN "toxicidade" ; mkN "toxidade" ; } ; --*
lin peroxidase_N = mkN "peroxidase" ; --*
lin peroxide_1_N = variants {mkN "peroxide" ; mkN "peróxido" ; mkN "Peróxido" ; } ; --*
lin peroxide_2_N = variants {mkN "Peroxido" ; mkN "peróxido" ; mkN "Peróxidos" ; } ; --*
lin perpendicular_1_A = mkA "perpendicular" ; --*
lin perpendicular_1_N = variants {mkN "perpendicular" ; mkN "Perpendicularidade" ; } ; --*
lin perpendicular_2_A = variants {mkA "fio" ; mkA "perpendicular" ; mkA "vertical" ; } ; --*
lin perpendicular_3_A = mkA "perpendicular" ; --*
lin perpendicular_4_N = mkN "perpendicular" ; --*
lin perpetrate_V2 = variants {mkV2 (mkV "cometer") ; mkV2 (mkV "perpetrar") ; } ; --*
lin perpetration_N = mkN "cometimento" ; --*
lin perpetrator_N = variants {mkN "culpado" ; mkN "responsável" ; mkN "réu" ; } ; --*
lin perpetual_1_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin perpetual_2_A = variants {mkA "constante" ; mkA "contínuo" ; mkA "incessante" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin perpetuate_V2 = mkV2 (mkV "perpetuar") ; --*
lin perpetuation_N = mkN "prolongamento" ; --*
lin perplex_1_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin perplex_2_V2 = mkV2 (mkV "complicar") ; --*
lin perplexity_N = variants {mkN "aperto" ; mkN "embaraço" ; mkN "perplexidade" ; } ; --*
lin perquisite_2_N = variants {mkN "direito" ; mkN "prerrogativa" ; mkN "privilégio" ; mkN "right" ; } ; --*
lin perry_2_N = variants {mkN "Calbraith" ; mkN "Matthew" ; } ; --*
lin persecute_V2 = mkV2 (mkV "acossar") ; --*
lin persecution_N = mkN "perseguição" ; --*
lin perseverance_1_N = variants {mkN "empenho" ; mkN "persistência" ; mkN "tenacidade" ; } ; --*
lin perseverance_2_N = variants {mkN "perseverança" ; mkN "persistência" ; } ; --*
lin perseveration_2_N = variants {mkN "perseverança" ; mkN "persistência" ; } ; --*
lin persevere_V = variants {mkV "in" ; mkV "on" ; mkV "perseverar" ; mkV "persistir" ; } ; --*
lin persia_1_PN = variants {mkPN "Empire" ; mkPN "Império" ; mkPN "Pérsia" ; } ; --*
lin persia_2_PN = variants {mkPN "Irã" ; mkPN "Irao" ; mkPN "Irão" ; mkPN "Pérsia" ; mkPN "Republic" ; } ; --*
lin persian_A = variants {mkA "iraniano" ; mkA "pérsico" ; } ; --*
lin persianFem_N = variants {mkN "iraniano" ; mkN "Persa" ; } ; --*
lin persianMasc_N = variants {mkN "iraniano" ; mkN "Persa" ; } ; --*
lin persian_N = variants {mkN "Língua" ; mkN "persa" ; } ; --*
lin persimmon_1_N = variants {mkN "caqui" ; mkN "caquizeiro" ; mkN "tree" ; } ; --*
lin persimmon_2_N = variants {mkN "caqui" ; mkN "dióspiro" ; } ; --*
lin persist_1_V = variants {mkV "hard" ; mkV "perdurar" ; } ; --*
lin persist_2_V = variants {mkV "in" ; mkV "on" ; mkV "perseverar" ; mkV "persistir" ; } ; --*
lin persist_3_V = variants {mkV "albergar" ; mkV "ficar" ; mkV "permanecer" ; mkV "restar" ; } ; --*
lin persistence_1_N = mkN "continuidade" ; --*
lin persistence_2_N = variants {mkN "empenho" ; mkN "persistência" ; mkN "tenacidade" ; } ; --*
lin persistence_3_N = variants {mkN "perseverança" ; mkN "persistência" ; } ; --*
lin persistent_1_A = mkA "persistente" ; --*
lin persistent_3_A = mkA "duradouro" ; --*
lin persistent_4_A = variants {mkA "porfiado" ; mkA "teimoso" ; mkA "tenaz" ; } ; --*
lin person_1_N = variants {mkN "alguém" ; mkN "indivíduo" ; mkN "pessoa" ; mkN "ser" ; } ; --*
lin person_2_N = mkN "pessoa" ; --*
lin person_3_N = mkN "pessoa" ; --*
lin persona_1_N = variants {mkN "papel" ; mkN "personagem" ; mkN "role" ; } ; --*
lin persona_2_N = mkN "rosto" ; --*
lin personage_2_N = variants {mkN "person" ; mkN "personagem" ; } ; --*
lin personal_1_A = mkA "pessoal" ; --*
lin personal_2_A = mkA "pessoal" ; --*
lin personality_1_N = variants {mkN "personalidade" ; mkN "pessoa" ; mkN "temperamento" ; } ; --*
lin personality_2_N = mkN "personalidade" ; --*
lin personalize_1_V2 = mkV2 (mkV "personalizar") ; --*
lin personally_1_Adv = mkAdv "pessoalmente" ; --*
lin personally_2_Adv = mkAdv "pessoalmente" ; --*
lin personally_3_Adv = mkAdv "pessoalmente" ; --*
lin personally_4_Adv = variants {mkAdv "person" ; mkAdv "pessoalmente" ; } ; --*
lin personally_5_Adv = mkAdv "pessoalmente" ; --*
lin persona_non_grata_2_N = variants {mkN "non" ; mkN "person" ; } ; --*
lin personate_1_V2 = mkV2 (mkV "posar") ; --*
lin personate_2_V2 = mkV2 (mkV "personificar") ; --*
lin personation_1_N = variants {mkN "imitação" ; mkN "personificação" ; } ; --*
lin personation_2_N = mkN "caracterização" ; --*
lin personification_1_N = mkN "personificação" ; --*
lin personification_2_N = variants {mkN "personificação" ; mkN "prosopopeia" ; } ; --*
lin personification_3_N = variants {mkN "encarnação" ; mkN "personificação" ; } ; --*
lin personify_1_V2 = mkV2 (mkV "personificar") ; --*
lin personify_2_V2 = variants {mkV2 (mkV "encarnar") ; mkV2 (mkV "incorporar") ; mkV2 (mkV "personificar") ; mkV2 (mkV "representar") ; } ; --*
lin personify_3_V2 = mkV2 (mkV "personificar") ; --*
lin personnel_2_N = variants {mkN "department" ; mkN "office" ; mkN "pessoal" ; } ; --*
lin perspective_1_N = variants {mkN "perspectiva" ; mkN "posição" ; mkN "visão" ; } ; --*
lin perspective_2_N = variants {mkN "perspectiva" ; mkN "perspective" ; } ; --*
lin perspicacious_1_A = variants {mkA "ajuizado" ; mkA "prudente" ; mkA "sagaz" ; mkA "sensato" ; } ; --*
lin perspicacity_1_N = variants {mkN "astúcia" ; mkN "astucidade" ; mkN "sagacidade" ; } ; --*
lin perspicuous_A = variants {mkA "clear" ; mkA "límpido" ; } ; --*
lin perspiration_1_N = variants {mkN "perspiração" ; mkN "sudorese" ; mkN "suor" ; mkN "transpiração" ; } ; --*
lin perspiration_2_N = variants {mkN "suor" ; mkN "transpiração" ; } ; --*
lin perspire_V = variants {mkV "suar" ; mkV "transpirar" ; } ; --*
lin persuade_1_V2 = variants {mkV2 (mkV "convencer") ; mkV2 (mkV "persuadir") ; } ; --*
lin persuade_2_V2V = variants {mkV2V (mkV "convencer") ; mkV2V (mkV "persuadir") ; } ; --*
lin persuasion_1_N = mkN "persuasão" ; --*
lin persuasion_2_N = variants {mkN "ideia" ; mkN "idéia" ; mkN "opinião" ; mkN "pensamento" ; mkN "perspicácia" ; } ; --*
lin persuasive_A = mkA "persuasivo" ; --*
lin pert_A = variants {mkA "atrevido" ; mkA "impertinente" ; } ; --*
lin pertain_1_V = variants {mkV "concernir" ; mkV "doe" ; mkV "on" ; mkV "referir" ; mkV "relacionar" ; mkV "to" ; } ; --*
lin pertain_2_V = variants {mkV "pertencer" ; mkV "referir-se" ; } ; --*
lin perth_PN = mkPN "Perth" ; --*
lin pertinacious_A = variants {mkA "porfiado" ; mkA "teimoso" ; mkA "tenaz" ; } ; --*
lin pertinacity_N = variants {mkN "empenho" ; mkN "persistência" ; mkN "tenacidade" ; } ; --*
lin pertinence_1_N = mkN "aplicabilidade" ; --*
lin pertinent_1_A = variants {mkA "pertinente" ; mkA "procedente" ; } ; --*
lin pertinent_2_A = variants {mkA "apropriado" ; mkA "apto" ; mkA "pertinente" ; mkA "procedente" ; } ; --*
lin perturb_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "transtornar") ; } ; --*
lin perturb_2_V2 = mkV2 (mkV "perturbar") ; --*
lin perturbation_1_N = mkN "transtorno" ; --*
lin perturbation_2_N = mkN "Pertubação" ; --*
lin peru_PN = variants {mkPN "of" ; mkPN "Peru" ; } ; --*
lin peruse_V2 = mkV2 (mkV "examinar") ; --*
lin peruvian_A = mkA "peruano" ; --*
lin peruvian_N = mkN "peruano" ; --*
lin pervade_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "permear") ; } ; --*
lin pervaporation_N = mkN "pervaporação" ; --*
lin pervasion_N = mkN "osmose" ; --*
lin pervert_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin pervert_2_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "sofismar") ; mkV2 (mkV "torcer") ; } ; --*
lin pervert_3_V2 = variants {mkV2 (mkV "abusar") ; mkV2 (mkV "desvirtuar") ; } ; --*
lin pervert_N = mkN "pervertido" ; --*
lin peseta_N = mkN "peseta" ; --*
lin pesky_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin peso_1_N = variants {mkN "peso" ; mkN "Peso" ; } ; --*
lin peso_2_N = variants {mkN "peso" ; mkN "Peso" ; } ; --*
lin peso_3_N = mkN "peso" ; --*
lin peso_4_N = variants {mkN "peso" ; mkN "Peso" ; } ; --*
lin peso_5_N = mkN "peso" ; --*
lin peso_6_N = variants {mkN "peso" ; mkN "Peso" ; } ; --*
lin peso_7_N = mkN "peso" ; --*
lin peso_8_N = variants {mkN "peso" ; mkN "Peso" ; } ; --*
lin pessary_N = variants {mkN "diafragma" ; mkN "diaphragm" ; } ; --*
lin pessimal_A = mkA "péssimo" ; --*
lin pessimism_1_N = mkN "pessimismo" ; --*
lin pessimism_2_N = mkN "pessimismo" ; --*
lin pessimistFem_N = mkN "pessimista" ; --*
lin pessimistic_1_A = mkA "pessimista" ; --*
lin pessimistMasc_N = mkN "pessimista" ; --*
lin pest_1_N = variants {mkN "peste" ; mkN "Peste" ; mkN "praga" ; } ; --*
lin pest_2_N = mkN "peste" ; --*
lin pest_3_N = mkN "peste" ; --*
lin pester_V2 = variants {mkV2 (mkV "amolar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "incomodar") ; } ; --*
lin pesticide_N = variants {mkN "pesticida" ; mkN "pesticidas" ; mkN "Pesticidas" ; } ; --*
lin pestiferous_4_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin pestilence_1_N = variants {mkN "peste" ; mkN "Peste" ; mkN "praga" ; } ; --*
lin pestilence_2_N = mkN "peste" ; --*
lin pestilent_1_A = variants {mkA "perniciosa" ; mkA "pernicioso" ; } ; --*
lin pestle_3_N = mkN "mão" ; --*
lin pesto_N = mkN "pesto" ; --*
lin pet_1_N = mkN "animal" ; --*
lin pet_1_V2 = variants {mkV2 (mkV "acariciar") ; mkV2 (mkV "afagar") ; mkV2 (mkV "mimosear") ; } ; --*
lin pet_2_V2 = variants {mkV2 (mkV "acariciar") ; mkV2 (mkV "afagar") ; mkV2 (mkV "mimosear") ; } ; --*
lin pet_4_N = variants {mkN "emission" ; mkN "Tomografia" ; } ; --*
lin petabit_N = mkN "Petabit" ; --*
lin petabyte_1_N = variants {mkN "petabyte" ; mkN "Petabyte" ; } ; --*
lin petabyte_2_N = mkN "pebibyte" ; --*
lin petal_N = variants {mkN "petal" ; mkN "pétala" ; } ; --*
lin petaloid_A = mkA "petalóide" ; --*
lin petechia_N = mkN "petéquia" ; --*
lin peter_PN = mkPN "Peter" ; --*
lin petfood_1_N = variants {mkN "food" ; mkN "ração" ; } ; --*
lin petiole_N = mkN "pecíolo" ; --*
lin petit_bourgeois_2_N = variants {mkN "bourgeois" ; mkN "bourgeoisie" ; } ; --*
lin petite_A = variants {mkA "diminuto" ; mkA "minúsculo" ; mkA "nanico" ; mkA "pequeno" ; } ; --*
lin petition_1_N = variants {mkN "abaixo-assinado" ; mkN "apelo" ; mkN "instância" ; mkN "petição" ; mkN "requerimento" ; mkN "requisição" ; mkN "solicitação" ; } ; --*
lin petition_2_N = variants {mkN "oração" ; mkN "petição" ; mkN "reza" ; } ; --*
lin petitioner_1_N = mkN "apresentante" ; --*
lin petition_V2 = mkV2 (mkV "peticionar") ; --*
lin petition_V = mkV "peticionar" ; --*
lin petrel_N = mkN "Petrel" ; --*
lin petrify_1_V2 = mkV2 (mkV "petrificar") ; --*
lin petrify_3_V2 = variants {mkV2 (mkV "enrijecer") ; mkV2 (mkV "rigidificar") ; } ; --*
lin petrify_V = mkV "petrificar" ; --*
lin petrochemical_N = mkN "petroquímicos" ; --*
lin petroglyph_N = variants {mkN "Petroglifo" ; mkN "petróglifo" ; } ; --*
lin petroleum_N = variants {mkN "nafta" ; mkN "oil" ; mkN "óleo" ; mkN "petróleo" ; } ; --*
lin petrol_N = variants {mkN "benzina" ; mkN "gasolina" ; } ; --*
lin petrology_N = variants {mkN "petrologia" ; mkN "Petrologia" ; } ; --*
lin petticoat_N = variants {mkN "anágua" ; mkN "Anágua" ; mkN "combinação" ; mkN "saiote" ; } ; --*
lin pettish_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin petty_2_A = variants {mkA "insignificante" ; mkA "pequeno" ; mkA "trivial" ; } ; --*
lin petty_3_A = mkA "mesquinho" ; --*
lin petulance_N = mkN "irritabilidade" ; --*
lin petulant_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin petunia_1_N = variants {mkN "Petunia" ; mkN "petúnia" ; mkN "Petúnia" ; } ; --*
lin pewit_2_N = variants {mkN "plover" ; mkN "quero-quero" ; } ; --*
lin pew_N = variants {mkN "banco" ; mkN "bench" ; } ; --*
lin pewter_N = mkN "Peltre" ; --*
lin peyote_1_N = variants {mkN "mescal" ; mkN "peiote" ; mkN "williamsii" ; } ; --*
lin phagocyte_N = variants {mkN "cell" ; mkN "fagócito" ; } ; --*
lin phagocytosis_N = mkN "fagocitose" ; --*
lin phalanx_1_N = mkN "falange" ; --*
lin phalanx_3_N = mkN "falange" ; --*
lin phallic_1_A = mkA "fálico" ; --*
lin phallic_2_A = mkA "fálico" ; --*
lin phalloplasty_N = mkN "Faloplastia" ; --*
lin phallus_2_N = variants {mkN "caralho" ; mkN "falo" ; mkN "membro" ; mkN "pênis" ; mkN "pinto" ; mkN "verga" ; } ; --*
lin phaneromania_N = mkN "faneromania" ; --*
lin phantasm_1_N = mkN "fantasma" ; --*
lin phantasm_2_N = variants {mkN "aparição" ; mkN "fantasma" ; } ; --*
lin phantasmagoric_1_A = variants {mkA "fantasmagórico" ; mkA "surreal" ; mkA "surrealista" ; } ; --*
lin phantasy_1_N = variants {mkN "fantasia" ; mkN "ilusão" ; } ; --*
lin phantasy_2_N = mkN "fantasia" ; --*
lin phantasy_3_N = mkN "fantasia" ; --*
lin phantom_1_N = mkN "fantasma" ; --*
lin phantom_2_N = variants {mkN "aparição" ; mkN "fantasma" ; } ; --*
lin pharaoh_N = variants {mkN "faraó" ; mkN "of" ; } ; --*
lin pharisaic_A = mkA "hipócrita" ; --*
lin pharisaical_A = mkA "hipócrita" ; --*
lin pharisee_2_N = mkN "fariseus" ; --*
lin pharmaceutical_1_A = mkA "farmacêutico" ; --*
lin pharmaceutical_1_N = mkN "remédio" ; --*
lin pharmaceutical_2_A = mkA "farmacêutico" ; --*
lin pharmacist_N = variants {mkN "farmacêutico" ; mkN "pusher" ; mkN "roller" ; } ; --*
lin pharmacogenetics_N = mkN "Farmacogenética" ; --*
lin pharmacokinetics_N = variants {mkN "cinética" ; mkN "Farmacocinética" ; } ; --*
lin pharmacological_1_A = mkA "farmacológico" ; --*
lin pharmacology_N = variants {mkN "Farmacologia" ; mkN "medica" ; mkN "medicine" ; } ; --*
lin pharmacopoeia_N = mkN "farmacopéia" ; --*
lin pharmacy_1_N = mkN "farmácia" ; --*
lin pharmacy_2_N = variants {mkN "botica" ; mkN "drograria" ; mkN "Farmacia" ; mkN "shop" ; } ; --*
lin pharos_N = variants {mkN "farol" ; mkN "light" ; } ; --*
lin pharyngitis_N = variants {mkN "faringite" ; mkN "throat" ; } ; --*
lin pharynx_N = variants {mkN "faringe" ; mkN "garganta" ; } ; --*
lin phase_1_N = variants {mkN "fase" ; mkN "período" ; } ; --*
lin phase_1_V2 = mkV2 (mkV "fasear") ; --*
lin phase_2_N = mkN "fase" ; --*
lin phase_3_N = variants {mkN "angle" ; mkN "fase" ; } ; --*
lin phase_out_V2 = mkV2 (mkV "out") ; --*
lin pheasant_1_N = variants {mkN "faisăo" ; mkN "faisão" ; } ; --*
lin pheasant_2_N = mkN "faisão" ; --*
lin phencyclidine_N = variants {mkN "dust" ; mkN "Fenilciclidina" ; mkN "hydrochloride" ; } ; --*
lin phenobarbitone_N = variants {mkN "fenobarbital" ; mkN "heart" ; mkN "thiopental" ; } ; --*
lin phenol_1_N = mkN "fenóis" ; --*
lin phenol_2_N = variants {mkN "acid" ; mkN "fenol" ; } ; --*
lin phenolphthalein_N = mkN "fenolftaleína" ; --*
lin phenomenal_1_A = mkA "fenomenal" ; --*
lin phenomenal_2_A = mkA "fenomenal" ; --*
lin phenomenology_N = mkN "fenomenologia" ; --*
lin phenomenon_1_N = variants {mkN "fenómeno" ; mkN "fenômeno" ; } ; --*
lin phenomenon_2_N = variants {mkN "fenómeno" ; mkN "fenômeno" ; } ; --*
lin phenotype_N = variants {mkN "Fenotipo" ; mkN "fenótipo" ; } ; --*
lin phenylalanine_N = mkN "fenilalanina" ; --*
lin phenylbutazone_N = variants {mkN "fenilbutazona" ; mkN "Fenil-butazona" ; } ; --*
lin phenylketonuria_N = mkN "Fenilcetonúria" ; --*
lin pheochromocytoma_1_N = mkN "Feocromocitoma" ; --*
lin pheromone_N = variants {mkN "feromonas" ; mkN "feromônio" ; } ; --*
lin phial_N = mkN "ampola" ; --*
lin philadelphia_PN = variants {mkPN "Filadélfia" ; mkPN "of" ; } ; --*
lin philander_1_V = variants {mkV "afeminar" ; mkV "paquerar" ; mkV "tornar" ; } ; --*
lin philander_2_V = variants {mkV "passar" ; mkV "up" ; } ; --*
lin philanderer_N = variants {mkN "mulherengo" ; mkN "sedutor" ; } ; --*
lin philanthropic_2_A = mkA "filantrópico" ; --*
lin philanthropist_N = variants {mkN "altruísta" ; mkN "filantropo" ; } ; --*
lin philanthropy_N = variants {mkN "Filantropia" ; mkN "gift" ; } ; --*
lin philatelic_1_A = mkA "filatélico" ; --*
lin philatelist_N = variants {mkN "collector" ; mkN "filatelista" ; } ; --*
lin philately_N = variants {mkN "collecting" ; mkN "collection" ; mkN "filatelia" ; } ; --*
lin philippines_1_PN = variants {mkPN "Filipinas" ; mkPN "of" ; } ; --*
lin philippines_2_PN = variants {mkPN "Filipinas" ; mkPN "Islands" ; } ; --*
lin philip_PN = variants {mkPN "Filipe" ; mkPN "of" ; mkPN "Philip" ; } ; --*
lin philistine_2_N = variants {mkN "filisteu" ; mkN "Filisteus" ; } ; --*
lin philistinism_N = mkN "filistinismo" ; --*
lin philologist_N = variants {mkN "filologista" ; mkN "filólogo" ; } ; --*
lin philology_N = variants {mkN "filologia" ; mkN "Filologia" ; mkN "linguística" ; mkN "lingüística" ; } ; --*
lin philosopher_1_N = mkN "filósofo" ; --*
lin philosopher_2_N = mkN "Filósofos" ; --*
lin philosophic_1_A = mkA "filosófico" ; --*
lin philosophic_2_A = mkA "filosófico" ; --*
lin philosophical_1_A = mkA "filosófico" ; --*
lin philosophical_2_A = mkA "filosófico" ; --*
lin philosophize_1_V = mkV "filosofar" ; --*
lin philosophy_1_N = variants {mkN "doutrina" ; mkN "filosofia" ; mkN "of" ; mkN "system" ; } ; --*
lin philosophy_2_N = mkN "filosofia" ; --*
lin philosophy_3_N = mkN "filosofia" ; --*
lin phimosis_N = mkN "Fimose" ; --*
lin phi_N = variants {mkN "fi" ; mkN "φ" ; } ; --*
lin phlebitis_N = variants {mkN "flebite" ; mkN "Flebite" ; } ; --*
lin phlebothrombosis_N = variants {mkN "thrombosis" ; mkN "Trombose" ; } ; --*
lin phlegm_1_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin phlegm_2_N = variants {mkN "escarro" ; mkN "muco" ; mkN "Sputa" ; } ; --*
lin phlegm_3_N = mkN "letargia" ; --*
lin phlegmatic_1_A = mkA "fleumático" ; --*
lin phloem_N = mkN "floema" ; --*
lin phlogiston_N = variants {mkN "flogístico" ; mkN "flogisto" ; } ; --*
lin phlogopite_N = mkN "flogopita" ; --*
lin phlox_N = mkN "Phlox" ; --*
lin ph_N = variants {mkN "Ph" ; mkN "scale" ; } ; --*
lin phobia_N = variants {mkN "disorder" ; mkN "fobia" ; mkN "neurosis" ; } ; --*
lin phobophobia_N = mkN "fobofobia" ; --*
lin phocomelia_N = variants {mkN "Focomelia" ; mkN "limbs" ; } ; --*
lin phoebe_2_N = mkN "Febe" ; --*
lin phoebe_2_PN = mkPN "Febe" ; --*
lin phoenix_1_N = variants {mkN "of" ; mkN "Phoenix" ; } ; --*
lin phoenix_1_PN = variants {mkPN "of" ; mkPN "Phoenix" ; } ; --*
lin phoenix_2_N = variants {mkN "fénix" ; mkN "Phoenix" ; } ; --*
lin phoenix_2_PN = variants {mkPN "fénix" ; mkPN "Phoenix" ; } ; --*
lin phoenix_3_N = variants {mkN "fénix" ; mkN "fênix" ; } ; --*
lin phoenix_3_PN = variants {mkPN "fénix" ; mkPN "fênix" ; } ; --*
lin phoenix_4_N = variants {mkN "Constelação" ; mkN "Phoenix" ; } ; --*
lin phoenix_4_PN = variants {mkPN "Constelação" ; mkPN "Phoenix" ; } ; --*
lin phone_1_N = variants {mkN "set" ; mkN "telefone" ; } ; --*
lin phone_2_N = variants {mkN "fone" ; mkN "fonema" ; mkN "sound" ; } ; --*
lin phone_3_N = variants {mkN "auricular" ; mkN "estetoscópio" ; mkN "fone" ; } ; --*
lin phonebook_1_N = variants {mkN "book" ; mkN "directory" ; mkN "lista" ; mkN "Lista" ; } ; --*
lin phoneme_N = mkN "fonema" ; --*
lin phonemics_N = mkN "Fonologia" ; --*
lin phonetic_1_A = mkA "fonético" ; --*
lin phonetic_2_A = mkA "fonético" ; --*
lin phonetics_N = variants {mkN "fonética" ; mkN "Fonética" ; } ; --*
lin phone_V2 = variants {mkV2 (mkV "chamar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "telefonar") ; mkV2 (mkV "up") ; } ; --*
lin phone_V = variants {mkV "chamar" ; mkV "ligar" ; mkV "telefonar" ; mkV "up" ; } ; --*
lin phoney_A = mkA "farsante" ; --*
lin phoney_N = variants {mkN "hipócrita" ; mkN "tartufo" ; } ; --*
lin phonic_3_A = mkA "fonético" ; --*
lin phonograph_N = variants {mkN "fonógrafo" ; mkN "gramofone" ; mkN "player" ; } ; --*
lin phonological_1_A = mkA "fonológico" ; --*
lin phonology_N = mkN "Fonologia" ; --*
lin phonophobia_N = variants {mkN "fonofobia" ; mkN "Fonofobia" ; } ; --*
lin phony_A = mkA "farsante" ; --*
lin phony_N = variants {mkN "hipócrita" ; mkN "tartufo" ; } ; --*
lin phosgene_N = mkN "Fosgênio" ; --*
lin phosphate_1_N = variants {mkN "fosfato" ; mkN "fosfatos" ; mkN "phosphate" ; } ; --*
lin phosphine_N = mkN "fosfina" ; --*
lin phosphocreatine_N = variants {mkN "fosfocreatina" ; mkN "phosphate" ; mkN "phosphoric" ; } ; --*
lin phospholipid_N = variants {mkN "Fosfolipido" ; mkN "fosfolípido" ; } ; --*
lin phosphorescence_N = mkN "fosforescência" ; --*
lin phosphorescent_A = mkA "fosforescente" ; --*
lin phosphorus_1_N = variants {mkN "Fosforo" ; mkN "fósforo" ; mkN "number" ; } ; --*
lin phosphorus_2_N = variants {mkN "lúcifer" ; mkN "star" ; } ; --*
lin photalgia_N = variants {mkN "fotofobia" ; mkN "Fotofobia" ; } ; --*
lin phot_N = mkN "Phot" ; --*
lin photochemistry_N = variants {mkN "fotoquímica" ; mkN "Fotoquímica" ; } ; --*
lin photocopier_N = mkN "fotocopiadora" ; --*
lin photocopy_N = variants {mkN "fotocópia" ; mkN "xérox" ; } ; --*
lin photocopy_V2 = variants {mkV2 (mkV "fotocopiar") ; mkV2 (mkV "off") ; mkV2 (mkV "xerocar") ; } ; --*
lin photoelectric_1_A = mkA "fotelétrico" ; --*
lin photoflash_N = variants {mkN "bulb" ; mkN "flash" ; mkN "lamp" ; } ; --*
lin photogenic_A = variants {mkA "fotogénico" ; mkA "fotogênico" ; } ; --*
lin photograph_1_V2 = variants {mkV2 (mkV "fotografar") ; mkV2 (mkV "tirar") ; } ; --*
lin photographer_N = variants {mkN "fotógrafa" ; mkN "fotógrafo" ; mkN "Fotógrafos" ; } ; --*
lin photographic_1_A = mkA "fotográfico" ; --*
lin photograph_N = variants {mkN "desenho" ; mkN "figura" ; mkN "foto" ; mkN "fotografia" ; mkN "ilustração" ; mkN "imagem" ; mkN "retrato" ; } ; --*
lin photography_1_N = variants {mkN "fotografia" ; mkN "taking" ; } ; --*
lin photography_2_N = mkN "fotografia" ; --*
lin photography_3_N = mkN "fotografia" ; --*
lin photogravure_3_N = mkN "rotogravura" ; --*
lin photojournalism_N = mkN "fotojornalismo" ; --*
lin photometer_1_N = variants {mkN "fotómetro" ; mkN "fotômetro" ; } ; --*
lin photometer_2_N = variants {mkN "exposímetro" ; mkN "meter" ; } ; --*
lin photomontage_N = mkN "fotomontagem" ; --*
lin photo_N = variants {mkN "desenho" ; mkN "figura" ; mkN "foto" ; mkN "fotografia" ; mkN "ilustração" ; mkN "imagem" ; mkN "retrato" ; } ; --*
lin photon_N = variants {mkN "fotão" ; mkN "Foton" ; mkN "fóton" ; mkN "Fótons" ; } ; --*
lin photophobia_1_N = mkN "fotofobia" ; --*
lin photophobia_2_N = variants {mkN "fotofobia" ; mkN "Fotofobia" ; } ; --*
lin photosphere_N = mkN "fotosfera" ; --*
lin photosynthesis_N = variants {mkN "Fotossintese" ; mkN "fotossíntese" ; mkN "Fotossíntese" ; } ; --*
lin phototropism_N = mkN "fototropismo" ; --*
lin phrasal_A = mkA "frasal" ; --*
lin phrase_1_N = variants {mkN "frase" ; mkN "sintagma" ; } ; --*
lin phrase_1_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "expressar") ; mkV2 (mkV "formular") ; mkV2 (mkV "voice") ; } ; --*
lin phrase_2_N = variants {mkN "frase" ; mkN "phrase" ; } ; --*
lin phrase_3_N = variants {mkN "ditado" ; mkN "expression" ; mkN "idiom" ; mkN "phrase" ; mkN "provérbio" ; } ; --*
lin phrase_book_N = mkN "book" ; --*
lin phraseology_N = variants {mkN "dicção" ; mkN "Dicção" ; mkN "fraseologia" ; mkN "of" ; } ; --*
lin phrasing_2_N = variants {mkN "dicção" ; mkN "Dicção" ; mkN "fraseologia" ; mkN "of" ; } ; --*
lin phrenetic_A = mkA "frenético" ; --*
lin phrenological_A = mkA "frenológico" ; --*
lin phrenology_N = variants {mkN "frenologia" ; mkN "Frenologia" ; } ; --*
lin phthisis_N = variants {mkN "disease" ; mkN "plague" ; mkN "tuberculose" ; mkN "tuberculosis" ; } ; --*
lin phycobilin_N = mkN "Ficobilina" ; --*
lin phycocyanin_N = mkN "Ficocianina" ; --*
lin phycoerythrin_N = mkN "ficoeritrina" ; --*
lin phycology_N = mkN "Ficologia" ; --*
lin phylactery_N = mkN "tefilin" ; --*
lin phyllo_N = mkN "Folheado" ; --*
lin phylogenetic_1_A = mkA "filogenético" ; --*
lin phylum_2_N = variants {mkN "filo" ; mkN "Filo" ; } ; --*
lin physical_1_A = mkA "físico" ; --*
lin physical_2_A = mkA "físico" ; --*
lin physical_3_A = variants {mkA "físico" ; mkA "substancial" ; mkA "tangível" ; } ; --*
lin physical_4_A = mkA "físico" ; --*
lin physical_5_A = mkA "físico" ; --*
lin physical_7_A = mkA "físico" ; --*
lin physician_N = variants {mkN "doutor" ; mkN "médico" ; } ; --*
lin physicist_N = mkN "físico" ; --*
lin physic_N = mkN "laxante" ; --*
lin physics_1_N = variants {mkN "ciências" ; mkN "física" ; mkN "Física" ; mkN "philosophy" ; } ; --*
lin physics_2_N = variants {mkN "ciências" ; mkN "Ciências" ; mkN "física" ; mkN "science" ; } ; --*
lin physiognomy_N = variants {mkN "face" ; mkN "Fisiognomia" ; mkN "fisionomia" ; mkN "rosto" ; } ; --*
lin physiologic_A = mkA "fisiológico" ; --*
lin physiological_1_A = mkA "fisiológico" ; --*
lin physiological_2_A = mkA "fisiológico" ; --*
lin physiology_1_N = variants {mkN "fisiologia" ; mkN "Fisiologia" ; } ; --*
lin physiology_2_N = variants {mkN "ciência" ; mkN "fisiologia" ; } ; --*
lin physiotherapist_N = variants {mkN "fisioterapêuta" ; mkN "therapist" ; } ; --*
lin physiotherapy_N = variants {mkN "fisioterapia" ; mkN "Fisioterapia" ; mkN "therapy" ; } ; --*
lin physique_1_N = mkN "físico" ; --*
lin physique_2_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin physostigmine_N = mkN "fisostigmina" ; --*
lin phytochemical_N = variants {mkN "Fitoquímica" ; mkN "Fitoquímicos" ; } ; --*
lin phytohormone_N = variants {mkN "fito-hormona" ; mkN "hormone" ; mkN "regulator" ; } ; --*
lin phytoplankton_N = mkN "fitoplâncton" ; --*
lin phytotherapy_N = variants {mkN "fitoterapia" ; mkN "medicine" ; mkN "therapy" ; } ; --*
lin pi_1_N = mkN "pi" ; --*
lin pi_2_N = variants {mkN "detective" ; mkN "detetive" ; mkN "eye" ; mkN "investigator" ; } ; --*
lin pi_4_N = variants {mkN "pi" ; mkN "Π" ; } ; --*
lin pianistFem_N = variants {mkN "pianista" ; mkN "player" ; } ; --*
lin pianistMasc_N = variants {mkN "pianista" ; mkN "player" ; } ; --*
lin piano_1_N = variants {mkN "piano" ; mkN "Piano" ; } ; --*
lin piano_2_N = mkN "piano" ; --*
lin piano_Adv = mkAdv "piano" ; --*
lin piano_A = mkA "piano" ; --*
lin pianoforte_N = variants {mkN "piano" ; mkN "Piano" ; } ; --*
lin pianola_N = variants {mkN "piano" ; mkN "pianola" ; } ; --*
lin piazza_N = variants {mkN "adro" ; mkN "largo" ; mkN "Piazza" ; mkN "praça" ; } ; --*
lin pica_2_N = variants {mkN "em" ; mkN "eme" ; mkN "paica" ; } ; --*
lin pica_3_N = mkN "Pica" ; --*
lin piccolo_N = mkN "flautim" ; --*
lin pick_12_V2 = mkV2 (mkV "mordiscar") ; --*
lin pick_12_V = mkV "mordiscar" ; --*
lin pick_1_N = variants {mkN "escolha" ; mkN "selecção" ; } ; --*
lin pick_1_V2 = mkV2 (mkV "escolher") ; --*
lin pick_2_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "catar") ; mkV2 (mkV "colhar") ; mkV2 (mkV "colher") ; } ; --*
lin pick_3_N = variants {mkN "creme" ; mkN "nata" ; } ; --*
lin pick_5_N = variants {mkN "palheta" ; mkN "plectro" ; mkN "Plectro" ; } ; --*
lin pick_5_V2 = mkV2 (mkV "tirar") ; --*
lin pick_6_V2 = variants {mkV2 (mkV "limpar") ; mkV2 (mkV "tirar") ; } ; --*
lin pick_7_N = mkN "picareta" ; --*
lin pick_9_N = variants {mkN "escolha" ; mkN "seleção" ; mkN "selecção" ; } ; --*
lin pick_at_3_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "minimizar") ; } ; --*
lin pickaxe_1_N = mkN "picareta" ; --*
lin picket_1_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin picket_1_V2 = mkV2 (mkV "piquetar") ; --*
lin pickle_1_N = mkN "picles" ; --*
lin pickle_2_N = variants {mkN "dificuldade" ; mkN "merda" ; mkN "of" ; mkN "problema" ; } ; --*
lin pickle_V2 = mkV2 (mkV "salgar") ; --*
lin pick_off_2_V3 = variants {mkV3 (mkV "off") ; mkV3 (mkV "tirar") ; } ; --*
lin pick_on_V2 = variants {mkV2 (mkV "acusar") ; mkV2 (mkV "culpar") ; mkV2 (mkV "fault") ; mkV2 (mkV "repreender") ; } ; --*
lin pick_out_1_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "selecionar") ; } ; --*
lin pick_out_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin pickpocket_N = variants {mkN "batedor" ; mkN "trombadinha" ; } ; --*
lin pick_up_11_V2 = mkV2 (mkV "up") ; --*
lin pick_up_12_V2 = variants {mkV2 (mkV "elevar") ; mkV2 (mkV "intoxicar") ; mkV2 (mkV "up") ; } ; --*
lin pick_up_13_V = variants {mkV "around" ; mkV "up" ; } ; --*
lin pick_up_15_V2 = variants {mkV2 (mkV "comer") ; mkV2 (mkV "up") ; } ; --*
lin pick_up_15_V = variants {mkV "comer" ; mkV "up" ; } ; --*
lin pick_up_16_V2 = mkV2 (mkV "pagar") ; --*
lin pick_up_1_N = variants {mkN "camioneta" ; mkN "picape" ; mkN "pickup" ; mkN "truck" ; } ; --*
lin pick_up_1_V2 = mkV2 (mkV "up") ; --*
lin pick_up_1_V = mkV "up" ; --*
lin pick_up_3_V2 = mkV2 (mkV "up") ; --*
lin pick_up_4_V2 = variants {mkV2 (mkV "coletar") ; mkV2 (mkV "for") ; mkV2 (mkV "up") ; } ; --*
lin pick_up_7_N = mkN "captador" ; --*
lin pick_up_7_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "prender") ; mkV2 (mkV "up") ; } ; --*
lin pick_up_8_N = mkN "recolha" ; --*
lin pick_up_9_V2 = variants {mkV2 (mkV "captar") ; mkV2 (mkV "up") ; } ; --*
lin picnic_1_N = variants {mkN "day" ; mkN "passeio" ; mkN "picnic" ; } ; --*
lin picnic_2_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin picnic_3_N = variants {mkN "piquenique" ; mkN "Pique-nique" ; } ; --*
lin picnic_V = mkV "fazer" ; --*
lin picometer_1_N = mkN "Picometro" ; --*
lin picornavirus_N = mkN "Picornavirus" ; --*
lin pictograph_N = mkN "pictograma" ; --*
lin pictorial_2_A = variants {mkA "gráfico" ; mkA "vivaz" ; } ; --*
lin picture_10_N = variants {mkN "desenho" ; mkN "figura" ; mkN "foto" ; mkN "fotografia" ; mkN "ilustração" ; mkN "imagem" ; mkN "retrato" ; } ; --*
lin picture_1_N = variants {mkN "desenho" ; mkN "figura" ; mkN "fotografia" ; mkN "ícone" ; mkN "Ícone" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin picture_1_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin picture_2_N = mkN "pintura" ; --*
lin picture_3_N = variants {mkN "imagem" ; mkN "picture" ; } ; --*
lin picture_5_N = variants {mkN "desenho" ; mkN "matter" ; } ; --*
lin picture_6_N = variants {mkN "cinema" ; mkN "filme" ; mkN "película" ; mkN "picture" ; mkN "produção" ; mkN "show" ; } ; --*
lin picture_7_N = variants {mkN "video" ; mkN "vídeo" ; mkN "vídeos" ; } ; --*
lin picture_8_N = variants {mkN "caracterização" ; mkN "caraterização" ; mkN "descrição" ; mkN "picture" ; } ; --*
lin picture_card_N = mkN "card" ; --*
lin picture_gallery_N = variants {mkN "galeria" ; mkN "gallery" ; } ; --*
lin picturesque_1_A = variants {mkA "pitoresca" ; mkA "pitoresco" ; } ; --*
lin picturesque_2_A = variants {mkA "pitoresca" ; mkA "pitoresco" ; } ; --*
lin picturing_2_N = variants {mkN "representation" ; mkN "retrato" ; } ; --*
lin piddle_1_V = variants {mkV "away" ; mkV "desperdiçar" ; } ; --*
lin piddle_2_V = variants {mkV "a" ; mkV "mijar" ; mkV "oneself" ; mkV "urinar" ; mkV "water" ; } ; --*
lin piddle_N = variants {mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin pidgin_N = mkN "pidgin" ; --*
lin pie_1_N = variants {mkN "empada" ; mkN "Pastel" ; mkN "torta" ; } ; --*
lin pie_2_N = variants {mkN "European" ; mkN "Língua" ; } ; --*
lin piebald_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin piece_11_N = variants {mkN "instante" ; mkN "momento" ; mkN "quando" ; mkN "segundo" ; mkN "tempo" ; } ; --*
lin piece_12_N = variants {mkN "parte" ; mkN "quinhão" ; } ; --*
lin piece_13_N = mkN "peça" ; --*
lin piece_1_N = variants {mkN "peça" ; mkN "pedaço" ; } ; --*
lin piece_2_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "montar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin piece_3_N = variants {mkN "parte" ; mkN "pedaço" ; mkN "porção" ; mkN "secção" ; mkN "tomo" ; } ; --*
lin piece_4_N = variants {mkN "Composição" ; mkN "composition" ; mkN "of" ; } ; --*
lin piece_4_V2 = mkV2 (mkV "mordiscar") ; --*
lin piece_5_V2 = mkV2 (mkV "consertar") ; --*
lin piece_7_N = mkN "arma" ; --*
lin piece_8_N = mkN "rodela" ; --*
lin piecemeal_Adv = variants {mkAdv "by" ; mkAdv "pouco" ; mkAdv "stages" ; } ; --*
lin pied_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin piedmont_3_N = mkN "Piemonte" ; --*
lin pieplant_N = mkN "ruibarbo" ; --*
lin pier_1_N = variants {mkN "ancoradouro" ; mkN "molhe" ; mkN "píer" ; mkN "plataforma" ; } ; --*
lin pier_2_N = mkN "pilar" ; --*
lin pier_3_N = mkN "pilar" ; --*
lin pierce_2_V2 = mkV2 (mkV "penetrar") ; --*
lin pierce_5_V2 = variants {mkV2 (mkV "furar") ; mkV2 (mkV "perfurar") ; } ; --*
lin pierrot_N = variants {mkN "Pierrô" ; mkN "Pierrot" ; } ; --*
lin pietistic_2_A = mkA "hipócrita" ; --*
lin piezoelectricity_N = variants {mkN "effect" ; mkN "Piezoelectricidade" ; } ; --*
lin piezometer_N = variants {mkN "Piezómetro" ; mkN "Piezômetro" ; } ; --*
lin piffle_1_V = mkV "tagarelar" ; --*
lin piffle_N = mkN "conversa" ; --*
lin pig_1_N = variants {mkN "porco" ; mkN "scrofa" ; mkN "suíno" ; mkN "Sus" ; } ; --*
lin pig_2_N = variants {mkN "person" ; mkN "porco" ; } ; --*
lin pig_2_V = mkV "devorar" ; --*
lin pig_3_N = mkN "porco" ; --*
lin pig_3_V = mkV "parir" ; --*
lin pig_4_N = variants {mkN "policial" ; mkN "tira" ; } ; --*
lin pigboat_N = variants {mkN "submarino" ; mkN "Submarinos" ; } ; --*
lin pigeonhole_2_V2 = mkV2 (mkV "estereotipar") ; --*
lin pigeon_N = variants {mkN "pomba" ; mkN "pombo" ; } ; --*
lin piggy_N = variants {mkN "leitão" ; mkN "porquinho" ; } ; --*
lin pig_iron_N = mkN "iron" ; --*
lin piglet_N = variants {mkN "leitão" ; mkN "porquinho" ; } ; --*
lin pigment_1_N = variants {mkN "pigmento" ; mkN "Pigmentos" ; } ; --*
lin pigment_3_N = variants {mkN "cor" ; mkN "pintura" ; mkN "tinta" ; } ; --*
lin pigmy_1_N = mkN "pigmeu" ; --*
lin pigmy_2_N = mkN "pigmeus" ; --*
lin pig_out_V = variants {mkV "devorar" ; mkV "encher" ; mkV "out" ; } ; --*
lin pigsty_N = variants {mkN "aprisco" ; mkN "chiqueiro" ; mkN "pocilga" ; mkN "pocilgas" ; } ; --*
lin pigswill_N = mkN "lavagem" ; --*
lin pigtail_N = mkN "maria-chiquinha" ; --*
lin pigwash_N = mkN "lavagem" ; --*
lin pike_1_N = variants {mkN "autoestrada" ; mkN "auto-estrada" ; mkN "estrada" ; mkN "highway" ; mkN "rodovia" ; mkN "super-autopista" ; mkN "via" ; mkN "vias" ; } ; --*
lin pike_2_N = mkN "lúcio" ; --*
lin pike_3_N = mkN "pique" ; --*
lin pike_4_N = variants {mkN "chuço" ; mkN "lança" ; mkN "pique" ; } ; --*
lin pilaff_1_N = mkN "pilaf" ; --*
lin pilaster_N = mkN "Pilastra" ; --*
lin pilchard_1_N = mkN "sardinha" ; --*
lin pilchard_2_N = variants {mkN "pilchardus" ; mkN "sardinha" ; } ; --*
lin pile_1_N = variants {mkN "acúmulo" ; mkN "cúmulo" ; mkN "grupo" ; mkN "montão" ; mkN "monte" ; mkN "pilha" ; } ; --*
lin pile_1_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "agavelar") ; mkV2 (mkV "empilhar") ; } ; --*
lin pile_2_V2 = mkV2 (mkV "lotar") ; --*
lin pile_4_N = mkN "madeixa" ; --*
lin pile_5_N = variants {mkN "pile" ; mkN "pilha" ; } ; --*
lin pile_driver_N = mkN "driver" ; --*
lin pile_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin piles_1_N = variants {mkN "hemorróida" ; mkN "hemorróidas" ; } ; --*
lin piles_2_N = mkN "montão" ; --*
lin pile_up_3_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin pile_up_V = variants {mkV "acumular" ; mkV "aglomerar" ; mkV "amontoar" ; mkV "conglomerar" ; mkV "up" ; } ; --*
lin pilferer_N = variants {mkN "chouriço" ; mkN "gatuno" ; mkN "thief" ; } ; --*
lin pilfer_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin pilfer_V = variants {mkV "afanar" ; mkV "furtar" ; mkV "larapiar" ; mkV "roubar" ; mkV "surrupiar" ; } ; --*
lin pilgrim_1_N = mkN "peregrino" ; --*
lin pilgrim_2_N = variants {mkN "Father" ; mkN "Peregrinos" ; } ; --*
lin pilgrim_3_N = mkN "peregrino" ; --*
lin pilgrimage_N = variants {mkN "journey" ; mkN "Lugares" ; mkN "peregrinagem" ; } ; --*
lin pill_2_N = variants {mkN "comprimido" ; mkN "pílula" ; } ; --*
lin pill_5_N = variants {mkN "contraceptive" ; mkN "control" ; mkN "drug" ; mkN "pill" ; mkN "pílula" ; } ; --*
lin pillage_1_N = variants {mkN "botim" ; mkN "espólio" ; mkN "money" ; mkN "pilhagem" ; mkN "rapina" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin pillage_2_N = variants {mkN "pilhagem" ; mkN "saque" ; } ; --*
lin pillager_N = mkN "assaltante" ; --*
lin pillage_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin pillar_2_N = mkN "coluna" ; --*
lin pillar_3_N = mkN "pilar" ; --*
lin pillar_4_N = variants {mkN "coluna" ; mkN "pilar" ; } ; --*
lin pillar_5_N = variants {mkN "coluna" ; mkN "Coluna" ; mkN "pilar" ; } ; --*
lin pillbox_1_N = mkN "turbante" ; --*
lin pillory_3_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "crucificar") ; } ; --*
lin pillory_N = variants {mkN "pelourinho" ; mkN "Pelourinho" ; } ; --*
lin pillow_fight_N = mkN "fight" ; --*
lin pillow_N = variants {mkN "almofada" ; mkN "coxim" ; mkN "descanso" ; mkN "travesseiro" ; } ; --*
lin pillow_V2 = mkV2 (mkV "apoiar") ; --*
lin pilocarpine_N = mkN "pilocarpina" ; --*
lin pilot_1_N = variants {mkN "pilot" ; mkN "piloto" ; } ; --*
lin pilot_1_V2 = variants {mkV2 (mkV "avionar") ; mkV2 (mkV "pilotar") ; mkV2 (mkV "viajar") ; } ; --*
lin pilot_2_N = mkN "piloto" ; --*
lin pilot_2_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "pilotar") ; } ; --*
lin pilot_4_N = variants {mkN "arquetipo" ; mkN "Arquetipo" ; mkN "arquétipo" ; } ; --*
lin pilot_5_N = variants {mkN "burner" ; mkN "light" ; mkN "piloto" ; } ; --*
lin pilot_burner_N = variants {mkN "burner" ; mkN "light" ; mkN "piloto" ; } ; --*
lin piloting_1_N = variants {mkN "navegação" ; mkN "pilotagem" ; } ; --*
lin pilot_light_1_N = variants {mkN "burner" ; mkN "light" ; mkN "piloto" ; } ; --*
lin pilus_2_N = mkN "pilus" ; --*
lin pimento_1_N = variants {mkN "annuum" ; mkN "pepper" ; mkN "pimentão" ; mkN "pimento" ; } ; --*
lin pimple_N = variants {mkN "acne" ; mkN "borbulha" ; mkN "espinha" ; mkN "furúnculo" ; } ; --*
lin pimp_N = variants {mkN "cafetão" ; mkN "chulo" ; mkN "man" ; mkN "proxeneta" ; mkN "proxenetismo" ; mkN "safado" ; } ; --*
lin pimp_V = mkV "arranjar" ; --*
lin pin_2_V2 = mkV2 (mkV "alfinetar") ; --*
lin pin_4_N = variants {mkN "identification" ; mkN "number" ; mkN "Número" ; } ; --*
lin pin_9_N = mkN "alfinete" ; --*
lin pinafore_N = mkN "avental" ; --*
lin pinball_N = variants {mkN "game" ; mkN "pinball" ; } ; --*
lin pince_nez_N = mkN "pincenez" ; --*
lin pincer_1_N = variants {mkN "of" ; mkN "pinça" ; mkN "tenazes" ; } ; --*
lin pincer_2_N = mkN "puã" ; --*
lin pinch_1_V2 = variants {mkV2 (mkV "apertar") ; mkV2 (mkV "beliscar") ; mkV2 (mkV "espremer") ; } ; --*
lin pinch_3_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin pinch_3_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin pinch_3_V = variants {mkV "afanar" ; mkV "furtar" ; mkV "larapiar" ; mkV "roubar" ; mkV "surrupiar" ; } ; --*
lin pinch_4_N = variants {mkN "emergência" ; mkN "urgência" ; } ; --*
lin pinch_5_N = mkN "mordiscar" ; --*
lin pinch_5_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "tomar") ; } ; --*
lin pinch_7_N = variants {mkN "arresto" ; mkN "into" ; } ; --*
lin pincushion_N = mkN "almofada" ; --*
lin pindolol_N = mkN "Pindolol" ; --*
lin pin_down_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "especificar") ; } ; --*
lin pin_down_2_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "down") ; } ; --*
lin pine_1_N = variants {mkN "pine" ; mkN "pinheiro" ; mkN "tree" ; } ; --*
lin pine_2_N = variants {mkN "pinheiro" ; mkN "pinho" ; } ; --*
lin pineapple_1_N = variants {mkN "ananás" ; mkN "comosus" ; mkN "plant" ; } ; --*
lin pineapple_2_N = variants {mkN "abacaxi" ; mkN "ananás" ; } ; --*
lin pine_away_V = variants {mkV "away" ; mkV "enlanguescer" ; } ; --*
lin pine_V = variants {mkV "ansiar" ; mkV "desejar" ; } ; --*
lin pinhead_1_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; } ; --*
lin pinion_2_N = variants {mkN "feather" ; mkN "pena" ; mkN "pluma" ; } ; --*
lin pink_1_N = variants {mkN "cor-de-rosa" ; mkN "rosa" ; } ; --*
lin pink_2_N = variants {mkN "cravo" ; mkN "pink" ; } ; --*
lin pink_A = variants {mkA "cor-de-rosa" ; mkA "rosa" ; } ; --*
lin pinkish_A = variants {mkA "cor-de-rosa" ; mkA "rosa" ; } ; --*
lin pin_money_N = mkN "money" ; --*
lin pinna_2_N = mkN "orelha" ; --*
lin pinnace_N = variants {mkN "boat" ; mkN "pinaça" ; } ; --*
lin pinnacle_1_N = mkN "pináculo" ; --*
lin pinnacle_2_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin pinnacle_3_N = mkN "pináculo" ; --*
lin pinny_N = mkN "avental" ; --*
lin pinocytosis_N = mkN "pinocitose" ; --*
lin pinpoint_1_N = variants {mkN "instante" ; mkN "segundo" ; } ; --*
lin pinstripe_1_N = mkN "terno" ; --*
lin pinto_N = mkN "cavalo" ; --*
lin pinwheel_4_N = variants {mkN "cata-vento" ; mkN "wheel" ; } ; --*
lin pinworm_N = variants {mkN "Oxiúro" ; mkN "vermicularis" ; } ; --*
lin pioneer_1_N = variants {mkN "inovador" ; mkN "pioneiro" ; } ; --*
lin pioneer_2_N = mkN "pioneiro" ; --*
lin pioneer_2_V2 = variants {mkV2 (mkV "empreender") ; mkV2 (mkV "iniciar") ; } ; --*
lin pion_N = variants {mkN "Pion" ; mkN "píon" ; mkN "Píon" ; } ; --*
lin pious_A = variants {mkA "piedoso" ; mkA "religioso" ; } ; --*
lin pip_2_V2 = mkV2 (mkV "atirar") ; --*
lin pip_3_N = mkN "semente" ; --*
lin pipage_2_N = variants {mkN "canal" ; mkN "condutas" ; mkN "ducto" ; mkN "duto" ; mkN "tubulação" ; } ; --*
lin pipe_1_N = variants {mkN "cachimbo" ; mkN "pipe" ; } ; --*
lin pipe_2_N = variants {mkN "canal" ; mkN "condutas" ; mkN "ducto" ; mkN "duto" ; mkN "tubulação" ; } ; --*
lin pipe_3_N = variants {mkN "cano" ; mkN "duto" ; mkN "tubo" ; } ; --*
lin pipe_3_V2 = mkV2 (mkV "flautear") ; --*
lin pipe_4_N = mkN "flauta" ; --*
lin pipe_down_V = variants {mkV "aquietar" ; mkV "down" ; mkV "quietar" ; } ; --*
lin pipefish_N = mkN "Peixe-cachimbo" ; --*
lin pipeline_1_N = variants {mkN "a" ; mkN "fofoca" ; mkN "of" ; } ; --*
lin pipeline_2_N = variants {mkN "oleoduto" ; mkN "Óleoduto" ; } ; --*
lin pipe_organ_N = variants {mkN "organ" ; mkN "órgão" ; } ; --*
lin piper_1_N = variants {mkN "flautista" ; mkN "gaiteiro" ; } ; --*
lin piper_2_N = mkN "Piper" ; --*
lin piperin_1_N = mkN "piperina" ; --*
lin pipet_N = mkN "pipeta" ; --*
lin pipette_N = mkN "pipeta" ; --*
lin pipe_up_2_V = variants {mkV "esganiçar" ; mkV "gritar" ; mkV "up" ; } ; --*
lin pipe_V = variants {mkV "esganiçar" ; mkV "gritar" ; mkV "up" ; } ; --*
lin piping_2_N = variants {mkN "canal" ; mkN "condutas" ; mkN "ducto" ; mkN "duto" ; mkN "tubulação" ; } ; --*
lin pipistrelle_1_N = variants {mkN "Morcego-anão" ; mkN "pipistrellus" ; } ; --*
lin piquant_3_A = variants {mkA "chamativo" ; mkA "interessante" ; } ; --*
lin pique_2_N = mkN "irritação" ; --*
lin pique_V2 = variants {mkV2 (mkV "injuriar") ; mkV2 (mkV "insultar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "ofender") ; } ; --*
lin piracy_1_N = mkN "pirataria" ; --*
lin piracy_2_N = variants {mkN "pirata" ; mkN "Pirataria" ; mkN "plágio" ; } ; --*
lin piranha_2_N = mkN "piranha" ; --*
lin pirate_1_N = variants {mkN "pirate" ; mkN "plagiador" ; mkN "plagiário" ; } ; --*
lin pirate_1_V2 = mkV2 (mkV "piratear") ; --*
lin pirate_2_N = variants {mkN "bucaneiro" ; mkN "pirata" ; mkN "robber" ; mkN "rover" ; } ; --*
lin pirate_2_V2 = variants {mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; } ; --*
lin piratical_1_A = mkA "pirático" ; --*
lin pisa_PN = mkPN "Pisa" ; --*
lin pisces_1_PN = variants {mkPN "Peixes" ; mkPN "Pisces" ; mkPN "the" ; } ; --*
lin pisces_3_PN = variants {mkPN "Constelação" ; mkPN "Peixes" ; mkPN "Pisces" ; } ; --*
lin pisiform_N = variants {mkN "bone" ; mkN "osso" ; mkN "pisiforme" ; } ; --*
lin piss_1_N = variants {mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin piss_2_N = variants {mkN "mijo" ; mkN "pê" ; mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin piss_V = variants {mkV "a" ; mkV "mijar" ; mkV "oneself" ; mkV "urinar" ; mkV "water" ; } ; --*
lin pistachio_1_N = variants {mkN "pistache" ; mkN "tree" ; mkN "vera" ; } ; --*
lin pistachio_2_N = variants {mkN "nut" ; mkN "pistache" ; } ; --*
lin pistil_N = mkN "pistilo" ; --*
lin pistol_N = variants {mkN "arm" ; mkN "iron" ; mkN "pistola" ; } ; --*
lin piston_1_N = variants {mkN "Piston" ; mkN "Walter" ; } ; --*
lin piston_2_N = variants {mkN "pistão" ; mkN "Pistão" ; } ; --*
lin pit_10_N = variants {mkN "orquestra" ; mkN "pit" ; } ; --*
lin pit_11_N = mkN "mina" ; --*
lin pit_1_N = variants {mkN "buraco" ; mkN "cavouco" ; mkN "fosso" ; mkN "poço" ; mkN "vala" ; } ; --*
lin pit_3_N = variants {mkN "caroço" ; mkN "endocarpo" ; } ; --*
lin pit_4_N = variants {mkN "inferno" ; mkN "region" ; } ; --*
lin pit_8_N = mkN "armadilha" ; --*
lin pit_9_N = variants {mkN "pedreira" ; mkN "Pedreira" ; mkN "pit" ; } ; --*
lin pitahaya_2_N = mkN "pitaia" ; --*
lin pita_N = variants {mkN "bread" ; mkN "Pita" ; } ; --*
lin pitch_12_V2 = mkV2 (mkV "adaptar") ; --*
lin pitch_1_N = variants {mkN "altura" ; mkN "tom" ; } ; --*
lin pitch_1_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "jogar") ; } ; --*
lin pitch_2_N = mkN "arremesso" ; --*
lin pitch_4_N = variants {mkN "conversa" ; mkN "pitch" ; mkN "talk" ; } ; --*
lin pitch_4_V2 = mkV2 (mkV "entoar") ; --*
lin pitch_5_N = mkN "inclinação" ; --*
lin pitch_5_V2 = variants {mkV2 (mkV "chatinar") ; mkV2 (mkV "mercadejar") ; mkV2 (mkV "traficar") ; } ; --*
lin pitch_5_V = variants {mkV "chatinar" ; mkV "mercadejar" ; mkV "traficar" ; } ; --*
lin pitch_6_N = variants {mkN "alcatrão" ; mkN "piche" ; } ; --*
lin pitch_6_V = variants {mkV "declivar" ; mkV "inclinar" ; } ; --*
lin pitch_8_V2 = variants {mkV2 (mkV "armar") ; mkV2 (mkV "up") ; } ; --*
lin pitch_black_A = variants {mkA "negro" ; mkA "sombrio" ; } ; --*
lin pitchblende_N = mkN "pechblenda" ; --*
lin pitch_dark_A = variants {mkA "negro" ; mkA "sombrio" ; } ; --*
lin pitcher_5_N = mkN "arremessador" ; --*
lin pitchfork_N = mkN "forcado" ; --*
lin pitchfork_V2 = mkV2 (mkV "garfar") ; --*
lin pitchman_2_N = mkN "camelô" ; --*
lin piteous_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin pitfall_1_N = variants {mkN "obstáculo" ; mkN "trap" ; } ; --*
lin pitfall_2_N = mkN "armadilha" ; --*
lin pith_2_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin pithy_A = variants {mkA "conciso" ; mkA "lacónico" ; mkA "sentencioso" ; } ; --*
lin pitiable_1_A = mkA "patético" ; --*
lin pitiable_2_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin pitiful_1_A = mkA "patético" ; --*
lin pitiful_2_A = variants {mkA "deplorável" ; mkA "lamentável" ; } ; --*
lin pitiful_3_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin pitilessness_1_N = mkN "crueldade" ; --*
lin pitilessness_2_N = mkN "crueldade" ; --*
lin pittance_N = mkN "miséria" ; --*
lin pittsburgh_PN = mkPN "Pittsburgh" ; --*
lin pituitary_N = variants {mkN "body" ; mkN "gland" ; mkN "hipófise" ; mkN "pituitária" ; } ; --*
lin pity_1_N = variants {mkN "coisa" ; mkN "compaixão" ; mkN "piedade" ; } ; --*
lin pity_2_N = variants {mkN "lástima" ; mkN "pena" ; } ; --*
lin pity_3_N = variants {mkN "compaixão" ; mkN "misericórdia" ; mkN "piedade" ; } ; --*
lin pity_V2 = variants {mkV2 (mkV "apiedar") ; mkV2 (mkV "apiedar-se") ; mkV2 (mkV "compadecer") ; mkV2 (mkV "for") ; mkV2 (mkV "with") ; } ; --*
lin pivot_1_N = variants {mkN "man" ; mkN "pivô" ; } ; --*
lin pivot_V2 = mkV2 (mkV "girar") ; --*
lin pivot_V = mkV "girar" ; --*
lin pixel_1_N = variants {mkN "element" ; mkN "pixel" ; mkN "Píxel" ; } ; --*
lin pixie_1_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin pixilated_1_A = variants {mkA "bagunceiro" ; mkA "sapeca" ; } ; --*
lin pixy_2_N = variants {mkN "duende" ; mkN "elfo" ; mkN "silfo" ; } ; --*
lin pizza_N = variants {mkN "pie" ; mkN "pizza" ; } ; --*
lin pizzeria_N = variants {mkN "parlor" ; mkN "pizzaria" ; mkN "shop" ; } ; --*
lin pizzicato_N = mkN "pizzicato" ; --*
lin placard_1_V2 = mkV2 (mkV "afixar") ; --*
lin placard_2_V2 = mkV2 (mkV "afixar") ; --*
lin placard_N = variants {mkN "anúncio" ; mkN "cartaz" ; mkN "edital" ; mkN "letreiro" ; mkN "papeleta" ; mkN "rótulo" ; } ; --*
lin placate_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "apaziguar") ; mkV2 (mkV "aplacar") ; mkV2 (mkV "pacificar") ; mkV2 (mkV "serenar") ; mkV2 (mkV "sossegar") ; mkV2 (mkV "tranquilizar") ; } ; --*
lin placation_N = mkN "conciliação" ; --*
lin place_10_N = mkN "posição" ; --*
lin place_10_V2 = mkV2 (mkV "localizar") ; --*
lin place_11_N = variants {mkN "assento" ; mkN "cadeira" ; mkN "lugar" ; } ; --*
lin place_11_V2 = mkV2 (mkV "estimar") ; --*
lin place_12_V2 = mkV2 (mkV "localizar") ; --*
lin place_13_V2 = mkV2 (mkV "investir") ; --*
lin place_14_N = variants {mkN "adro" ; mkN "largo" ; mkN "Piazza" ; mkN "praça" ; } ; --*
lin place_14_V2 = mkV2 (mkV "situar") ; --*
lin place_15_N = variants {mkN "lugar" ; mkN "posição" ; } ; --*
lin place_1_N = variants {mkN "área" ; mkN "point" ; mkN "região" ; } ; --*
lin place_1_V2 = variants {mkV2 (mkV "botar") ; mkV2 (mkV "carregar") ; mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin place_2_N = variants {mkN "campo" ; mkN "terreno" ; } ; --*
lin place_3_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "ranquiar") ; } ; --*
lin place_5_N = mkN "posição" ; --*
lin place_6_V2 = variants {mkV2 (mkV "classificar-se") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin place_7_N = variants {mkN "casa" ; mkN "lar" ; } ; --*
lin place_7_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "dirigir") ; } ; --*
lin place_8_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin place_8_V2 = variants {mkV2 (mkV "identificar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin place_9_N = variants {mkN "local" ; mkN "lugar" ; mkN "posição" ; } ; --*
lin place_9_V2 = mkV2 (mkV "contratar") ; --*
lin placebo_1_N = mkN "placebo" ; --*
lin placeholder_1_N = variants {mkN "procurador" ; mkN "procuradora" ; mkN "representante" ; } ; --*
lin placement_1_N = variants {mkN "espaçamento" ; mkN "posição" ; } ; --*
lin placement_3_N = variants {mkN "colocação" ; mkN "posicionamento" ; } ; --*
lin place_name_N = variants {mkN "name" ; mkN "topônimo" ; } ; --*
lin placenta_1_N = mkN "placenta" ; --*
lin placenta_2_N = mkN "placenta" ; --*
lin placental_N = variants {mkN "mamífero" ; mkN "mammal" ; } ; --*
lin placid_1_A = variants {mkA "quieto" ; mkA "silenciosa" ; } ; --*
lin placidity_2_N = mkN "serenidade" ; --*
lin placoderm_N = variants {mkN "placodermo" ; mkN "Placodermos" ; } ; --*
lin plagiarism_1_N = mkN "plágio" ; --*
lin plagiarism_2_N = variants {mkN "pirata" ; mkN "Pirataria" ; mkN "plágio" ; } ; --*
lin plagiarist_1_N = variants {mkN "pirate" ; mkN "plagiador" ; mkN "plagiário" ; } ; --*
lin plagiarize_1_V2 = mkV2 (mkV "plagiar") ; --*
lin plagiocephaly_N = mkN "plagiocefalia" ; --*
lin plagioclase_N = variants {mkN "plagioclase" ; mkN "Plagióclase" ; } ; --*
lin plague_1_N = variants {mkN "peste" ; mkN "Peste" ; mkN "praga" ; } ; --*
lin plague_1_V2 = mkV2 (mkV "empestear") ; --*
lin plague_2_N = mkN "peste" ; --*
lin plague_2_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin plague_3_N = mkN "infestação" ; --*
lin plaguy_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin plaice_1_N = mkN "solha" ; --*
lin plaid_N = mkN "tartan" ; --*
lin plain_1_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin plain_1_N = variants {mkN "campanha" ; mkN "planície" ; } ; --*
lin plain_2_A = mkA "simples" ; --*
lin plain_4_A = variants {mkA "pura" ; mkA "puro" ; } ; --*
lin plain_Adv = variants {mkAdv "abertamente" ; mkAdv "claramente" ; mkAdv "de" ; mkAdv "evidentemente" ; mkAdv "obviamente" ; } ; --*
lin plainsong_N = variants {mkN "Canto" ; mkN "chant" ; } ; --*
lin plain_spoken_2_A = mkA "correto" ; --*
lin plaint_2_N = variants {mkN "lamentação" ; mkN "lamento" ; mkN "pranto" ; } ; --*
lin plaintiff_N = mkN "querelante" ; --*
lin plaintive_A = variants {mkA "fúnebre" ; mkA "lutuoso" ; } ; --*
lin plain_V = variants {mkV "lamentar" ; mkV "off" ; mkV "reclamar" ; } ; --*
lin plait_1_N = variants {mkN "Nó" ; mkN "trança" ; } ; --*
lin plait_1_V2 = variants {mkV2 (mkV "entrançar") ; mkV2 (mkV "trançar") ; } ; --*
lin plait_2_N = variants {mkN "plissado" ; mkN "prega" ; } ; --*
lin plait_2_V2 = variants {mkV2 (mkV "entrançar") ; mkV2 (mkV "trançar") ; } ; --*
lin plan_1_N = variants {mkN "concepção" ; mkN "ideia" ; mkN "intenção" ; mkN "plano" ; mkN "planos" ; mkN "programa" ; mkN "programação" ; mkN "projecto" ; mkN "projeto" ; mkN "traçado" ; } ; --*
lin plan_1_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "planejar") ; } ; --*
lin plan_2_N = variants {mkN "esquema" ; mkN "plano" ; } ; --*
lin plan_2_V2 = mkV2 (mkV "planejar") ; --*
lin plan_3_V2 = variants {mkV2 (mkV "arquitetar") ; mkV2 (mkV "inventar") ; mkV2 (mkV "planear") ; mkV2 (mkV "planejar") ; mkV2 (mkV "projetar") ; } ; --*
lin plan_4_V2 = variants {mkV2 (mkV "desenhar") ; mkV2 (mkV "esboçar") ; mkV2 (mkV "projetar") ; } ; --*
lin planar_A = mkA "bidimensional" ; --*
lin planate_A = mkA "alisado" ; --*
lin plane_1_N = variants {mkN "aeronaves" ; mkN "aeroplano" ; mkN "avião" ; } ; --*
lin plane_2_N = variants {mkN "plano" ; mkN "Plano" ; } ; --*
lin plane_2_V2 = mkV2 (mkV "planar") ; --*
lin plane_2_V = mkV "planar" ; --*
lin plane_3_V2 = mkV2 (mkV "aplainar") ; --*
lin plane_4_N = variants {mkN "machine" ; mkN "plaina" ; } ; --*
lin planet_1_N = variants {mkN "planet" ; mkN "planeta" ; } ; --*
lin planet_2_N = mkN "satélite" ; --*
lin planet_3_N = mkN "planeta" ; --*
lin planetal_A = mkA "planetário" ; --*
lin planetarium_1_N = mkN "planetário" ; --*
lin planetarium_2_N = mkN "planetário" ; --*
lin planetarium_3_N = variants {mkN "planetário" ; mkN "Planetários" ; } ; --*
lin planetary_1_A = mkA "planetário" ; --*
lin planetary_2_A = mkA "terrestre" ; --*
lin planetary_4_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin planetesimal_N = mkN "Planetesimal" ; --*
lin plangent_A = mkA "plangente" ; --*
lin plank_1_N = variants {mkN "prancha" ; mkN "tábua" ; } ; --*
lin plank_5_V2 = mkV2 (mkV "mergulhar") ; --*
lin plankton_N = variants {mkN "Plancton" ; mkN "plâncton" ; } ; --*
lin planless_A = mkA "à" ; --*
lin planner_1_N = mkN "planejador" ; --*
lin planner_2_N = mkN "agenda" ; --*
lin planning_2_N = mkN "planejamento" ; --*
lin planning_3_N = variants {mkN "planeamento" ; mkN "planejamento" ; mkN "Planejamento" ; } ; --*
lin plant_1_N = variants {mkN "fábrica" ; mkN "plant" ; mkN "usina" ; } ; --*
lin plant_1_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "plantar") ; mkV2 (mkV "pôr") ; } ; --*
lin plant_2_N = variants {mkN "flora" ; mkN "life" ; mkN "planta" ; } ; --*
lin plant_2_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "embutir") ; mkV2 (mkV "encaixar") ; mkV2 (mkV "implantar") ; } ; --*
lin plant_3_V2 = variants {mkV2 (mkV "constituir") ; mkV2 (mkV "estabelecer") ; mkV2 (mkV "fundar") ; } ; --*
lin plant_6_V2 = variants {mkV2 (mkV "implantar") ; mkV2 (mkV "plantar") ; } ; --*
lin plantain_1_N = mkN "plantago" ; --*
lin plantain_2_N = variants {mkN "paradisiaca" ; mkN "plantago" ; mkN "tree" ; } ; --*
lin plantain_3_N = mkN "plátano" ; --*
lin plantar_A = mkA "da" ; --*
lin plantation_1_N = variants {mkN "plantação" ; mkN "plantio" ; mkN "viveirodeplantas" ; } ; --*
lin plantation_3_N = variants {mkN "horta" ; mkN "pomar" ; mkN "Pomar" ; mkN "vergel" ; } ; --*
lin planter_1_N = variants {mkN "fazendeiro" ; mkN "owner" ; } ; --*
lin plantigrade_A = mkA "plantígrados" ; --*
lin planting_1_N = mkN "plantações" ; --*
lin plant_louse_N = variants {mkN "louse" ; mkN "pulgões" ; } ; --*
lin planula_N = mkN "plânula" ; --*
lin plan_V = mkV "planejar" ; --*
lin plan_VV = variants {mkVV (mkV "after") ; mkVV (mkV "planejar") ; } ; --*
lin plaque_2_N = variants {mkN "placa" ; mkN "tablet" ; } ; --*
lin plash_2_V2 = mkV2 (mkV "borrifar") ; --*
lin plash_N = variants {mkN "borrifo" ; mkN "respingo" ; } ; --*
lin plasm_1_N = variants {mkN "plasm" ; mkN "plasma" ; } ; --*
lin plasm_2_N = mkN "plasma" ; --*
lin plasma_1_N = mkN "plasma" ; --*
lin plasma_3_N = mkN "plasma" ; --*
lin plasmid_N = variants {mkN "DNA" ; mkN "plasmídeo" ; } ; --*
lin plasmin_N = mkN "plasmina" ; --*
lin plasminogen_N = mkN "plaminogênio" ; --*
lin plaster_1_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "revestir") ; } ; --*
lin plaster_2_V2 = mkV2 (mkV "cobrir") ; --*
lin plaster_3_N = mkN "emplastro" ; --*
lin plaster_3_V2 = mkV2 (mkV "afixar") ; --*
lin plaster_4_N = mkN "gesso" ; --*
lin plaster_4_V2 = mkV2 (mkV "engessar") ; --*
lin plaster_5_N = variants {mkN "diaquilão" ; mkN "plaster" ; } ; --*
lin plaster_5_V2 = variants {mkV2 (mkV "emassar") ; mkV2 (mkV "engessar") ; } ; --*
lin plaster_6_V2 = variants {mkV2 (mkV "curativizar") ; mkV2 (mkV "emplastrar") ; } ; --*
lin plastic_1_N = variants {mkN "Plastico" ; mkN "plástico" ; mkN "Plásticos" ; } ; --*
lin plastic_2_N = variants {mkN "card" ; mkN "cartão" ; mkN "plate" ; } ; --*
lin plasticine_N = mkN "plasticina" ; --*
lin plasticity_N = variants {mkN "maleabilidade" ; mkN "plasticidade" ; mkN "plasticità" ; } ; --*
lin plasticizer_1_N = mkN "plastificante" ; --*
lin plastid_N = mkN "plastídeo" ; --*
lin plastination_N = mkN "plastinação" ; --*
lin plate_15_N = variants {mkN "dentadura" ; mkN "plate" ; } ; --*
lin plate_2_N = mkN "placa" ; --*
lin plate_4_N = mkN "prato" ; --*
lin plateau_N = variants {mkN "patamar" ; mkN "planalto" ; mkN "Planalto" ; mkN "Planaltos" ; mkN "platô" ; mkN "superfícieplana" ; } ; --*
lin platelet_N = variants {mkN "plaqueta" ; mkN "Plaqueta" ; mkN "platelet" ; mkN "trombócito" ; } ; --*
lin plate_V2 = variants {mkV2 (mkV "banhar") ; mkV2 (mkV "chapar") ; mkV2 (mkV "laminar") ; } ; --*
lin platform_1_N = mkN "tablado" ; --*
lin platform_3_N = mkN "plataforma" ; --*
lin plating_1_N = variants {mkN "plating" ; mkN "revestimentos" ; } ; --*
lin platinum_N = variants {mkN "number" ; mkN "platina" ; mkN "platinada" ; } ; --*
lin platitude_N = variants {mkN "banalidade" ; mkN "chavão" ; mkN "cliché" ; mkN "trivialidade" ; mkN "vulgaridade" ; } ; --*
lin platonic_1_A = mkA "platônico" ; --*
lin platoon_1_N = mkN "pelotão" ; --*
lin platter_1_N = variants {mkN "bandeja" ; mkN "prato" ; mkN "travessa" ; } ; --*
lin platter_2_N = variants {mkN "disco" ; mkN "record" ; mkN "recording" ; } ; --*
lin platypus_N = variants {mkN "anatinus" ; mkN "ornitorrinco" ; mkN "platypus" ; } ; --*
lin plaudit_1_N = variants {mkN "aclamação" ; mkN "aplauso" ; mkN "ovação" ; } ; --*
lin plausible_1_A = mkA "plausível" ; --*
lin plausible_2_A = mkA "plausível" ; --*
lin play_10_V2 = mkV2 (mkV "apostar") ; --*
lin play_12_V = variants {mkV "brincar" ; mkV "fingir" ; } ; --*
lin play_13_V2 = mkV2 (mkV "tocar") ; --*
lin play_13_V = mkV "tocar" ; --*
lin play_14_N = mkN "brincadeira" ; --*
lin play_14_V2 = mkV2 (mkV "performar") ; --*
lin play_14_V = mkV "performar" ; --*
lin play_15_N = variants {mkN "jogo" ; mkN "vez" ; } ; --*
lin play_15_V2 = mkV2 (mkV "jogar") ; --*
lin play_15_V = mkV "jogar" ; --*
lin play_16_N = variants {mkN "aposta" ; mkN "jogo" ; } ; --*
lin play_16_V2 = variants {mkV2 (mkV "brincar") ; mkV2 (mkV "jogar") ; } ; --*
lin play_17_N = mkN "esgrima" ; --*
lin play_17_V2 = variants {mkV2 (mkV "desempenhar") ; mkV2 (mkV "ser") ; } ; --*
lin play_17_V = variants {mkV "desempenhar" ; mkV "ser" ; } ; --*
lin play_18_V2 = mkV2 (mkV "tocar") ; --*
lin play_19_V = mkV "brincar" ; --*
lin play_1_N = variants {mkN "drama" ; mkN "play" ; mkN "teatro" ; } ; --*
lin play_1_V2 = mkV2 (mkV "jogar") ; --*
lin play_1_V = mkV "jogar" ; --*
lin play_20_V = variants {mkV "jogar" ; mkV "manipular" ; } ; --*
lin play_21_V = mkV "brincar" ; --*
lin play_22_V = mkV "funcionar" ; --*
lin play_23_V = variants {mkV "brincar" ; mkV "folgar" ; mkV "jogar" ; } ; --*
lin play_24_V = mkV "folgar" ; --*
lin play_25_V = variants {mkV "actuar" ; mkV "atuar" ; mkV "fazer" ; mkV "representar" ; } ; --*
lin play_26_V = mkV "passar" ; --*
lin play_27_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "for") ; mkV2 (mkV "trazer") ; } ; --*
lin play_28_V2 = mkV2 (mkV "vazar") ; --*
lin play_28_V = mkV "vazar" ; --*
lin play_29_V2 = mkV2 (mkV "apostar") ; --*
lin play_2_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "ter") ; } ; --*
lin play_2_V = variants {mkV "afetar" ; mkV "ter" ; } ; --*
lin play_30_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "jogar") ; } ; --*
lin play_31_V2 = mkV2 (mkV "jogar") ; --*
lin play_32_V2 = mkV2 (mkV "usar") ; --*
lin play_33_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "utilizar") ; } ; --*
lin play_3_N = mkN "tática" ; --*
lin play_3_V = mkV "tocar" ; --*
lin play_4_N = mkN "manobra" ; --*
lin play_4_V2 = variants {mkV2 (mkV "atuar") ; mkV2 (mkV "representar") ; } ; --*
lin play_5_N = variants {mkN "jogo" ; mkN "jogos" ; } ; --*
lin play_5_V = variants {mkV "brincar" ; mkV "jogar" ; } ; --*
lin play_6_N = mkN "jogar" ; --*
lin play_6_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "retocar") ; mkV2 (mkV "tocar") ; } ; --*
lin play_7_N = mkN "tentativa" ; --*
lin play_7_V2 = mkV2 (mkV "tocar") ; --*
lin play_7_V = mkV "tocar" ; --*
lin play_8_N = variants {mkN "jogo" ; mkN "play" ; } ; --*
lin play_8_V2 = variants {mkV2 (mkV "as") ; mkV2 (mkV "simular") ; } ; --*
lin play_9_N = variants {mkN "jogo" ; mkN "of" ; mkN "period" ; } ; --*
lin play_acting_N = variants {mkN "atuação" ; mkN "interpretação" ; mkN "representação" ; } ; --*
lin play_actor_1_N = mkN "ator" ; --*
lin play_along_V2 = variants {mkV2 (mkV "acompanhar") ; mkV2 (mkV "along") ; } ; --*
lin playboy_N = mkN "playboy" ; --*
lin player_1_N = variants {mkN "jogador" ; mkN "participante" ; } ; --*
lin player_2_N = variants {mkN "instrumentalista" ; mkN "instrumentista" ; mkN "músico" ; mkN "tocador" ; } ; --*
lin player_3_N = variants {mkN "actor" ; mkN "artista" ; mkN "ator" ; mkN "intérprete" ; mkN "player" ; } ; --*
lin player_5_N = variants {mkN "parte" ; mkN "participante" ; } ; --*
lin player_piano_N = variants {mkN "piano" ; mkN "pianola" ; } ; --*
lin playful_A = variants {mkA "arteiro" ; mkA "brincalhão" ; mkA "travesso" ; } ; --*
lin playfulness_3_N = variants {mkN "divertimento" ; mkN "entreterimento" ; } ; --*
lin playground_1_N = variants {mkN "area" ; mkN "áreas" ; mkN "spot" ; } ; --*
lin playground_2_N = variants {mkN "parque" ; mkN "parquinho" ; mkN "Play" ; mkN "playground" ; } ; --*
lin playing_3_N = variants {mkN "atuação" ; mkN "interpretação" ; mkN "representação" ; } ; --*
lin playing_card_N = mkN "card" ; --*
lin playing_field_2_N = variants {mkN "area" ; mkN "campo" ; mkN "field" ; } ; --*
lin playlist_1_N = variants {mkN "list" ; mkN "lista" ; } ; --*
lin play_on_V2 = mkV2 (mkV "brincar") ; --*
lin play_out_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "out") ; } ; --*
lin playpen_N = variants {mkN "cercadinho" ; mkN "chiqueirinho" ; } ; --*
lin plaything_N = variants {mkN "brinquedo" ; mkN "Brinquedos" ; } ; --*
lin playtime_N = mkN "hora" ; --*
lin play_up_to_V2 = mkV2 (mkV "up") ; --*
lin play_up_V2 = variants {mkV2 (mkV "destacar") ; mkV2 (mkV "realçar") ; mkV2 (mkV "salientar") ; mkV2 (mkV "up") ; } ; --*
lin playwright_N = variants {mkN "dramaturgo" ; mkN "Dramaturgo" ; mkN "Dramaturgos" ; } ; --*
lin plaza_1_N = variants {mkN "adro" ; mkN "largo" ; mkN "Piazza" ; mkN "praça" ; } ; --*
lin plaza_2_N = variants {mkN "center" ; mkN "centre" ; mkN "centro" ; mkN "mall" ; mkN "shopping" ; } ; --*
lin plea_1_N = mkN "súplica" ; --*
lin pleach_1_V2 = variants {mkV2 (mkV "trança") ; mkV2 (mkV "trançar") ; } ; --*
lin plead_1_V = variants {mkV "rogar" ; mkV "suplicar" ; } ; --*
lin plead_2_V = mkV "pleitar" ; --*
lin plead_3_V = variants {mkV "advogar" ; mkV "pleitear" ; } ; --*
lin plead_4_V2 = mkV2 (mkV "apelar") ; --*
lin plead_4_V = mkV "apelar" ; --*
lin plead_4_VS = mkVS (mkV "apelar") ; --*
lin pleading_N = mkN "alegação" ; --*
lin pleasance_2_N = variants {mkN "alegria" ; mkN "prazer" ; } ; --*
lin pleasant_1_A = variants {mkA "agradável" ; mkA "simpático" ; } ; --*
lin pleasantness_1_N = mkN "agradabilidade" ; --*
lin please_2_V = mkV "agradar" ; --*
lin please_3_V = mkV "satisfazer" ; --*
lin please_Adv = variants {mkAdv "faça" ; mkAdv "por" ; } ; --*
lin pleased_1_A = variants {mkA "contente" ; mkA "satisfeito" ; } ; --*
lin pleased_2_A = variants {mkA "of" ; mkA "satisfeito" ; } ; --*
lin please_V2 = variants {mkV2 (mkV "agradar") ; mkV2 (mkV "aprazer") ; mkV2 (mkV "comprazer") ; mkV2 (mkV "embevecer") ; mkV2 (mkV "encantar") ; mkV2 (mkV "gostar") ; mkV2 (mkV "satisfazer") ; } ; --*
lin please_Voc = variants {VocNP (MassNP (UseN (mkN "faça"))) ; VocNP (MassNP (UseN (mkN "por"))) ; } ; --*
lin pleasing_1_A = mkA "aprazível" ; --*
lin pleasurable_A = variants {mkA "agradável" ; mkA "ameno" ; mkA "aprazível" ; } ; --*
lin pleasure_1_N = variants {mkN "alegria" ; mkN "prazer" ; } ; --*
lin pleasure_2_N = variants {mkN "alegria" ; mkN "deleite" ; mkN "prazer" ; } ; --*
lin pleasure_4_N = variants {mkN "delícia" ; mkN "prazer" ; } ; --*
lin pleasure_ground_N = variants {mkN "ground" ; mkN "park" ; mkN "parque" ; } ; --*
lin pleat_1_V2 = variants {mkV2 (mkV "plissar") ; mkV2 (mkV "preguear") ; } ; --*
lin pleat_2_V2 = mkV2 (mkV "plissar") ; --*
lin pleat_N = variants {mkN "plissado" ; mkN "prega" ; } ; --*
lin plebeian_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "popular" ; mkA "vulgar" ; } ; --*
lin plebeian_N = mkN "plebeu" ; --*
lin plebiscite_N = variants {mkN "plebiscito" ; mkN "referendo" ; } ; --*
lin pleb_N = mkN "plebeu" ; --*
lin plectrum_1_N = variants {mkN "palheta" ; mkN "plectro" ; mkN "Plectro" ; } ; --*
lin pledge_1_N = variants {mkN "garantia" ; mkN "penhora" ; } ; --*
lin pledge_1_VS = mkVS (mkV "penhorar") ; --*
lin pledge_3_N = mkN "brinde" ; --*
lin pledge_3_V2 = mkV2 (mkV "brindar") ; --*
lin pledge_4_N = variants {mkN "declaração" ; mkN "garantia" ; } ; --*
lin plenary_A = mkA "plenário" ; --*
lin plenipotentiary_N = mkN "plenipotenciário" ; --*
lin plenitude_1_N = variants {mkN "abundância" ; mkN "fartura" ; } ; --*
lin plenteous_A = variants {mkA "abundante" ; mkA "bastante" ; mkA "copioso" ; mkA "lauto" ; } ; --*
lin plentiful_1_A = variants {mkA "abudante" ; mkA "abundante" ; } ; --*
lin plentiful_2_A = variants {mkA "abundante" ; mkA "bastante" ; mkA "copioso" ; mkA "lauto" ; } ; --*
lin plentiful_3_A = variants {mkA "abudante" ; mkA "farto" ; mkA "generoso" ; } ; --*
lin plenty_of_1_N2 = variants {mkN2 (mkN "abundância") noPrep ; mkN2 (mkN "fartura") noPrep ; } ; --*
lin plenty_of_2_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin pleochroism_N = mkN "pleocroísmo" ; --*
lin pleomorphism_1_N = mkN "polimorfismo" ; --*
lin pleomorphism_2_N = mkN "Pleomorfismo" ; --*
lin pleonasm_N = mkN "pleonasmo" ; --*
lin pleonastic_A = variants {mkA "desnecessário" ; mkA "excessivo" ; mkA "pleonástico" ; mkA "redundante" ; mkA "supérfluo" ; mkA "tautológico" ; } ; --*
lin plethora_N = variants {mkN "excesso" ; mkN "pletora" ; mkN "superabundância" ; } ; --*
lin pleural_A = mkA "pleural" ; --*
lin pleura_N = mkN "pleura" ; --*
lin pleurisy_N = variants {mkN "pleurisia" ; mkN "pleurite" ; } ; --*
lin plexus_N = mkN "plexo" ; --*
lin pliability_2_N = mkN "elasticidade" ; --*
lin pliable_1_A = mkA "moldável" ; --*
lin pliable_2_A = variants {mkA "dúctil" ; mkA "maleável" ; } ; --*
lin pliable_3_A = variants {mkA "elástico" ; mkA "flexível" ; } ; --*
lin pliable_4_A = mkA "dobrável" ; --*
lin pliancy_2_N = mkN "elasticidade" ; --*
lin pliant_2_A = variants {mkA "dúctil" ; mkA "maleável" ; } ; --*
lin pliant_3_A = variants {mkA "elástico" ; mkA "flexível" ; } ; --*
lin pliant_4_A = mkA "dobrável" ; --*
lin plication_1_N = mkN "dobra" ; --*
lin pliers_1_N = variants {mkN "alicate" ; mkN "alicates" ; mkN "of" ; } ; --*
lin plight_1_N = variants {mkN "apuro" ; mkN "dificuldade" ; } ; --*
lin plight_1_V2 = variants {mkV2 (mkV "noivar") ; mkV2 (mkV "prometer") ; } ; --*
lin plight_2_V2 = mkV2 (mkV "penhorar") ; --*
lin plinth_N = variants {mkN "base" ; mkN "pedestal" ; mkN "suporte" ; } ; --*
lin plodding_1_N = mkN "trabalho" ; --*
lin plot_1_N = variants {mkN "complô" ; mkN "conspiração" ; mkN "plan" ; } ; --*
lin plot_1_V2 = mkV2 (mkV "maquinar") ; --*
lin plot_2_N = variants {mkN "campos" ; mkN "of" ; } ; --*
lin plot_2_V2 = variants {mkV2 (mkV "diagramar") ; mkV2 (mkV "plotar") ; } ; --*
lin plot_2_V = variants {mkV "diagramar" ; mkV "plotar" ; } ; --*
lin plot_3_N = variants {mkN "argumento" ; mkN "enredo" ; } ; --*
lin plot_4_N = mkN "esquema" ; --*
lin plotter_3_N = mkN "conspirado" ; --*
lin plotter_4_N = variants {mkN "lutter" ; mkN "plotter" ; } ; --*
lin plough_1_V = mkV "sulcar" ; --*
lin plough_2_N = variants {mkN "Arada" ; mkN "arado" ; } ; --*
lin plough_2_V2 = variants {mkV2 (mkV "arar") ; mkV2 (mkV "estevar") ; mkV2 (mkV "lavrar") ; } ; --*
lin ploughman_N = mkN "lavrador" ; --*
lin plow_1_V2 = variants {mkV2 (mkV "arar") ; mkV2 (mkV "estevar") ; mkV2 (mkV "lavrar") ; } ; --*
lin plow_2_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "endereçar") ; mkV2 (mkV "falar") ; mkV2 (mkV "lidar") ; mkV2 (mkV "tratar") ; } ; --*
lin plow_2_V = variants {mkV "cobrir" ; mkV "endereçar" ; mkV "falar" ; mkV "lidar" ; mkV "tratar" ; } ; --*
lin plow_3_V = mkV "sulcar" ; --*
lin plowman_N = mkN "lavrador" ; --*
lin plow_N = variants {mkN "Arada" ; mkN "arado" ; } ; --*
lin ploy_2_N = mkN "artimanha" ; --*
lin pluck_2_V2 = mkV2 (mkV "muambar") ; --*
lin pluck_2_V = mkV "muambar" ; --*
lin pluck_3_V2 = mkV2 (mkV "roubar") ; --*
lin pluck_3_V = mkV "roubar" ; --*
lin pluck_5_V2 = mkV2 (mkV "depenar") ; --*
lin pluck_6_V2 = variants {mkV2 (mkV "apanhar") ; mkV2 (mkV "catar") ; mkV2 (mkV "colhar") ; mkV2 (mkV "colher") ; } ; --*
lin pluck_9_V2 = mkV2 (mkV "mergulhar") ; --*
lin plucky_1_A = mkA "corajoso" ; --*
lin plug_1_N = mkN "rolha" ; --*
lin plug_1_V2 = variants {mkV2 (mkV "tampar") ; mkV2 (mkV "up") ; } ; --*
lin plug_3_N = variants {mkN "falatório" ; mkN "modismo" ; mkN "tititi" ; } ; --*
lin plug_3_V2 = mkV2 (mkV "esmurrar") ; --*
lin plug_4_N = variants {mkN "plug" ; mkN "vela" ; } ; --*
lin plug_5_N = variants {mkN "plug" ; mkN "vela" ; } ; --*
lin plug_6_N = variants {mkN "hidrante" ; mkN "hydrant" ; } ; --*
lin plug_6_V2 = mkV2 (mkV "plugar") ; --*
lin plug_7_N = mkN "rocim" ; --*
lin plum_1_N = variants {mkN "ameixa" ; mkN "ameixoeira" ; mkN "tree" ; } ; --*
lin plum_2_N = variants {mkN "ameixa" ; mkN "amêixoa" ; } ; --*
lin plumage_N = variants {mkN "pena" ; mkN "pluma" ; mkN "plumagem" ; } ; --*
lin plumb_2_V2 = mkV2 (mkV "chumbar") ; --*
lin plumb_4_V2 = mkV2 (mkV "aprumar") ; --*
lin plumbago_1_N = variants {mkN "grafita" ; mkN "grafite" ; mkN "lead" ; } ; --*
lin plumber_N = variants {mkN "bombeiro" ; mkN "encanador" ; mkN "fitter" ; mkN "latoeiro" ; } ; --*
lin plumbic_A = mkA "plúmbeo" ; --*
lin plumbing_1_N = variants {mkN "encanamento" ; mkN "system" ; } ; --*
lin plumbing_2_N = mkN "encanamento" ; --*
lin plumbing_3_N = mkN "batimetria" ; --*
lin plumb_N = variants {mkN "bob" ; mkN "prumo" ; } ; --*
lin plume_1_V2 = mkV2 (mkV "roubar") ; --*
lin plume_2_V2 = variants {mkV2 (mkV "congratular") ; mkV2 (mkV "orgulhar") ; } ; --*
lin plume_3_N = variants {mkN "pena" ; mkN "pluma" ; mkN "plumagem" ; } ; --*
lin plummet_N = variants {mkN "bob" ; mkN "prumo" ; } ; --*
lin plummet_V = variants {mkV "cair" ; mkV "despencar" ; } ; --*
lin plump_1_V = variants {mkV "cair" ; mkV "despencar" ; } ; --*
lin plump_3_V2 = variants {mkV2 (mkV "cevar") ; mkV2 (mkV "engordar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin plump_4_V = mkV "escolher" ; --*
lin plump_A = variants {mkA "gorducho" ; mkA "rechonchudo" ; mkA "roliço" ; } ; --*
lin plump_for_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "for") ; } ; --*
lin plunder_1_V = variants {mkV "roubar" ; mkV "saltear" ; } ; --*
lin plunder_2_V2 = mkV2 (mkV "saquear") ; --*
lin plunder_3_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin plunderer_N = mkN "assaltante" ; --*
lin plundering_N = variants {mkN "pilhagem" ; mkN "saque" ; } ; --*
lin plunder_N = variants {mkN "botim" ; mkN "espólio" ; mkN "money" ; mkN "pilhagem" ; mkN "rapina" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin plunge_1_N = mkN "mergulho" ; --*
lin plunge_1_V2 = variants {mkV2 (mkV "imergir") ; mkV2 (mkV "molhar") ; } ; --*
lin plunge_2_V = mkV "mergulhar" ; --*
lin plunge_4_V = mkV "começar" ; --*
lin plunge_5_V2 = mkV2 (mkV "mergulhar") ; --*
lin plunge_7_V2 = mkV2 (mkV "imergir") ; --*
lin plunge_8_V2 = variants {mkV2 (mkV "focar") ; mkV2 (mkV "up") ; } ; --*
lin plunger_2_N = mkN "mergulhador" ; --*
lin plunger_3_N = variants {mkN "desentupidor" ; mkN "helper" ; } ; --*
lin plunger_4_N = variants {mkN "pistão" ; mkN "Pistão" ; } ; --*
lin pluperfect_N = variants {mkN "perfect" ; mkN "pretérito" ; mkN "tense" ; } ; --*
lin plural_1_A = mkA "plural" ; --*
lin plural_2_A = mkA "plural" ; --*
lin pluralism_2_N = mkN "pluralismo" ; --*
lin plurality_2_N = variants {mkN "batalhão" ; mkN "montão" ; mkN "multidão" ; mkN "number" ; mkN "pilha" ; } ; --*
lin plurality_3_N = variants {mkN "majority" ; mkN "pluralidade" ; } ; --*
lin plural_N = variants {mkN "form" ; mkN "plural" ; } ; --*
lin plus_1_N = variants {mkN "bem" ; mkN "propriedade" ; mkN "recurso" ; mkN "vantagem" ; mkN "virtude" ; } ; --*
lin plus_2_A = variants {mkA "positiva" ; mkA "positivo" ; } ; --*
lin plus_2_N = mkN "adição" ; --*
lin plush_A = mkA "luxuoso" ; --*
lin plush_N = variants {mkN "peluche" ; mkN "pelúcia" ; } ; --*
lin plushy_2_A = mkA "luxuoso" ; --*
lin pluto_1_PN = mkPN "Pluto" ; --*
lin pluto_2_PN = variants {mkPN "Hades" ; mkPN "Plutão" ; } ; --*
lin pluto_3_PN = variants {mkPN "Plutao" ; mkPN "Plutão" ; } ; --*
lin plutocracy_N = mkN "plutocracia" ; --*
lin plutonium_N = variants {mkN "number" ; mkN "Plutonio" ; mkN "Plutónio" ; mkN "plutônio" ; } ; --*
lin ply_1_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "provisionar") ; mkV2 (mkV "servir") ; } ; --*
lin ply_6_V2 = mkV2 (mkV "utilizar") ; --*
lin plymouth_PN = mkPN "Plymouth" ; --*
lin plywood_N = mkN "madeira" ; --*
lin pneumatic_1_A = mkA "pneumático" ; --*
lin pneumatics_N = variants {mkN "pneumática" ; mkN "Pneumática" ; } ; --*
lin pneumoconiosis_1_N = mkN "pneumoconiose" ; --*
lin pneumonectomy_N = mkN "Pneumonectomia" ; --*
lin pneumonia_N = mkN "pneumonia" ; --*
lin pneumonic_1_A = mkA "pulmonar" ; --*
lin pneumonic_2_A = mkA "pulmonar" ; --*
lin pneumonitis_N = mkN "pneumonite" ; --*
lin pneumothorax_N = mkN "pneumotórax" ; --*
lin po_1_N = variants {mkN "number" ; mkN "Polonio" ; mkN "polónio" ; mkN "polônio" ; } ; --*
lin po_3_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin poach_2_V = mkV "escalfar" ; --*
lin poaching_N = mkN "caça" ; --*
lin pocket_1_N = variants {mkN "algibeira" ; mkN "bolso" ; } ; --*
lin pocket_1_V2 = mkV2 (mkV "encaçapar") ; --*
lin pocket_2_N = variants {mkN "saca" ; mkN "saco" ; } ; --*
lin pocket_2_V2 = variants {mkV2 (mkV "embolsar") ; mkV2 (mkV "ensacar") ; mkV2 (mkV "furtar") ; } ; --*
lin pocket_3_N = mkN "bolso" ; --*
lin pocket_9_N = mkN "caçapa" ; --*
lin pocket_book_2_N = mkN "carteira" ; --*
lin pocket_book_4_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin pocket_knife_1_N = variants {mkN "Canivete" ; mkN "knife" ; } ; --*
lin pocket_money_N = mkN "money" ; --*
lin pockmark_N = mkN "pockmark" ; --*
lin pod_1_N = mkN "vagem" ; --*
lin pod_2_N = mkN "vagem" ; --*
lin podium_N = variants {mkN "cátedra" ; mkN "estrado" ; mkN "pódio" ; mkN "púlpito" ; mkN "tribuna" ; } ; --*
lin podzol_1_N = variants {mkN "Podzol" ; mkN "soil" ; } ; --*
lin poem_N = variants {mkN "form" ; mkN "poema" ; } ; --*
lin poesy_N = variants {mkN "Poemas" ; mkN "poesia" ; mkN "verso" ; } ; --*
lin poetess_N = mkN "poetisa" ; --*
lin poetic_1_A = mkA "poético" ; --*
lin poetic_2_A = mkA "poético" ; --*
lin poetic_4_A = mkA "poético" ; --*
lin poetical_1_A = mkA "poético" ; --*
lin poetical_2_A = mkA "poético" ; --*
lin poet_N = variants {mkN "poeta" ; mkN "Poetas" ; mkN "poetisa" ; } ; --*
lin poetry_1_N = variants {mkN "Poemas" ; mkN "poesia" ; mkN "verso" ; } ; --*
lin poetry_2_N = mkN "poesia" ; --*
lin pogrom_N = mkN "pogrom" ; --*
lin poignant_1_A = mkA "comovente" ; --*
lin poikilotherm_N = mkN "poiquilotérmico" ; --*
lin poilu_1_N = mkN "Poilu" ; --*
lin point_11_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "dirigir") ; } ; --*
lin point_11_V = variants {mkV "apontar" ; mkV "direcionar" ; mkV "dirigir" ; } ; --*
lin point_12_N = mkN "item" ; --*
lin point_13_V2 = variants {mkV2 (mkV "afiar") ; mkV2 (mkV "apontar") ; } ; --*
lin point_15_N = mkN "ponta" ; --*
lin point_19_N = variants {mkN "point" ; mkN "ponto" ; mkN "Ponto" ; mkN "stop" ; } ; --*
lin point_1_N = mkN "ponto" ; --*
lin point_1_V = variants {mkV "apontar" ; mkV "indicar" ; mkV "mostrar" ; } ; --*
lin point_21_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin point_2_N = mkN "lugar" ; --*
lin point_3_V2 = mkV2 (mkV "fazer") ; --*
lin point_4_N = mkN "detalhe" ; --*
lin point_4_V2 = variants {mkV2 (mkV "canalizar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; } ; --*
lin point_5_N = variants {mkN "ápice" ; mkN "fase" ; mkN "grau" ; mkN "nível" ; } ; --*
lin point_5_V = variants {mkV "denotar" ; mkV "evidenciar" ; mkV "indicar" ; mkV "sinalizar" ; mkV "sugerir" ; } ; --*
lin point_6_N = variants {mkN "in" ; mkN "momento" ; } ; --*
lin point_8_N = variants {mkN "pico" ; mkN "ponta" ; } ; --*
lin point_9_N = mkN "ponto" ; --*
lin point_blank_1_A = mkA "correto" ; --*
lin pointed_1_A = mkA "pontudo" ; --*
lin pointed_2_A = variants {mkA "aguçado" ; mkA "pontudo" ; } ; --*
lin pointer_1_N = variants {mkN "flecha" ; mkN "ponteiro" ; } ; --*
lin pointer_2_N = mkN "ponteiro" ; --*
lin pointer_3_N = mkN "cursor" ; --*
lin pointillism_2_N = mkN "pontilhismo" ; --*
lin pointless_1_A = variants {mkA "embotado" ; mkA "rombo" ; } ; --*
lin pointless_2_A = mkA "vão" ; --*
lin point_out_1_V2 = variants {mkV2 (mkV "comentar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "out") ; } ; --*
lin point_out_2_V2 = variants {mkV2 (mkV "assinalar") ; mkV2 (mkV "attention") ; mkV2 (mkV "out") ; } ; --*
lin point_out_2_VS = variants {mkVS (mkV "assinalar") ; mkVS (mkV "attention") ; mkVS (mkV "out") ; } ; --*
lin point_out_3_V2 = variants {mkV2 (mkV "mostrar") ; mkV2 (mkV "out") ; } ; --*
lin point_out_3_VS = variants {mkVS (mkV "mostrar") ; mkVS (mkV "out") ; } ; --*
lin point_up_V = mkV "up" ; --*
lin poise_1_N = mkN "poise" ; --*
lin poise_2_V2 = mkV2 (mkV "preparar") ; --*
lin poise_2_V = mkV "preparar" ; --*
lin poise_3_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "desembaraço" ; } ; --*
lin poise_4_V2 = mkV2 (mkV "equilibrar") ; --*
lin poise_4_V = mkV "equilibrar" ; --*
lin poison_1_N = variants {mkN "peçonha" ; mkN "substance" ; mkN "tóxico" ; mkN "toxinas" ; mkN "veneno" ; } ; --*
lin poison_1_V2 = mkV2 (mkV "envenenar") ; --*
lin poison_2_N = variants {mkN "veneno" ; mkN "Venenos" ; } ; --*
lin poison_2_V2 = variants {mkV2 (mkV "empeçonhar") ; mkV2 (mkV "envenenar") ; mkV2 (mkV "intoxicar") ; } ; --*
lin poison_3_V2 = mkV2 (mkV "envenenar") ; --*
lin poison_4_V2 = mkV2 (mkV "envenenar") ; --*
lin poison_5_V2 = mkV2 (mkV "envenenar") ; --*
lin poisoning_1_N = variants {mkN "condition" ; mkN "intoxicação" ; } ; --*
lin poisoning_2_N = variants {mkN "envenenamento" ; mkN "envenenamentos" ; } ; --*
lin poisonous_1_A = mkA "venenoso" ; --*
lin poisonous_2_A = variants {mkA "tóxico" ; mkA "venenoso" ; } ; --*
lin poisonous_3_A = mkA "venenoso" ; --*
lin poke_1_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "cotovelar") ; mkV2 (mkV "cutucar") ; } ; --*
lin poke_2_V = variants {mkV "in" ; mkV "intrometer" ; mkV "intrometer-se" ; } ; --*
lin poke_3_N = variants {mkN "bag" ; mkN "bolsa" ; } ; --*
lin poke_4_N = mkN "injecção" ; --*
lin poke_4_V2 = mkV2 (mkV "bater") ; --*
lin poke_5_N = variants {mkN "murro" ; mkN "ponche" ; mkN "soco" ; } ; --*
lin poke_5_V2 = mkV2 (mkV "furar") ; --*
lin poke_5_V = mkV "furar" ; --*
lin poke_bonnet_N = variants {mkN "bonnet" ; mkN "capote" ; } ; --*
lin poker_2_N = variants {mkN "game" ; mkN "pôquer" ; } ; --*
lin poker_face_N = mkN "face" ; --*
lin pokeweed_N = mkN "Phytolacca" ; --*
lin poland_PN = variants {mkPN "of" ; mkPN "Polónia" ; mkPN "Polônia" ; } ; --*
lin polar_3_A = mkA "polar" ; --*
lin polar_4_A = mkA "polar" ; --*
lin polar_5_A = variants {mkA "ártico" ; mkA "gelado" ; mkA "polar" ; } ; --*
lin polarimeter_N = mkN "Polarímetro" ; --*
lin polarization_1_N = mkN "polarização" ; --*
lin polarization_2_N = mkN "polarização" ; --*
lin polarize_1_V2 = mkV2 (mkV "polarizar") ; --*
lin polaroid_N = mkN "Polaroid" ; --*
lin polder_N = variants {mkN "Polder" ; mkN "pôlder" ; mkN "polders" ; } ; --*
lin pole_1_N = mkN "pau" ; --*
lin pole_4_N = mkN "rod" ; --*
lin pole_6_N = variants {mkN "pole" ; mkN "Pólo" ; } ; --*
lin pole_7_N = variants {mkN "extremidade" ; mkN "pólo" ; } ; --*
lin polecat_1_N = variants {mkN "gambá" ; mkN "Mephitidae" ; mkN "pussy" ; } ; --*
lin polecat_2_N = variants {mkN "putorius" ; mkN "toirăo" ; mkN "toirão" ; } ; --*
lin poleFem_N = variants {mkN "polaca" ; mkN "polaco" ; mkN "Polacos" ; mkN "polonês" ; mkN "polonesa" ; mkN "polonêsa" ; } ; --*
lin pole_jumping_N = variants {mkN "jump" ; mkN "jumping" ; mkN "vault" ; mkN "vaulting" ; } ; --*
lin poleMasc_N = variants {mkN "polaca" ; mkN "polaco" ; mkN "Polacos" ; mkN "polonês" ; mkN "polonesa" ; mkN "polonêsa" ; } ; --*
lin polemic_1_A = variants {mkA "polémico" ; mkA "polêmico" ; } ; --*
lin polemic_2_N = variants {mkN "polémica" ; mkN "polêmica" ; } ; --*
lin polenta_N = mkN "polenta" ; --*
lin pole_vault_N = variants {mkN "jump" ; mkN "jumping" ; mkN "vault" ; mkN "vaulting" ; } ; --*
lin policeman_N = variants {mkN "guarda" ; mkN "officer" ; mkN "polícia" ; mkN "policial" ; } ; --*
lin police_N = variants {mkN "force" ; mkN "lei" ; mkN "polícia" ; } ; --*
lin police_officer_N = variants {mkN "guarda" ; mkN "officer" ; mkN "polícia" ; mkN "policial" ; } ; --*
lin police_station_N = variants {mkN "headquarters" ; mkN "house" ; mkN "station" ; } ; --*
lin police_V2 = mkV2 (mkV "patrulhar") ; --*
lin policewoman_N = variants {mkN "matron" ; mkN "policial" ; } ; --*
lin policy_1_N = mkN "política" ; --*
lin policy_2_N = mkN "política" ; --*
lin policy_3_N = variants {mkN "apólice" ; mkN "policy" ; } ; --*
lin poliomyelitis_N = variants {mkN "anterior" ; mkN "paralysis" ; mkN "poliomielite" ; } ; --*
lin polio_N = variants {mkN "anterior" ; mkN "paralysis" ; mkN "poliomielite" ; } ; --*
lin polish_1_N = mkN "polimento" ; --*
lin polish_1_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; } ; --*
lin polish_2_N = mkN "refinamento" ; --*
lin polish_2_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; mkV2 (mkV "refinar") ; } ; --*
lin polish_3_N = mkN "requinte" ; --*
lin polish_3_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin polish_4_N = variants {mkN "língua" ; mkN "polaco" ; mkN "polonês" ; } ; --*
lin polish_A = variants {mkA "polaco" ; mkA "polonês" ; } ; --*
lin polished_2_A = variants {mkA "cortês" ; mkA "educado" ; mkA "polido" ; } ; --*
lin polished_4_A = mkA "polido" ; --*
lin polish_off_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin polish_off_2_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin polish_off_3_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin polite_1_A = mkA "gentil" ; --*
lin polite_2_A = variants {mkA "cultivado" ; mkA "gentil" ; mkA "refinado" ; } ; --*
lin polite_3_A = variants {mkA "cortês" ; mkA "educado" ; mkA "polido" ; } ; --*
lin politeness_1_N = variants {mkN "cortesia" ; mkN "polidez" ; } ; --*
lin politeness_2_N = mkN "civilidade" ; --*
lin political_1_A = mkA "política" ; --*
lin political_2_A = variants {mkA "política" ; mkA "político" ; } ; --*
lin political_3_A = variants {mkA "política" ; mkA "político" ; } ; --*
lin politician_1_N = mkN "político" ; --*
lin politician_2_N = variants {mkN "leader" ; mkN "político" ; } ; --*
lin politicize_V2 = mkV2 (mkV "politizar") ; --*
lin politics_1_N = variants {mkN "política" ; mkN "relation" ; } ; --*
lin politics_2_N = variants {mkN "política" ; mkN "science" ; } ; --*
lin politics_3_N = mkN "política" ; --*
lin polity_2_N = variants {mkN "coisa" ; mkN "entidade" ; } ; --*
lin polka_1_N = variants {mkN "polca" ; mkN "Polca" ; } ; --*
lin polka_2_N = mkN "polca" ; --*
lin poll_1_N = variants {mkN "enquête" ; mkN "opinion" ; mkN "pesquisa" ; mkN "poll" ; } ; --*
lin poll_3_V2 = variants {mkV2 (mkV "apurar") ; mkV2 (mkV "contar") ; } ; --*
lin poll_3_V = variants {mkV "apurar" ; mkV "contar" ; } ; --*
lin poll_5_N = mkN "contagem" ; --*
lin pollack_1_N = variants {mkN "Pollack" ; mkN "Sydney" ; } ; --*
lin pollack_2_N = mkN "escamudo" ; --*
lin pollack_4_N = variants {mkN "Jackson" ; mkN "Pollock" ; } ; --*
lin pollen_N = variants {mkN "Polen" ; mkN "pólen" ; } ; --*
lin pollination_1_N = variants {mkN "polinização" ; mkN "Polinização" ; } ; --*
lin pollinator_N = variants {mkN "polinizador" ; mkN "Polinizadores" ; } ; --*
lin polling_day_N = mkN "day" ; --*
lin poll_tax_N = mkN "tax" ; --*
lin pollucite_N = mkN "Polucita" ; --*
lin pollutant_N = mkN "poluentes" ; --*
lin pollute_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "poluir") ; mkV2 (mkV "sujar") ; } ; --*
lin pollution_1_N = variants {mkN "contaminação" ; mkN "poluição" ; mkN "Poluição" ; mkN "Poluíção" ; } ; --*
lin pollution_3_N = variants {mkN "contaminação" ; mkN "poluição" ; } ; --*
lin polo_1_N = variants {mkN "Marco" ; mkN "Polo" ; } ; --*
lin polo_2_N = variants {mkN "polo" ; mkN "Polo" ; mkN "pólo" ; } ; --*
lin polonaise_N = mkN "polonesa" ; --*
lin polonium_N = variants {mkN "number" ; mkN "Polonio" ; mkN "polónio" ; mkN "polônio" ; } ; --*
lin poltroon_N = variants {mkN "medricas" ; mkN "medroso" ; } ; --*
lin polyamide_N = variants {mkN "amide" ; mkN "poliamida" ; } ; --*
lin polyandry_N = mkN "poliandria" ; --*
lin polyarteritis_N = mkN "poliarterite" ; --*
lin polychaete_1_N = variants {mkN "Polychaeta" ; mkN "worm" ; } ; --*
lin polychromatic_1_A = mkA "policromático" ; --*
lin polychromatic_2_A = mkA "policromático" ; --*
lin polycythemia_N = mkN "policitemia" ; --*
lin polydactyly_N = mkN "polidactilia" ; --*
lin polydipsia_N = mkN "polidipsia" ; --*
lin polyester_1_N = mkN "poliéster" ; --*
lin polyester_2_N = mkN "poliéster" ; --*
lin polyester_3_N = variants {mkN "Poliester" ; mkN "poliéster" ; } ; --*
lin polyethylene_N = mkN "polietileno" ; --*
lin polygamy_N = mkN "poligamia" ; --*
lin polyglotFem_N = mkN "poliglota" ; --*
lin polyglotMasc_N = mkN "poliglota" ; --*
lin polygonal_A = mkA "poligonal" ; --*
lin polygon_N = variants {mkN "polígono" ; mkN "shape" ; } ; --*
lin polygraph_N = mkN "polígrafo" ; --*
lin polygyny_N = variants {mkN "poliginia" ; mkN "Poliginia" ; } ; --*
lin polyhedron_N = variants {mkN "poliedro" ; mkN "Poliedros" ; } ; --*
lin polymath_N = variants {mkN "Polimata" ; mkN "polímata" ; } ; --*
lin polymerase_N = mkN "polimerase" ; --*
lin polymerization_1_N = variants {mkN "polimerização" ; mkN "Polimerização" ; } ; --*
lin polymer_N = variants {mkN "polímero" ; mkN "Polímeros" ; mkN "polymero" ; } ; --*
lin polymorphic_1_A = mkA "polimórfico" ; --*
lin polymorphic_2_A = variants {mkA "polimórfica" ; mkA "polimórfico" ; } ; --*
lin polymorphic_3_A = variants {mkA "polimórfica" ; mkA "polimórfico" ; } ; --*
lin polymorphism_2_N = mkN "polimorfismo" ; --*
lin polymorphous_1_A = mkA "polimórfico" ; --*
lin polymorphous_2_A = variants {mkA "polimórfica" ; mkA "polimórfico" ; } ; --*
lin polymorphous_3_A = variants {mkA "polimórfica" ; mkA "polimórfico" ; } ; --*
lin polymyositis_N = mkN "Polimiosite" ; --*
lin polyneuritis_N = variants {mkN "neuritis" ; mkN "polineurite" ; } ; --*
lin polynomial_A = mkA "polinomial" ; --*
lin polynomial_N = variants {mkN "polinómio" ; mkN "polinômio" ; mkN "Polinômio" ; mkN "Polinómios" ; } ; --*
lin polynya_N = variants {mkN "Polínia" ; mkN "polynia" ; } ; --*
lin polyp_1_N = variants {mkN "pólipo" ; mkN "Pólipo" ; } ; --*
lin polyp_2_N = mkN "pólipo" ; --*
lin polyphonic_2_A = mkA "polifônico" ; --*
lin polyphony_N = variants {mkN "music" ; mkN "polifonia" ; } ; --*
lin polypore_N = variants {mkN "fungus" ; mkN "mushroom" ; mkN "Polyporaceae" ; } ; --*
lin polypropylene_1_N = mkN "Polipropileno" ; --*
lin polyptoton_N = mkN "poliptoto" ; --*
lin polypus_N = variants {mkN "pólipo" ; mkN "Pólipo" ; } ; --*
lin polysaccharide_N = variants {mkN "polissacarídeo" ; mkN "Polissacarídeos" ; } ; --*
lin polysemous_A = mkA "ter" ; --*
lin polysemy_N = variants {mkN "ambiguity" ; mkN "polissemia" ; } ; --*
lin polystyrene_N = mkN "poliestireno" ; --*
lin polysyllabic_1_A = mkA "polissílabo" ; --*
lin polysyllabic_2_A = mkA "polissílabo" ; --*
lin polysyndeton_N = mkN "Polissíndeto" ; --*
lin polytheism_N = variants {mkN "Politeismo" ; mkN "politeísmo" ; mkN "Politeísmo" ; } ; --*
lin polythene_N = mkN "polietileno" ; --*
lin polyurethane_1_N = mkN "poliuretano" ; --*
lin polyuria_N = mkN "Poliúria" ; --*
lin polyvalent_1_A = mkA "polivalente" ; --*
lin pomegranate_1_N = variants {mkN "granatum" ; mkN "romãzeira" ; mkN "tree" ; } ; --*
lin pomegranate_2_N = variants {mkN "granada" ; mkN "romã" ; } ; --*
lin pomelo_1_N = variants {mkN "decumana" ; mkN "grandis" ; mkN "maxima" ; mkN "pomelo" ; mkN "tree" ; } ; --*
lin pomelo_2_N = mkN "pomelo" ; --*
lin pome_N = variants {mkN "fruit" ; mkN "pomo" ; } ; --*
lin pomfret_N = variants {mkN "Bramidae" ; mkN "raii" ; } ; --*
lin pommel_1_N = mkN "castão" ; --*
lin pomp_1_N = mkN "ostentação" ; --*
lin pomp_2_N = mkN "pompa" ; --*
lin pomposity_N = mkN "fausto" ; --*
lin pompous_1_A = mkA "pomposo" ; --*
lin ponce_2_N = variants {mkN "cafetão" ; mkN "chulo" ; mkN "man" ; mkN "proxeneta" ; mkN "proxenetismo" ; mkN "safado" ; } ; --*
lin poncho_N = mkN "poncho" ; --*
lin ponderable_2_A = variants {mkA "cogitável" ; mkA "ponderavel" ; } ; --*
lin ponderosa_N = variants {mkN "pine" ; mkN "Pinus" ; mkN "ponderosa" ; mkN "yellow" ; } ; --*
lin ponderous_1_A = variants {mkA "enfadonho" ; mkA "ponderado" ; } ; --*
lin ponder_V2 = variants {mkV2 (mkV "contemplar") ; mkV2 (mkV "over") ; mkV2 (mkV "refletir") ; } ; --*
lin ponder_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin pond_N = variants {mkN "lago" ; mkN "lagoa" ; mkN "tanque" ; mkN "tanques" ; } ; --*
lin pondweed_2_N = variants {mkN "Elodea" ; mkN "Elódea" ; } ; --*
lin poniard_N = mkN "punhal" ; --*
lin pons_1_N = variants {mkN "Lily" ; mkN "Pons" ; } ; --*
lin pons_2_N = variants {mkN "Ponte" ; mkN "Varolii" ; } ; --*
lin pontiff_N = variants {mkN "Catholic" ; mkN "Father" ; mkN "of" ; mkN "papa" ; mkN "pontífice" ; mkN "Pope" ; } ; --*
lin pontifical_1_A = mkA "papal" ; --*
lin pontifical_2_A = mkA "episcopal" ; --*
lin pontifical_3_A = mkA "pomposo" ; --*
lin pontificate_2_V = mkV "pontificar" ; --*
lin pontificate_N = mkN "papado" ; --*
lin pony_5_N = mkN "pônei" ; --*
lin ponytail_N = mkN "rabo-de-cavalo" ; --*
lin poodle_N = variants {mkN "dog" ; mkN "Poodle" ; } ; --*
lin poof_1_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin pooh_pooh_1_V2 = mkV2 (mkV "desaprovar") ; --*
lin pooh_pooh_2_V2 = variants {mkV2 (mkV "desprezar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin pool_1_N = variants {mkN "charcos" ; mkN "piscina" ; } ; --*
lin pool_1_V2 = variants {mkV2 (mkV "agregar") ; mkV2 (mkV "combinar") ; } ; --*
lin pool_2_N = variants {mkN "lago" ; mkN "lagoa" ; mkN "tanque" ; mkN "tanques" ; } ; --*
lin pool_4_N = variants {mkN "consórcio" ; mkN "sindicato" ; } ; --*
lin pool_6_N = variants {mkN "charco" ; mkN "poça" ; } ; --*
lin pool_9_N = variants {mkN "Bilhar" ; mkN "billiards" ; } ; --*
lin poop_1_N = variants {mkN "bosta" ; mkN "cagalhão" ; mkN "cocô" ; mkN "merda" ; mkN "tolete" ; } ; --*
lin poop_2_N = variants {mkN "estúpido" ; mkN "idiota" ; } ; --*
lin poop_4_N = variants {mkN "part" ; mkN "popa" ; mkN "traseiro" ; } ; --*
lin poor_1_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin poor_2_A = mkA "pobre" ; --*
lin poor_3_A = mkA "pobre" ; --*
lin poor_5_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin poorly_A = variants {mkA "com" ; mkA "indisposto" ; mkA "menstruada" ; mkA "the" ; } ; --*
lin poorness_1_N = variants {mkN "empobrecimento" ; mkN "miséria" ; mkN "pobreza" ; mkN "Pobreza" ; } ; --*
lin poorness_2_N = variants {mkN "indigencia" ; mkN "pobreza" ; } ; --*
lin poorness_4_N = mkN "pobreza" ; --*
lin poor_spirited_A = mkA "pusilânime" ; --*
lin pop_10_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin pop_11_V2 = mkV2 (mkV "tomar") ; --*
lin pop_13_V2 = variants {mkV2 (mkV "estourar") ; mkV2 (mkV "explodir") ; } ; --*
lin pop_1_N = variants {mkN "pai" ; mkN "painho" ; mkN "papá" ; mkN "papai" ; } ; --*
lin pop_2_N = variants {mkN "pop" ; mkN "refrigerante" ; mkN "water" ; } ; --*
lin pop_3_N = mkN "Popping" ; --*
lin pop_4_N = variants {mkN "music" ; mkN "música" ; } ; --*
lin pop_4_V2 = mkV2 (mkV "pipocar") ; --*
lin pop_A = mkA "popular" ; --*
lin popcorn_2_N = mkN "pipoca" ; --*
lin pope_1_N = variants {mkN "Catholic" ; mkN "Father" ; mkN "of" ; mkN "papa" ; mkN "pontífice" ; mkN "Pope" ; } ; --*
lin pope_2_N = mkN "Pope" ; --*
lin popish_A = variants {mkA "Catholic" ; mkA "católica" ; mkA "papista" ; mkA "romanista" ; } ; --*
lin poplar_1_N = variants {mkN "álamo" ; mkN "choupo" ; } ; --*
lin pop_off_1_V = mkV "off" ; --*
lin pop_off_2_V = variants {mkV "away" ; mkV "bater" ; mkV "dead" ; mkV "falecer" ; mkV "in" ; mkV "it" ; mkV "morrer" ; mkV "off" ; mkV "perecer" ; mkV "the" ; } ; --*
lin popper_1_N = variants {mkN "Karl" ; mkN "Popper" ; } ; --*
lin poppy_N = variants {mkN "dormideira" ; mkN "papoila" ; mkN "papoula" ; } ; --*
lin populace_N = variants {mkN "gente" ; mkN "mundo" ; mkN "povo" ; } ; --*
lin popular_1_A = mkA "popular" ; --*
lin popular_2_A = mkA "popular" ; --*
lin popular_3_A = mkA "democrático" ; --*
lin popular_4_A = mkA "popular" ; --*
lin popularity_N = mkN "popularidade" ; --*
lin popularize_1_V2 = mkV2 (mkV "popularizar") ; --*
lin populate_1_V2 = variants {mkV2 (mkV "habitar") ; mkV2 (mkV "morar") ; mkV2 (mkV "povoar") ; mkV2 (mkV "viver") ; } ; --*
lin populate_2_V2 = variants {mkV2 (mkV "povoar") ; mkV2 (mkV "preencher") ; } ; --*
lin population_1_N = mkN "população" ; --*
lin population_2_N = mkN "população" ; --*
lin population_3_N = mkN "universo" ; --*
lin population_4_N = mkN "população" ; --*
lin population_5_N = variants {mkN "população" ; mkN "povoação" ; } ; --*
lin populism_N = variants {mkN "populismo" ; mkN "Populismo" ; } ; --*
lin populist_N = mkN "democrata" ; --*
lin populous_A = variants {mkA "populoso" ; mkA "settled" ; } ; --*
lin porbeagle_N = variants {mkN "nasus" ; mkN "tubarão-golfinho" ; } ; --*
lin porcelain_N = variants {mkN "porcelana" ; mkN "Porcelana" ; } ; --*
lin porch_N = mkN "alpendre" ; --*
lin porcupine_N = variants {mkN "Porco" ; mkN "porco-espinho" ; } ; --*
lin pore_2_N = mkN "poro" ; --*
lin pore_3_N = variants {mkN "Estomato" ; mkN "estômato" ; mkN "poro" ; } ; --*
lin pore_V = variants {mkV "centrar" ; mkV "concentrar" ; mkV "focar" ; } ; --*
lin pork_1_N = variants {mkN "carne" ; mkN "porco" ; } ; --*
lin porkfish_1_N = variants {mkN "Roncador" ; mkN "Roncador-listado-americano" ; mkN "virginicus" ; } ; --*
lin porn_1_N = variants {mkN "filme" ; mkN "pornô" ; mkN "pornografia" ; mkN "Pornografia" ; } ; --*
lin pornographer_N = variants {mkN "merchant" ; mkN "pornógrafo" ; } ; --*
lin pornographic_1_A = mkA "pornográfico" ; --*
lin pornography_N = variants {mkN "filme" ; mkN "pornô" ; mkN "pornografia" ; mkN "Pornografia" ; } ; --*
lin porosity_N = mkN "porosidade" ; --*
lin porous_1_A = mkA "poroso" ; --*
lin porous_2_A = mkA "poroso" ; --*
lin porous_3_A = variants {mkA "furado" ; mkA "poroso" ; } ; --*
lin porousness_N = mkN "porosidade" ; --*
lin porphyria_N = variants {mkN "porfiria" ; mkN "Porfíria" ; } ; --*
lin porphyrin_N = mkN "porfirina" ; --*
lin porphyry_N = variants {mkN "porfiroide" ; mkN "rock" ; } ; --*
lin porpoise_N = variants {mkN "boto" ; mkN "toninha" ; } ; --*
lin porridge_N = variants {mkN "mingau" ; mkN "Mingau" ; } ; --*
lin port_1_N = variants {mkN "porto" ; mkN "Porto" ; } ; --*
lin port_2_N = variants {mkN "vinho" ; mkN "wine" ; } ; --*
lin port_2_V2 = mkV2 (mkV "tranportar") ; --*
lin port_3_N = mkN "capialço" ; --*
lin port_4_N = mkN "bombordo" ; --*
lin port_5_N = mkN "porta" ; --*
lin port_5_V2 = mkV2 (mkV "carregar") ; --*
lin port_6_V2 = mkV2 (mkV "carregar") ; --*
lin port_A = mkA "a" ; --*
lin portability_N = mkN "portabilidade" ; --*
lin portable_1_A = mkA "portátil" ; --*
lin portable_2_A = mkA "portátil" ; --*
lin portal_1_N = variants {mkN "entrada" ; mkN "portal" ; mkN "portão" ; } ; --*
lin portal_2_N = variants {mkN "portal" ; mkN "site" ; } ; --*
lin portal_3_N = variants {mkN "portae" ; mkN "portal" ; mkN "veia" ; mkN "vein" ; } ; --*
lin portcullis_N = mkN "grade" ; --*
lin portend_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin portent_N = variants {mkN "adivinhação" ; mkN "agoiro" ; mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; mkN "profecia" ; mkN "prognóstico" ; } ; --*
lin portentous_2_A = mkA "aziago" ; --*
lin portentous_3_A = mkA "pomposo" ; --*
lin porter_1_N = mkN "carregador" ; --*
lin porter_2_N = variants {mkN "guard" ; mkN "porteiro" ; mkN "porter" ; } ; --*
lin porter_3_N = variants {mkN "Anne" ; mkN "Katherine" ; } ; --*
lin porter_4_N = variants {mkN "Albert" ; mkN "Cole" ; mkN "Porter" ; } ; --*
lin porter_5_N = variants {mkN "Henry" ; mkN "O." ; mkN "Sydney" ; } ; --*
lin porter_7_N = variants {mkN "beer" ; mkN "porter" ; } ; --*
lin portfolio_1_N = mkN "pasta" ; --*
lin porthole_1_N = mkN "vigia" ; --*
lin porthole_2_N = mkN "capialço" ; --*
lin portico_N = mkN "pórtico" ; --*
lin portion_1_N = variants {mkN "categoria" ; mkN "componente" ; mkN "part" ; mkN "parte" ; mkN "porção" ; } ; --*
lin portion_2_N = variants {mkN "parte" ; mkN "porção" ; } ; --*
lin portion_3_N = variants {mkN "parcela" ; mkN "parte" ; } ; --*
lin portion_4_N = mkN "atribuição" ; --*
lin portion_5_N = variants {mkN "circunstâncias" ; mkN "destino" ; mkN "sina" ; mkN "sorte" ; } ; --*
lin portion_6_N = mkN "dote" ; --*
lin portion_7_N = mkN "porção" ; --*
lin portion_V2 = variants {mkV2 (mkV "atribuir") ; mkV2 (mkV "lotear") ; } ; --*
lin portland_2_PN = mkPN "Portland" ; --*
lin portly_A = mkA "corpulento" ; --*
lin portmanteau_1_N = variants {mkN "Palavra-valise" ; mkN "word" ; } ; --*
lin portmanteau_2_N = variants {mkN "bag" ; mkN "maleta" ; mkN "valise" ; } ; --*
lin portrait_1_N = variants {mkN "descrição" ; mkN "desenho" ; mkN "ilustração" ; mkN "retrato" ; } ; --*
lin portrait_2_N = variants {mkN "pintura" ; mkN "retrato" ; } ; --*
lin portraitist_N = variants {mkN "painter" ; mkN "retratista" ; } ; --*
lin portraiture_1_N = variants {mkN "descrição" ; mkN "desenho" ; mkN "ilustração" ; mkN "retrato" ; } ; --*
lin portraiture_2_N = mkN "desenho" ; --*
lin portray_1_V2 = mkV2 (mkV "retratar") ; --*
lin portray_2_V2 = mkV2 (mkV "representar") ; --*
lin portray_3_V2 = variants {mkV2 (mkV "personificar") ; mkV2 (mkV "representar") ; mkV2 (mkV "retratar") ; } ; --*
lin portray_4_V2 = variants {mkV2 (mkV "representar") ; mkV2 (mkV "retratar") ; } ; --*
lin portrayal_1_N = variants {mkN "descrição" ; mkN "desenho" ; mkN "ilustração" ; mkN "retrato" ; } ; --*
lin portrayal_2_N = mkN "caracterização" ; --*
lin portrayal_4_N = variants {mkN "pintura" ; mkN "retrato" ; } ; --*
lin portsmouth_2_PN = mkPN "Portsmouth" ; --*
lin portsmouth_3_PN = mkPN "Portsmouth" ; --*
lin portugal_PN = variants {mkPN "Portugal" ; mkPN "Republic" ; } ; --*
lin portuguese_1_N = variants {mkN "língua" ; mkN "português" ; } ; --*
lin portuguese_2_N = variants {mkN "lusitano" ; mkN "luso" ; mkN "português" ; } ; --*
lin portuguese_A = variants {mkA "lusitânico" ; mkA "lusitano" ; mkA "luso" ; mkA "português" ; } ; --*
lin pose_1_N = mkN "afectação" ; --*
lin pose_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "propor") ; } ; --*
lin pose_2_V = mkV "posar" ; --*
lin pose_3_N = variants {mkN "ação" ; mkN "afetação" ; mkN "fingimento" ; } ; --*
lin pose_3_V = mkV "posar" ; --*
lin pose_5_V2 = variants {mkV2 (mkV "botar") ; mkV2 (mkV "carregar") ; mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin pose_6_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin poser_2_N = mkN "modelo" ; --*
lin posh_A = variants {mkA "chique" ; mkA "classudo" ; } ; --*
lin posit_1_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "situar") ; } ; --*
lin posit_2_V2 = variants {mkV2 (mkV "atestar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "forward") ; mkV2 (mkV "propor") ; } ; --*
lin posit_3_V2 = mkV2 (mkV "postular") ; --*
lin position_10_N = variants {mkN "colocação" ; mkN "posicionamento" ; } ; --*
lin position_11_N = mkN "situação" ; --*
lin position_12_N = variants {mkN "atitude" ; mkN "posição" ; mkN "postura" ; } ; --*
lin position_13_N = mkN "posição" ; --*
lin position_14_N = variants {mkN "lugar" ; mkN "posição" ; } ; --*
lin position_15_N = mkN "posição" ; --*
lin position_1_N = variants {mkN "local" ; mkN "lugar" ; mkN "posição" ; } ; --*
lin position_1_V2 = variants {mkV2 (mkV "posicionar") ; mkV2 (mkV "situar") ; } ; --*
lin position_2_N = variants {mkN "posição" ; mkN "position" ; } ; --*
lin position_2_V2 = variants {mkV2 (mkV "botar") ; mkV2 (mkV "carregar") ; mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin position_3_N = variants {mkN "perspectiva" ; mkN "posição" ; mkN "visão" ; } ; --*
lin position_4_N = variants {mkN "atitude" ; mkN "posição" ; mkN "postura" ; } ; --*
lin position_5_N = variants {mkN "classe" ; mkN "condição" ; mkN "estado" ; mkN "posição" ; mkN "status" ; } ; --*
lin position_6_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin position_7_N = variants {mkN "colocação" ; mkN "localização" ; mkN "posição" ; mkN "relation" ; } ; --*
lin position_8_N = mkN "posição" ; --*
lin positive_11_A = mkA "presunçoso" ; --*
lin positive_1_A = variants {mkA "positivo" ; mkA "vantajoso" ; } ; --*
lin positive_3_A = variants {mkA "positiva" ; mkA "positivo" ; } ; --*
lin positive_4_A = mkA "positivo" ; --*
lin positive_6_A = variants {mkA "incontestável" ; mkA "irrefutável" ; } ; --*
lin positiveness_2_N = mkN "positivismo" ; --*
lin positiveness_3_N = variants {mkN "benefício" ; mkN "lucro" ; } ; --*
lin positivism_1_N = variants {mkN "positivism" ; mkN "positivismo" ; mkN "Positivismo" ; } ; --*
lin positivism_2_N = mkN "positivismo" ; --*
lin positivist_N = mkN "positivista" ; --*
lin positivity_2_N = mkN "positivismo" ; --*
lin positivity_3_N = variants {mkN "benefício" ; mkN "lucro" ; } ; --*
lin positron_N = variants {mkN "positrão" ; mkN "Positron" ; mkN "Posítron" ; mkN "pósitron" ; mkN "Pósitron" ; } ; --*
lin possess_1_V2 = variants {mkV2 (mkV "possuir") ; mkV2 (mkV "ter") ; } ; --*
lin possess_2_V2 = variants {mkV2 (mkV "fruir") ; mkV2 (mkV "possuir") ; mkV2 (mkV "ter") ; } ; --*
lin possess_3_V2 = mkV2 (mkV "possuir") ; --*
lin possession_1_N = variants {mkN "possessão" ; mkN "propriedade" ; } ; --*
lin possession_2_N = variants {mkN "bem" ; mkN "posse" ; mkN "propriedade" ; } ; --*
lin possession_4_N = mkN "monomania" ; --*
lin possession_5_N = mkN "possessão" ; --*
lin possession_6_N = variants {mkN "auto-controle" ; mkN "determinação" ; mkN "power" ; } ; --*
lin possession_7_N = mkN "posse" ; --*
lin possessive_1_A = mkA "genitiva" ; --*
lin possessive_2_A = mkA "possessivo" ; --*
lin possessor_N = variants {mkN "amo" ; mkN "dono" ; mkN "possuidor" ; mkN "proprietário" ; } ; --*
lin possibility_1_N = mkN "possibilidade" ; --*
lin possibility_2_N = variants {mkN "chance" ; mkN "possibilidade" ; } ; --*
lin possibility_3_N = variants {mkN "hipótese" ; mkN "possibilidade" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin possibility_4_N = variants {mkN "action" ; mkN "possibilidade" ; } ; --*
lin possible_1_A = mkA "possível" ; --*
lin possible_2_A = variants {mkA "possível" ; mkA "potencial" ; } ; --*
lin possum_1_N = variants {mkN "cuíca" ; mkN "didelfo" ; mkN "Didelphidae" ; mkN "Didelphimorphia" ; mkN "gambá" ; mkN "saragüéia" ; mkN "sarigueia" ; mkN "seringüê" ; mkN "timbu" ; } ; --*
lin post_10_N = variants {mkN "correio" ; mkN "service" ; } ; --*
lin post_11_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "mandar") ; } ; --*
lin post_1_N = mkN "lugar" ; --*
lin post_2_V2 = mkV2 (mkV "postar") ; --*
lin post_3_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin post_4_V2 = mkV2 (mkV "situar") ; --*
lin post_4_V = mkV "situar" ; --*
lin post_9_N = mkN "poste" ; --*
lin post_9_V2 = mkV2 (mkV "estacar") ; --*
lin postage_1_N = mkN "porte" ; --*
lin postage_2_N = variants {mkN "selo" ; mkN "selodocorreio" ; mkN "Selos" ; mkN "stamp" ; } ; --*
lin postage_stamp_N = variants {mkN "selo" ; mkN "selodocorreio" ; mkN "Selos" ; mkN "stamp" ; } ; --*
lin postal_A = mkA "postal" ; --*
lin postbag_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin postbox_N = variants {mkN "box" ; mkN "caixa" ; } ; --*
lin postcard_1_N = variants {mkN "card" ; mkN "Cartão" ; } ; --*
lin postcode_N = variants {mkN "CEP" ; mkN "code" ; mkN "código" ; } ; --*
lin postdate_1_V2 = mkV2 (mkV "seguir") ; --*
lin postdoc_2_N = variants {mkN "doc" ; mkN "postdoc" ; } ; --*
lin poster_1_N = variants {mkN "anúncio" ; mkN "cartaz" ; mkN "edital" ; mkN "letreiro" ; mkN "papeleta" ; mkN "rótulo" ; } ; --*
lin poste_restante_2_N = mkN "restante" ; --*
lin posterior_1_A = variants {mkA "posterior" ; mkA "rabo" ; mkA "traseiro" ; } ; --*
lin posterior_1_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin posterior_2_A = variants {mkA "posterior" ; mkA "ulterior" ; } ; --*
lin posterior_2_N = variants {mkN "tooth" ; mkN "traseiro" ; } ; --*
lin posteriority_2_N = variants {mkN "Subsequência" ; mkN "Subseqüência" ; } ; --*
lin posterity_1_N = mkN "posteridade" ; --*
lin posterity_2_N = mkN "posteridade" ; --*
lin postern_N = mkN "poterna" ; --*
lin post_free_Adv = variants {mkAdv "borne-pago" ; mkAdv "comportepago" ; mkAdv "franqueado" ; } ; --*
lin postgraduate_A = mkA "graduado" ; --*
lin posthumous_A = mkA "póstumo" ; --*
lin postilion_N = mkN "Postilhão" ; --*
lin postillion_N = mkN "Postilhão" ; --*
lin posting_1_N = variants {mkN "anúncio" ; mkN "cartaz" ; mkN "edital" ; mkN "letreiro" ; mkN "papeleta" ; mkN "rótulo" ; } ; --*
lin postman_N = variants {mkN "carrier" ; mkN "carteiro" ; mkN "correio" ; } ; --*
lin postmark_N = variants {mkN "carimbo" ; mkN "Carimbo" ; } ; --*
lin postmark_V2 = variants {mkV2 (mkV "estampar") ; mkV2 (mkV "franquear") ; } ; --*
lin post_meridiem_Adv = variants {mkAdv "da" ; mkAdv "meridiem" ; } ; --*
lin postmodernism_N = mkN "pós-moderno" ; --*
lin postmodernist_A = mkA "pós-moderno" ; --*
lin post_mortem_2_N = variants {mkN "autópsia" ; mkN "examination" ; mkN "necropse" ; mkN "necrópsia" ; } ; --*
lin postmortem_2_N = variants {mkN "autópsia" ; mkN "examination" ; mkN "necropse" ; mkN "necrópsia" ; } ; --*
lin post_paid_Adv = variants {mkAdv "borne-pago" ; mkAdv "comportepago" ; mkAdv "franqueado" ; } ; --*
lin postponement_1_N = variants {mkN "adiamento" ; mkN "demora" ; mkN "lag" ; mkN "pausa" ; } ; --*
lin postponement_2_N = mkN "adiamento" ; --*
lin postpone_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin postposition_N = mkN "posposição" ; --*
lin postscript_2_N = variants {mkN "adendo" ; mkN "Post-scriptum" ; mkN "Post-Scriptum" ; } ; --*
lin postulate_1_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "postular") ; } ; --*
lin postulate_2_V2 = mkV2 (mkV "postular") ; --*
lin postulate_3_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin postulate_N = mkN "postulado" ; --*
lin postulation_2_N = variants {mkN "abaixo-assinado" ; mkN "apelo" ; mkN "instância" ; mkN "petição" ; mkN "requerimento" ; mkN "requisição" ; mkN "solicitação" ; } ; --*
lin postural_A = variants {mkA "da" ; mkA "postural" ; } ; --*
lin posture_1_N = variants {mkN "atitude" ; mkN "posição" ; mkN "postura" ; } ; --*
lin posture_2_N = mkN "posição" ; --*
lin posture_2_V = mkV "posar" ; --*
lin posture_3_N = variants {mkN "atitude" ; mkN "posição" ; mkN "postura" ; } ; --*
lin posy_N = mkN "buquê" ; --*
lin pot_1_N = mkN "pote" ; --*
lin pot_2_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin pot_4_N = mkN "vaso" ; --*
lin pot_6_N = variants {mkN "bolada" ; mkN "bolão" ; mkN "bolo" ; } ; --*
lin pot_7_N = variants {mkN "barriga" ; mkN "window" ; } ; --*
lin pot_8_N = variants {mkN "Potenciómetro" ; mkN "potenciômetro" ; } ; --*
lin pot_9_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin potable_A = mkA "potável" ; --*
lin potash_N = variants {mkN "hydroxide" ; mkN "potash" ; mkN "potássio" ; } ; --*
lin potassium_N = variants {mkN "number" ; mkN "Potassio" ; mkN "potássio" ; } ; --*
lin potato_1_N = variants {mkN "batata" ; mkN "batatinha" ; mkN "marmêndoa" ; mkN "potato" ; } ; --*
lin potato_2_N = variants {mkN "batata" ; mkN "potato" ; mkN "tuberosum" ; } ; --*
lin potbellied_A = variants {mkA "abdominal" ; mkA "pançudo" ; } ; --*
lin potbelly_1_N = variants {mkN "barriga" ; mkN "window" ; } ; --*
lin potency_1_N = mkN "autorização" ; --*
lin potency_2_N = variants {mkN "eficácia" ; mkN "força" ; mkN "potencia" ; mkN "potência" ; } ; --*
lin potency_3_N = variants {mkN "potenciabilidade" ; mkN "potencial" ; } ; --*
lin potency_4_N = mkN "potência" ; --*
lin potent_1_A = variants {mkA "poderoso" ; mkA "possante" ; mkA "potente" ; } ; --*
lin potent_2_A = mkA "potente" ; --*
lin potent_3_A = mkA "potente" ; --*
lin potent_4_A = mkA "viril" ; --*
lin potentate_N = variants {mkN "autocrata" ; mkN "autócrata" ; mkN "ditador" ; } ; --*
lin potential_1_A = variants {mkA "possível" ; mkA "potencial" ; } ; --*
lin potential_1_N = variants {mkN "potenciabilidade" ; mkN "potencial" ; } ; --*
lin potential_2_A = mkA "potencial" ; --*
lin potential_2_N = variants {mkN "difference" ; mkN "drop" ; mkN "potential" ; mkN "voltagem" ; } ; --*
lin potentiality_1_N = variants {mkN "potenciabilidade" ; mkN "potencial" ; } ; --*
lin potentiality_2_N = variants {mkN "capacidade" ; mkN "talento" ; } ; --*
lin potentiometer_2_N = variants {mkN "Potenciómetro" ; mkN "potenciômetro" ; } ; --*
lin pothead_N = mkN "maconheiro" ; --*
lin pother_N = mkN "rebuliço" ; --*
lin pothos_2_N = variants {mkN "arum" ; mkN "aureum" ; mkN "aureus" ; mkN "Epipremnum" ; mkN "pothos" ; } ; --*
lin pothouse_N = variants {mkN "bar" ; mkN "botequim" ; mkN "house" ; mkN "mill" ; mkN "pub" ; mkN "taberna" ; } ; --*
lin potion_N = variants {mkN "poção" ; mkN "Poção" ; } ; --*
lin pot_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin potpourri_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin potpourri_2_N = mkN "Pout-pourri" ; --*
lin potsdam_PN = mkPN "Potsdam" ; --*
lin potter_N = variants {mkN "ceramista" ; mkN "oleiro" ; } ; --*
lin pottery_1_N = variants {mkN "cerâmica" ; mkN "olaria" ; } ; --*
lin potto_1_N = variants {mkN "bear" ; mkN "caudivolvulus" ; mkN "flavus" ; mkN "Jupará" ; } ; --*
lin potto_2_N = mkN "potto" ; --*
lin potty_1_A = variants {mkA "apaixonado" ; mkA "enfatuado" ; mkA "enfeitiçado" ; mkA "love" ; mkA "on" ; mkA "with" ; } ; --*
lin potty_1_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin potty_2_N = variants {mkN "mug" ; mkN "penico" ; } ; --*
lin potty_3_A = variants {mkA "ligeiramente" ; mkA "tocado" ; } ; --*
lin pot_V2 = mkV2 (mkV "envasar") ; --*
lin pouch_1_N = variants {mkN "bolsa" ; mkN "malote" ; mkN "Marsúpio" ; } ; --*
lin pouch_2_N = variants {mkN "saca" ; mkN "saco" ; } ; --*
lin pouf_1_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin poultice_N = mkN "emplastro" ; --*
lin poultice_V2 = variants {mkV2 (mkV "curativizar") ; mkV2 (mkV "emplastrar") ; } ; --*
lin poultry_1_N = variants {mkN "carne" ; mkN "fowl" ; mkN "galinha" ; } ; --*
lin pounce_V = mkV "polvilhar" ; --*
lin pound_11_N = variants {mkN "Ezra" ; mkN "Loomis" ; mkN "Pound" ; } ; --*
lin pound_12_N = variants {mkN "diese" ; mkN "sign" ; } ; --*
lin pound_13_N = variants {mkN "canil" ; mkN "pound" ; } ; --*
lin pound_1_N = mkN "libra" ; --*
lin pound_1_V2 = mkV2 (mkV "bater") ; --*
lin pound_2_N = variants {mkN "libra" ; mkN "pound" ; mkN "sterling" ; } ; --*
lin pound_4_N = variants {mkN "Libra" ; mkN "pound" ; } ; --*
lin pound_4_V = mkV "pulsar" ; --*
lin pound_6_N = variants {mkN "Libra" ; mkN "pound" ; } ; --*
lin pound_7_N = variants {mkN "Libra" ; mkN "pound" ; mkN "punt" ; } ; --*
lin pound_8_N = variants {mkN "libra" ; mkN "pound" ; } ; --*
lin pound_9_N = variants {mkN "Libra" ; mkN "pound" ; } ; --*
lin pour_1_V2 = variants {mkV2 (mkV "derramar") ; mkV2 (mkV "entornar") ; mkV2 (mkV "verter") ; } ; --*
lin pour_3_V2 = variants {mkV2 (mkV "decantar") ; mkV2 (mkV "out") ; mkV2 (mkV "servir") ; } ; --*
lin pour_4_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "fluir") ; } ; --*
lin pour_5_V2 = variants {mkV2 (mkV "derramar") ; mkV2 (mkV "despejar") ; } ; --*
lin pour_6_V = variants {mkV "buckets" ; mkV "cats" ; mkV "chover" ; } ; --*
lin pour_down_V = variants {mkV "down" ; mkV "matar" ; mkV "off" ; } ; --*
lin pour_forth_V = variants {mkV "forth" ; mkV "verter" ; } ; --*
lin pour_out_1_V = mkV "out" ; --*
lin pour_out_2_V = variants {mkV "decantar" ; mkV "out" ; mkV "servir" ; } ; --*
lin pout_1_V = variants {mkV "amuar" ; mkV "emburrar" ; } ; --*
lin poverty_N = variants {mkN "empobrecimento" ; mkN "miséria" ; mkN "pobreza" ; mkN "Pobreza" ; } ; --*
lin poverty_stricken_A = mkA "indigente" ; --*
lin powder_1_N = mkN "pó" ; --*
lin powder_1_V2 = variants {mkV2 (mkV "esmiuçar") ; mkV2 (mkV "pulverizar") ; } ; --*
lin powder_2_N = mkN "pólvora" ; --*
lin powder_2_V2 = mkV2 (mkV "empoar") ; --*
lin powder_V = variants {mkV "esmiuçar" ; mkV "pulverizar" ; } ; --*
lin powdery_1_A = variants {mkA "em" ; mkA "pulvéreo" ; } ; --*
lin powdery_2_A = mkA "pulvéreo" ; --*
lin power_10_N = variants {mkN "businessman" ; mkN "executive" ; mkN "leader" ; mkN "magnata" ; } ; --*
lin power_1_N = mkN "poder" ; --*
lin power_2_N = variants {mkN "Potencia" ; mkN "potência" ; mkN "Potência" ; } ; --*
lin power_3_N = variants {mkN "capacidade" ; mkN "faculdade" ; mkN "habilidade" ; mkN "talento" ; } ; --*
lin power_4_N = variants {mkN "cargo" ; mkN "ofício" ; mkN "poder" ; } ; --*
lin power_5_N = variants {mkN "força" ; mkN "poder" ; } ; --*
lin power_6_N = mkN "expoente" ; --*
lin power_7_N = variants {mkN "força" ; mkN "potência" ; } ; --*
lin power_8_N = variants {mkN "power" ; mkN "superpoder" ; } ; --*
lin power_9_N = variants {mkN "electricidade" ; mkN "eletricidade" ; mkN "energia" ; mkN "energy" ; mkN "potência" ; } ; --*
lin powerful_1_A = mkA "poderoso" ; --*
lin powerful_2_A = variants {mkA "poderoso" ; mkA "potente" ; } ; --*
lin powerful_3_A = variants {mkA "poderoso" ; mkA "possante" ; mkA "potente" ; } ; --*
lin powerful_4_A = mkA "musculoso" ; --*
lin powerhouse_3_N = variants {mkN "plant" ; mkN "station" ; mkN "usina" ; } ; --*
lin powerless_A = mkA "impotente" ; --*
lin powerlessness_N = mkN "impotência" ; --*
lin power_station_N = variants {mkN "plant" ; mkN "station" ; mkN "usina" ; } ; --*
lin power_V2 = mkV2 (mkV "alimentar") ; --*
lin pow_N = variants {mkN "of" ; mkN "Prisioneiros" ; } ; --*
lin pox_1_N = variants {mkN "lues" ; mkN "Sifilis" ; mkN "sífilis" ; mkN "venerea" ; } ; --*
lin pp_1_N = variants {mkN "Fosforo" ; mkN "fósforo" ; mkN "number" ; } ; --*
lin pp_2_N = mkN "p" ; --*
lin pr_1_N = variants {mkN "number" ; mkN "Praseodimio" ; mkN "praseodímio" ; } ; --*
lin pr_2_N = variants {mkN "of" ; mkN "Porto" ; mkN "Rico" ; } ; --*
lin pr_3_N = variants {mkN "Relações" ; mkN "relations" ; } ; --*
lin practicable_2_A = variants {mkA "executável" ; mkA "exequível" ; mkA "exeqüível" ; mkA "factível" ; mkA "fazível" ; mkA "maneável" ; mkA "manejável" ; mkA "possível" ; mkA "praticável" ; mkA "prestimoso" ; mkA "verossímil" ; mkA "viável" ; } ; --*
lin practical_1_A = mkA "prático" ; --*
lin practical_2_A = variants {mkA "pragmático" ; mkA "prático" ; } ; --*
lin practical_3_A = mkA "virtual" ; --*
lin practice_1_N = variants {mkN "costume" ; mkN "hábito" ; } ; --*
lin practice_1_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "praticar") ; } ; --*
lin practice_2_N = variants {mkN "exercício" ; mkN "prática" ; mkN "session" ; } ; --*
lin practice_2_V2 = mkV2 (mkV "praticar") ; --*
lin practice_3_N = variants {mkN "costume" ; mkN "costumes" ; mkN "praxe" ; mkN "Praxis" ; mkN "práxis" ; mkN "Práxis" ; } ; --*
lin practice_3_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "exercitar") ; mkV2 (mkV "exercitar-se") ; } ; --*
lin practice_4_N = mkN "prática" ; --*
lin practice_4_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "praticar") ; mkV2 (mkV "utilizar") ; } ; --*
lin practice_5_V2 = mkV2 (mkV "praticar") ; --*
lin practice_V = variants {mkV "ensaiar" ; mkV "exercitar" ; mkV "exercitar-se" ; } ; --*
lin practician_N = variants {mkN "praticante" ; mkN "profissional" ; mkN "quem" ; } ; --*
lin practise_1_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "exercitar") ; mkV2 (mkV "exercitar-se") ; } ; --*
lin practise_1_V = variants {mkV "ensaiar" ; mkV "exercitar" ; mkV "exercitar-se" ; } ; --*
lin practise_2_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "praticar") ; } ; --*
lin practise_3_V2 = mkV2 (mkV "praticar") ; --*
lin practitionerFem_N = variants {mkN "praticante" ; mkN "profissional" ; mkN "quem" ; } ; --*
lin practitionerMasc_N = variants {mkN "praticante" ; mkN "profissional" ; mkN "quem" ; } ; --*
lin praenomen_N = mkN "praenomen" ; --*
lin praetorian_1_A = mkA "pretoriano" ; --*
lin praetor_N = mkN "pretor" ; --*
lin pragmatic_1_A = mkA "pragmático" ; --*
lin pragmatic_3_A = variants {mkA "pragmático" ; mkA "prático" ; } ; --*
lin pragmatics_N = mkN "pragmática" ; --*
lin pragmatism_1_N = mkN "pragmatismo" ; --*
lin pragmatism_2_N = variants {mkN "pragmatismo" ; mkN "Pragmatismo" ; } ; --*
lin prague_PN = variants {mkPN "capital" ; mkPN "Praga" ; } ; --*
lin prairie_N = variants {mkN "pradaria" ; mkN "prado" ; mkN "uma" ; } ; --*
lin praise_1_N = variants {mkN "elogio" ; mkN "glória" ; mkN "loa" ; mkN "louvor" ; } ; --*
lin praise_2_N = mkN "agradecimento" ; --*
lin praise_V2 = variants {mkV2 (mkV "elogiar") ; mkV2 (mkV "louvar") ; } ; --*
lin pram_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin prance_1_V = mkV "desfilar" ; --*
lin prank_2_N = variants {mkN "gozação" ; mkN "sacanagem" ; mkN "travessura" ; mkN "trote" ; } ; --*
lin praseodymium_N = variants {mkN "number" ; mkN "Praseodimio" ; mkN "praseodímio" ; } ; --*
lin prate_V = mkV "tagarelar" ; --*
lin pratfall_2_N = variants {mkN "bobagem" ; mkN "fiasco" ; mkN "gafe" ; } ; --*
lin prattle_V = mkV "tagarelar" ; --*
lin prawn_1_N = variants {mkN "camarão" ; mkN "Camarão" ; mkN "Caridea" ; } ; --*
lin prawn_2_N = mkN "Dendrobranchiata" ; --*
lin pray_1_V = variants {mkV "orar" ; mkV "rezar" ; } ; --*
lin pray_2_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin prayer_1_N = mkN "carola" ; --*
lin prayer_2_N = variants {mkN "oração" ; mkN "petição" ; mkN "reza" ; } ; --*
lin prayer_3_N = variants {mkN "apelo" ; mkN "petição" ; mkN "súplica" ; } ; --*
lin prayer_4_N = variants {mkN "oração" ; mkN "prece" ; } ; --*
lin prayer_5_N = variants {mkN "rezador" ; mkN "suplicante" ; } ; --*
lin prayer_book_1_N = variants {mkN "book" ; mkN "missal" ; } ; --*
lin prazosin_N = mkN "Prazosin" ; --*
lin preach_1_V2 = mkV2 (mkV "fazer") ; --*
lin preach_2_V2 = variants {mkV2 (mkV "advocar") ; mkV2 (mkV "advogar") ; mkV2 (mkV "arguir") ; mkV2 (mkV "argumentar") ; mkV2 (mkV "predicar") ; mkV2 (mkV "pregar") ; } ; --*
lin preacher_N = variants {mkN "man" ; mkN "pregador" ; mkN "sacerdote" ; } ; --*
lin preachify_V = mkV "julgar" ; --*
lin preamble_N = mkN "preâmbulo" ; --*
lin precarious_1_A = mkA "precário" ; --*
lin precarious_2_A = variants {mkA "arriscado" ; mkA "periculoso" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin precarious_3_A = mkA "precário" ; --*
lin precariousness_2_N = variants {mkN "incerteza" ; mkN "precariedade" ; } ; --*
lin precaution_1_N = mkN "precaução" ; --*
lin precaution_2_N = mkN "precaução" ; --*
lin precaution_3_N = variants {mkN "cautela" ; mkN "precaução" ; mkN "prudência" ; } ; --*
lin precede_1_V2 = mkV2 (mkV "preceder") ; --*
lin precede_2_V2 = variants {mkV2 (mkV "anteceder") ; mkV2 (mkV "preceder") ; } ; --*
lin precede_3_V2 = variants {mkV2 (mkV "before") ; mkV2 (mkV "preceder") ; } ; --*
lin precede_4_V2 = mkV2 (mkV "preceder") ; --*
lin precede_5_V2 = variants {mkV2 (mkV "introduzir") ; mkV2 (mkV "preceder") ; mkV2 (mkV "prefaciar") ; } ; --*
lin precedence_1_N = variants {mkN "precedência" ; mkN "prioridade" ; mkN "prioridades" ; } ; --*
lin precedence_2_N = variants {mkN "antecedência" ; mkN "precedência" ; mkN "prioridade" ; } ; --*
lin precedence_3_N = mkN "precedência" ; --*
lin precedent_1_N = variants {mkN "in" ; mkN "precedente" ; } ; --*
lin precedent_2_N = variants {mkN "direito" ; mkN "Jurisprudencia" ; mkN "jurisprudência" ; mkN "law" ; } ; --*
lin precedent_3_N = variants {mkN "direito" ; mkN "law" ; } ; --*
lin precentor_N = mkN "Cantor" ; --*
lin precept_1_N = variants {mkN "preceito" ; mkN "princípio" ; } ; --*
lin precept_2_N = mkN "preceito" ; --*
lin preceptor_N = variants {mkN "preceptor" ; mkN "Preceptor" ; } ; --*
lin precession_2_N = mkN "precedência" ; --*
lin precious_2_A = mkA "precioso" ; --*
lin precious_4_A = mkA "precioso" ; --*
lin precipice_N = mkN "precipício" ; --*
lin precipitate_1_A = mkA "precipitado" ; --*
lin precipitate_1_V2 = mkV2 (mkV "precipitar") ; --*
lin precipitate_2_V2 = variants {mkV2 (mkV "precipitação") ; mkV2 (mkV "precipitar") ; } ; --*
lin precipitate_3_V2 = variants {mkV2 (mkV "cair") ; mkV2 (mkV "down") ; mkV2 (mkV "precipitar") ; } ; --*
lin precipitation_2_N = mkN "precipitação" ; --*
lin precipitation_3_N = mkN "precipitação" ; --*
lin precipitation_6_N = mkN "pressa" ; --*
lin precipitator_N = variants {mkN "Precipitador" ; mkN "precipitator" ; } ; --*
lin precipitous_1_A = mkA "precipitado" ; --*
lin precipitous_2_A = variants {mkA "abrupto" ; mkA "brusco" ; mkA "repentino" ; } ; --*
lin precise_1_A = variants {mkA "bem" ; mkA "precisa" ; mkA "preciso" ; } ; --*
lin precise_2_A = variants {mkA "afinado" ; mkA "certo" ; mkA "exacto" ; mkA "exato" ; mkA "perfeito" ; mkA "preciso" ; } ; --*
lin preciseness_1_N = mkN "precisão" ; --*
lin preciseness_2_N = variants {mkN "exatidão" ; mkN "precisão" ; mkN "rigor" ; } ; --*
lin precision_N = variants {mkN "exatidão" ; mkN "precisão" ; mkN "rigor" ; } ; --*
lin preclude_1_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "impossibilitar") ; mkV2 (mkV "obstar") ; } ; --*
lin preclude_2_V2 = variants {mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin precocious_1_A = mkA "precoce" ; --*
lin precognition_N = mkN "precognição" ; --*
lin preconceive_V2 = mkV2 (mkV "pré-conceber") ; --*
lin preconception_2_N = variants {mkN "preconceito" ; mkN "Pré-conceito" ; mkN "viés" ; } ; --*
lin precondition_1_N = variants {mkN "condição" ; mkN "estipulação" ; mkN "pré-condição" ; } ; --*
lin precondition_2_N = variants {mkN "hipótese" ; mkN "presunção" ; } ; --*
lin precursor_2_N = mkN "precursor" ; --*
lin predaceous_2_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin predacious_2_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin predate_1_V2 = mkV2 (mkV "preceder") ; --*
lin predate_2_V2 = variants {mkV2 (mkV "anteceder") ; mkV2 (mkV "preceder") ; } ; --*
lin predate_4_V2 = mkV2 (mkV "antedatar") ; --*
lin predation_1_N = mkN "depredação" ; --*
lin predator_2_N = variants {mkN "animal" ; mkN "predadores" ; } ; --*
lin predatory_2_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin predatory_3_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin predecessor_1_N = mkN "predecessor" ; --*
lin predestinate_V2 = mkV2 (mkV "predestinar") ; --*
lin predestination_2_N = mkN "predestinação" ; --*
lin predestine_2_V2 = mkV2 (mkV "predestinar") ; --*
lin predestine_3_V2 = variants {mkV2 (mkV "predestinar") ; mkV2 (mkV "preordenar") ; } ; --*
lin predetermination_1_N = mkN "predestinação" ; --*
lin predetermine_1_V2 = mkV2 (mkV "predeterminar") ; --*
lin predetermine_2_V2 = mkV2 (mkV "predeterminar") ; --*
lin predicament_N = variants {mkN "apuro" ; mkN "dificuldade" ; } ; --*
lin predicate_2_V2 = mkV2 (mkV "proclamar") ; --*
lin predict_1_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin predict_1_VS = variants {mkVS (mkV "adivinhar") ; mkVS (mkV "predizer") ; mkVS (mkV "pressentir") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin predict_2_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin predictability_N = mkN "previsibilidade" ; --*
lin predictable_A = variants {mkA "previsível" ; mkA "que" ; } ; --*
lin prediction_1_N = variants {mkN "antecipação" ; mkN "previsão" ; } ; --*
lin prediction_2_N = variants {mkN "predição" ; mkN "previsão" ; mkN "prognóstico" ; } ; --*
lin predictive_A = mkA "preditivo" ; --*
lin predictor_1_N = variants {mkN "adivinha" ; mkN "adivinhão" ; mkN "adivinho" ; } ; --*
lin predigest_V2 = mkV2 (mkV "pré-digerir") ; --*
lin predilection_1_N = mkN "preferência" ; --*
lin predilection_2_N = variants {mkN "predileção" ; mkN "preferência" ; mkN "tendência" ; } ; --*
lin predispose_V2 = mkV2 (mkV "predispor") ; --*
lin predisposition_1_N = mkN "sensibilidade" ; --*
lin predisposition_2_N = variants {mkN "predisposição" ; mkN "tendência" ; } ; --*
lin predisposition_3_N = variants {mkN "predisposição" ; mkN "tendência" ; } ; --*
lin prednisone_N = variants {mkN "Pred" ; mkN "prednisona" ; } ; --*
lin predominance_1_N = mkN "predominância" ; --*
lin predominant_1_A = mkA "predominante" ; --*
lin predominant_2_A = variants {mkA "o" ; mkA "preeminente" ; mkA "preponderante" ; mkA "primordial" ; } ; --*
lin predominate_1_V = variants {mkV "comandar" ; mkV "dominar" ; mkV "mandar" ; mkV "predominar" ; mkV "reinar" ; } ; --*
lin predominate_2_V = variants {mkV "atirar-se" ; mkV "erguer-se" ; mkV "predominar" ; } ; --*
lin predomination_1_N = mkN "predominância" ; --*
lin preeclampsia_1_N = variants {mkN "Pré-eclampsia" ; mkN "pré-eclâmpsia" ; mkN "Pré-eclâmpsia" ; } ; --*
lin pre_emption_1_N = mkN "preempção" ; --*
lin preemption_1_N = mkN "preempção" ; --*
lin pre_emption_2_N = variants {mkN "direito" ; mkN "preempção" ; } ; --*
lin preemption_2_N = variants {mkN "direito" ; mkN "preempção" ; } ; --*
lin pre_emption_3_N = mkN "preempção" ; --*
lin preemption_3_N = mkN "preempção" ; --*
lin pre_emption_4_N = variants {mkN "preempção" ; mkN "Preemptividade" ; } ; --*
lin preemption_4_N = variants {mkN "preempção" ; mkN "Preemptividade" ; } ; --*
lin pre_emptive_A = variants {mkA "preemptivo" ; mkA "que" ; } ; --*
lin preemptive_A = variants {mkA "preemptivo" ; mkA "que" ; } ; --*
lin pre_existent_A = mkA "preexistente" ; --*
lin preexistent_A = mkA "preexistente" ; --*
lin preface_N = mkN "prefácio" ; --*
lin preface_V2 = variants {mkV2 (mkV "introduzir") ; mkV2 (mkV "preceder") ; mkV2 (mkV "prefaciar") ; } ; --*
lin prefatory_A = mkA "introdutório" ; --*
lin prefecture_1_N = mkN "distrito" ; --*
lin prefer_1_V2 = mkV2 (mkV "preferir") ; --*
lin prefer_2_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "optar") ; mkV2 (mkV "preferir") ; } ; --*
lin prefer_3_V2 = variants {mkV2 (mkV "favorecer") ; mkV2 (mkV "preferir") ; } ; --*
lin prefer_4_V2 = mkV2 (mkV "preferir") ; --*
lin prefer_4_VV = mkVV (mkV "preferir") ; --*
lin preferable_A = mkA "preferível" ; --*
lin preference_1_N = variants {mkN "predileção" ; mkN "preferência" ; mkN "tendência" ; } ; --*
lin preference_2_N = mkN "preferência" ; --*
lin preference_3_N = mkN "preferência" ; --*
lin preference_4_N = mkN "preferência" ; --*
lin preferred_1_A = mkA "preferível" ; --*
lin preferred_2_A = variants {mkA "favorita" ; mkA "favorito" ; mkA "predilecto" ; mkA "predileto" ; mkA "preferido" ; } ; --*
lin prefigure_2_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin prefix_N = variants {mkN "prefixo" ; mkN "Prefixo" ; mkN "Prefixos" ; } ; --*
lin prefrontal_A = mkA "pré-frontal" ; --*
lin pregnancy_N = variants {mkN "embaraço" ; mkN "gravidez" ; } ; --*
lin pregnant_1_A = variants {mkA "grávida" ; mkA "grávido" ; mkA "prenha" ; } ; --*
lin pregnant_2_A = mkA "significativo" ; --*
lin preheat_V2 = mkV2 (mkV "preaquecer") ; --*
lin prehensile_3_A = variants {mkA "avaro" ; mkA "ávido" ; mkA "ganancioso" ; } ; --*
lin prehistoric_1_A = mkA "pré-histórico" ; --*
lin prehistoric_2_A = mkA "pré-histórico" ; --*
lin prehistorical_A = mkA "pré-histórico" ; --*
lin prehistory_N = variants {mkN "culture" ; mkN "pré-história" ; } ; --*
lin prejudge_V2 = mkV2 (mkV "prejulgar") ; --*
lin prejudice_1_V2 = mkV2 (mkV "prejudicar") ; --*
lin prejudice_2_V2 = mkV2 (mkV "prejulgar") ; --*
lin prejudice_N = variants {mkN "preconceito" ; mkN "Pré-conceito" ; mkN "viés" ; } ; --*
lin prejudicial_to_A2 = variants {mkA2 (mkA "danoso") noPrep ; mkA2 (mkA "prejudicial") noPrep ; } ; --*
lin prelate_N = variants {mkN "prelado" ; mkN "priest" ; mkN "primaz" ; } ; --*
lin preliminary_A = mkA "preliminar" ; --*
lin prelude_2_N = mkN "prelúdio" ; --*
lin premature_1_A = variants {mkA "prematura" ; mkA "prematuro" ; } ; --*
lin premature_3_A = variants {mkA "antes" ; mkA "prematuro" ; } ; --*
lin prematureness_N = mkN "prematuridade" ; --*
lin premeditate_1_V2 = mkV2 (mkV "premeditar") ; --*
lin premeditate_2_V2 = mkV2 (mkV "premeditar") ; --*
lin premeditation_2_N = mkN "premeditação" ; --*
lin premier_2_A = variants {mkA "primeira" ; mkA "primeiro" ; mkA "principal" ; } ; --*
lin premier_2_N = variants {mkN "chanceler" ; mkN "minister" ; mkN "primeiro-ministro" ; } ; --*
lin premiere_1_V2 = mkV2 (mkV "estrear") ; --*
lin premise_2_V2 = variants {mkV2 (mkV "introduzir") ; mkV2 (mkV "preceder") ; mkV2 (mkV "prefaciar") ; } ; --*
lin premise_3_V2 = variants {mkV2 (mkV "pressupor") ; mkV2 (mkV "tomar") ; } ; --*
lin premise_N = mkN "pressuposto" ; --*
lin premises_N = mkN "premissa" ; --*
lin premiss_N = mkN "pressuposto" ; --*
lin premiss_V2 = variants {mkV2 (mkV "pressupor") ; mkV2 (mkV "tomar") ; } ; --*
lin premium_1_N = variants {mkN "premium" ; mkN "seguro" ; } ; --*
lin premium_3_N = variants {mkN "ágio" ; mkN "premium" ; } ; --*
lin premium_4_N = mkN "prêmio" ; --*
lin premium_5_N = mkN "recompensa" ; --*
lin premolar_N = variants {mkN "bicúspide" ; mkN "pré-molar" ; } ; --*
lin premonition_1_N = mkN "pressentimento" ; --*
lin prenatal_A = mkA "pré-natal" ; --*
lin prentice_N = mkN "aprendiz" ; --*
lin preoccupancy_1_N = mkN "preocupação" ; --*
lin preoccupation_1_N = mkN "preocupação" ; --*
lin preoccupation_2_N = mkN "preocupação" ; --*
lin preoccupy_1_V2 = variants {mkV2 (mkV "ocupar") ; mkV2 (mkV "preocupar") ; } ; --*
lin preordain_V2 = variants {mkV2 (mkV "predestinar") ; mkV2 (mkV "preordenar") ; } ; --*
lin preparation_1_N = mkN "preparação" ; --*
lin preparation_3_N = variants {mkN "planeamento" ; mkN "planejamento" ; mkN "Planejamento" ; } ; --*
lin preparation_4_N = variants {mkN "preparação" ; mkN "prontidão" ; mkN "rapidez" ; } ; --*
lin preparation_6_N = variants {mkN "preparação" ; mkN "treino" ; } ; --*
lin preparation_7_N = variants {mkN "dever" ; mkN "lição" ; mkN "tarefa" ; mkN "trabalho" ; } ; --*
lin preparation_8_N = variants {mkN "cozinha" ; mkN "culinária" ; mkN "preparação" ; } ; --*
lin preparatory_A = mkA "preparatório" ; --*
lin prepare_1_V2 = variants {mkV2 (mkV "aprontar") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin prepare_1_VV = variants {mkVV (mkV "aprontar") ; mkVV (mkV "preparar") ; mkVV (mkV "up") ; } ; --*
lin prepare_2_V2 = variants {mkV2 (mkV "cozinhar") ; mkV2 (mkV "preparar") ; } ; --*
lin prepare_2_V3 = variants {mkV3 (mkV "cozinhar") ; mkV3 (mkV "preparar") ; } ; --*
lin prepare_3_V2 = mkV2 (mkV "preparar") ; --*
lin prepare_4_V2 = variants {mkV2 (mkV "confabular") ; mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin prepare_5_V2 = mkV2 (mkV "preparar") ; --*
lin prepare_6_V2 = variants {mkV2 (mkV "instruir") ; mkV2 (mkV "treinar") ; } ; --*
lin prepare_8_VV = mkVV (mkV "treinar") ; --*
lin prepare_as_V2 = mkV2 (mkV "treinar") ; --*
lin preparedness_N = variants {mkN "preparação" ; mkN "prontidão" ; mkN "rapidez" ; } ; --*
lin prepay_V2 = variants {mkV2 (mkV "pagar") ; mkV2 (mkV "pré-pagar") ; } ; --*
lin prep_N = variants {mkN "dever" ; mkN "lição" ; mkN "tarefa" ; mkN "trabalho" ; } ; --*
lin preponderance_2_N = variants {mkN "preponderância" ; mkN "prevalência" ; } ; --*
lin preponderant_A = variants {mkA "o" ; mkA "preeminente" ; mkA "preponderante" ; mkA "primordial" ; } ; --*
lin preponderate_V = variants {mkV "preponderar" ; mkV "prevalecer" ; } ; --*
lin preposition_1_N = mkN "preposição" ; --*
lin prepossess_2_V2 = mkV2 (mkV "preocupar") ; --*
lin prepossess_3_V2 = mkV2 (mkV "impressionar") ; --*
lin prepossess_4_V2 = mkV2 (mkV "prejulgar") ; --*
lin preposterous_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin prepuce_1_N = mkN "prepúcio" ; --*
lin prepuce_2_N = mkN "prepúcio" ; --*
lin prerequisite_N = variants {mkN "condição" ; mkN "pré-requisito" ; } ; --*
lin prerogative_N = variants {mkN "direito" ; mkN "prerrogativa" ; mkN "privilégio" ; mkN "right" ; } ; --*
lin presage_2_N = variants {mkN "adivinhação" ; mkN "agoiro" ; mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; mkN "profecia" ; mkN "prognóstico" ; } ; --*
lin presage_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin presbyopia_N = mkN "presbiopia" ; --*
lin presbyterianism_N = variants {mkN "presbiterianismo" ; mkN "Presbiterianismo" ; } ; --*
lin presbyterian_N = mkN "presbiteriano" ; --*
lin presbyter_N = mkN "presbítero" ; --*
lin presbytery_N = mkN "presbitério" ; --*
lin prescribe_1_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "ditar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "prescrever") ; mkV2 (mkV "receitar") ; } ; --*
lin prescription_1_N = variants {mkN "prescrição" ; mkN "receita" ; } ; --*
lin prescription_2_N = variants {mkN "drug" ; mkN "medicine" ; mkN "remédio" ; } ; --*
lin prescription_4_N = variants {mkN "prescrição" ; mkN "receita" ; } ; --*
lin prescriptive_A = mkA "normativo" ; --*
lin prescript_N = variants {mkN "norma" ; mkN "normas" ; mkN "prescrição" ; } ; --*
lin presence_1_N = mkN "presença" ; --*
lin presence_2_N = mkN "presença" ; --*
lin presence_3_N = mkN "presença" ; --*
lin presence_4_N = mkN "presença" ; --*
lin presence_5_N = variants {mkN "comportamento" ; mkN "presença" ; } ; --*
lin presence_6_N = mkN "presença" ; --*
lin present_10_V2 = variants {mkV2 (mkV "representar") ; mkV2 (mkV "retratar") ; } ; --*
lin present_11_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "confrontar") ; mkV2 (mkV "deparar") ; } ; --*
lin present_12_V2 = mkV2 (mkV "apresentar") ; --*
lin present_13_V2 = mkV2 (mkV "saudar") ; --*
lin present_1_A = mkA "presente" ; --*
lin present_1_N = variants {mkN "actualidade" ; mkN "hoje" ; } ; --*
lin present_1_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "mostrar") ; } ; --*
lin present_2_A = mkA "presente" ; --*
lin present_2_N = mkN "presente" ; --*
lin present_2_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "out") ; } ; --*
lin present_3_N = variants {mkN "presente" ; mkN "tense" ; } ; --*
lin present_3_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "encenar") ; } ; --*
lin present_4_V2 = mkV2 (mkV "entregar") ; --*
lin present_5_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "propor") ; } ; --*
lin present_6_V2 = variants {mkV2 (mkV "outorgar") ; mkV2 (mkV "premiar") ; mkV2 (mkV "presentear") ; } ; --*
lin present_7_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "oferecer") ; mkV2 (mkV "regalar") ; } ; --*
lin present_8_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "presentar") ; mkV2 (mkV "pronunciar") ; } ; --*
lin present_9_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "introduzir") ; } ; --*
lin presentation_2_N = variants {mkN "apresentação" ; mkN "demonstração" ; } ; --*
lin presentation_3_N = mkN "apresentação" ; --*
lin presentation_4_N = mkN "apresentação" ; --*
lin presentation_5_N = mkN "apresentação" ; --*
lin presentation_6_N = mkN "apresentação" ; --*
lin present_day_A = variants {mkA "atual" ; mkA "contemporâneo" ; mkA "hodierno" ; } ; --*
lin presenter_1_N = mkN "apresentador" ; --*
lin presenter_3_N = variants {mkN "doador" ; mkN "patrocinador" ; } ; --*
lin presentiment_N = mkN "pressentimento" ; --*
lin presentment_3_N = variants {mkN "apresentação" ; mkN "demonstração" ; } ; --*
lin preservation_1_N = variants {mkN "conservação" ; mkN "preservação" ; } ; --*
lin preservation_2_N = mkN "preservação" ; --*
lin preservation_4_N = mkN "conservação" ; --*
lin preservative_N = variants {mkN "conservante" ; mkN "conservantes" ; mkN "Conservantes" ; } ; --*
lin preserve_1_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "manter") ; mkV2 (mkV "on") ; mkV2 (mkV "preservar") ; } ; --*
lin preserve_2_V2 = variants {mkV2 (mkV "acautelar") ; mkV2 (mkV "up") ; } ; --*
lin preserve_3_N = mkN "conservas" ; --*
lin preserve_3_V2 = variants {mkV2 (mkV "conservar") ; mkV2 (mkV "guardar") ; mkV2 (mkV "manter") ; mkV2 (mkV "poupar") ; mkV2 (mkV "preservar") ; } ; --*
lin preserve_4_V2 = variants {mkV2 (mkV "conservar") ; mkV2 (mkV "preservar") ; } ; --*
lin preserve_5_V2 = mkV2 (mkV "defender") ; --*
lin preserver_1_N = mkN "restaurador" ; --*
lin preset_A = variants {mkA "como" ; mkA "configurado" ; mkA "tomado" ; } ; --*
lin presidency_1_N = variants {mkN "presidência" ; mkN "term" ; } ; --*
lin presidency_2_N = mkN "presidência" ; --*
lin presidentFem_1_N = variants {mkN "diretor" ; mkN "presidenta" ; mkN "presidente" ; } ; --*
lin presidentFem_2_N = variants {mkN "Executive" ; mkN "of" ; mkN "presidente" ; mkN "States" ; } ; --*
lin presidentFem_3_N = variants {mkN "presidenta" ; mkN "presidente" ; } ; --*
lin presidentFem_4_N = mkN "presidente" ; --*
lin presidentFem_5_N = variants {mkN "presidente" ; mkN "reitor" ; } ; --*
lin presidentFem_6_N = variants {mkN "Executive" ; mkN "of" ; mkN "Presidente" ; } ; --*
lin presidential_1_A = mkA "presidencial" ; --*
lin presidential_2_A = mkA "presidencial" ; --*
lin presidentMasc_1_N = variants {mkN "diretor" ; mkN "presidenta" ; mkN "presidente" ; } ; --*
lin presidentMasc_2_N = variants {mkN "Executive" ; mkN "of" ; mkN "presidente" ; mkN "States" ; } ; --*
lin presidentMasc_3_N = variants {mkN "presidenta" ; mkN "presidente" ; } ; --*
lin presidentMasc_4_N = mkN "presidente" ; --*
lin presidentMasc_5_N = variants {mkN "presidente" ; mkN "reitor" ; } ; --*
lin presidentMasc_6_N = variants {mkN "Executive" ; mkN "of" ; mkN "Presidente" ; } ; --*
lin preside_V = mkV "presidir" ; --*
lin press_11_V = mkV "empurrar" ; --*
lin press_12_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "passar") ; } ; --*
lin press_14_V2 = variants {mkV2 (mkV "implorar") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin press_1_N = variants {mkN "instância" ; mkN "pressão" ; } ; --*
lin press_2_N = variants {mkN "imprensa" ; mkN "jornalismo" ; mkN "press" ; } ; --*
lin press_2_V2 = variants {mkV2 (mkV "exortar") ; mkV2 (mkV "on") ; mkV2 (mkV "urgir") ; } ; --*
lin press_2_V = variants {mkV "exortar" ; mkV "on" ; mkV "urgir" ; } ; --*
lin press_3_N = variants {mkN "imprensa" ; mkN "press" ; } ; --*
lin press_4_N = mkN "multidão" ; --*
lin press_5_N = variants {mkN "armário" ; mkN "estante" ; mkN "guarda-roupas" ; mkN "Guardarroupas" ; } ; --*
lin press_5_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "contrair") ; } ; --*
lin press_7_N = variants {mkN "prensa" ; mkN "press" ; } ; --*
lin press_9_N = mkN "pressão" ; --*
lin press_9_V = variants {mkV "advogar" ; mkV "agitar" ; mkV "fazer" ; mkV "lutar" ; } ; --*
lin press_agency_N = variants {mkN "agency" ; mkN "association" ; mkN "organisation" ; mkN "organization" ; mkN "service" ; } ; --*
lin press_agent_N = variants {mkN "agent" ; mkN "man" ; mkN "relations" ; } ; --*
lin press_box_N = mkN "box" ; --*
lin press_clipping_N = variants {mkN "clipping" ; mkN "cutting" ; mkN "recorte" ; } ; --*
lin press_cutting_N = variants {mkN "clipping" ; mkN "cutting" ; mkN "recorte" ; } ; --*
lin press_down_on_V2 = variants {mkV2 (mkV "prensar") ; mkV2 (mkV "pressionar") ; } ; --*
lin pressing_1_N = mkN "pressão" ; --*
lin pressing_2_N = mkN "prensagem" ; --*
lin pressing_A = mkA "urgente" ; --*
lin pressman_1_N = mkN "gráfico" ; --*
lin press_on_V3 = variants {mkV3 (mkV "prensar") ; mkV3 (mkV "pressionar") ; } ; --*
lin press_up_N = mkN "Flexão" ; --*
lin pressure_1_N = variants {mkN "level" ; mkN "per" ; mkN "pressão" ; } ; --*
lin pressure_1_V2 = variants {mkV2 (mkV "compelir") ; mkV2 (mkV "forçar") ; mkV2 (mkV "obrigar") ; } ; --*
lin pressure_2_N = mkN "pressão" ; --*
lin pressure_2_V2 = variants {mkV2 (mkV "chantagear") ; mkV2 (mkV "pressionar") ; } ; --*
lin pressure_2_V2V = variants {mkV2V (mkV "chantagear") ; mkV2V (mkV "pressionar") ; } ; --*
lin pressure_3_N = mkN "pressão" ; --*
lin pressure_4_N = variants {mkN "instância" ; mkN "pressão" ; } ; --*
lin pressure_5_N = variants {mkN "pressão" ; mkN "sensation" ; } ; --*
lin pressure_7_N = variants {mkN "pressão" ; mkN "pressure" ; } ; --*
lin pressure_cooker_N = mkN "cooker" ; --*
lin pressure_gauge_N = variants {mkN "gage" ; mkN "gauge" ; } ; --*
lin prestidigitator_N = variants {mkN "ilusionista" ; mkN "Magician" ; } ; --*
lin prestige_N = variants {mkN "honra" ; mkN "prestígio" ; } ; --*
lin prestigious_1_A = mkA "prestigioso" ; --*
lin prestigious_2_A = mkA "prestigioso" ; --*
lin presumably_Adv = mkAdv "provavelmente" ; --*
lin presume_1_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "for") ; mkV2 (mkV "presumir") ; mkV2 (mkV "supor") ; } ; --*
lin presume_1_VS = variants {mkVS (mkV "assumir") ; mkVS (mkV "for") ; mkVS (mkV "presumir") ; mkVS (mkV "supor") ; } ; --*
lin presumption_1_N = variants {mkN "hipótese" ; mkN "presunção" ; } ; --*
lin presumptive_1_A = mkA "suposto" ; --*
lin presumptive_2_A = mkA "suposto" ; --*
lin presumptuous_A = mkA "presunçoso" ; --*
lin presuppose_1_V2 = mkV2 (mkV "pressupor") ; --*
lin presuppose_2_V2 = mkV2 (mkV "pressupor") ; --*
lin presupposition_N = mkN "pressuposição" ; --*
lin pretence_2_N = variants {mkN "aparência" ; mkN "pretexto" ; } ; --*
lin pretend_1_V2 = variants {mkV2 (mkV "aparentar") ; mkV2 (mkV "fingir") ; mkV2 (mkV "pretextar") ; mkV2 (mkV "simular") ; } ; --*
lin pretend_2_V = mkV "fingir" ; --*
lin pretend_3_V2 = mkV2 (mkV "pretender") ; --*
lin pretend_4_VS = variants {mkVS (mkV "adivinhar") ; mkVS (mkV "aventurar") ; mkVS (mkV "pretender") ; mkVS (mkV "supor") ; } ; --*
lin pretend_5_V = variants {mkV "atuar" ; mkV "believe" ; } ; --*
lin pretender_2_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin pretender_3_N = variants {mkN "hipócrita" ; mkN "tartufo" ; } ; --*
lin pretense_5_N = variants {mkN "aparência" ; mkN "pretexto" ; } ; --*
lin pretension_3_N = mkN "pretensão" ; --*
lin pretentious_1_A = mkA "presumido" ; --*
lin pretentious_2_A = mkA "presumido" ; --*
lin pretentious_3_A = mkA "presumido" ; --*
lin pretentiousness_1_N = mkN "fausto" ; --*
lin pretentiousness_2_N = mkN "pretensão" ; --*
lin preterite_N = variants {mkN "preterito" ; mkN "pretérito" ; } ; --*
lin preterit_N = variants {mkN "preterito" ; mkN "pretérito" ; } ; --*
lin preternatural_1_A = mkA "misterioso" ; --*
lin pretext_1_N = mkN "pretexto" ; --*
lin pretext_2_N = variants {mkN "aparência" ; mkN "pretexto" ; } ; --*
lin pretoria_PN = variants {mkPN "of" ; mkPN "Pretória" ; } ; --*
lin pretor_N = mkN "pretor" ; --*
lin prettify_V2 = variants {mkV2 (mkV "embelezar") ; mkV2 (mkV "embonecar") ; mkV2 (mkV "empetecar") ; } ; --*
lin pretty_1_A = mkA "bonito" ; --*
lin pretty_AdA = variants {mkAdA "com" ; mkAdA "razoavelmente" ; } ; --*
lin pretzel_N = mkN "pretzel" ; --*
lin prevail_1_V = variants {mkV "comandar" ; mkV "dominar" ; mkV "mandar" ; mkV "predominar" ; mkV "reinar" ; } ; --*
lin prevail_2_V = variants {mkV "obter" ; mkV "prevalecer" ; mkV "primar" ; } ; --*
lin prevail_3_V = variants {mkV "hard" ; mkV "perdurar" ; } ; --*
lin prevail_4_V = variants {mkV "triunfar" ; mkV "vencer" ; } ; --*
lin prevailing_A = mkA "predominante" ; --*
lin prevalence_2_N = mkN "prevalência" ; --*
lin prevalence_3_N = variants {mkN "preponderância" ; mkN "prevalência" ; } ; --*
lin prevalent_A = mkA "predominante" ; --*
lin prevaricate_V = variants {mkV "around" ; mkV "embromar" ; mkV "enrolar" ; mkV "mentir" ; mkV "tergiversar" ; } ; --*
lin prevarication_1_N = variants {mkN "falsidade" ; mkN "história" ; mkN "mentira" ; } ; --*
lin prevarication_2_N = variants {mkN "evasividade" ; mkN "mentira" ; } ; --*
lin prevarication_3_N = mkN "mentira" ; --*
lin prevent_1_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "impossibilitar") ; mkV2 (mkV "obstar") ; } ; --*
lin prevent_2_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "impedir") ; } ; --*
lin preventable_A = variants {mkA "evitável" ; mkA "previnível" ; } ; --*
lin preventative_2_N = mkN "obstáculo" ; --*
lin prevention_N = mkN "prevenção" ; --*
lin preventive_1_A = variants {mkA "preventivo" ; mkA "profilático" ; } ; --*
lin preventive_2_A = mkA "preventivo" ; --*
lin preventive_2_N = mkN "obstáculo" ; --*
lin preview_2_N = mkN "ante-estreia" ; --*
lin previous_1_A = mkA "prévio" ; --*
lin previous_3_A = variants {mkA "anterior" ; mkA "prévio" ; } ; --*
lin prevision_3_N = mkN "previsão" ; --*
lin prevision_4_N = variants {mkN "antecipação" ; mkN "previsão" ; } ; --*
lin prey_1_N = variants {mkN "game" ; mkN "presa" ; } ; --*
lin prey_2_N = mkN "presa" ; --*
lin priapic_2_A = mkA "fálico" ; --*
lin priapism_N = mkN "priapismo" ; --*
lin price_1_N = variants {mkN "custo" ; mkN "preço" ; mkN "preços" ; mkN "value" ; } ; --*
lin price_1_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "cotar") ; mkV2 (mkV "valorizar") ; } ; --*
lin price_2_N = variants {mkN "custo" ; mkN "preço" ; mkN "preços" ; } ; --*
lin price_2_V2 = mkV2 (mkV "apreçar") ; --*
lin price_3_N = variants {mkN "custo" ; mkN "preço" ; } ; --*
lin price_4_N = mkN "preço" ; --*
lin price_6_N = mkN "preço" ; --*
lin price_7_N = variants {mkN "Leontyne" ; mkN "Price" ; } ; --*
lin priceless_A = variants {mkA "impagável" ; mkA "inestimável" ; mkA "que" ; mkA "sem" ; } ; --*
lin pricey_1_A = mkA "caro" ; --*
lin pricing_N = mkN "Pricing" ; --*
lin prick_1_N = variants {mkN "filha" ; mkN "filho" ; mkN "fucker" ; mkN "of" ; } ; --*
lin prick_1_V2 = variants {mkV2 (mkV "alfinetar") ; mkV2 (mkV "picar") ; } ; --*
lin prick_2_V2 = variants {mkV2 (mkV "machucar") ; mkV2 (mkV "picar") ; } ; --*
lin prick_3_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin prick_3_V2 = variants {mkV2 (mkV "erguer") ; mkV2 (mkV "up") ; } ; --*
lin prick_4_V2 = variants {mkV2 (mkV "aguilhoar") ; mkV2 (mkV "atiçar") ; } ; --*
lin prick_4_V = variants {mkV "aguilhoar" ; mkV "atiçar" ; } ; --*
lin prick_5_V2 = mkV2 (mkV "formigar") ; --*
lin prick_5_V = mkV "formigar" ; --*
lin prick_6_V2 = mkV2 (mkV "alfinetar") ; --*
lin prick_7_V2 = variants {mkV2 (mkV "morder") ; mkV2 (mkV "picar") ; } ; --*
lin pricker_1_N = variants {mkN "acúleo" ; mkN "espinho" ; } ; --*
lin prickle_1_V2 = mkV2 (mkV "formigar") ; --*
lin prickle_1_V = mkV "formigar" ; --*
lin prickle_3_V2 = variants {mkV2 (mkV "alfinetar") ; mkV2 (mkV "picar") ; } ; --*
lin prickle_N = variants {mkN "acúleo" ; mkN "espinho" ; } ; --*
lin prickly_2_A = variants {mkA "espinhento" ; mkA "espinhoso" ; mkA "farpado" ; } ; --*
lin pride_1_N = variants {mkN "auto-estima" ; mkN "orgulho" ; } ; --*
lin pride_2_N = variants {mkN "orgulho" ; mkN "soberba" ; mkN "ufania" ; } ; --*
lin pride_V2 = variants {mkV2 (mkV "congratular") ; mkV2 (mkV "orgulhar") ; } ; --*
lin priest_1_N = variants {mkN "clérigo" ; mkN "padre" ; mkN "pastor" ; mkN "presbítero" ; mkN "sacerdote" ; } ; --*
lin priest_2_N = variants {mkN "clérigo" ; mkN "padre" ; mkN "Padres" ; mkN "priest" ; } ; --*
lin priggish_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin prim_2_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin prima_A = mkA "o" ; --*
lin primacy_N = mkN "primazia" ; --*
lin prima_donna_2_N = variants {mkN "donna" ; mkN "primeira-dama" ; } ; --*
lin primaeval_A = variants {mkA "primitivo" ; mkA "primordial" ; } ; --*
lin primal_1_A = variants {mkA "básico" ; mkA "central" ; mkA "fundamental" ; } ; --*
lin primal_2_A = variants {mkA "primitivo" ; mkA "primordial" ; } ; --*
lin primaquine_N = mkN "Primaquina" ; --*
lin primary_1_A = variants {mkA "fundamental" ; mkA "preliminar" ; mkA "primário" ; mkA "principal" ; } ; --*
lin primary_1_N = variants {mkN "election" ; mkN "Eleição" ; } ; --*
lin primary_2_A = mkA "primário" ; --*
lin primary_3_A = variants {mkA "principal" ; mkA "proficiente" ; } ; --*
lin primary_4_A = variants {mkA "elementar" ; mkA "rudimentar" ; } ; --*
lin primate_1_N = variants {mkN "prelado" ; mkN "priest" ; mkN "primaz" ; } ; --*
lin primate_2_N = variants {mkN "primata" ; mkN "primatas" ; } ; --*
lin primatology_N = mkN "Primatologia" ; --*
lin prime_1_A = variants {mkA "primeira" ; mkA "primeiro" ; mkA "principal" ; } ; --*
lin prime_1_N = variants {mkN "primo" ; mkN "quantity" ; } ; --*
lin prime_1_V2 = mkV2 (mkV "preparar") ; --*
lin prime_2_N = variants {mkN "auge" ; mkN "flor" ; mkN "floração" ; } ; --*
lin prime_3_A = variants {mkA "fino" ; mkA "primordial" ; mkA "seleto" ; mkA "superior" ; } ; --*
lin prime_4_A = mkA "primo" ; --*
lin prime_4_N = variants {mkN "of" ; mkN "primor" ; } ; --*
lin primer_1_N = mkN "cartilha" ; --*
lin priming_1_N = mkN "preparação" ; --*
lin primitive_1_A = variants {mkA "primitiva" ; mkA "primitivo" ; } ; --*
lin primitive_2_A = mkA "primitivo" ; --*
lin primitive_3_A = mkA "primitivo" ; --*
lin primness_1_N = mkN "pudor" ; --*
lin primogeniture_N = mkN "Primogenitura" ; --*
lin primordial_A = variants {mkA "primitivo" ; mkA "primordial" ; } ; --*
lin primrose_N = mkN "prímula" ; --*
lin primula_N = mkN "prímula" ; --*
lin princedom_2_N = mkN "principado" ; --*
lin princely_1_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin prince_N = variants {mkN "príncipe" ; mkN "Príncipe" ; } ; --*
lin princess_N = variants {mkN "princesa" ; mkN "Princesa" ; mkN "príncipe" ; } ; --*
lin principal_2_N = variants {mkN "director" ; mkN "diretor" ; mkN "principal" ; mkN "teacher" ; } ; --*
lin principal_3_N = mkN "ator" ; --*
lin principal_A = variants {mkA "principal" ; mkA "proficiente" ; } ; --*
lin principality_N = mkN "principado" ; --*
lin principle_1_N = variants {mkN "princípio" ; mkN "regra" ; } ; --*
lin principle_3_N = mkN "princípio" ; --*
lin principle_4_N = variants {mkN "princípio" ; mkN "regra" ; } ; --*
lin principle_5_N = variants {mkN "preceito" ; mkN "princípio" ; } ; --*
lin prink_2_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; mkV2 (mkV "vestir") ; } ; --*
lin print_1_V2 = variants {mkV2 (mkV "editar") ; mkV2 (mkV "publicar") ; } ; --*
lin print_2_N = mkN "impressão" ; --*
lin print_3_N = mkN "marca" ; --*
lin print_3_V2 = mkV2 (mkV "imprimir") ; --*
lin print_4_V2 = mkV2 (mkV "imprimir") ; --*
lin printable_A = variants {mkA "imprimível" ; mkA "que" ; } ; --*
lin printer_1_N = mkN "gráfico" ; --*
lin printer_2_N = mkN "impressora" ; --*
lin printer_3_N = variants {mkN "impressor" ; mkN "impressora" ; mkN "machine" ; } ; --*
lin printing_3_N = variants {mkN "impressão" ; mkN "process" ; } ; --*
lin printing_4_N = variants {mkN "edição" ; mkN "impressão" ; mkN "publicação" ; } ; --*
lin printing_press_N = variants {mkN "imprensa" ; mkN "press" ; } ; --*
lin printmaking_N = mkN "Gravura" ; --*
lin prion_N = variants {mkN "Prion" ; mkN "príon" ; } ; --*
lin prior_A = variants {mkA "anterior" ; mkA "prévio" ; } ; --*
lin prioress_N = variants {mkN "abadessa" ; mkN "abbadessa" ; mkN "superior" ; } ; --*
lin priority_1_N = variants {mkN "precedência" ; mkN "prioridade" ; mkN "prioridades" ; } ; --*
lin priority_2_N = variants {mkN "antecedência" ; mkN "precedência" ; mkN "prioridade" ; } ; --*
lin prism_1_N = mkN "prisma" ; --*
lin prism_2_N = variants {mkN "prism" ; mkN "prisma" ; mkN "Prismas" ; } ; --*
lin prismatic_1_A = mkA "prismático" ; --*
lin prison_1_N = variants {mkN "cadeia" ; mkN "house" ; mkN "presídio" ; mkN "prisão" ; mkN "Prisão" ; mkN "xadrez" ; } ; --*
lin prison_breaking_N = mkN "evasão" ; --*
lin prisoner_N = variants {mkN "cativo" ; mkN "preso" ; mkN "prisioneiro" ; mkN "refém" ; } ; --*
lin privacy_1_N = variants {mkN "intimidade" ; mkN "privacidade" ; } ; --*
lin privacy_2_N = variants {mkN "clandestinidade" ; mkN "intimidade" ; mkN "privacidade" ; mkN "segredo" ; mkN "sigilo" ; } ; --*
lin private_1_A = mkA "privado" ; --*
lin private_2_A = mkA "privado" ; --*
lin private_4_A = variants {mkA "privado" ; mkA "secreto" ; } ; --*
lin privateer_2_N = variants {mkN "corsário" ; mkN "Corsários" ; mkN "navio" ; } ; --*
lin privation_1_N = variants {mkN "pobreza" ; mkN "privação" ; } ; --*
lin privation_2_N = mkN "privação" ; --*
lin privatisation_N = mkN "privatização" ; --*
lin privatization_1_N = mkN "privatização" ; --*
lin privatize_1_V2 = mkV2 (mkV "privatizar") ; --*
lin privilege_1_N = mkN "privilégio" ; --*
lin privilege_2_N = variants {mkN "direito" ; mkN "prerrogativa" ; mkN "privilégio" ; mkN "right" ; } ; --*
lin privilege_3_N = mkN "privilégio" ; --*
lin privileged_1_A = mkA "privilegiado" ; --*
lin privileged_2_A = mkA "privilegiado" ; --*
lin privileged_3_A = mkA "privilegiado" ; --*
lin privy_1_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin privy_A = variants {mkA "privado" ; mkA "secreto" ; } ; --*
lin prize_1_N = variants {mkN "galardão" ; mkN "prémio" ; mkN "prêmio" ; } ; --*
lin prize_1_V2 = variants {mkV2 (mkV "apreciar") ; mkV2 (mkV "valorizar") ; } ; --*
lin prize_2_N = variants {mkN "botim" ; mkN "espólio" ; mkN "money" ; mkN "pilhagem" ; mkN "rapina" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin prize_2_V2 = variants {mkV2 (mkV "alavancar") ; mkV2 (mkV "arrombar") ; } ; --*
lin prize_3_N = variants {mkN "prémio" ; mkN "troféu" ; } ; --*
lin prize_3_V2 = variants {mkV2 (mkV "prezar") ; mkV2 (mkV "respeitar") ; mkV2 (mkV "venerar") ; } ; --*
lin pro_2_N = mkN "pró" ; --*
lin proaccelerin_N = variants {mkN "accelerator" ; mkN "factor" ; mkN "Factor" ; mkN "V" ; } ; --*
lin probabilistic_1_A = mkA "probabilístico" ; --*
lin probabilistic_2_A = mkA "probabilístico" ; --*
lin probability_1_N = mkN "probabilidade" ; --*
lin probability_2_N = mkN "probabilidade" ; --*
lin probable_1_A = mkA "provável" ; --*
lin probable_2_A = mkA "provável" ; --*
lin probation_1_N = variants {mkN "estágio" ; mkN "período" ; } ; --*
lin probation_2_N = variants {mkN "contrato" ; mkN "período" ; } ; --*
lin probation_3_N = mkN "liberdade" ; --*
lin probationary_A = variants {mkA "provisória" ; mkA "provisório" ; mkA "temporário" ; mkA "tentativo" ; } ; --*
lin probe_1_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "pesquisa" ; mkN "sindicância" ; } ; --*
lin probe_1_V2 = variants {mkV2 (mkV "examinar") ; mkV2 (mkV "investigar") ; mkV2 (mkV "pesquisar") ; } ; --*
lin probe_1_V = variants {mkV "examinar" ; mkV "investigar" ; mkV "pesquisar" ; } ; --*
lin probe_2_N = mkN "sonda" ; --*
lin probenecid_N = mkN "probenecida" ; --*
lin probiotic_N = variants {mkN "bacterium" ; mkN "flora" ; mkN "microflora" ; mkN "probiótico" ; } ; --*
lin probity_N = mkN "probidade" ; --*
lin problem_1_N = variants {mkN "dificuldade" ; mkN "problema" ; mkN "treta" ; } ; --*
lin problem_2_N = variants {mkN "problema" ; mkN "questão" ; } ; --*
lin problem_3_N = variants {mkN "dificuldade" ; mkN "obstáculo" ; mkN "problema" ; } ; --*
lin problematic_1_A = mkA "problemático" ; --*
lin problematic_2_A = mkA "frustrante" ; --*
lin proboscidean_1_N = mkN "proboscídeos" ; --*
lin proboscis_1_N = mkN "focinho" ; --*
lin proboscis_2_N = variants {mkN "Proboscide" ; mkN "probóscide" ; mkN "tromba" ; } ; --*
lin procaine_N = mkN "procaína" ; --*
lin procedural_2_A = mkA "processual" ; --*
lin procedure_1_N = mkN "processo" ; --*
lin procedure_2_N = variants {mkN "operação" ; mkN "procedimento" ; } ; --*
lin procedure_3_N = variants {mkN "função" ; mkN "subrotina" ; mkN "sub-rotina" ; mkN "Sub-rotina" ; } ; --*
lin procedure_4_N = variants {mkN "procedimento" ; mkN "processo" ; } ; --*
lin proceed_1_V = variants {mkV "continuar" ; mkV "on" ; mkV "prosseguir" ; } ; --*
lin proceed_2_V = variants {mkV "adiantar-se" ; mkV "continuar" ; mkV "forward" ; mkV "ir" ; mkV "progredir" ; mkV "prosseguir" ; mkV "seguir" ; } ; --*
lin proceed_3_V = mkV "proceder" ; --*
lin proceed_4_V = variants {mkV "ir" ; mkV "prosseguir" ; } ; --*
lin proceed_5_V = variants {mkV "along" ; mkV "continuar" ; mkV "on" ; mkV "prosseguir" ; mkV "seguir" ; } ; --*
lin proceeding_N = variants {mkN "procedimento" ; mkN "proceeding" ; } ; --*
lin proceedings_1_N = variants {mkN "procedimento" ; mkN "proceeding" ; } ; --*
lin proceedings_2_N = variants {mkN "ata" ; mkN "minuta" ; mkN "minutos" ; } ; --*
lin process_1_N = mkN "processo" ; --*
lin process_2_V2 = variants {mkV2 (mkV "processar") ; mkV2 (mkV "tratar") ; } ; --*
lin process_3_N = mkN "Intimação" ; --*
lin process_3_V2 = mkV2 (mkV "processar") ; --*
lin process_4_V2 = variants {mkV2 (mkV "acionar") ; mkV2 (mkV "ajuizar") ; mkV2 (mkV "litigar") ; } ; --*
lin process_6_N = variants {mkN "process" ; mkN "processos" ; } ; --*
lin process_6_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "trabalhar") ; } ; --*
lin processing_N = mkN "processamento" ; --*
lin procession_1_N = mkN "procissão" ; --*
lin procession_2_N = variants {mkN "procissão" ; mkN "romaria" ; } ; --*
lin procession_3_N = variants {mkN "avanço" ; mkN "motion" ; mkN "progressão" ; } ; --*
lin processor_3_N = variants {mkN "CPU" ; mkN "processador" ; mkN "processing" ; mkN "processor" ; mkN "UCP" ; } ; --*
lin process_V = variants {mkV "caminhar" ; mkV "marchar" ; } ; --*
lin proclaim_2_V2 = variants {mkV2 (mkV "exclamar") ; mkV2 (mkV "proclamar") ; mkV2 (mkV "promulgar") ; mkV2 (mkV "veicular") ; } ; --*
lin proclaim_3_V2 = mkV2 (mkV "proclamar") ; --*
lin proclaim_4_V2 = variants {mkV2 (mkV "exaltar") ; mkV2 (mkV "glorificar") ; mkV2 (mkV "louvar") ; } ; --*
lin proclamation_1_N = variants {mkN "anunciação" ; mkN "anúncio" ; mkN "declaracão" ; mkN "declaração" ; mkN "pregão" ; mkN "proclamação" ; mkN "promulgação" ; } ; --*
lin proclivity_N = variants {mkN "inclinação" ; mkN "tendência" ; } ; --*
lin proconsul_2_N = mkN "procônsul" ; --*
lin procrastinate_1_V = variants {mkV "adiar" ; mkV "enrolar" ; mkV "one's" ; mkV "procrastinar" ; } ; --*
lin procrastinate_2_V = mkV "procrastinar" ; --*
lin procrastination_1_N = mkN "procrastinação" ; --*
lin procrastination_2_N = mkN "morosidade" ; --*
lin procrastinator_N = mkN "procrastinador" ; --*
lin procreate_V2 = variants {mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "reproduzir") ; } ; --*
lin procreation_N = variants {mkN "of" ; mkN "procriação" ; mkN "reprodução" ; } ; --*
lin proctitis_N = variants {mkN "proctite" ; mkN "Proctite" ; } ; --*
lin proctologist_N = mkN "proctologista" ; --*
lin proctor_N = mkN "monitor" ; --*
lin procurable_A = variants {mkA "adquirível" ; mkA "obtenível" ; } ; --*
lin procurator_1_N = variants {mkN "procurador" ; mkN "procuradora" ; mkN "representante" ; } ; --*
lin procurator_2_N = mkN "solicitador" ; --*
lin procure_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "obter") ; } ; --*
lin procure_2_V2 = mkV2 (mkV "arranjar") ; --*
lin procurement_N = variants {mkN "aprovisionamento" ; mkN "aquisição" ; mkN "compras" ; mkN "obtenção" ; } ; --*
lin procurer_1_N = variants {mkN "cafetão" ; mkN "chulo" ; mkN "man" ; mkN "proxeneta" ; mkN "proxenetismo" ; mkN "safado" ; } ; --*
lin procuress_N = variants {mkN "cafetão" ; mkN "proxeneta" ; mkN "safado" ; } ; --*
lin prod_1_N = mkN "provocação" ; --*
lin prod_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "cutucar") ; } ; --*
lin prod_2_V2 = variants {mkV2 (mkV "incitar") ; mkV2 (mkV "on") ; mkV2 (mkV "provocar") ; } ; --*
lin prod_3_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "cotovelar") ; mkV2 (mkV "cutucar") ; } ; --*
lin prodigal_A = mkA "pródigo" ; --*
lin prodigious_1_A = mkA "colossal" ; --*
lin prodigious_3_A = mkA "excepcional" ; --*
lin prodigy_1_N = variants {mkN "prodigio" ; mkN "prodígio" ; } ; --*
lin prodigy_2_N = variants {mkN "adivinhação" ; mkN "agoiro" ; mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; mkN "profecia" ; mkN "prognóstico" ; } ; --*
lin prodromal_1_A = mkA "prodrômico" ; --*
lin produce_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "forth") ; } ; --*
lin produce_2_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "criar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin produce_3_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "causar") ; mkV2 (mkV "produzir") ; mkV2 (mkV "rise") ; } ; --*
lin produce_4_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "mostrar") ; } ; --*
lin produce_5_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin produce_7_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "crescer") ; mkV2 (mkV "ganhar") ; } ; --*
lin produce_N = variants {mkN "goods" ; mkN "groceries" ; mkN "hortifruti" ; mkN "truck" ; } ; --*
lin producer_1_N = variants {mkN "fabricante" ; mkN "produtor" ; } ; --*
lin producer_2_N = variants {mkN "produtor" ; mkN "Produtores" ; } ; --*
lin producer_3_N = mkN "produtor" ; --*
lin product_1_N = variants {mkN "artigo" ; mkN "fazenda" ; mkN "mercadoria" ; mkN "mercadorias" ; mkN "produto" ; } ; --*
lin product_2_N = variants {mkN "bens" ; mkN "produção" ; mkN "produto" ; } ; --*
lin product_3_N = variants {mkN "product" ; mkN "produto" ; } ; --*
lin product_4_N = variants {mkN "produto" ; mkN "produtos" ; } ; --*
lin product_5_N = variants {mkN "produto" ; mkN "produtos" ; } ; --*
lin product_6_N = variants {mkN "product" ; mkN "produto" ; } ; --*
lin production_1_N = variants {mkN "actividades" ; mkN "produção" ; } ; --*
lin production_2_N = variants {mkN "apresentação" ; mkN "produção" ; } ; --*
lin production_3_N = variants {mkN "bens" ; mkN "produção" ; mkN "produto" ; } ; --*
lin production_5_N = mkN "produção" ; --*
lin production_7_N = mkN "produção" ; --*
lin productive_1_A = variants {mkA "produtivo" ; mkA "produtor" ; } ; --*
lin productive_2_A = mkA "produtivo" ; --*
lin productive_3_A = mkA "produtivo" ; --*
lin productive_4_A = mkA "produtivo" ; --*
lin productiveness_N = variants {mkN "produtividade" ; mkN "rendimento" ; } ; --*
lin productivity_1_N = variants {mkN "produtividade" ; mkN "rendimento" ; } ; --*
lin proenzyme_N = mkN "zimógeno" ; --*
lin profanation_1_N = variants {mkN "blasfémia" ; mkN "blasfêmia" ; mkN "profanação" ; mkN "Profanação" ; mkN "sacrilégio" ; } ; --*
lin profane_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin profane_2_A = mkA "profano" ; --*
lin profane_2_V2 = variants {mkV2 (mkV "dessacralizar") ; mkV2 (mkV "profanar") ; mkV2 (mkV "violar") ; } ; --*
lin profane_4_A = mkA "sacrílego" ; --*
lin profanity_N = variants {mkN "Palavra" ; mkN "Palavrão" ; mkN "Palavras" ; mkN "profanação" ; } ; --*
lin profess_2_V = mkV "professar" ; --*
lin profess_3_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "confessar") ; } ; --*
lin profession_2_N = mkN "profissão" ; --*
lin profession_4_N = mkN "profissão" ; --*
lin professional_1_A = mkA "profissional" ; --*
lin professional_3_A = mkA "profissional" ; --*
lin professional_3_N = variants {mkN "mestre" ; mkN "professor" ; } ; --*
lin professional_4_A = mkA "profissional" ; --*
lin professional_5_A = mkA "profissional" ; --*
lin professor_N = variants {mkN "catedrático" ; mkN "professor" ; } ; --*
lin professorship_N = mkN "cadeira" ; --*
lin proffer_N = variants {mkN "proposição" ; mkN "proposta" ; mkN "sugestão" ; } ; --*
lin proffer_V2 = mkV2 (mkV "oferecer") ; --*
lin proficiency_1_N = variants {mkN "competência" ; mkN "habilidade" ; mkN "proficiência" ; } ; --*
lin proficiency_2_N = variants {mkN "habilidade" ; mkN "técnica" ; } ; --*
lin proficient_1_A = variants {mkA "competente" ; mkA "experiente" ; mkA "hábil" ; mkA "habilidoso" ; mkA "mestre" ; mkA "versado" ; } ; --*
lin proficient_2_A = mkA "técnico" ; --*
lin profile_1_N = mkN "perfil" ; --*
lin profile_2_N = mkN "perfil" ; --*
lin profile_2_V2 = mkV2 (mkV "perfilar") ; --*
lin profile_3_N = mkN "perfil" ; --*
lin profile_4_N = mkN "visibilidade" ; --*
lin profile_5_N = mkN "perfil" ; --*
lin profit_1_N = variants {mkN "ganancia" ; mkN "income" ; mkN "profit" ; mkN "rendimento" ; } ; --*
lin profit_1_V = variants {mkV "beneficiar" ; mkV "ganhar" ; mkV "lucrar" ; } ; --*
lin profit_2_N = variants {mkN "bem" ; mkN "lucro" ; mkN "proveito" ; } ; --*
lin profit_2_V = variants {mkV "a" ; mkV "lucrar" ; } ; --*
lin profitability_N = variants {mkN "lucratividade" ; mkN "rentabilidade" ; } ; --*
lin profitable_A = variants {mkA "lucrativo" ; mkA "proveitoso" ; mkA "rendoso" ; } ; --*
lin profitableness_1_N = variants {mkN "benefício" ; mkN "lucro" ; } ; --*
lin profitableness_2_N = variants {mkN "lucratividade" ; mkN "rentabilidade" ; } ; --*
lin profiterole_N = variants {mkN "profiterole" ; mkN "Profiterole" ; mkN "Profiteroles" ; } ; --*
lin profitless_A = mkA "não" ; --*
lin profligacy_2_N = variants {mkN "devassidão" ; mkN "dissolução" ; } ; --*
lin profligate_1_A = mkA "pródigo" ; --*
lin profligate_2_A = variants {mkA "devasso" ; mkA "libertino" ; } ; --*
lin prof_N = variants {mkN "catedrático" ; mkN "professor" ; } ; --*
lin profound_1_A = variants {mkA "entranhado" ; mkA "profundo" ; } ; --*
lin profound_2_A = mkA "profundo(a)" ; --*
lin profuse_A = mkA "abundante" ; --*
lin profuseness_N = variants {mkN "cornucópia" ; mkN "Cornucópia" ; mkN "riqueza" ; } ; --*
lin profusion_N = variants {mkN "cornucópia" ; mkN "Cornucópia" ; mkN "riqueza" ; } ; --*
lin progenitor_1_N = mkN "progenitor" ; --*
lin progeria_N = variants {mkN "progeria" ; mkN "Progeria" ; } ; --*
lin progesterone_N = mkN "progesterona" ; --*
lin progestin_N = mkN "Progestina" ; --*
lin prognathism_N = mkN "prognatismo" ; --*
lin prognathous_A = variants {mkA "prógnata" ; mkA "prógnato" ; } ; --*
lin prognosis_1_N = variants {mkN "previsão" ; mkN "prognose" ; mkN "prognóstico" ; } ; --*
lin prognosis_2_N = variants {mkN "prognosis" ; mkN "prognóstico" ; } ; --*
lin prognostic_A = mkA "preditivo" ; --*
lin prognosticate_1_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin prognosticate_2_V2 = variants {mkV2 (mkV "agourar") ; mkV2 (mkV "augurar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "prefigurar") ; mkV2 (mkV "prenunciar") ; mkV2 (mkV "pressagiar") ; mkV2 (mkV "prever") ; mkV2 (mkV "profetizar") ; mkV2 (mkV "prognosticar") ; mkV2 (mkV "vaticinar") ; } ; --*
lin prognostication_1_N = variants {mkN "adivinhação" ; mkN "agoiro" ; mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; mkN "profecia" ; mkN "prognóstico" ; } ; --*
lin prognostication_2_N = variants {mkN "predição" ; mkN "previsão" ; mkN "prognóstico" ; } ; --*
lin prognostication_3_N = mkN "previsão" ; --*
lin prognostic_N = variants {mkN "adivinhação" ; mkN "agoiro" ; mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; mkN "profecia" ; mkN "prognóstico" ; } ; --*
lin program_1_N = variants {mkN "concepção" ; mkN "ideia" ; mkN "intenção" ; mkN "plano" ; mkN "planos" ; mkN "programa" ; mkN "programação" ; mkN "projecto" ; mkN "projeto" ; mkN "traçado" ; } ; --*
lin program_1_V2 = mkV2 (mkV "programar") ; --*
lin program_2_N = mkN "programa" ; --*
lin program_2_V2 = mkV2 (mkV "programar") ; --*
lin program_3_N = variants {mkN "emissão" ; mkN "programa" ; } ; --*
lin program_5_N = mkN "programa" ; --*
lin program_6_N = variants {mkN "curricula" ; mkN "currículo" ; mkN "ementa" ; mkN "matéria" ; mkN "of" ; mkN "programa" ; } ; --*
lin program_7_N = variants {mkN "program" ; mkN "programa" ; mkN "programas" ; mkN "programme" ; } ; --*
lin programme_1_N = mkN "programa" ; --*
lin programme_1_V2 = mkV2 (mkV "programar") ; --*
lin programme_2_N = variants {mkN "curricula" ; mkN "currículo" ; mkN "ementa" ; mkN "matéria" ; mkN "of" ; mkN "programa" ; } ; --*
lin programme_2_V2 = mkV2 (mkV "programar") ; --*
lin programme_3_N = variants {mkN "emissão" ; mkN "programa" ; } ; --*
lin programme_4_N = variants {mkN "program" ; mkN "programa" ; mkN "programas" ; mkN "programme" ; } ; --*
lin programme_5_N = mkN "programa" ; --*
lin programme_6_N = variants {mkN "concepção" ; mkN "ideia" ; mkN "intenção" ; mkN "plano" ; mkN "planos" ; mkN "programa" ; mkN "programação" ; mkN "projecto" ; mkN "projeto" ; mkN "traçado" ; } ; --*
lin programmerFem_N = variants {mkN "engineer" ; mkN "programador" ; mkN "programadora" ; mkN "programmer" ; } ; --*
lin programmerMasc_N = variants {mkN "engineer" ; mkN "programador" ; mkN "programadora" ; mkN "programmer" ; } ; --*
lin programming_1_N = mkN "programação" ; --*
lin programming_2_N = variants {mkN "programação" ; mkN "programing" ; mkN "programming" ; } ; --*
lin progress_1_N = mkN "progresso" ; --*
lin progress_1_V = variants {mkV "along" ; mkV "avançar" ; mkV "on" ; mkV "progredir" ; mkV "up" ; } ; --*
lin progress_2_N = variants {mkN "avanço" ; mkN "motion" ; mkN "progressão" ; } ; --*
lin progress_2_V = variants {mkV "ganhar" ; mkV "on" ; } ; --*
lin progress_3_N = variants {mkN "avanço" ; mkN "progressão" ; mkN "progresso" ; } ; --*
lin progress_3_V = variants {mkV "desenvolver" ; mkV "up" ; } ; --*
lin progression_1_N = variants {mkN "advance" ; mkN "progressão" ; } ; --*
lin progression_2_N = variants {mkN "avanço" ; mkN "progressão" ; mkN "progresso" ; } ; --*
lin progression_3_N = variants {mkN "avanço" ; mkN "motion" ; mkN "progressão" ; } ; --*
lin progressive_1_A = mkA "progressivo" ; --*
lin progressive_1_N = variants {mkN "imperfeito" ; mkN "tense" ; } ; --*
lin progressive_2_A = variants {mkA "progresista" ; mkA "progressista" ; } ; --*
lin progressive_3_A = mkA "progressivo" ; --*
lin progressive_6_A = mkA "progressivo" ; --*
lin progressivism_N = mkN "progressismo" ; --*
lin prohibition_2_N = variants {mkN "interdição" ; mkN "proibição" ; mkN "proibições" ; } ; --*
lin prohibition_3_N = variants {mkN "era" ; mkN "lei" ; } ; --*
lin prohibitive_A = variants {mkA "impeditivo" ; mkA "proibitivo" ; } ; --*
lin prohibitory_A = variants {mkA "impeditivo" ; mkA "proibitivo" ; } ; --*
lin prohibit_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin project_12_V2 = variants {mkV2 (mkV "externalizar") ; mkV2 (mkV "projetar") ; } ; --*
lin project_12_V2V = variants {mkV2V (mkV "externalizar") ; mkV2V (mkV "projetar") ; } ; --*
lin project_12_V = variants {mkV "externalizar" ; mkV "projetar" ; } ; --*
lin project_12_VS = variants {mkVS (mkV "externalizar") ; mkVS (mkV "projetar") ; } ; --*
lin project_1_N = variants {mkN "projeto" ; mkN "tarefa" ; } ; --*
lin project_2_N = variants {mkN "desenho" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin project_2_V = variants {mkV "out" ; mkV "projectar-se" ; } ; --*
lin project_4_V2 = variants {mkV2 (mkV "projectar") ; mkV2 (mkV "tencionar") ; } ; --*
lin project_7_V2 = variants {mkV2 (mkV "arquitetar") ; mkV2 (mkV "inventar") ; mkV2 (mkV "planear") ; mkV2 (mkV "planejar") ; mkV2 (mkV "projetar") ; } ; --*
lin project_8_V = mkV "propor" ; --*
lin project_9_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin projectile_1_N = variants {mkN "míssil" ; mkN "Projéctil" ; mkN "projétil" ; } ; --*
lin projectile_2_N = variants {mkN "foguete" ; mkN "Foguete" ; mkN "Foguetes" ; mkN "rojão" ; } ; --*
lin projection_10_N = variants {mkN "ejeção" ; mkN "expulsão" ; mkN "out" ; } ; --*
lin projection_1_N = mkN "previsão" ; --*
lin projection_2_N = mkN "projeção" ; --*
lin projection_3_N = variants {mkN "desenho" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin projection_4_N = mkN "projeção" ; --*
lin projection_8_N = variants {mkN "projeção" ; mkN "projecção" ; } ; --*
lin projector_1_N = mkN "projector" ; --*
lin prokaryote_1_N = variants {mkN "procarionte" ; mkN "Procariontes" ; mkN "procariotas" ; } ; --*
lin prolactin_N = variants {mkN "hormone" ; mkN "Prolactina" ; } ; --*
lin prolapse_1_N = mkN "prolapso" ; --*
lin prolate_2_A = variants {mkA "elíptico" ; mkA "oval" ; mkA "ovalado" ; mkA "ovóide" ; } ; --*
lin prole_N = variants {mkN "colarinho" ; mkN "operário" ; mkN "proletário" ; mkN "trabalhador" ; } ; --*
lin proletarian_N = variants {mkN "colarinho" ; mkN "operário" ; mkN "proletário" ; mkN "trabalhador" ; } ; --*
lin proletariat_N = variants {mkN "class" ; mkN "Classe" ; mkN "daràluz" ; mkN "proletariado" ; } ; --*
lin proliferate_V = mkV "proliferar" ; --*
lin proliferation_1_N = mkN "proliferação" ; --*
lin proliferation_2_N = mkN "proliferação" ; --*
lin prolific_1_A = variants {mkA "fecundo" ; mkA "fértil" ; mkA "prolífico" ; } ; --*
lin prolific_2_A = variants {mkA "fértil" ; mkA "prolífico" ; } ; --*
lin proline_N = mkN "Prolina" ; --*
lin prolix_A = mkA "prolixo" ; --*
lin prolixity_N = mkN "prolixidade" ; --*
lin prologue_N = mkN "prólogo" ; --*
lin prolong_1_V2 = variants {mkV2 (mkV "extender") ; mkV2 (mkV "out") ; mkV2 (mkV "prolongar") ; } ; --*
lin prolong_2_V2 = variants {mkV2 (mkV "prolongar") ; mkV2 (mkV "up") ; } ; --*
lin prolongation_1_N = mkN "prolongamento" ; --*
lin prolongation_2_N = variants {mkN "extensão" ; mkN "longitude" ; } ; --*
lin prolongation_3_N = variants {mkN "continuação" ; mkN "prolongamento" ; } ; --*
lin prolonged_1_A = variants {mkA "comprido" ; mkA "longo" ; mkA "prolixo" ; mkA "prolongado" ; } ; --*
lin prolonged_2_A = variants {mkA "alongado" ; mkA "estendido" ; mkA "prolongado" ; } ; --*
lin promenade_2_N = mkN "passeio" ; --*
lin promenade_4_N = mkN "logradoura" ; --*
lin promenade_5_N = variants {mkN "dê" ; mkN "passeio" ; } ; --*
lin promethazine_N = mkN "Prometazina" ; --*
lin promethium_N = variants {mkN "number" ; mkN "promécio" ; } ; --*
lin prominence_1_N = variants {mkN "importância" ; mkN "protagonismo" ; } ; --*
lin prominence_2_N = variants {mkN "importância" ; mkN "proeminência" ; } ; --*
lin prominence_3_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin prominent_1_A = mkA "proeminente" ; --*
lin prominent_2_A = variants {mkA "ilustre" ; mkA "importante" ; mkA "proeminente" ; } ; --*
lin promiscuity_N = variants {mkN "around" ; mkN "promiscuidade" ; mkN "Promiscuidade" ; } ; --*
lin promiscuous_1_A = mkA "promíscuo" ; --*
lin promiscuous_2_A = variants {mkA "devasso" ; mkA "promíscuo" ; } ; --*
lin promise_1_N = mkN "promessa" ; --*
lin promise_1_V2 = mkV2 (mkV "prometer") ; --*
lin promise_2_N = mkN "esperança" ; --*
lin promise_2_V2 = mkV2 (mkV "prometer") ; --*
lin promise_3_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; mkV2 (mkV "pressentir") ; mkV2 (mkV "prever") ; mkV2 (mkV "prognosticar") ; } ; --*
lin promise_3_VS = variants {mkVS (mkV "adivinhar") ; mkVS (mkV "predizer") ; mkVS (mkV "pressentir") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin promise_VV = mkVV (mkV "prometer") ; --*
lin promo_N = variants {mkN "material" ; mkN "promoção" ; mkN "propaganda" ; mkN "publicidade" ; } ; --*
lin promontory_N = variants {mkN "cabeceiros" ; mkN "Cabo" ; mkN "Cabos" ; mkN "promontório" ; } ; --*
lin promote_1_V2 = variants {mkV2 (mkV "encorajar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "promover") ; } ; --*
lin promote_2_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "upstairs") ; } ; --*
lin promote_3_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "promover") ; mkV2 (mkV "publicitar") ; } ; --*
lin promoter_1_N = variants {mkN "apoiador" ; mkN "impulsionador" ; mkN "promotor" ; } ; --*
lin promoter_2_N = variants {mkN "divulgador" ; mkN "empresário" ; mkN "promoter" ; } ; --*
lin promotion_1_N = variants {mkN "material" ; mkN "promoção" ; mkN "propaganda" ; mkN "publicidade" ; } ; --*
lin promotion_2_N = variants {mkN "ascenção" ; mkN "promoção" ; } ; --*
lin promotion_3_N = mkN "promoção" ; --*
lin promotion_4_N = mkN "progresso" ; --*
lin prompt_1_A = variants {mkA "pontual" ; mkA "sem" ; } ; --*
lin prompt_1_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "incentivar") ; mkV2 (mkV "motivar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "provocar") ; } ; --*
lin prompt_2_A = variants {mkA "imediato" ; mkA "rápido" ; } ; --*
lin prompt_2_N = variants {mkN "linha" ; mkN "prompt" ; } ; --*
lin prompt_2_V2V = variants {mkV2V (mkV "impelir") ; mkV2V (mkV "incitar") ; mkV2V (mkV "instigar") ; } ; --*
lin prompt_3_V2 = variants {mkV2 (mkV "lembrar") ; mkV2 (mkV "soprar") ; } ; --*
lin prompt_3_V2V = variants {mkV2V (mkV "lembrar") ; mkV2V (mkV "soprar") ; } ; --*
lin prompter_1_N = variants {mkN "mais" ; mkN "prompter" ; } ; --*
lin prompting_1_N = mkN "sugestão" ; --*
lin promptness_2_N = mkN "pontualidade" ; --*
lin promulgate_1_V2 = variants {mkV2 (mkV "exclamar") ; mkV2 (mkV "proclamar") ; mkV2 (mkV "promulgar") ; mkV2 (mkV "veicular") ; } ; --*
lin promulgate_2_V2 = mkV2 (mkV "promulgar") ; --*
lin promulgation_1_N = variants {mkN "anúncio" ; mkN "aviso" ; mkN "comunicação" ; } ; --*
lin promulgation_2_N = mkN "promulgação" ; --*
lin pronation_N = mkN "pronação" ; --*
lin prone_A = mkA "propenso" ; --*
lin proneness_N = variants {mkN "inclinação" ; mkN "propensão" ; mkN "tendência" ; } ; --*
lin pronged_2_A = mkA "bifurcado" ; --*
lin pronghorn_N = variants {mkN "americana" ; mkN "antelope" ; mkN "antilocapra" ; } ; --*
lin pronominal_A = mkA "pronominal" ; --*
lin pronounce_1_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "out") ; mkV2 (mkV "pronunciar") ; } ; --*
lin pronounce_2_V2 = variants {mkV2 (mkV "julgar") ; mkV2 (mkV "pronunciar") ; mkV2 (mkV "rotular") ; } ; --*
lin pronounced_A = mkA "marcado" ; --*
lin pronoun_N = mkN "pronome" ; --*
lin pronto_Adv = mkAdv "prontamente" ; --*
lin pronunciamento_N = variants {mkN "manifesto" ; mkN "pronunciamento" ; } ; --*
lin pronunciation_1_N = mkN "pronúncia" ; --*
lin pronunciation_2_N = variants {mkN "prolação" ; mkN "Pronuncia" ; mkN "pronúncia" ; mkN "pronunciação" ; } ; --*
lin proof_1_N = variants {mkN "evidence" ; mkN "prova" ; } ; --*
lin proof_2_N = variants {mkN "Demonstrações" ; mkN "evidência" ; } ; --*
lin proof_3_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "ler") ; } ; --*
lin proof_6_N = mkN "verificação" ; --*
lin proofreader_N = mkN "revisor" ; --*
lin proofread_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "ler") ; } ; --*
lin propaedeutic_N = variants {mkN "propedêutica" ; mkN "Propedêutica" ; } ; --*
lin propaganda_N = variants {mkN "divulgação" ; mkN "propaganda" ; mkN "Propaganda" ; } ; --*
lin propagandist_N = mkN "propagandista" ; --*
lin propagandize_V2 = mkV2 (mkV "propagandear") ; --*
lin propagandize_V = mkV "propagandear" ; --*
lin propagate_2_V = mkV "propagar" ; --*
lin propagate_3_V2 = mkV2 (mkV "propagar") ; --*
lin propagate_6_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin propagate_7_V2 = mkV2 (mkV "propagar") ; --*
lin propagate_8_V = mkV "propagar" ; --*
lin propagation_1_N = mkN "propagação" ; --*
lin propagation_2_N = mkN "geração" ; --*
lin propagation_3_N = mkN "propagação" ; --*
lin propane_N = mkN "propano" ; --*
lin proparoxytone_N = mkN "proparoxítona" ; --*
lin propel_1_V2 = variants {mkV2 (mkV "impulsionar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "tocar") ; } ; --*
lin propel_2_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "incentivar") ; mkV2 (mkV "motivar") ; mkV2 (mkV "propulsar") ; mkV2 (mkV "provocar") ; } ; --*
lin propellent_A = mkA "propulsores" ; --*
lin propellent_N = mkN "propelente" ; --*
lin propeller_1_N = variants {mkN "espira" ; mkN "hélice" ; mkN "propulsor" ; } ; --*
lin propenal_N = variants {mkN "Acroleina" ; mkN "acroleína" ; } ; --*
lin propenoate_N = mkN "acrilato" ; --*
lin propensity_1_N = mkN "tendência" ; --*
lin propensity_2_N = variants {mkN "inclinação" ; mkN "tendência" ; } ; --*
lin propensity_3_N = mkN "tendência" ; --*
lin proper_1_A = variants {mkA "adequado" ; mkA "conveniente" ; mkA "próprio" ; } ; --*
lin proper_4_A = mkA "capaz" ; --*
lin property_1_N = variants {mkN "possessão" ; mkN "propriedade" ; mkN "Propriedade" ; } ; --*
lin property_2_N = mkN "atributos" ; --*
lin property_3_N = variants {mkN "campo" ; mkN "terreno" ; } ; --*
lin property_4_N = variants {mkN "atributos" ; mkN "carácter" ; mkN "qualidade" ; } ; --*
lin prophase_2_N = mkN "prófase" ; --*
lin prophecy_1_N = mkN "previsão" ; --*
lin prophecy_2_N = variants {mkN "profecia" ; mkN "Profecia" ; mkN "Profecias" ; } ; --*
lin prophesy_1_V2 = variants {mkV2 (mkV "adivinhar") ; mkV2 (mkV "predizer") ; } ; --*
lin prophesy_1_V = variants {mkV "adivinhar" ; mkV "predizer" ; } ; --*
lin prophesy_2_V2 = mkV2 (mkV "fazer") ; --*
lin prophet_1_N = variants {mkN "profeta" ; mkN "vidente" ; } ; --*
lin prophet_2_N = mkN "profeta" ; --*
lin prophetical_A = mkA "profético" ; --*
lin prophetic_A = mkA "profético" ; --*
lin prophylactic_1_A = mkA "contraceptivo" ; --*
lin prophylactic_2_N = variants {mkN "camisa-de-vênus" ; mkN "camisinha" ; mkN "preservativo" ; } ; --*
lin prophylactic_3_A = variants {mkA "preventivo" ; mkA "profilático" ; } ; --*
lin prophylaxis_N = mkN "profilaxia" ; --*
lin propinquity_N = mkN "proximidade" ; --*
lin propitiate_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "apaziguar") ; } ; --*
lin propitiation_1_N = mkN "conciliação" ; --*
lin propitiation_2_N = mkN "absolvição" ; --*
lin propitious_A = mkA "propício" ; --*
lin propjet_N = variants {mkN "plane" ; mkN "turboélice" ; } ; --*
lin proponent_N = variants {mkN "advogado" ; mkN "defensor" ; mkN "proponente" ; mkN "representante" ; } ; --*
lin proportion_1_N = mkN "proporção" ; --*
lin proportion_1_V2 = mkV2 (mkV "proporcionar") ; --*
lin proportion_2_N = variants {mkN "dimensão" ; mkN "extensão" ; mkN "magnitude" ; mkN "proporção" ; mkN "tamanho" ; } ; --*
lin proportion_2_V2 = mkV2 (mkV "proporcionar") ; --*
lin proportion_3_N = variants {mkN "proporção" ; mkN "simetria" ; mkN "Simetria" ; } ; --*
lin proportion_5_N = variants {mkN "equilíbrio" ; mkN "proporção" ; } ; --*
lin proportional_A = mkA "proporcional" ; --*
lin proportionality_1_N = variants {mkN "proporcionalidade" ; mkN "Proporcionalidade" ; } ; --*
lin proportionality_2_N = variants {mkN "equilíbrio" ; mkN "proporção" ; } ; --*
lin proportional_to_A2 = variants {mkA2 (mkA "proporcional") noPrep ; mkA2 (mkA "relativo") noPrep ; } ; --*
lin proportionate_2_A = variants {mkA "correspondente" ; mkA "proporcional" ; } ; --*
lin proportionate_3_A = variants {mkA "proporcional" ; mkA "simétrico" ; } ; --*
lin proposal_1_N = mkN "proposta" ; --*
lin proposal_2_N = variants {mkN "of" ; mkN "offer" ; mkN "proposal" ; mkN "proposta" ; } ; --*
lin proposal_3_N = mkN "proposição" ; --*
lin propose_1_VV = variants {mkVV (mkV "propor") ; mkVV (mkV "sugerir") ; } ; --*
lin propose_2_V2 = mkV2 (mkV "propor") ; --*
lin propose_3_VV = variants {mkVV (mkV "pretender") ; mkVV (mkV "propor") ; } ; --*
lin propose_4_V2 = variants {mkV2 (mkV "designar") ; mkV2 (mkV "nomear") ; mkV2 (mkV "propor") ; } ; --*
lin propose_5_VS = variants {mkVS (mkV "oneself") ; mkVS (mkV "propor") ; mkVS (mkV "the") ; } ; --*
lin proposition_1_N = mkN "proposição" ; --*
lin proposition_2_N = variants {mkN "proposição" ; mkN "proposta" ; mkN "sugestão" ; } ; --*
lin proposition_4_N = mkN "proposição" ; --*
lin proposition_V2 = mkV2 (mkV "cantar") ; --*
lin propound_V2 = mkV2 (mkV "propor") ; --*
lin proprietary_A = mkA "proprietário" ; --*
lin proprietor_N = variants {mkN "dono" ; mkN "proprietário" ; } ; --*
lin proprietorship_N = mkN "proprietário" ; --*
lin proprietress_N = mkN "proprietário" ; --*
lin proprioception_N = mkN "propriocepção" ; --*
lin props_N = mkN "respeito" ; --*
lin propulsion_1_N = mkN "propulsão" ; --*
lin propulsion_2_N = variants {mkN "impulsão" ; mkN "propulsão" ; } ; --*
lin propulsive_2_A = mkA "propulsores" ; --*
lin prop_up_V2 = variants {mkV2 (mkV "escorar") ; mkV2 (mkV "up") ; } ; --*
lin prop_V2 = variants {mkV2 (mkV "escorar") ; mkV2 (mkV "up") ; } ; --*
lin propyl_N = variants {mkN "group" ; mkN "propil" ; mkN "radical" ; } ; --*
lin prorogue_1_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin prosaic_1_A = mkA "prosaico" ; --*
lin prosaic_2_A = mkA "prosaico" ; --*
lin proscenium_1_N = mkN "proscênio" ; --*
lin prosciutto_N = mkN "prosciutto" ; --*
lin proscribe_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin proscription_1_N = variants {mkN "interdição" ; mkN "proibição" ; mkN "proibições" ; } ; --*
lin proscription_2_N = variants {mkN "banimento" ; mkN "proscrição" ; } ; --*
lin prose_1_N = mkN "prosa" ; --*
lin prosecute_1_V2 = mkV2 (mkV "agir") ; --*
lin prosecute_2_V2 = variants {mkV2 (mkV "ajuizar") ; mkV2 (mkV "processar") ; } ; --*
lin prosecute_3_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "prosseguir") ; } ; --*
lin prosecution_1_N = variants {mkN "processo" ; mkN "prosecution" ; } ; --*
lin prosecutorFem_N = variants {mkN "attorney" ; mkN "officer" ; mkN "promotor" ; mkN "prosecutor" ; } ; --*
lin prosecutorMasc_N = variants {mkN "attorney" ; mkN "officer" ; mkN "promotor" ; mkN "prosecutor" ; } ; --*
lin proselyte_N = mkN "prosélito" ; --*
lin prosimian_N = variants {mkN "Lemuriformes" ; mkN "prossímio" ; } ; --*
lin prosody_1_N = variants {mkN "prosódia" ; mkN "Prosódia" ; } ; --*
lin prospect_2_N = variants {mkN "expectativa" ; mkN "expetativa" ; } ; --*
lin prospect_3_N = variants {mkN "candidato" ; mkN "concorrente" ; } ; --*
lin prospect_4_N = variants {mkN "panorama" ; mkN "vista" ; } ; --*
lin prospect_5_N = variants {mkN "prognosis" ; mkN "prognóstico" ; } ; --*
lin prospective_A = mkA "prospectivo" ; --*
lin prospector_N = mkN "garimpeiro" ; --*
lin prospectus_2_N = variants {mkN "catalog" ; mkN "catalogue" ; mkN "prospecto" ; } ; --*
lin prosperity_1_N = mkN "prosperidade" ; --*
lin prosperity_2_N = variants {mkN "prosperidade" ; mkN "sucesso" ; } ; --*
lin prosperous_2_A = variants {mkA "lucrável" ; mkA "próspero" ; mkA "viçoso" ; } ; --*
lin prosperous_4_A = variants {mkA "favorável" ; mkA "propício" ; mkA "vantajoso" ; } ; --*
lin prosper_V = variants {mkV "high" ; mkV "prosperar" ; } ; --*
lin prostaglandin_N = variants {mkN "prostaglandina" ; mkN "Prostaglandinas" ; } ; --*
lin prostatectomy_N = mkN "Prostatectomia" ; --*
lin prostate_N = variants {mkN "gland" ; mkN "próstata" ; } ; --*
lin prostatitis_N = mkN "prostatite" ; --*
lin prosthesis_N = variants {mkN "device" ; mkN "prótese" ; } ; --*
lin prosthodontics_1_N = variants {mkN "prótese" ; mkN "Prótese" ; } ; --*
lin prostitute_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin prostitute_V2 = mkV2 (mkV "prostituir") ; --*
lin prostitution_N = mkN "prostituição" ; --*
lin prostrate_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "prostar") ; } ; --*
lin prostrate_2_A = mkA "propenso" ; --*
lin prostrate_2_V2 = variants {mkV2 (mkV "derrubar") ; mkV2 (mkV "prostrar") ; } ; --*
lin prostrate_3_V2 = mkV2 (mkV "prostrar") ; --*
lin prosy_A = mkA "prosaico" ; --*
lin protactinium_1_N = variants {mkN "number" ; mkN "Protactinio" ; mkN "protactínio" ; } ; --*
lin protagonist_1_N = mkN "seguidor" ; --*
lin protagonist_2_N = mkN "protagonista" ; --*
lin protean_A = variants {mkA "extremamente" ; mkA "relativo" ; } ; --*
lin protease_1_N = variants {mkN "enzyme" ; mkN "protease" ; mkN "Protease" ; } ; --*
lin protect_1_V2 = variants {mkV2 (mkV "defender") ; mkV2 (mkV "proteger") ; } ; --*
lin protected_1_A = mkA "protegido" ; --*
lin protected_2_A = mkA "protegido" ; --*
lin protection_1_N = variants {mkN "proteção" ; mkN "protecção" ; } ; --*
lin protection_2_N = variants {mkN "cover" ; mkN "covering" ; mkN "fronha" ; } ; --*
lin protection_3_N = mkN "seguro" ; --*
lin protection_4_N = variants {mkN "abrigo" ; mkN "proteção" ; } ; --*
lin protection_5_N = variants {mkN "auspício" ; mkN "cuidado" ; } ; --*
lin protection_7_N = mkN "tributo" ; --*
lin protectionism_N = mkN "protecionismo" ; --*
lin protectionistFem_N = mkN "protecionista" ; --*
lin protectionistMasc_N = mkN "protecionista" ; --*
lin protective_1_A = mkA "proteccionista" ; --*
lin protective_2_A = mkA "protector" ; --*
lin protectorate_N = variants {mkN "Antigos" ; mkN "Protectorado" ; mkN "protetorado" ; mkN "state" ; } ; --*
lin protector_N = variants {mkN "defensor" ; mkN "guarda" ; mkN "guardião" ; mkN "protetor" ; mkN "tutor" ; } ; --*
lin protectorship_N = mkN "protetorado" ; --*
lin protein_N = variants {mkN "Proteina" ; mkN "proteína" ; mkN "proteínas" ; mkN "Proteínas" ; } ; --*
lin proteome_N = mkN "proteoma" ; --*
lin proteomics_N = variants {mkN "Proteómica" ; mkN "Proteômica" ; } ; --*
lin protest_1_N = mkN "protesto" ; --*
lin protest_1_V2 = variants {mkV2 (mkV "protestar") ; mkV2 (mkV "queixar-se") ; } ; --*
lin protest_1_V = variants {mkV "protestar" ; mkV "queixar-se" ; } ; --*
lin protest_2_N = mkN "protesto" ; --*
lin protest_2_V = mkV "protestar" ; --*
lin protest_3_V2 = mkV2 (mkV "protestar") ; --*
lin protestant_1_N = mkN "protestante" ; --*
lin protestantism_N = variants {mkN "protestantismo" ; mkN "Protestantismo" ; } ; --*
lin protestation_1_N = mkN "protesto" ; --*
lin protester_1_N = variants {mkN "dissidência" ; mkN "dissidente" ; } ; --*
lin protester_2_N = mkN "manifestante" ; --*
lin prothrombin_N = variants {mkN "II" ; mkN "protrombina" ; } ; --*
lin protist_1_N = mkN "protista" ; --*
lin protocol_1_N = variants {mkN "protocol" ; mkN "protocolo" ; } ; --*
lin protocol_2_N = mkN "protocolo" ; --*
lin protocol_3_N = variants {mkN "protocolo" ; mkN "Protocolos" ; } ; --*
lin protoctist_N = variants {mkN "protoctista" ; mkN "prototista" ; } ; --*
lin protohistory_N = variants {mkN "Proto-história" ; mkN "Proto-História" ; } ; --*
lin proton_N = variants {mkN "protão" ; mkN "próton" ; } ; --*
lin protoplasm_N = variants {mkN "protoplasma" ; mkN "Proto-Plasma" ; mkN "substance" ; } ; --*
lin prototype_N = variants {mkN "Prototipo" ; mkN "protótipo" ; mkN "Protótipo" ; } ; --*
lin protozoan_1_N = mkN "protozoário" ; --*
lin protraction_1_N = variants {mkN "continuação" ; mkN "prolongamento" ; } ; --*
lin protraction_2_N = mkN "prolongamento" ; --*
lin protractor_N = variants {mkN "transferidor" ; mkN "Transferidor" ; } ; --*
lin protract_V2 = variants {mkV2 (mkV "extender") ; mkV2 (mkV "out") ; mkV2 (mkV "prolongar") ; } ; --*
lin protrude_1_V = variants {mkV "out" ; mkV "projectar-se" ; } ; --*
lin protrusion_1_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin protuberance_1_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin proud_1_A = mkA "orgulhoso" ; --*
lin provable_A = mkA "demonstrável" ; --*
lin prove_1_VV = variants {mkVV (mkV "fazer") ; mkVV (mkV "out") ; mkVV (mkV "provar") ; mkVV (mkV "up") ; } ; --*
lin prove_2_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "validar") ; } ; --*
lin prove_3_V = variants {mkV "atestar" ; mkV "provar" ; mkV "witness" ; } ; --*
lin prove_3_VS = variants {mkVS (mkV "atestar") ; mkVS (mkV "provar") ; mkVS (mkV "witness") ; } ; --*
lin prove_4_V2 = mkV2 (mkV "provar") ; --*
lin prove_4_VA = mkVA (mkV "provar") ; --*
lin prove_4_V = mkV "provar" ; --*
lin prove_4_VS = mkVS (mkV "provar") ; --*
lin prove_5_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "out") ; mkV2 (mkV "tentar") ; } ; --*
lin prove_6_V = variants {mkV "aumentar" ; mkV "subir" ; } ; --*
lin prove_7_V2 = mkV2 (mkV "levantar") ; --*
lin prove_7_VA = mkVA (mkV "levantar") ; --*
lin prove_7_V = mkV "levantar" ; --*
lin prove_7_VS = mkVS (mkV "levantar") ; --*
lin provenance_1_N = variants {mkN "berço" ; mkN "of" ; mkN "origem" ; mkN "procedência" ; mkN "proveniência" ; } ; --*
lin provencal_A = mkA "provençal" ; --*
lin provender_1_N = variants {mkN "alimento" ; mkN "rações" ; } ; --*
lin provender_2_N = variants {mkN "alimento" ; mkN "alimentos" ; mkN "comida" ; mkN "delegacia" ; mkN "produtos" ; } ; --*
lin proverbial_1_A = mkA "proverbial" ; --*
lin proverbial_2_A = mkA "proverbial" ; --*
lin proverb_N = variants {mkN "adágio" ; mkN "aforismo" ; mkN "ditado" ; mkN "Ditado" ; mkN "provérbio" ; mkN "Provérbios" ; } ; --*
lin provide_1_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "suprir") ; } ; --*
lin provide_2_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "provisionar") ; mkV2 (mkV "servir") ; } ; --*
lin provide_3_V = variants {mkV "determinar" ; mkV "prover" ; } ; --*
lin provide_4_V2 = variants {mkV2 (mkV "oferecer") ; mkV2 (mkV "up") ; } ; --*
lin provide_6_V2 = variants {mkV2 (mkV "home") ; mkV2 (mkV "prover") ; } ; --*
lin provide_7_V = variants {mkV "preparar" ; mkV "providenciar" ; } ; --*
lin provide_for_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "for") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "permitir") ; } ; --*
lin providence_2_N = mkN "providência" ; --*
lin providence_PN = variants {mkPN "of" ; mkPN "Providence" ; } ; --*
lin providential_3_A = mkA "divino" ; --*
lin provider_1_N = variants {mkN "fornecedor" ; mkN "provedor" ; } ; --*
lin province_1_N = variants {mkN "estado" ; mkN "província" ; } ; --*
lin province_2_N = variants {mkN "Provincia" ; mkN "Província" ; mkN "Províncias" ; mkN "responsabilidade" ; } ; --*
lin provincial_1_A = mkA "provincial" ; --*
lin provincial_2_A = mkA "provincial" ; --*
lin provincial_2_N = variants {mkN "camponês" ; mkN "paisano" ; } ; --*
lin provincialism_1_N = mkN "provincianismo" ; --*
lin provirus_N = mkN "Provírus" ; --*
lin provision_3_N = variants {mkN "planeamento" ; mkN "planejamento" ; mkN "Planejamento" ; } ; --*
lin provisional_1_A = variants {mkA "provisória" ; mkA "provisório" ; mkA "temporário" ; mkA "tentativo" ; } ; --*
lin provision_of_N2 = variants {mkN2 (mkN "abastecimento") noPrep ; mkN2 (mkN "fornecimento") noPrep ; } ; --*
lin provision_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "suprir") ; } ; --*
lin provitamin_N = mkN "provitamina" ; --*
lin provocation_1_N = mkN "irritação" ; --*
lin provocation_2_N = mkN "provocação" ; --*
lin provocation_3_N = mkN "provocação" ; --*
lin provoke_1_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin provoke_2_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "forth") ; mkV2 (mkV "incitar") ; mkV2 (mkV "up") ; } ; --*
lin provoke_3_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "desafiar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin provoke_4_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "assediar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "provocar") ; } ; --*
lin provoking_A = mkA "provocador" ; --*
lin prowess_N = variants {mkN "Arte" ; mkN "destreza" ; } ; --*
lin prowl_2_V2 = mkV2 (mkV "espreitar") ; --*
lin prowl_2_V = mkV "espreitar" ; --*
lin prowl_N = mkN "espreita" ; --*
lin prow_N = mkN "proa" ; --*
lin proxemics_N = mkN "proxêmica" ; --*
lin proximate_2_A = mkA "próximo" ; --*
lin proximity_1_N = mkN "proximidade" ; --*
lin proximity_2_N = mkN "proximidade" ; --*
lin proxy_1_N = variants {mkN "procurador" ; mkN "procuradora" ; mkN "representante" ; } ; --*
lin proxy_2_N = mkN "procuração" ; --*
lin prudence_1_N = mkN "prudência" ; --*
lin prudence_1_PN = mkPN "prudência" ; --*
lin prudence_2_N = mkN "prudência" ; --*
lin prudence_2_PN = mkPN "prudência" ; --*
lin prude_N = mkN "pudico" ; --*
lin prudent_A = variants {mkA "judicioso" ; mkA "prudente" ; mkA "sensato" ; } ; --*
lin prudery_N = mkN "pudor" ; --*
lin prudish_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin prune_1_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin prune_N = mkN "ameixa" ; --*
lin pruning_2_N = variants {mkN "estacas" ; mkN "muda" ; mkN "poda" ; } ; --*
lin prurience_N = variants {mkN "lasciva" ; mkN "lascívia" ; } ; --*
lin pruriency_N = variants {mkN "lasciva" ; mkN "lascívia" ; } ; --*
lin prurient_A = variants {mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; mkA "promíscuo" ; } ; --*
lin pruritus_N = mkN "prurido" ; --*
lin prussian_A = mkA "prussiano" ; --*
lin prussian_N = mkN "prussiano" ; --*
lin pry_1_V2 = variants {mkV2 (mkV "alavancar") ; mkV2 (mkV "arrombar") ; } ; --*
lin pry_2_V = variants {mkV "bisbilhotar" ; mkV "fofocar" ; mkV "xeretar" ; } ; --*
lin pry_3_V = variants {mkV "in" ; mkV "intrometer" ; mkV "intrometer-se" ; } ; --*
lin psalm_2_N = mkN "salmo" ; --*
lin psalterium_N = variants {mkN "omaso" ; mkN "stomach" ; } ; --*
lin psalter_N = variants {mkN "of" ; mkN "Saltério" ; } ; --*
lin psaltery_N = mkN "dulcimer" ; --*
lin pseud_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin pseudobulb_N = mkN "pseudobulbo" ; --*
lin pseudohermaphroditism_N = mkN "pseudo-hermafroditismo" ; --*
lin pseudo_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin pseudonym_N = variants {mkN "de" ; mkN "pseudónimo" ; mkN "Pseudónimo" ; mkN "pseudônimo" ; } ; --*
lin psi_1_N = variants {mkN "per" ; mkN "psi" ; } ; --*
lin psi_2_N = mkN "psi" ; --*
lin psittacosis_2_N = variants {mkN "fever" ; mkN "Ornitose" ; } ; --*
lin psoriasis_N = variants {mkN "psoríase" ; mkN "psoriasis" ; } ; --*
lin psyche_1_N = variants {mkN "cabeça" ; mkN "mente" ; mkN "psique" ; } ; --*
lin psyche_2_N = variants {mkN "alma" ; mkN "psiquê" ; } ; --*
lin psychedelic_1_A = mkA "psicadélico" ; --*
lin psychedelic_2_A = mkA "psicadélico" ; --*
lin psychedelic_3_A = mkA "psicadélico" ; --*
lin psychiatrist_N = variants {mkN "encolhimento" ; mkN "psiquiatra" ; } ; --*
lin psychiatry_N = variants {mkN "medicine" ; mkN "psicopatologia" ; mkN "psiquiatria" ; } ; --*
lin psychic_1_A = variants {mkA "parapsíquico" ; mkA "psíquico" ; } ; --*
lin psychic_2_A = mkA "psíquico" ; --*
lin psychical_1_A = variants {mkA "parapsíquico" ; mkA "psíquico" ; } ; --*
lin psychical_2_A = mkA "psíquico" ; --*
lin psychic_N = variants {mkN "médium" ; mkN "sensitivo" ; } ; --*
lin psychoactive_A = mkA "psicotrópico" ; --*
lin psychoanalyse_V2 = mkV2 (mkV "analisar") ; --*
lin psychoanalysis_N = variants {mkN "psicanálise" ; mkN "psychology" ; } ; --*
lin psychoanalyst_N = mkN "psicanalista" ; --*
lin psychoanalyze_V2 = mkV2 (mkV "analisar") ; --*
lin psychodynamics_2_N = mkN "psicodinâmica" ; --*
lin psycholinguistics_N = variants {mkN "Psicolinguística" ; mkN "Psicolingüística" ; } ; --*
lin psychological_1_A = mkA "psicológico" ; --*
lin psychological_2_A = mkA "psicológico" ; --*
lin psychologist_N = mkN "psicólogo" ; --*
lin psychology_N = variants {mkN "psicologia" ; mkN "science" ; } ; --*
lin psychometry_N = variants {mkN "psicometria" ; mkN "Psicometria" ; } ; --*
lin psychopomp_N = mkN "Psicopompo" ; --*
lin psychosis_N = mkN "psicose" ; --*
lin psychosurgery_N = mkN "psicocirurgia" ; --*
lin psychotherapy_1_N = variants {mkN "hygiene" ; mkN "psicoterapia" ; } ; --*
lin psychotherapy_2_N = variants {mkN "psicoterapia" ; mkN "Psicoterapia" ; } ; --*
lin psychotic_N = variants {mkN "doido" ; mkN "insano" ; mkN "louco" ; mkN "person" ; mkN "psicótico" ; } ; --*
lin psychrometer_N = variants {mkN "psicrómetro" ; mkN "psicrômetro" ; } ; --*
lin psych_up_V2 = mkV2 (mkV "up") ; --*
lin pteridophyte_N = variants {mkN "plant" ; mkN "Pteridophyta" ; } ; --*
lin pterodactyl_N = mkN "pterodáctilo" ; --*
lin pterosaur_N = variants {mkN "pterossauro" ; mkN "reptile" ; } ; --*
lin pt_N = variants {mkN "number" ; mkN "platina" ; mkN "platinada" ; } ; --*
lin pubertal_A = mkA "pubescente" ; --*
lin puberty_N = mkN "puberdade" ; --*
lin pubescent_1_A = mkA "pubescente" ; --*
lin pubescent_2_A = mkA "pubescente" ; --*
lin pubic_A = mkA "púbico" ; --*
lin pubis_N = variants {mkN "bone" ; mkN "pubis" ; mkN "púbis" ; } ; --*
lin public_1_A = mkA "público" ; --*
lin public_1_N = variants {mkN "gente" ; mkN "mundo" ; mkN "povo" ; } ; --*
lin public_2_A = variants {mkA "estatal" ; mkA "público" ; } ; --*
lin public_2_N = mkN "público" ; --*
lin publication_1_N = variants {mkN "edição" ; mkN "publicação" ; } ; --*
lin publication_2_N = mkN "publicação" ; --*
lin publication_4_N = variants {mkN "publicação" ; mkN "publicitação" ; } ; --*
lin publicity_1_N = variants {mkN "material" ; mkN "promoção" ; mkN "propaganda" ; mkN "publicidade" ; } ; --*
lin publicize_2_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "divulgar") ; } ; --*
lin publish_1_V2 = variants {mkV2 (mkV "editar") ; mkV2 (mkV "publicar") ; } ; --*
lin publish_2_V2 = variants {mkV2 (mkV "lançar") ; mkV2 (mkV "out") ; mkV2 (mkV "publicar") ; } ; --*
lin publish_3_V2 = variants {mkV2 (mkV "escrever") ; mkV2 (mkV "publicar") ; } ; --*
lin publisher_1_N = variants {mkN "company" ; mkN "editora" ; mkN "firm" ; mkN "house" ; } ; --*
lin publisher_2_N = variants {mkN "editor" ; mkN "editora" ; mkN "editores" ; } ; --*
lin publishing_N = variants {mkN "publicação" ; mkN "publicitação" ; } ; --*
lin pub_N = variants {mkN "bar" ; mkN "botequim" ; mkN "house" ; mkN "mill" ; mkN "pub" ; mkN "taberna" ; } ; --*
lin puccoon_2_N = variants {mkN "canadensis" ; mkN "Sanguinaria" ; } ; --*
lin puck_2_N = variants {mkN "disco" ; mkN "puck" ; } ; --*
lin pucker_1_V2 = mkV2 (mkV "amassar") ; --*
lin puckish_A = variants {mkA "bagunceiro" ; mkA "sapeca" ; } ; --*
lin pudden_head_N = variants {mkN "estúpido" ; mkN "fish" ; mkN "head" ; mkN "idiota" ; mkN "imbecil" ; mkN "person" ; } ; --*
lin pudding_2_N = variants {mkN "pudim" ; mkN "sobremesa" ; } ; --*
lin pudding_3_N = mkN "pudim" ; --*
lin puddle_2_N = variants {mkN "charco" ; mkN "poça" ; } ; --*
lin puddle_8_V2 = variants {mkV2 (mkV "atabalhoar") ; mkV2 (mkV "confundir") ; } ; --*
lin puddle_9_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "mijar") ; mkV2 (mkV "oneself") ; mkV2 (mkV "urinar") ; mkV2 (mkV "water") ; } ; --*
lin pud_N = variants {mkN "pudim" ; mkN "sobremesa" ; } ; --*
lin puerile_2_A = mkA "juvenil" ; --*
lin puerility_1_N = variants {mkN "infância" ; mkN "Infância" ; } ; --*
lin puff_3_V = variants {mkV "bufar" ; mkV "ofegar" ; } ; --*
lin puff_4_N = variants {mkN "coberta" ; mkN "colcha" ; mkN "edredon" ; } ; --*
lin puff_4_V2 = mkV2 (mkV "inchar") ; --*
lin puff_7_V = variants {mkV "afofar" ; mkV "out" ; mkV "up" ; } ; --*
lin puffiness_1_N = variants {mkN "inchação" ; mkN "inchamento" ; mkN "turgidez" ; } ; --*
lin puffiness_2_N = mkN "fausto" ; --*
lin puffin_N = mkN "papagaio-do-mar" ; --*
lin pug_dog_N = variants {mkN "Pug" ; mkN "pug-cão" ; } ; --*
lin pugilism_N = variants {mkN "boxe" ; mkN "pugilismo" ; } ; --*
lin pugilist_N = variants {mkN "boxeador" ; mkN "boxer" ; mkN "pugilista" ; } ; --*
lin pugnacity_N = mkN "agressividade" ; --*
lin pug_nose_A = mkA "pug-nariz" ; --*
lin pug_nosed_A = mkA "pug-nariz" ; --*
lin pug_N = variants {mkN "Pug" ; mkN "pug-cão" ; } ; --*
lin puke_1_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin puke_2_N = mkN "vômito" ; --*
lin puke_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin puke_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin pulchritude_N = mkN "primor" ; --*
lin pule_V = variants {mkV "choramingar" ; mkV "gemer" ; } ; --*
lin pull_12_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "esfarrapar") ; mkV2 (mkV "rasgar") ; } ; --*
lin pull_14_V2 = mkV2 (mkV "depenar") ; --*
lin pull_15_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin pull_16_V = variants {mkV "for" ; mkV "torcer" ; } ; --*
lin pull_17_V2 = variants {mkV2 (mkV "sacar") ; mkV2 (mkV "tirar") ; } ; --*
lin pull_1_N = variants {mkN "puxão" ; mkN "tração" ; } ; --*
lin pull_1_V2 = variants {mkV2 (mkV "arredar") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin pull_2_N = mkN "atração" ; --*
lin pull_2_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "in") ; } ; --*
lin pull_3_V = mkV "puxar" ; --*
lin pull_4_V2 = mkV2 (mkV "puxar") ; --*
lin pull_5_N = mkN "torcedura" ; --*
lin pull_5_V2 = variants {mkV2 (mkV "cometer") ; mkV2 (mkV "perpetrar") ; } ; --*
lin pull_6_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin pull_8_V2 = variants {mkV2 (mkV "estirar") ; mkV2 (mkV "puxar") ; } ; --*
lin pull_9_V = mkV "forçar" ; --*
lin pull_ahead_V = variants {mkV "ahead" ; mkV "avançar" ; mkV "ganhar" ; mkV "ground" ; mkV "headway" ; } ; --*
lin pull_away_V = variants {mkV "afastar" ; mkV "afastar-se" ; mkV "away" ; mkV "back" ; mkV "recuar" ; mkV "retroceder" ; } ; --*
lin pull_back_1_V = variants {mkV "afastar" ; mkV "afastar-se" ; mkV "away" ; mkV "back" ; mkV "recuar" ; mkV "retroceder" ; } ; --*
lin pull_back_5_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "decorrer") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin pull_down_1_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin pulley_block_N = variants {mkN "block" ; mkN "polia" ; mkN "Polia" ; mkN "roldana" ; } ; --*
lin pulley_N = variants {mkN "block" ; mkN "polia" ; mkN "Polia" ; mkN "roldana" ; } ; --*
lin pull_in_1_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "in") ; } ; --*
lin pull_in_3_V = mkV "in" ; --*
lin pull_in_4_V2 = variants {mkV2 (mkV "colecionar") ; mkV2 (mkV "coletar") ; mkV2 (mkV "in") ; mkV2 (mkV "recolher") ; } ; --*
lin pull_in_4_V = variants {mkV "colecionar" ; mkV "coletar" ; mkV "in" ; mkV "recolher" ; } ; --*
lin pull_off_1_V3 = variants {mkV3 (mkV "off") ; mkV3 (mkV "tirar") ; } ; --*
lin pull_off_3_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "negociar") ; mkV2 (mkV "off") ; } ; --*
lin pull_out_3_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin pull_out_6_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin pull_out_N = mkN "retirada" ; --*
lin pullover_N = variants {mkN "camisola" ; mkN "pulôver" ; } ; --*
lin pull_through_1_V = variants {mkV "it" ; mkV "round" ; mkV "sobreviver" ; mkV "through" ; } ; --*
lin pull_together_V = variants {mkV "coletar" ; mkV "coligir" ; mkV "juntar" ; mkV "reunir" ; mkV "together" ; } ; --*
lin pullulate_1_V = variants {mkV "enxamear" ; mkV "formigar" ; mkV "pulular" ; } ; --*
lin pullulate_3_V = variants {mkV "forth" ; mkV "germinar" ; } ; --*
lin pull_up_4_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin pulmonary_A = mkA "pulmonar" ; --*
lin pulp_2_N = variants {mkN "carne" ; mkN "polpa" ; mkN "Polpa" ; } ; --*
lin pulp_4_N = variants {mkN "magazine" ; mkN "pulp" ; } ; --*
lin pulpit_N = variants {mkN "cátedra" ; mkN "estrado" ; mkN "pódio" ; mkN "púlpito" ; mkN "tribuna" ; } ; --*
lin pulque_N = mkN "pulque" ; --*
lin pulsar_N = variants {mkN "pulsar" ; mkN "Pulsares" ; } ; --*
lin pulsate_1_V = variants {mkV "palpitar" ; mkV "pulsar" ; } ; --*
lin pulsate_2_V = mkV "bater" ; --*
lin pulsation_1_N = mkN "pulsação" ; --*
lin pulsation_3_N = mkN "pulso" ; --*
lin pulse_1_N = mkN "pulsação" ; --*
lin pulse_1_V = variants {mkV "palpitar" ; mkV "pulsar" ; } ; --*
lin pulse_2_N = mkN "pulso" ; --*
lin pulse_3_N = variants {mkN "Freqüência" ; mkN "rate" ; } ; --*
lin pulverization_1_N = mkN "pó" ; --*
lin pulverization_2_N = variants {mkN "pulverização" ; mkN "trituração" ; } ; --*
lin pulverize_1_V2 = variants {mkV2 (mkV "esmiuçar") ; mkV2 (mkV "pulverizar") ; } ; --*
lin pulverize_2_V2 = variants {mkV2 (mkV "destruir") ; mkV2 (mkV "pulverizar") ; } ; --*
lin pulverize_3_V2 = mkV2 (mkV "pulverizar") ; --*
lin pulverize_3_V = mkV "pulverizar" ; --*
lin puma_N = variants {mkN "concolor" ; mkN "leão-baio" ; mkN "lion" ; mkN "onça-parda" ; mkN "pantera" ; mkN "puma" ; mkN "suçuarana" ; } ; --*
lin pumice_N = variants {mkN "pedra-pomes" ; mkN "stone" ; } ; --*
lin pumice_stone_N = variants {mkN "pedra-pomes" ; mkN "stone" ; } ; --*
lin pump_1_N = variants {mkN "bomba" ; mkN "Bomba" ; mkN "bombagem" ; mkN "bombas" ; } ; --*
lin pump_1_V2 = mkV2 (mkV "bombear") ; --*
lin pump_2_N = variants {mkN "Coraçao" ; mkN "coração" ; } ; --*
lin pump_3_V2 = mkV2 (mkV "bombear") ; --*
lin pump_3_V = mkV "bombear" ; --*
lin pump_7_V2 = mkV2 (mkV "bombear") ; --*
lin pump_7_V = mkV "bombear" ; --*
lin pumpkin_1_N = variants {mkN "Cabaceiro-amargoso" ; mkN "pepo" ; mkN "pumpkin" ; mkN "vine" ; } ; --*
lin pumpkin_2_N = variants {mkN "abóbora" ; mkN "aboboreira" ; mkN "jerimum" ; } ; --*
lin pumpkinseed_N = variants {mkN "gibbosus" ; mkN "Perca" ; mkN "Perca-sol" ; } ; --*
lin punch_1_N = variants {mkN "murro" ; mkN "ponche" ; mkN "soco" ; } ; --*
lin punch_1_V2 = mkV2 (mkV "esmurrar") ; --*
lin punch_2_N = mkN "ponche" ; --*
lin punch_3_V2 = variants {mkV2 (mkV "atravessar") ; mkV2 (mkV "furar") ; mkV2 (mkV "perfurar") ; } ; --*
lin puncher_1_N = variants {mkN "boiadeiro" ; mkN "cowboy" ; mkN "vaqueiro" ; } ; --*
lin punch_up_N = mkN "pancadaria" ; --*
lin punctilious_A = variants {mkA "meticulosa" ; mkA "meticuloso" ; } ; --*
lin punctual_A = mkA "pontual" ; --*
lin punctuality_N = mkN "pontualidade" ; --*
lin punctuate_1_V2 = variants {mkV2 (mkV "marcar") ; mkV2 (mkV "pontuar") ; } ; --*
lin punctuate_2_V2 = variants {mkV2 (mkV "acentuar") ; mkV2 (mkV "enfatizar") ; mkV2 (mkV "pontuar") ; } ; --*
lin punctuation_3_N = variants {mkN "pontuação" ; mkN "Pontuação" ; } ; --*
lin puncture_1_V2 = variants {mkV2 (mkV "puncionar") ; mkV2 (mkV "puncturar") ; } ; --*
lin puncture_2_N = variants {mkN "perfurar" ; mkN "punção" ; mkN "punctura" ; } ; --*
lin puncture_2_V2 = variants {mkV2 (mkV "furar") ; mkV2 (mkV "puncturar") ; } ; --*
lin puncture_3_V2 = variants {mkV2 (mkV "deflacionar") ; mkV2 (mkV "desinchar") ; } ; --*
lin puncture_4_V2 = variants {mkV2 (mkV "furar") ; mkV2 (mkV "puncturar") ; } ; --*
lin puncture_5_V = variants {mkV "furar" ; mkV "puncturar" ; } ; --*
lin pungent_1_A = mkA "acre" ; --*
lin punic_1_A = variants {mkA "cartaginense" ; mkA "cartaginês" ; mkA "elisseu" ; mkA "pênico" ; mkA "púnico" ; } ; --*
lin punic_2_A = variants {mkA "perfido" ; mkA "pérfido" ; mkA "traiçoeiro" ; } ; --*
lin punishable_1_A = variants {mkA "passível" ; mkA "punível" ; } ; --*
lin punishable_2_A = mkA "penal" ; --*
lin punishing_2_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin punishment_N = variants {mkN "castigo" ; mkN "penalidade" ; mkN "penalização" ; mkN "punição" ; } ; --*
lin punish_V2 = variants {mkV2 (mkV "castigar") ; mkV2 (mkV "penalizar") ; mkV2 (mkV "punir") ; } ; --*
lin punitive_A = mkA "punitivo" ; --*
lin punk_1_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin punk_3_N = mkN "esporra" ; --*
lin punk_4_N = variants {mkN "Punk" ; mkN "rocker" ; } ; --*
lin punk_5_N = variants {mkN "Punk" ; mkN "rock" ; } ; --*
lin pun_N = variants {mkN "calembur" ; mkN "paranomásia" ; mkN "Paranomásia" ; mkN "trocadilho" ; } ; --*
lin punt_1_N = variants {mkN "Libra" ; mkN "pound" ; mkN "punt" ; } ; --*
lin punt_3_V = variants {mkV "apostar" ; mkV "on" ; } ; --*
lin punter_2_N = mkN "punter" ; --*
lin pup_1_N = mkN "filhote" ; --*
lin pupa_N = variants {mkN "crisálida" ; mkN "pupa" ; } ; --*
lin pupil_1_N = variants {mkN "acadêmico" ; mkN "aluno" ; mkN "estudante" ; mkN "pupila" ; mkN "pupilo" ; } ; --*
lin pupil_2_N = mkN "pupila" ; --*
lin pupil_3_N = variants {mkN "aluno" ; mkN "child" ; mkN "pupilo" ; } ; --*
lin puppet_1_N = variants {mkN "fantoche" ; mkN "marioneta" ; mkN "marionete" ; } ; --*
lin puppet_3_N = variants {mkN "boneca" ; mkN "boneco" ; mkN "fantoche" ; mkN "títere" ; } ; --*
lin puppeteer_N = mkN "Titeriteiro" ; --*
lin puppetry_2_N = variants {mkN "teatro" ; mkN "Teatro" ; } ; --*
lin puppy_1_N = mkN "filhote" ; --*
lin purblind_2_A = mkA "obtuso" ; --*
lin purchasable_1_A = variants {mkA "corruptível" ; mkA "desonesto" ; mkA "venal" ; } ; --*
lin purchasable_2_A = variants {mkA "adquirível" ; mkA "sale" ; } ; --*
lin purchase_1_N = variants {mkN "aquisição" ; mkN "coisacomprada" ; mkN "compra" ; } ; --*
lin purchase_2_N = variants {mkN "aquisição" ; mkN "compra" ; } ; --*
lin purchaser_N = variants {mkN "comprador" ; mkN "freguês" ; } ; --*
lin purchase_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "comprar") ; mkV2 (mkV "obter") ; } ; --*
lin purdah_1_N = mkN "solidão" ; --*
lin pure_1_A = variants {mkA "castiço" ; mkA "puro" ; } ; --*
lin pure_3_A = mkA "puro" ; --*
lin pure_4_A = mkA "puro" ; --*
lin pure_6_A = mkA "puro" ; --*
lin pure_7_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin pureness_2_N = mkN "pureza" ; --*
lin purgation_1_N = mkN "catarse" ; --*
lin purgative_N = mkN "laxante" ; --*
lin purgatory_1_N = variants {mkN "Purgatorio" ; mkN "purgatório" ; } ; --*
lin purgatory_2_N = mkN "purgatório" ; --*
lin purge_2_V2 = mkV2 (mkV "purgar") ; --*
lin purge_3_N = mkN "expurgo" ; --*
lin purge_3_V2 = mkV2 (mkV "purificar") ; --*
lin purge_4_V2 = variants {mkV2 (mkV "depurar") ; mkV2 (mkV "purgar") ; mkV2 (mkV "purificar") ; } ; --*
lin purge_6_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin purification_1_N = variants {mkN "depuração" ; mkN "purificação" ; } ; --*
lin purification_2_N = mkN "refinação" ; --*
lin purifier_N = mkN "depurador" ; --*
lin purify_1_V2 = variants {mkV2 (mkV "destilar") ; mkV2 (mkV "pure") ; mkV2 (mkV "purificar") ; mkV2 (mkV "sublimar") ; } ; --*
lin purify_2_V2 = mkV2 (mkV "purificar") ; --*
lin purify_3_V2 = mkV2 (mkV "purificar") ; --*
lin purifying_2_A = mkA "purificador" ; --*
lin purine_2_N = variants {mkN "purina" ; mkN "Purinas" ; } ; --*
lin puritan_2_N = mkN "puritano" ; --*
lin puritan_3_N = mkN "pudico" ; --*
lin puritanical_1_A = mkA "puritânico" ; --*
lin puritanical_2_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin puritanical_3_A = mkA "puritânico" ; --*
lin puritanism_1_N = mkN "puritanismo" ; --*
lin puritanism_2_N = mkN "puritanismo" ; --*
lin purity_2_N = mkN "pureza" ; --*
lin purl_1_V2 = mkV2 (mkV "redemoinhar") ; --*
lin purl_1_V = mkV "redemoinhar" ; --*
lin purloin_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin purple_1_A = variants {mkA "lilás" ; mkA "púrpura" ; mkA "purpúreo" ; mkA "roxo" ; mkA "violeta" ; } ; --*
lin purple_1_N = variants {mkN "púrpura" ; mkN "roxo" ; mkN "violeta" ; } ; --*
lin purple_3_A = variants {mkA "imperial" ; mkA "real" ; } ; --*
lin purplish_A = variants {mkA "lilás" ; mkA "púrpura" ; mkA "purpúreo" ; mkA "roxo" ; mkA "violeta" ; } ; --*
lin purport_1_N = variants {mkN "intenção" ; mkN "significado" ; } ; --*
lin purport_1_V2 = mkV2 (mkV "pretender") ; --*
lin purport_2_V2 = variants {mkV2 (mkV "pretender") ; mkV2 (mkV "propor") ; } ; --*
lin purportedly_Adv = variants {mkAdv "pretensamente" ; mkAdv "supostamente" ; } ; --*
lin purpose_1_N = variants {mkN "finalidade" ; mkN "intenção" ; mkN "intento" ; mkN "objectivo" ; mkN "objetivo" ; mkN "propósito" ; } ; --*
lin purpose_1_V2 = variants {mkV2 (mkV "pretender") ; mkV2 (mkV "propor") ; } ; --*
lin purpose_2_N = variants {mkN "função" ; mkN "propósito" ; } ; --*
lin purpose_2_V2 = variants {mkV2 (mkV "decidir") ; mkV2 (mkV "propor-se") ; mkV2 (mkV "resolver") ; } ; --*
lin purpose_3_N = variants {mkN "determinação" ; mkN "resolução" ; } ; --*
lin purposeless_2_A = mkA "vão" ; --*
lin purposely_Adv = variants {mkAdv "choice" ; mkAdv "deliberadamente" ; mkAdv "design" ; mkAdv "intencionalmente" ; mkAdv "nomeadamente" ; mkAdv "por" ; mkAdv "purpose" ; } ; --*
lin purpura_N = mkN "Púrpura" ; --*
lin purr_1_V = mkV "ronronar" ; --*
lin purr_2_V2 = variants {mkV2 (mkV "ronronar") ; mkV2 (mkV "vibrant") ; } ; --*
lin purr_2_V = variants {mkV "ronronar" ; mkV "vibrant" ; } ; --*
lin purr_2_VS = variants {mkVS (mkV "ronronar") ; mkVS (mkV "vibrant") ; } ; --*
lin purr_N = variants {mkN "ronrom" ; mkN "ronrono" ; } ; --*
lin purse_1_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin purse_2_V2 = mkV2 (mkV "franzir") ; --*
lin purse_3_N = variants {mkN "bolsa" ; mkN "carteira" ; } ; --*
lin purser_N = mkN "Comissário" ; --*
lin pursuance_1_N = variants {mkN "busca" ; mkN "procura" ; } ; --*
lin pursuant_to_A2 = mkA2 (mkA "em") noPrep ; --*
lin pursue_1_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "prosseguir") ; } ; --*
lin pursue_2_V = mkV "perseguir" ; --*
lin pursue_3_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "for") ; mkV2 (mkV "procurar") ; } ; --*
lin pursuer_2_N = mkN "perseguidor" ; --*
lin pursuit_1_N = variants {mkN "caçada" ; mkN "perseguição" ; } ; --*
lin pursuit_2_N = variants {mkN "busca" ; mkN "procura" ; } ; --*
lin pursuit_3_N = variants {mkN "activity" ; mkN "hobby" ; mkN "passatempo" ; mkN "Passa-tempo" ; mkN "Passatempos" ; } ; --*
lin pursuit_4_N = variants {mkN "entreterimento" ; mkN "jogo" ; mkN "passatempo" ; } ; --*
lin purulence_2_N = mkN "pus" ; --*
lin purulent_A = variants {mkA "com" ; mkA "purulento" ; } ; --*
lin purvey_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "suprir") ; } ; --*
lin purvey_V = variants {mkV "abastecer" ; mkV "fornecer" ; mkV "suprir" ; } ; --*
lin purview_N = variants {mkN "âmbito" ; mkN "horizonte" ; } ; --*
lin pus_1_N = mkN "Pansa" ; --*
lin pus_2_N = mkN "pus" ; --*
lin push_10_V = mkV "empurrar" ; --*
lin push_1_N = variants {mkN "empurrão" ; mkN "impulsão" ; mkN "impulso" ; } ; --*
lin push_1_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "forçar") ; } ; --*
lin push_2_N = mkN "Empuxo" ; --*
lin push_3_N = mkN "energia" ; --*
lin push_3_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "promover") ; mkV2 (mkV "publicitar") ; } ; --*
lin push_4_N = variants {mkN "botão" ; mkN "button" ; } ; --*
lin push_4_V = variants {mkV "esforçar" ; mkV "esforçar-se" ; mkV "pressionar" ; } ; --*
lin push_5_N = mkN "empurrão" ; --*
lin push_5_V2 = mkV2 (mkV "empurrar") ; --*
lin push_6_V2 = mkV2 (mkV "chegar") ; --*
lin push_7_V = variants {mkV "advogar" ; mkV "agitar" ; mkV "fazer" ; mkV "lutar" ; } ; --*
lin push_bike_N = mkN "bicicleta" ; --*
lin pushcart_N = mkN "carrinho" ; --*
lin pushchair_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin pusher_2_N = variants {mkN "dealer" ; mkN "peddler" ; mkN "trafficker" ; mkN "traficante" ; } ; --*
lin pusher_5_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin pushful_A = mkA "agressivo" ; --*
lin pushover_1_N = mkN "influenciável" ; --*
lin pushover_2_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin pushup_N = mkN "Flexão" ; --*
lin pusillanimity_N = mkN "pusilanimidade" ; --*
lin pusillanimous_A = mkA "pusilânime" ; --*
lin puss_1_N = variants {mkN "boceta" ; mkN "buceta" ; mkN "conas" ; mkN "rata" ; mkN "vagina" ; mkN "xana" ; mkN "xavasca" ; mkN "xoxota" ; } ; --*
lin puss_2_N = variants {mkN "gatinho" ; mkN "gato" ; } ; --*
lin pussy_1_N = variants {mkN "boceta" ; mkN "buceta" ; mkN "conas" ; mkN "rata" ; mkN "vagina" ; mkN "xana" ; mkN "xavasca" ; mkN "xoxota" ; } ; --*
lin pussy_2_N = variants {mkN "gatinho" ; mkN "gato" ; } ; --*
lin pussycat_2_N = variants {mkN "gatinho" ; mkN "gato" ; } ; --*
lin pussyfoot_V = variants {mkV "esgueirar" ; mkV "ir" ; } ; --*
lin pustule_N = mkN "pústula" ; --*
lin put_1_V2 = variants {mkV2 (mkV "botar") ; mkV2 (mkV "carregar") ; mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin put_3_V2 = mkV2 (mkV "formular") ; --*
lin put_4_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "por") ; } ; --*
lin put_5_V2 = mkV2 (mkV "investir") ; --*
lin put_6_V2 = mkV2 (mkV "estimar") ; --*
lin put_9_V2 = variants {mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin put_across_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "along") ; mkV2 (mkV "comunicar") ; mkV2 (mkV "on") ; mkV2 (mkV "transmitir") ; } ; --*
lin putamen_N = variants {mkN "putâmen" ; mkN "Putâmen" ; } ; --*
lin putative_A = mkA "putativo" ; --*
lin put_away_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin put_away_3_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin put_away_4_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; } ; --*
lin put_away_5_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "to") ; } ; --*
lin put_away_5_V = variants {mkV "away" ; mkV "to" ; } ; --*
lin put_away_6_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "in") ; } ; --*
lin put_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "repor") ; } ; --*
lin put_down_1_V2 = mkV2 (mkV "down") ; --*
lin put_down_2_V2 = variants {mkV2 (mkV "deitar") ; mkV2 (mkV "down") ; mkV2 (mkV "pôr") ; } ; --*
lin put_down_3_V2 = variants {mkV2 (mkV "aterrar") ; mkV2 (mkV "down") ; } ; --*
lin put_down_4_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "degradar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin put_down_7_V2 = mkV2 (mkV "down") ; --*
lin put_down_7_V = mkV "down" ; --*
lin put_down_8_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "registar") ; mkV2 (mkV "registrar") ; } ; --*
lin put_in_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inserir") ; mkV2 (mkV "introduzir") ; } ; --*
lin put_in_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "guardar") ; mkV2 (mkV "in") ; } ; --*
lin put_in_4_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "in") ; mkV2 (mkV "instalar") ; mkV2 (mkV "up") ; } ; --*
lin put_in_6_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "interpor") ; } ; --*
lin put_off_1_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin put_off_2_V2 = mkV2 (mkV "off") ; --*
lin put_off_2_V = mkV "off" ; --*
lin put_off_3_V2 = variants {mkV2 (mkV "desentusiasmar") ; mkV2 (mkV "esmorecer") ; mkV2 (mkV "off") ; mkV2 (mkV "tirar") ; } ; --*
lin put_off_3_V = variants {mkV "desentusiasmar" ; mkV "esmorecer" ; mkV "off" ; mkV "tirar" ; } ; --*
lin put_off_4_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "disconcertar") ; mkV2 (mkV "off") ; } ; --*
lin put_off_5_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin put_on_1_N = mkN "paródia" ; --*
lin put_on_1_V2 = variants {mkV2 (mkV "caber") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "pôr") ; mkV2 (mkV "usar") ; mkV2 (mkV "vestir") ; } ; --*
lin put_on_2_N = variants {mkN "fraude" ; mkN "hoax" ; mkN "trote" ; } ; --*
lin put_on_3_N = variants {mkN "gozação" ; mkN "sacanagem" ; mkN "travessura" ; mkN "trote" ; } ; --*
lin put_on_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "on") ; } ; --*
lin put_on_7_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "on") ; } ; --*
lin put_on_9_V2 = variants {mkV2 (mkV "engordar") ; mkV2 (mkV "on") ; } ; --*
lin put_out_10_V2 = variants {mkV2 (mkV "anestesiar") ; mkV2 (mkV "out") ; mkV2 (mkV "under") ; } ; --*
lin put_out_1_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin put_out_3_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin put_out_5_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin put_out_9_V2 = variants {mkV2 (mkV "lançar") ; mkV2 (mkV "out") ; mkV2 (mkV "publicar") ; } ; --*
lin putout_N = mkN "putout" ; --*
lin put_over_2_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin putrefaction_2_N = variants {mkN "decomposição" ; mkN "putrefação" ; } ; --*
lin putrefaction_3_N = variants {mkN "corrupção" ; mkN "depravação" ; } ; --*
lin putrefy_V = variants {mkV "apodrecer" ; mkV "gorar" ; mkV "putrefazer" ; } ; --*
lin putrescence_1_N = variants {mkN "corrupção" ; mkN "podridão" ; } ; --*
lin putridity_N = mkN "podridão" ; --*
lin putsch_N = variants {mkN "d'etat" ; mkN "golpe" ; mkN "transferência" ; } ; --*
lin putty_N = mkN "massa" ; --*
lin put_up_2_V2 = variants {mkV2 (mkV "oferecer") ; mkV2 (mkV "up") ; } ; --*
lin put_up_3_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "erigir") ; mkV2 (mkV "up") ; } ; --*
lin put_up_4_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin put_up_6_V2 = variants {mkV2 (mkV "enlatar") ; mkV2 (mkV "up") ; } ; --*
lin put_up_7_V2 = variants {mkV2 (mkV "acolher") ; mkV2 (mkV "up") ; } ; --*
lin put_up_8_V2 = variants {mkV2 (mkV "contribuir") ; mkV2 (mkV "up") ; } ; --*
lin put_up_9_V2 = variants {mkV2 (mkV "forward") ; mkV2 (mkV "propor") ; mkV2 (mkV "up") ; } ; --*
lin put_up_9_V2V = variants {mkV2V (mkV "forward") ; mkV2V (mkV "propor") ; mkV2V (mkV "up") ; } ; --*
lin put_up_9_V = variants {mkV "forward" ; mkV "propor" ; mkV "up" ; } ; --*
lin putz_1_N = variants {mkN "estúpido" ; mkN "idiota" ; } ; --*
lin putz_2_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin puzzle_1_N = variants {mkN "adivinha" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin puzzle_1_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin puzzle_2_N = mkN "quebra-cabeça" ; --*
lin puzzle_2_V2 = variants {mkV2 (mkV "perguntar") ; mkV2 (mkV "perguntar-se") ; } ; --*
lin puzzler_N = variants {mkN "adivinha" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin pyelonephritis_N = mkN "pielonefrite" ; --*
lin pygmy_1_N = mkN "pigmeu" ; --*
lin pygmy_2_N = mkN "pigmeus" ; --*
lin pylon_2_N = variants {mkN "pilão" ; mkN "pylon" ; } ; --*
lin pylorus_N = mkN "Piloro" ; --*
lin pyongyang_PN = variants {mkPN "of" ; mkPN "Pyongyang" ; } ; --*
lin pyramid_1_N = variants {mkN "Piramide" ; mkN "pirâmide" ; mkN "Pirâmide" ; } ; --*
lin pyramid_3_N = variants {mkN "of" ; mkN "pirâmide" ; mkN "Pyramid" ; } ; --*
lin pyramidal_1_A = mkA "piramidal" ; --*
lin pyre_N = variants {mkN "pira" ; mkN "pyre" ; } ; --*
lin pyretic_A = mkA "pirético" ; --*
lin pyridine_N = mkN "piridina" ; --*
lin pyrimidine_2_N = variants {mkN "pirimidina" ; mkN "Pirimidinas" ; } ; --*
lin pyrite_N = variants {mkN "gold" ; mkN "pirita" ; mkN "pyrite" ; } ; --*
lin pyroelectricity_N = mkN "piroeletricidade" ; --*
lin pyrogallol_N = variants {mkN "acid" ; mkN "Pirogalol" ; } ; --*
lin pyrogenic_2_A = mkA "ígneo" ; --*
lin pyrography_N = mkN "pirografia" ; --*
lin pyrolysis_N = variants {mkN "Pirolise" ; mkN "pirólise" ; } ; --*
lin pyromancy_N = mkN "Piromancia" ; --*
lin pyromania_N = mkN "piromania" ; --*
lin pyrometer_N = variants {mkN "pirómetro" ; mkN "pirômetro" ; } ; --*
lin pyromorphite_N = variants {mkN "lead" ; mkN "piromorfita" ; } ; --*
lin pyrophosphate_N = mkN "pirofosfato" ; --*
lin pyrotechnic_1_A = variants {mkA "pirotécnica" ; mkA "pirotécnico" ; } ; --*
lin pyrotechnic_2_A = mkA "pirotécnico" ; --*
lin pyrotechnics_2_N = variants {mkN "pirotecnia" ; mkN "Pirotecnia" ; mkN "pirotécnica" ; } ; --*
lin pyroxene_N = mkN "piroxena" ; --*
lin pyrrhotite_1_N = variants {mkN "Pirrotite" ; mkN "pyrites" ; } ; --*
lin python_1_N = mkN "pitão" ; --*
lin python_3_N = mkN "Píton" ; --*
lin pyuria_N = mkN "piúria" ; --*
lin pyxis_2_N = variants {mkN "Constelação" ; mkN "Pyxis" ; } ; --*
lin qatar_1_PN = variants {mkPN "Catar" ; mkPN "of" ; mkPN "Qatar" ; } ; --*
lin qatar_2_PN = variants {mkPN "Catar" ; mkPN "Peninsula" ; mkPN "Qatar" ; } ; --*
lin qatari_1_A = variants {mkA "catarense" ; mkA "catari" ; mkA "catariano" ; } ; --*
lin qed_PN = variants {mkPN "electrodynamics" ; mkPN "Eletrodinâmica" ; } ; --*
lin qi_1_N = variants {mkN "ki" ; mkN "KI" ; mkN "qui" ; } ; --*
lin qibla_2_N = mkN "Qibla" ; --*
lin quack_1_N = mkN "curandeiro" ; --*
lin quack_1_V = mkV "grasnar" ; --*
lin quackery_1_N = mkN "empirismo" ; --*
lin quackery_2_N = mkN "charlatanismo" ; --*
lin quack_quack_N = mkN "qua-qua" ; --*
lin quad_4_N = mkN "quadrângulo" ; --*
lin quadrangle_1_N = mkN "quadrilátero" ; --*
lin quadrangle_2_N = mkN "quadrângulo" ; --*
lin quadrangular_A = mkA "quadrangular" ; --*
lin quadrant_1_N = mkN "quadrante" ; --*
lin quadrant_2_N = mkN "quadrante" ; --*
lin quadrant_3_N = mkN "quadrante" ; --*
lin quadrant_4_N = mkN "quadrante" ; --*
lin quadrantanopia_N = mkN "Quadrantanopia" ; --*
lin quadratic_1_N = variants {mkN "equação" ; mkN "equation" ; } ; --*
lin quadratic_A = mkA "quadrático" ; --*
lin quadrennium_N = mkN "quadriênio" ; --*
lin quadric_N = variants {mkN "quádrica" ; mkN "surface" ; } ; --*
lin quadrilateral_N = mkN "quadrilátero" ; --*
lin quadrille_2_N = mkN "quadrilha" ; --*
lin quadriplegia_N = mkN "tetraplegia" ; --*
lin quadriplegic_N = variants {mkN "quadriplégico" ; mkN "tetraplégico" ; } ; --*
lin quadrivium_N = mkN "quadrivium" ; --*
lin quadrupedal_1_A = mkA "quadrúpede" ; --*
lin quadruple_1_A = mkA "quádruplo" ; --*
lin quadruple_2_A = mkA "quádruplo" ; --*
lin quadruplet_1_N = variants {mkN "4" ; mkN "Joe" ; mkN "quarteto" ; mkN "quatro" ; } ; --*
lin quadruple_V = mkV "quadruplicar" ; --*
lin quadruplicate_A = mkA "quádruplo" ; --*
lin quaestor_N = mkN "Questor" ; --*
lin quaff_V = variants {mkV "beber" ; mkV "libar" ; mkV "tomar" ; } ; --*
lin quagmire_N = mkN "pântano" ; --*
lin quai_d'orsay_1_N = mkN "d'Orsay" ; --*
lin quail_1_N = variants {mkN "codorna" ; mkN "codorniz" ; mkN "codornizes" ; } ; --*
lin quail_2_N = variants {mkN "codorna" ; mkN "codorniz" ; } ; --*
lin quail_V = mkV "recuar" ; --*
lin quake_1_V = variants {mkV "tiritar" ; mkV "tremer" ; mkV "vibrar" ; } ; --*
lin quake_2_V = mkV "tremer" ; --*
lin quake_N = variants {mkN "sismo" ; mkN "sismos" ; mkN "Sismos" ; mkN "terramoto" ; mkN "terremoto" ; mkN "Terremotos" ; mkN "tremor" ; } ; --*
lin quaker_1_N = variants {mkN "quacre" ; mkN "quaqueiro" ; mkN "quáquer" ; } ; --*
lin qualification_1_N = mkN "qualificação" ; --*
lin qualification_3_N = mkN "reservas" ; --*
lin qualified_1_A = mkA "qualificado" ; --*
lin qualified_5_A = mkA "dependente" ; --*
lin qualifier_2_N = mkN "modificador" ; --*
lin qualify_1_V2 = variants {mkV2 (mkV "qualificar") ; mkV2 (mkV "up") ; } ; --*
lin qualify_1_V = variants {mkV "qualificar" ; mkV "up" ; } ; --*
lin qualify_2_V2 = mkV2 (mkV "qualificar") ; --*
lin qualify_3_V2 = variants {mkV2 (mkV "qualificar") ; mkV2 (mkV "restringir") ; } ; --*
lin qualify_4_V2 = mkV2 (mkV "qualificar") ; --*
lin qualify_5_V2 = mkV2 (mkV "estipular") ; --*
lin qualify_6_V2 = variants {mkV2 (mkV "caracterizar") ; mkV2 (mkV "caraterizar") ; mkV2 (mkV "qualificar") ; } ; --*
lin qualify_7_V2 = variants {mkV2 (mkV "modificar") ; mkV2 (mkV "qualificar") ; } ; --*
lin qualify_7_V = variants {mkV "modificar" ; mkV "qualificar" ; } ; --*
lin qualitative_1_A = mkA "qualitativo" ; --*
lin qualitative_2_A = mkA "qualitativo" ; --*
lin quality_1_A = variants {mkA "fino" ; mkA "primordial" ; mkA "seleto" ; mkA "superior" ; } ; --*
lin quality_1_N = variants {mkN "atributos" ; mkN "qualidade" ; } ; --*
lin quality_2_N = variants {mkN "calibre" ; mkN "qualidade" ; } ; --*
lin quality_3_N = mkN "qualidade" ; --*
lin quality_4_N = variants {mkN "som" ; mkN "timbre" ; } ; --*
lin qualm_1_N = mkN "ressalva" ; --*
lin quandary_1_N = variants {mkN "apuro" ; mkN "dificuldade" ; } ; --*
lin quandary_2_N = mkN "dilema" ; --*
lin quantifiable_A = mkA "quantificável" ; --*
lin quantification_2_N = variants {mkN "Quantificacao" ; mkN "quantificação" ; } ; --*
lin quantifier_2_N = mkN "quantificador" ; --*
lin quantify_1_V2 = mkV2 (mkV "quantificar") ; --*
lin quantify_2_V2 = variants {mkV2 (mkV "mensurar") ; mkV2 (mkV "quantificar") ; } ; --*
lin quantitative_1_A = mkA "quantitativo" ; --*
lin quantitative_2_A = mkA "quantitativo" ; --*
lin quantitative_3_A = mkA "quantitativo" ; --*
lin quantity_1_N = variants {mkN "magnitude" ; mkN "medida" ; mkN "número" ; mkN "quantia" ; mkN "quantidade" ; mkN "volume" ; } ; --*
lin quantity_2_N = mkN "quantidade" ; --*
lin quantity_3_N = variants {mkN "número" ; mkN "quantidade" ; mkN "soma" ; } ; --*
lin quantization_1_N = variants {mkN "quantizacão" ; mkN "quantização" ; } ; --*
lin quantum_1_N = mkN "quantum" ; --*
lin quantum_2_N = mkN "quantum" ; --*
lin quarantine_1_N = mkN "quarentena" ; --*
lin quarantine_2_N = mkN "Quarentena" ; --*
lin quarantine_V2 = mkV2 (mkV "quarentenar") ; --*
lin quark_1_N = mkN "quark" ; --*
lin quark_2_N = variants {mkN "cheese" ; mkN "Quark" ; } ; --*
lin quarrel_1_N = variants {mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin quarrel_2_N = mkN "seta" ; --*
lin quarrel_V = variants {mkV "altercar" ; mkV "disputar" ; mkV "indispor-se" ; mkV "porfiar" ; mkV "querelar" ; } ; --*
lin quarry_1_N = variants {mkN "game" ; mkN "presa" ; } ; --*
lin quarry_2_N = variants {mkN "pedreira" ; mkN "Pedreira" ; mkN "pit" ; } ; --*
lin quarry_3_N = mkN "presa" ; --*
lin quarrying_N = mkN "exploração" ; --*
lin quart_1_N = mkN "quarto" ; --*
lin quarter_10_N = mkN "moeda" ; --*
lin quarter_12_N = variants {mkN "part" ; mkN "popa" ; mkN "traseiro" ; } ; --*
lin quarter_1_N = variants {mkN "part" ; mkN "percent" ; mkN "um" ; } ; --*
lin quarter_1_V2 = mkV2 (mkV "aquartelar") ; --*
lin quarter_2_N = mkN "bairro" ; --*
lin quarter_3_V2 = mkV2 (mkV "esquartejar") ; --*
lin quarter_4_N = mkN "quarto" ; --*
lin quarter_4_V2 = mkV2 (mkV "dividir") ; --*
lin quarter_6_N = mkN "trimestre" ; --*
lin quarterback_2_N = variants {mkN "caller" ; mkN "general" ; mkN "quarterback" ; } ; --*
lin quartering_3_N = variants {mkN "carcaças" ; mkN "quartel" ; } ; --*
lin quarterly_2_Adv = variants {mkAdv "quarter" ; mkAdv "trimestralmente" ; } ; --*
lin quarterly_A = mkA "trimestral" ; --*
lin quartet_1_N = variants {mkN "4" ; mkN "Joe" ; mkN "quarteto" ; mkN "quatro" ; } ; --*
lin quartet_2_N = mkN "quarteto" ; --*
lin quartet_4_N = mkN "quarteto" ; --*
lin quartet_5_N = variants {mkN "quarteto" ; mkN "Quartetos" ; } ; --*
lin quartile_N = mkN "quartil" ; --*
lin quartz_1_N = variants {mkN "cristal" ; mkN "glass" ; mkN "silica" ; } ; --*
lin quartz_2_N = variants {mkN "quarço" ; mkN "quartzo" ; mkN "Variedades" ; } ; --*
lin quartzite_N = mkN "quartzito" ; --*
lin quasar_N = variants {mkN "quasar" ; mkN "Quasar" ; mkN "radio" ; } ; --*
lin quash_1_V2 = variants {mkV2 (mkV "defazer") ; mkV2 (mkV "down") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "subjugar") ; } ; --*
lin quash_2_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "invalidar") ; mkV2 (mkV "revogar") ; } ; --*
lin quaver_1_N = mkN "colcheia" ; --*
lin quaver_2_N = variants {mkN "colcheia" ; mkN "note" ; } ; --*
lin quaver_2_V2 = mkV2 (mkV "trinar") ; --*
lin quaver_2_V = mkV "trinar" ; --*
lin quay_N = variants {mkN "cais" ; mkN "plataforma" ; } ; --*
lin queasiness_2_N = variants {mkN "inquietação" ; mkN "inquietude" ; } ; --*
lin queasy_1_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin queasy_2_A = mkA "nauseante" ; --*
lin queasy_3_A = variants {mkA "ansioso" ; mkA "inquieto" ; mkA "nervoso" ; } ; --*
lin quebec_1_PN = variants {mkPN "Cidade" ; mkPN "City" ; mkPN "Quebec" ; } ; --*
lin quebec_2_PN = variants {mkPN "Quebec" ; mkPN "Quebéc" ; mkPN "Québec" ; mkPN "Quebeque" ; } ; --*
lin queen_10_N = mkN "gato" ; --*
lin queen_1_N = variants {mkN "rainha" ; mkN "sota" ; } ; --*
lin queen_2_N = variants {mkN "monarch" ; mkN "rainha" ; mkN "regnant" ; } ; --*
lin queen_3_N = mkN "rainha" ; --*
lin queen_6_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin queen_7_N = mkN "dama" ; --*
lin queen_8_N = mkN "Dama" ; --*
lin queensland_PN = variants {mkPN "Queensland" ; mkPN "Queenslândia" ; } ; --*
lin queer_1_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin queer_1_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin queer_2_A = variants {mkA "bicha" ; mkA "gay" ; mkA "veado" ; } ; --*
lin queer_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "comprometer") ; } ; --*
lin queer_N = variants {mkN "bicha" ; mkN "paneleiro" ; mkN "veado" ; mkN "viado" ; } ; --*
lin queerness_2_N = mkN "homossexualidade" ; --*
lin quell_1_V2 = mkV2 (mkV "debelar") ; --*
lin quell_2_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aplacar") ; } ; --*
lin quench_1_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "matar") ; mkV2 (mkV "saciar") ; } ; --*
lin quench_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin quench_4_V2 = mkV2 (mkV "debelar") ; --*
lin query_N = variants {mkN "indagação" ; mkN "inquérito" ; mkN "interrogação" ; mkN "pergunta" ; mkN "perguntar" ; mkN "questão" ; } ; --*
lin query_V2 = variants {mkV2 (mkV "interrogar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "questionar") ; } ; --*
lin quesadilla_N = mkN "quesadilla" ; --*
lin quest_1_N = variants {mkN "busca" ; mkN "procura" ; } ; --*
lin quest_1_V = mkV "procurar" ; --*
lin quest_2_N = variants {mkN "busca" ; mkN "procura" ; } ; --*
lin quest_5_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "pedir") ; mkV2 (mkV "requerer") ; mkV2 (mkV "requisitar") ; } ; --*
lin question_1_N = variants {mkN "indagação" ; mkN "inquérito" ; mkN "interrogação" ; mkN "pergunta" ; mkN "perguntar" ; mkN "questão" ; } ; --*
lin question_1_V2 = variants {mkV2 (mkV "into") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "qüestionar") ; } ; --*
lin question_2_N = variants {mkN "questão" ; mkN "tema" ; } ; --*
lin question_2_V2 = variants {mkV2 (mkV "interrogar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "questionar") ; } ; --*
lin question_3_N = variants {mkN "interrogação" ; mkN "pergunta" ; mkN "questão" ; mkN "sentence" ; } ; --*
lin question_3_V2 = variants {mkV2 (mkV "interrogar") ; mkV2 (mkV "perguntar") ; mkV2 (mkV "questionar") ; } ; --*
lin question_4_N = variants {mkN "dúvida" ; mkN "questão" ; } ; --*
lin question_4_V2 = variants {mkV2 (mkV "entrevistar") ; mkV2 (mkV "questionar") ; } ; --*
lin question_5_N = mkN "moção" ; --*
lin question_5_V2 = variants {mkV2 (mkV "perguntar") ; mkV2 (mkV "ponderar") ; mkV2 (mkV "questionar") ; } ; --*
lin questioning_2_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin questioning_N = variants {mkN "inquérito" ; mkN "pergunta" ; mkN "questão" ; } ; --*
lin question_mark_N = variants {mkN "mark" ; mkN "point" ; } ; --*
lin questionnaire_N = mkN "questionário" ; --*
lin queue_1_N = variants {mkN "bicha" ; mkN "line" ; } ; --*
lin queue_1_V = variants {mkV "enfileirar" ; mkV "up" ; } ; --*
lin queue_2_N = mkN "lista" ; --*
lin quibble_1_V = variants {mkV "aperrear" ; mkV "atazanar" ; mkV "chicanear" ; mkV "fuxicar" ; } ; --*
lin quibble_2_V = variants {mkV "bicar" ; mkV "discutir" ; } ; --*
lin quibble_N = mkN "falarchicanas" ; --*
lin quiche_2_N = mkN "quiche" ; --*
lin quiche_3_N = mkN "quiché" ; --*
lin quick_1_A = variants {mkA "ligeiro" ; mkA "rápido" ; mkA "veloz" ; } ; --*
lin quick_3_A = variants {mkA "ágil" ; mkA "ativo" ; mkA "lépido" ; mkA "lesto" ; mkA "ligeiro" ; mkA "rápido" ; mkA "serelepe" ; } ; --*
lin quick_Adv = variants {mkAdv "prontamente" ; mkAdv "rápido" ; } ; --*
lin quicken_1_V = variants {mkV "acelerar" ; mkV "agilizar" ; mkV "apressar" ; mkV "up" ; } ; --*
lin quicken_3_V2 = mkV2 (mkV "envigorar") ; --*
lin quicken_5_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin quickening_3_N = variants {mkN "aceleração" ; mkN "aumento" ; } ; --*
lin quicker_Adv = mkAdv "mais" ; --*
lin quickest_Adv = mkAdv "o" ; --*
lin quickie_1_N = variants {mkN "aid" ; mkN "fix" ; mkN "rapidinha" ; } ; --*
lin quicklime_N = variants {mkN "cal" ; mkN "lime" ; mkN "oxide" ; } ; --*
lin quickness_1_N = variants {mkN "competência" ; mkN "facilidade" ; mkN "habilidade" ; } ; --*
lin quickness_3_N = variants {mkN "celeridade" ; mkN "rapidez" ; } ; --*
lin quicksand_1_N = mkN "areia" ; --*
lin quicksilver_N = variants {mkN "mercúrio" ; mkN "Mercúrio" ; mkN "number" ; } ; --*
lin quick_tempered_A = mkA "colérico" ; --*
lin quid_1_N = variants {mkN "libra" ; mkN "pound" ; mkN "sterling" ; } ; --*
lin quid_2_N = variants {mkN "pro" ; mkN "Quid" ; } ; --*
lin quiddity_1_N = mkN "falarchicanas" ; --*
lin quid_pro_quo_N = variants {mkN "pro" ; mkN "Quid" ; } ; --*
lin quiescence_2_N = mkN "dormência" ; --*
lin quiet_1_A = variants {mkA "calmo" ; mkA "quieto" ; } ; --*
lin quiet_1_V2 = variants {mkV2 (mkV "aquietar") ; mkV2 (mkV "down") ; mkV2 (mkV "quietar") ; } ; --*
lin quiet_1_V = variants {mkV "aquietar" ; mkV "down" ; mkV "quietar" ; } ; --*
lin quiet_2_A = variants {mkA "quiet" ; mkA "quieto" ; mkA "silencioso" ; } ; --*
lin quiet_2_N = mkN "paz" ; --*
lin quiet_2_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin quiet_3_N = variants {mkN "calada" ; mkN "silêncio" ; mkN "sossego" ; } ; --*
lin quiet_4_N = mkN "serenidade" ; --*
lin quiet_5_A = variants {mkA "quieto" ; mkA "silenciosa" ; } ; --*
lin quiet_down_V2 = variants {mkV2 (mkV "aquietar") ; mkV2 (mkV "down") ; mkV2 (mkV "quietar") ; } ; --*
lin quieten_1_V2 = variants {mkV2 (mkV "aquietar") ; mkV2 (mkV "down") ; mkV2 (mkV "quietar") ; } ; --*
lin quieten_1_V = variants {mkV "aquietar" ; mkV "down" ; mkV "quietar" ; } ; --*
lin quieten_2_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin quieten_3_V2 = variants {mkV2 (mkV "silenciar") ; mkV2 (mkV "up") ; } ; --*
lin quietly_2_Adv = variants {mkAdv "quietamente" ; mkAdv "tranqüilamente" ; } ; --*
lin quietness_1_N = mkN "calma" ; --*
lin quietness_2_N = variants {mkN "paz" ; mkN "quietude" ; mkN "silêncio" ; } ; --*
lin quietude_N = variants {mkN "paz" ; mkN "quietude" ; mkN "silêncio" ; } ; --*
lin quill_1_N = variants {mkN "pen" ; mkN "pena" ; } ; --*
lin quill_3_N = variants {mkN "feather" ; mkN "pena" ; mkN "pluma" ; } ; --*
lin quill_4_N = mkN "raque" ; --*
lin quill_feather_N = variants {mkN "feather" ; mkN "pena" ; mkN "pluma" ; } ; --*
lin quilting_2_N = mkN "quilting" ; --*
lin quilt_N = variants {mkN "coberta" ; mkN "colcha" ; mkN "edredon" ; } ; --*
lin quince_1_N = variants {mkN "bush" ; mkN "marmeleiro" ; mkN "oblonga" ; } ; --*
lin quince_2_N = mkN "marmelo" ; --*
lin quinidine_N = mkN "Quinidina" ; --*
lin quinine_N = mkN "quinina" ; --*
lin quinone_N = mkN "quinona" ; --*
lin quinquagesima_N = variants {mkN "Quinquagésima" ; mkN "Sunday" ; } ; --*
lin quinquagesima_PN = variants {mkPN "Quinquagésima" ; mkPN "Sunday" ; } ; --*
lin quinsy_N = variants {mkN "abscess" ; mkN "angina" ; } ; --*
lin quintal_1_N = mkN "quintal" ; --*
lin quintessence_1_N = mkN "éter" ; --*
lin quintet_1_N = mkN "quinteto" ; --*
lin quintet_4_N = variants {mkN "quíntupla" ; mkN "quíntuplo" ; } ; --*
lin quintet_5_N = mkN "quinteto" ; --*
lin quintuple_A = variants {mkA "quíntupla" ; mkA "quíntuplo" ; } ; --*
lin quintuplet_3_N = variants {mkN "quíntupla" ; mkN "quíntuplo" ; } ; --*
lin quip_2_N = variants {mkN "chacota" ; mkN "gracejo" ; mkN "piada" ; mkN "xiste" ; } ; --*
lin quipu_N = mkN "quipo" ; --*
lin quirky_A = variants {mkA "indiossincrático" ; mkA "próprio" ; mkA "único" ; } ; --*
lin quit_1_V2 = variants {mkV2 (mkV "cessar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "descontinuar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin quit_2_V = variants {mkV "demitir-se" ; mkV "down" ; mkV "office" ; mkV "quitar" ; mkV "resignar" ; } ; --*
lin quit_3_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "leave") ; mkV2 (mkV "partir") ; mkV2 (mkV "sair") ; } ; --*
lin quit_3_V = variants {mkV "deixar" ; mkV "leave" ; mkV "partir" ; mkV "sair" ; } ; --*
lin quit_4_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "renunciar") ; } ; --*
lin quit_5_V = variants {mkV "abandonar" ; mkV "by" ; mkV "in" ; mkV "out" ; mkV "up" ; } ; --*
lin quito_PN = variants {mkPN "of" ; mkPN "Quito" ; } ; --*
lin quittance_2_N = mkN "reembolso" ; --*
lin quiver_1_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin quiver_1_V = variants {mkV "tiritar" ; mkV "tremer" ; mkV "vibrar" ; } ; --*
lin quiver_2_N = variants {mkN "palpitação" ; mkN "tremor" ; mkN "trêmulo" ; } ; --*
lin quiver_2_V = mkV "bater" ; --*
lin quiver_3_N = variants {mkN "aljava" ; mkN "carcás" ; mkN "fáretra" ; } ; --*
lin quiver_3_V = mkV "bater" ; --*
lin quiver_4_N = variants {mkN "aljava" ; mkN "tremor" ; } ; --*
lin quixotic_1_A = mkA "romântico" ; --*
lin quiz_N = variants {mkN "prova" ; mkN "teste" ; } ; --*
lin quizzical_1_A = variants {mkA "irónico" ; mkA "irônico" ; mkA "sarcástico" ; } ; --*
lin quorum_N = variants {mkN "Quorum" ; mkN "quórum" ; } ; --*
lin quota_2_N = variants {mkN "atribuição" ; mkN "cota" ; mkN "quota" ; } ; --*
lin quotable_1_A = variants {mkA "repetível" ; mkA "reproduzível" ; } ; --*
lin quotation_1_N = variants {mkN "citação" ; mkN "menção" ; mkN "referência" ; } ; --*
lin quotation_2_N = variants {mkN "citação" ; mkN "frase" ; } ; --*
lin quotation_3_N = mkN "cotação" ; --*
lin quote_1_N = variants {mkN "aspas" ; mkN "comma" ; mkN "mark" ; } ; --*
lin quote_1_V2 = mkV2 (mkV "citar") ; --*
lin quote_2_N = variants {mkN "citação" ; mkN "frase" ; } ; --*
lin quote_2_V2 = mkV2 (mkV "cotar") ; --*
lin quote_3_V2 = variants {mkV2 (mkV "citar") ; mkV2 (mkV "mencionar") ; } ; --*
lin quotidian_A = variants {mkA "cotidiano" ; mkA "quotidiano" ; } ; --*
lin quotient_1_N = mkN "quociente" ; --*
lin quotient_2_N = variants {mkN "cociente" ; mkN "cota" ; mkN "quociente" ; } ; --*
lin ra_1_N = variants {mkN "number" ; mkN "rádio" ; mkN "Rádio" ; } ; --*
lin ra_2_N = mkN "Ré" ; --*
lin ra_3_N = variants {mkN "ascensão" ; mkN "ascension" ; mkN "longitude" ; } ; --*
lin rabbi_1_N = variants {mkN "rabi" ; mkN "rabino" ; } ; --*
lin rabbi_2_N = variants {mkN "rabino" ; mkN "Rabinos" ; } ; --*
lin rabbit_1_N = variants {mkN "coelho" ; mkN "lebre" ; } ; --*
lin rabbit_3_N = variants {mkN "coelho" ; mkN "lebre" ; } ; --*
lin rabbit_burrow_N = variants {mkN "burrow" ; mkN "hole" ; } ; --*
lin rabbit_hole_N = variants {mkN "burrow" ; mkN "hole" ; } ; --*
lin rabbit_warren_2_N = variants {mkN "toca" ; mkN "warren" ; } ; --*
lin rabble_1_N = mkN "multidão" ; --*
lin rabble_2_N = variants {mkN "and" ; mkN "ralé" ; } ; --*
lin rabid_1_A = mkA "raivoso" ; --*
lin rabid_2_A = variants {mkA "fanático" ; mkA "furiosa" ; mkA "furiosas" ; mkA "furiosos" ; mkA "hidrofóbico" ; } ; --*
lin rabies_N = variants {mkN "hidrofobia" ; mkN "raiva" ; } ; --*
lin raccoon_2_N = mkN "guaxinim" ; --*
lin race_1_N = mkN "corrida" ; --*
lin race_1_V = variants {mkV "along" ; mkV "apressar" ; mkV "correr" ; mkV "on" ; } ; --*
lin race_2_N = mkN "corrida" ; --*
lin race_2_V = mkV "correr" ; --*
lin race_3_N = variants {mkN "linhagem" ; mkN "povo" ; mkN "raça" ; mkN "raças" ; } ; --*
lin race_3_VV = mkVV (mkV "correr") ; --*
lin race_4_N = variants {mkN "gênero" ; mkN "subespécie" ; } ; --*
lin race_4_V2 = mkV2 (mkV "fazer") ; --*
lin racecourse_N = mkN "pista" ; --*
lin racehorse_N = variants {mkN "cavalo" ; mkN "horse" ; } ; --*
lin raceme_N = variants {mkN "cacho" ; mkN "racemo" ; } ; --*
lin racer_3_N = mkN "corredor" ; --*
lin racetrack_N = mkN "pista" ; --*
lin raceway_2_N = mkN "pista" ; --*
lin rachel_PN = mkPN "Raquel" ; --*
lin rachis_1_N = mkN "ráquis" ; --*
lin rachis_2_N = variants {mkN "column" ; mkN "costas" ; mkN "espinha" ; mkN "espinhaço" ; } ; --*
lin rachitis_2_N = mkN "raquitismo" ; --*
lin racial_1_A = mkA "racial" ; --*
lin racial_2_A = mkA "racial" ; --*
lin racialism_N = variants {mkN "discrimination" ; mkN "racismo" ; mkN "Racismo" ; } ; --*
lin racing_N = variants {mkN "carreira" ; mkN "corrida" ; mkN "Esportes" ; } ; --*
lin racism_1_N = mkN "racismo" ; --*
lin racism_2_N = variants {mkN "discrimination" ; mkN "racismo" ; mkN "Racismo" ; } ; --*
lin racist_1_A = mkA "racista" ; --*
lin racist_2_A = mkA "racista" ; --*
lin rack_1_N = variants {mkN "prateleira" ; mkN "rack" ; } ; --*
lin rack_4_V2 = mkV2 (mkV "extorquir") ; --*
lin rack_5_N = mkN "prateleira" ; --*
lin rack_8_V2 = variants {mkV2 (mkV "atormentar") ; mkV2 (mkV "excruciar") ; mkV2 (mkV "torturar") ; } ; --*
lin racket_1_N = mkN "ruído" ; --*
lin racket_1_V = variants {mkV "celebrar" ; mkV "curtir" ; mkV "happy" ; mkV "it" ; mkV "merry" ; mkV "whoopie" ; } ; --*
lin racket_3_N = variants {mkN "algazarra" ; mkN "barulho" ; } ; --*
lin racket_4_N = variants {mkN "raquete" ; mkN "Raquete" ; } ; --*
lin rack_up_2_V2 = mkV2 (mkV "up") ; --*
lin racoon_N = mkN "guaxinim" ; --*
lin racquet_N = variants {mkN "raquete" ; mkN "Raquete" ; } ; --*
lin racy_3_A = mkA "verde" ; --*
lin rad_2_N = mkN "radiano" ; --*
lin radar_N = variants {mkN "detection" ; mkN "radar" ; } ; --*
lin raddled_2_A = mkA "extenuado" ; --*
lin radial_2_A = mkA "radial" ; --*
lin radial_3_A = mkA "radial" ; --*
lin radiance_2_N = variants {mkN "brilho" ; mkN "luminosidade" ; mkN "Radiança" ; mkN "refulgência" ; } ; --*
lin radian_N = mkN "radiano" ; --*
lin radiant_A = variants {mkA "radiante" ; mkA "refulgente" ; } ; --*
lin radiate_1_V2 = variants {mkV2 (mkV "irradiar") ; mkV2 (mkV "radiar") ; } ; --*
lin radiate_2_V2 = mkV2 (mkV "irradiar") ; --*
lin radiate_3_V = variants {mkV "irradiar" ; mkV "irradiar-se" ; mkV "radiar" ; } ; --*
lin radiate_4_V = mkV "brilhar" ; --*
lin radiate_6_V = variants {mkV "brilhar" ; mkV "radiar" ; } ; --*
lin radiate_8_V = variants {mkV "diversificar" ; mkV "irradiar" ; } ; --*
lin radiation_1_N = variants {mkN "radiação" ; mkN "Radiação" ; mkN "radiações" ; } ; --*
lin radiation_2_N = variants {mkN "exposição" ; mkN "irradiação" ; mkN "radiação" ; mkN "radiações" ; } ; --*
lin radiation_3_N = variants {mkN "doenças" ; mkN "sickness" ; mkN "syndrome" ; } ; --*
lin radiation_4_N = variants {mkN "radiações" ; mkN "radioactividade" ; } ; --*
lin radiation_7_N = variants {mkN "Radioterapia" ; mkN "therapy" ; } ; --*
lin radiator_2_N = mkN "aquecedor" ; --*
lin radical_2_A = mkA "revolucionário" ; --*
lin radical_2_N = mkN "radical" ; --*
lin radical_3_A = mkA "radical" ; --*
lin radical_3_N = mkN "radical" ; --*
lin radical_5_A = mkA "basal" ; --*
lin radical_6_N = variants {mkN "radical" ; mkN "Radical" ; mkN "raiz" ; mkN "word" ; } ; --*
lin radicalism_N = mkN "Radicalismo" ; --*
lin radicchio_N = mkN "radicchio" ; --*
lin radio_1_N = variants {mkN "rádio" ; mkN "Rádio" ; } ; --*
lin radio_2_N = variants {mkN "rádio" ; mkN "receiver" ; mkN "set" ; } ; --*
lin radio_3_N = mkN "rádio" ; --*
lin radioactive_A = variants {mkA "radiativo" ; mkA "radioactivo" ; mkA "radioativo" ; } ; --*
lin radioactivity_N = variants {mkN "radiações" ; mkN "radioactividade" ; } ; --*
lin radiochemistry_N = variants {mkN "chemistry" ; mkN "Química" ; } ; --*
lin radiogram_2_N = variants {mkN "chapa" ; mkN "radiografia" ; } ; --*
lin radiographic_A = mkA "radiográfico" ; --*
lin radiograph_N = variants {mkN "chapa" ; mkN "radiografia" ; } ; --*
lin radiography_2_N = mkN "radiografia" ; --*
lin radio_location_N = variants {mkN "detection" ; mkN "radar" ; } ; --*
lin radiological_A = mkA "radiológico" ; --*
lin radiology_2_N = variants {mkN "radiologia" ; mkN "Radiologia" ; } ; --*
lin radiolysis_N = mkN "Radiolise" ; --*
lin radiometer_N = mkN "radiômetro" ; --*
lin radioscopy_N = variants {mkN "radiologia" ; mkN "Radiologia" ; } ; --*
lin radio_set_N = variants {mkN "rádio" ; mkN "receiver" ; mkN "set" ; } ; --*
lin radiotelegraph_2_N = variants {mkN "radiofonia" ; mkN "Radiotelefonia" ; mkN "telegraph" ; mkN "telegraphy" ; } ; --*
lin radio_telescope_N = variants {mkN "reflector" ; mkN "telescope" ; } ; --*
lin radiotherapy_N = variants {mkN "Radioterapia" ; mkN "therapy" ; } ; --*
lin radish_3_N = variants {mkN "rabanete" ; mkN "rábano" ; } ; --*
lin radish_4_N = variants {mkN "rábano" ; mkN "sativus" ; } ; --*
lin radish_5_N = variants {mkN "plant" ; mkN "rabanete" ; } ; --*
lin radium_N = variants {mkN "number" ; mkN "rádio" ; mkN "Rádio" ; } ; --*
lin radius_1_N = mkN "raio" ; --*
lin radius_2_N = mkN "raio" ; --*
lin radius_4_N = mkN "rádio" ; --*
lin radon_N = variants {mkN "number" ; mkN "radão" ; mkN "rádon" ; } ; --*
lin raf_1_N = variants {mkN "Air" ; mkN "Força" ; } ; --*
lin raf_2_N = variants {mkN "Army" ; mkN "Facção" ; } ; --*
lin raffia_3_N = variants {mkN "Palha-da-costa" ; mkN "Raffia" ; mkN "Raphia" ; } ; --*
lin raffle_N = variants {mkN "loteria" ; mkN "rifa" ; mkN "Rifa" ; } ; --*
lin raft_1_N = mkN "jangada" ; --*
lin rafter_1_N = mkN "trave" ; --*
lin raft_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin rag_1_N = variants {mkN "end" ; mkN "farrapo" ; mkN "rasgo" ; mkN "trapo" ; } ; --*
lin rag_1_V2 = variants {mkV2 (mkV "crucificar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "retalhar") ; mkV2 (mkV "tormentar") ; } ; --*
lin rag_2_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin rag_3_N = mkN "ragtime" ; --*
lin rag_4_N = variants {mkN "tabloide" ; mkN "Tablóide" ; } ; --*
lin rag_4_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin rag_5_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin rag_6_V2 = mkV2 (mkV "retalhar") ; --*
lin ragbag_1_N = variants {mkN "and" ; mkN "gororoba" ; mkN "miscelânea" ; mkN "mistura" ; mkN "mistureba" ; } ; --*
lin rage_1_N = variants {mkN "cólera" ; mkN "fúria" ; mkN "ira" ; mkN "raiva" ; } ; --*
lin rage_2_V = mkV "enfurecer-se" ; --*
lin rage_3_N = mkN "paixão" ; --*
lin rage_3_V = variants {mkV "enraivecer" ; mkV "zangar" ; } ; --*
lin rage_5_N = variants {mkN "moda" ; mkN "voga" ; } ; --*
lin raggedness_1_N = mkN "rugosidade" ; --*
lin ragout_N = variants {mkN "guisado" ; mkN "ragu" ; } ; --*
lin ragpicker_N = mkN "trapeiro" ; --*
lin ragtag_N = variants {mkN "and" ; mkN "ralé" ; } ; --*
lin ragtime_N = mkN "ragtime" ; --*
lin ragweed_2_N = mkN "ambrosia" ; --*
lin raid_1_N = variants {mkN "ataque" ; mkN "batida" ; } ; --*
lin raider_1_N = mkN "assaltante" ; --*
lin rail_1_N = mkN "carril" ; --*
lin rail_3_N = mkN "trilho" ; --*
lin rail_9_V2 = mkV2 (mkV "denegrir") ; --*
lin railcar_N = variants {mkN "automotora" ; mkN "automóvel" ; mkN "car" ; mkN "carro" ; mkN "vagão" ; mkN "vagões" ; } ; --*
lin railing_1_N = mkN "carril" ; --*
lin railroad_1_N = variants {mkN "caminho" ; mkN "ferrovia" ; mkN "line" ; mkN "system" ; } ; --*
lin railroad_2_N = variants {mkN "caminhos" ; mkN "ferrovia" ; mkN "track" ; } ; --*
lin railway_1_N = variants {mkN "caminho" ; mkN "ferrovia" ; mkN "line" ; mkN "system" ; } ; --*
lin railway_2_N = variants {mkN "caminhos" ; mkN "ferrovia" ; mkN "track" ; } ; --*
lin railwayman_1_N = variants {mkN "ferroviário" ; mkN "man" ; } ; --*
lin raiment_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin rain_1_N = mkN "chuva" ; --*
lin rain_2_N = variants {mkN "água" ; mkN "chuva" ; } ; --*
lin rainbow_1_N = variants {mkN "Arco" ; mkN "Arco-iris" ; mkN "arco-íris" ; } ; --*
lin raincoat_N = mkN "capa" ; --*
lin raindrop_N = mkN "pingo" ; --*
lin rainfall_N = mkN "chuva" ; --*
lin rainforest_1_N = variants {mkN "floresta" ; mkN "forest" ; } ; --*
lin rain_gauge_N = variants {mkN "gage" ; mkN "gauge" ; mkN "pluviômetro" ; mkN "udómetro" ; } ; --*
lin rainproof_A = mkA "impermeável" ; --*
lin rain_V = variants {mkV "chover" ; mkV "down" ; } ; --*
lin rainwater_N = variants {mkN "água" ; mkN "chuva" ; } ; --*
lin rainy_A = variants {mkA "chuvoso" ; mkA "pluvioso" ; } ; --*
lin raise_10_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "elicitar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin raise_12_V2 = mkV2 (mkV "elevar") ; --*
lin raise_13_V2 = mkV2 (mkV "aumentar") ; --*
lin raise_14_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "upstairs") ; } ; --*
lin raise_15_V2 = mkV2 (mkV "levantar") ; --*
lin raise_18_V2 = variants {mkV2 (mkV "aliciar") ; mkV2 (mkV "angariar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "recrutar") ; } ; --*
lin raise_19_V2 = variants {mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin raise_1_N = variants {mkN "aumento" ; mkN "hike" ; mkN "increase" ; } ; --*
lin raise_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "elevar") ; } ; --*
lin raise_23_V2 = mkV2 (mkV "elevar") ; --*
lin raise_25_V2 = mkV2 (mkV "melhorar") ; --*
lin raise_27_V2 = mkV2 (mkV "ressuscitar") ; --*
lin raise_2_N = variants {mkN "aclive" ; mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "subida" ; } ; --*
lin raise_2_V2 = variants {mkV2 (mkV "alçar") ; mkV2 (mkV "elevar") ; mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; } ; --*
lin raise_4_N = variants {mkN "alcar" ; mkN "elevação" ; mkN "levantamento" ; } ; --*
lin raise_4_V2 = mkV2 (mkV "arrecadar") ; --*
lin raise_5_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "produzir") ; } ; --*
lin raise_6_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "up") ; } ; --*
lin raise_9_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "erigir") ; mkV2 (mkV "up") ; } ; --*
lin raiser_2_N = variants {mkN "agricultor" ; mkN "agricultora" ; mkN "agrônomo" ; mkN "cultivador" ; mkN "engenheiro" ; } ; --*
lin raising_1_N = mkN "levantamento" ; --*
lin raisin_N = variants {mkN "corinto" ; mkN "passa" ; mkN "uva" ; } ; --*
lin raita_N = variants {mkN "raita" ; mkN "Raita" ; } ; --*
lin raja_2_N = mkN "Raja" ; --*
lin rake_2_N = mkN "inclinação" ; --*
lin rake_3_N = variants {mkN "ancinho" ; mkN "rastel" ; mkN "rastelo" ; mkN "restelo" ; } ; --*
lin rake_4_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "down") ; mkV2 (mkV "over") ; } ; --*
lin rake_5_V2 = mkV2 (mkV "juntar") ; --*
lin rally_1_N = variants {mkN "manifestação" ; mkN "meeting" ; } ; --*
lin rally_2_N = variants {mkN "melhora" ; mkN "reabilitação" ; mkN "restabelecimento" ; } ; --*
lin rally_2_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "mobilizar") ; mkV2 (mkV "up") ; } ; --*
lin rally_2_V2V = variants {mkV2V (mkV "convocar") ; mkV2V (mkV "mobilizar") ; mkV2V (mkV "up") ; } ; --*
lin rally_2_V = variants {mkV "convocar" ; mkV "mobilizar" ; mkV "up" ; } ; --*
lin rally_3_V2 = variants {mkV2 (mkV "reagrupar") ; mkV2 (mkV "up") ; } ; --*
lin rally_5_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin rallying_2_N = variants {mkN "melhora" ; mkN "reabilitação" ; mkN "restabelecimento" ; } ; --*
lin ram_1_N = variants {mkN "access" ; mkN "memória" ; mkN "memory" ; } ; --*
lin ram_3_N = variants {mkN "Áries" ; mkN "the" ; } ; --*
lin ram_4_V2 = variants {mkV2 (mkV "lotar") ; mkV2 (mkV "up") ; } ; --*
lin ram_5_N = variants {mkN "aríete" ; mkN "carneiro" ; } ; --*
lin ramadan_1_N = mkN "Ramadão" ; --*
lin ramadan_1_PN = mkPN "Ramadão" ; --*
lin ramadan_2_N = mkN "Ramadão" ; --*
lin ramadan_2_PN = mkPN "Ramadão" ; --*
lin ramble_2_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin rambunctious_A = mkA "descontrolado" ; --*
lin rambutan_2_N = variants {mkN "rambotã" ; mkN "Rambutão" ; } ; --*
lin ramekin_2_N = mkN "ramekin" ; --*
lin ramie_1_N = variants {mkN "grass" ; mkN "nivea" ; mkN "rami" ; mkN "silk" ; } ; --*
lin ramification_3_N = mkN "ramificação" ; --*
lin ramify_1_V = variants {mkV "complexificar" ; mkV "ramificar" ; } ; --*
lin ramify_2_V = variants {mkV "desgalhar" ; mkV "ramificar" ; mkV "ramificar-se" ; } ; --*
lin ramify_3_V = variants {mkV "bifurcar" ; mkV "brotar" ; mkV "ramificar" ; } ; --*
lin ramipril_N = mkN "ramipril" ; --*
lin ramjet_N = variants {mkN "drainpipe" ; mkN "engine" ; mkN "ramjet" ; } ; --*
lin ramp_1_N = variants {mkN "cãimbra" ; mkN "pendência" ; mkN "rampa" ; } ; --*
lin ramp_4_V2 = mkV2 (mkV "subir") ; --*
lin rampage_N = variants {mkN "alvoroço" ; mkN "disorder" ; mkN "tumulto" ; mkN "turbulência" ; } ; --*
lin rampart_N = variants {mkN "baluarte" ; mkN "muralha" ; mkN "trincheira" ; } ; --*
lin ramrod_3_N = mkN "vareta" ; --*
lin ramshackle_A = variants {mkA "dilapidada" ; mkA "dilapidadas" ; mkA "dilapidado" ; mkA "dilapidados" ; mkA "malcuidada" ; mkA "malcuidado" ; } ; --*
lin rancher_N = mkN "rancheiro" ; --*
lin ranching_N = variants {mkN "criação" ; mkN "pecuária" ; } ; --*
lin ranch_N = variants {mkN "farm" ; mkN "granja" ; mkN "ranch" ; mkN "rancho" ; mkN "roça" ; mkN "terras" ; } ; --*
lin rancid_1_A = variants {mkA "râncido" ; mkA "ranço" ; mkA "rançoso" ; } ; --*
lin rancid_2_A = variants {mkA "ranço" ; mkA "rançoso" ; } ; --*
lin rancorous_A = mkA "rancoroso" ; --*
lin rancour_1_N = variants {mkN "amargura" ; mkN "rancor" ; mkN "resentimento" ; mkN "ressentimento" ; } ; --*
lin rand_1_N = mkN "rand" ; --*
lin rand_2_N = variants {mkN "Ayn" ; mkN "Rand" ; } ; --*
lin rand_3_N = mkN "Witwatersrand" ; --*
lin random_A = variants {mkA "aleatório" ; mkA "randômico" ; } ; --*
lin randomized_1_A = mkA "randomizado" ; --*
lin randomness_1_N = mkN "entropia" ; --*
lin randomness_2_N = mkN "aleatoriedade" ; --*
lin randy_A = variants {mkA "com" ; mkA "doidão" ; mkA "excitado" ; mkA "on" ; mkA "quente" ; } ; --*
lin range_1_N = variants {mkN "alcance" ; mkN "áreas" ; mkN "escopo" ; } ; --*
lin range_2_N = mkN "alcance" ; --*
lin range_2_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin range_3_N = mkN "campo" ; --*
lin range_4_N = variants {mkN "chain" ; mkN "cordilheira" ; mkN "of" ; mkN "range" ; mkN "serra" ; } ; --*
lin range_5_N = mkN "carreiras" ; --*
lin range_5_V = variants {mkV "arrumar" ; mkV "ordenar" ; mkV "out" ; } ; --*
lin range_6_N = variants {mkN "gama" ; mkN "seleção" ; mkN "selecção" ; } ; --*
lin range_6_V = mkV "pastar" ; --*
lin range_7_N = variants {mkN "imagem" ; mkN "of" ; } ; --*
lin range_7_V = mkV "deixar" ; --*
lin range_8_V = variants {mkV "classificar" ; mkV "ranquiar" ; } ; --*
lin range_9_N = variants {mkN "fogões" ; mkN "forno" ; mkN "range" ; mkN "stove" ; } ; --*
lin rangefinder_1_N = variants {mkN "finder" ; mkN "Telémetro" ; mkN "telêmetro" ; } ; --*
lin ranger_3_N = variants {mkN "ranger" ; mkN "Ranger" ; } ; --*
lin rangoon_PN = variants {mkPN "Yangon" ; mkPN "Yangôn" ; mkPN "Yangum" ; } ; --*
lin ranitidine_N = mkN "Ranitidina" ; --*
lin rank_1_N = mkN "bicha" ; --*
lin rank_1_V = mkV "posicionar-se" ; --*
lin rank_2_A = variants {mkA "fedorento" ; mkA "malcheiroso" ; } ; --*
lin rank_2_N = variants {mkN "classe" ; mkN "hierarquia" ; mkN "posição" ; mkN "posto" ; } ; --*
lin rank_2_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "ranquiar") ; } ; --*
lin rank_4_A = variants {mkA "absoluto" ; mkA "completo" ; mkA "total" ; } ; --*
lin rank_4_N = variants {mkN "posto" ; mkN "rank" ; mkN "station" ; mkN "status" ; } ; --*
lin rank_5_N = mkN "associação" ; --*
lin ranking_N = mkN "Ranking" ; --*
lin rankle_V = variants {mkV "corroer" ; mkV "into" ; mkV "magoar" ; } ; --*
lin rankness_1_N = mkN "riqueza" ; --*
lin rankness_2_N = mkN "odor" ; --*
lin ransack_1_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin ransack_2_V2 = mkV2 (mkV "vasculhar") ; --*
lin ransom_1_N = variants {mkN "money" ; mkN "resgate" ; } ; --*
lin ransom_3_N = mkN "resgate" ; --*
lin ransom_V2 = variants {mkV2 (mkV "remir") ; mkV2 (mkV "resgatar") ; } ; --*
lin rant_1_N = mkN "arenga" ; --*
lin rant_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "on") ; mkV2 (mkV "reclamar") ; } ; --*
lin rant_V = variants {mkV "off" ; mkV "on" ; mkV "reclamar" ; } ; --*
lin rap_1_N = mkN "culpa" ; --*
lin rap_1_V2 = mkV2 (mkV "bater") ; --*
lin rap_2_N = mkN "batidinha" ; --*
lin rap_6_N = variants {mkN "batida" ; mkN "golpe" ; } ; --*
lin rapacious_1_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin rapacious_2_A = mkA "voraz" ; --*
lin rapacious_3_A = mkA "voraz" ; --*
lin rapacity_2_N = variants {mkN "avareza" ; mkN "avarícia" ; mkN "avidez" ; mkN "cobiça" ; mkN "ganância" ; } ; --*
lin rape_1_N = variants {mkN "colza" ; mkN "napus" ; } ; --*
lin rape_1_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atentar") ; mkV2 (mkV "estuprar") ; mkV2 (mkV "violentar") ; } ; --*
lin rape_3_N = mkN "estupro" ; --*
lin raper_N = variants {mkN "estuprador" ; mkN "violador" ; } ; --*
lin rapeseed_N = mkN "colza" ; --*
lin rapid_1_A = variants {mkA "célere" ; mkA "ligeiro" ; mkA "rápido" ; mkA "veloz" ; } ; --*
lin rapid_2_A = variants {mkA "breve" ; mkA "rápido" ; mkA "veloz" ; } ; --*
lin rapidity_N = variants {mkN "celeridade" ; mkN "rapidez" ; } ; --*
lin rapid_N = mkN "corredeira" ; --*
lin rapier_N = variants {mkN "espada" ; mkN "florete" ; mkN "rapieira" ; } ; --*
lin rapist_N = variants {mkN "estuprador" ; mkN "violador" ; } ; --*
lin rapper_1_N = mkN "rapper" ; --*
lin rapport_N = mkN "afinidade" ; --*
lin rapprochement_N = mkN "reconciliação" ; --*
lin rapscallion_1_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin rapscallion_2_N = mkN "diabrete" ; --*
lin rapt_A = mkA "extático" ; --*
lin raptorial_2_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin rapture_1_N = variants {mkN "embevecimento" ; mkN "enlevo" ; mkN "êxtase" ; } ; --*
lin rapturous_A = mkA "extático" ; --*
lin rare_1_A = variants {mkA "de" ; mkA "pouco" ; } ; --*
lin rare_2_A = mkA "raro" ; --*
lin rare_5_A = variants {mkA "incomum" ; mkA "raro" ; } ; --*
lin rarebit_N = variants {mkN "rabbit" ; mkN "rarebit" ; mkN "Welsh" ; } ; --*
lin rarefaction_N = mkN "rarefação" ; --*
lin rarefy_1_V2 = mkV2 (mkV "rarificar") ; --*
lin rarefy_2_V2 = variants {mkV2 (mkV "sublimar") ; mkV2 (mkV "sutilizar") ; } ; --*
lin rarefy_2_V = variants {mkV "sublimar" ; mkV "sutilizar" ; } ; --*
lin rarefy_3_V2 = variants {mkV2 (mkV "debilitar") ; mkV2 (mkV "rarefazer") ; } ; --*
lin rarefy_3_V = variants {mkV "debilitar" ; mkV "rarefazer" ; } ; --*
lin rareness_N = mkN "raridade" ; --*
lin raring_A = mkA "impaciente" ; --*
lin rariora_N = mkN "raridade" ; --*
lin rarity_1_N = mkN "raridade" ; --*
lin rarity_3_N = variants {mkN "curiosidade" ; mkN "raridade" ; } ; --*
lin rascal_1_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin rascal_2_N = mkN "diabrete" ; --*
lin rase_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin rash_2_A = variants {mkA "Inconsequente" ; mkA "temerário" ; } ; --*
lin rashness_2_N = mkN "descuido" ; --*
lin rasp_1_N = mkN "grosa" ; --*
lin rasp_2_V2 = mkV2 (mkV "ralar") ; --*
lin rasp_2_V = mkV "ralar" ; --*
lin raspberry_1_N = variants {mkN "bush" ; mkN "framboesa" ; } ; --*
lin raspberry_2_N = variants {mkN "framboesa" ; mkN "framboeseira" ; } ; --*
lin raster_N = mkN "raster" ; --*
lin rat_1_N = variants {mkN "ratazana" ; mkN "rato" ; mkN "Rattus" ; } ; --*
lin rat_2_N = variants {mkN "fura-greve" ; mkN "Fura-greve" ; } ; --*
lin rat_3_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin rat_4_N = mkN "delator" ; --*
lin ratan_N = variants {mkN "Calamus" ; mkN "Rotim" ; } ; --*
lin ratatouille_N = mkN "ratatouille" ; --*
lin ratchet_1_N = mkN "matraca" ; --*
lin ratch_N = mkN "matraca" ; --*
lin rate_1a_N = variants {mkN "ritmo" ; mkN "velocidade" ; } ; --*
lin rate_1b_N = variants {mkN "ritmo" ; mkN "velocidade" ; } ; --*
lin rate_1_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "ranquiar") ; } ; --*
lin rate_2_N = variants {mkN "per" ; mkN "tarifa" ; } ; --*
lin rate_3_N = variants {mkN "passo" ; mkN "ritmo" ; } ; --*
lin rate_3_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "taxar") ; mkV2 (mkV "valorizar") ; } ; --*
lin rather_3_Adv = variants {mkAdv "de" ; mkAdv "preferencialmente" ; mkAdv "preferivelmente" ; } ; --*
lin rather_AdA = variants {mkAdA "bastante" ; mkAdA "bem" ; mkAdA "of" ; } ; --*
lin ratification_N = mkN "ratificação" ; --*
lin ratify_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "ratificar") ; } ; --*
lin rating_1_N = mkN "avaliação" ; --*
lin rating_2_N = mkN "avaliação" ; --*
lin rating_3_N = mkN "posição" ; --*
lin rating_4_N = variants {mkN "classe" ; mkN "graduação" ; mkN "rank" ; mkN "rating" ; } ; --*
lin ratio_1_N = variants {mkN "proporção" ; mkN "razão" ; mkN "Taxa" ; } ; --*
lin ratiocination_1_N = mkN "conclusão" ; --*
lin ration_2_N = variants {mkN "porção" ; mkN "ração" ; mkN "tranche" ; } ; --*
lin rational_1_A = mkA "racional" ; --*
lin rational_2_A = variants {mkA "intelectual" ; mkA "racional" ; } ; --*
lin rational_3_A = mkA "racional" ; --*
lin rational_4_A = mkA "racional" ; --*
lin rationalism_1_N = mkN "racionalismo" ; --*
lin rationalistFem_N = mkN "positivista" ; --*
lin rationalistMasc_N = mkN "positivista" ; --*
lin rationality_1_N = variants {mkN "razoabilidade" ; mkN "sensatez" ; } ; --*
lin rationality_2_N = mkN "racionalidade" ; --*
lin rationalization_1_N = mkN "racionalização" ; --*
lin rationalize_1_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "justificar") ; mkV2 (mkV "perdoar") ; mkV2 (mkV "racionalizar") ; } ; --*
lin rationalize_4_V2 = mkV2 (mkV "racionalizar") ; --*
lin rationing_N = mkN "racionamento" ; --*
lin ratite_N = variants {mkN "bird" ; mkN "Struthioniformes" ; } ; --*
lin rattan_3_N = variants {mkN "Calamus" ; mkN "Rotim" ; } ; --*
lin ratter_1_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin rattle_1_V2 = mkV2 (mkV "chocalhar") ; --*
lin rattle_1_V = mkV "chocalhar" ; --*
lin rattle_2_N = mkN "chocalho" ; --*
lin rattle_2_V2 = variants {mkV2 (mkV "chocalhar") ; mkV2 (mkV "fazer") ; } ; --*
lin rattle_2_V = variants {mkV "chocalhar" ; mkV "fazer" ; } ; --*
lin rattler_1_N = variants {mkN "cascavel" ; mkN "Cascavel" ; } ; --*
lin rattlesnake_N = variants {mkN "cascavel" ; mkN "Cascavel" ; } ; --*
lin rattling_Adv = mkAdv "muito" ; --*
lin raucous_1_A = mkA "estridente" ; --*
lin raunchy_2_A = variants {mkA "impudico" ; mkA "obsceno" ; } ; --*
lin raunchy_3_A = variants {mkA "encardido" ; mkA "grudento" ; mkA "sujo" ; } ; --*
lin ravage_2_V2 = variants {mkV2 (mkV "assolar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "devastar") ; mkV2 (mkV "waste") ; } ; --*
lin ravage_2_V = variants {mkV "assolar" ; mkV "destruir" ; mkV "devastar" ; mkV "waste" ; } ; --*
lin ravage_N = variants {mkN "depredação" ; mkN "devastação" ; } ; --*
lin ravaging_N = mkN "devastação" ; --*
lin rave_1_N = mkN "rave" ; --*
lin rave_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "on") ; mkV2 (mkV "reclamar") ; } ; --*
lin rave_2_V = variants {mkV "off" ; mkV "on" ; mkV "reclamar" ; } ; --*
lin ravel_1_V2 = variants {mkV2 (mkV "desenrolar") ; mkV2 (mkV "out") ; } ; --*
lin ravening_1_A = variants {mkA "predador" ; mkA "predatório" ; } ; --*
lin ravening_2_A = mkA "voraz" ; --*
lin ravening_3_A = mkA "voraz" ; --*
lin ravenna_PN = variants {mkPN "of" ; mkPN "Ravenna" ; } ; --*
lin raven_N = variants {mkN "corax" ; mkN "corvo" ; } ; --*
lin ravenous_1_A = variants {mkA "faminta" ; mkA "faminto" ; } ; --*
lin ravenous_2_A = mkA "voraz" ; --*
lin ravine_N = variants {mkN "barranco" ; mkN "ravina" ; } ; --*
lin raving_N = mkN "desvario" ; --*
lin ravioli_N = variants {mkN "ravioli" ; mkN "Ravióli" ; } ; --*
lin ravish_1_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atentar") ; mkV2 (mkV "estuprar") ; mkV2 (mkV "violentar") ; } ; --*
lin ravish_2_V2 = mkV2 (mkV "encantar") ; --*
lin ravishment_2_N = mkN "estupro" ; --*
lin raw_3_A = variants {mkA "cru" ; mkA "crua" ; } ; --*
lin raw_9_A = variants {mkA "magoado" ; mkA "ofendido" ; mkA "sensível" ; mkA "terno" ; } ; --*
lin rawness_3_N = mkN "dor" ; --*
lin rawness_4_N = mkN "inexperiência" ; --*
lin raw_N = variants {mkN "pelado" ; mkN "suit" ; } ; --*
lin ray_1_N = variants {mkN "beam" ; mkN "feixe" ; mkN "of" ; mkN "raio" ; } ; --*
lin ray_1_PN = variants {mkPN "beam" ; mkPN "feixe" ; mkPN "of" ; mkPN "raio" ; } ; --*
lin ray_1_V2 = mkV2 (mkV "irradiar") ; --*
lin ray_2_V = variants {mkV "irradiar" ; mkV "irradiar-se" ; mkV "radiar" ; } ; --*
lin ray_3_N = mkN "raio" ; --*
lin ray_3_PN = mkPN "raio" ; --*
lin ray_4_N = variants {mkN "beam" ; mkN "raio" ; } ; --*
lin ray_4_PN = variants {mkPN "beam" ; mkPN "raio" ; } ; --*
lin ray_5_N = mkN "re" ; --*
lin ray_5_PN = mkPN "re" ; --*
lin rayon_N = mkN "raiom" ; --*
lin raze_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin razorback_2_N = mkN "baleia-jubarte" ; --*
lin razorblade_N = mkN "lâmina" ; --*
lin razor_N = variants {mkN "gilete" ; mkN "navalha" ; } ; --*
lin re_1_N = variants {mkN "number" ; mkN "Renio" ; mkN "Rénio" ; mkN "rênio" ; } ; --*
lin re_2_N = mkN "Ré" ; --*
lin re_3_N = mkN "re" ; --*
lin reach_1_N = mkN "alcance" ; --*
lin reach_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "chegar") ; } ; --*
lin reach_2_N = variants {mkN "alcance" ; mkN "áreas" ; mkN "escopo" ; } ; --*
lin reach_4_V2 = variants {mkV2 (mkV "contactar") ; mkV2 (mkV "contatar") ; mkV2 (mkV "estar") ; mkV2 (mkV "hold") ; mkV2 (mkV "manter") ; mkV2 (mkV "through") ; } ; --*
lin reach_5_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "chegar") ; mkV2 (mkV "efectuar") ; mkV2 (mkV "efetuar") ; mkV2 (mkV "obter") ; mkV2 (mkV "realizar") ; } ; --*
lin reach_6_V = variants {mkV "alcançar" ; mkV "encostar" ; mkV "to" ; } ; --*
lin reach_7_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin reach_8_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "passar") ; } ; --*
lin reach_9_V2 = mkV2 (mkV "batalhar") ; --*
lin reach_out_1_V = variants {mkV "dirigir-se" ; mkV "out" ; } ; --*
lin react_1_V = variants {mkV "reagir" ; mkV "responder" ; } ; --*
lin react_3_V = mkV "reagir" ; --*
lin reaction_1_N = variants {mkN "reação" ; mkN "reacções" ; mkN "Reações" ; mkN "reaction" ; } ; --*
lin reaction_3_N = variants {mkN "reação" ; mkN "resposta" ; } ; --*
lin reaction_4_N = mkN "reação" ; --*
lin reaction_5_N = mkN "reação" ; --*
lin reaction_7_N = variants {mkN "reação" ; mkN "resistência" ; } ; --*
lin reactionary_A = mkA "reacionário" ; --*
lin reactionary_N = variants {mkN "reacionário" ; mkN "right-winger" ; mkN "ultraconservador" ; } ; --*
lin reactivate_V2 = mkV2 (mkV "reativar") ; --*
lin reactive_1_A = mkA "reage" ; --*
lin reactivity_1_N = variants {mkN "reatividade" ; mkN "responsividade" ; mkN "sensibilidade" ; } ; --*
lin reactivity_2_N = mkN "reatividade" ; --*
lin reactor_1_N = mkN "reator" ; --*
lin reactor_2_N = variants {mkN "reactor" ; mkN "reactores" ; mkN "reator" ; mkN "Reatores" ; } ; --*
lin read_10_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin read_11_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "interpretar") ; mkV2 (mkV "traduzir") ; } ; --*
lin read_1_V2 = mkV2 (mkV "ler") ; --*
lin read_1_V = mkV "ler" ; --*
lin read_2_V = variants {mkV "dizer" ; mkV "falar" ; } ; --*
lin read_3_V2 = mkV2 (mkV "proclamar") ; --*
lin read_4_V2 = variants {mkV2 (mkV "escanear") ; mkV2 (mkV "ler") ; } ; --*
lin read_5_V2 = mkV2 (mkV "ler") ; --*
lin read_6_V2 = mkV2 (mkV "ler") ; --*
lin read_7_V = variants {mkV "aprender" ; mkV "cursar" ; mkV "estudar" ; } ; --*
lin read_8_V2 = variants {mkV2 (mkV "cadastrar") ; mkV2 (mkV "ler") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "registrar") ; } ; --*
lin readable_A = mkA "legível" ; --*
lin reader_1_N = mkN "leitor" ; --*
lin reader_2_N = variants {mkN "assinante" ; mkN "leitor" ; mkN "subscritor" ; } ; --*
lin reader_3_N = mkN "leitor" ; --*
lin reader_4_N = variants {mkN "leitor" ; mkN "parecerista" ; mkN "revisor" ; } ; --*
lin reader_5_N = mkN "revisor" ; --*
lin reader_6_N = mkN "leitor" ; --*
lin reader_7_N = variants {mkN "docente" ; mkN "leitor" ; mkN "prof" ; mkN "prof." ; mkN "professor" ; } ; --*
lin readership_N = mkN "os" ; --*
lin readily_1_Adv = variants {mkAdv "prontamente" ; mkAdv "sem" ; } ; --*
lin readily_2_Adv = mkAdv "prontamente" ; --*
lin readiness_1_N = variants {mkN "preparação" ; mkN "prontidão" ; mkN "rapidez" ; } ; --*
lin reading_1_N = mkN "leitura" ; --*
lin reading_2_N = mkN "leitura" ; --*
lin reading_3_N = variants {mkN "dado" ; mkN "leitura" ; mkN "reading" ; } ; --*
lin reading_4_N = variants {mkN "leitura" ; mkN "material" ; } ; --*
lin reading_5_N = mkN "interpretação" ; --*
lin reading_7_N = variants {mkN "leitura" ; mkN "recital" ; } ; --*
lin reading_PN = mkPN "leitura" ; --*
lin readjust_1_V2 = variants {mkV2 (mkV "readaptar") ; mkV2 (mkV "reajustar") ; } ; --*
lin readjust_2_V2 = mkV2 (mkV "reajustar") ; --*
lin readjustment_2_N = variants {mkN "ajustagem" ; mkN "reajuste" ; mkN "regulação" ; } ; --*
lin readmit_1_V2 = mkV2 (mkV "readmitir") ; --*
lin readmit_2_V2 = mkV2 (mkV "readmitir") ; --*
lin read_N = mkN "leitura" ; --*
lin ready_1_A = variants {mkA "disposto" ; mkA "preparado" ; mkA "prestes" ; mkA "pronto" ; } ; --*
lin ready_1_V2 = variants {mkV2 (mkV "cozinhar") ; mkV2 (mkV "preparar") ; } ; --*
lin ready_2_V2 = variants {mkV2 (mkV "aprontar") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin ready_3_A = variants {mkA "preparado" ; mkA "pronto" ; } ; --*
lin reaffirm_V2 = variants {mkV2 (mkV "reafirmar") ; mkV2 (mkV "reafirmar-se") ; } ; --*
lin re_afforestation_N = variants {mkN "cobertura" ; mkN "reflorestação" ; mkN "reflorestamento" ; } ; --*
lin reagent_N = mkN "reagente" ; --*
lin real_1_A = mkA "existente" ; --*
lin real_1_N = variants {mkN "number" ; mkN "número" ; mkN "Números" ; } ; --*
lin real_2_N = mkN "real" ; --*
lin real_3_A = variants {mkA "genuíno" ; mkA "real" ; mkA "verdadeiro" ; } ; --*
lin real_4_A = mkA "tangível" ; --*
lin real_5_A = variants {mkA "autêntico" ; mkA "genuíno" ; mkA "literal" ; mkA "verdadeiro" ; } ; --*
lin real_7_A = mkA "substancial" ; --*
lin realgar_N = variants {mkN "realgar" ; mkN "Realgar" ; } ; --*
lin realign_V2 = mkV2 (mkV "realinhar") ; --*
lin realism_1_N = variants {mkN "pragmatismo" ; mkN "Pragmatismo" ; } ; --*
lin realism_2_N = variants {mkN "realidade" ; mkN "Realidade" ; mkN "realismo" ; mkN "verdade" ; } ; --*
lin realism_3_N = variants {mkN "realism" ; mkN "realismo" ; } ; --*
lin realism_4_N = mkN "realismo" ; --*
lin realism_5_N = mkN "platonismo" ; --*
lin realist_1_N = mkN "realista" ; --*
lin realist_3_N = mkN "realista" ; --*
lin realistic_1_A = mkA "realístico" ; --*
lin realistic_2_A = mkA "realista" ; --*
lin realistic_3_A = mkA "realista" ; --*
lin reality_1_N = variants {mkN "mundo" ; mkN "realidade" ; } ; --*
lin reality_2_N = variants {mkN "realidade" ; mkN "Realidade" ; mkN "realismo" ; mkN "verdade" ; } ; --*
lin reality_3_N = variants {mkN "realidade" ; mkN "verdade" ; } ; --*
lin realizable_2_A = variants {mkA "conquistável" ; mkA "realizável" ; } ; --*
lin realization_1_N = variants {mkN "compreensão" ; mkN "reconhecimento" ; } ; --*
lin realization_2_N = mkN "realização" ; --*
lin realization_6_N = mkN "realização" ; --*
lin realize_1_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin realize_1_VS = variants {mkVS (mkV "adquirir") ; mkVS (mkV "in") ; mkVS (mkV "obter") ; } ; --*
lin realize_2_VS = mkVS (mkV "realizar") ; --*
lin realize_3_V2 = variants {mkV2 (mkV "concretizar") ; mkV2 (mkV "realizar") ; } ; --*
lin realize_4_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "in") ; mkV2 (mkV "obter") ; } ; --*
lin realize_4_VS = variants {mkVS (mkV "concretizar") ; mkVS (mkV "realizar") ; } ; --*
lin realize_5_V2 = mkV2 (mkV "realizar") ; --*
lin realize_5_VS = variants {mkVS (mkV "compreender") ; mkVS (mkV "entender") ; } ; --*
lin realize_6_VS = variants {mkVS (mkV "compreender") ; mkVS (mkV "entender") ; } ; --*
lin really_1_AdV = mkAdV "sinceramente" ; --*
lin really_2_AdV = mkAdV "na" ; --*
lin really_3_Adv = variants {mkAdv "truth" ; mkAdv "verdadeiramente" ; } ; --*
lin really_AdA = mkAdA "muito" ; --*
lin realm_1_N = mkN "domínio" ; --*
lin realm_2_N = mkN "reino" ; --*
lin realty_N = variants {mkN "estate" ; mkN "imobiliária" ; mkN "imóvel" ; mkN "property" ; } ; --*
lin ream_1_N = mkN "resma" ; --*
lin ream_2_N = mkN "resma" ; --*
lin reanimate_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin reap_1_V2 = variants {mkV2 (mkV "colher") ; mkV2 (mkV "respigar") ; } ; --*
lin reaper_1_N = mkN "Reaper" ; --*
lin reaper_2_N = variants {mkN "Morte" ; mkN "Reaper" ; } ; --*
lin reaping_hook_N = variants {mkN "foice" ; mkN "hook" ; } ; --*
lin reappear_V = mkV "reaparecer" ; --*
lin reappraisal_N = variants {mkN "nova" ; mkN "reavaliação" ; } ; --*
lin reappraise_V2 = mkV2 (mkV "avaliar") ; --*
lin rear_1_V = variants {mkV "empinar" ; mkV "up" ; } ; --*
lin rear_2_N = variants {mkN "end" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin rear_2_V2 = variants {mkV2 (mkV "criar") ; mkV2 (mkV "up") ; } ; --*
lin rear_3_V = mkV "surgir" ; --*
lin rear_4_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin rear_4_V2 = variants {mkV2 (mkV "erguer") ; mkV2 (mkV "levantar") ; } ; --*
lin rear_4_V = variants {mkV "erguer" ; mkV "levantar" ; } ; --*
lin rear_5_N = variants {mkN "costas" ; mkN "dorso" ; mkN "parte" ; mkN "reverso" ; } ; --*
lin rear_5_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "erigir") ; mkV2 (mkV "up") ; } ; --*
lin rear_admiral_N = mkN "admiral" ; --*
lin rear_A = variants {mkA "posterior" ; mkA "traseiro" ; } ; --*
lin rearguard_N = mkN "retaguarda" ; --*
lin rearmost_A = mkA "mais" ; --*
lin rearrangement_N = mkN "rearranjo" ; --*
lin rearrange_V2 = variants {mkV2 (mkV "rearranjar") ; mkV2 (mkV "reordenar") ; } ; --*
lin rearward_2_A = variants {mkA "posterior" ; mkA "traseiro" ; } ; --*
lin rearwards_1_Adv = variants {mkAdv "às" ; mkAdv "de" ; mkAdv "para" ; } ; --*
lin reason_1_N = variants {mkN "causa" ; mkN "motivo" ; mkN "razão" ; } ; --*
lin reason_1_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "chegar") ; mkVS (mkV "concluir") ; mkVS (mkV "decidir") ; mkVS (mkV "inferir") ; mkVS (mkV "out") ; } ; --*
lin reason_2_N = variants {mkN "porquê" ; mkN "razão" ; } ; --*
lin reason_2_V = variants {mkV "arguir" ; mkV "argumentar" ; } ; --*
lin reason_3_N = variants {mkN "entendimento" ; mkN "inteligência" ; mkN "razão" ; } ; --*
lin reason_3_V = mkV "raciocinar" ; --*
lin reason_4_N = variants {mkN "razoabilidade" ; mkN "sensatez" ; } ; --*
lin reasonable_1_A = mkA "razoável" ; --*
lin reasonable_2_A = mkA "razoável" ; --*
lin reasonableness_1_N = variants {mkN "razoabilidade" ; mkN "sensatez" ; } ; --*
lin reasonableness_2_N = mkN "sensatez" ; --*
lin reasoning_N = variants {mkN "Raciocinio" ; mkN "razoamento" ; mkN "thinking" ; mkN "thought" ; } ; --*
lin reasonless_2_A = mkA "sem" ; --*
lin reasonless_3_A = mkA "sem" ; --*
lin reason_out_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "chegar") ; mkV2 (mkV "concluir") ; mkV2 (mkV "decidir") ; mkV2 (mkV "inferir") ; mkV2 (mkV "out") ; } ; --*
lin reassert_V2 = mkV2 (mkV "confirmar") ; --*
lin reassessment_N = variants {mkN "nova" ; mkN "reavaliação" ; } ; --*
lin reassess_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "reavaliar") ; } ; --*
lin reassign_V2 = variants {mkV2 (mkV "redesignar") ; mkV2 (mkV "remanejar") ; mkV2 (mkV "transferir") ; } ; --*
lin reassure_1_V2 = variants {mkV2 (mkV "reassegurar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin reassure_2_V2 = mkV2 (mkV "reassegurar") ; --*
lin reattribute_V2 = mkV2 (mkV "reatribuir") ; --*
lin rebate_1_N = variants {mkN "abatimento" ; mkN "desconto" ; } ; --*
lin rebecca_PN = mkPN "Rebeca" ; --*
lin rebel_1_N = variants {mkN "Johnny" ; mkN "Reb" ; } ; --*
lin rebel_1_V = variants {mkV "amotinar-se" ; mkV "insurgir" ; mkV "insurgir-se" ; mkV "rebelar" ; mkV "rebelar-se" ; mkV "revoltar-se" ; mkV "up" ; } ; --*
lin rebel_2_N = variants {mkN "fighter" ; mkN "rebelde" ; } ; --*
lin rebel_3_N = mkN "rebelde" ; --*
lin rebellion_1_N = mkN "rebelião" ; --*
lin rebellion_2_N = variants {mkN "insurreição" ; mkN "rebelião" ; mkN "revolta" ; } ; --*
lin rebellious_1_A = mkA "rebelde" ; --*
lin rebellious_2_A = mkA "rebelde" ; --*
lin rebellious_3_A = mkA "rebelde" ; --*
lin rebelliousness_2_N = mkN "rebeldia" ; --*
lin rebind_V2 = mkV2 (mkV "reencadernar") ; --*
lin rebirth_1_N = mkN "metempsicose" ; --*
lin rebirth_3_N = mkN "renascimento" ; --*
lin reborn_1_A = variants {mkA "reencarnado" ; mkA "renascido" ; } ; --*
lin rebound_1_N = mkN "repercussão" ; --*
lin rebound_1_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin reboxetine_N = mkN "reboxetina" ; --*
lin rebuff_1_N = mkN "desconsideração" ; --*
lin rebuff_1_V2 = mkV2 (mkV "repelir") ; --*
lin rebuff_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "repelir") ; } ; --*
lin rebuild_V2 = mkV2 (mkV "reconstruir") ; --*
lin rebuke_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin rebut_1_V2 = variants {mkV2 (mkV "rebater") ; mkV2 (mkV "refutar") ; } ; --*
lin rebut_2_V2 = variants {mkV2 (mkV "desmentir") ; mkV2 (mkV "rebater") ; mkV2 (mkV "refutar") ; } ; --*
lin rebuttal_1_N = mkN "refutação" ; --*
lin recalcitrant_2_A = mkA "relutante" ; --*
lin recalculate_V2 = mkV2 (mkV "recalcular") ; --*
lin recall_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; mkV2 (mkV "recordar-se") ; mkV2 (mkV "up") ; } ; --*
lin recall_1_VS = variants {mkVS (mkV "back") ; mkVS (mkV "lembrar") ; mkVS (mkV "recordar") ; mkVS (mkV "recordar-se") ; mkVS (mkV "up") ; } ; --*
lin recall_4_N = variants {mkN "memória" ; mkN "reminiscência" ; } ; --*
lin recall_5_V2 = mkV2 (mkV "chamar") ; --*
lin recall_7_VS = variants {mkVS (mkV "back") ; mkVS (mkV "in") ; mkVS (mkV "retirar") ; } ; --*
lin recantation_N = mkN "abjuração" ; --*
lin recant_V2 = variants {mkV2 (mkV "abjurar") ; mkV2 (mkV "recantar") ; mkV2 (mkV "renunciar") ; } ; --*
lin recap_1_N = variants {mkN "recapitulação" ; mkN "revisão" ; } ; --*
lin recap_2_N = mkN "recauchutagem" ; --*
lin recapitulate_1_V2 = mkV2 (mkV "recapitular") ; --*
lin recapitulation_1_N = mkN "palingenesia" ; --*
lin recapitulation_3_N = variants {mkN "recapitulação" ; mkN "revisão" ; } ; --*
lin recapitulation_4_N = mkN "recapitulação" ; --*
lin recapture_1_V2 = mkV2 (mkV "recapturar") ; --*
lin recapture_2_N = mkN "reconquista" ; --*
lin recapture_4_V2 = mkV2 (mkV "recapturar") ; --*
lin recap_V2 = mkV2 (mkV "recapitular") ; --*
lin recast_3_V2 = variants {mkV2 (mkV "refazer") ; mkV2 (mkV "remodelar") ; } ; --*
lin recede_1_V = variants {mkV "afastar" ; mkV "afastar-se" ; mkV "away" ; mkV "back" ; mkV "recuar" ; mkV "retroceder" ; } ; --*
lin recede_2_V = variants {mkV "back" ; mkV "behind" ; mkV "off" ; mkV "receder" ; } ; --*
lin recede_3_V = mkV "receder" ; --*
lin receding_2_N = mkN "recessão" ; --*
lin receipt_1_N = mkN "recebimento" ; --*
lin receipt_1_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "dar") ; mkV2 (mkV "passar") ; } ; --*
lin receipt_2_N = variants {mkN "nota" ; mkN "recepção" ; mkN "recibo" ; } ; --*
lin receipt_2_V2 = variants {mkV2 (mkV "carimbar") ; mkV2 (mkV "marcar") ; } ; --*
lin receive_11_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "receber") ; } ; --*
lin receive_12_V2 = mkV2 (mkV "comungar") ; --*
lin receive_12_V = mkV "comungar" ; --*
lin receive_13_V2 = mkV2 (mkV "receber") ; --*
lin receive_1_V2 = mkV2 (mkV "receber") ; --*
lin receive_2_V2 = variants {mkV2 (mkV "incorrer") ; mkV2 (mkV "obter") ; mkV2 (mkV "receber") ; } ; --*
lin receive_3_V2 = variants {mkV2 (mkV "captar") ; mkV2 (mkV "up") ; } ; --*
lin receive_4_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "passar") ; mkV2 (mkV "ter") ; } ; --*
lin receive_5_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "in") ; mkV2 (mkV "receber") ; } ; --*
lin receive_6_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "receber") ; } ; --*
lin receive_7_V2 = variants {mkV2 (mkV "acolher") ; mkV2 (mkV "receber") ; mkV2 (mkV "recepcionar") ; } ; --*
lin receive_7_V = variants {mkV "acolher" ; mkV "receber" ; mkV "recepcionar" ; } ; --*
lin receive_9_V2 = variants {mkV2 (mkV "encontrar") ; mkV2 (mkV "receber") ; } ; --*
lin receiver_1_N = variants {mkN "Radioreceptor" ; mkN "radiorreceptor" ; mkN "recetor" ; mkN "system" ; } ; --*
lin receiver_4_N = mkN "destinatário" ; --*
lin receiving_set_N = variants {mkN "rádio" ; mkN "receiver" ; mkN "set" ; } ; --*
lin recent_1_A = variants {mkA "novo" ; mkA "recente" ; } ; --*
lin recent_2_A = variants {mkA "novo" ; mkA "recente" ; } ; --*
lin receptacle_1_N = mkN "recipiente" ; --*
lin receptacle_2_N = mkN "tálamo" ; --*
lin reception_1_N = variants {mkN "bem-vindo" ; mkN "recebimento" ; mkN "recepção" ; } ; --*
lin reception_2_N = mkN "recepção" ; --*
lin reception_3_N = mkN "recepção" ; --*
lin reception_4_N = mkN "recebimento" ; --*
lin reception_5_N = mkN "recepção" ; --*
lin receptive_3_A = variants {mkA "centrípeto" ; mkA "sensorial" ; } ; --*
lin receptor_2_N = variants {mkN "organ" ; mkN "receptor" ; mkN "Receptor" ; } ; --*
lin recess_1_N = mkN "pausa" ; --*
lin recess_2_N = mkN "nicho" ; --*
lin recess_3_N = variants {mkN "baia" ; mkN "baía" ; mkN "desfiladeiro" ; mkN "enseada" ; mkN "fiorde" ; mkN "golfo" ; } ; --*
lin recess_4_N = mkN "nicho" ; --*
lin recess_5_N = variants {mkN "out" ; mkN "pausa" ; } ; --*
lin recession_1_N = mkN "recessão" ; --*
lin recession_2_N = mkN "nicho" ; --*
lin recession_4_N = variants {mkN "back" ; mkN "recessão" ; } ; --*
lin recession_5_N = mkN "recessão" ; --*
lin recidivism_N = mkN "reincidência" ; --*
lin recife_PN = variants {mkPN "Recife" ; mkPN "Recife(pernambuco)" ; } ; --*
lin recipe_N = variants {mkN "fórmula" ; mkN "prescrição" ; mkN "receita" ; mkN "Receita" ; } ; --*
lin recipient_1_N = mkN "destinatário" ; --*
lin reciprocal_1_A = variants {mkA "mútuo" ; mkA "recíproca" ; mkA "recíproco" ; } ; --*
lin reciprocal_2_N = variants {mkN "inverse" ; mkN "inverso" ; } ; --*
lin reciprocality_N = mkN "reciprocidade" ; --*
lin reciprocate_2_V2 = variants {mkV2 (mkV "mutuar") ; mkV2 (mkV "reciprocar") ; } ; --*
lin reciprocation_3_N = mkN "intercâmbio" ; --*
lin reciprocity_1_N = mkN "reciprocidade" ; --*
lin reciprocity_2_N = variants {mkN "intercambio" ; mkN "reciprocidade" ; } ; --*
lin recission_1_N = mkN "rescisão" ; --*
lin recital_1_N = variants {mkN "conto" ; mkN "história" ; mkN "narração" ; } ; --*
lin recital_2_N = mkN "recital" ; --*
lin recital_3_N = variants {mkN "leitura" ; mkN "recital" ; } ; --*
lin recitation_2_N = variants {mkN "leitura" ; mkN "recital" ; } ; --*
lin recitation_4_N = variants {mkN "exercício" ; mkN "prática" ; mkN "session" ; } ; --*
lin recitative_N = mkN "recitativo" ; --*
lin recite_1_V2 = variants {mkV2 (mkV "citar") ; mkV2 (mkV "declamar") ; mkV2 (mkV "recitar") ; } ; --*
lin recite_1_V = variants {mkV "citar" ; mkV "declamar" ; mkV "recitar" ; } ; --*
lin recite_2_V2 = mkV2 (mkV "recitar") ; --*
lin recite_4_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "narrar") ; mkV2 (mkV "recontar") ; } ; --*
lin recite_5_V2 = mkV2 (mkV "enumerar") ; --*
lin reckless_1_A = variants {mkA "Inconsequente" ; mkA "temerário" ; } ; --*
lin recklessness_N = mkN "descuido" ; --*
lin reckon_1_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "esperar") ; mkVS (mkV "pensar") ; mkVS (mkV "supor") ; } ; --*
lin reckon_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "avaliar") ; mkVS (mkV "calcular") ; mkVS (mkV "on") ; mkVS (mkV "predizer") ; mkVS (mkV "prever") ; mkVS (mkV "prognosticar") ; } ; --*
lin reckon_3_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "considerar") ; mkV2 (mkV "ver") ; } ; --*
lin reckon_4_VS = variants {mkVS (mkV "calcular") ; mkVS (mkV "computar") ; mkVS (mkV "out") ; } ; --*
lin reckon_6_VS = variants {mkVS (mkV "considerar") ; mkVS (mkV "contar") ; } ; --*
lin reckoner_1_N = variants {mkN "computador" ; mkN "estimador" ; } ; --*
lin reckoning_1_N = mkN "cálculo" ; --*
lin reckoning_2_N = mkN "cálculo" ; --*
lin reckoning_3_N = variants {mkN "conta" ; mkN "contagem" ; mkN "enumeração" ; } ; --*
lin reckon_on_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin reclaim_1_V2 = mkV2 (mkV "reaver") ; --*
lin reclaim_3_V2 = variants {mkV2 (mkV "reformar") ; mkV2 (mkV "regenerar") ; mkV2 (mkV "retificar") ; } ; --*
lin reclaim_5_V2 = variants {mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin reclaimable_A = variants {mkA "reciclável" ; mkA "reusável" ; mkA "reutilizável" ; } ; --*
lin reclamation_2_N = mkN "recuperação" ; --*
lin reclassify_V2 = mkV2 (mkV "reclassificar") ; --*
lin recline_2_V2 = mkV2 (mkV "reclinar") ; --*
lin recline_3_V = variants {mkV "estar" ; mkV "jazer" ; } ; --*
lin recluse_A = mkA "isolado" ; --*
lin recluse_N = mkN "eremita" ; --*
lin recognition_1_N = variants {mkN "Agradecimento" ; mkN "reconhecimento" ; mkN "Reconhecimento" ; } ; --*
lin recognition_2_N = variants {mkN "identificação" ; mkN "reconhecimento" ; } ; --*
lin recognition_3_N = variants {mkN "crédito" ; mkN "reconhecimento" ; } ; --*
lin recognition_4_N = variants {mkN "compreensão" ; mkN "reconhecimento" ; } ; --*
lin recognizable_1_A = mkA "reconhecível" ; --*
lin recognize_1_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "reconhecer") ; } ; --*
lin recognize_2_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin recognize_2_VS = variants {mkVS (mkV "compreender") ; mkVS (mkV "entender") ; } ; --*
lin recognize_3_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin recognize_4_V2 = mkV2 (mkV "reconhecer") ; --*
lin recognize_4_VS = mkVS (mkV "reconhecer") ; --*
lin recognize_5_V2 = variants {mkV2 (mkV "credenciar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin recognize_6_V2 = variants {mkV2 (mkV "cumprimentar") ; mkV2 (mkV "saudar") ; } ; --*
lin recognize_6_VS = variants {mkVS (mkV "cumprimentar") ; mkVS (mkV "saudar") ; } ; --*
lin recognize_7_V2 = variants {mkV2 (mkV "agradecer") ; mkV2 (mkV "apreciar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin recognize_8_V2 = mkV2 (mkV "reconhecer") ; --*
lin recognize_8_VS = mkVS (mkV "reconhecer") ; --*
lin recoil_1_N = variants {mkN "coice" ; mkN "recuo" ; } ; --*
lin recoil_1_V = mkV "recuar" ; --*
lin recoil_2_N = mkN "repercussão" ; --*
lin recoil_3_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin recoil_4_V = variants {mkV "back" ; mkV "recuo" ; } ; --*
lin recollection_1_N = mkN "memória" ; --*
lin recollection_2_N = variants {mkN "memória" ; mkN "reminiscência" ; } ; --*
lin recollection_3_N = mkN "memória" ; --*
lin recollect_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; mkV2 (mkV "recordar-se") ; mkV2 (mkV "up") ; } ; --*
lin recombinant_A = mkA "recombinante" ; --*
lin recombinant_N = mkN "recombinante" ; --*
lin recommend_2_V2 = variants {mkV2 (mkV "preconizar") ; mkV2 (mkV "recomendar") ; } ; --*
lin recommendation_1_N = mkN "recomendação" ; --*
lin recommendation_2_N = variants {mkN "recomendação" ; mkN "recomendações" ; mkN "word" ; } ; --*
lin recommendation_3_N = mkN "passaporte" ; --*
lin recommend_V2V = variants {mkV2V (mkV "preconizar") ; mkV2V (mkV "recomendar") ; } ; --*
lin recommend_VS = variants {mkVS (mkV "advocar") ; mkVS (mkV "recomendar") ; mkVS (mkV "urgir") ; } ; --*
lin recompense_1_N = mkN "recompensa" ; --*
lin recompense_1_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "indemnizar") ; mkV2 (mkV "indenizar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; } ; --*
lin recompense_2_N = variants {mkN "compensação" ; mkN "Compensação" ; } ; --*
lin recompense_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; mkV2 (mkV "remunerar") ; } ; --*
lin reconcile_1_V2 = variants {mkV2 (mkV "ajustar") ; mkV2 (mkV "compatibilizar") ; mkV2 (mkV "conciliar") ; } ; --*
lin reconcile_2_V2 = variants {mkV2 (mkV "compatibilizar") ; mkV2 (mkV "conciliar") ; mkV2 (mkV "reconciliar") ; } ; --*
lin reconcile_3_V2 = variants {mkV2 (mkV "conciliar") ; mkV2 (mkV "reconciliar") ; mkV2 (mkV "up") ; } ; --*
lin reconcile_4_V2 = variants {mkV2 (mkV "reconciliar") ; mkV2 (mkV "resignar") ; mkV2 (mkV "resignar-se") ; mkV2 (mkV "submeter") ; } ; --*
lin reconciliation_1_N = mkN "reconciliação" ; --*
lin recondite_A = variants {mkA "abstracto" ; mkA "abstrato" ; mkA "abstruso" ; mkA "recôndito" ; } ; --*
lin reconditeness_2_N = mkN "obscuridade" ; --*
lin reconsider_1_V2 = mkV2 (mkV "reconsiderar") ; --*
lin reconsider_2_V2 = mkV2 (mkV "reconsiderar") ; --*
lin reconsider_2_VS = mkVS (mkV "reconsiderar") ; --*
lin reconstruct_1_V2 = variants {mkV2 (mkV "reconstruir") ; mkV2 (mkV "retraçar") ; } ; --*
lin reconstruct_2_V2 = mkV2 (mkV "reconstruir") ; --*
lin reconstruct_4_V2 = mkV2 (mkV "restabelecer") ; --*
lin reconstruct_5_V2 = variants {mkV2 (mkV "reconstruir") ; mkV2 (mkV "refazer") ; } ; --*
lin reconstruction_1_N = variants {mkN "Period" ; mkN "Reconstrução" ; } ; --*
lin reconstruction_2_N = mkN "reconstrução" ; --*
lin reconstruction_3_N = mkN "reconstrução" ; --*
lin reconstruction_4_N = variants {mkN "memory" ; mkN "reconstrução" ; } ; --*
lin reconstructive_A = variants {mkA "reconstructor" ; mkA "Reconstructor" ; } ; --*
lin record_1_N = mkN "registro" ; --*
lin record_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "registar") ; mkV2 (mkV "registrar") ; } ; --*
lin record_2_N = variants {mkN "disco" ; mkN "record" ; mkN "recording" ; } ; --*
lin record_2_V2 = mkV2 (mkV "gravar") ; --*
lin record_3_N = mkN "recorde" ; --*
lin record_3_V2 = variants {mkV2 (mkV "cadastrar") ; mkV2 (mkV "ler") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "registrar") ; } ; --*
lin record_4_N = variants {mkN "expediente" ; mkN "record" ; } ; --*
lin record_4_V2 = variants {mkV2 (mkV "perceber") ; mkV2 (mkV "registrar") ; } ; --*
lin record_6_N = mkN "récorde" ; --*
lin record_7_N = mkN "index" ; --*
lin record_8_N = variants {mkN "ficha" ; mkN "record" ; } ; --*
lin recorder_4_N = variants {mkN "flauta" ; mkN "flute" ; mkN "pipe" ; } ; --*
lin recording_2_N = mkN "gravação" ; --*
lin recording_3_N = variants {mkN "gravação" ; mkN "Gravação" ; } ; --*
lin record_player_N = variants {mkN "fonógrafo" ; mkN "gramofone" ; mkN "player" ; } ; --*
lin re_count_1_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "narrar") ; mkV2 (mkV "recontar") ; } ; --*
lin recount_1_VS = variants {mkVS (mkV "contar") ; mkVS (mkV "narrar") ; mkVS (mkV "recontar") ; } ; --*
lin re_count_N = mkN "recontagem" ; --*
lin recoup_1_V2 = variants {mkV2 (mkV "reembolsar") ; mkV2 (mkV "ressarcir") ; } ; --*
lin recoup_2_V2 = mkV2 (mkV "recuperar") ; --*
lin recoup_3_V2 = variants {mkV2 (mkV "reter") ; mkV2 (mkV "segurar") ; } ; --*
lin recourse_1_N = mkN "recurso" ; --*
lin recourse_2_N = variants {mkN "recurso" ; mkN "refúgio" ; } ; --*
lin re_cover_1_V2 = variants {mkV2 (mkV "re-adquirir") ; mkV2 (mkV "reconquistar") ; mkV2 (mkV "recuperar") ; mkV2 (mkV "reganhar") ; } ; --*
lin recover_1_V = variants {mkV "re-adquirir" ; mkV "reconquistar" ; mkV "recuperar" ; mkV "reganhar" ; } ; --*
lin re_cover_2_V2 = variants {mkV2 (mkV "convalescer") ; mkV2 (mkV "melhorar") ; mkV2 (mkV "recuperar") ; } ; --*
lin recover_2_V = variants {mkV "convalescer" ; mkV "melhorar" ; mkV "recuperar" ; } ; --*
lin recover_3_V = variants {mkV "back" ; mkV "recuperar" ; } ; --*
lin re_cover_4_V2 = mkV2 (mkV "recuperar") ; --*
lin recover_4_V = mkV "recuperar" ; --*
lin re_cover_6_V2 = mkV2 (mkV "recobrir") ; --*
lin recoverable_A = mkA "recuperável" ; --*
lin recovery_1_N = mkN "recuperação" ; --*
lin recovery_2_N = variants {mkN "convalescência" ; mkN "recuperação" ; } ; --*
lin recovery_3_N = mkN "recuperação" ; --*
lin recreant_1_N = variants {mkN "medricas" ; mkN "medroso" ; } ; --*
lin recreant_2_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin recreate_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin re_create_1_V2 = mkV2 (mkV "recriar") ; --*
lin re_create_2_V2 = mkV2 (mkV "copiar") ; --*
lin recreate_3_V2 = variants {mkV2 (mkV "alentar") ; mkV2 (mkV "empolgar") ; mkV2 (mkV "encorajar") ; mkV2 (mkV "incentivar") ; } ; --*
lin re_create_3_V2 = mkV2 (mkV "recriar") ; --*
lin recreation_1_N = variants {mkN "diversão" ; mkN "recreaçao" ; } ; --*
lin recreation_2_N = variants {mkN "recreação" ; mkN "Recreação" ; } ; --*
lin recruit_1_N = variants {mkN "recruit" ; mkN "recruta" ; } ; --*
lin recruit_1_V2 = variants {mkV2 (mkV "inscrever") ; mkV2 (mkV "recrutar") ; mkV2 (mkV "registrar") ; } ; --*
lin recruit_2_V2 = mkV2 (mkV "recrutar") ; --*
lin recruit_3_V2 = variants {mkV2 (mkV "aliciar") ; mkV2 (mkV "angariar") ; mkV2 (mkV "engajar") ; mkV2 (mkV "recrutar") ; } ; --*
lin recruiter_1_N = mkN "recrutador" ; --*
lin recruiter_2_N = mkN "Headhunter" ; --*
lin recruitment_N = mkN "recrutamento" ; --*
lin rectal_A = mkA "rectal" ; --*
lin rectangle_N = variants {mkN "rectângulo" ; mkN "Retangulo" ; mkN "retângulo" ; } ; --*
lin rectangular_1_A = variants {mkA "rectangular" ; mkA "retangular" ; } ; --*
lin rectangular_2_A = variants {mkA "ortogonal" ; mkA "perpendicular" ; mkA "retangular" ; } ; --*
lin rectangularity_N = mkN "retangularidade" ; --*
lin rectification_3_N = variants {mkN "correção" ; mkN "retificação" ; } ; --*
lin rectifier_1_N = mkN "Circuito" ; --*
lin rectify_1_V2 = mkV2 (mkV "retificar") ; --*
lin rectify_2_V2 = mkV2 (mkV "refinar") ; --*
lin rectify_3_V2 = variants {mkV2 (mkV "reformar") ; mkV2 (mkV "regenerar") ; mkV2 (mkV "retificar") ; } ; --*
lin rectify_4_V2 = variants {mkV2 (mkV "rectificar") ; mkV2 (mkV "retificar") ; } ; --*
lin rectify_5_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "retificar") ; } ; --*
lin rectify_6_V2 = mkV2 (mkV "retificar") ; --*
lin rectilinear_1_A = mkA "rectilíneo" ; --*
lin rectitude_N = mkN "retidão" ; --*
lin rector_N = variants {mkN "cura" ; mkN "ministro" ; mkN "of" ; mkN "pároco" ; mkN "pastor" ; mkN "reitor" ; mkN "sacerdate" ; mkN "vigário" ; } ; --*
lin rectory_N = mkN "reitoria" ; --*
lin rectum_N = mkN "reto" ; --*
lin recuperate_1_V2 = mkV2 (mkV "recuperar") ; --*
lin recuperate_2_V = variants {mkV "back" ; mkV "recuperar" ; } ; --*
lin recuperate_4_V = variants {mkV "convalescer" ; mkV "melhorar" ; mkV "recuperar" ; } ; --*
lin recuperation_N = variants {mkN "convalescência" ; mkN "recuperação" ; } ; --*
lin recur_1_V = mkV "reincidir" ; --*
lin recur_2_V = variants {mkV "back" ; mkV "recorrer" ; mkV "regressar" ; } ; --*
lin recur_3_V = variants {mkV "back" ; mkV "recorrer" ; } ; --*
lin recurrence_N = variants {mkN "recorrência" ; mkN "repetição" ; } ; --*
lin recurrent_A = variants {mkA "perene" ; mkA "recorrente" ; } ; --*
lin recursive_A = mkA "recursivo" ; --*
lin recycle_1_V2 = mkV2 (mkV "reciclar") ; --*
lin recycle_2_V2 = variants {mkV2 (mkV "reaproveitar") ; mkV2 (mkV "reciclar") ; mkV2 (mkV "reprocessar") ; mkV2 (mkV "reusar") ; mkV2 (mkV "reutilizar") ; } ; --*
lin recycling_2_N = variants {mkN "reciclagem" ; mkN "reutilização" ; } ; --*
lin red_1_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin red_1_N = variants {mkN "encarnado" ; mkN "escarlate" ; mkN "rubra" ; mkN "rubro" ; mkN "vermelhidão" ; mkN "vermelho" ; } ; --*
lin red_2_A = mkA "violento" ; --*
lin red_3_A = variants {mkA "escarlate" ; mkA "rúbeo" ; mkA "rubicundo" ; mkA "rúbido" ; mkA "rubro" ; mkA "rufo" ; mkA "rússeo" ; mkA "vermelho" ; } ; --*
lin red_4_N = variants {mkN "ink" ; mkN "perda" ; mkN "vermelho" ; } ; --*
lin redact_1_N = variants {mkN "man" ; mkN "redactor" ; mkN "redator" ; } ; --*
lin redact_1_V2 = mkV2 (mkV "formular") ; --*
lin redact_2_V2 = mkV2 (mkV "redigir") ; --*
lin redaction_1_N = variants {mkN "Edição" ; mkN "redação" ; mkN "redacção" ; } ; --*
lin redbreast_N = variants {mkN "pisco" ; mkN "redbreast" ; mkN "rubecola" ; mkN "World" ; } ; --*
lin redden_1_V = variants {mkV "avermelhar" ; mkV "corar" ; mkV "enrubescer" ; mkV "rosar" ; mkV "ruborizar" ; } ; --*
lin redden_2_V2 = variants {mkV2 (mkV "avermelhar") ; mkV2 (mkV "vermelhar") ; } ; --*
lin redden_3_V = variants {mkV "avermelhar" ; mkV "vermelhar" ; } ; --*
lin reddish_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin redeem_1_V2 = mkV2 (mkV "redimir") ; --*
lin redeem_2_V2 = mkV2 (mkV "redimir") ; --*
lin redeem_3_V2 = variants {mkV2 (mkV "redimir") ; mkV2 (mkV "resgatar") ; } ; --*
lin redeem_4_V2 = variants {mkV2 (mkV "remir") ; mkV2 (mkV "resgatar") ; } ; --*
lin redeemer_1_N = variants {mkN "Christ" ; mkN "Cristo" ; mkN "Jesus" ; mkN "Nazarene" ; mkN "of" ; mkN "Shepherd" ; } ; --*
lin redeemer_2_N = variants {mkN "Jesus" ; mkN "Jesús" ; } ; --*
lin redefine_2_V2 = mkV2 (mkV "redefinir") ; --*
lin redefinition_N = mkN "redefinição" ; --*
lin redemption_1_N = variants {mkN "redenção" ; mkN "salvação" ; } ; --*
lin redeploy_V2 = mkV2 (mkV "reimplantar") ; --*
lin redesign_V2 = mkV2 (mkV "redesenhar") ; --*
lin redevelop_2_V2 = mkV2 (mkV "reformular") ; --*
lin redevelopment_N = mkN "renovação" ; --*
lin redhead_1_N = variants {mkN "ruiva" ; mkN "ruivo" ; } ; --*
lin red_hot_1_A = mkA "voluptário" ; --*
lin rediscover_V2 = variants {mkV2 (mkV "redescobrir") ; mkV2 (mkV "reencontrar") ; } ; --*
lin rediscovery_N = mkN "redescoberta" ; --*
lin redistribute_V2 = mkV2 (mkV "redistribuir") ; --*
lin redneck_N = variants {mkN "caipira" ; mkN "Redneck" ; } ; --*
lin redness_1_N = mkN "inflamação" ; --*
lin redness_2_N = variants {mkN "encarnado" ; mkN "escarlate" ; mkN "rubra" ; mkN "rubro" ; mkN "vermelhidão" ; mkN "vermelho" ; } ; --*
lin redo_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "refazer") ; mkV2 (mkV "remodelar") ; } ; --*
lin redo_2_V2 = variants {mkV2 (mkV "reconstruir") ; mkV2 (mkV "refazer") ; } ; --*
lin redolence_N = variants {mkN "aroma" ; mkN "fragância" ; } ; --*
lin redolent_1_A = variants {mkA "evocador" ; mkA "nostálgico" ; mkA "sugestivo" ; } ; --*
lin redouble_1_V2 = mkV2 (mkV "redobrar") ; --*
lin redoubt_2_N = variants {mkN "reduto" ; mkN "Reduto" ; } ; --*
lin redress_1_N = mkN "indemnizações" ; --*
lin redress_2_N = mkN "reparação" ; --*
lin redress_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "corrigir") ; } ; --*
lin reduce_10_V2 = mkV2 (mkV "desoxidar") ; --*
lin reduce_10_V = mkV "desoxidar" ; --*
lin reduce_11_V2 = mkV2 (mkV "restringir") ; --*
lin reduce_12_V2 = variants {mkV2 (mkV "defazer") ; mkV2 (mkV "down") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "subjugar") ; } ; --*
lin reduce_16_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin reduce_17_V = variants {mkV "diminuir" ; mkV "down" ; } ; --*
lin reduce_18_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "ferver") ; mkV2 (mkV "reduzir") ; } ; --*
lin reduce_19_V2 = variants {mkV2 (mkV "diluir") ; mkV2 (mkV "out") ; } ; --*
lin reduce_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin reduce_20_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "emagrecer") ; mkV2 (mkV "off") ; mkV2 (mkV "perder") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "weight") ; } ; --*
lin reduce_20_V = variants {mkV "down" ; mkV "emagrecer" ; mkV "off" ; mkV "perder" ; mkV "reduzir" ; mkV "weight" ; } ; --*
lin reduce_5_V2 = variants {mkV2 (mkV "rebaixar") ; mkV2 (mkV "reduzir") ; } ; --*
lin reduce_7_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "ficar") ; mkV2 (mkV "reduzir") ; } ; --*
lin reduce_9_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; } ; --*
lin reduced_1_A = mkA "reduzido" ; --*
lin reduced_2_A = mkA "reduzido" ; --*
lin reducer_1_N = variants {mkN "agent" ; mkN "redução" ; } ; --*
lin reducing_1_N = mkN "redução" ; --*
lin reductio_ad_absurdum_N = variants {mkN "ad" ; mkN "prova" ; } ; --*
lin reduction_1_N = variants {mkN "diminuição" ; mkN "redução" ; } ; --*
lin reduction_2_N = mkN "redução" ; --*
lin reduction_3_N = mkN "simplificação" ; --*
lin reductionism_2_N = variants {mkN "reducionismo" ; mkN "Reducionismo" ; } ; --*
lin reductive_A = mkA "redutor" ; --*
lin redundance_N = variants {mkN "redundância" ; mkN "repetição" ; } ; --*
lin redundancy_1_N = mkN "redundância" ; --*
lin redundancy_2_N = variants {mkN "redundância" ; mkN "repetição" ; } ; --*
lin redundancy_4_N = mkN "redundância" ; --*
lin redundant_1_A = variants {mkA "excessivo" ; mkA "extra" ; mkA "redundante" ; mkA "reduntante" ; mkA "supérfluo" ; } ; --*
lin redundant_2_A = variants {mkA "desnecessário" ; mkA "excessivo" ; mkA "pleonástico" ; mkA "redundante" ; mkA "supérfluo" ; mkA "tautológico" ; } ; --*
lin reduplicate_1_V2 = mkV2 (mkV "reduplicar") ; --*
lin reduplicate_2_V2 = mkV2 (mkV "replicar") ; --*
lin reduplication_1_N = mkN "Anadiplose" ; --*
lin reduplication_4_N = mkN "reiteração" ; --*
lin redwood_2_N = mkN "sequóia" ; --*
lin reed_1_N = mkN "juncos" ; --*
lin reed_2_N = variants {mkN "John" ; mkN "Reed" ; } ; --*
lin reed_3_N = variants {mkN "Reed" ; mkN "Walter" ; } ; --*
lin reed_4_N = variants {mkN "caniço" ; mkN "junco" ; mkN "reed" ; } ; --*
lin reed_5_N = variants {mkN "instrument" ; mkN "palheta" ; } ; --*
lin reedy_2_A = mkA "magro" ; --*
lin reef_1_N = variants {mkN "arrecife" ; mkN "Arrecife" ; mkN "escolho" ; mkN "recife" ; mkN "recifes" ; mkN "recive" ; mkN "restinga" ; } ; --*
lin reef_2_N = mkN "Witwatersrand" ; --*
lin reefer_N = variants {mkN "baseado" ; mkN "Baseado" ; mkN "cigarette" ; } ; --*
lin reef_knot_N = mkN "knot" ; --*
lin reek_2_V = variants {mkV "feder" ; mkV "tresandar" ; } ; --*
lin reek_4_V = mkV "exalar" ; --*
lin reek_N = variants {mkN "fedor" ; mkN "pejo" ; } ; --*
lin reel_2_V = variants {mkV "around" ; mkV "girar" ; } ; --*
lin reel_4_N = variants {mkN "bobina" ; mkN "carretel" ; mkN "carrinho" ; } ; --*
lin reelection_N = mkN "reeleição" ; --*
lin re_elect_V2 = mkV2 (mkV "reeleger") ; --*
lin re_emerge_V = mkV "reaparecer" ; --*
lin re_emphasize_1_V2 = mkV2 (mkV "re-enfatizar") ; --*
lin reenactment_N = mkN "reconstituição" ; --*
lin re_enter_V2 = mkV2 (mkV "reentrar") ; --*
lin re_entry_N = mkN "reentrada" ; --*
lin re_establish_V2 = variants {mkV2 (mkV "restabelecer") ; mkV2 (mkV "restaurar") ; } ; --*
lin re_evaluate_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "reavaliar") ; } ; --*
lin reevaluation_N = mkN "reavaliação" ; --*
lin re_examine_V2 = mkV2 (mkV "re-examinar") ; --*
lin reexamine_V = variants {mkV "reexaminar" ; mkV "rever" ; } ; --*
lin refashion_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "refazer") ; mkV2 (mkV "remodelar") ; } ; --*
lin refer_1_V2 = variants {mkV2 (mkV "aludir") ; mkV2 (mkV "citar") ; mkV2 (mkV "mencionar") ; mkV2 (mkV "up") ; } ; --*
lin refer_1_V = variants {mkV "aludir" ; mkV "citar" ; mkV "mencionar" ; mkV "up" ; } ; --*
lin refer_2_V = variants {mkV "concernir" ; mkV "doe" ; mkV "on" ; mkV "referir" ; mkV "relacionar" ; mkV "to" ; } ; --*
lin refer_3_V2 = mkV2 (mkV "referir") ; --*
lin refer_4_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "referir") ; } ; --*
lin refer_5_V = variants {mkV "consultar" ; mkV "fazer" ; mkV "up" ; } ; --*
lin refer_6_V2 = variants {mkV2 (mkV "denotar") ; mkV2 (mkV "significar") ; } ; --*
lin refer_7_V = mkV "referir" ; --*
lin referable_A = mkA "atribuível" ; --*
lin referee_1_N = variants {mkN "Arbitro" ; mkN "árbitro" ; mkN "Árbitros" ; mkN "juiz" ; } ; --*
lin referee_2_N = variants {mkN "leitor" ; mkN "parecerista" ; mkN "revisor" ; } ; --*
lin referee_2_V2 = variants {mkV2 (mkV "arbitrar") ; mkV2 (mkV "review") ; } ; --*
lin referee_2_V = variants {mkV "arbitrar" ; mkV "review" ; } ; --*
lin reference_10_N = mkN "Referência" ; --*
lin reference_1_N = variants {mkN "alusão" ; mkN "referência" ; } ; --*
lin reference_2_N = variants {mkN "citação" ; mkN "menção" ; mkN "referência" ; } ; --*
lin reference_3_N = variants {mkN "of" ; mkN "point" ; mkN "referência" ; } ; --*
lin reference_4_N = variants {mkN "book" ; mkN "Obra" ; mkN "of" ; mkN "work" ; } ; --*
lin reference_6_N = mkN "denotação" ; --*
lin reference_7_N = mkN "consulta" ; --*
lin reference_8_N = mkN "referência" ; --*
lin reference_9_N = variants {mkN "address" ; mkN "endereço" ; } ; --*
lin referendum_N = variants {mkN "referendo" ; mkN "referendum" ; } ; --*
lin referent_1_N = mkN "referente" ; --*
lin referral_2_N = mkN "recomendação" ; --*
lin refilling_N = mkN "substituição" ; --*
lin refill_V2 = variants {mkV2 (mkV "again") ; mkV2 (mkV "encher") ; mkV2 (mkV "reencher") ; } ; --*
lin refinance_V2 = mkV2 (mkV "refinanciar") ; --*
lin refinance_V = mkV "refinanciar" ; --*
lin refine_1_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; mkV2 (mkV "refinar") ; } ; --*
lin refine_2_V2 = variants {mkV2 (mkV "complicar") ; mkV2 (mkV "refinar") ; } ; --*
lin refine_4_V2 = mkV2 (mkV "refinar") ; --*
lin refined_1_A = variants {mkA "grácil" ; mkA "mimoso" ; } ; --*
lin refined_3_A = variants {mkA "cortês" ; mkA "educado" ; mkA "polido" ; } ; --*
lin refined_5_A = variants {mkA "elegante" ; mkA "esbelto" ; mkA "gracioso" ; } ; --*
lin refinement_1_N = mkN "refinamento" ; --*
lin refinement_3_N = mkN "refinação" ; --*
lin refinement_4_N = mkN "matiz" ; --*
lin refinery_N = variants {mkN "refinaria" ; mkN "refinarias" ; } ; --*
lin refining_N = mkN "refinação" ; --*
lin refinisher_N = mkN "restaurador" ; --*
lin refit_V2 = mkV2 (mkV "reaparelhar") ; --*
lin refit_V = mkV "reaparelhar" ; --*
lin reflect_1_V2 = variants {mkV2 (mkV "refletir") ; mkV2 (mkV "reverberar") ; } ; --*
lin reflect_2_V2 = variants {mkV2 (mkV "contemplar") ; mkV2 (mkV "over") ; mkV2 (mkV "refletir") ; } ; --*
lin reflect_2_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin reflect_3_V2 = mkV2 (mkV "refletir") ; --*
lin reflect_4_V = variants {mkV "luzir" ; mkV "refletir" ; } ; --*
lin reflect_5_V2 = mkV2 (mkV "refletir") ; --*
lin reflection_1_N = variants {mkN "contemplação" ; mkN "especulação" ; mkN "meditação" ; mkN "pensamento" ; mkN "reflexão" ; } ; --*
lin reflection_2_N = mkN "reflexão" ; --*
lin reflection_3_N = variants {mkN "manifestação" ; mkN "reflexão" ; } ; --*
lin reflection_4_N = variants {mkN "image" ; mkN "reflexão" ; } ; --*
lin reflection_5_N = mkN "reflexão" ; --*
lin reflection_7_N = variants {mkN "observação" ; mkN "reflexão" ; } ; --*
lin reflection_8_N = variants {mkN "reflectividade" ; mkN "reflexão" ; } ; --*
lin reflective_2_A = mkA "meditabundo" ; --*
lin reflector_2_N = variants {mkN "telescope" ; mkN "Telescópio" ; } ; --*
lin reflex_A = mkA "automático" ; --*
lin reflexion_1_N = mkN "reflexão" ; --*
lin reflexion_2_N = variants {mkN "manifestação" ; mkN "reflexão" ; } ; --*
lin reflexion_3_N = variants {mkN "observação" ; mkN "reflexão" ; } ; --*
lin reflexion_4_N = variants {mkN "contemplação" ; mkN "especulação" ; mkN "meditação" ; mkN "pensamento" ; mkN "reflexão" ; } ; --*
lin reflexion_5_N = variants {mkN "reflectividade" ; mkN "reflexão" ; } ; --*
lin reflexion_6_N = variants {mkN "image" ; mkN "reflexão" ; } ; --*
lin reflexion_7_N = mkN "reflexão" ; --*
lin reflexive_1_A = mkA "automático" ; --*
lin reflexive_2_A = variants {mkA "auto-referente" ; mkA "reflexivo" ; } ; --*
lin reflexive_N = variants {mkN "pronome" ; mkN "pronoun" ; } ; --*
lin reflexivity_2_N = mkN "reflexiva" ; --*
lin reflex_N = variants {mkN "action" ; mkN "reaction" ; mkN "reflex" ; mkN "reflexo" ; mkN "response" ; } ; --*
lin reflexology_2_N = mkN "Reflexoterapia" ; --*
lin reflux_1_N = mkN "refluxo" ; --*
lin ref_N = variants {mkN "Arbitro" ; mkN "árbitro" ; mkN "Árbitros" ; mkN "juiz" ; } ; --*
lin refocus_2_V2 = mkV2 (mkV "refocar") ; --*
lin reforestation_N = variants {mkN "cobertura" ; mkN "reflorestação" ; mkN "reflorestamento" ; } ; --*
lin reform_1_N = variants {mkN "mudança" ; mkN "reforma" ; } ; --*
lin reform_2_N = mkN "reforma" ; --*
lin re_form_2_V2 = variants {mkV2 (mkV "reformar") ; mkV2 (mkV "regenerar") ; mkV2 (mkV "retificar") ; } ; --*
lin re_form_5_V2 = mkV2 (mkV "reformar") ; --*
lin reformation_2_N = variants {mkN "Reforma" ; mkN "Reformation" ; } ; --*
lin reformation_3_N = mkN "recuperação" ; --*
lin reformer_1_N = variants {mkN "cruzado" ; mkN "reformador" ; mkN "reformer" ; } ; --*
lin reformist_N = variants {mkN "cruzado" ; mkN "reformador" ; mkN "reformer" ; } ; --*
lin reformulate_V2 = mkV2 (mkV "reformular") ; --*
lin refraction_1_N = variants {mkN "refração" ; mkN "refracção" ; } ; --*
lin refraction_2_N = variants {mkN "refração" ; mkN "refracção" ; } ; --*
lin refractive_1_A = mkA "refrativo" ; --*
lin refractive_2_A = mkA "refrativo" ; --*
lin refractometer_N = variants {mkN "refractómetro" ; mkN "refractômetro" ; } ; --*
lin refractory_2_A = variants {mkA "refractario" ; mkA "refratário" ; } ; --*
lin refrain_1_V = mkV "resistir" ; --*
lin refrain_2_V = variants {mkV "abster" ; mkV "abster-se" ; mkV "privar" ; mkV "privar-se" ; } ; --*
lin refrain_N = variants {mkN "coro" ; mkN "estribilho" ; mkN "refrão" ; mkN "Refrão" ; } ; --*
lin refresh_1_V2 = variants {mkV2 (mkV "rever") ; mkV2 (mkV "up") ; } ; --*
lin refresh_2_V2 = variants {mkV2 (mkV "avivar") ; mkV2 (mkV "refrescar") ; } ; --*
lin refresh_3_V2 = variants {mkV2 (mkV "refrescar") ; mkV2 (mkV "up") ; } ; --*
lin refresh_4_V2 = mkV2 (mkV "refrescar") ; --*
lin refreshing_1_A = variants {mkA "fresco" ; mkA "refrescante" ; } ; --*
lin refreshment_1_N = mkN "refresco" ; --*
lin refreshment_2_N = variants {mkN "recreação" ; mkN "Recreação" ; } ; --*
lin refrigerant_A = mkA "refrigerante" ; --*
lin refrigerant_N = variants {mkN "Fluido" ; mkN "Refrigerantes" ; } ; --*
lin refrigerate_1_V2 = mkV2 (mkV "refrigerar") ; --*
lin refrigerate_2_V2 = mkV2 (mkV "refrigerar") ; --*
lin refrigeration_1_N = variants {mkN "arrefecimento" ; mkN "esfriamento" ; mkN "referigeração" ; mkN "refrigeração" ; } ; --*
lin refrigerator_N = variants {mkN "Frigorifico" ; mkN "frigorífico" ; mkN "Frigorífico" ; mkN "frigoríficos" ; mkN "geladeira" ; mkN "refrigerador" ; } ; --*
lin refuel_2_V2 = mkV2 (mkV "reabastecer") ; --*
lin refuel_2_V = mkV "reabastecer" ; --*
lin refuge_1_N = variants {mkN "refúgio" ; mkN "refúgios" ; } ; --*
lin refuge_2_N = variants {mkN "recurso" ; mkN "refúgio" ; } ; --*
lin refuge_3_N = variants {mkN "asilo" ; mkN "guarida" ; mkN "refúgio" ; } ; --*
lin refuge_4_N = mkN "recurso" ; --*
lin refugee_N = variants {mkN "refugiado" ; mkN "refugiados" ; } ; --*
lin refulgence_1_N = variants {mkN "brilho" ; mkN "luminosidade" ; mkN "Radiança" ; mkN "refulgência" ; } ; --*
lin refulgent_A = variants {mkA "radiante" ; mkA "refulgente" ; } ; --*
lin refund_1_N = mkN "reembolso" ; --*
lin refund_2_N = mkN "reembolso" ; --*
lin refund_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reintegrar") ; mkV2 (mkV "retribuir") ; } ; --*
lin refurbishment_N = variants {mkN "renovação" ; mkN "restauração" ; } ; --*
lin refurbish_V2 = variants {mkV2 (mkV "renovar") ; mkV2 (mkV "restaurar") ; mkV2 (mkV "up") ; } ; --*
lin refusal_1_N = mkN "recusa" ; --*
lin refusal_2_N = mkN "recusa" ; --*
lin refuse_1_VV = variants {mkVV (mkV "recusar") ; mkVV (mkV "rejeitar") ; } ; --*
lin refuse_2_V2 = variants {mkV2 (mkV "declinar") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; mkV2 (mkV "up") ; } ; --*
lin refuse_3_V2 = variants {mkV2 (mkV "recusar") ; mkV2 (mkV "resistir") ; } ; --*
lin refuse_4_V2 = mkV2 (mkV "negar") ; --*
lin refuse_4_V = mkV "negar" ; --*
lin refuse_4_VV = mkVV (mkV "negar") ; --*
lin refuse_5_V2 = variants {mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin refuse_6_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin refuse_collector_N = variants {mkN "carter" ; mkN "collector" ; mkN "hauler" ; mkN "lixeiro" ; mkN "man" ; } ; --*
lin refuse_N = variants {mkN "lixo" ; mkN "negar-sea" ; mkN "resíduos" ; mkN "waste" ; } ; --*
lin refutation_2_N = mkN "refutação" ; --*
lin refute_1_V2 = variants {mkV2 (mkV "rebater") ; mkV2 (mkV "refutar") ; } ; --*
lin refute_2_V2 = variants {mkV2 (mkV "desmentir") ; mkV2 (mkV "rebater") ; mkV2 (mkV "refutar") ; } ; --*
lin regain_1_V2 = variants {mkV2 (mkV "re-adquirir") ; mkV2 (mkV "reconquistar") ; mkV2 (mkV "recuperar") ; mkV2 (mkV "reganhar") ; } ; --*
lin regain_2_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "reganhar") ; } ; --*
lin regal_A = variants {mkA "imperial" ; mkA "real" ; } ; --*
lin regalia_1_N = mkN "regalia" ; --*
lin regalia_2_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin regard_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "considerar") ; mkV2 (mkV "ver") ; } ; --*
lin regard_2_V2 = variants {mkV2 (mkV "mirar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin regard_2_V = variants {mkV "mirar" ; mkV "olhar" ; mkV "ver" ; } ; --*
lin regard_3_N = variants {mkN "cumprimento" ; mkN "desejo" ; mkN "estima" ; } ; --*
lin regard_3_V2 = mkV2 (mkV "comprometer") ; --*
lin regard_4_N = mkN "olhar" ; --*
lin regard_5_N = variants {mkN "estima" ; mkN "respeito" ; } ; --*
lin regard_7_N = variants {mkN "deferência" ; mkN "respeito" ; } ; --*
lin regardful_A = mkA "deferente" ; --*
lin regardless_of_Prep = variants {mkPrep "desconsiderando" ; mkPrep "independente" ; mkPrep "matter" ; } ; --*
lin regency_1_N = mkN "regência" ; --*
lin regenerate_1_V2 = mkV2 (mkV "renovar") ; --*
lin regenerate_2_V2 = mkV2 (mkV "regenerar") ; --*
lin regenerate_2_V = mkV "regenerar" ; --*
lin regenerate_3_V2 = variants {mkV2 (mkV "reformar") ; mkV2 (mkV "regenerar") ; mkV2 (mkV "retificar") ; } ; --*
lin regenerate_4_V2 = variants {mkV2 (mkV "regenerar") ; mkV2 (mkV "restituir") ; } ; --*
lin regenerate_5_V2 = mkV2 (mkV "regenerar") ; --*
lin regenerate_6_V2 = mkV2 (mkV "regenerar") ; --*
lin regenerate_6_V = mkV "regenerar" ; --*
lin regenerate_7_V2 = mkV2 (mkV "regenerar") ; --*
lin regenerate_8_V2 = mkV2 (mkV "regenerar") ; --*
lin regenerate_8_V = mkV "regenerar" ; --*
lin regenerate_9_V2 = mkV2 (mkV "regenerar") ; --*
lin regeneration_1_N = mkN "regeneração" ; --*
lin regeneration_3_N = mkN "regeneração" ; --*
lin reggae_N = variants {mkN "reggae" ; mkN "Reggae" ; } ; --*
lin regicide_1_N = mkN "regicida" ; --*
lin regicide_2_N = variants {mkN "Regicidas" ; mkN "regicídio" ; mkN "Regicídio" ; } ; --*
lin regime_1_N = variants {mkN "governo" ; mkN "regime" ; } ; --*
lin regime_2_N = mkN "regime" ; --*
lin regimen_N = mkN "regime" ; --*
lin regiment_1_V2 = mkV2 (mkV "arregimentar") ; --*
lin regiment_2_V2 = mkV2 (mkV "arregimentar") ; --*
lin regiment_3_V2 = mkV2 (mkV "arregimentar") ; --*
lin regimentation_N = mkN "regulamentação" ; --*
lin regiment_N = variants {mkN "batalhão" ; mkN "regimento" ; } ; --*
lin region_1_N = mkN "região" ; --*
lin region_3_N = variants {mkN "região" ; mkN "regiões" ; } ; --*
lin region_4_N = variants {mkN "região" ; mkN "vizinhança" ; } ; --*
lin regional_1_A = mkA "regional" ; --*
lin regional_2_A = mkA "regional" ; --*
lin register_10_V = mkV "registrar" ; --*
lin register_1_N = mkN "registro" ; --*
lin register_1_V2 = mkV2 (mkV "registrar") ; --*
lin register_1_V = mkV "registrar" ; --*
lin register_2_V2 = variants {mkV2 (mkV "protocolar") ; mkV2 (mkV "registrar") ; } ; --*
lin register_3_N = variants {mkN "índices" ; mkN "registo" ; mkN "registrador" ; } ; --*
lin register_3_V = variants {mkV "inscrever" ; mkV "registrar" ; } ; --*
lin register_4_N = variants {mkN "registrador" ; mkN "registro" ; } ; --*
lin register_4_V2 = variants {mkV2 (mkV "perceber") ; mkV2 (mkV "registrar") ; } ; --*
lin register_5_V2 = variants {mkV2 (mkV "cadastrar") ; mkV2 (mkV "ler") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "registrar") ; } ; --*
lin register_7_N = variants {mkN "caixa" ; mkN "register" ; } ; --*
lin register_7_V = variants {mkV "demonstrar" ; mkV "registrar" ; } ; --*
lin registered_1_A = mkA "registado" ; --*
lin registration_1_N = variants {mkN "inscrição" ; mkN "matricula" ; mkN "matrícula" ; mkN "registro" ; } ; --*
lin registration_5_N = variants {mkN "ajustagem" ; mkN "reajuste" ; mkN "regulação" ; } ; --*
lin registry_N = mkN "registro" ; --*
lin regnant_A = mkA "dirigente" ; --*
lin regress_1_V = mkV "regredir" ; --*
lin regress_2_V = variants {mkV "back" ; mkV "reverter" ; } ; --*
lin regression_1_N = variants {mkN "development" ; mkN "fixation" ; mkN "regressão" ; } ; --*
lin regression_2_N = mkN "regressão" ; --*
lin regret_1_V2 = variants {mkV2 (mkV "arrepender") ; mkV2 (mkV "arrepender-se") ; mkV2 (mkV "lamentar") ; mkV2 (mkV "sentir") ; } ; --*
lin regret_1_VS = variants {mkVS (mkV "arrepender") ; mkVS (mkV "arrepender-se") ; mkVS (mkV "lamentar") ; mkVS (mkV "sentir") ; } ; --*
lin regret_2_V2 = mkV2 (mkV "lamentar") ; --*
lin regret_2_VS = mkVS (mkV "lamentar") ; --*
lin regret_3_VS = mkVS (mkV "lamentar") ; --*
lin regret_N = variants {mkN "mágoa" ; mkN "pesar" ; mkN "remorso" ; mkN "terpena" ; mkN "tristeza" ; } ; --*
lin regrettable_A = variants {mkA "bad" ; mkA "lamentável" ; } ; --*
lin regret_VV = mkVV (mkV "lamentar") ; --*
lin regroup_1_V2 = mkV2 (mkV "reorganizar") ; --*
lin regroup_1_V = mkV "reorganizar" ; --*
lin regroup_2_V2 = mkV2 (mkV "reagrupar") ; --*
lin regroup_2_V = mkV "reagrupar" ; --*
lin regular_1_A = mkA "regular" ; --*
lin regular_2_A = mkA "verdadeiro" ; --*
lin regular_5_A = mkA "habitual" ; --*
lin regular_7_A = mkA "habitual" ; --*
lin regular_9_A = variants {mkA "regular" ; mkA "uniforme" ; } ; --*
lin regularity_2_N = mkN "regularidade" ; --*
lin regularize_1_V2 = variants {mkV2 (mkV "regulamentar") ; mkV2 (mkV "regularizar") ; } ; --*
lin regularize_2_V2 = mkV2 (mkV "regularizar") ; --*
lin regulate_1_V2 = variants {mkV2 (mkV "modular") ; mkV2 (mkV "regular") ; } ; --*
lin regulate_2_V2 = variants {mkV2 (mkV "regulamentar") ; mkV2 (mkV "regularizar") ; } ; --*
lin regulate_3_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "influenciar") ; mkV2 (mkV "moldar") ; } ; --*
lin regulation_1_N = mkN "ordenamento" ; --*
lin regulation_2_N = variants {mkN "lei" ; mkN "norma" ; mkN "regra" ; mkN "regulamento" ; mkN "regulamentos" ; } ; --*
lin regulation_6_N = variants {mkN "regulação" ; mkN "regulamentos" ; } ; --*
lin regulative_A = variants {mkA "regulador" ; mkA "regulatório" ; } ; --*
lin regulator_2_N = mkN "regulador" ; --*
lin regulator_3_N = mkN "regulador" ; --*
lin regulatory_A = variants {mkA "regulador" ; mkA "regulatório" ; } ; --*
lin regurgitate_2_V2 = mkV2 (mkV "regurgitar") ; --*
lin regurgitate_3_V2 = mkV2 (mkV "reproduzir") ; --*
lin regurgitate_4_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin regurgitate_V = mkV "regurgitar" ; --*
lin regurgitation_1_N = mkN "regurgitação" ; --*
lin regurgitation_3_N = variants {mkN "êmese" ; mkN "vômito" ; } ; --*
lin rehabilitate_1_V2 = mkV2 (mkV "reabilitar") ; --*
lin rehabilitate_2_V2 = mkV2 (mkV "reabilitar") ; --*
lin rehabilitate_3_V2 = mkV2 (mkV "reabilitar") ; --*
lin rehabilitation_3_N = mkN "reabilitação" ; --*
lin rehabilitation_4_N = mkN "reabilitação" ; --*
lin rehabilitative_2_A = variants {mkA "reconstructor" ; mkA "Reconstructor" ; } ; --*
lin rehearsal_1_N = variants {mkN "ensaio" ; mkN "run" ; } ; --*
lin rehearse_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "exercitar") ; mkV2 (mkV "exercitar-se") ; } ; --*
lin rehearse_V = variants {mkV "ensaiar" ; mkV "exercitar" ; mkV "exercitar-se" ; } ; --*
lin rehear_V2 = variants {mkV2 (mkV "rejulgar") ; mkV2 (mkV "reouvir") ; } ; --*
lin reich_2_N = variants {mkN "Reich" ; mkN "Wilhelm" ; } ; --*
lin reich_3_N = variants {mkN "Michael" ; mkN "Reich" ; mkN "Steve" ; } ; --*
lin reign_1_N = mkN "reinado" ; --*
lin reign_1_V = variants {mkV "reinar" ; mkV "reino" ; } ; --*
lin reign_2_N = mkN "reinado" ; --*
lin reign_2_V = variants {mkV "comandar" ; mkV "dominar" ; mkV "mandar" ; mkV "predominar" ; mkV "reinar" ; } ; --*
lin reign_3_N = mkN "soberania" ; --*
lin reignite_V2 = mkV2 (mkV "reacender") ; --*
lin reimburse_1_V2 = mkV2 (mkV "reembolsar") ; --*
lin reimburse_2_V2 = variants {mkV2 (mkV "reembolsar") ; mkV2 (mkV "ressarcir") ; } ; --*
lin reimbursement_N = mkN "reembolso" ; --*
lin reimposition_N = mkN "reimposição" ; --*
lin rein_1_N = mkN "rédea" ; --*
lin rein_1_V2 = variants {mkV2 (mkV "atrelar") ; mkV2 (mkV "in") ; mkV2 (mkV "rein") ; } ; --*
lin rein_2_N = mkN "rédea" ; --*
lin rein_4_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "domar") ; } ; --*
lin reincarnate_1_V2 = mkV2 (mkV "reencarnar") ; --*
lin reincarnation_1_N = mkN "reencarnação" ; --*
lin reincarnation_3_N = variants {mkN "reencarnação" ; mkN "Reencarnação" ; } ; --*
lin reindeer_N = variants {mkN "caribou" ; mkN "rangífer" ; mkN "rena" ; mkN "tarandus" ; } ; --*
lin reinforce_1_V2 = mkV2 (mkV "reforçar") ; --*
lin reinforce_2_V2 = mkV2 (mkV "reforçar") ; --*
lin reinforcement_3_N = variants {mkN "recompensa" ; mkN "revestimento" ; mkN "stimulus" ; } ; --*
lin reinstall_V2 = mkV2 (mkV "reinstalar") ; --*
lin reinstate_1_V2 = variants {mkV2 (mkV "reinstalar") ; mkV2 (mkV "restabelecer") ; } ; --*
lin reinstate_2_V2 = variants {mkV2 (mkV "restabelecer") ; mkV2 (mkV "restaurar") ; } ; --*
lin reinstatement_2_N = mkN "restituição" ; --*
lin reinsurance_N = mkN "resseguro" ; --*
lin reinterpret_2_V2 = mkV2 (mkV "reinterpretar") ; --*
lin reintroduce_1_V2 = mkV2 (mkV "reintroduzir") ; --*
lin reintroduction_N = mkN "reintrodução" ; --*
lin reinvent_1_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "reinventar") ; } ; --*
lin reissue_1_V2 = mkV2 (mkV "reimprimir") ; --*
lin reissue_2_V2 = mkV2 (mkV "reemitir") ; --*
lin reiterate_V2 = variants {mkV2 (mkV "reapresentar") ; mkV2 (mkV "redizer") ; mkV2 (mkV "reiterar") ; mkV2 (mkV "repetir") ; } ; --*
lin reiteration_N = mkN "reiteração" ; --*
lin reject_1_V2 = mkV2 (mkV "rejeitar") ; --*
lin reject_2_V2 = variants {mkV2 (mkV "declinar") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; mkV2 (mkV "up") ; } ; --*
lin reject_3_V2 = variants {mkV2 (mkV "desaprovar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin reject_4_V2 = variants {mkV2 (mkV "desprezar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin reject_5_V2 = variants {mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin reject_6_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin reject_7_V2 = variants {mkV2 (mkV "eliminar") ; mkV2 (mkV "out") ; mkV2 (mkV "rejeitar") ; } ; --*
lin rejection_1_N = mkN "rejeição" ; --*
lin rejection_3_N = mkN "rejeição" ; --*
lin reject_N = mkN "rejeição" ; --*
lin rejig_V2 = mkV2 (mkV "re-equipar") ; --*
lin rejoice_1_V2 = variants {mkV2 (mkV "alegrar") ; mkV2 (mkV "alegrar-se") ; mkV2 (mkV "regozijar") ; mkV2 (mkV "regozijar-se") ; } ; --*
lin rejoice_1_V = variants {mkV "alegrar" ; mkV "alegrar-se" ; mkV "regozijar" ; mkV "regozijar-se" ; } ; --*
lin rejoice_2_V = variants {mkV "exultar" ; mkV "rejubilar" ; } ; --*
lin rejoice_3_V2 = variants {mkV2 (mkV "regojizar") ; mkV2 (mkV "triunfar") ; } ; --*
lin rejoice_3_V = variants {mkV "regojizar" ; mkV "triunfar" ; } ; --*
lin rejoicing_2_N = mkN "júbilo" ; --*
lin re_join_1_V2 = variants {mkV2 (mkV "refiliar") ; mkV2 (mkV "reingressar") ; } ; --*
lin rejoin_1_V = variants {mkV "refiliar" ; mkV "reingressar" ; } ; --*
lin re_join_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "replicar") ; mkV2 (mkV "retornar") ; mkV2 (mkV "retorquir") ; mkV2 (mkV "retortar") ; mkV2 (mkV "retrucar") ; mkV2 (mkV "ripostar") ; } ; --*
lin rejoin_2_V = variants {mkV "back" ; mkV "replicar" ; mkV "retornar" ; mkV "retorquir" ; mkV "retortar" ; mkV "retrucar" ; mkV "ripostar" ; } ; --*
lin rejoinder_1_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin rejuvenate_4_V2 = variants {mkV2 (mkV "regenerar") ; mkV2 (mkV "restituir") ; } ; --*
lin rekindle_1_V2 = variants {mkV2 (mkV "reacender") ; mkV2 (mkV "reignitar") ; } ; --*
lin rekindle_1_V = variants {mkV "reacender" ; mkV "reignitar" ; } ; --*
lin rekindle_2_V2 = mkV2 (mkV "reacender") ; --*
lin relapse_1_V = variants {mkV "recair" ; mkV "worse" ; } ; --*
lin relapse_N = variants {mkN "quebra" ; mkN "Recidiva" ; } ; --*
lin relate_1_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "in") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "up") ; } ; --*
lin relate_2_V = variants {mkV "concernir" ; mkV "doe" ; mkV "on" ; mkV "referir" ; mkV "relacionar" ; mkV "to" ; } ; --*
lin relate_3_V2 = variants {mkV2 (mkV "narrar") ; mkV2 (mkV "relatar") ; } ; --*
lin relate_4_V2 = variants {mkV2 (mkV "inter-relacionar") ; mkV2 (mkV "relacionar") ; } ; --*
lin relate_5_V2 = variants {mkV2 (mkV "relacionar") ; mkV2 (mkV "relacionar-se") ; } ; --*
lin related_1_A = variants {mkA "relacionado" ; mkA "to" ; } ; --*
lin related_2_A = mkA "relacionado" ; --*
lin relatedness_N = mkN "relação" ; --*
lin relation_1_N = variants {mkN "conexão" ; mkN "relação" ; } ; --*
lin relation_2_N = variants {mkN "act" ; mkN "coito" ; mkN "congress" ; mkN "cópula" ; mkN "intercourse" ; mkN "knowledge" ; mkN "relação" ; mkN "relation" ; } ; --*
lin relation_3_N = mkN "parente" ; --*
lin relation_6_N = variants {mkN "relação" ; mkN "relações" ; } ; --*
lin relational_A = mkA "relacional" ; --*
lin relationship_1_N = variants {mkN "ligação" ; mkN "relação" ; mkN "relacionamento" ; mkN "relationship" ; } ; --*
lin relationship_2_N = variants {mkN "relação" ; mkN "relacionamento" ; } ; --*
lin relationship_3_N = variants {mkN "ligação" ; mkN "relação" ; } ; --*
lin relationship_4_N = variants {mkN "parentesco" ; mkN "relação" ; mkN "relationship" ; } ; --*
lin relative_1_N = mkN "parente" ; --*
lin relative_A = mkA "relativo" ; --*
lin relative_to_A2 = variants {mkA2 (mkA "proporcional") noPrep ; mkA2 (mkA "relativo") noPrep ; } ; --*
lin relativism_N = mkN "relativismo" ; --*
lin relativity_2_N = variants {mkN "Relatividade" ; mkN "Teoria" ; } ; --*
lin relax_1_V = variants {mkV "descontrair" ; mkV "down" ; mkV "pegar" ; mkV "relaxar" ; mkV "up" ; } ; --*
lin relax_3_V = mkV "sossegar" ; --*
lin relax_4_V2 = variants {mkV2 (mkV "espairecer") ; mkV2 (mkV "relaxar") ; mkV2 (mkV "relaxed") ; mkV2 (mkV "up") ; } ; --*
lin relaxation_3_N = mkN "relaxamento" ; --*
lin relaxation_4_N = mkN "relaxamento" ; --*
lin relaxation_5_N = variants {mkN "relaxação" ; mkN "repouso" ; } ; --*
lin relaxation_7_N = mkN "alívio" ; --*
lin relay_1_V2 = mkV2 (mkV "transmitir") ; --*
lin relay_2_V2 = mkV2 (mkV "retransmitir") ; --*
lin relay_4_N = variants {mkN "estafeta" ; mkN "race" ; } ; --*
lin relay_5_N = variants {mkN "relay" ; mkN "Relê" ; } ; --*
lin release_10_V2 = variants {mkV2 (mkV "desbloquear") ; mkV2 (mkV "liberar") ; } ; --*
lin release_11_N = variants {mkN "desistência" ; mkN "renúncia" ; } ; --*
lin release_1_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "go") ; mkV2 (mkV "soltar") ; } ; --*
lin release_2_N = mkN "emancipação" ; --*
lin release_2_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "soltar") ; } ; --*
lin release_4_N = variants {mkN "comunicado" ; mkN "release" ; } ; --*
lin release_4_V2 = variants {mkV2 (mkV "lançar") ; mkV2 (mkV "out") ; mkV2 (mkV "publicar") ; } ; --*
lin release_5_N = mkN "demissão" ; --*
lin release_5_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "expelir") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "liberar") ; } ; --*
lin release_6_N = variants {mkN "expiração" ; mkN "morte" ; } ; --*
lin release_6_V2 = mkV2 (mkV "excretar") ; --*
lin release_7_V2 = variants {mkV2 (mkV "anunciar") ; mkV2 (mkV "lançar") ; } ; --*
lin release_8_N = mkN "botão" ; --*
lin release_8_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "desobrigar") ; mkV2 (mkV "liberar") ; mkV2 (mkV "up") ; } ; --*
lin release_9_N = mkN "desabafo" ; --*
lin release_9_V2 = variants {mkV2 (mkV "libertar") ; mkV2 (mkV "livrar") ; mkV2 (mkV "soltar") ; } ; --*
lin relegate_2_V2 = variants {mkV2 (mkV "demover") ; mkV2 (mkV "despromover") ; mkV2 (mkV "downstairs") ; mkV2 (mkV "relegar") ; } ; --*
lin relegate_3_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "exilar") ; mkV2 (mkV "expulsar") ; } ; --*
lin relegate_4_V2 = mkV2 (mkV "classificar") ; --*
lin relegation_1_N = mkN "delegação" ; --*
lin relentless_1_A = mkA "implacável" ; --*
lin relentless_2_A = mkA "persistente" ; --*
lin relent_V = mkV "amolecer" ; --*
lin relevance_N = variants {mkN "pertinência" ; mkN "relação" ; mkN "relevância" ; } ; --*
lin relevancy_N = variants {mkN "pertinência" ; mkN "relação" ; mkN "relevância" ; } ; --*
lin relevant_A = variants {mkA "pertinente" ; mkA "relevante" ; } ; --*
lin reliability_N = mkN "fiabilidade" ; --*
lin reliable_1_A = variants {mkA "confiável" ; mkA "de" ; mkA "digno" ; mkA "fiável" ; mkA "fidedigno" ; } ; --*
lin reliable_2_A = variants {mkA "confiável" ; mkA "digno" ; mkA "fiável" ; } ; --*
lin reliable_3_A = variants {mkA "autêntico" ; mkA "confiável" ; mkA "fiável" ; } ; --*
lin reliance_1_N = variants {mkN "confiança" ; mkN "fé" ; } ; --*
lin reliance_2_N = variants {mkN "confiança" ; mkN "dependência" ; } ; --*
lin reliant_A = variants {mkA "cofidente" ; mkA "dependente" ; } ; --*
lin relic_1_N = variants {mkN "relíquia" ; mkN "Relíquias" ; } ; --*
lin relic_2_N = variants {mkN "recordação" ; mkN "suvenir" ; } ; --*
lin relief_10_N = variants {mkN "relevo" ; mkN "Relevo" ; mkN "relief" ; } ; --*
lin relief_1_N = mkN "alívio" ; --*
lin relief_2_N = mkN "alívio" ; --*
lin relief_4_N = variants {mkN "dobro" ; mkN "man" ; } ; --*
lin relief_5_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "socorro" ; } ; --*
lin relief_6_N = variants {mkN "descanso" ; mkN "pausa" ; mkN "period" ; mkN "repouso" ; } ; --*
lin relief_8_N = variants {mkN "assistência" ; mkN "auxílio" ; } ; --*
lin relief_9_N = mkN "alívio" ; --*
lin relieve_10_V2 = variants {mkV2 (mkV "excusar") ; mkV2 (mkV "eximir") ; mkV2 (mkV "off") ; } ; --*
lin relieve_11_V2 = mkV2 (mkV "aliviar") ; --*
lin relieve_1_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "amenizar") ; mkV2 (mkV "atenuar") ; mkV2 (mkV "melhorar") ; } ; --*
lin relieve_2_V2 = variants {mkV2 (mkV "eximir") ; mkV2 (mkV "over") ; } ; --*
lin relieve_3_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "liberar") ; } ; --*
lin relieve_4_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "aquietar") ; mkV2 (mkV "pacificar") ; } ; --*
lin relieve_5_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "salvar") ; mkV2 (mkV "socorrer") ; } ; --*
lin relieve_7_V2 = variants {mkV2 (mkV "curar") ; mkV2 (mkV "remediar") ; } ; --*
lin relieve_8_V2 = mkV2 (mkV "aliviar") ; --*
lin reliever_1_N = variants {mkN "dobro" ; mkN "man" ; } ; --*
lin religion_1_N = variants {mkN "belief" ; mkN "fé" ; mkN "religião" ; } ; --*
lin religion_2_N = variants {mkN "igreja" ; mkN "religião" ; mkN "religion" ; } ; --*
lin religious_1_A = variants {mkA "espiritual" ; mkA "religioso" ; } ; --*
lin religious_2_A = variants {mkA "devoto" ; mkA "religioso" ; } ; --*
lin religious_4_A = mkA "religioso" ; --*
lin religiousness_1_N = variants {mkN "devoção" ; mkN "religiosidade" ; } ; --*
lin religiousness_2_N = mkN "religiosidade" ; --*
lin religious_N = mkN "religioso" ; --*
lin relinquish_1_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "desobrigar") ; mkV2 (mkV "liberar") ; mkV2 (mkV "up") ; } ; --*
lin relinquish_2_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "with") ; } ; --*
lin relinquish_3_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "renunciar") ; } ; --*
lin relinquish_4_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "go") ; mkV2 (mkV "soltar") ; } ; --*
lin relinquishment_1_N = mkN "renúncia" ; --*
lin relinquishment_2_N = mkN "renúncia" ; --*
lin reliquary_N = variants {mkN "relicário" ; mkN "Relicário" ; } ; --*
lin relish_3_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin relish_V2 = variants {mkV2 (mkV "agradar-se") ; mkV2 (mkV "saborear") ; } ; --*
lin relive_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "reviver") ; } ; --*
lin relocate_V2 = mkV2 (mkV "mudar") ; --*
lin relocate_V = mkV "relocar" ; --*
lin relocation_2_N = mkN "mudança" ; --*
lin reluctance_2_N = variants {mkN "aversão" ; mkN "hesitação" ; } ; --*
lin reluctant_1_A = mkA "contrafeito" ; --*
lin reluctant_2_A = mkA "contrafeito" ; --*
lin reluctant_3_A = variants {mkA "contrafeito" ; mkA "relutante" ; } ; --*
lin rely_on_1_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin rely_on_2_V2 = mkV2 (mkV "on") ; --*
lin rely_on_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin remain_2_V2 = variants {mkV2 (mkV "ficar") ; mkV2 (mkV "on") ; mkV2 (mkV "permanecer") ; } ; --*
lin remain_3_V2 = variants {mkV2 (mkV "ficar") ; mkV2 (mkV "sobrar") ; } ; --*
lin remain_3_V = variants {mkV "ficar" ; mkV "sobrar" ; } ; --*
lin remain_4_V = variants {mkV "albergar" ; mkV "ficar" ; mkV "permanecer" ; mkV "restar" ; } ; --*
lin remainder_1_N = variants {mkN "excedente" ; mkN "resíduo" ; mkN "resto" ; mkN "sobra" ; mkN "tudomais" ; } ; --*
lin remainder_3_N = mkN "diferença" ; --*
lin remainder_4_N = variants {mkN "resto" ; mkN "sobra" ; } ; --*
lin remaining_A = variants {mkA "over" ; mkA "restante" ; } ; --*
lin remains_1_N = mkN "resto" ; --*
lin remains_3_N = variants {mkN "cadáver" ; mkN "corpo" ; mkN "defunto" ; mkN "enchido" ; mkN "restos" ; } ; --*
lin remain_VA = variants {mkVA (mkV "continuar") ; mkVA (mkV "ficar") ; mkVA (mkV "manter") ; mkVA (mkV "permanecer") ; } ; --*
lin remake_N = variants {mkN "remake" ; mkN "Remakes" ; } ; --*
lin remake_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "refazer") ; mkV2 (mkV "remodelar") ; } ; --*
lin remand_2_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "away") ; mkV2 (mkV "behind") ; mkV2 (mkV "encarcerar") ; mkV2 (mkV "prender") ; mkV2 (mkV "ser") ; } ; --*
lin remark_1_N = variants {mkN "comentário" ; mkN "cometário" ; mkN "comment" ; mkN "Comment" ; mkN "observação" ; mkN "reparo" ; mkN "tag" ; } ; --*
lin remark_1_VS = variants {mkVS (mkV "comentar") ; mkVS (mkV "mencionar") ; mkVS (mkV "notar") ; mkVS (mkV "remarcar") ; mkVS (mkV "reparar") ; } ; --*
lin remark_2_N = variants {mkN "comentário" ; mkN "observação" ; } ; --*
lin remark_2_V = variants {mkV "comentar" ; mkV "indicar" ; mkV "mencionar" ; mkV "out" ; } ; --*
lin remark_2_VS = variants {mkVS (mkV "comentar") ; mkVS (mkV "indicar") ; mkVS (mkV "mencionar") ; mkVS (mkV "out") ; } ; --*
lin remarkable_1_A = mkA "singular" ; --*
lin remarkable_2_A = variants {mkA "digno" ; mkA "notável" ; } ; --*
lin remarry_V2 = mkV2 (mkV "recasar") ; --*
lin rematch_N = mkN "repetição" ; --*
lin remediable_A = mkA "remediável" ; --*
lin remedial_2_A = variants {mkA "curativo" ; mkA "terapêutico" ; } ; --*
lin remedy_1_N = mkN "reparação" ; --*
lin remedy_1_V2 = variants {mkV2 (mkV "rectificar") ; mkV2 (mkV "retificar") ; } ; --*
lin remedy_2_N = variants {mkN "medicamento" ; mkN "produtos" ; mkN "remédio" ; mkN "terapia" ; } ; --*
lin remedy_2_V2 = variants {mkV2 (mkV "curar") ; mkV2 (mkV "remediar") ; } ; --*
lin remember_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; mkV2 (mkV "recordar-se") ; mkV2 (mkV "up") ; } ; --*
lin remember_1_VV = variants {mkVV (mkV "back") ; mkVV (mkV "lembrar") ; mkVV (mkV "recordar") ; mkVV (mkV "recordar-se") ; mkVV (mkV "up") ; } ; --*
lin remember_2_V2 = variants {mkV2 (mkV "lembrar") ; mkV2 (mkV "of") ; } ; --*
lin remember_2_VV = variants {mkVV (mkV "lembrar") ; mkVV (mkV "of") ; } ; --*
lin remember_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; } ; --*
lin remember_4_V2 = mkV2 (mkV "lembrar") ; --*
lin remember_5_V2 = mkV2 (mkV "ter") ; --*
lin remember_8_V2 = mkV2 (mkV "rememorar") ; --*
lin remember_V = mkV "lembrar" ; --*
lin remember_VS = variants {mkVS (mkV "back") ; mkVS (mkV "lembrar") ; mkVS (mkV "recordar") ; mkVS (mkV "recordar-se") ; mkVS (mkV "up") ; } ; --*
lin remembrance_1_N = mkN "memória" ; --*
lin remembrance_2_N = mkN "comemoração" ; --*
lin remind_1_V2 = mkV2 (mkV "recordar") ; --*
lin remind_2_V2 = variants {mkV2 (mkV "lembrar") ; mkV2 (mkV "soprar") ; } ; --*
lin reminder_1_N = mkN "lembrete" ; --*
lin reminder_3_N = mkN "monitor" ; --*
lin reminiscence_2_N = variants {mkN "memória" ; mkN "reminiscência" ; } ; --*
lin reminiscent_A = variants {mkA "evocador" ; mkA "nostálgico" ; mkA "sugestivo" ; } ; --*
lin remise_2_N = variants {mkN "garagem" ; mkN "house" ; } ; --*
lin remiss_A = mkA "negligente" ; --*
lin remission_1_N = variants {mkN "remição" ; mkN "remissão" ; } ; --*
lin remission_2_N = mkN "remessa" ; --*
lin remission_4_N = variants {mkN "absolvição" ; mkN "of" ; } ; --*
lin remissness_N = mkN "negligência" ; --*
lin remit_1_V2 = mkV2 (mkV "enviar") ; --*
lin remit_2_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin remit_3_V2 = mkV2 (mkV "anular") ; --*
lin remit_6_V2 = mkV2 (mkV "afrouxar") ; --*
lin remit_6_V = mkV "afrouxar" ; --*
lin remittance_N = mkN "remessa" ; --*
lin remittent_A = mkA "remitente" ; --*
lin remnant_1_N = mkN "sobra" ; --*
lin remnant_2_N = variants {mkN "resto" ; mkN "sobra" ; } ; --*
lin remodel_1_V2 = variants {mkV2 (mkV "reconstruir") ; mkV2 (mkV "refazer") ; } ; --*
lin remodel_2_V2 = variants {mkV2 (mkV "refazer") ; mkV2 (mkV "remodelar") ; } ; --*
lin remonstrance_N = mkN "objeção" ; --*
lin remonstrate_2_V = variants {mkV "mostrar" ; mkV "out" ; } ; --*
lin remonstrate_3_V = variants {mkV "censurar" ; mkV "condenar" ; mkV "descompor" ; mkV "down" ; mkV "esculhambar" ; mkV "on" ; mkV "out" ; mkV "repreender" ; mkV "reprimendar" ; mkV "reprimir" ; mkV "reprovar" ; mkV "to" ; mkV "up" ; mkV "verberar" ; mkV "words" ; } ; --*
lin remora_N = variants {mkN "fish" ; mkN "rêmora" ; mkN "Rêmora" ; } ; --*
lin remorse_N = mkN "remorso" ; --*
lin remote_1_A = mkA "distante" ; --*
lin remote_3_A = variants {mkA "distante" ; mkA "longínquo" ; mkA "remoto" ; } ; --*
lin remote_4_A = variants {mkA "distante" ; mkA "inacessível" ; mkA "isolado" ; } ; --*
lin remote_5_A = variants {mkA "distante" ; mkA "longínquo" ; } ; --*
lin remoteness_1_N = mkN "lonjura" ; --*
lin remould_3_V2 = variants {mkV2 (mkV "reformar") ; mkV2 (mkV "remodelar") ; } ; --*
lin removable_1_A = mkA "removível" ; --*
lin removable_2_A = mkA "obliterável" ; --*
lin removal_1_N = variants {mkN "eliminação" ; mkN "remoção" ; } ; --*
lin remove_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "remover") ; mkV2 (mkV "retirar") ; mkV2 (mkV "tirar") ; } ; --*
lin remove_2_V2 = variants {mkV2 (mkV "demitir") ; mkV2 (mkV "remover") ; } ; --*
lin remove_2_V = variants {mkV "demitir" ; mkV "remover" ; } ; --*
lin remove_3_V2 = variants {mkV2 (mkV "livrar") ; mkV2 (mkV "rid") ; } ; --*
lin remove_3_V = variants {mkV "livrar" ; mkV "rid" ; } ; --*
lin remove_6_V = mkV "ausentar" ; --*
lin remove_7_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin remover_1_N = mkN "removedor" ; --*
lin remunerate_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; mkV2 (mkV "remunerar") ; } ; --*
lin remuneration_1_N = variants {mkN "ordenado" ; mkN "remuneração" ; mkN "retribuição" ; mkN "salário" ; } ; --*
lin remuneration_2_N = mkN "retribuição" ; --*
lin remunerative_2_A = variants {mkA "lucrativo" ; mkA "rentável" ; } ; --*
lin renaissance_1_N = variants {mkN "Renascentismo" ; mkN "Renascimento" ; } ; --*
lin renaissance_2_N = mkN "renascimento" ; --*
lin renal_A = mkA "renal" ; --*
lin rename_1_V2 = variants {mkV2 (mkV "mudar") ; mkV2 (mkV "rebaptizar") ; mkV2 (mkV "rebatizar") ; mkV2 (mkV "renomear") ; } ; --*
lin rename_2_V2 = mkV2 (mkV "renomear") ; --*
lin rename_V3 = variants {mkV3 (mkV "mudar") ; mkV3 (mkV "rebaptizar") ; mkV3 (mkV "rebatizar") ; mkV3 (mkV "renomear") ; } ; --*
lin renascence_1_N = variants {mkN "Renascentismo" ; mkN "Renascimento" ; } ; --*
lin renascence_3_N = mkN "renascimento" ; --*
lin render_12_V2 = mkV2 (mkV "traduzir") ; --*
lin render_2_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "suprir") ; } ; --*
lin render_3_V2 = mkV2 (mkV "interpretar") ; --*
lin render_4_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "gerar") ; } ; --*
lin render_6_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; } ; --*
lin render_7_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "retornar") ; } ; --*
lin render_8_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "in") ; mkV2 (mkV "livrar") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin rendering_1_N = mkN "interpretação" ; --*
lin rendering_2_N = mkN "interpretação" ; --*
lin rendering_3_N = mkN "interpretação" ; --*
lin rendering_4_N = variants {mkN "interpretação" ; mkN "rendition" ; mkN "tradução" ; } ; --*
lin rendezvous_1_N = variants {mkN "encontro" ; mkN "hora" ; mkN "local" ; mkN "ponto" ; mkN "rendezvous" ; mkN "rendez-vous" ; } ; --*
lin rendezvous_3_N = mkN "encontro" ; --*
lin rendition_1_N = mkN "interpretação" ; --*
lin rendition_2_N = mkN "interpretação" ; --*
lin rendition_4_N = mkN "interpretação" ; --*
lin rend_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "esfarrapar") ; mkV2 (mkV "rasgar") ; } ; --*
lin renegadeFem_1_N = mkN "renegado" ; --*
lin renegadeFem_2_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin renegadeMasc_1_N = mkN "renegado" ; --*
lin renegadeMasc_2_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin renege_V = variants {mkV "back" ; mkV "descumprir" ; mkV "on" ; } ; --*
lin renegotiate_1_V2 = mkV2 (mkV "renegociar") ; --*
lin renegotiate_2_V2 = mkV2 (mkV "renegociar") ; --*
lin renew_1_V2 = mkV2 (mkV "renovar") ; --*
lin renewable_1_A = mkA "renovável" ; --*
lin renewable_2_A = mkA "renovável" ; --*
lin renewal_2_N = mkN "renovação" ; --*
lin renewal_3_N = mkN "substituição" ; --*
lin renin_N = mkN "renina" ; --*
lin renounce_1_V2 = variants {mkV2 (mkV "abdicar") ; mkV2 (mkV "abrir") ; mkV2 (mkV "renunciar") ; } ; --*
lin renounce_2_V2 = variants {mkV2 (mkV "demitir-se") ; mkV2 (mkV "renunciar") ; mkV2 (mkV "resignar") ; mkV2 (mkV "up") ; } ; --*
lin renounce_3_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "renunciar") ; } ; --*
lin renounce_4_V2 = variants {mkV2 (mkV "renunciar") ; mkV2 (mkV "repudiar") ; } ; --*
lin renovate_1_V2 = variants {mkV2 (mkV "renovar") ; mkV2 (mkV "restaurar") ; } ; --*
lin renovate_2_V2 = variants {mkV2 (mkV "renovar") ; mkV2 (mkV "restaurar") ; mkV2 (mkV "up") ; } ; --*
lin renovate_3_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin renovation_1_N = mkN "renovação" ; --*
lin renovation_2_N = variants {mkN "renovação" ; mkN "restauração" ; } ; --*
lin renovator_N = mkN "restaurador" ; --*
lin renowned_A = variants {mkA "célebre" ; mkA "comemorado" ; mkA "de" ; mkA "famoso" ; mkA "ilustre" ; mkA "notável" ; mkA "renomado" ; } ; --*
lin renown_N = variants {mkN "celebridade" ; mkN "fama" ; mkN "glória" ; mkN "renome" ; } ; --*
lin rent_1_N = variants {mkN "aluguel" ; mkN "aluguer" ; mkN "renda" ; } ; --*
lin rent_1_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "arrendar") ; } ; --*
lin rent_2_N = variants {mkN "buraco" ; mkN "fenda" ; mkN "rasgão" ; mkN "rasgo" ; } ; --*
lin rent_2_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "arrendar") ; } ; --*
lin rent_3_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin rent_4_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin rental_2_N = variants {mkN "aluguel" ; mkN "Aluguel" ; mkN "arrendamento" ; } ; --*
lin renter_1_N = variants {mkN "inquilino" ; mkN "locatário" ; } ; --*
lin renter_2_N = mkN "locador" ; --*
lin rent_out_V2 = mkV2 (mkV "out") ; --*
lin renunciation_1_N = mkN "renúncia" ; --*
lin renunciation_2_N = variants {mkN "apostasia" ; mkN "renúncia" ; } ; --*
lin renunciation_3_N = mkN "renúncia" ; --*
lin renunciation_4_N = mkN "renúncia" ; --*
lin reopen_V2 = mkV2 (mkV "reabrir") ; --*
lin reorganization_1_N = variants {mkN "reestruturação" ; mkN "remodelagem" ; mkN "reorganização" ; mkN "restruturação" ; } ; --*
lin reorganize_1_V2 = variants {mkV2 (mkV "reorganizar") ; mkV2 (mkV "up") ; } ; --*
lin reorganize_2_V2 = mkV2 (mkV "reorganizar") ; --*
lin reorganize_2_V = mkV "reorganizar" ; --*
lin reorient_3_V2 = variants {mkV2 (mkV "orientar") ; mkV2 (mkV "reorientar") ; } ; --*
lin reorient_3_V = variants {mkV "orientar" ; mkV "reorientar" ; } ; --*
lin reorientation_1_N = mkN "reorientação" ; --*
lin reorientation_2_N = variants {mkN "of" ; mkN "reorientação" ; } ; --*
lin repaint_1_V2 = mkV2 (mkV "repintar") ; --*
lin repaint_2_V2 = mkV2 (mkV "repintar") ; --*
lin repair_1_N = variants {mkN "conserto" ; mkN "reparação" ; mkN "reparo" ; } ; --*
lin repair_1_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "emendar") ; mkV2 (mkV "on") ; mkV2 (mkV "reparar") ; mkV2 (mkV "up") ; } ; --*
lin repair_2_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "indemnizar") ; mkV2 (mkV "indenizar") ; mkV2 (mkV "pagar") ; mkV2 (mkV "recompensar") ; } ; --*
lin repair_3_N = variants {mkN "ground" ; mkN "lugar" ; } ; --*
lin repair_4_V2 = variants {mkV2 (mkV "rectificar") ; mkV2 (mkV "retificar") ; } ; --*
lin repair_5_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin reparation_3_N = variants {mkN "conserto" ; mkN "reparação" ; mkN "reparo" ; } ; --*
lin repast_N = variants {mkN "jantar" ; mkN "refeição" ; mkN "repasto" ; } ; --*
lin repatriate_2_V2 = mkV2 (mkV "repatriar") ; --*
lin repay_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reintegrar") ; mkV2 (mkV "retribuir") ; } ; --*
lin repay_2_V2 = mkV2 (mkV "pagar") ; --*
lin repay_2_V = mkV "pagar" ; --*
lin repay_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "premiar") ; mkV2 (mkV "recompensar") ; } ; --*
lin repay_3_V = variants {mkV "back" ; mkV "premiar" ; mkV "recompensar" ; } ; --*
lin repay_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "replicar") ; mkV2 (mkV "retornar") ; mkV2 (mkV "retorquir") ; mkV2 (mkV "retortar") ; mkV2 (mkV "retrucar") ; mkV2 (mkV "ripostar") ; } ; --*
lin repay_4_V = variants {mkV "back" ; mkV "replicar" ; mkV "retornar" ; mkV "retorquir" ; mkV "retortar" ; mkV "retrucar" ; mkV "ripostar" ; } ; --*
lin repayment_1_N = mkN "reembolso" ; --*
lin repayment_2_N = mkN "reembolso" ; --*
lin repeal_N = variants {mkN "ab-rogação" ; mkN "anulação" ; } ; --*
lin repeal_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin repeat_1_V2 = variants {mkV2 (mkV "reapresentar") ; mkV2 (mkV "redizer") ; mkV2 (mkV "reiterar") ; mkV2 (mkV "repetir") ; } ; --*
lin repeat_2_V2 = mkV2 (mkV "replicar") ; --*
lin repeat_3_V = mkV "reincidir" ; --*
lin repeat_4_V2 = variants {mkV2 (mkV "eco") ; mkV2 (mkV "ecoar") ; mkV2 (mkV "repetir") ; } ; --*
lin repeat_5_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "reiterar") ; } ; --*
lin repeatable_A = variants {mkA "repetível" ; mkA "reproduzível" ; } ; --*
lin repeated_A = variants {mkA "perene" ; mkA "recorrente" ; } ; --*
lin repeater_4_N = mkN "repetidor" ; --*
lin repeat_N = mkN "repetição" ; --*
lin repel_2_V2 = mkV2 (mkV "repelir") ; --*
lin repel_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "repelir") ; } ; --*
lin repel_4_V2 = mkV2 (mkV "repelir") ; --*
lin repel_5_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "out") ; mkV2 (mkV "repugnar") ; } ; --*
lin repellent_2_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin repellent_3_A = mkA "resistente" ; --*
lin repent_1_V2 = mkV2 (mkV "penitenciar") ; --*
lin repent_1_V = mkV "penitenciar" ; --*
lin repent_2_V2 = variants {mkV2 (mkV "arrepender") ; mkV2 (mkV "arrepender-se") ; mkV2 (mkV "lamentar") ; mkV2 (mkV "sentir") ; } ; --*
lin repent_2_V = variants {mkV "arrepender" ; mkV "arrepender-se" ; mkV "lamentar" ; mkV "sentir" ; } ; --*
lin repentance_N = variants {mkN "arrependimento" ; mkN "penitência" ; mkN "pesar" ; mkN "remorso" ; } ; --*
lin repentant_A = mkA "penitente" ; --*
lin repercussion_1_N = mkN "repercussão" ; --*
lin repercussion_2_N = mkN "repercussão" ; --*
lin repertoire_2_N = mkN "repertório" ; --*
lin repertory_3_N = mkN "repertório" ; --*
lin repetition_1_N = mkN "repetição" ; --*
lin repetition_2_N = variants {mkN "repetição" ; mkN "teste" ; } ; --*
lin repetition_3_N = mkN "repetição" ; --*
lin repetitious_A = mkA "repetitivo" ; --*
lin repetitive_1_A = variants {mkA "insistente" ; mkA "repetitivo" ; } ; --*
lin repetitive_2_A = mkA "repetitivo" ; --*
lin repine_V = variants {mkV "lamentar" ; mkV "reclamar" ; } ; --*
lin replace_1_V2 = mkV2 (mkV "substituir") ; --*
lin replace_2_V2 = variants {mkV2 (mkV "sobrepor") ; mkV2 (mkV "substituir") ; mkV2 (mkV "suplantar") ; mkV2 (mkV "upon") ; } ; --*
lin replace_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "repor") ; } ; --*
lin replace_4_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin replaceability_N = mkN "reacções" ; --*
lin replaceable_A = mkA "substituível" ; --*
lin replacement_1_N = variants {mkN "reposição" ; mkN "substituição" ; } ; --*
lin replacement_2_N = mkN "substituto" ; --*
lin replacement_4_N = mkN "substituto" ; --*
lin replacement_5_N = mkN "substituição" ; --*
lin replacement_6_N = mkN "sucessor" ; --*
lin replant_V2 = mkV2 (mkV "replantar") ; --*
lin replay_1_N = mkN "repetição" ; --*
lin replenishment_N = mkN "substituição" ; --*
lin replenish_V2 = variants {mkV2 (mkV "again") ; mkV2 (mkV "encher") ; mkV2 (mkV "reencher") ; } ; --*
lin replete_A = variants {mkA "cheia" ; mkA "cheio" ; mkA "repleta" ; mkA "repleto" ; mkA "satisfeito" ; } ; --*
lin repletion_1_N = mkN "saciedade" ; --*
lin replica_N = variants {mkN "cópia" ; mkN "réplica" ; mkN "replicação" ; mkN "reprodução" ; } ; --*
lin replicate_3_V2 = mkV2 (mkV "replicar") ; --*
lin replication_1_N = mkN "reprodução" ; --*
lin replication_3_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin replication_5_N = variants {mkN "eco" ; mkN "reflection" ; mkN "reverberação" ; } ; --*
lin replication_6_N = variants {mkN "cópia" ; mkN "réplica" ; mkN "replicação" ; mkN "reprodução" ; } ; --*
lin reply_1_N = variants {mkN "resposta" ; mkN "resultado" ; } ; --*
lin reply_2_N = mkN "resposta" ; --*
lin reply_V = variants {mkV "replicar" ; mkV "responder" ; mkV "retrucar" ; } ; --*
lin reply_VS = variants {mkVS (mkV "replicar") ; mkVS (mkV "responder") ; mkVS (mkV "retrucar") ; } ; --*
lin report_1_N = variants {mkN "relato" ; mkN "relatório" ; mkN "report" ; } ; --*
lin report_1_V2 = variants {mkV2 (mkV "descrever") ; mkV2 (mkV "relatar") ; } ; --*
lin report_2_N = variants {mkN "relato" ; mkN "relatório" ; } ; --*
lin report_2_V2 = variants {mkV2 (mkV "relatar") ; mkV2 (mkV "reportar") ; } ; --*
lin report_3_N = variants {mkN "artigo" ; mkN "história" ; mkN "relato" ; mkN "report" ; mkN "up" ; } ; --*
lin report_3_V2 = mkV2 (mkV "reportar") ; --*
lin report_4_V2 = mkV2 (mkV "notificar") ; --*
lin report_5_V = mkV "relatar" ; --*
lin report_6_N = variants {mkN "ensaio" ; mkN "relatório" ; } ; --*
lin report_7_N = mkN "reputação" ; --*
lin reportable_1_A = variants {mkA "informável" ; mkA "que" ; mkA "relatável" ; } ; --*
lin reportage_N = variants {mkN "artigo" ; mkN "reportagem" ; } ; --*
lin reporterFem_N = variants {mkN "jornalista" ; mkN "repórter" ; } ; --*
lin reporterMasc_N = variants {mkN "jornalista" ; mkN "repórter" ; } ; --*
lin reporting_N = variants {mkN "artigo" ; mkN "reportagem" ; } ; --*
lin report_VS = variants {mkVS (mkV "descrever") ; mkVS (mkV "relatar") ; } ; --*
lin repose_1_N = variants {mkN "relaxação" ; mkN "repouso" ; } ; --*
lin repose_2_N = variants {mkN "of" ; mkN "paz" ; mkN "Paz" ; mkN "repouso" ; mkN "serenidade" ; } ; --*
lin repose_3_N = mkN "serenidade" ; --*
lin repose_3_V = mkV "repousar" ; --*
lin repose_4_V = variants {mkV "estar" ; mkV "jazer" ; } ; --*
lin repose_5_V2 = variants {mkV2 (mkV "deitar") ; mkV2 (mkV "down") ; mkV2 (mkV "pôr") ; } ; --*
lin repositing_1_N = variants {mkN "armazenamento" ; mkN "depósito" ; } ; --*
lin reposition_1_V2 = mkV2 (mkV "deslocar") ; --*
lin reposition_2_V2 = mkV2 (mkV "reposicionar") ; --*
lin repository_2_N = mkN "repositório" ; --*
lin repository_3_N = variants {mkN "monumento" ; mkN "monumentos" ; } ; --*
lin repossess_1_V2 = mkV2 (mkV "reaver") ; --*
lin repossess_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reapropriar") ; } ; --*
lin repot_V2 = mkV2 (mkV "replantar") ; --*
lin reprehend_V2 = mkV2 (mkV "repreender") ; --*
lin reprehensible_A = mkA "repreensível" ; --*
lin represent_10_V2 = variants {mkV2 (mkV "atuar") ; mkV2 (mkV "representar") ; } ; --*
lin represent_11_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "encenar") ; } ; --*
lin represent_14_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "out") ; } ; --*
lin represent_1_V2 = variants {mkV2 (mkV "corresponder") ; mkV2 (mkV "for") ; mkV2 (mkV "representar") ; } ; --*
lin represent_2_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "representar") ; mkV2 (mkV "simbolizar") ; } ; --*
lin represent_3_V2 = mkV2 (mkV "representar") ; --*
lin represent_4_V2 = mkV2 (mkV "representar") ; --*
lin represent_5_V2 = mkV2 (mkV "representar") ; --*
lin represent_6_V2 = variants {mkV2 (mkV "ilustrar") ; mkV2 (mkV "representar") ; } ; --*
lin represent_7_V2 = variants {mkV2 (mkV "representar") ; mkV2 (mkV "up") ; } ; --*
lin represent_8_V2 = mkV2 (mkV "representar") ; --*
lin represent_9_V2 = variants {mkV2 (mkV "figurar") ; mkV2 (mkV "representar") ; } ; --*
lin representation_10_N = mkN "representação" ; --*
lin representation_2_N = variants {mkN "afiguração" ; mkN "desenho" ; mkN "figura" ; mkN "ilustração" ; mkN "imagem" ; mkN "representação" ; } ; --*
lin representation_3_N = mkN "representação" ; --*
lin representation_4_N = mkN "delegação" ; --*
lin representation_8_N = mkN "denúncia" ; --*
lin representative_1_A = mkA "representativo" ; --*
lin representative_2_A = mkA "representativo" ; --*
lin representativeFem_1_N = mkN "representante" ; --*
lin representativeFem_2_N = variants {mkN "porta-voz" ; mkN "representante" ; } ; --*
lin representativeFem_3_N = variants {mkN "congressista" ; mkN "parlamentar" ; } ; --*
lin representativeFem_4_N = mkN "exemplo" ; --*
lin representativeMasc_1_N = mkN "representante" ; --*
lin representativeMasc_2_N = variants {mkN "porta-voz" ; mkN "representante" ; } ; --*
lin representativeMasc_3_N = variants {mkN "congressista" ; mkN "parlamentar" ; } ; --*
lin representativeMasc_4_N = mkN "exemplo" ; --*
lin repress_1_V2 = variants {mkV2 (mkV "defazer") ; mkV2 (mkV "down") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "subjugar") ; } ; --*
lin repress_3_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; } ; --*
lin repress_4_V2 = variants {mkV2 (mkV "reprimir") ; mkV2 (mkV "suprimir") ; } ; --*
lin repress_5_V2 = mkV2 (mkV "reprimir") ; --*
lin repression_1_N = mkN "repressão" ; --*
lin repression_2_N = mkN "repressão" ; --*
lin repressive_1_A = variants {mkA "inibidor" ; mkA "repressivo" ; } ; --*
lin reprieve_2_N = variants {mkN "hiato" ; mkN "suspensão" ; } ; --*
lin reprimand_1_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "criticar") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; } ; --*
lin reprimand_2_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin reprint_V2 = mkV2 (mkV "reimprimir") ; --*
lin reprisal_N = variants {mkN "represália" ; mkN "vingança" ; } ; --*
lin reproach_1_N = variants {mkN "repreenção" ; mkN "reprimenda" ; } ; --*
lin reproach_V2 = mkV2 (mkV "repreender") ; --*
lin reprobate_1_V2 = mkV2 (mkV "rejeitar") ; --*
lin reprobate_3_V2 = variants {mkV2 (mkV "condenar") ; mkV2 (mkV "desaprovar") ; mkV2 (mkV "reprovar") ; } ; --*
lin reproduce_1_V2 = mkV2 (mkV "reproduzir") ; --*
lin reproduce_2_V = variants {mkV "gerar" ; mkV "procriar" ; mkV "reproduzir" ; } ; --*
lin reproduce_4_V2 = mkV2 (mkV "reproduzir") ; --*
lin reproducer_N = mkN "reprodutor" ; --*
lin reproduction_1_N = mkN "reprodução" ; --*
lin reproduction_3_N = variants {mkN "cópia" ; mkN "réplica" ; mkN "replicação" ; mkN "reprodução" ; } ; --*
lin reproduction_4_N = mkN "reprodução" ; --*
lin reproduction_5_N = variants {mkN "of" ; mkN "procriação" ; mkN "reprodução" ; } ; --*
lin reproof_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin reprove_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin reptile_N = variants {mkN "répteis" ; mkN "réptil" ; } ; --*
lin reptilian_N = variants {mkN "répteis" ; mkN "réptil" ; } ; --*
lin republic_1_N = variants {mkN "democracia" ; mkN "república" ; } ; --*
lin republic_2_N = variants {mkN "Republica" ; mkN "república" ; mkN "República" ; } ; --*
lin republican_1_A = mkA "republicano" ; --*
lin republican_2_A = variants {mkA "da" ; mkA "republicano" ; } ; --*
lin republicanism_N = mkN "Republicanismo" ; --*
lin repudiate_1_V2 = variants {mkV2 (mkV "renunciar") ; mkV2 (mkV "repudiar") ; } ; --*
lin repudiate_2_V2 = mkV2 (mkV "repudiar") ; --*
lin repudiate_3_V2 = mkV2 (mkV "repudiar") ; --*
lin repudiate_4_V2 = variants {mkV2 (mkV "enjeitar") ; mkV2 (mkV "repudiar") ; } ; --*
lin repudiation_1_N = mkN "renúncia" ; --*
lin repudiation_2_N = mkN "repúdio" ; --*
lin repugnance_1_N = variants {mkN "abominação" ; mkN "aversão" ; mkN "repulsa" ; mkN "revulsão" ; } ; --*
lin repugnance_2_N = variants {mkN "exclusiveness" ; mkN "incompatibilidade" ; } ; --*
lin repugnant_A = variants {mkA "abominoso" ; mkA "aborrecivel" ; mkA "repugnante" ; } ; --*
lin repulse_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "repelir") ; } ; --*
lin repulse_2_V2 = mkV2 (mkV "repelir") ; --*
lin repulsion_2_N = variants {mkN "abominação" ; mkN "aversão" ; mkN "repulsa" ; mkN "revulsão" ; } ; --*
lin repulsive_1_A = variants {mkA "abominoso" ; mkA "aborrecivel" ; mkA "repugnante" ; } ; --*
lin repurchase_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "readquirir") ; } ; --*
lin reputation_1_N = variants {mkN "fama" ; mkN "honra" ; mkN "renome" ; mkN "reputação" ; } ; --*
lin reputation_2_N = mkN "reputação" ; --*
lin reputation_3_N = mkN "reputação" ; --*
lin repute_N = variants {mkN "fama" ; mkN "honra" ; mkN "renome" ; mkN "reputação" ; } ; --*
lin repute_V2 = variants {mkV2 (mkV "as") ; mkV2 (mkV "considerar") ; mkV2 (mkV "of") ; mkV2 (mkV "on") ; mkV2 (mkV "to") ; mkV2 (mkV "upon") ; } ; --*
lin request_1_N = variants {mkN "abaixo-assinado" ; mkN "apelo" ; mkN "instância" ; mkN "petição" ; mkN "requerimento" ; mkN "requisição" ; mkN "solicitação" ; } ; --*
lin request_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "pedir") ; mkV2 (mkV "requerer") ; mkV2 (mkV "requisitar") ; } ; --*
lin request_2_N = variants {mkN "apelo" ; mkN "encomenda" ; mkN "instância" ; mkN "oração" ; mkN "pedido" ; mkN "pergunta" ; mkN "petição" ; mkN "requerimento" ; mkN "requisição" ; mkN "solicitação" ; } ; --*
lin request_2_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "requerer") ; mkV2 (mkV "requisitar") ; } ; --*
lin request_3_V2 = mkV2 (mkV "pedir") ; --*
lin requiem_1_N = variants {mkN "pranto" ; mkN "réquiem" ; } ; --*
lin requiem_2_N = mkN "réquiem" ; --*
lin require_1_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin require_2_V2V = variants {mkV2V (mkV "exigir") ; mkV2V (mkV "requerer") ; } ; --*
lin require_3_V2 = variants {mkV2 (mkV "comandar") ; mkV2 (mkV "dar") ; mkV2 (mkV "exigir") ; mkV2 (mkV "ordenar") ; } ; --*
lin require_3_V2V = variants {mkV2V (mkV "comandar") ; mkV2V (mkV "dar") ; mkV2V (mkV "exigir") ; mkV2V (mkV "ordenar") ; } ; --*
lin require_3_V = variants {mkV "comandar" ; mkV "dar" ; mkV "exigir" ; mkV "ordenar" ; } ; --*
lin require_3_VS = variants {mkVS (mkV "comandar") ; mkVS (mkV "dar") ; mkVS (mkV "exigir") ; mkVS (mkV "ordenar") ; } ; --*
lin require_4_V2 = variants {mkV2 (mkV "necessitar") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin required_1_A = mkA "requerido" ; --*
lin required_2_A = variants {mkA "compulsório" ; mkA "essencial" ; mkA "forçoso" ; mkA "imprescindível" ; mkA "obrigatório" ; } ; --*
lin requirement_1_N = variants {mkN "exigência" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin requirement_2_N = variants {mkN "necessidade" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin requirement_3_N = variants {mkN "condição" ; mkN "pré-requisito" ; } ; --*
lin requisite_A = mkA "requerido" ; --*
lin requisite_N = variants {mkN "necessidade" ; mkN "pré-requisito" ; mkN "requisito" ; } ; --*
lin requisition_1_N = mkN "requisição" ; --*
lin requisition_1_V2 = mkV2 (mkV "requisitar") ; --*
lin requisition_3_N = variants {mkN "sequestro" ; mkN "Sequestro" ; mkN "Seqüestro" ; } ; --*
lin requite_V2 = mkV2 (mkV "pagar") ; --*
lin reread_V2 = mkV2 (mkV "reler") ; --*
lin reredos_N = mkN "retábulo" ; --*
lin rerun_1_V2 = mkV2 (mkV "reprisar") ; --*
lin rerun_2_V2 = mkV2 (mkV "reapresentar") ; --*
lin rerun_3_V2 = mkV2 (mkV "concorrer") ; --*
lin rerun_N = mkN "reprise" ; --*
lin rescind_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin rescript_2_N = variants {mkN "acta" ; mkN "decreto" ; } ; --*
lin rescript_3_N = mkN "revisão" ; --*
lin rescue_1_V2 = variants {mkV2 (mkV "resgatar") ; mkV2 (mkV "salvar") ; } ; --*
lin rescue_2_V2 = mkV2 (mkV "resgatar") ; --*
lin rescue_N = variants {mkN "salvação" ; mkN "salvamento" ; } ; --*
lin rescuerFem_1_N = mkN "salvador" ; --*
lin rescuerMasc_1_N = mkN "salvador" ; --*
lin research_1_N = mkN "pesquisa" ; --*
lin research_1_V2 = variants {mkV2 (mkV "buscar") ; mkV2 (mkV "explorar") ; mkV2 (mkV "investigar") ; mkV2 (mkV "pesquisar") ; } ; --*
lin research_2_N = variants {mkN "inquérito" ; mkN "investigação" ; mkN "pesquisa" ; mkN "Pesquisa" ; } ; --*
lin research_2_V2 = variants {mkV2 (mkV "buscar") ; mkV2 (mkV "explorar") ; mkV2 (mkV "investigar") ; mkV2 (mkV "pesquisar") ; mkV2 (mkV "procurar") ; } ; --*
lin researcherFem_N = variants {mkN "investigador" ; mkN "pesquisador" ; mkN "worker" ; } ; --*
lin researcherMasc_N = variants {mkN "investigador" ; mkN "pesquisador" ; mkN "worker" ; } ; --*
lin resection_N = mkN "resecção" ; --*
lin resell_V2 = mkV2 (mkV "revender") ; --*
lin resemblance_N = variants {mkN "semelhança" ; mkN "similaridade" ; } ; --*
lin resemble_V2 = variants {mkV2 (mkV "assemelhar") ; mkV2 (mkV "assemelhar-se") ; mkV2 (mkV "assemelhe-se") ; mkV2 (mkV "parecer-se") ; } ; --*
lin resent_1_V2 = mkV2 (mkV "ressentir") ; --*
lin resent_2_V2 = mkV2 (mkV "ressentir") ; --*
lin resentment_N = variants {mkN "amargura" ; mkN "rancor" ; mkN "resentimento" ; mkN "ressentimento" ; } ; --*
lin resent_VS = mkVS (mkV "ressentir") ; --*
lin reserpine_N = mkN "reserpina" ; --*
lin reservation_1_N = variants {mkN "reserva" ; mkN "reservas" ; } ; --*
lin reservation_2_N = mkN "reservas" ; --*
lin reservation_4_N = mkN "reserva" ; --*
lin reservation_7_N = mkN "reserva" ; --*
lin reserve_1_N = variants {mkN "Modestia" ; mkN "modéstia" ; } ; --*
lin reserve_1_V2 = mkV2 (mkV "guardar") ; --*
lin reserve_1_V = mkV "guardar" ; --*
lin reserve_2_N = variants {mkN "acumulação" ; mkN "acúmulo" ; mkN "existências" ; } ; --*
lin reserve_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "reservar") ; mkV2 (mkV "separar") ; } ; --*
lin reserve_3_V2 = mkV2 (mkV "pedir") ; --*
lin reserve_5_N = variants {mkN "reserva" ; mkN "reservas" ; } ; --*
lin reserve_7_N = variants {mkN "reserva" ; mkN "reticência" ; mkN "taciturnidade" ; } ; --*
lin reserve_V3 = variants {mkV3 (mkV "inscrever-se") ; mkV3 (mkV "pedir") ; mkV3 (mkV "reservar") ; } ; --*
lin reservoir_2_N = variants {mkN "depósitos" ; mkN "lake" ; mkN "reservatório" ; } ; --*
lin reservoir_3_N = variants {mkN "Albufeiras" ; mkN "lago" ; mkN "tanque" ; } ; --*
lin reset_2_V2 = mkV2 (mkV "reiniciar") ; --*
lin reset_3_V2 = mkV2 (mkV "reajustar") ; --*
lin reset_3_V = mkV "reajustar" ; --*
lin reshape_1_V2 = mkV2 (mkV "reformar") ; --*
lin reshape_2_V2 = variants {mkV2 (mkV "reformar") ; mkV2 (mkV "remodelar") ; } ; --*
lin reshuffle_1_V2 = mkV2 (mkV "reembaralhar") ; --*
lin reshuffle_2_V2 = mkV2 (mkV "reorganizar") ; --*
lin reside_1_V = variants {mkV "domiciliar" ; mkV "habitar" ; mkV "morar" ; } ; --*
lin reside_2_V = variants {mkV "in" ; mkV "residir" ; mkV "viver" ; } ; --*
lin residence_1_N = variants {mkN "casa" ; mkN "domicílio" ; mkN "residência" ; } ; --*
lin residence_3_N = mkN "habitação" ; --*
lin residence_4_N = variants {mkN "house" ; mkN "mansão" ; mkN "solar" ; } ; --*
lin residency_1_N = mkN "habitação" ; --*
lin residency_2_N = mkN "Residência" ; --*
lin resident_1_A = mkA "residente" ; --*
lin resident_1_N = variants {mkN "morador" ; mkN "ocupante" ; } ; --*
lin resident_2_N = variants {mkN "physician" ; mkN "residente" ; } ; --*
lin residential_1_A = variants {mkA "residencial" ; mkA "residêncial" ; } ; --*
lin residential_2_A = mkA "residencial" ; --*
lin residual_1_N = variants {mkN "excedente" ; mkN "resíduo" ; mkN "resto" ; mkN "sobra" ; mkN "tudomais" ; } ; --*
lin residual_A = mkA "residual" ; --*
lin residuary_1_A = mkA "residual" ; --*
lin residuary_2_A = mkA "residual" ; --*
lin residue_1_N = mkN "residuo" ; --*
lin residue_2_N = variants {mkN "excedente" ; mkN "resíduo" ; mkN "resto" ; mkN "sobra" ; mkN "tudomais" ; } ; --*
lin resign_1_V = variants {mkV "demitir-se" ; mkV "renunciar" ; mkV "resignar" ; mkV "up" ; } ; --*
lin resign_2_V = variants {mkV "demitir-se" ; mkV "down" ; mkV "office" ; mkV "quitar" ; mkV "resignar" ; } ; --*
lin resign_3_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "desobrigar") ; mkV2 (mkV "liberar") ; mkV2 (mkV "up") ; } ; --*
lin resign_4_V = variants {mkV "reconciliar" ; mkV "resignar" ; mkV "resignar-se" ; mkV "submeter" ; } ; --*
lin resignation_1_N = mkN "resignação" ; --*
lin resignation_2_N = mkN "renúncia" ; --*
lin resignation_3_N = mkN "renúncia" ; --*
lin resilience_1_N = variants {mkN "elasticidade" ; mkN "resiliência" ; } ; --*
lin resiliency_2_N = variants {mkN "elasticidade" ; mkN "resiliência" ; } ; --*
lin resilient_1_A = mkA "resiliente" ; --*
lin resilient_2_A = mkA "elástico" ; --*
lin resinated_A = mkA "resinado" ; --*
lin resin_N = variants {mkN "resina" ; mkN "Resinas" ; } ; --*
lin resist_1_V2 = variants {mkV2 (mkV "recusar") ; mkV2 (mkV "resistir") ; } ; --*
lin resist_2_V2 = variants {mkV2 (mkV "firm") ; mkV2 (mkV "out") ; mkV2 (mkV "resistir") ; } ; --*
lin resist_2_V = variants {mkV "firm" ; mkV "out" ; mkV "resistir" ; } ; --*
lin resist_2_VV = variants {mkVV (mkV "firm") ; mkVV (mkV "out") ; mkVV (mkV "resistir") ; } ; --*
lin resist_3_V = mkV "protestar" ; --*
lin resist_4_V2 = mkV2 (mkV "resistir") ; --*
lin resist_5_V2 = variants {mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin resist_6_V2 = mkV2 (mkV "resistir") ; --*
lin resist_6_V = mkV "resistir" ; --*
lin resist_6_VV = mkVV (mkV "resistir") ; --*
lin resistance_10_N = mkN "resistor" ; --*
lin resistance_11_N = mkN "resistência" ; --*
lin resistance_1_N = mkN "oposição" ; --*
lin resistance_3_N = variants {mkN "impedância" ; mkN "resistance" ; mkN "resistividade" ; } ; --*
lin resistance_5_N = mkN "imunidade" ; --*
lin resistance_7_N = mkN "organização" ; --*
lin resistant_1_A = mkA "imune" ; --*
lin resistant_3_A = mkA "resistente" ; --*
lin resistant_4_A = mkA "resistente" ; --*
lin resistant_5_A = mkA "resistente" ; --*
lin resister_2_N = variants {mkN "adversário" ; mkN "antagonista" ; mkN "inimigo" ; mkN "opositor" ; } ; --*
lin resistive_2_A = mkA "resistente" ; --*
lin resistivity_N = variants {mkN "impedância" ; mkN "resistance" ; mkN "resistividade" ; } ; --*
lin resistless_1_A = mkA "irresistível" ; --*
lin resistor_N = mkN "resistor" ; --*
lin res_N = variants {mkN "Sistema" ; mkN "system" ; } ; --*
lin resoluteness_N = variants {mkN "firmeza" ; mkN "of" ; } ; --*
lin resolution_10_N = variants {mkN "resposta" ; mkN "solução" ; } ; --*
lin resolution_11_N = mkN "resolução" ; --*
lin resolution_1_N = mkN "resolução" ; --*
lin resolution_3_N = variants {mkN "firmeza" ; mkN "of" ; } ; --*
lin resolution_4_N = mkN "resolução" ; --*
lin resolution_5_N = mkN "resolução" ; --*
lin resolve_1_N = variants {mkN "firmeza" ; mkN "of" ; } ; --*
lin resolve_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "decidir") ; mkV2 (mkV "resolver") ; } ; --*
lin resolve_1_V = variants {mkV "concluir" ; mkV "decidir" ; mkV "resolver" ; } ; --*
lin resolve_2_N = mkN "resolução" ; --*
lin resolve_2_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "resolver") ; } ; --*
lin resolve_2_V = variants {mkV "concluir" ; mkV "resolver" ; } ; --*
lin resolve_3_V = variants {mkV "decidir" ; mkV "propor-se" ; mkV "resolver" ; } ; --*
lin resolve_4_V2 = mkV2 (mkV "responder") ; --*
lin resolve_6_V2 = mkV2 (mkV "resolver") ; --*
lin resolve_7_V2 = variants {mkV2 (mkV "dissolver") ; mkV2 (mkV "up") ; } ; --*
lin resonance_2_N = variants {mkN "Ressonancia" ; mkN "ressonância" ; } ; --*
lin resonance_4_N = mkN "afinidade" ; --*
lin resonant_1_A = variants {mkA "ressoante" ; mkA "ressonante" ; } ; --*
lin resonant_2_A = variants {mkA "evocador" ; mkA "nostálgico" ; mkA "sugestivo" ; } ; --*
lin resonate_1_V = mkV "ressoar" ; --*
lin resonate_2_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "ser") ; } ; --*
lin resonate_2_V = variants {mkV "across" ; mkV "ser" ; } ; --*
lin resorcinol_N = mkN "Resorcina" ; --*
lin resorption_1_N = mkN "ressorção" ; --*
lin resort_1_N = variants {mkN "hotel" ; mkN "resort" ; } ; --*
lin resort_1_V = variants {mkV "back" ; mkV "recorrer" ; } ; --*
lin resort_2_N = variants {mkN "ground" ; mkN "lugar" ; } ; --*
lin resort_3_N = variants {mkN "recurso" ; mkN "refúgio" ; } ; --*
lin resort_4_N = mkN "recurso" ; --*
lin resound_1_V = variants {mkV "ecoar" ; mkV "ressoar" ; mkV "reverberar" ; } ; --*
lin resound_2_V2 = variants {mkV2 (mkV "noise") ; mkV2 (mkV "ressoar") ; mkV2 (mkV "soar") ; } ; --*
lin resound_2_V = variants {mkV "noise" ; mkV "ressoar" ; mkV "soar" ; } ; --*
lin resource_1_N = mkN "recurso" ; --*
lin resource_2_N = mkN "recurso" ; --*
lin resourceful_A = variants {mkA "capaz" ; mkA "desenvolto" ; mkA "engenhoso" ; mkA "habilidoso" ; mkA "inventivo" ; } ; --*
lin respect_1_V2 = variants {mkV2 (mkV "prezar") ; mkV2 (mkV "respeitar") ; mkV2 (mkV "venerar") ; } ; --*
lin respect_2_N = variants {mkN "estima" ; mkN "respeito" ; } ; --*
lin respect_2_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "homenagear") ; mkV2 (mkV "honrar") ; mkV2 (mkV "prestigiar") ; mkV2 (mkV "respeitar") ; } ; --*
lin respect_3_N = variants {mkN "deferência" ; mkN "respeito" ; } ; --*
lin respect_4_N = variants {mkN "respeito" ; mkN "reverência" ; } ; --*
lin respect_5_N = mkN "obediência" ; --*
lin respect_7_N = mkN "deferência" ; --*
lin respectable_1_A = mkA "respeitável" ; --*
lin respectable_2_A = variants {mkA "estimável" ; mkA "respeitável" ; } ; --*
lin respectable_3_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin respectful_1_A = mkA "respeitoso" ; --*
lin respectful_2_A = mkA "respeitoso" ; --*
lin respective_A = variants {mkA "respectivo" ; mkA "respetivo" ; } ; --*
lin respiration_1_N = variants {mkN "respiração" ; mkN "respiration" ; } ; --*
lin respiration_2_N = mkN "respiração" ; --*
lin respiration_3_N = variants {mkN "respiração" ; mkN "respiration" ; } ; --*
lin respirator_1_N = mkN "aparelhos" ; --*
lin respiratory_A = mkA "respiratório" ; --*
lin respire_3_V = variants {mkV "a" ; mkV "bafejar" ; mkV "espirar" ; mkV "respirar" ; } ; --*
lin respite_2_N = variants {mkN "out" ; mkN "pausa" ; } ; --*
lin respite_3_N = variants {mkN "hiato" ; mkN "suspensão" ; } ; --*
lin respite_4_N = variants {mkN "descanso" ; mkN "pausa" ; mkN "period" ; mkN "repouso" ; } ; --*
lin resplendence_N = mkN "glória" ; --*
lin resplendency_N = mkN "glória" ; --*
lin resplendent_A = variants {mkA "esplêndido" ; mkA "glorioso" ; mkA "magnífico" ; mkA "maravilhoso" ; } ; --*
lin respond_1_V = variants {mkV "reagir" ; mkV "responder" ; } ; --*
lin respond_1_VS = variants {mkVS (mkV "reagir") ; mkVS (mkV "responder") ; } ; --*
lin respond_2_V = variants {mkV "replicar" ; mkV "responder" ; mkV "retrucar" ; } ; --*
lin respond_2_VS = variants {mkVS (mkV "replicar") ; mkVS (mkV "responder") ; mkVS (mkV "retrucar") ; } ; --*
lin respond_3_V = mkV "responder" ; --*
lin response_2_N = variants {mkN "reação" ; mkN "resposta" ; } ; --*
lin response_3_N = variants {mkN "resposta" ; mkN "resultado" ; } ; --*
lin response_4_N = variants {mkN "bem-vindo" ; mkN "recebimento" ; mkN "recepção" ; } ; --*
lin response_6_N = mkN "resposta" ; --*
lin response_to_N2 = mkN2 (mkN "resultado") noPrep ; --*
lin responsibility_1_N = variants {mkN "dever" ; mkN "responsabilidade" ; } ; --*
lin responsibility_2_N = variants {mkN "Provincia" ; mkN "Província" ; mkN "Províncias" ; mkN "responsabilidade" ; } ; --*
lin responsibility_3_N = mkN "responsabilidade" ; --*
lin responsible_1_A = mkA "responsável" ; --*
lin responsible_2_A = variants {mkA "for" ; mkA "responsável" ; } ; --*
lin responsible_3_A = mkA "responsável" ; --*
lin responsive_2_A = mkA "responsivo" ; --*
lin responsiveness_1_N = variants {mkN "reatividade" ; mkN "responsividade" ; mkN "sensibilidade" ; } ; --*
lin rest_10_V2 = mkV2 (mkV "apoiar") ; --*
lin rest_1_N = variants {mkN "excedente" ; mkN "resíduo" ; mkN "resto" ; mkN "sobra" ; mkN "tudomais" ; } ; --*
lin rest_2_N = variants {mkN "relaxação" ; mkN "repouso" ; } ; --*
lin rest_2_V = variants {mkV "a" ; mkV "espirar" ; mkV "one's" ; mkV "respirar" ; } ; --*
lin rest_3_N = variants {mkN "descanso" ; mkN "pausa" ; mkN "period" ; mkN "repouso" ; } ; --*
lin rest_4_V = variants {mkV "jazer" ; mkV "restar" ; } ; --*
lin rest_5_V = variants {mkV "cochilar" ; mkV "descansar" ; mkV "dormir" ; mkV "repousar" ; } ; --*
lin rest_6_N = mkN "suporte" ; --*
lin rest_7_N = mkN "pausa" ; --*
lin restart_1_V2 = mkV2 (mkV "recomeçar") ; --*
lin restart_1_V = mkV "recomeçar" ; --*
lin restart_2_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "prosseguir") ; } ; --*
lin restate_V2 = variants {mkV2 (mkV "reapresentar") ; mkV2 (mkV "redizer") ; mkV2 (mkV "reiterar") ; mkV2 (mkV "repetir") ; } ; --*
lin restaurant_N = variants {mkN "house" ; mkN "place" ; mkN "restaurante" ; } ; --*
lin rest_day_N = variants {mkN "day" ; mkN "of" ; } ; --*
lin rest_home_N = variants {mkN "casa" ; mkN "home" ; } ; --*
lin restitution_1_N = mkN "indemnizações" ; --*
lin restitution_2_N = mkN "restituição" ; --*
lin restitution_3_N = variants {mkN "restituição" ; mkN "retorno" ; } ; --*
lin restive_1_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin restiveness_1_N = mkN "nervosismo" ; --*
lin restless_2_A = mkA "sem" ; --*
lin restless_3_A = mkA "inquieto" ; --*
lin restlessness_2_N = mkN "impaciência" ; --*
lin restlessness_4_N = variants {mkN "inquietação" ; mkN "inquietude" ; } ; --*
lin restock_V2 = mkV2 (mkV "reestocar") ; --*
lin restoration_3_N = variants {mkN "restituição" ; mkN "retorno" ; } ; --*
lin restoration_4_N = variants {mkN "renovação" ; mkN "restauração" ; } ; --*
lin restore_1_V2 = mkV2 (mkV "restabelecer") ; --*
lin restore_2_V2 = variants {mkV2 (mkV "regenerar") ; mkV2 (mkV "restituir") ; } ; --*
lin restore_4_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "emendar") ; mkV2 (mkV "on") ; mkV2 (mkV "reparar") ; mkV2 (mkV "up") ; } ; --*
lin restore_5_V2 = variants {mkV2 (mkV "restabelecer") ; mkV2 (mkV "restaurar") ; } ; --*
lin restorer_N = mkN "restaurador" ; --*
lin restrain_1_V2 = variants {mkV2 (mkV "confinar") ; mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; mkV2 (mkV "reter") ; } ; --*
lin restrain_2_V2 = variants {mkV2 (mkV "constrangir") ; mkV2 (mkV "conter") ; mkV2 (mkV "restringir") ; } ; --*
lin restrain_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "coibir") ; mkV2 (mkV "conter") ; mkV2 (mkV "deter") ; mkV2 (mkV "entravar") ; } ; --*
lin restraint_1_N = variants {mkN "amarra" ; mkN "limitação" ; } ; --*
lin restraint_2_N = mkN "controle" ; --*
lin restraint_3_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin restraint_4_N = mkN "restrição" ; --*
lin restraint_6_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin restrict_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "cercear") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin restrict_2_V2 = variants {mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin restrict_3_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin restricted_1_A = mkA "restrito" ; --*
lin restriction_1_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin restriction_2_N = variants {mkN "limitação" ; mkN "restrição" ; } ; --*
lin restriction_3_N = mkN "restrição" ; --*
lin restructure_V2 = variants {mkV2 (mkV "reconstituir") ; mkV2 (mkV "reestruturar") ; } ; --*
lin rest_VA = variants {mkVA (mkV "continuar") ; mkVA (mkV "ficar") ; mkVA (mkV "manter") ; mkVA (mkV "permanecer") ; } ; --*
lin result_1_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin result_2_N = variants {mkN "resposta" ; mkN "solução" ; } ; --*
lin result_3_N = variants {mkN "placar" ; mkN "result" ; mkN "resultado" ; } ; --*
lin resultant_2_N = variants {mkN "placar" ; mkN "result" ; mkN "resultado" ; } ; --*
lin resultant_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin result_in_V2 = variants {mkV2 (mkV "redundar") ; mkV2 (mkV "resultar") ; mkV2 (mkV "seguir") ; mkV2 (mkV "seguir-se") ; mkV2 (mkV "sobrevir") ; mkV2 (mkV "suceder") ; } ; --*
lin result_to_V2 = mkV2 (mkV "deixar") ; --*
lin resume_1_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "prosseguir") ; } ; --*
lin resume_2_V = variants {mkV "reassumir" ; mkV "recomeçar" ; mkV "up" ; } ; --*
lin resume_3_V2 = mkV2 (mkV "reassumir") ; --*
lin resume_4_V2 = variants {mkV2 (mkV "resumir") ; mkV2 (mkV "sumarizar") ; mkV2 (mkV "up") ; } ; --*
lin resumption_N = mkN "retomada" ; --*
lin resurgence_N = variants {mkN "ressurgência" ; mkN "ressurreição" ; mkN "revitalização" ; mkN "revivalismo" ; } ; --*
lin resurrect_1_V2 = mkV2 (mkV "ressuscitar") ; --*
lin resurrect_2_V2 = mkV2 (mkV "reviver") ; --*
lin resurrect_3_V2 = mkV2 (mkV "ressuscitar") ; --*
lin resurrection_2_N = mkN "ressurreição" ; --*
lin resurrect_V = mkV "ressuscitar" ; --*
lin resuscitate_1_V2 = variants {mkV2 (mkV "ressuscitar") ; mkV2 (mkV "reviver") ; } ; --*
lin resuscitate_2_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "to") ; } ; --*
lin resuscitate_2_V = variants {mkV "acordar" ; mkV "to" ; } ; --*
lin resuscitation_N = mkN "ressuscitação" ; --*
lin retailer_N = variants {mkN "merchant" ; mkN "retalhista" ; mkN "varejista" ; } ; --*
lin retail_N = variants {mkN "retalho" ; mkN "varejo" ; } ; --*
lin retail_V = mkV "vender" ; --*
lin retain_1_V2 = mkV2 (mkV "reter") ; --*
lin retain_2_V2 = variants {mkV2 (mkV "durar") ; mkV2 (mkV "on") ; mkV2 (mkV "prolongar-se") ; } ; --*
lin retain_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reter") ; } ; --*
lin retain_4_V2 = mkV2 (mkV "reter") ; --*
lin retainer_2_N = variants {mkN "empregado" ; mkN "servidor" ; } ; --*
lin retainer_3_N = mkN "aparelho" ; --*
lin retake_2_V2 = mkV2 (mkV "recapturar") ; --*
lin retaliate_1_V = variants {mkV "desagravar" ; mkV "desforrar" ; mkV "retaliar" ; mkV "revidar" ; mkV "vingar" ; } ; --*
lin retaliate_2_V = variants {mkV "back" ; mkV "contra-atacar" ; } ; --*
lin retaliation_N = variants {mkN "revanche" ; mkN "vingança" ; } ; --*
lin retard_1_V2 = mkV2 (mkV "atrasar") ; --*
lin retard_3_V2 = mkV2 (mkV "atrasar") ; --*
lin retard_4_V2 = variants {mkV2 (mkV "desacelerar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "up") ; } ; --*
lin retardation_1_N = mkN "desaceleração" ; --*
lin retardation_2_N = mkN "atraso" ; --*
lin retardation_4_N = variants {mkN "atraso" ; mkN "retardation" ; mkN "Retardo" ; } ; --*
lin retardation_5_N = variants {mkN "atraso" ; mkN "operação" ; } ; --*
lin retch_1_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin retch_2_V = mkV "tentar" ; --*
lin retell_3_V2 = variants {mkV2 (mkV "reapresentar") ; mkV2 (mkV "redizer") ; mkV2 (mkV "reiterar") ; mkV2 (mkV "repetir") ; } ; --*
lin retem_1_N = variants {mkN "bush" ; mkN "raetam" ; mkN "zimbro" ; } ; --*
lin retention_1_N = mkN "retenção" ; --*
lin retention_2_N = mkN "memória" ; --*
lin retentive_1_A = mkA "tenaz" ; --*
lin retentiveness_1_N = mkN "memória" ; --*
lin rethink_V2 = mkV2 (mkV "repensar") ; --*
lin reticence_N = variants {mkN "reserva" ; mkN "reticência" ; mkN "taciturnidade" ; } ; --*
lin reticle_N = mkN "retículo" ; --*
lin reticule_2_N = mkN "retículo" ; --*
lin reticulocyte_N = mkN "reticulócito" ; --*
lin reticulum_1_N = variants {mkN "Constelação" ; mkN "Reticulum" ; } ; --*
lin reticulum_3_N = variants {mkN "Barrete" ; mkN "stomach" ; } ; --*
lin retina_N = mkN "retina" ; --*
lin retinitis_N = mkN "retinite" ; --*
lin retinopathy_N = mkN "retinopatia" ; --*
lin retinue_N = variants {mkN "comitiva" ; mkN "séquito" ; } ; --*
lin retire_11_V2 = variants {mkV2 (mkV "deitar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; mkV2 (mkV "to") ; } ; --*
lin retire_11_V = variants {mkV "deitar-se" ; mkV "down" ; mkV "in" ; mkV "out" ; mkV "the" ; mkV "to" ; } ; --*
lin retire_1_V = variants {mkV "aposentar-se" ; mkV "se" ; } ; --*
lin retire_2_V = mkV "retirar-se" ; --*
lin retire_3_V = variants {mkV "afastar" ; mkV "afastar-se" ; mkV "away" ; mkV "back" ; mkV "recuar" ; mkV "retroceder" ; } ; --*
lin retire_5_V = mkV "adiar" ; --*
lin retire_8_V = mkV "retirar" ; --*
lin retired_A = variants {mkA "aposentado" ; mkA "jubilado" ; } ; --*
lin retiree_N = variants {mkN "jubilado" ; mkN "person" ; } ; --*
lin retirement_1_N = variants {mkN "aposentação" ; mkN "aposentadoria" ; mkN "Reforma" ; } ; --*
lin retirement_2_N = mkN "aposentadoria" ; --*
lin retool_1_V2 = mkV2 (mkV "rever") ; --*
lin retool_2_V2 = mkV2 (mkV "reequipar") ; --*
lin retort_1_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin retort_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "replicar") ; mkV2 (mkV "retornar") ; mkV2 (mkV "retorquir") ; mkV2 (mkV "retortar") ; mkV2 (mkV "retrucar") ; mkV2 (mkV "ripostar") ; } ; --*
lin retort_VS = variants {mkVS (mkV "back") ; mkVS (mkV "replicar") ; mkVS (mkV "retornar") ; mkVS (mkV "retorquir") ; mkVS (mkV "retortar") ; mkVS (mkV "retrucar") ; mkVS (mkV "ripostar") ; } ; --*
lin retrace_1_V2 = mkV2 (mkV "retraçar") ; --*
lin retrace_2_V2 = variants {mkV2 (mkV "reconstruir") ; mkV2 (mkV "retraçar") ; } ; --*
lin retract_1_V2 = variants {mkV2 (mkV "abjurar") ; mkV2 (mkV "recantar") ; mkV2 (mkV "renunciar") ; } ; --*
lin retract_2_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "back") ; } ; --*
lin retract_2_V = variants {mkV "afastar" ; mkV "back" ; } ; --*
lin retraction_1_N = mkN "abjuração" ; --*
lin retransmit_V2 = mkV2 (mkV "retransmitir") ; --*
lin retread_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "retrabalhar") ; } ; --*
lin retread_N = mkN "recauchutagem" ; --*
lin retreat_1_N = mkN "retirada" ; --*
lin retreat_1_V = variants {mkV "afastar" ; mkV "afastar-se" ; mkV "away" ; mkV "back" ; mkV "recuar" ; mkV "retroceder" ; } ; --*
lin retreat_2_V = mkV "andar" ; --*
lin retreat_4_V = variants {mkV "away" ; mkV "back" ; mkV "decorrer" ; mkV "in" ; mkV "out" ; } ; --*
lin retribution_2_N = mkN "retribuição" ; --*
lin retribution_3_N = mkN "vingança" ; --*
lin retrieval_2_N = mkN "recuperação" ; --*
lin retrieval_3_N = mkN "recuperação" ; --*
lin retrieve_1_V2 = variants {mkV2 (mkV "re-adquirir") ; mkV2 (mkV "reconquistar") ; mkV2 (mkV "recuperar") ; mkV2 (mkV "reganhar") ; } ; --*
lin retrieve_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "lembrar") ; mkV2 (mkV "recordar") ; mkV2 (mkV "recordar-se") ; mkV2 (mkV "up") ; } ; --*
lin retriever_N = mkN "Retriever" ; --*
lin retrofit_1_V2 = mkV2 (mkV "renovar") ; --*
lin retrofit_2_N = variants {mkN "reequipagem" ; mkN "reequipamento" ; } ; --*
lin retrograde_1_A = mkA "retrógrado" ; --*
lin retrogression_1_N = mkN "degeneração" ; --*
lin retrospective_N = variants {mkN "retrospectiva" ; mkN "Retrospectiva" ; } ; --*
lin retrovirus_N = mkN "Retroviridae" ; --*
lin return_10_N = variants {mkN "back" ; mkN "even" ; mkN "retribuição" ; } ; --*
lin return_10_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reintegrar") ; mkV2 (mkV "retribuir") ; } ; --*
lin return_12_V2 = mkV2 (mkV "reeleger") ; --*
lin return_12_V = mkV "reeleger" ; --*
lin return_15_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "gerar") ; } ; --*
lin return_1_N = variants {mkN "declaração" ; mkN "return" ; mkN "tax" ; } ; --*
lin return_1_V = variants {mkV "devolver" ; mkV "regressar" ; mkV "retornar" ; } ; --*
lin return_2_N = variants {mkN "regresso" ; mkN "retorno" ; mkN "vinda" ; mkN "volta" ; } ; --*
lin return_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "retornar") ; } ; --*
lin return_3_N = variants {mkN "back" ; mkN "regresso" ; } ; --*
lin return_3_V = variants {mkV "back" ; mkV "reverter" ; } ; --*
lin return_4_N = variants {mkN "restituição" ; mkN "retorno" ; } ; --*
lin return_5_N = variants {mkN "regresso" ; mkN "retorno" ; } ; --*
lin return_5_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "voltar") ; } ; --*
lin return_5_V = variants {mkV "back" ; mkV "voltar" ; } ; --*
lin return_6_N = variants {mkN "receita" ; mkN "renda" ; mkN "rendimento" ; } ; --*
lin return_7_N = variants {mkN "recorrência" ; mkN "repetição" ; } ; --*
lin return_8_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin return_8_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "replicar") ; mkV2 (mkV "retornar") ; mkV2 (mkV "retorquir") ; mkV2 (mkV "retortar") ; mkV2 (mkV "retrucar") ; mkV2 (mkV "ripostar") ; } ; --*
lin return_8_V = variants {mkV "back" ; mkV "replicar" ; mkV "retornar" ; mkV "retorquir" ; mkV "retortar" ; mkV "retrucar" ; mkV "ripostar" ; } ; --*
lin return_9_N = variants {mkN "key" ; mkN "tecla" ; } ; --*
lin return_9_V = variants {mkV "back" ; mkV "voltar" ; } ; --*
lin reunification_N = variants {mkN "reunião" ; mkN "reunificação" ; } ; --*
lin reunion_1_N = mkN "reunião" ; --*
lin reunion_2_N = variants {mkN "reunião" ; mkN "reunificação" ; } ; --*
lin reunite_V = mkV "reunificar" ; --*
lin reuptake_N = mkN "Recaptação" ; --*
lin revaluation_N = variants {mkN "nova" ; mkN "reavaliação" ; } ; --*
lin revalue_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "revalorizar") ; mkV2 (mkV "subir") ; } ; --*
lin revalue_2_V2 = mkV2 (mkV "revalorizar") ; --*
lin revamp_1_V2 = mkV2 (mkV "renovar") ; --*
lin revamp_2_V2 = mkV2 (mkV "renovar") ; --*
lin reveal_1_V2 = variants {mkV2 (mkV "desvendar") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; mkV2 (mkV "trazer") ; } ; --*
lin reveal_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin reveal_3_V2 = mkV2 (mkV "revelar") ; --*
lin reveal_VS = variants {mkVS (mkV "away") ; mkVS (mkV "descerrar") ; mkVS (mkV "divulgar") ; mkVS (mkV "on") ; mkVS (mkV "out") ; mkVS (mkV "revelar") ; } ; --*
lin revel_1_V = variants {mkV "desfrutar" ; mkV "gozar" ; } ; --*
lin revel_2_V = variants {mkV "celebrar" ; mkV "curtir" ; mkV "happy" ; mkV "it" ; mkV "merry" ; mkV "whoopie" ; } ; --*
lin revelation_1_N = mkN "revelação" ; --*
lin revelation_2_N = mkN "revelação" ; --*
lin revelation_3_N = variants {mkN "Revelação" ; mkN "revelation" ; } ; --*
lin revelation_4_N = variants {mkN "Apocalipse" ; mkN "of" ; mkN "Revelação" ; } ; --*
lin revengeful_A = mkA "vingativo" ; --*
lin revenge_N = variants {mkN "revanche" ; mkN "vingança" ; } ; --*
lin revenge_V2 = variants {mkV2 (mkV "desagravar") ; mkV2 (mkV "desforrar") ; mkV2 (mkV "retaliar") ; mkV2 (mkV "revidar") ; mkV2 (mkV "vingar") ; } ; --*
lin revenue_1_N = variants {mkN "faturamento" ; mkN "rendimento" ; mkN "retorno" ; } ; --*
lin revenue_2_N = variants {mkN "income" ; mkN "pagamento" ; mkN "revenue" ; } ; --*
lin reverberate_1_V = variants {mkV "ecoar" ; mkV "ressoar" ; mkV "reverberar" ; } ; --*
lin reverberate_4_V2 = mkV2 (mkV "refletir") ; --*
lin reverberate_5_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin reverberation_1_N = variants {mkN "eco" ; mkN "reflection" ; mkN "reverberação" ; } ; --*
lin reverberation_2_N = mkN "repercussão" ; --*
lin revere_1_V2 = mkV2 (mkV "adorar") ; --*
lin revere_2_V2 = variants {mkV2 (mkV "reverenciar") ; mkV2 (mkV "temer") ; mkV2 (mkV "venerar") ; } ; --*
lin reverence_1_N = variants {mkN "reverência" ; mkN "temor" ; } ; --*
lin reverence_V2 = variants {mkV2 (mkV "reverenciar") ; mkV2 (mkV "temer") ; mkV2 (mkV "venerar") ; } ; --*
lin reverend_1_N = variants {mkN "clérigo" ; mkN "of" ; mkN "pároco" ; mkN "sacerdote" ; } ; --*
lin reverend_A = mkA "sublime" ; --*
lin reverential_A = mkA "respeitoso" ; --*
lin reverie_1_N = variants {mkN "castle" ; mkN "devaneio" ; mkN "in" ; mkN "sonho" ; mkN "viagem" ; } ; --*
lin revers_2_N = variants {mkN "Paul" ; mkN "Revere" ; } ; --*
lin reversal_1_N = variants {mkN "inversão" ; mkN "reversão" ; } ; --*
lin reversal_2_N = variants {mkN "eye" ; mkN "revés" ; } ; --*
lin reversal_3_N = variants {mkN "around" ; mkN "darvoltas" ; } ; --*
lin reversal_5_N = mkN "revogação" ; --*
lin reversal_6_N = mkN "reversão" ; --*
lin reversal_7_N = mkN "transposição" ; --*
lin reversal_8_N = variants {mkN "change" ; mkN "conversão" ; mkN "reviravolta" ; } ; --*
lin reverse_1_N = variants {mkN "contrário" ; mkN "oposto" ; mkN "reverso" ; } ; --*
lin reverse_1_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "inverter") ; mkV2 (mkV "reverter") ; mkV2 (mkV "virar") ; } ; --*
lin reverse_2_N = variants {mkN "gear" ; mkN "ré" ; } ; --*
lin reverse_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "desvirar") ; mkV2 (mkV "inverter") ; } ; --*
lin reverse_2_V = variants {mkV "back" ; mkV "desvirar" ; mkV "inverter" ; } ; --*
lin reverse_3_A = mkA "inverso" ; --*
lin reverse_3_N = variants {mkN "eye" ; mkN "revés" ; } ; --*
lin reverse_3_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "derrubar") ; } ; --*
lin reverse_4_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin reverse_5_V2 = variants {mkV2 (mkV "inverter") ; mkV2 (mkV "reverter") ; } ; --*
lin reverse_6_N = mkN "reversão" ; --*
lin reversibility_N = mkN "reversibilidade" ; --*
lin reversible_1_A = mkA "reversvel" ; --*
lin reversion_3_N = variants {mkN "atavismo" ; mkN "Atavismo" ; } ; --*
lin reversion_4_N = mkN "reversão" ; --*
lin reversion_6_N = variants {mkN "quebra" ; mkN "Recidiva" ; } ; --*
lin revert_1_V = variants {mkV "back" ; mkV "reverter" ; } ; --*
lin review_10_N = variants {mkN "inspeção" ; mkN "inspecção" ; mkN "teste" ; } ; --*
lin review_1_N = variants {mkN "nova" ; mkN "reavaliação" ; } ; --*
lin review_1_V2 = variants {mkV2 (mkV "reexaminar") ; mkV2 (mkV "rever") ; } ; --*
lin review_2_N = variants {mkN "article" ; mkN "resenha" ; mkN "review" ; } ; --*
lin review_2_V2 = mkV2 (mkV "passar") ; --*
lin review_3_N = variants {mkN "acompanhamento" ; mkN "revisão" ; } ; --*
lin review_4_V2 = variants {mkV2 (mkV "rever") ; mkV2 (mkV "up") ; } ; --*
lin review_5_N = mkN "Teatro" ; --*
lin review_5_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "recordar") ; mkV2 (mkV "rever") ; } ; --*
lin review_6_N = mkN "resenha" ; --*
lin review_7_N = variants {mkN "recapitulação" ; mkN "revisão" ; } ; --*
lin review_9_N = mkN "revisão" ; --*
lin reviewer_1_N = variants {mkN "leitor" ; mkN "parecerista" ; mkN "revisor" ; } ; --*
lin reviewer_2_N = variants {mkN "comentarista" ; mkN "jornalista" ; } ; --*
lin review_V = variants {mkV "over" ; mkV "vistoriar" ; } ; --*
lin revile_V2 = mkV2 (mkV "denegrir") ; --*
lin revise_1_N = mkN "revisão" ; --*
lin revise_1_V2 = mkV2 (mkV "rever") ; --*
lin revise_2_V2 = mkV2 (mkV "rever") ; --*
lin reviser_N = variants {mkN "man" ; mkN "redactor" ; mkN "redator" ; } ; --*
lin revision_2_N = mkN "revisão" ; --*
lin revisit_V2 = mkV2 (mkV "revisitar") ; --*
lin revitalization_1_N = variants {mkN "ressurgência" ; mkN "ressurreição" ; mkN "revitalização" ; mkN "revivalismo" ; } ; --*
lin revitalize_1_V2 = mkV2 (mkV "regenerar") ; --*
lin revival_1_N = variants {mkN "ressurgência" ; mkN "ressurreição" ; mkN "revitalização" ; mkN "revivalismo" ; } ; --*
lin revivalistic_A = mkA "revivalista" ; --*
lin revive_1_V2 = variants {mkV2 (mkV "ressuscitar") ; mkV2 (mkV "reviver") ; } ; --*
lin revive_2_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin revive_3_V = mkV "reviver" ; --*
lin revive_4_V2 = mkV2 (mkV "reviver") ; --*
lin revive_5_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "to") ; } ; --*
lin revivify_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "reanimar") ; mkV2 (mkV "reavivar") ; mkV2 (mkV "renascer") ; mkV2 (mkV "reviver") ; mkV2 (mkV "vivificar") ; } ; --*
lin revocation_2_N = variants {mkN "revogação" ; mkN "Revogação" ; } ; --*
lin revoke_2_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin revolt_1_V = mkV "revoltar" ; --*
lin revolt_2_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "out") ; mkV2 (mkV "repugnar") ; } ; --*
lin revolt_3_V2 = variants {mkV2 (mkV "indignar") ; mkV2 (mkV "nausear") ; mkV2 (mkV "repugnar") ; mkV2 (mkV "revoltar") ; mkV2 (mkV "up") ; } ; --*
lin revolt_N = variants {mkN "insurreição" ; mkN "rebelião" ; mkN "revolta" ; } ; --*
lin revolution_1_N = mkN "revolução" ; --*
lin revolution_2_N = variants {mkN "revolução" ; mkN "Revolução" ; mkN "Revoluções" ; } ; --*
lin revolution_3_N = mkN "rotação" ; --*
lin revolutionary_1_A = mkA "revolucionário" ; --*
lin revolutionary_2_A = mkA "rotatório" ; --*
lin revolutionary_4_A = mkA "revolucionário" ; --*
lin revolutionary_N = variants {mkN "revolucionário" ; mkN "Revolucionário" ; mkN "Revolucionários" ; mkN "subversivo" ; } ; --*
lin revolutionist_N = variants {mkN "revolucionário" ; mkN "Revolucionário" ; mkN "Revolucionários" ; mkN "subversivo" ; } ; --*
lin revolutionize_1_V2 = mkV2 (mkV "revolucionar") ; --*
lin revolutionize_2_V2 = mkV2 (mkV "revolucionar") ; --*
lin revolutionize_3_V2 = mkV2 (mkV "revolucionar") ; --*
lin revolve_1_V = variants {mkV "around" ; mkV "dar" ; mkV "rodar" ; } ; --*
lin revolve_2_V2 = mkV2 (mkV "orbitar") ; --*
lin revolve_3_V2 = variants {mkV2 (mkV "revirar") ; mkV2 (mkV "revolver") ; mkV2 (mkV "rodar") ; } ; --*
lin revolver_1_N = mkN "revólver" ; --*
lin revolver_2_N = variants {mkN "door" ; mkN "porta" ; } ; --*
lin revue_N = mkN "Teatro" ; --*
lin revulsion_N = variants {mkN "abominação" ; mkN "aversão" ; mkN "repulsa" ; mkN "revulsão" ; } ; --*
lin reward_1_V2 = variants {mkV2 (mkV "honrar") ; mkV2 (mkV "prestigiar") ; mkV2 (mkV "reconhecer") ; } ; --*
lin reward_2_N = mkN "recompensa" ; --*
lin reward_2_V2 = mkV2 (mkV "reforçar") ; --*
lin reward_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "premiar") ; mkV2 (mkV "recompensar") ; } ; --*
lin reward_4_N = mkN "recompensa" ; --*
lin reward_5_N = variants {mkN "benefício" ; mkN "lucro" ; } ; --*
lin rewire_V2 = mkV2 (mkV "fazer") ; --*
lin rewording_N = variants {mkN "re-escrever" ; mkN "refrasear" ; } ; --*
lin reword_V2 = mkV2 (mkV "parafrasear") ; --*
lin rework_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "retrabalhar") ; } ; --*
lin rewrite_1_V2 = variants {mkV2 (mkV "escrever") ; mkV2 (mkV "reescrever") ; } ; --*
lin reykjavik_PN = variants {mkPN "of" ; mkPN "Reykjavik" ; mkPN "Reykjavík" ; } ; --*
lin rhabdomyoma_N = mkN "Rabdomioma" ; --*
lin rhea_1_N = variants {mkN "Reia" ; mkN "Réia" ; } ; --*
lin rhea_2_N = variants {mkN "nandu" ; mkN "nhandu" ; mkN "pennata" ; } ; --*
lin rheims_PN = mkPN "Reims" ; --*
lin rhenium_N = variants {mkN "number" ; mkN "Renio" ; mkN "Rénio" ; mkN "rênio" ; } ; --*
lin rheology_N = mkN "reologia" ; --*
lin rhesus_N = variants {mkN "monkey" ; mkN "mulatta" ; mkN "rhesus" ; } ; --*
lin rhetoric_1_N = mkN "retórica" ; --*
lin rhetoric_2_N = mkN "grandiosidade" ; --*
lin rhetoric_4_N = variants {mkN "Retorica" ; mkN "retórica" ; mkN "Retórica" ; } ; --*
lin rhetorical_2_A = mkA "retórico" ; --*
lin rhetorician_N = variants {mkN "discursante" ; mkN "interveniente" ; mkN "orador" ; mkN "speaker" ; } ; --*
lin rheum_1_N = variants {mkN "marmeluta" ; mkN "ramela" ; mkN "remela" ; } ; --*
lin rheumatic_A = mkA "artrítico" ; --*
lin rheumatism_1_N = mkN "reumatismo" ; --*
lin rheumatism_2_N = variants {mkN "arthritis" ; mkN "Artrite" ; } ; --*
lin rheumatoid_A = mkA "artrítico" ; --*
lin rheumy_2_A = mkA "artrítico" ; --*
lin rhinal_A = mkA "nasal" ; --*
lin rhine_1_PN = variants {mkPN "B." ; mkPN "Banks" ; mkPN "Reno" ; } ; --*
lin rhine_2_PN = variants {mkPN "Reno" ; mkPN "Rio" ; mkPN "River" ; } ; --*
lin rhinencephalon_N = variants {mkN "brain" ; mkN "Rinencéfalo" ; } ; --*
lin rhinitis_N = variants {mkN "coriza" ; mkN "rinite" ; } ; --*
lin rhinoceros_N = mkN "rinoceronte" ; --*
lin rhinolaryngology_N = mkN "otorrinolaringologia" ; --*
lin rhino_N = mkN "rinoceronte" ; --*
lin rhinorrhea_N = variants {mkN "rinorreia" ; mkN "rinorréia" ; } ; --*
lin rhinoscopy_N = mkN "rinoscopia" ; --*
lin rhinovirus_N = mkN "Rhinovirus" ; --*
lin rhizome_N = variants {mkN "rizoma" ; mkN "Rizoma" ; } ; --*
lin rhizotomy_N = mkN "rizotomia" ; --*
lin rhodium_N = variants {mkN "number" ; mkN "Rodio" ; mkN "ródio" ; } ; --*
lin rhododendron_N = mkN "rododentro" ; --*
lin rhomb_N = mkN "losango" ; --*
lin rhombohedron_N = mkN "romboedro" ; --*
lin rhomboid_2_N = variants {mkN "muscle" ; mkN "Músculo" ; } ; --*
lin rhombus_N = mkN "losango" ; --*
lin rho_N = variants {mkN "rô" ; mkN "Ρ" ; } ; --*
lin rhubarb_1_N = mkN "ruibarbo" ; --*
lin rhubarb_2_N = variants {mkN "plant" ; mkN "ruibarbo" ; } ; --*
lin rhyme_1_N = mkN "rima" ; --*
lin rhyme_1_V2 = variants {mkV2 (mkV "rimar") ; mkV2 (mkV "versejar") ; } ; --*
lin rhyme_1_V = variants {mkV "rimar" ; mkV "versejar" ; } ; --*
lin rhyme_2_V = variants {mkV "rima" ; mkV "rimar" ; } ; --*
lin rhyolite_N = variants {mkN "Riolito" ; mkN "Riólito" ; } ; --*
lin rhythm_1_N = variants {mkN "rhythm" ; mkN "ritmo" ; mkN "tempo" ; } ; --*
lin rhythm_2_N = variants {mkN "recurrence" ; mkN "ritmo" ; } ; --*
lin rhythm_3_N = mkN "ciclo" ; --*
lin rhythm_4_N = variants {mkN "rhythm" ; mkN "ritmo" ; } ; --*
lin rhythmical_A = variants {mkA "ritmado" ; mkA "rítmico" ; } ; --*
lin rhythmic_A = variants {mkA "ritmado" ; mkA "rítmico" ; } ; --*
lin rib_2_N = mkN "costela" ; --*
lin rib_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "fun") ; mkV2 (mkV "mangar") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "zombar") ; } ; --*
lin ribald_A = mkA "verde" ; --*
lin ribbon_2_N = variants {mkN "condecoração" ; mkN "medalha" ; mkN "wreath" ; } ; --*
lin ribbon_3_N = variants {mkN "fita" ; mkN "ribbon" ; } ; --*
lin ribbon_4_N = mkN "fita" ; --*
lin ribbonfish_1_N = variants {mkN "glesne" ; mkN "of" ; mkN "Regaleco" ; } ; --*
lin riboflavin_N = variants {mkN "B2" ; mkN "G" ; mkN "riboflavina" ; } ; --*
lin ribose_N = variants {mkN "ribose" ; mkN "Ribose" ; } ; --*
lin ribosome_N = mkN "ribossomo" ; --*
lin rice_1_N = mkN "arroz" ; --*
lin rice_2_N = mkN "arroz" ; --*
lin rich_12_A = variants {mkA "abundante" ; mkA "bastante" ; mkA "copioso" ; mkA "lauto" ; } ; --*
lin rich_1_A = variants {mkA "rica" ; mkA "rico" ; } ; --*
lin rich_2_A = mkA "rico" ; --*
lin rich_3_A = variants {mkA "magnífico" ; mkA "opulento" ; mkA "precioso" ; } ; --*
lin rich_4_A = mkA "produtivo" ; --*
lin rich_7_A = variants {mkA "opulento" ; mkA "rico" ; } ; --*
lin richmond_PN = variants {mkPN "of" ; mkPN "Richmond" ; } ; --*
lin richness_1_N = variants {mkN "cornucópia" ; mkN "Cornucópia" ; mkN "riqueza" ; } ; --*
lin richness_2_N = mkN "riqueza" ; --*
lin richness_3_N = variants {mkN "maturidade" ; mkN "plenitude" ; mkN "riqueza" ; } ; --*
lin richness_5_N = mkN "riqueza" ; --*
lin ricin_N = variants {mkN "ricina" ; mkN "toxin" ; } ; --*
lin rick_2_N = mkN "montão" ; --*
lin rick_2_PN = mkPN "montão" ; --*
lin rick_2_V2 = mkV2 (mkV "torcer") ; --*
lin rickets_N = mkN "raquitismo" ; --*
lin rickety_3_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin rickshaw_1_N = variants {mkN "jinriquixá" ; mkN "riquixá" ; } ; --*
lin ricochet_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin ricotta_N = mkN "ricota" ; --*
lin riddance_2_N = variants {mkN "exclusão" ; mkN "expulsão" ; } ; --*
lin riddle_1_N = variants {mkN "adivinha" ; mkN "adivinhação" ; mkN "adivinhas" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin riddle_2_N = mkN "peneira" ; --*
lin riddle_4_V2 = variants {mkV2 (mkV "penetrar") ; mkV2 (mkV "permear") ; } ; --*
lin riddle_6_V2 = mkV2 (mkV "resolver") ; --*
lin ride_10_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "ir") ; mkV2 (mkV "viajar") ; } ; --*
lin ride_1_N = mkN "passeio" ; --*
lin ride_1_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "cavalgar") ; mkV2 (mkV "ir") ; mkV2 (mkV "subir") ; mkV2 (mkV "viajar") ; } ; --*
lin ride_2_V = mkV "ir" ; --*
lin ride_3_V = variants {mkV "continuar" ; mkV "prosseguir" ; } ; --*
lin ride_4_V = variants {mkV "andar" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin ride_5_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin ride_on_V2 = variants {mkV2 (mkV "depender") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin riderFem_1_N = variants {mkN "cavaleiro" ; mkN "cavalgador" ; mkN "galopante" ; mkN "galopeador" ; } ; --*
lin riderFem_2_N = variants {mkN "acréscimo" ; mkN "aditamento" ; } ; --*
lin riderFem_3_N = mkN "cavaleiro" ; --*
lin riderFem_4_N = mkN "passageiro" ; --*
lin riderMasc_1_N = variants {mkN "cavaleiro" ; mkN "cavalgador" ; mkN "galopante" ; mkN "galopeador" ; } ; --*
lin riderMasc_2_N = variants {mkN "acréscimo" ; mkN "aditamento" ; } ; --*
lin riderMasc_3_N = mkN "cavaleiro" ; --*
lin riderMasc_4_N = mkN "passageiro" ; --*
lin ride_up_V2 = mkV2 (mkV "subir") ; --*
lin ride_up_V = mkV "subir" ; --*
lin ridge_1_N = variants {mkN "aresta" ; mkN "cume" ; } ; --*
lin ridge_4_N = variants {mkN "cordilheira" ; mkN "crista" ; } ; --*
lin ridge_6_N = mkN "cumeeira" ; --*
lin ridgepole_N = mkN "cumeeira" ; --*
lin ridicule_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "fun") ; mkV2 (mkV "mangar") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "zombar") ; } ; --*
lin ridiculous_1_A = mkA "ridículo" ; --*
lin ridiculous_2_A = variants {mkA "absurdo" ; mkA "risível" ; } ; --*
lin ridiculous_3_A = variants {mkA "grotesco" ; mkA "ridículo" ; } ; --*
lin riding_1_N = variants {mkN "equitação" ; mkN "riding" ; } ; --*
lin rid_V2 = variants {mkV2 (mkV "desimpedir") ; mkV2 (mkV "livrar") ; mkV2 (mkV "remover") ; } ; --*
lin riesling_2_N = mkN "Riesling" ; --*
lin rife_1_A = mkA "predominante" ; --*
lin riff_2_N = mkN "riff" ; --*
lin riffle_1_N = variants {mkN "ondinha" ; mkN "rápido" ; mkN "Rápido" ; } ; --*
lin riff_raff_N = variants {mkN "and" ; mkN "ralé" ; } ; --*
lin rifle_1_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin rifle_N = variants {mkN "espingarda" ; mkN "Espingardas" ; mkN "fuzil" ; mkN "refle" ; mkN "rifle" ; } ; --*
lin rift_1_N = variants {mkN "fenda" ; mkN "fissura" ; } ; --*
lin rift_2_N = variants {mkN "fenda" ; mkN "fissura" ; } ; --*
lin rift_3_N = variants {mkN "out" ; mkN "rompimento" ; } ; --*
lin rig_4_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin rig_6_N = mkN "carruagem" ; --*
lin riga_PN = variants {mkPN "of" ; mkPN "Riga" ; } ; --*
lin rigging_1_N = mkN "cordame" ; --*
lin right_10_Adv = variants {mkAdv "correctamente" ; mkAdv "corretamente" ; mkAdv "de" ; } ; --*
lin right_11_A = variants {mkA "perpendicular" ; mkA "reto" ; } ; --*
lin right_14_A = mkA "bom" ; --*
lin right_1_A = variants {mkA "direita" ; mkA "direito" ; } ; --*
lin right_1_N = mkN "direito" ; --*
lin right_1_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "corrigir") ; } ; --*
lin right_2_A = variants {mkA "certo" ; mkA "correto" ; mkA "justo" ; } ; --*
lin right_2_Adv = mkAdv "imediatamente" ; --*
lin right_2_N = mkN "direita" ; --*
lin right_3_A = mkA "bom" ; --*
lin right_4_Adv = mkAdv "à" ; --*
lin right_4_N = variants {mkN "direita" ; mkN "wing" ; } ; --*
lin right_4_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "retificar") ; } ; --*
lin right_5_A = mkA "bom" ; --*
lin right_5_Adv = variants {mkAdv "decentemente" ; mkAdv "devidamente" ; mkAdv "good" ; mkAdv "right" ; } ; --*
lin right_5_N = variants {mkN "direita" ; mkN "hand" ; } ; --*
lin right_6_A = mkA "capaz" ; --*
lin right_7_N = mkN "justiça" ; --*
lin right_8_Adv = variants {mkAdv "ao" ; mkAdv "cabalmente" ; mkAdv "cem" ; mkAdv "completamente" ; mkAdv "inteiramente" ; mkAdv "totalmente" ; } ; --*
lin right_8_N = mkN "direito" ; --*
lin right_9_Adv = mkAdv "justamente" ; --*
lin right_down_A = variants {mkA "absoluto" ; mkA "completo" ; mkA "total" ; } ; --*
lin righteous_1_A = variants {mkA "eqüitativo" ; mkA "justo" ; mkA "recto" ; mkA "reto" ; } ; --*
lin righteousness_N = variants {mkN "honestidade" ; mkN "justiça" ; } ; --*
lin rightful_2_A = variants {mkA "legítimo" ; mkA "verdadeiro" ; } ; --*
lin rightfulness_N = mkN "justiça" ; --*
lin right_hand_1_A = variants {mkA "braço" ; mkA "direito" ; } ; --*
lin right_handed_1_A = mkA "destro" ; --*
lin right_handed_2_A = mkA "dextrogiro" ; --*
lin right_hander_2_N = variants {mkN "destro" ; mkN "hander" ; } ; --*
lin rightist_A = mkA "de" ; --*
lin rightness_3_N = variants {mkN "correcção" ; mkN "corretude" ; } ; --*
lin rigid_1_A = variants {mkA "rígida" ; mkA "rígido" ; mkA "teso" ; } ; --*
lin rigid_3_A = mkA "inflexível" ; --*
lin rigid_5_A = variants {mkA "fixo" ; mkA "rígido" ; } ; --*
lin rigidity_1_N = mkN "rigidez" ; --*
lin rigidity_2_N = variants {mkN "inflexibilidade" ; mkN "rigidez" ; } ; --*
lin rigor_mortis_2_N = mkN "mortis" ; --*
lin rigorous_1_A = variants {mkA "estrito" ; mkA "rigoroso" ; } ; --*
lin rigorous_2_A = variants {mkA "estrito" ; mkA "rigoroso" ; } ; --*
lin rigour_1_N = variants {mkN "rigor" ; mkN "validade" ; } ; --*
lin rigour_2_N = mkN "rigor" ; --*
lin rigour_3_N = variants {mkN "dureza" ; mkN "rigor" ; } ; --*
lin rile_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin rile_2_V2 = mkV2 (mkV "agitar") ; --*
lin rill_1_N = variants {mkN "regato" ; mkN "ribeira" ; } ; --*
lin rim_1_N = mkN "borda" ; --*
lin rim_3_V2 = mkV2 (mkV "rodear") ; --*
lin rim_4_N = mkN "flange" ; --*
lin rim_5_N = mkN "rebordo" ; --*
lin rime_1_N = mkN "geada" ; --*
lin rime_1_V2 = variants {mkV2 (mkV "rima") ; mkV2 (mkV "rimar") ; } ; --*
lin rime_2_N = mkN "rima" ; --*
lin rime_2_V2 = variants {mkV2 (mkV "rimar") ; mkV2 (mkV "versejar") ; } ; --*
lin rimu_N = variants {mkN "cupressinum" ; mkN "pine" ; mkN "rimu" ; } ; --*
lin ring_1_N = mkN "toque" ; --*
lin ring_1_V = variants {mkV "soar" ; mkV "tocar" ; } ; --*
lin ring_2_N = variants {mkN "anel" ; mkN "ring" ; } ; --*
lin ring_2_V = variants {mkV "ecoar" ; mkV "ressoar" ; mkV "reverberar" ; } ; --*
lin ring_3_N = mkN "arco" ; --*
lin ring_3_V2 = mkV2 (mkV "soar") ; --*
lin ring_3_V = mkV "soar" ; --*
lin ring_4_V2 = variants {mkV2 (mkV "chamar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "telefonar") ; mkV2 (mkV "up") ; } ; --*
lin ring_5_N = mkN "gangue" ; --*
lin ring_5_V2 = variants {mkV2 (mkV "contornar") ; mkV2 (mkV "rodear") ; } ; --*
lin ring_6_N = mkN "anilhagem" ; --*
lin ring_6_V2 = variants {mkV2 (mkV "anilhar") ; mkV2 (mkV "etiquetar") ; } ; --*
lin ring_7_N = mkN "ringue" ; --*
lin ring_8_N = variants {mkN "aliança" ; mkN "anel" ; mkN "Anel" ; } ; --*
lin ring_armour_N = variants {mkN "armor" ; mkN "armour" ; mkN "mail" ; mkN "malha" ; } ; --*
lin ring_finger_N = variants {mkN "anular" ; mkN "finger" ; } ; --*
lin ringhals_1_N = variants {mkN "haemachatus" ; mkN "Hemachatus" ; mkN "snake" ; } ; --*
lin ringing_1_N = mkN "anilhagem" ; --*
lin ringlet_2_N = variants {mkN "anel" ; mkN "cacho" ; } ; --*
lin ring_mail_N = variants {mkN "armor" ; mkN "armour" ; mkN "mail" ; mkN "malha" ; } ; --*
lin rings_N = mkN "argolas" ; --*
lin ringtail_1_N = variants {mkN "astutus" ; mkN "bassarisco" ; mkN "cat" ; mkN "fox" ; } ; --*
lin ringtail_3_N = variants {mkN "capucinus" ; mkN "Macaco-prego-de-cara-branca" ; } ; --*
lin ringworm_N = variants {mkN "dermatofitose" ; mkN "micose" ; mkN "tinha" ; } ; --*
lin rinse_2_N = variants {mkN "enxaguadelas" ; mkN "enxaguadura" ; } ; --*
lin rinse_2_V2 = mkV2 (mkV "lavar") ; --*
lin rinse_3_V2 = variants {mkV2 (mkV "bochechar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "gargarejar") ; } ; --*
lin rio_de_janeiro_PN = variants {mkPN "de" ; mkPN "Rio" ; } ; --*
lin riot_1_N = variants {mkN "protesto" ; mkN "violence" ; } ; --*
lin riot_4_N = variants {mkN "deboche" ; mkN "dissipação" ; mkN "farra" ; mkN "orgia" ; mkN "revelry" ; mkN "viveremfarra" ; } ; --*
lin rioter_N = mkN "baderneiro" ; --*
lin riotous_1_A = mkA "abundante" ; --*
lin riotous_2_A = mkA "tumultuoso" ; --*
lin riotous_3_A = variants {mkA "devasso" ; mkA "libertino" ; } ; --*
lin rip_1_V = variants {mkV "desfiar" ; mkV "esfarrapar" ; mkV "rasgar" ; } ; --*
lin rip_2_N = variants {mkN "buraco" ; mkN "fenda" ; mkN "rasgão" ; mkN "rasgo" ; } ; --*
lin rip_2_PN = variants {mkPN "buraco" ; mkPN "fenda" ; mkPN "rasgão" ; mkPN "rasgo" ; } ; --*
lin rip_3_V2 = mkV2 (mkV "ripar") ; --*
lin rip_3_V = mkV "ripar" ; --*
lin rip_4_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "roubar") ; } ; --*
lin riparian_A = variants {mkA "marginal" ; mkA "ribeirinho" ; mkA "ripário" ; } ; --*
lin ripe_1_A = variants {mkA "maduro" ; mkA "maturo" ; mkA "sazonado" ; } ; --*
lin ripe_3_A = mkA "bom" ; --*
lin ripe_4_A = mkA "maduro" ; --*
lin ripen_1_V2 = variants {mkV2 (mkV "amadurecer") ; mkV2 (mkV "madurar") ; } ; --*
lin ripen_2_V = mkV "amadurecer" ; --*
lin ripeness_N = mkN "maturidade" ; --*
lin ripening_1_N = variants {mkN "amadurecimento" ; mkN "maturação" ; } ; --*
lin ripening_2_N = mkN "envelhecimento" ; --*
lin rip_off_1_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "off") ; mkV2 (mkV "trapacear") ; } ; --*
lin rip_off_2_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "roubar") ; } ; --*
lin rip_off_N = mkN "assalto" ; --*
lin riposte_1_N = variants {mkN "réplica" ; mkN "resposta" ; } ; --*
lin riposte_2_V = variants {mkV "back" ; mkV "replicar" ; mkV "retornar" ; mkV "retorquir" ; mkV "retortar" ; mkV "retrucar" ; mkV "ripostar" ; } ; --*
lin ripper_N = mkN "estripador" ; --*
lin ripple_1_N = variants {mkN "ondinha" ; mkN "rápido" ; mkN "Rápido" ; } ; --*
lin ripple_2_N = mkN "Ripple" ; --*
lin riptide_2_N = variants {mkN "Corrente" ; mkN "current" ; } ; --*
lin rise_10_N = mkN "aumento" ; --*
lin rise_10_V = variants {mkV "acordar" ; mkV "out" ; mkV "up" ; } ; --*
lin rise_11_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin rise_12_V = mkV "animar" ; --*
lin rise_14_V2 = variants {mkV2 (mkV "amotinar-se") ; mkV2 (mkV "insurgir") ; mkV2 (mkV "insurgir-se") ; mkV2 (mkV "rebelar") ; mkV2 (mkV "rebelar-se") ; mkV2 (mkV "revoltar-se") ; mkV2 (mkV "up") ; } ; --*
lin rise_14_V = variants {mkV "amotinar-se" ; mkV "insurgir" ; mkV "insurgir-se" ; mkV "rebelar" ; mkV "rebelar-se" ; mkV "revoltar-se" ; mkV "up" ; } ; --*
lin rise_15_V = variants {mkV "aumentar" ; mkV "subir" ; } ; --*
lin rise_16_V = variants {mkV "ascender" ; mkV "subir" ; mkV "up" ; } ; --*
lin rise_17_V2 = mkV2 (mkV "ressuscitar") ; --*
lin rise_1_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin rise_2_N = variants {mkN "ascensão" ; mkN "elevação" ; } ; --*
lin rise_2_V2 = variants {mkV2 (mkV "subir") ; mkV2 (mkV "up") ; } ; --*
lin rise_3_N = variants {mkN "aclive" ; mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "subida" ; } ; --*
lin rise_3_V = variants {mkV "se" ; mkV "up" ; } ; --*
lin rise_4_N = variants {mkN "ascensão" ; mkN "escalada" ; mkN "subida" ; } ; --*
lin rise_4_V = mkV "surgir" ; --*
lin rise_5_N = variants {mkN "aumento" ; mkN "hike" ; mkN "increase" ; } ; --*
lin rise_5_V2 = variants {mkV2 (mkV "emergir") ; mkV2 (mkV "up") ; } ; --*
lin rise_5_V = variants {mkV "emergir" ; mkV "up" ; } ; --*
lin rise_6_V = variants {mkV "originar-se" ; mkV "provir" ; mkV "surgir" ; mkV "up" ; } ; --*
lin rise_7_V = variants {mkV "subir" ; mkV "up" ; } ; --*
lin rise_8_N = mkN "procissão" ; --*
lin rise_8_V = variants {mkV "crescer" ; mkV "subir" ; } ; --*
lin rise_9_N = variants {mkN "aumento" ; mkN "increase" ; } ; --*
lin rise_9_V = variants {mkV "aumentar" ; mkV "subir" ; } ; --*
lin risible_A = variants {mkA "cômica" ; mkA "cômico" ; mkA "divertido" ; mkA "engraçado" ; } ; --*
lin rising_1_N = variants {mkN "ascensão" ; mkN "escalada" ; mkN "subida" ; } ; --*
lin rising_2_N = variants {mkN "insurreição" ; mkN "rebelião" ; mkN "revolta" ; } ; --*
lin rising_3_A = mkA "emergente" ; --*
lin risk_1_N = variants {mkN "ameaça" ; mkN "perigo" ; mkN "risco" ; } ; --*
lin risk_1_VV = variants {mkVV (mkV "arriscar") ; mkVV (mkV "on") ; } ; --*
lin risk_2_N = variants {mkN "perigo" ; mkN "risco" ; } ; --*
lin risk_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "chances") ; } ; --*
lin risk_2_VV = variants {mkVV (mkV "a") ; mkVV (mkV "arriscar") ; mkVV (mkV "chances") ; } ; --*
lin riskiness_N = variants {mkN "escabrosidade" ; mkN "perigo" ; } ; --*
lin risky_1_A = variants {mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin risotto_N = variants {mkN "rice" ; mkN "risotto" ; } ; --*
lin rissole_N = mkN "rissole" ; --*
lin rite_1_N = variants {mkN "rite" ; mkN "rito" ; } ; --*
lin rite_2_N = variants {mkN "rito" ; mkN "ritual" ; } ; --*
lin ritonavir_N = mkN "ritonavir" ; --*
lin ritual_1_N = variants {mkN "rito" ; mkN "ritual" ; } ; --*
lin ritual_2_N = mkN "ritual" ; --*
lin rival_1_V2 = mkV2 (mkV "competir") ; --*
lin rival_2_V2 = mkV2 (mkV "competir") ; --*
lin rival_N = variants {mkN "adversário" ; mkN "competidor" ; mkN "concorrente" ; mkN "contendor" ; mkN "desafiante" ; mkN "inimigo" ; mkN "opositor" ; mkN "rival" ; } ; --*
lin rivalry_N = variants {mkN "competição" ; mkN "concorrência" ; } ; --*
lin rive_1_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "esfarrapar") ; mkV2 (mkV "rasgar") ; } ; --*
lin rive_1_V = variants {mkV "desfiar" ; mkV "esfarrapar" ; mkV "rasgar" ; } ; --*
lin rive_2_V2 = mkV2 (mkV "decepar") ; --*
lin river_basin_N = variants {mkN "albufeira" ; mkN "area" ; mkN "bacia" ; mkN "basin" ; } ; --*
lin river_bed_N = variants {mkN "bottom" ; mkN "leito" ; } ; --*
lin river_N = mkN "rio" ; --*
lin rivet_1_V = variants {mkV "centrar" ; mkV "concentrar" ; mkV "focar" ; } ; --*
lin rivet_2_N = mkN "rebite" ; --*
lin rivet_2_V2 = mkV2 (mkV "rebitar") ; --*
lin rivet_2_V = mkV "rebitar" ; --*
lin rivet_3_V2 = variants {mkV2 (mkV "fascinar") ; mkV2 (mkV "interessar") ; } ; --*
lin rivulet_N = variants {mkN "regato" ; mkN "ribeira" ; } ; --*
lin rn_1_N = variants {mkN "number" ; mkN "radão" ; mkN "rádon" ; } ; --*
lin roach_4_N = variants {mkN "barata" ; mkN "baratas" ; mkN "Baratas" ; mkN "blata" ; mkN "carocha" ; } ; --*
lin road_1_N = variants {mkN "autoestradas" ; mkN "caminho" ; mkN "estrada" ; mkN "estradas" ; mkN "rodovia" ; mkN "via" ; } ; --*
lin road_2_N = mkN "estrada" ; --*
lin roadblock_1_N = variants {mkN "barreira" ; mkN "obstáculo" ; } ; --*
lin roadblock_2_N = mkN "barricada" ; --*
lin roadrunner_N = variants {mkN "californianus" ; mkN "cock" ; mkN "Geococcyx" ; } ; --*
lin roadway_N = variants {mkN "calçada" ; mkN "estrada" ; mkN "rua" ; } ; --*
lin roam_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "errar") ; mkV2 (mkV "perambular") ; mkV2 (mkV "transmigrar") ; mkV2 (mkV "vadiar") ; mkV2 (mkV "vagabundear") ; mkV2 (mkV "vagar") ; mkV2 (mkV "vaguear") ; } ; --*
lin roan_A = mkA "ruão" ; --*
lin roar_1_N = mkN "ribombo" ; --*
lin roar_1_V = variants {mkV "rugir" ; mkV "uivar" ; } ; --*
lin roar_2_N = mkN "urro" ; --*
lin roar_2_V = variants {mkV "mugir" ; mkV "roncar" ; mkV "vociferar" ; } ; --*
lin roar_3_N = mkN "rugido" ; --*
lin roar_3_V = variants {mkV "bramir" ; mkV "ulular" ; } ; --*
lin roar_5_V = variants {mkV "berrar" ; mkV "bramir" ; mkV "rugir" ; mkV "uivar" ; } ; --*
lin roast_1_V2 = variants {mkV2 (mkV "assar") ; mkV2 (mkV "torrar") ; } ; --*
lin roast_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "fun") ; mkV2 (mkV "mangar") ; mkV2 (mkV "ridicularizar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "zombar") ; } ; --*
lin roast_A = mkA "assado" ; --*
lin rob_1_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; } ; --*
lin rob_2_V2 = mkV2 (mkV "roubar") ; --*
lin robber_N = variants {mkN "assaltante" ; mkN "bandido" ; mkN "ladrão" ; mkN "salteador" ; } ; --*
lin robbery_1_N = variants {mkN "assalto" ; mkN "roubo" ; } ; --*
lin robbery_2_N = variants {mkN "pilhagem" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin robe_1_N = variants {mkN "veste" ; mkN "vestido" ; } ; --*
lin robe_1_V2 = variants {mkV2 (mkV "vestido") ; mkV2 (mkV "vestir") ; } ; --*
lin robe_1_V = variants {mkV "vestido" ; mkV "vestir" ; } ; --*
lin robe_2_N = variants {mkN "beca" ; mkN "Beca" ; mkN "manto" ; mkN "vestido" ; } ; --*
lin robe_2_V2 = variants {mkV2 (mkV "drapear") ; mkV2 (mkV "encapuzar") ; mkV2 (mkV "vestir") ; } ; --*
lin robert_PN = variants {mkPN "M." ; mkPN "Martyn" ; mkPN "Robert" ; } ; --*
lin robin_1_N = variants {mkN "pisco" ; mkN "redbreast" ; mkN "rubecola" ; mkN "World" ; } ; --*
lin robin_1_PN = variants {mkPN "pisco" ; mkPN "redbreast" ; mkPN "rubecola" ; mkPN "World" ; } ; --*
lin robotic_2_A = mkA "automático" ; --*
lin robotics_N = mkN "robótica" ; --*
lin robot_N = variants {mkN "andróide" ; mkN "autômato" ; mkN "robô" ; mkN "robot" ; } ; --*
lin robust_3_A = mkA "robusto" ; --*
lin robustness_2_N = mkN "robustez" ; --*
lin rock_1_N = variants {mkN "pedra" ; mkN "penhasco" ; mkN "rocha" ; } ; --*
lin rock_1_V2 = variants {mkV2 (mkV "balançar") ; mkV2 (mkV "embalar") ; mkV2 (mkV "sacudir") ; } ; --*
lin rock_2_N = variants {mkN "pedra" ; mkN "rocha" ; } ; --*
lin rock_2_V2 = mkV2 (mkV "balançar") ; --*
lin rock_6_N = variants {mkN "and" ; mkN "music" ; mkN "'n'" ; mkN "rock" ; } ; --*
lin rockabilly_N = variants {mkN "rockabilly" ; mkN "Rockabilly" ; } ; --*
lin rocker_2_N = variants {mkN "'n'" ; mkN "roqueiro" ; } ; --*
lin rocker_4_N = variants {mkN "cadeira" ; mkN "chair" ; } ; --*
lin rocket_1_N = variants {mkN "foguete" ; mkN "Foguete" ; mkN "Foguetes" ; mkN "rojão" ; } ; --*
lin rocket_2_N = variants {mkN "engine" ; mkN "foguete" ; } ; --*
lin rocket_3_N = variants {mkN "rocket" ; mkN "rúcula" ; mkN "Rúcula" ; mkN "salad" ; mkN "sativa" ; mkN "vesicaria" ; } ; --*
lin rocket_5_N = mkN "foguete" ; --*
lin rocking_chair_N = variants {mkN "cadeira" ; mkN "chair" ; } ; --*
lin rocking_horse_N = variants {mkN "cavalo" ; mkN "horse" ; } ; --*
lin rock_PN = variants {mkPN "Rochas" ; mkPN "Rock" ; } ; --*
lin rockrose_1_N = variants {mkN "rose" ; mkN "xara" ; } ; --*
lin rock_salt_N = variants {mkN "halita" ; mkN "salt" ; } ; --*
lin rocky_1_A = mkA "rochoso" ; --*
lin rod_1_N = mkN "barra" ; --*
lin rod_2_N = mkN "bacilo" ; --*
lin rod_3_N = mkN "rod" ; --*
lin rod_5_N = variants {mkN "bastonete" ; mkN "cell" ; mkN "rod" ; } ; --*
lin rodent_N = variants {mkN "roedor" ; mkN "roedores" ; } ; --*
lin roe_2_N = variants {mkN "ova" ; mkN "Ova" ; mkN "ovas" ; } ; --*
lin roe_3_N = mkN "corça" ; --*
lin roebuck_N = mkN "corço" ; --*
lin roentgenium_N = variants {mkN "111" ; mkN "number" ; mkN "roentgénio" ; mkN "roentgênio" ; } ; --*
lin roentgenogram_N = variants {mkN "photograph" ; mkN "picture" ; mkN "radiografia" ; mkN "ray" ; } ; --*
lin rogue_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin roil_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; } ; --*
lin roil_2_V2 = mkV2 (mkV "agitar") ; --*
lin role_1_N = variants {mkN "função" ; mkN "papel" ; } ; --*
lin role_2_N = variants {mkN "papel" ; mkN "personagem" ; mkN "role" ; } ; --*
lin role_3_N = variants {mkN "função" ; mkN "propósito" ; } ; --*
lin role_4_N = variants {mkN "função" ; mkN "Papel" ; } ; --*
lin roll_10_N = variants {mkN "pergaminho" ; mkN "rolo" ; } ; --*
lin roll_10_V2 = mkV2 (mkV "muambar") ; --*
lin roll_10_V = mkV "muambar" ; --*
lin roll_11_N = mkN "rolo" ; --*
lin roll_11_V = mkV "bater" ; --*
lin roll_12_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin roll_13_N = mkN "rebolar" ; --*
lin roll_13_V = mkV "balançar" ; --*
lin roll_14_V2 = variants {mkV2 (mkV "revirar") ; mkV2 (mkV "revolver") ; mkV2 (mkV "rodar") ; } ; --*
lin roll_15_N = mkN "rolamento" ; --*
lin roll_15_V2 = mkV2 (mkV "enrolar") ; --*
lin roll_16_V = mkV "ferver" ; --*
lin roll_17_V = mkV "enrolar" ; --*
lin roll_18_V = variants {mkV "enrolar" ; mkV "up" ; } ; --*
lin roll_1_V = variants {mkV "girar" ; mkV "over" ; mkV "rolar" ; } ; --*
lin roll_2_N = mkN "lista" ; --*
lin roll_2_V = variants {mkV "passar" ; mkV "rodar" ; } ; --*
lin roll_4_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "rolar") ; } ; --*
lin roll_5_V = mkV "reverberar" ; --*
lin roll_6_N = mkN "meios" ; --*
lin roll_6_V2 = mkV2 (mkV "bolear") ; --*
lin roll_7_N = variants {mkN "bolo" ; mkN "pãozinho" ; } ; --*
lin roll_7_V = mkV "funcionar" ; --*
lin roll_8_V2 = mkV2 (mkV "enrolar") ; --*
lin roll_9_N = variants {mkN "batida" ; mkN "roll" ; mkN "rufo" ; } ; --*
lin roll_9_V = mkV "rolar" ; --*
lin roll_call_N = mkN "call" ; --*
lin rollicking_A = mkA "traquinas" ; --*
lin rolling_pin_N = mkN "pin" ; --*
lin roll_out_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "rolar") ; } ; --*
lin roll_out_V = mkV "enrolar" ; --*
lin roll_up_2_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "amontoar") ; mkV2 (mkV "empilhar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "up") ; } ; --*
lin roll_up_7_V = variants {mkV "enrolar" ; mkV "up" ; } ; --*
lin roly_poly_1_N = variants {mkN "gordalhão" ; mkN "gordão" ; mkN "person" ; } ; --*
lin romaic_A = mkA "romaico" ; --*
lin roman_1_A = variants {mkA "romano" ; mkA "Romano" ; } ; --*
lin roman_1_N = variants {mkN "Antigos" ; mkN "cidadania" ; mkN "Cidadania" ; } ; --*
lin roman_2_A = mkA "romano" ; --*
lin roman_4_A = variants {mkA "Catholic" ; mkA "católica" ; mkA "papista" ; mkA "romanista" ; } ; --*
lin romance_1_N = variants {mkN "affair" ; mkN "romance" ; } ; --*
lin romance_1_V2 = variants {mkV2 (mkV "azarar") ; mkV2 (mkV "galantear") ; mkV2 (mkV "namorar") ; } ; --*
lin romance_2_N = mkN "romantismo" ; --*
lin romance_2_V2 = mkV2 (mkV "ter") ; --*
lin romance_2_V = mkV "ter" ; --*
lin romance_3_N = variants {mkN "language" ; mkN "românica" ; } ; --*
lin romance_3_V2 = variants {mkV2 (mkV "passar") ; mkV2 (mkV "up") ; } ; --*
lin romance_3_V = variants {mkV "passar" ; mkV "up" ; } ; --*
lin romance_A = variants {mkA "románica" ; mkA "românico" ; } ; --*
lin romanesque_N = variants {mkN "architecture" ; mkN "arquitetura" ; } ; --*
lin romanian_1_A = variants {mkA "romena" ; mkA "romeno" ; } ; --*
lin romanianFem_N = variants {mkN "romena" ; mkN "romeno" ; } ; --*
lin romanianMasc_N = variants {mkN "romena" ; mkN "romeno" ; } ; --*
lin romanian_N = variants {mkN "língua" ; mkN "romeno" ; } ; --*
lin romania_PN = variants {mkPN "Roménia" ; mkPN "Romênia" ; mkPN "Ruménia" ; } ; --*
lin romantic_1_A = mkA "romântico" ; --*
lin romantic_2_A = mkA "amoroso" ; --*
lin romantic_3_A = mkA "romântico" ; --*
lin romanticism_1_N = mkN "romantismo" ; --*
lin romanticism_2_N = variants {mkN "Movement" ; mkN "Romantismo" ; } ; --*
lin romanticism_3_N = mkN "romantismo" ; --*
lin romanticize_1_V2 = mkV2 (mkV "romantizar") ; --*
lin romanticize_V = mkV "romantizar" ; --*
lin romany_1_A = mkA "cigano" ; --*
lin romany_1_N = variants {mkN "cigana" ; mkN "cigano" ; mkN "Rom" ; } ; --*
lin romany_2_N = variants {mkN "Cigano" ; mkN "romani" ; } ; --*
lin rome_1_PN = variants {mkPN "capital" ; mkPN "City" ; mkPN "of" ; mkPN "Roma" ; } ; --*
lin rome_2_PN = mkPN "Roma" ; --*
lin romish_A = variants {mkA "Catholic" ; mkA "católica" ; mkA "papista" ; mkA "romanista" ; } ; --*
lin romp_1_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin romp_2_N = mkN "maria-rapaz" ; --*
lin romp_3_N = mkN "brincadeira" ; --*
lin rondeau_1_N = variants {mkN "rondó" ; mkN "Rondò" ; } ; --*
lin rondo_N = variants {mkN "rondó" ; mkN "Rondò" ; } ; --*
lin roneo_N = variants {mkN "machine" ; mkN "Mimeógrafo" ; } ; --*
lin rood_N = variants {mkN "crucifixo" ; mkN "Crucifixo" ; } ; --*
lin rood_tree_N = variants {mkN "crucifixo" ; mkN "Crucifixo" ; } ; --*
lin roof_1_N = variants {mkN "telhado" ; mkN "teto" ; } ; --*
lin roof_2_N = mkN "teto" ; --*
lin roof_4_N = mkN "teto" ; --*
lin roofless_2_A = variants {mkA "mendiga" ; mkA "mendigo" ; mkA "sem-abrigo" ; mkA "sem-teto" ; } ; --*
lin roof_tree_N = mkN "cumeeira" ; --*
lin rooibos_N = variants {mkN "cedcarbergensis" ; mkN "linearis" ; mkN "Rooibos" ; } ; --*
lin rook_1_N = mkN "torre" ; --*
lin rook_2_N = variants {mkN "frugilegus" ; mkN "gralha" ; mkN "gralha-calva" ; } ; --*
lin rookie_N = variants {mkN "novato" ; mkN "Rookie" ; } ; --*
lin rook_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin room_1_N = variants {mkN "aposento" ; mkN "câmara" ; mkN "quarto" ; mkN "sala" ; } ; --*
lin room_2_N = variants {mkN "espaço" ; mkN "room" ; } ; --*
lin room_3_N = mkN "chance" ; --*
lin room_in_V2 = mkV2 (mkV "hospedar") ; --*
lin room_mate_N = variants {mkN "coabitante" ; mkN "colega" ; mkN "colocatário" ; } ; --*
lin roomy_A = variants {mkA "amplo" ; mkA "espaçoso" ; mkA "vasto" ; } ; --*
lin rooster_N = mkN "galo" ; --*
lin root_1_N = variants {mkN "raiz" ; mkN "raíz" ; mkN "raizes" ; } ; --*
lin root_1_V = mkV "enraizar" ; --*
lin root_2_N = variants {mkN "fonte" ; mkN "manancial" ; mkN "nascente" ; mkN "procedência" ; mkN "prosedensia" ; mkN "raiz" ; } ; --*
lin root_2_V = mkV "originar" ; --*
lin root_3_N = variants {mkN "radical" ; mkN "Radical" ; mkN "raiz" ; mkN "word" ; } ; --*
lin root_4_N = variants {mkN "raiz" ; mkN "raíz" ; } ; --*
lin root_4_V2 = mkV2 (mkV "enraizar") ; --*
lin root_4_V = mkV "enraizar" ; --*
lin root_6_N = variants {mkN "ancestral" ; mkN "antecedentes" ; mkN "antecessor" ; mkN "antepassado" ; mkN "Antepassado" ; } ; --*
lin root_6_V = variants {mkV "acomodar" ; mkV "down" ; mkV "enraizar" ; mkV "root" ; } ; --*
lin root_7_V2 = variants {mkV2 (mkV "enraizar") ; mkV2 (mkV "radicar") ; } ; --*
lin root_7_V = variants {mkV "enraizar" ; mkV "radicar" ; } ; --*
lin root_8_N = variants {mkN "raiz" ; mkN "root" ; } ; --*
lin rootage_3_N = variants {mkN "fonte" ; mkN "manancial" ; mkN "nascente" ; mkN "procedência" ; mkN "prosedensia" ; mkN "raiz" ; } ; --*
lin root_for_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "torcer") ; } ; --*
lin rootless_A = mkA "vagabundo" ; --*
lin root_out_1_V2 = variants {mkV2 (mkV "arrancar") ; mkV2 (mkV "desenraizar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; mkV2 (mkV "sacar") ; } ; --*
lin root_out_2_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; } ; --*
lin rootstock_1_N = variants {mkN "rizoma" ; mkN "Rizoma" ; } ; --*
lin rope_1_N = variants {mkN "corda" ; mkN "toa" ; } ; --*
lin rope_1_V2 = mkV2 (mkV "laçar") ; --*
lin ropeway_N = variants {mkN "teleférico" ; mkN "Teleféricos" ; mkN "tramway" ; } ; --*
lin roquefort_N = variants {mkN "roquefort" ; mkN "Roquefort" ; } ; --*
lin rorqual_N = mkN "baleia-jubarte" ; --*
lin rosario_PN = variants {mkPN "Rosario" ; mkPN "Rosário" ; } ; --*
lin rosary_N = variants {mkN "beads" ; mkN "rosário" ; } ; --*
lin rose_1_N = variants {mkN "rosa" ; mkN "Rosa" ; mkN "Rosas" ; } ; --*
lin rose_1_PN = variants {mkPN "rosa" ; mkPN "Rosa" ; mkPN "Rosas" ; } ; --*
lin rose_3_N = variants {mkN "cor" ; mkN "rosa" ; } ; --*
lin rose_3_PN = variants {mkPN "cor" ; mkPN "rosa" ; } ; --*
lin roselle_1_N = variants {mkN "sabdariffa" ; mkN "sorrel" ; mkN "Vinagreira" ; } ; --*
lin rosemary_1_N = variants {mkN "alecrim" ; mkN "officinalis" ; } ; --*
lin rosemary_1_PN = variants {mkPN "alecrim" ; mkPN "officinalis" ; } ; --*
lin rosemary_2_N = mkN "alecrim" ; --*
lin rosemary_2_PN = mkPN "alecrim" ; --*
lin rosette_4_N = variants {mkN "Rosácea" ; mkN "window" ; } ; --*
lin rose_water_N = mkN "water" ; --*
lin rosewood_2_N = variants {mkN "jacarandá" ; mkN "tree" ; } ; --*
lin rosin_N = variants {mkN "resina" ; mkN "Resinas" ; } ; --*
lin roster_N = mkN "lista" ; --*
lin rostock_PN = mkPN "Rostock" ; --*
lin rostrum_1_N = variants {mkN "cátedra" ; mkN "estrado" ; mkN "pódio" ; mkN "púlpito" ; mkN "tribuna" ; } ; --*
lin rosy_3_A = mkA "rosado" ; --*
lin rot_1_V = variants {mkV "apodrecer" ; mkV "putrefazer" ; } ; --*
lin rot_2_N = variants {mkN "decomposição" ; mkN "putrefação" ; } ; --*
lin rot_2_V = mkV "apodrecer" ; --*
lin rotary_1_A = mkA "rotativo" ; --*
lin rotary_1_N = variants {mkN "circle" ; mkN "rotatória" ; } ; --*
lin rotary_2_A = mkA "circular" ; --*
lin rotate_1_V = variants {mkV "around" ; mkV "dar" ; mkV "rodar" ; } ; --*
lin rotate_3_V2 = mkV2 (mkV "rotacionar") ; --*
lin rotation_1_N = variants {mkN "motion" ; mkN "rotação" ; } ; --*
lin rotation_3_N = mkN "rotação" ; --*
lin rotational_A = mkA "rotacional" ; --*
lin rotatory_A = mkA "rotatório" ; --*
lin rotavirus_N = variants {mkN "Rotavirus" ; mkN "rotavírus" ; } ; --*
lin rotenone_N = variants {mkN "rotenona" ; mkN "Rotenona" ; } ; --*
lin rotifer_N = mkN "Rotifera" ; --*
lin rotisserie_1_N = mkN "espeto" ; --*
lin rotogravure_3_N = mkN "rotogravura" ; --*
lin rotor_1_N = variants {mkN "coil" ; mkN "rotor" ; } ; --*
lin rotten_1_A = variants {mkA "fedida" ; mkA "fedido" ; mkA "fedorenta" ; mkA "fedorento" ; } ; --*
lin rotten_2_A = mkA "podre" ; --*
lin rottenness_1_N = variants {mkN "corrupção" ; mkN "podridão" ; } ; --*
lin rotterdam_PN = mkPN "Roterdão" ; --*
lin rotter_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin rotund_1_A = mkA "rotundo" ; --*
lin rotund_2_A = mkA "rotundo" ; --*
lin rotund_3_A = variants {mkA "corpulento" ; mkA "encorpado" ; mkA "espesso" ; mkA "gordo" ; mkA "grosso" ; mkA "obeso" ; } ; --*
lin rotunda_1_N = mkN "rotunda" ; --*
lin rouble_N = mkN "rublo" ; --*
lin rouge_N = mkN "blush" ; --*
lin rouge_V2 = mkV2 (mkV "pintar") ; --*
lin rough_11_A = mkA "bronco" ; --*
lin rough_12_A = mkA "turbulento" ; --*
lin rough_1_A = mkA "áspero" ; --*
lin rough_6_A = mkA "áspero" ; --*
lin roughage_N = mkN "fibra" ; --*
lin rough_and_tumble_N = variants {mkN "batalha" ; mkN "briga" ; mkN "combate" ; mkN "luta" ; } ; --*
lin roughcast_1_N = mkN "chapisco" ; --*
lin roughly_AdN = variants {mkAdN "about" ; mkAdN "aproximadamente" ; mkAdN "cerca" ; mkAdN "or" ; mkAdN "so" ; mkAdN "to" ; } ; --*
lin roughneck_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin roughness_1_N = mkN "rugosidade" ; --*
lin roughness_2_N = mkN "aspereza" ; --*
lin roughshod_2_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin rough_V2 = variants {mkV2 (mkV "esboçar") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin roulette_2_N = variants {mkN "roleta" ; mkN "wheel" ; } ; --*
lin roulette_3_N = mkN "roleta" ; --*
lin round_14_N = variants {mkN "círculo" ; mkN "Círculos" ; } ; --*
lin round_1_A = variants {mkA "arredondado" ; mkA "circular" ; mkA "redondo" ; } ; --*
lin round_2_A = mkA "rotundo" ; --*
lin round_2_N = mkN "ciclo" ; --*
lin round_3_A = mkA "redondo" ; --*
lin round_3_N = mkN "rodada" ; --*
lin round_4_N = mkN "ronda" ; --*
lin round_4_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "atacar") ; mkV2 (mkV "out") ; } ; --*
lin round_5_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin round_6_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin round_7_N = mkN "jogo" ; --*
lin roundabout_1_N = variants {mkN "circle" ; mkN "rotatória" ; } ; --*
lin roundabout_2_N = variants {mkN "carrossel" ; mkN "Carrossel" ; } ; --*
lin rounder_1_N = variants {mkN "depravado" ; mkN "libertino" ; } ; --*
lin roundhead_2_N = mkN "Cabeças" ; --*
lin rounding_N = variants {mkN "arredondamento" ; mkN "error" ; } ; --*
lin round_off_2_V2 = variants {mkV2 (mkV "aperfeiçoar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin round_off_3_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin round_out_3_V = variants {mkV "acabar" ; mkV "down" ; mkV "off" ; mkV "out" ; } ; --*
lin round_Prep = mkPrep "cerca" ; --*
lin round_up_V = mkV "up" ; --*
lin rouse_2_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "out") ; } ; --*
lin rouse_2_V = variants {mkV "empurrar" ; mkV "out" ; } ; --*
lin rouse_3_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin rouse_3_V = variants {mkV "agitar" ; mkV "excitar" ; mkV "on" ; mkV "up" ; } ; --*
lin rouse_4_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "despertar") ; mkV2 (mkV "up") ; } ; --*
lin rout_1_N = mkN "multidão" ; --*
lin route_1_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "itinerário" ; mkN "itinerários" ; mkN "linha" ; mkN "percurso" ; mkN "rota" ; } ; --*
lin route_2_N = variants {mkN "autoestradas" ; mkN "caminho" ; mkN "estrada" ; mkN "estradas" ; mkN "rodovia" ; mkN "via" ; } ; --*
lin route_2_V2 = mkV2 (mkV "rotear") ; --*
lin router_2_N = variants {mkN "roteador" ; mkN "Roteador" ; mkN "router" ; } ; --*
lin routine_1_N = variants {mkN "operandi" ; mkN "rotina" ; } ; --*
lin routine_2_N = mkN "número" ; --*
lin routine_3_N = variants {mkN "função" ; mkN "subrotina" ; mkN "sub-rotina" ; mkN "Sub-rotina" ; } ; --*
lin routine_A = variants {mkA "cotidiano" ; mkA "quotidiano" ; } ; --*
lin roux_N = variants {mkN "roux" ; mkN "Roux" ; } ; --*
lin rove_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "errar") ; mkV2 (mkV "perambular") ; mkV2 (mkV "transmigrar") ; mkV2 (mkV "vadiar") ; mkV2 (mkV "vagabundear") ; mkV2 (mkV "vagar") ; mkV2 (mkV "vaguear") ; } ; --*
lin row_1_N = variants {mkN "bicha" ; mkN "fileira" ; } ; --*
lin row_2_N = variants {mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin row_5_N = mkN "linha" ; --*
lin row_7_N = mkN "remo" ; --*
lin rowboat_N = variants {mkN "bote" ; mkN "pequeno" ; } ; --*
lin rowdy_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin rowing_N = mkN "remo" ; --*
lin row_V2 = mkV2 (mkV "remar") ; --*
lin royal_1_A = mkA "real" ; --*
lin royal_4_A = variants {mkA "imperial" ; mkA "real" ; } ; --*
lin royalist_1_N = mkN "Realistas" ; --*
lin royalist_2_N = mkN "Cavaliers" ; --*
lin royalty_1_N = mkN "realeza" ; --*
lin royalty_2_N = variants {mkN "família" ; mkN "family" ; mkN "house" ; mkN "line" ; } ; --*
lin rub_1_N = mkN "obstáculo" ; --*
lin rub_1_V2 = mkV2 (mkV "esfregar") ; --*
lin rub_2_V = mkV "arranhar" ; --*
lin rub_3_V2 = mkV2 (mkV "coçar") ; --*
lin rubato_N = variants {mkN "rubato" ; mkN "tempo" ; } ; --*
lin rubber_1_N = variants {mkN "borracha" ; mkN "cauchu" ; mkN "elastic" ; mkN "rubber" ; } ; --*
lin rubber_2_N = variants {mkN "borracha" ; mkN "rubber" ; } ; --*
lin rubber_4_N = variants {mkN "borracha" ; mkN "eraser" ; } ; --*
lin rubber_5_N = variants {mkN "camisa-de-vênus" ; mkN "camisinha" ; mkN "preservativo" ; } ; --*
lin rubber_6_N = mkN "galocha" ; --*
lin rubber_stamp_2_V2 = mkV2 (mkV "carimbar") ; --*
lin rubbery_2_A = mkA "cartilaginoso" ; --*
lin rubbing_1_N = variants {mkN "atrito" ; mkN "fricção" ; } ; --*
lin rubbing_3_N = mkN "fricção" ; --*
lin rubbish_1_N = variants {mkN "cama" ; mkN "detritos" ; mkN "lixo" ; mkN "resíduos" ; mkN "veículos" ; } ; --*
lin rubbish_2_N = variants {mkN "besteira" ; mkN "besteirol" ; mkN "folharada" ; } ; --*
lin rubble_N = variants {mkN "destroços" ; mkN "entulho" ; mkN "escombros" ; mkN "restos" ; mkN "ruínas" ; } ; --*
lin rubicon_1_N = mkN "Rubicão" ; --*
lin rubidium_N = variants {mkN "number" ; mkN "Rubidio" ; mkN "rubídio" ; } ; --*
lin ruble_1_N = mkN "rublo" ; --*
lin ruble_2_N = mkN "rublo" ; --*
lin rub_out_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin rubric_2_N = variants {mkN "glosso" ; mkN "rubrica" ; } ; --*
lin rubric_4_N = variants {mkN "cabeçalho" ; mkN "title" ; } ; --*
lin rubric_5_N = mkN "rubrica" ; --*
lin ruby_1_N = mkN "rubi" ; --*
lin ruby_2_N = mkN "rubi" ; --*
lin ruby_3_N = variants {mkN "carmesim" ; mkN "carmim" ; mkN "red" ; } ; --*
lin ruby_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin ruck_1_N = mkN "multidão" ; --*
lin rucksack_N = variants {mkN "alforje" ; mkN "mochila" ; mkN "Mochila" ; mkN "pack" ; } ; --*
lin ruckus_N = variants {mkN "escândalo" ; mkN "tumulto" ; } ; --*
lin rudder_2_N = mkN "leme" ; --*
lin rudderless_A = mkA "à" ; --*
lin ruddy_2_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin rude_1_A = variants {mkA "descortês" ; mkA "grosseiro" ; mkA "malcomportado" ; mkA "malcriado" ; mkA "mal-educado" ; mkA "rude" ; } ; --*
lin rude_2_A = mkA "grosseiro" ; --*
lin rude_3_A = mkA "grosseiro" ; --*
lin rude_4_A = mkA "natural" ; --*
lin rude_5_A = variants {mkA "primitiva" ; mkA "primitivo" ; } ; --*
lin rudeness_1_N = mkN "descortesia" ; --*
lin rudimentary_1_A = mkA "fundamental" ; --*
lin rudimentary_3_A = mkA "rudimentar" ; --*
lin rue_1_N = variants {mkN "arruda" ; mkN "graveolens" ; mkN "of" ; } ; --*
lin rue_2_N = mkN "Ruta" ; --*
lin rue_3_N = variants {mkN "mágoa" ; mkN "pesar" ; mkN "remorso" ; mkN "terpena" ; mkN "tristeza" ; } ; --*
lin rue_V2 = variants {mkV2 (mkV "arrepender") ; mkV2 (mkV "arrepender-se") ; mkV2 (mkV "lamentar") ; mkV2 (mkV "sentir") ; } ; --*
lin ruffian_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin ruffle_2_V2 = mkV2 (mkV "incomodar") ; --*
lin ruffle_3_N = mkN "contenda" ; --*
lin ruffle_3_V = mkV "desfilar" ; --*
lin ruffle_4_V2 = mkV2 (mkV "incomodar") ; --*
lin ruffle_6_V2 = variants {mkV2 (mkV "baralhar") ; mkV2 (mkV "embaralhar") ; mkV2 (mkV "misturar") ; } ; --*
lin ruffle_9_V2 = variants {mkV2 (mkV "plissar") ; mkV2 (mkV "preguear") ; } ; --*
lin rugby_N = variants {mkN "football" ; mkN "râguebi" ; mkN "rúgbi" ; } ; --*
lin rugby_PN = variants {mkPN "football" ; mkPN "râguebi" ; mkPN "rúgbi" ; } ; --*
lin ruggedness_3_N = mkN "dureza" ; --*
lin rugger_N = variants {mkN "football" ; mkN "râguebi" ; mkN "rúgbi" ; } ; --*
lin rug_N = variants {mkN "alcatifa" ; mkN "carpete" ; mkN "tapeçaria" ; mkN "tapete" ; } ; --*
lin ruin_1_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "destroçar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "detonar") ; mkV2 (mkV "estraçalhar") ; } ; --*
lin ruin_2_N = mkN "ruína" ; --*
lin ruin_3_N = mkN "ruína" ; --*
lin ruin_3_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "falir") ; mkV2 (mkV "quebrar") ; } ; --*
lin ruin_4_N = variants {mkN "desolação" ; mkN "ruína" ; } ; --*
lin ruin_5_N = variants {mkN "queda" ; mkN "ruína" ; } ; --*
lin ruin_5_V2 = variants {mkV2 (mkV "deflorar") ; mkV2 (mkV "desflorar") ; mkV2 (mkV "desvirginar") ; } ; --*
lin ruin_6_N = variants {mkN "ruína" ; mkN "waste" ; } ; --*
lin ruin_6_V2 = mkV2 (mkV "arruinar") ; --*
lin ruination_2_N = variants {mkN "desolação" ; mkN "ruína" ; } ; --*
lin ruination_3_N = variants {mkN "queda" ; mkN "ruína" ; } ; --*
lin ruination_4_N = variants {mkN "ruína" ; mkN "waste" ; } ; --*
lin ruinous_1_A = mkA "catastrófico" ; --*
lin rule_10_N = variants {mkN "princípio" ; mkN "regra" ; } ; --*
lin rule_11_N = variants {mkN "fórmula" ; mkN "regra" ; } ; --*
lin rule_12_N = variants {mkN "régua" ; mkN "Régua" ; } ; --*
lin rule_1_N = variants {mkN "lei" ; mkN "norma" ; mkN "regra" ; mkN "regulamento" ; mkN "regulamentos" ; } ; --*
lin rule_1_V2 = variants {mkV2 (mkV "gerir") ; mkV2 (mkV "governar") ; mkV2 (mkV "reger") ; mkV2 (mkV "reinar") ; } ; --*
lin rule_2_N = mkN "pauta" ; --*
lin rule_2_V2 = mkV2 (mkV "decretar") ; --*
lin rule_3_N = variants {mkN "norma" ; mkN "normas" ; mkN "prescrição" ; } ; --*
lin rule_3_V = variants {mkV "comandar" ; mkV "dominar" ; mkV "mandar" ; mkV "predominar" ; mkV "reinar" ; } ; --*
lin rule_4_V2 = variants {mkV2 (mkV "declarar") ; mkV2 (mkV "julgar") ; } ; --*
lin rule_4_V = variants {mkV "declarar" ; mkV "julgar" ; } ; --*
lin rule_4_VS = variants {mkVS (mkV "declarar") ; mkVS (mkV "julgar") ; } ; --*
lin rule_5_N = variants {mkN "princípio" ; mkN "regra" ; } ; --*
lin rule_5_V2 = mkV2 (mkV "reger") ; --*
lin rule_5_V = mkV "reger" ; --*
lin rule_5_VS = mkVS (mkV "reger") ; --*
lin rule_6_N = mkN "reinado" ; --*
lin rule_6_V2 = variants {mkV2 (mkV "pautar") ; mkV2 (mkV "traçar") ; } ; --*
lin rule_7_N = mkN "domínio" ; --*
lin rule_7_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "domar") ; } ; --*
lin rule_9_N = mkN "regra" ; --*
lin rule_out_1_V2 = variants {mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin rule_out_3_V2 = variants {mkV2 (mkV "eliminar") ; mkV2 (mkV "out") ; mkV2 (mkV "rejeitar") ; } ; --*
lin ruler_1_N = variants {mkN "governador" ; mkN "governante" ; } ; --*
lin ruler_2_N = variants {mkN "régua" ; mkN "Régua" ; } ; --*
lin ruling_A = mkA "dirigente" ; --*
lin ruling_N = variants {mkN "ditame" ; mkN "julgamento" ; mkN "sentença" ; } ; --*
lin rum_1_N = mkN "rum" ; --*
lin rumble_V = mkV "rosnar" ; --*
lin rumbustious_1_A = mkA "descontrolado" ; --*
lin rumen_N = variants {mkN "rúmen" ; mkN "stomach" ; } ; --*
lin ruminant_A = mkA "ruminante" ; --*
lin ruminant_N = variants {mkN "ruminante" ; mkN "ruminantes" ; } ; --*
lin ruminate_1_V = mkV "ruminar" ; --*
lin ruminate_2_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin rumination_1_N = variants {mkN "contemplação" ; mkN "especulação" ; mkN "meditação" ; mkN "pensamento" ; mkN "reflexão" ; } ; --*
lin rummage_through_V2 = variants {mkV2 (mkV "esgravatar") ; mkV2 (mkV "revolver") ; mkV2 (mkV "vasculhar") ; } ; --*
lin rummy_1_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin rummy_1_N = variants {mkN "bêbado" ; mkN "beberrão" ; mkN "borracho" ; } ; --*
lin rumour_1_N = variants {mkN "boato" ; mkN "diz-que-diz-que" ; mkN "fama" ; mkN "fofoca" ; mkN "renome" ; mkN "rumor" ; } ; --*
lin rumour_1_V2 = variants {mkV2 (mkV "difundir") ; mkV2 (mkV "espalhar") ; } ; --*
lin rumour_1_V3 = variants {mkV3 (mkV "difundir") ; mkV3 (mkV "espalhar") ; } ; --*
lin rump_1_N = variants {mkN "anca" ; mkN "culatra" ; mkN "garupa" ; mkN "rabo" ; mkN "traseira" ; mkN "traseiro" ; } ; --*
lin rump_3_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin rumple_2_V2 = mkV2 (mkV "amassar") ; --*
lin rumple_3_V2 = mkV2 (mkV "amassar") ; --*
lin rumpus_N = variants {mkN "escândalo" ; mkN "tumulto" ; } ; --*
lin run_10_V2 = mkV2 (mkV "tocar") ; --*
lin run_11_N = variants {mkN "regato" ; mkN "ribeira" ; } ; --*
lin run_12_N = variants {mkN "campaign" ; mkN "campanha" ; } ; --*
lin run_12_V = variants {mkV "given" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; } ; --*
lin run_13_V = mkV "funcionar" ; --*
lin run_17_V = variants {mkV "hard" ; mkV "perdurar" ; } ; --*
lin run_19_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "ligar") ; } ; --*
lin run_1_N = mkN "corrida" ; --*
lin run_1_V = mkV "correr" ; --*
lin run_22_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "passar") ; } ; --*
lin run_29_V2 = mkV2 (mkV "correr") ; --*
lin run_2_N = mkN "teste" ; --*
lin run_2_V = variants {mkV "away" ; mkV "escapar" ; mkV "escapulir" ; mkV "for" ; mkV "fugir" ; mkV "it" ; mkV "tail" ; mkV "the" ; mkV "to" ; } ; --*
lin run_31_V2 = mkV2 (mkV "soltar") ; --*
lin run_31_V = mkV "soltar" ; --*
lin run_32_V2 = mkV2 (mkV "consorciar") ; --*
lin run_36_V2 = variants {mkV2 (mkV "caçar") ; mkV2 (mkV "down") ; } ; --*
lin run_37_V2 = mkV2 (mkV "correr") ; --*
lin run_39_V2 = variants {mkV2 (mkV "derreter") ; mkV2 (mkV "down") ; mkV2 (mkV "fundir") ; } ; --*
lin run_3_V = variants {mkV "estender" ; mkV "ir" ; mkV "levar" ; } ; --*
lin run_41_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "deslindar") ; } ; --*
lin run_41_V = variants {mkV "desfiar" ; mkV "deslindar" ; } ; --*
lin run_4_V2 = mkV2 (mkV "operar") ; --*
lin run_6_N = variants {mkN "trajecto" ; mkN "trajeto" ; } ; --*
lin run_6_V = variants {mkV "correr" ; mkV "fluir" ; mkV "manar" ; } ; --*
lin run_7_N = mkN "corrida" ; --*
lin run_7_V = variants {mkV "funcionar" ; mkV "operar" ; } ; --*
lin run_9_V2 = variants {mkV2 (mkV "concorrer") ; mkV2 (mkV "disputar") ; mkV2 (mkV "fazer") ; } ; --*
lin run_across_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "into") ; mkV2 (mkV "ver") ; } ; --*
lin run_along_V = variants {mkV "along" ; mkV "enfileirar" ; } ; --*
lin run_around_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin run_away_1_V = variants {mkV "away" ; mkV "escapar" ; mkV "escapulir" ; mkV "for" ; mkV "fugir" ; mkV "it" ; mkV "tail" ; mkV "the" ; mkV "to" ; } ; --*
lin run_away_2_V = mkV "away" ; --*
lin run_down_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "over") ; } ; --*
lin run_down_3_V = variants {mkV "down" ; mkV "over" ; } ; --*
lin run_down_5_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "down") ; mkV2 (mkV "over") ; } ; --*
lin run_down_6_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "out") ; } ; --*
lin rune_N = variants {mkN "letter" ; mkN "runa" ; } ; --*
lin run_into_3_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "bater") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "with") ; } ; --*
lin run_into_4_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "into") ; mkV2 (mkV "ver") ; } ; --*
lin runnel_N = variants {mkN "regato" ; mkN "ribeira" ; } ; --*
lin runner_10_N = variants {mkN "Caranx" ; mkN "crysos" ; mkN "runner" ; } ; --*
lin runner_1_N = variants {mkN "contrabandista" ; mkN "curser" ; } ; --*
lin runner_2_N = mkN "corredor" ; --*
lin runner_5_N = mkN "Estolho" ; --*
lin runner_6_N = mkN "corredor" ; --*
lin runner_up_N = variants {mkN "best" ; mkN "campeão" ; mkN "colocado" ; mkN "vice" ; } ; --*
lin running_2_A = mkA "funcional" ; --*
lin running_2_N = mkN "corrida" ; --*
lin running_5_N = mkN "carreira" ; --*
lin runny_A = mkA "fluido" ; --*
lin run_off_1_N = mkN "runoff" ; --*
lin run_off_3_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin run_off_4_V = variants {mkV "fugir" ; mkV "off" ; } ; --*
lin run_off_6_V2 = variants {mkV2 (mkV "fotocopiar") ; mkV2 (mkV "off") ; mkV2 (mkV "xerocar") ; } ; --*
lin run_off_6_V = variants {mkV "fotocopiar" ; mkV "off" ; mkV "xerocar" ; } ; --*
lin run_out_4_V = variants {mkV "expirar" ; mkV "out" ; } ; --*
lin run_out_5_V = variants {mkV "out" ; mkV "verter" ; } ; --*
lin run_over_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "over") ; } ; --*
lin run_over_1_V = variants {mkV "down" ; mkV "over" ; } ; --*
lin run_over_2_V2 = variants {mkV2 (mkV "infestar") ; mkV2 (mkV "over") ; } ; --*
lin run_over_2_V = variants {mkV "infestar" ; mkV "over" ; } ; --*
lin run_through_2_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin run_up_1_V2 = mkV2 (mkV "up") ; --*
lin run_up_1_V = mkV "up" ; --*
lin run_up_2_V2 = variants {mkV2 (mkV "erguer") ; mkV2 (mkV "up") ; } ; --*
lin run_up_3_V2 = variants {mkV2 (mkV "bordar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin run_up_3_V = variants {mkV "bordar" ; mkV "together" ; mkV "up" ; } ; --*
lin runway_1_N = mkN "trilho" ; --*
lin runway_4_N = variants {mkN "pista" ; mkN "Pista" ; } ; --*
lin rupee_1_N = variants {mkN "Lanka" ; mkN "rupia" ; } ; --*
lin rupee_2_N = variants {mkN "rupee" ; mkN "rúpia" ; } ; --*
lin rupee_3_N = variants {mkN "rupee" ; mkN "rúpia" ; } ; --*
lin rupee_4_N = variants {mkN "rupee" ; mkN "rúpia" ; } ; --*
lin rupee_5_N = variants {mkN "rupee" ; mkN "rúpia" ; } ; --*
lin rupee_6_N = variants {mkN "rupee" ; mkN "Rupia" ; mkN "rúpia" ; } ; --*
lin rupestral_A = mkA "rupestre" ; --*
lin rupture_2_N = variants {mkN "out" ; mkN "rompimento" ; } ; --*
lin rupture_3_N = variants {mkN "rompimento" ; mkN "ruptura" ; } ; --*
lin rupture_V2 = variants {mkV2 (mkV "cindir") ; mkV2 (mkV "dividir") ; mkV2 (mkV "rasgar") ; } ; --*
lin rupture_V = variants {mkV "cindir" ; mkV "dividir" ; mkV "rasgar" ; } ; --*
lin rural_1_A = mkA "rural" ; --*
lin rural_2_A = variants {mkA "campestre" ; mkA "rural" ; } ; --*
lin ruralist_2_N = mkN "camponês" ; --*
lin ruse_N = variants {mkN "artimanha" ; mkN "maracutaia" ; mkN "truque" ; } ; --*
lin rush_1_N = mkN "precipitação" ; --*
lin rush_1_VV = variants {mkVV (mkV "along") ; mkVV (mkV "apressar") ; mkVV (mkV "correr") ; mkVV (mkV "on") ; } ; --*
lin rush_2_V = mkV "arremeter" ; --*
lin rush_3_V2 = variants {mkV2 (mkV "apressar") ; mkV2 (mkV "impacientar") ; mkV2 (mkV "instar") ; mkV2 (mkV "urgir") ; } ; --*
lin rush_4_V = variants {mkV "acelerar" ; mkV "apressar" ; mkV "correr" ; mkV "sharp" ; } ; --*
lin rush_5_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin rush_5_V2 = variants {mkV2 (mkV "arremeter") ; mkV2 (mkV "correr") ; } ; --*
lin rush_5_V = variants {mkV "arremeter" ; mkV "correr" ; } ; --*
lin rush_5_VV = variants {mkVV (mkV "arremeter") ; mkVV (mkV "correr") ; } ; --*
lin rush_6_V2 = mkV2 (mkV "fazer") ; --*
lin rush_7_V2 = variants {mkV2 (mkV "induzir") ; mkV2 (mkV "precipitar") ; } ; --*
lin russia_1_PN = variants {mkPN "of" ; mkPN "Rússia" ; mkPN "Union" ; mkPN "URSS" ; } ; --*
lin russia_2_PN = variants {mkPN "Russia" ; mkPN "Rússia" ; mkPN "Soviet" ; } ; --*
lin russia_4_PN = variants {mkPN "Federation" ; mkPN "Rússia" ; } ; --*
lin russian_A = mkA "russo" ; --*
lin russianFem_N = mkN "russo" ; --*
lin russianMasc_N = mkN "russo" ; --*
lin russian_N = variants {mkN "língua" ; mkN "russo" ; } ; --*
lin rust_1_N = mkN "ferrugem" ; --*
lin rust_1_V = mkV "corroer" ; --*
lin rust_2_V2 = mkV2 (mkV "corroer") ; --*
lin rust_3_N = variants {mkN "ferrugem" ; mkN "oxidação" ; } ; --*
lin rust_3_V = variants {mkV "enferrujar" ; mkV "oxidar-se" ; } ; --*
lin rustic_2_A = variants {mkA "caipira" ; mkA "provinciano" ; mkA "rústico" ; } ; --*
lin rusticate_1_V2 = mkV2 (mkV "rusticar") ; --*
lin rusticate_1_V = mkV "rusticar" ; --*
lin rustication_2_N = mkN "Rústico" ; --*
lin rustic_N = mkN "caipira" ; --*
lin rustle_1_V = mkV "sussurrar" ; --*
lin rustle_2_V2 = mkV2 (mkV "roubar") ; --*
lin rustle_N = variants {mkN "burburinho" ; mkN "cicio" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin rustless_A = mkA "inoxidável" ; --*
lin rustling_2_N = variants {mkN "burburinho" ; mkN "cicio" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin rusty_1_A = variants {mkA "destreinado" ; mkA "enferrujado" ; mkA "ferrugento" ; mkA "oxidado" ; } ; --*
lin rusty_3_A = variants {mkA "enferrujado" ; mkA "of" ; } ; --*
lin rut_1_N = mkN "andada" ; --*
lin rut_1_V2 = mkV2 (mkV "estar") ; --*
lin rut_2_V2 = mkV2 (mkV "sulcar") ; --*
lin rut_3_N = variants {mkN "andada" ; mkN "cio" ; mkN "estar" ; mkN "estro" ; } ; --*
lin rutabaga_1_N = variants {mkN "couve-nabo" ; mkN "turnip" ; } ; --*
lin rutabaga_2_N = variants {mkN "cabbage" ; mkN "couve-nabo" ; mkN "napus" ; mkN "plant" ; mkN "turnip" ; } ; --*
lin ruth_1_PN = variants {mkPN "Babe" ; mkPN "Herman" ; mkPN "of" ; mkPN "Ruth" ; } ; --*
lin ruth_2_PN = mkPN "Rute" ; --*
lin ruth_3_PN = variants {mkPN "coisa" ; mkPN "compaixão" ; mkPN "piedade" ; } ; --*
lin ruth_4_PN = variants {mkPN "livro" ; mkPN "of" ; } ; --*
lin ruthenium_N = variants {mkN "number" ; mkN "Rutenio" ; mkN "ruténio" ; mkN "Ruténio" ; } ; --*
lin rutherford_2_N = variants {mkN "Daniel" ; mkN "Rutherford" ; } ; --*
lin rutherfordium_N = variants {mkN "104" ; mkN "number" ; mkN "ruterfórdio" ; mkN "rutherfordio" ; mkN "Rutherfordio" ; mkN "rutherfórdio" ; } ; --*
lin ruthlessness_1_N = mkN "crueldade" ; --*
lin ruthlessness_2_N = mkN "crueldade" ; --*
lin rutile_N = variants {mkN "rutilo" ; mkN "Rútilo" ; } ; --*
lin rutland_PN = mkPN "Rutland" ; --*
lin rwandan_1_A = mkA "ruandês" ; --*
lin rwanda_PN = variants {mkPN "Republic" ; mkPN "Ruanda" ; } ; --*
lin rye_1_N = mkN "centeio" ; --*
lin rye_2_N = variants {mkN "centeio" ; mkN "cereale" ; } ; --*
lin rye_3_N = variants {mkN "centeio" ; mkN "whiskey" ; mkN "whisky" ; } ; --*
lin rye_bread_N = mkN "bread" ; --*
lin sabahan_A = mkA "de" ; --*
lin sabah_PN = variants {mkPN "Borneo" ; mkPN "Sabá" ; } ; --*
lin sabbath_N = variants {mkN "sabá" ; mkN "sábado" ; } ; --*
lin saber_1_N = mkN "sabre" ; --*
lin saber_2_N = variants {mkN "sabre" ; mkN "sword" ; } ; --*
lin sabin_2_N = variants {mkN "Albert" ; mkN "Bruce" ; mkN "Sabin" ; } ; --*
lin sable_3_N = variants {mkN "black" ; mkN "Ébano" ; } ; --*
lin sable_5_N = variants {mkN "zibelina" ; mkN "zibellina" ; } ; --*
lin sable_A = variants {mkA "sable" ; mkA "saibro" ; } ; --*
lin sabot_2_N = mkN "tamanco" ; --*
lin sabotage_N = variants {mkN "sabotagem" ; mkN "Sabotagem" ; } ; --*
lin sabotage_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "sabotar") ; mkV2 (mkV "solapar") ; } ; --*
lin sabre_1_N = mkN "sabre" ; --*
lin sabre_2_N = variants {mkN "sabre" ; mkN "sword" ; } ; --*
lin sac_1_N = variants {mkN "saca" ; mkN "saco" ; } ; --*
lin saccade_1_N = mkN "movimento" ; --*
lin saccharin_N = mkN "sacarina" ; --*
lin sack_1_N = variants {mkN "bag" ; mkN "bolsa" ; } ; --*
lin sack_1_V2 = mkV2 (mkV "saquear") ; --*
lin sack_2_N = variants {mkN "saca" ; mkN "saco" ; } ; --*
lin sack_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "demitir") ; mkV2 (mkV "despedir") ; mkV2 (mkV "destituir") ; mkV2 (mkV "notice") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; } ; --*
lin sack_3_V2 = variants {mkV2 (mkV "lucrar") ; mkV2 (mkV "up") ; } ; --*
lin sack_4_V2 = variants {mkV2 (mkV "ensacar") ; mkV2 (mkV "ensacolar") ; } ; --*
lin sack_6_N = variants {mkN "rede" ; mkN "Rede" ; } ; --*
lin sack_9_N = mkN "demissão" ; --*
lin sackbut_N = mkN "Sacabuxa" ; --*
lin sacking_2_N = mkN "demissão" ; --*
lin sacrament_N = mkN "sacramento" ; --*
lin sacramento_PN = variants {mkPN "of" ; mkPN "Sacramento" ; } ; --*
lin sacred_1_A = mkA "sagrado" ; --*
lin sacred_3_A = variants {mkA "sagrado" ; mkA "santo" ; } ; --*
lin sacred_4_A = mkA "santo" ; --*
lin sacrifice_1_N = variants {mkN "forfeit" ; mkN "perda" ; } ; --*
lin sacrifice_2_V2 = mkV2 (mkV "sacrificar") ; --*
lin sacrifice_3_N = mkN "sacrifício" ; --*
lin sacrifice_4_N = variants {mkN "killing" ; mkN "sacrificio" ; } ; --*
lin sacrilege_N = variants {mkN "blasfémia" ; mkN "blasfêmia" ; mkN "profanação" ; mkN "Profanação" ; mkN "sacrilégio" ; } ; --*
lin sacrilegious_A = mkA "sacrílego" ; --*
lin sacristan_N = mkN "sacristão" ; --*
lin sacristy_N = variants {mkN "sacristia" ; mkN "Sacristia" ; } ; --*
lin sacrosanct_A = mkA "inviolável" ; --*
lin sacrum_N = mkN "sacro" ; --*
lin sad_1_A = variants {mkA "destestável" ; mkA "triste" ; } ; --*
lin sad_3_A = variants {mkA "deplorável" ; mkA "lamentável" ; } ; --*
lin sadden_1_V2 = mkV2 (mkV "entristecer") ; --*
lin sadden_2_V2 = mkV2 (mkV "entristecer") ; --*
lin sadden_2_V = mkV "entristecer" ; --*
lin saddle_1_N = variants {mkN "arreio" ; mkN "sela" ; mkN "selim" ; } ; --*
lin saddle_1_V2 = mkV2 (mkV "selar") ; --*
lin saddle_3_V2 = mkV2 (mkV "responsabilizar") ; --*
lin saddle_5_N = variants {mkN "seat" ; mkN "selim" ; } ; --*
lin saddle_with_V3 = mkV3 (mkV "onerar") ; --*
lin sadhu_1_N = mkN "Sadhu" ; --*
lin sadism_N = mkN "sadismo" ; --*
lin sadistic_A = mkA "sádico" ; --*
lin sadist_N = mkN "pessoa" ; --*
lin sadness_1_N = variants {mkN "pesar" ; mkN "tristeza" ; } ; --*
lin sadness_2_N = variants {mkN "pesar" ; mkN "tristeza" ; } ; --*
lin sadness_3_N = mkN "tristeza" ; --*
lin sadomasochism_N = mkN "sadomasoquismo" ; --*
lin safari_N = variants {mkN "expedition" ; mkN "Safari" ; mkN "Safári" ; } ; --*
lin safe_1_A = mkA "seguro" ; --*
lin safe_1_N = mkN "cofre" ; --*
lin safe_3_N = variants {mkN "camisa-de-vênus" ; mkN "camisinha" ; mkN "preservativo" ; } ; --*
lin safe_4_A = mkA "digno" ; --*
lin safe_conduct_N = mkN "salvaguarda" ; --*
lin safe_deposit_N = variants {mkN "box" ; mkN "casa-forte" ; mkN "deposit" ; } ; --*
lin safeguard_1_N = mkN "precaução" ; --*
lin safeguard_2_N = mkN "salvaguarda" ; --*
lin safeguard_2_V2 = mkV2 (mkV "salvaguardar") ; --*
lin safekeeping_N = variants {mkN "obrigação" ; mkN "responsabilidade" ; } ; --*
lin safeness_N = mkN "segurança" ; --*
lin safety_1_N = mkN "segurança" ; --*
lin safety_2_N = variants {mkN "refúgio" ; mkN "refúgios" ; } ; --*
lin safety_5_N = variants {mkN "camisa-de-vênus" ; mkN "camisinha" ; mkN "preservativo" ; } ; --*
lin safety_belt_N = variants {mkN "belt" ; mkN "harness" ; } ; --*
lin safety_lamp_N = mkN "lamp" ; --*
lin safety_pin_N = mkN "pin" ; --*
lin safety_valve_N = variants {mkN "cock" ; mkN "valve" ; mkN "válvula" ; } ; --*
lin safflower_N = variants {mkN "açafrão-bastardo" ; mkN "saffron" ; mkN "tinctorius" ; } ; --*
lin saffron_1_N = variants {mkN "açafrão" ; mkN "crocus" ; mkN "sativus" ; } ; --*
lin saffron_2_N = mkN "açafrão" ; --*
lin saffron_3_N = variants {mkN "açafrão" ; mkN "yellow" ; } ; --*
lin sag_1_V = mkV "afundar" ; --*
lin sag_2_V = variants {mkV "afundar" ; mkV "down" ; } ; --*
lin sagacious_1_A = variants {mkA "ajuizado" ; mkA "prudente" ; mkA "sagaz" ; mkA "sensato" ; } ; --*
lin saga_N = variants {mkN "epopeia" ; mkN "saga" ; mkN "Sagas" ; } ; --*
lin sage_1_N = mkN "sábio" ; --*
lin sage_2_N = mkN "sálvia" ; --*
lin sage_3_N = mkN "sálvia" ; --*
lin sagitta_1_N = mkN "Sagitta" ; --*
lin sagittal_A = variants {mkA "sagital" ; mkA "Sagital" ; } ; --*
lin sagittarius_2_PN = variants {mkPN "Sagitário" ; mkPN "Sagittarius" ; } ; --*
lin sagittarius_3_PN = variants {mkPN "Sagitário" ; mkPN "the" ; } ; --*
lin sag_N = mkN "flambagem" ; --*
lin sago_N = mkN "sagu" ; --*
lin saguaro_1_N = variants {mkN "gigantea" ; mkN "saguaro" ; mkN "Saguaro" ; } ; --*
lin saiga_N = variants {mkN "saiga" ; mkN "tatarica" ; } ; --*
lin saigon_PN = variants {mkPN "Chi" ; mkPN "Cidade" ; } ; --*
lin sail_1_N = mkN "vela" ; --*
lin sail_2_N = mkN "cruzeiro" ; --*
lin sail_3_V = mkV "velejar" ; --*
lin sail_4_V = variants {mkV "navegar" ; mkV "velejar" ; } ; --*
lin sailboat_N = variants {mkN "boat" ; mkN "veleiro" ; } ; --*
lin sailing_1_N = variants {mkN "Navegacão" ; mkN "navegação" ; mkN "Navegação" ; } ; --*
lin sailing_2_N = variants {mkN "Iatismo" ; mkN "Náutica" ; mkN "navegação" ; mkN "Vela" ; } ; --*
lin sailing_3_N = mkN "partida" ; --*
lin sailing_4_N = mkN "Voo" ; --*
lin sailing_boat_N = variants {mkN "boat" ; mkN "veleiro" ; } ; --*
lin sailing_ship_N = variants {mkN "ship" ; mkN "vessel" ; } ; --*
lin sailing_vessel_N = variants {mkN "ship" ; mkN "vessel" ; } ; --*
lin sailor_1_N = variants {mkN "marinheiro" ; mkN "marujo" ; mkN "tripulante" ; } ; --*
lin sailor_2_N = variants {mkN "boy" ; mkN "man" ; mkN "marinheiro" ; } ; --*
lin sailor_3_N = variants {mkN "chapéu-panamá" ; mkN "hat" ; } ; --*
lin saint_1_N = variants {mkN "Arya" ; mkN "Ārya" ; mkN "santa" ; mkN "santo" ; mkN "Santos" ; } ; --*
lin saint_2_N = variants {mkN "anjo" ; mkN "man" ; mkN "person" ; mkN "santo" ; } ; --*
lin saint_3_N = mkN "apoteose" ; --*
lin sainted_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin saintlike_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin saintly_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin sake_1_N = variants {mkN "lucro" ; mkN "saqué" ; } ; --*
lin sake_2_N = variants {mkN "beer" ; mkN "saqué" ; mkN "saquê" ; } ; --*
lin sake_3_N = mkN "objectivo" ; --*
lin saki_1_N = variants {mkN "H." ; mkN "Hugh" ; mkN "Saki" ; } ; --*
lin saki_2_N = variants {mkN "beer" ; mkN "saqué" ; mkN "saquê" ; } ; --*
lin salable_A = variants {mkA "vendável" ; mkA "vendível" ; } ; --*
lin salacious_1_A = variants {mkA "indecente" ; mkA "lascivo" ; mkA "libidinoso" ; mkA "promíscuo" ; } ; --*
lin salacious_2_A = variants {mkA "impudico" ; mkA "obsceno" ; } ; --*
lin salaciousness_N = variants {mkN "pulha" ; mkN "salacidade" ; } ; --*
lin salacity_N = variants {mkN "pulha" ; mkN "salacidade" ; } ; --*
lin salad_N = mkN "salada" ; --*
lin salamander_1_N = variants {mkN "Anfíbios" ; mkN "caudados" ; mkN "salamandra" ; mkN "salamandras" ; } ; --*
lin salami_N = mkN "salame" ; --*
lin salaried_1_A = mkA "assalariado" ; --*
lin salary_N = variants {mkN "ordenado" ; mkN "remuneração" ; mkN "retribuição" ; mkN "salário" ; } ; --*
lin salat_1_N = mkN "salá" ; --*
lin sale_1_N = mkN "venda" ; --*
lin sale_2_N = mkN "venda" ; --*
lin sale_3_N = variants {mkN "event" ; mkN "promoção" ; mkN "sale" ; } ; --*
lin sale_5_N = variants {mkN "agreement" ; mkN "venda" ; } ; --*
lin saleable_A = variants {mkA "vendável" ; mkA "vendível" ; } ; --*
lin salerno_PN = mkPN "Salerno" ; --*
lin salesclerk_N = variants {mkN "assistant" ; mkN "clerk" ; mkN "empregado" ; } ; --*
lin salesgirl_N = variants {mkN "vendedor" ; mkN "vendedora" ; } ; --*
lin salesman_N = mkN "vendedor" ; --*
lin salesperson_N = variants {mkN "rep" ; mkN "representative" ; mkN "vendedor" ; } ; --*
lin saleswoman_N = variants {mkN "vendedor" ; mkN "vendedora" ; } ; --*
lin salient_1_A = mkA "proeminente" ; --*
lin saline_N = variants {mkN "solution" ; mkN "Soro" ; } ; --*
lin salinity_1_N = mkN "salinidade" ; --*
lin salinity_2_N = mkN "salinidade" ; --*
lin salisbury_PN = variants {mkPN "Harare" ; mkPN "of" ; } ; --*
lin saliva_N = variants {mkN "cuspe" ; mkN "cuspo" ; mkN "saliva" ; } ; --*
lin salivate_1_V = mkV "salivar" ; --*
lin salivate_2_V = mkV "babar" ; --*
lin salivation_N = mkN "salivação" ; --*
lin sallow_A = mkA "descorado" ; --*
lin sally_1_N = variants {mkN "chacota" ; mkN "gracejo" ; mkN "piada" ; mkN "xiste" ; } ; --*
lin sally_1_PN = variants {mkPN "chacota" ; mkPN "gracejo" ; mkPN "piada" ; mkPN "xiste" ; } ; --*
lin salmagundi_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin salmon_1_N = mkN "salmão" ; --*
lin salmon_3_N = variants {mkN "salmão" ; mkN "Salmão" ; } ; --*
lin salmonberry_1_N = variants {mkN "berry" ; mkN "chamaemorus" ; mkN "mulberry" ; mkN "Rubus" ; } ; --*
lin salmonella_N = mkN "salmonelas" ; --*
lin salmonellosis_N = variants {mkN "salmonelose" ; mkN "Salmonelose" ; } ; --*
lin salon_1_N = variants {mkN "galeria" ; mkN "saladevisitas" ; } ; --*
lin salon_2_N = variants {mkN "parlor" ; mkN "parlour" ; mkN "salão" ; mkN "salon" ; mkN "shop" ; } ; --*
lin salon_3_N = mkN "salão" ; --*
lin saloon_1_N = mkN "bar" ; --*
lin saloon_2_N = variants {mkN "bar" ; mkN "botequim" ; mkN "house" ; mkN "mill" ; mkN "pub" ; mkN "taberna" ; } ; --*
lin saloon_3_N = mkN "sedan" ; --*
lin salpingectomy_N = mkN "Salpingectomia" ; --*
lin salpingitis_N = variants {mkN "salpingite" ; mkN "Salpingite" ; } ; --*
lin salt_1_N = variants {mkN "sais" ; mkN "sal" ; } ; --*
lin salt_1_V2 = mkV2 (mkV "salgar") ; --*
lin salt_2_N = variants {mkN "sal" ; mkN "Sal-de-cozinha" ; mkN "salt" ; } ; --*
lin salt_4_N = mkN "salinidade" ; --*
lin salt_4_V2 = mkV2 (mkV "salgar") ; --*
lin salt_A = mkA "salgado" ; --*
lin saltation_3_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin saltation_4_N = variants {mkN "baile" ; mkN "dança" ; } ; --*
lin saltation_5_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin salt_away_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "guardar") ; mkV2 (mkV "in") ; } ; --*
lin salt_cellar_N = mkN "saleiro" ; --*
lin saltiness_2_N = mkN "salinidade" ; --*
lin saltiness_3_N = mkN "salinidade" ; --*
lin saltpetre_1_N = variants {mkN "nitrate" ; mkN "Nitrato" ; mkN "salitre" ; } ; --*
lin salt_PN = variants {mkPN "Acordos" ; mkPN "Arms" ; } ; --*
lin saltshaker_N = variants {mkN "saleiro" ; mkN "shaker" ; } ; --*
lin saltwater_N = variants {mkN "água" ; mkN "salmoura" ; } ; --*
lin saltworks_N = mkN "salina" ; --*
lin salty_2_A = variants {mkA "salgada" ; mkA "salgado" ; } ; --*
lin salty_3_A = mkA "salgado" ; --*
lin salubrious_1_A = variants {mkA "for" ; mkA "salubre" ; } ; --*
lin salubrious_2_A = mkA "salubre" ; --*
lin salubrity_N = mkN "salubridade" ; --*
lin salutary_A = mkA "salutar" ; --*
lin salutation_2_N = mkN "saudação" ; --*
lin salute_1_V2 = mkV2 (mkV "brindar") ; --*
lin salute_1_V = mkV "brindar" ; --*
lin salute_2_N = variants {mkN "Continência" ; mkN "greeting" ; } ; --*
lin salute_2_V2 = mkV2 (mkV "saudar") ; --*
lin salute_3_V2 = mkV2 (mkV "saudar") ; --*
lin salute_5_V2 = mkV2 (mkV "saudar") ; --*
lin salute_5_V = mkV "saudar" ; --*
lin salute_6_V = mkV "saudar" ; --*
lin salvadorean_1_A = variants {mkA "salvadorenho" ; mkA "salvatoriano" ; } ; --*
lin salvador_PN = variants {mkPN "of" ; mkPN "Salvador" ; } ; --*
lin salvage_1_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "salvar") ; mkV2 (mkV "socorrer") ; } ; --*
lin salvage_3_N = mkN "resgate" ; --*
lin salvation_1_N = variants {mkN "redenção" ; mkN "salvação" ; } ; --*
lin salvation_3_N = mkN "salvação" ; --*
lin salvation_4_N = mkN "salvação" ; --*
lin salve_1_N = variants {mkN "pomada" ; mkN "reboco" ; mkN "ungüento" ; } ; --*
lin salve_1_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "salvar") ; mkV2 (mkV "socorrer") ; } ; --*
lin salvia_N = mkN "sálvia" ; --*
lin salvo_2_N = variants {mkN "caudal" ; mkN "salva" ; mkN "saraivada" ; mkN "torrente" ; mkN "voleio" ; } ; --*
lin salzburg_PN = mkPN "Salzburgo" ; --*
lin samara_N = variants {mkN "fruit" ; mkN "sâmara" ; } ; --*
lin samaritan_N = mkN "Samaritanos" ; --*
lin samarium_N = variants {mkN "number" ; mkN "Samario" ; mkN "samário" ; } ; --*
lin samba_2_N = mkN "samba" ; --*
lin samba_3_N = mkN "samba" ; --*
lin same_2_A = variants {mkA "mesmo" ; mkA "o" ; } ; --*
lin same_3_A = mkA "mesmo" ; --*
lin same_4_A = mkA "mesmo" ; --*
lin sameness_1_N = variants {mkN "semelhança" ; mkN "similardidade" ; } ; --*
lin sameness_2_N = mkN "monotonia" ; --*
lin samisen_1_N = mkN "Sangen" ; --*
lin samoa_1_PN = variants {mkPN "i" ; mkPN "Samoa" ; mkPN "State" ; } ; --*
lin samoa_2_PN = variants {mkPN "Islands" ; mkPN "Samoa" ; } ; --*
lin samoan_A = mkA "samoano" ; --*
lin samoan_N = mkN "samoano" ; --*
lin samosa_N = mkN "chamuça" ; --*
lin samovar_N = variants {mkN "samovar" ; mkN "Samovar" ; } ; --*
lin sampan_N = mkN "sampana" ; --*
lin sample_1_N = variants {mkN "amostra" ; mkN "mostra" ; } ; --*
lin sample_2_N = variants {mkN "Base" ; mkN "distribution" ; } ; --*
lin sample_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "provar") ; mkV2 (mkV "sentir") ; } ; --*
lin sampling_1_N = variants {mkN "amostragem" ; mkN "técnicas" ; } ; --*
lin sampling_2_N = variants {mkN "Base" ; mkN "distribution" ; } ; --*
lin sam_PN = variants {mkPN "míssil" ; mkPN "missile" ; } ; --*
lin samuel_PN = mkPN "Samuel" ; --*
lin samurai_1_N = variants {mkN "samurai" ; mkN "Samurais" ; } ; --*
lin san_antonio_PN = mkPN "Antonio" ; --*
lin sanatorium_1_N = mkN "Sanatório" ; --*
lin san_bernardino_PN = mkPN "Bernardino" ; --*
lin sanctification_N = mkN "santificação" ; --*
lin sanctify_1_V2 = variants {mkV2 (mkV "consagrar") ; mkV2 (mkV "santificar") ; } ; --*
lin sanctify_2_V2 = mkV2 (mkV "purificar") ; --*
lin sanctimonious_A = mkA "hipócrita" ; --*
lin sanction_1_N = variants {mkN "aprovação" ; mkN "autorização" ; mkN "consentimento" ; mkN "Imprimatur" ; mkN "sanção" ; } ; --*
lin sanction_1_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "deferir") ; mkV2 (mkV "sancionar") ; } ; --*
lin sanction_2_N = mkN "sanção" ; --*
lin sanction_3_N = variants {mkN "autorização" ; mkN "autorizações" ; mkN "sanção" ; } ; --*
lin sanction_4_N = mkN "sanção" ; --*
lin sanctity_N = mkN "santidade" ; --*
lin sanctuary_1_N = mkN "santuário" ; --*
lin sanctuary_2_N = variants {mkN "asilo" ; mkN "guarida" ; mkN "refúgio" ; } ; --*
lin sanctum_2_N = variants {mkN "place" ; mkN "santuário" ; } ; --*
lin sand_1_N = variants {mkN "areia" ; mkN "areias" ; } ; --*
lin sand_2_N = variants {mkN "Aurore" ; mkN "Dudevant" ; mkN "George" ; mkN "Sand" ; } ; --*
lin sand_3_N = variants {mkN "entranhas" ; mkN "vísceras" ; } ; --*
lin sandal_N = variants {mkN "alpercata" ; mkN "chinelo" ; mkN "sandália" ; mkN "Sandália" ; } ; --*
lin sandalwood_N = mkN "sândalo" ; --*
lin sandbag_N = mkN "saco" ; --*
lin sandbank_N = mkN "banco" ; --*
lin sandbox_1_N = mkN "caixa" ; --*
lin sandbox_2_N = mkN "caixa" ; --*
lin sandfly_1_N = variants {mkN "fly" ; mkN "mosquito" ; mkN "papatasii" ; } ; --*
lin sandglass_N = mkN "ampulheta" ; --*
lin sandhi_N = mkN "Sândi" ; --*
lin san_diego_PN = mkPN "Diego" ; --*
lin sandpaper_N = variants {mkN "lixa" ; mkN "paper" ; } ; --*
lin sandpaper_V2 = variants {mkV2 (mkV "arear") ; mkV2 (mkV "lixar") ; } ; --*
lin sandpit_1_N = mkN "areal" ; --*
lin sandpit_2_N = mkN "caixa" ; --*
lin sandstone_N = mkN "arenito" ; --*
lin sandstorm_N = variants {mkN "storm" ; mkN "tempestade" ; mkN "Tempestade" ; } ; --*
lin sand_V2 = variants {mkV2 (mkV "arear") ; mkV2 (mkV "lixar") ; } ; --*
lin sandwich_N = variants {mkN "sandes" ; mkN "Sanduiche" ; mkN "sanduíche" ; mkN "Sanduíches" ; } ; --*
lin sandy_1_A = variants {mkA "arenoso" ; mkA "cor" ; } ; --*
lin sandy_2_A = mkA "arenoso" ; --*
lin sane_1_A = variants {mkA "mentalmente" ; mkA "sã" ; mkA "sadio" ; mkA "são" ; } ; --*
lin san_francisco_PN = mkPN "Francisco" ; --*
lin sangaree_N = mkN "sangria" ; --*
lin sango_N = variants {mkN "Língua" ; mkN "sango" ; } ; --*
lin sanguine_N = mkN "sanguínea" ; --*
lin sanitariness_N = mkN "previdência" ; --*
lin sanitary_A = mkA "sanitário" ; --*
lin sanitation_1_N = mkN "saneamento" ; --*
lin sanitation_2_N = variants {mkN "saneamento" ; mkN "Saneamento" ; } ; --*
lin sanity_N = mkN "sanidade" ; --*
lin san_jose_2_PN = variants {mkPN "Jose" ; mkPN "of" ; } ; --*
lin san_juan_PN = mkPN "Juan" ; --*
lin san_marinese_A = mkA "Marinese" ; --*
lin san_marino_1_PN = variants {mkPN "Marino" ; mkPN "of" ; } ; --*
lin san_marino_2_PN = variants {mkPN "Marino" ; mkPN "of" ; } ; --*
lin san_sebastian_PN = mkPN "Sebastian" ; --*
lin sanskrit_N = variants {mkN "language" ; mkN "sânscrito" ; } ; --*
lin santa_claus_N = variants {mkN "Christmas" ; mkN "Claus" ; mkN "Kringle" ; mkN "Nicholas" ; mkN "Nick" ; mkN "Pai" ; } ; --*
lin santa_claus_PN = variants {mkPN "Christmas" ; mkPN "Claus" ; mkPN "Kringle" ; mkPN "Nicholas" ; mkPN "Nick" ; mkPN "Pai" ; } ; --*
lin santiago_1_PN = variants {mkPN "de" ; mkPN "Santiago" ; } ; --*
lin santiago_2_PN = variants {mkPN "de" ; mkPN "Santiago" ; } ; --*
lin santiago_3_PN = variants {mkPN "de" ; mkPN "of" ; mkPN "Santiago" ; } ; --*
lin santiago_4_PN = variants {mkPN "de" ; mkPN "Santiago" ; } ; --*
lin santo_domingo_PN = variants {mkPN "Domingo" ; mkPN "of" ; mkPN "Trujillo" ; } ; --*
lin santos_PN = mkPN "Santos" ; --*
lin sap_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "out") ; } ; --*
lin sap_2_N = variants {mkN "bobo" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "tolo" ; } ; --*
lin saphead_N = variants {mkN "bobo" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "tolo" ; } ; --*
lin sapidity_1_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin sapience_N = variants {mkN "sabedoria" ; mkN "sapiência" ; } ; --*
lin sapient_A = variants {mkA "ajuizado" ; mkA "prudente" ; mkA "sagaz" ; mkA "sensato" ; } ; --*
lin sapless_1_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin sapodilla_1_N = variants {mkN "Sapotizeiro" ; mkN "tree" ; mkN "zapota" ; } ; --*
lin saponification_N = mkN "saponificação" ; --*
lin saponified_A = mkA "saponificado" ; --*
lin saponin_N = variants {mkN "saponina" ; mkN "saponinas" ; } ; --*
lin sapote_2_N = variants {mkN "plum" ; mkN "sapoti" ; } ; --*
lin sapper_N = mkN "Sapador" ; --*
lin sapphic_2_A = mkA "lésbico" ; --*
lin sapphire_1_N = mkN "safira" ; --*
lin sapphire_3_N = variants {mkN "azul" ; mkN "cerúleo" ; } ; --*
lin sapporo_PN = mkPN "Sapporo" ; --*
lin sappy_2_A = mkA "sentimental" ; --*
lin saracen_1_N = mkN "Sarracenos" ; --*
lin saracen_3_N = mkN "muçulmano" ; --*
lin sarah_PN = mkPN "Sara" ; --*
lin sarajevo_PN = mkPN "Sarajevo" ; --*
lin saratov_PN = mkPN "Saratov" ; --*
lin sarawakian_A = mkA "de" ; --*
lin sarawak_PN = mkPN "Sarawak" ; --*
lin sarcasm_N = variants {mkN "ironia" ; mkN "remark" ; mkN "sarcasmo" ; mkN "sátira" ; } ; --*
lin sarcastic_1_A = mkA "sarcástico" ; --*
lin sarcoidosis_N = variants {mkN "sarcoidose" ; mkN "Sarcoidose" ; } ; --*
lin sarcolemma_N = mkN "Sarcolema" ; --*
lin sarcolemmic_A = mkA "sarcolemático" ; --*
lin sarcoma_N = mkN "sarcoma" ; --*
lin sarcomere_N = variants {mkN "sarcómero" ; mkN "sarcômero" ; mkN "Sarcômero" ; } ; --*
lin sarcophagus_N = mkN "sarcófago" ; --*
lin sarcoplasm_N = mkN "Sarcoplasma" ; --*
lin sarcosine_N = mkN "Sarcosina" ; --*
lin sardine_1_N = mkN "sardinha" ; --*
lin sardine_2_N = mkN "sardinha" ; --*
lin sardine_4_N = variants {mkN "pilchardus" ; mkN "sardinha" ; } ; --*
lin sardonic_1_A = variants {mkA "escarnificante" ; mkA "motejante" ; mkA "patético" ; mkA "sarcástico" ; } ; --*
lin sari_1_N = mkN "Sári" ; --*
lin sarin_N = mkN "Sarin" ; --*
lin sarong_N = mkN "sarongue" ; --*
lin sarsaparilla_2_N = variants {mkN "salsaparrilha" ; mkN "sarçaparrilha" ; } ; --*
lin sartorial_1_A = mkA "sartório" ; --*
lin sartorius_N = variants {mkN "muscle" ; mkN "Músculo" ; mkN "sartorius" ; } ; --*
lin sashay_3_N = variants {mkN "excursão" ; mkN "ida" ; mkN "passeio" ; mkN "trip" ; } ; --*
lin sashimi_N = mkN "sashimi" ; --*
lin saskatchewan_PN = mkPN "Saskatchewan" ; --*
lin saskatoon_1_N = mkN "Saskatoon" ; --*
lin sassaby_N = variants {mkN "Damaliscus" ; mkN "lunatus" ; } ; --*
lin sassafras_1_N = variants {mkN "albidum" ; mkN "Sassafras" ; mkN "tree" ; } ; --*
lin sassenach_N = variants {mkN "inglês" ; mkN "Inglês" ; } ; --*
lin satanic_1_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin satanic_2_A = mkA "satânico" ; --*
lin satan_N = variants {mkN "diabo" ; mkN "Lúcifer" ; mkN "Nick" ; mkN "of" ; mkN "Satanás" ; mkN "Tempter" ; } ; --*
lin satchel_N = variants {mkN "carteira" ; mkN "mochila" ; } ; --*
lin sateen_N = mkN "Cetim" ; --*
lin satellite_1_N = variants {mkN "satélite" ; mkN "Satélites" ; mkN "satellite" ; } ; --*
lin satellite_2_N = mkN "satélite" ; --*
lin satellite_3_N = variants {mkN "satélite" ; mkN "satélites" ; } ; --*
lin sate_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "fartar") ; mkV2 (mkV "saciar") ; } ; --*
lin satiate_1_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "fartar") ; mkV2 (mkV "saciar") ; } ; --*
lin satiate_2_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "encher") ; mkV2 (mkV "out") ; } ; --*
lin satiation_1_N = mkN "saciedade" ; --*
lin satiety_N = mkN "saciedade" ; --*
lin satin_N = mkN "cetim" ; --*
lin satire_N = variants {mkN "ironia" ; mkN "remark" ; mkN "sarcasmo" ; mkN "sátira" ; } ; --*
lin satirical_1_A = variants {mkA "sarcástico" ; mkA "satírico" ; } ; --*
lin satirize_1_V2 = mkV2 (mkV "satirizar") ; --*
lin satisfaction_1_N = mkN "satisfação" ; --*
lin satisfaction_2_N = mkN "satisfação" ; --*
lin satisfaction_5_N = mkN "satisfação" ; --*
lin satisfactory_1_A = mkA "satisfatório" ; --*
lin satisfactory_2_A = variants {mkA "aceitável" ; mkA "satisfatório" ; } ; --*
lin satisfied_1_A = variants {mkA "saciado" ; mkA "satisfeito" ; } ; --*
lin satisfied_2_A = mkA "satisfeito" ; --*
lin satisfy_1_V2 = variants {mkV2 (mkV "cumprir") ; mkV2 (mkV "realizar") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "up") ; } ; --*
lin satisfy_2_V2 = variants {mkV2 (mkV "agradar") ; mkV2 (mkV "satisfazer") ; } ; --*
lin satisfy_3_V2 = variants {mkV2 (mkV "satifazer") ; mkV2 (mkV "satisfazer") ; mkV2 (mkV "suprir") ; } ; --*
lin satori_N = mkN "satori" ; --*
lin sat_PN = variants {mkPN "Sabado" ; mkPN "sábado" ; } ; --*
lin satrap_N = variants {mkN "sátrapa" ; mkN "Sátrapas" ; } ; --*
lin satsuma_2_N = mkN "Mikan" ; --*
lin saturate_1_V2 = mkV2 (mkV "saturar") ; --*
lin saturate_2_V2 = mkV2 (mkV "impregnar") ; --*
lin saturation_2_N = variants {mkN "enchimento" ; mkN "saturação" ; } ; --*
lin saturn_1_PN = mkPN "Saturno" ; --*
lin saturn_2_PN = mkPN "Saturno" ; --*
lin saturnalia_1_N = variants {mkN "Saturnalia" ; mkN "Saturnália" ; } ; --*
lin saturnalia_2_N = variants {mkN "deboche" ; mkN "dissipação" ; mkN "farra" ; mkN "orgia" ; mkN "revelry" ; mkN "viveremfarra" ; } ; --*
lin saturnine_1_A = mkA "saturnino" ; --*
lin saturnine_2_A = mkA "taciturno" ; --*
lin satyr_1_N = variants {mkN "depravado" ; mkN "devasso" ; mkN "sátiro" ; } ; --*
lin satyr_2_N = variants {mkN "god" ; mkN "sátiro" ; } ; --*
lin satyriasis_N = variants {mkN "satiríase" ; mkN "satirismo" ; } ; --*
lin satyric_1_A = mkA "satírico" ; --*
lin sauce_boat_N = variants {mkN "boat" ; mkN "holder" ; mkN "molheira" ; } ; --*
lin sauce_N = variants {mkN "molho" ; mkN "tempero" ; } ; --*
lin saucepan_N = variants {mkN "caçarola" ; mkN "panela" ; } ; --*
lin saucer_1_N = mkN "disco" ; --*
lin saucer_2_N = variants {mkN "pires" ; mkN "Pires" ; } ; --*
lin saucer_3_N = variants {mkN "aerial" ; mkN "antena" ; mkN "antenna" ; } ; --*
lin saucy_1_A = variants {mkA "atrevido" ; mkA "impertinente" ; } ; --*
lin saucy_2_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin saudi_arabia_PN = variants {mkPN "Arabia" ; mkPN "of" ; } ; --*
lin sauerkraut_N = mkN "chucrute" ; --*
lin sauna_N = variants {mkN "room" ; mkN "sauna" ; } ; --*
lin saunter_2_N = variants {mkN "dê" ; mkN "passeio" ; } ; --*
lin saunter_V = mkV "passear" ; --*
lin sausage_1_N = variants {mkN "Enchidos" ; mkN "lingüiça" ; mkN "salsicha" ; } ; --*
lin savage_1_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin savage_1_N = variants {mkN "bárbaro" ; mkN "bárbaros" ; mkN "selvagem" ; } ; --*
lin savage_2_A = variants {mkA "fero" ; mkA "feroz" ; } ; --*
lin savage_2_N = variants {mkN "besta" ; mkN "fera" ; } ; --*
lin savage_2_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "crucificar") ; } ; --*
lin savage_3_A = variants {mkA "bárbaro" ; mkA "bravio" ; mkA "gentio" ; mkA "selvagem" ; } ; --*
lin savage_4_A = variants {mkA "bravo" ; mkA "feroz" ; mkA "fulo" ; } ; --*
lin savagery_2_N = variants {mkN "barbárie" ; mkN "brutalidade" ; } ; --*
lin savagery_3_N = variants {mkN "actodebárbaro" ; mkN "barbárie" ; mkN "barbarismo" ; } ; --*
lin savannah_1_N = mkN "Savannah" ; --*
lin savannah_3_N = variants {mkN "anhara" ; mkN "chana" ; mkN "savana" ; } ; --*
lin savanna_N = variants {mkN "anhara" ; mkN "chana" ; mkN "savana" ; } ; --*
lin save_1_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "salvar") ; mkV2 (mkV "socorrer") ; } ; --*
lin save_2_V2 = variants {mkV2 (mkV "conservar") ; mkV2 (mkV "guardar") ; mkV2 (mkV "manter") ; mkV2 (mkV "poupar") ; mkV2 (mkV "preservar") ; } ; --*
lin save_5_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "poupar") ; mkV2 (mkV "up") ; } ; --*
lin save_7_V2 = mkV2 (mkV "redimir") ; --*
lin save_7_V = mkV "redimir" ; --*
lin save_8_V2 = mkV2 (mkV "salvar") ; --*
lin save_8_V = mkV "salvar" ; --*
lin save_9_V2 = variants {mkV2 (mkV "amealhar") ; mkV2 (mkV "economizar") ; mkV2 (mkV "poupar") ; } ; --*
lin saver_2_N = mkN "poupador" ; --*
lin saving_1_N = mkN "economia" ; --*
lin saving_2_N = variants {mkN "salvação" ; mkN "salvamento" ; } ; --*
lin saving_3_N = variants {mkN "conservação" ; mkN "preservação" ; } ; --*
lin savings_bank_2_N = variants {mkN "bank" ; mkN "box" ; mkN "caixa" ; } ; --*
lin savior_1_N = variants {mkN "Christ" ; mkN "Cristo" ; mkN "Jesus" ; mkN "Nazarene" ; mkN "of" ; mkN "Shepherd" ; } ; --*
lin savior_2_N = mkN "salvador" ; --*
lin saviour_1_N = variants {mkN "Christ" ; mkN "Cristo" ; mkN "Jesus" ; mkN "Nazarene" ; mkN "of" ; mkN "Shepherd" ; } ; --*
lin saviour_2_N = mkN "salvador" ; --*
lin savour_1_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin savour_4_V2 = variants {mkV2 (mkV "agradar-se") ; mkV2 (mkV "saborear") ; } ; --*
lin savour_4_V = variants {mkV "agradar-se" ; mkV "saborear" ; } ; --*
lin savoury_3_N = variants {mkN "satureja" ; mkN "segurelha" ; } ; --*
lin savvy_N = variants {mkN "compreensão" ; mkN "Compreensão" ; mkN "discernimento" ; } ; --*
lin savvy_V = variants {mkV "compreender" ; mkV "entender" ; mkV "the" ; } ; --*
lin saw_1_N = variants {mkN "adágio" ; mkN "aforismo" ; mkN "ditado" ; mkN "Ditado" ; mkN "provérbio" ; mkN "Provérbios" ; } ; --*
lin saw_2_N = variants {mkN "serra" ; mkN "serrote" ; } ; --*
lin saw_3_N = variants {mkN "machine" ; mkN "saw" ; mkN "serra" ; } ; --*
lin sawdust_N = variants {mkN "serradura" ; mkN "serragem" ; } ; --*
lin sawfish_N = variants {mkN "Peixe" ; mkN "Peixe-serra" ; } ; --*
lin sawmill_2_N = mkN "serraria" ; --*
lin saw_V2 = mkV2 (mkV "serrar") ; --*
lin sawwort_N = variants {mkN "Serratula" ; mkN "tinctoria" ; } ; --*
lin sax_1_N = variants {mkN "Adolphe" ; mkN "Sax" ; } ; --*
lin sax_2_N = mkN "saxofone" ; --*
lin saxhorn_N = mkN "saxotrompa" ; --*
lin saxitoxin_N = mkN "saxitoxina" ; --*
lin saxon_A = variants {mkA "saxão" ; mkA "saxônico" ; mkA "saxônio" ; } ; --*
lin saxon_N = variants {mkN "saxão" ; mkN "saxões" ; mkN "saxônico" ; mkN "saxônio" ; } ; --*
lin saxophone_N = mkN "saxofone" ; --*
lin saxophonist_N = variants {mkN "saxofone" ; mkN "saxofonista" ; } ; --*
lin say_11_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "indicar") ; } ; --*
lin say_1_VS = variants {mkVS (mkV "contar") ; mkVS (mkV "dizer") ; mkVS (mkV "falar") ; } ; --*
lin say_2_VS = variants {mkVS (mkV "afirmar") ; mkVS (mkV "alegar") ; mkVS (mkV "declarar") ; } ; --*
lin say_3_VS = mkVS (mkV "supor") ; --*
lin say_4_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; } ; --*
lin say_5_V = variants {mkV "impetrar" ; mkV "intimar" ; mkV "mandar" ; mkV "ordenar" ; } ; --*
lin say_6_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "out") ; mkV2 (mkV "pronunciar") ; } ; --*
lin say_7_V2 = mkV2 (mkV "dizer") ; --*
lin say_8_V2 = mkV2 (mkV "dizer") ; --*
lin say_9_VS = mkVS (mkV "supor") ; --*
lin saying_N = variants {mkN "ditado" ; mkN "expressão" ; mkN "idioma" ; mkN "locução" ; mkN "provérbio" ; } ; --*
lin scab_1_N = variants {mkN "fura-greve" ; mkN "Fura-greve" ; } ; --*
lin scab_2_N = mkN "crosta" ; --*
lin scabbard_N = mkN "bainha" ; --*
lin scabies_N = mkN "sarna" ; --*
lin scaffold_1_N = variants {mkN "cadafalso" ; mkN "patíbulo" ; } ; --*
lin scaffold_2_N = mkN "andaime" ; --*
lin scaffolding_N = variants {mkN "andaime" ; mkN "Andaime" ; } ; --*
lin scalability_N = mkN "escalabilidade" ; --*
lin scalable_A = mkA "escalável" ; --*
lin scalar_2_A = mkA "escalar" ; --*
lin scalawag_2_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin scalawag_3_N = mkN "diabrete" ; --*
lin scald_4_V2 = mkV2 (mkV "escaldar") ; --*
lin scale_10_N = mkN "escama" ; --*
lin scale_1_N = variants {mkN "escala" ; mkN "of" ; mkN "series" ; mkN "table" ; } ; --*
lin scale_1_V2 = mkV2 (mkV "pesar") ; --*
lin scale_2_N = mkN "escale" ; --*
lin scale_3_N = mkN "Escala" ; --*
lin scale_5_N = mkN "exfoliação" ; --*
lin scale_5_V2 = mkV2 (mkV "subir") ; --*
lin scale_5_V = mkV "subir" ; --*
lin scale_6_N = variants {mkN "Escalas" ; mkN "scale" ; } ; --*
lin scale_7_N = variants {mkN "balança" ; mkN "báscula" ; mkN "machine" ; } ; --*
lin scale_7_V2 = mkV2 (mkV "pesar") ; --*
lin scale_down_2_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; } ; --*
lin scale_down_8_V2 = mkV2 (mkV "escalar") ; --*
lin scalenus_N = variants {mkN "muscle" ; mkN "Músculos" ; mkN "scalenus" ; } ; --*
lin scallop_2_N = mkN "vieira" ; --*
lin scallop_3_N = variants {mkN "costeleta" ; mkN "costoleta" ; mkN "escalope" ; } ; --*
lin scallop_4_N = mkN "vieira" ; --*
lin scallop_4_V2 = mkV2 (mkV "pescar") ; --*
lin scallywag_2_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin scallywag_3_N = mkN "diabrete" ; --*
lin scalp_2_V2 = variants {mkV2 (mkV "escalpar") ; mkV2 (mkV "escalpelar") ; } ; --*
lin scalpel_N = mkN "bisturi" ; --*
lin scalp_N = mkN "couro" ; --*
lin scam_N = variants {mkN "golpe" ; mkN "pilantragem" ; } ; --*
lin scampi_N = mkN "camarão" ; --*
lin scamp_N = mkN "diabrete" ; --*
lin scam_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin scan_1_N = mkN "exploração" ; --*
lin scan_2_N = variants {mkN "scan" ; mkN "varredura" ; } ; --*
lin scan_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "down") ; mkV2 (mkV "over") ; } ; --*
lin scan_7_V2 = variants {mkV2 (mkV "escanear") ; mkV2 (mkV "ler") ; } ; --*
lin scandal_2_N = mkN "escândalo" ; --*
lin scandalize_1_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "escandalizar") ; mkV2 (mkV "horrorizar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "ultrajar") ; } ; --*
lin scandalous_A = mkA "infamante" ; --*
lin scandinavian_1_N = mkN "Escandinavo" ; --*
lin scandinavian_2_N = variants {mkN "Germanic" ; mkN "language" ; mkN "Línguas" ; } ; --*
lin scandinavian_A = mkA "escandinavo" ; --*
lin scandium_N = variants {mkN "Escandio" ; mkN "escândio" ; mkN "number" ; } ; --*
lin scanner_2_N = variants {mkN "scâner" ; mkN "scanner" ; } ; --*
lin scanner_4_N = variants {mkN "scanner" ; mkN "varredor" ; } ; --*
lin scansion_N = mkN "escansão" ; --*
lin scanty_1_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin scape_1_N = variants {mkN "Escapo" ; mkN "stalk" ; } ; --*
lin scapegoat_N = variants {mkN "bode" ; mkN "boy" ; } ; --*
lin scapula_N = variants {mkN "blade" ; mkN "bone" ; mkN "escápula" ; } ; --*
lin scapular_1_N = mkN "escapulário" ; --*
lin scapulohumeral_A = mkA "escapuloumeral" ; --*
lin scar_1_N = mkN "cicatriz" ; --*
lin scar_2_N = variants {mkN "cicatriz" ; mkN "marca" ; } ; --*
lin scarab_N = variants {mkN "escaravelho" ; mkN "sacer" ; } ; --*
lin scarce_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin scarcity_N = mkN "escassez" ; --*
lin scare_1_N = variants {mkN "Panico" ; mkN "pânico" ; } ; --*
lin scare_1_V2 = variants {mkV2 (mkV "amedrontar") ; mkV2 (mkV "assustar") ; mkV2 (mkV "atemorizar") ; mkV2 (mkV "aterrorizar") ; mkV2 (mkV "intimidar") ; } ; --*
lin scare_2_N = variants {mkN "ataque" ; mkN "attack" ; } ; --*
lin scare_2_V2 = variants {mkV2 (mkV "assustar") ; mkV2 (mkV "away") ; mkV2 (mkV "desalentar") ; mkV2 (mkV "intimidar") ; mkV2 (mkV "off") ; } ; --*
lin scare_away_V2 = variants {mkV2 (mkV "assustar") ; mkV2 (mkV "away") ; mkV2 (mkV "desalentar") ; mkV2 (mkV "intimidar") ; mkV2 (mkV "off") ; } ; --*
lin scarecrow_N = variants {mkN "espantalho" ; mkN "man" ; } ; --*
lin scared_A = mkA "assustado" ; --*
lin scare_off_V2 = variants {mkV2 (mkV "assustar") ; mkV2 (mkV "away") ; mkV2 (mkV "desalentar") ; mkV2 (mkV "intimidar") ; mkV2 (mkV "off") ; } ; --*
lin scarf_1_N = variants {mkN "cachecol" ; mkN "echarpe" ; } ; --*
lin scarify_1_V2 = mkV2 (mkV "escarificar") ; --*
lin scarify_2_V2 = mkV2 (mkV "escarificar") ; --*
lin scarify_3_V2 = mkV2 (mkV "escarificar") ; --*
lin scarlet_A = variants {mkA "avermelhado" ; mkA "carmim" ; mkA "cereja" ; mkA "encarnado" ; mkA "sangue-vermelho" ; mkA "vermelho" ; } ; --*
lin scarlet_N = variants {mkN "escarlate" ; mkN "red" ; mkN "vermelho" ; } ; --*
lin scarp_1_N = mkN "escarpa" ; --*
lin scarp_2_N = variants {mkN "embankment" ; mkN "escarpa" ; } ; --*
lin scarper_V = variants {mkV "away" ; mkV "escapar" ; mkV "escapulir" ; mkV "for" ; mkV "fugir" ; mkV "it" ; mkV "tail" ; mkV "the" ; mkV "to" ; } ; --*
lin scary_A = variants {mkA "assustador" ; mkA "terrível" ; } ; --*
lin scat_N = variants {mkN "scat" ; mkN "singing" ; } ; --*
lin scatology_1_N = mkN "escatologia" ; --*
lin scatology_2_N = variants {mkN "Coprologia" ; mkN "escatologia" ; } ; --*
lin scatter_1_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "dissipar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "up") ; } ; --*
lin scatter_2_V = variants {mkV "dispersar" ; mkV "espalhar" ; mkV "out" ; } ; --*
lin scatter_3_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "salpicar") ; } ; --*
lin scatter_6_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "esparramar") ; mkV2 (mkV "out") ; } ; --*
lin scatterbrained_2_A = mkA "leviano" ; --*
lin scattered_2_A = variants {mkA "confundido" ; mkA "confuso" ; mkA "perplexo" ; } ; --*
lin scattering_2_N = mkN "Dispersão" ; --*
lin scatty_2_A = variants {mkA "abstraído" ; mkA "ausente" ; } ; --*
lin scavenge_1_V = mkV "catar" ; --*
lin scavenge_4_V = mkV "limpar" ; --*
lin scavenger_1_N = mkN "necrófago" ; --*
lin scavenger_3_N = mkN "detritívoro" ; --*
lin scenario_3_N = variants {mkN "cenário" ; mkN "roteiro" ; } ; --*
lin scene_10_N = mkN "cenário" ; --*
lin scene_1_N = variants {mkN "cena" ; mkN "localidade" ; } ; --*
lin scene_3_N = variants {mkN "panorama" ; mkN "vista" ; } ; --*
lin scene_4_N = mkN "plano" ; --*
lin scene_6_N = mkN "cena" ; --*
lin scene_7_N = variants {mkN "birra" ; mkN "cena" ; mkN "chilique" ; mkN "piti" ; } ; --*
lin scene_9_N = mkN "cenário" ; --*
lin scenery_1_N = mkN "cenário" ; --*
lin scenery_2_N = mkN "paisagem" ; --*
lin scent_1_N = variants {mkN "cheiro" ; mkN "fragrância" ; mkN "odor" ; mkN "perfume" ; } ; --*
lin scent_2_N = mkN "cheiro" ; --*
lin scent_3_N = variants {mkN "cheiro" ; mkN "hálito" ; mkN "odor" ; mkN "odores" ; mkN "property" ; } ; --*
lin scent_3_V2 = mkV2 (mkV "perfumar") ; --*
lin scepter_1_N = mkN "cetro" ; --*
lin scepter_2_N = variants {mkN "ceptro" ; mkN "cetro" ; } ; --*
lin sceptical_1_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin sceptical_2_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin scepticism_N = variants {mkN "agnosticismo" ; mkN "cepticismo" ; mkN "ceticismo" ; mkN "Ceticismo" ; mkN "descrença" ; } ; --*
lin sceptic_N = mkN "cético" ; --*
lin sceptre_1_N = mkN "cetro" ; --*
lin sceptre_2_N = variants {mkN "ceptro" ; mkN "cetro" ; } ; --*
lin schedule_1_N = variants {mkN "cronograma" ; mkN "horário" ; mkN "ordem" ; mkN "plano" ; mkN "programa" ; } ; --*
lin schedule_1_V2 = mkV2 (mkV "agendar") ; --*
lin schedule_2_N = variants {mkN "agenda" ; mkN "cronograma" ; mkN "horário" ; mkN "programa" ; } ; --*
lin schedule_2_V2 = variants {mkV2 (mkV "agendar") ; mkV2 (mkV "planificar") ; mkV2 (mkV "programar") ; } ; --*
lin scheduling_N = mkN "programação" ; --*
lin scheelite_N = mkN "scheelita" ; --*
lin schema_1_N = mkN "esquema" ; --*
lin schema_2_N = variants {mkN "esquema" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin schematic_1_A = variants {mkA "convencional" ; mkA "esquemático" ; } ; --*
lin schematic_N = variants {mkN "drawing" ; mkN "esquematismo" ; } ; --*
lin scheme_1_N = variants {mkN "estratégia" ; mkN "planos" ; mkN "táctica" ; } ; --*
lin scheme_1_V = mkV "intrigar" ; --*
lin scheme_2_V2 = mkV2 (mkV "esquematizar") ; --*
lin scheme_2_V = mkV "esquematizar" ; --*
lin scheme_3_N = variants {mkN "organização" ; mkN "sistema" ; } ; --*
lin scheme_4_N = mkN "esquema" ; --*
lin scheme_5_N = variants {mkN "esquema" ; mkN "plano" ; mkN "projeto" ; } ; --*
lin scherzo_N = mkN "scherzo" ; --*
lin schilling_N = variants {mkN "schilling" ; mkN "Xelim" ; } ; --*
lin schism_1_N = variants {mkN "cisão" ; mkN "cisma" ; mkN "dissidência" ; } ; --*
lin schist_N = variants {mkN "xisto" ; mkN "Xisto" ; } ; --*
lin schistosomiasis_N = variants {mkN "esquistossomose" ; mkN "esquitosomíase" ; } ; --*
lin schizophrenia_N = variants {mkN "disorder" ; mkN "esquizofrenia" ; mkN "praecox" ; mkN "psychosis" ; } ; --*
lin schizophrenic_1_A = mkA "esquizofrênico" ; --*
lin schmaltzy_A = mkA "sentimental" ; --*
lin schmalzy_A = mkA "sentimental" ; --*
lin schnapps_1_N = mkN "Schnapps" ; --*
lin schnauzer_N = mkN "Schnauzer" ; --*
lin schnitzel_N = variants {mkN "schnitzel" ; mkN "Wiener" ; } ; --*
lin scholar_1_N = variants {mkN "acadêmico" ; mkN "erudito" ; mkN "estudioso" ; mkN "person" ; } ; --*
lin scholar_2_N = variants {mkN "acadêmico" ; mkN "aluno" ; mkN "estudante" ; } ; --*
lin scholar_3_N = variants {mkN "bolsista" ; mkN "estudante" ; } ; --*
lin scholarly_A = mkA "erudito" ; --*
lin scholarship_1_N = mkN "bolsa" ; --*
lin scholarship_2_N = variants {mkN "aprendizado" ; mkN "aprendizagem" ; mkN "Aprendizagem" ; mkN "ciência" ; mkN "erudição" ; mkN "sabedoria" ; } ; --*
lin scholasticism_1_N = mkN "Escolástica" ; --*
lin school_1_N = variants {mkN "colégio" ; mkN "escola" ; mkN "instituto" ; } ; --*
lin school_1_V2 = mkV2 (mkV "educar") ; --*
lin school_2_N = variants {mkN "colégio" ; mkN "departamento" ; mkN "escola" ; mkN "escolas" ; } ; --*
lin school_2_V2 = variants {mkV2 (mkV "civilizar") ; mkV2 (mkV "educar") ; } ; --*
lin school_4_N = mkN "escola" ; --*
lin school_5_N = variants {mkN "ano" ; mkN "day" ; } ; --*
lin school_6_N = variants {mkN "escola" ; mkN "instituto" ; } ; --*
lin school_7_N = mkN "Colégio" ; --*
lin schoolbook_N = variants {mkN "apostila" ; mkN "compêndio" ; mkN "edition" ; mkN "sebenta" ; mkN "text" ; mkN "texto" ; } ; --*
lin schoolchild_N = variants {mkN "aluno" ; mkN "child" ; mkN "pupilo" ; } ; --*
lin schooldays_N = mkN "tempo" ; --*
lin schoolfellow_N = variants {mkN "colega" ; mkN "fellow" ; } ; --*
lin schoolgirl_N = variants {mkN "escolar" ; mkN "estudante" ; } ; --*
lin schoolhouse_N = variants {mkN "colégio" ; mkN "departamento" ; mkN "escola" ; mkN "escolas" ; } ; --*
lin schoolmarm_1_N = mkN "professora" ; --*
lin schoolmaster_1_N = mkN "reitor" ; --*
lin schoolmate_N = variants {mkN "colega" ; mkN "fellow" ; } ; --*
lin schoolmistress_N = mkN "professora" ; --*
lin schoolroom_N = variants {mkN "classe" ; mkN "Classe" ; mkN "sala" ; } ; --*
lin schoolteacher_N = variants {mkN "professor" ; mkN "teacher" ; } ; --*
lin schooltime_1_N = variants {mkN "ano" ; mkN "day" ; } ; --*
lin schooltime_2_N = mkN "tempo" ; --*
lin schooner_2_N = mkN "escuna" ; --*
lin schottische_2_N = mkN "Chotiça" ; --*
lin schwa_1_N = mkN "Schwa" ; --*
lin sciatica_N = mkN "ciática" ; --*
lin science_1_N = variants {mkN "ciência" ; mkN "discipline" ; } ; --*
lin science_2_N = variants {mkN "ciência" ; mkN "habilidade" ; mkN "talento" ; } ; --*
lin scientific_1_A = mkA "científico" ; --*
lin scientific_2_A = variants {mkA "científica" ; mkA "científico" ; } ; --*
lin scientist_N = mkN "cientista" ; --*
lin scimitar_N = mkN "cimitarra" ; --*
lin scintilla_1_N = variants {mkN "fragmento" ; mkN "pingo" ; mkN "pouco" ; } ; --*
lin scintillate_3_V = mkV "brilhar" ; --*
lin scissors_1_N = variants {mkN "of" ; mkN "Tesouras" ; } ; --*
lin scissors_2_N = variants {mkN "grip" ; mkN "hold" ; mkN "tosquiadeira" ; } ; --*
lin sclera_N = variants {mkN "coat" ; mkN "esclera" ; } ; --*
lin scleritis_N = mkN "esclerite" ; --*
lin scleroderma_1_N = mkN "Escleroderma" ; --*
lin sclerosis_N = mkN "esclerose" ; --*
lin sclerotium_1_N = variants {mkN "esclerótio" ; mkN "Sclerotium" ; } ; --*
lin scoff_1_V = variants {mkV "vaiar" ; mkV "zombar" ; } ; --*
lin scoff_2_V2 = mkV2 (mkV "debochar") ; --*
lin scold_1_N = variants {mkN "rocim" ; mkN "scold" ; } ; --*
lin scold_1_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin scold_2_V2 = mkV2 (mkV "ralhar") ; --*
lin scoliosis_N = mkN "escoliose" ; --*
lin scollop_2_V2 = mkV2 (mkV "pescar") ; --*
lin scoop_2_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; mkV2 (mkV "triunfar") ; mkV2 (mkV "vencer") ; } ; --*
lin scoop_3_N = mkN "furo" ; --*
lin scooter_2_N = mkN "patinete" ; --*
lin scooter_3_N = variants {mkN "Motoneta" ; mkN "patinete" ; mkN "scooter" ; } ; --*
lin scopal_A = mkA "de" ; --*
lin scope_1_N = variants {mkN "alcance" ; mkN "áreas" ; mkN "escopo" ; } ; --*
lin scope_2_N = variants {mkN "âmbito" ; mkN "domínio" ; mkN "esfera" ; } ; --*
lin scope_3_N = variants {mkN "telescópio" ; mkN "Telescópio" ; mkN "Telescópios" ; } ; --*
lin scope_4_N = variants {mkN "oscilloscope" ; mkN "oscilógrafo" ; mkN "osciloscópio" ; } ; --*
lin scopolamine_N = mkN "escopolamina" ; --*
lin scorch_1_V2 = mkV2 (mkV "esturricar") ; --*
lin scorch_2_V2 = mkV2 (mkV "chamuscar") ; --*
lin scorch_2_V = mkV "chamuscar" ; --*
lin scorch_4_V2 = mkV2 (mkV "abrasar") ; --*
lin score_1_N = variants {mkN "classe" ; mkN "nota" ; } ; --*
lin score_2_N = variants {mkN "partitura" ; mkN "score" ; } ; --*
lin score_3_N = mkN "marcador" ; --*
lin score_3_V2 = variants {mkV2 (mkV "indicar") ; mkV2 (mkV "marcar") ; } ; --*
lin score_3_V = variants {mkV "indicar" ; mkV "marcar" ; } ; --*
lin score_5_N = variants {mkN "causa" ; mkN "conta" ; } ; --*
lin score_5_V2 = mkV2 (mkV "seduzir") ; --*
lin score_7_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "dar") ; } ; --*
lin score_9_N = mkN "ressentimento" ; --*
lin scoreboard_N = variants {mkN "placar" ; mkN "Placar" ; } ; --*
lin scorn_1_N = variants {mkN "desdém" ; mkN "desprezo" ; mkN "escárnio" ; } ; --*
lin scorn_1_V2 = variants {mkV2 (mkV "desdenhar") ; mkV2 (mkV "desprezar") ; mkV2 (mkV "menosprezar") ; } ; --*
lin scorn_2_N = mkN "desprezo" ; --*
lin scorn_2_V2 = variants {mkV2 (mkV "desprezar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin scorpio_2_PN = variants {mkPN "Constelação" ; mkPN "Escorpião" ; mkPN "Scorpius" ; } ; --*
lin scorpio_3_PN = variants {mkPN "escorpião" ; mkPN "Escorpião" ; mkPN "the" ; } ; --*
lin scorpion_2_N = variants {mkN "escorpião" ; mkN "Escorpião" ; mkN "the" ; } ; --*
lin scorpion_3_N = variants {mkN "escorpião" ; mkN "Escorpiões" ; mkN "lacrau" ; } ; --*
lin scotch_1_A = mkA "escocês" ; --*
lin scotch_1_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin scotch_2_A = variants {mkA "económico" ; mkA "econômico" ; mkA "frugal" ; } ; --*
lin scotchman_N = mkN "escocês" ; --*
lin scotland_PN = variants {mkPN "Escocia" ; mkPN "Escócia" ; } ; --*
lin scotland_yard_PN = variants {mkPN "Scotland" ; mkPN "Yard" ; } ; --*
lin scot_N = mkN "escocês" ; --*
lin scotoma_N = mkN "escotoma" ; --*
lin scots_1_A = mkA "escocês" ; --*
lin scots_2_A = variants {mkA "económico" ; mkA "econômico" ; mkA "frugal" ; } ; --*
lin scotsman_N = mkN "escocês" ; --*
lin scottish_A = mkA "escocês" ; --*
lin scour_1_V2 = mkV2 (mkV "registar") ; --*
lin scour_2_V2 = mkV2 (mkV "esfregar") ; --*
lin scour_3_V2 = mkV2 (mkV "esfregar") ; --*
lin scourge_1_N = variants {mkN "azorrague" ; mkN "Azorrague" ; } ; --*
lin scourge_2_N = variants {mkN "arquiinimigo" ; mkN "calamidade" ; mkN "desgraça" ; mkN "Deusa" ; mkN "nêmese" ; } ; --*
lin scourge_2_V2 = mkV2 (mkV "flagelar") ; --*
lin scourge_3_N = mkN "terror" ; --*
lin scourge_3_V2 = variants {mkV2 (mkV "assolar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "devastar") ; mkV2 (mkV "waste") ; } ; --*
lin scout_1_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin scout_3_N = variants {mkN "agente" ; mkN "scout" ; } ; --*
lin scouting_N = variants {mkN "escotismo" ; mkN "survey" ; } ; --*
lin scowl_N = mkN "cenho" ; --*
lin scrabble_1_N = variants {mkN "doodle" ; mkN "garrancho" ; } ; --*
lin scrabble_1_V = variants {mkV "apalpar" ; mkV "for" ; } ; --*
lin scrabble_2_N = mkN "Scrabble" ; --*
lin scrabble_2_V = mkV "rabiscar" ; --*
lin scraggly_2_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin scraggy_1_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin scramble_1_N = variants {mkN "batalha" ; mkN "luta" ; } ; --*
lin scramble_3_V2 = variants {mkV2 (mkV "misturar") ; mkV2 (mkV "together") ; } ; --*
lin scramble_3_V = variants {mkV "misturar" ; mkV "together" ; } ; --*
lin scramble_4_V2 = mkV2 (mkV "bater") ; --*
lin scramble_5_V2 = variants {mkV2 (mkV "embaralhar") ; mkV2 (mkV "misturar") ; } ; --*
lin scram_V = variants {mkV "off" ; mkV "saia" ; } ; --*
lin scrap_1_N = mkN "apara" ; --*
lin scrap_2_N = variants {mkN "cama" ; mkN "detritos" ; mkN "lixo" ; mkN "resíduos" ; mkN "veículos" ; } ; --*
lin scrap_3_N = mkN "pedaço" ; --*
lin scrap_4_N = variants {mkN "batalha" ; mkN "combate" ; mkN "disputa" ; mkN "luta" ; mkN "peleja" ; mkN "pugna" ; } ; --*
lin scrapbook_N = variants {mkN "scrapbooking" ; mkN "Scrapbooking" ; } ; --*
lin scrape_1_V = mkV "roçar" ; --*
lin scrape_2_N = mkN "abrasão" ; --*
lin scrape_3_V2 = variants {mkV2 (mkV "rascar") ; mkV2 (mkV "raspar") ; mkV2 (mkV "up") ; } ; --*
lin scrape_4_N = variants {mkN "cicatriz" ; mkN "marca" ; } ; --*
lin scrape_6_V2 = variants {mkV2 (mkV "escorriar") ; mkV2 (mkV "escorriçar") ; mkV2 (mkV "ferir") ; mkV2 (mkV "machucar") ; } ; --*
lin scrape_away_V2 = variants {mkV2 (mkV "rascar") ; mkV2 (mkV "raspar") ; mkV2 (mkV "up") ; } ; --*
lin scrapie_N = mkN "scrapie" ; --*
lin scrap_over_V2 = variants {mkV2 (mkV "altercar") ; mkV2 (mkV "disputar") ; mkV2 (mkV "indispor-se") ; mkV2 (mkV "porfiar") ; mkV2 (mkV "querelar") ; } ; --*
lin scratch_10_N = variants {mkN "cicatriz" ; mkN "marca" ; } ; --*
lin scratch_1_N = mkN "abrasão" ; --*
lin scratch_2_V2 = variants {mkV2 (mkV "rascar") ; mkV2 (mkV "raspar") ; mkV2 (mkV "up") ; } ; --*
lin scratch_3_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin scratch_3_V2 = mkV2 (mkV "coçar") ; --*
lin scratch_4_V2 = variants {mkV2 (mkV "cancelar") ; mkV2 (mkV "off") ; } ; --*
lin scratch_5_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "retirar") ; } ; --*
lin scratch_7_V2 = mkV2 (mkV "estampar") ; --*
lin scratch_8_N = mkN "cacografia" ; --*
lin scratch_out_V2 = mkV2 (mkV "out") ; --*
lin scratch_V = mkV "arranhar" ; --*
lin scratchy_1_A = mkA "abrasivo" ; --*
lin scratchy_2_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin scratchy_4_A = mkA "áspero" ; --*
lin scrawl_N = mkN "cacografia" ; --*
lin scrawny_1_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin scream_1_N = variants {mkN "gritar" ; mkN "grito" ; } ; --*
lin scream_1_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin scream_2_V = variants {mkV "balar" ; mkV "berrar" ; mkV "bradar" ; mkV "gritar" ; mkV "grunhir" ; } ; --*
lin screech_2_N = variants {mkN "gritar" ; mkN "grito" ; } ; --*
lin screech_2_V2 = mkV2 (mkV "gritar") ; --*
lin screech_2_V = mkV "gritar" ; --*
lin screen_1_N = variants {mkN "ecrã" ; mkN "screen" ; } ; --*
lin screen_1_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "testar") ; } ; --*
lin screen_2_N = mkN "cortina" ; --*
lin screen_2_V2 = mkV2 (mkV "examinar") ; --*
lin screen_3_N = variants {mkN "monitor" ; mkN "screen" ; } ; --*
lin screen_3_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "peneirar") ; } ; --*
lin screen_4_N = variants {mkN "capa" ; mkN "cobertor" ; mkN "cobertura" ; mkN "envólucro" ; } ; --*
lin screen_4_V2 = variants {mkV2 (mkV "exibir") ; mkV2 (mkV "projetar") ; } ; --*
lin screen_5_N = variants {mkN "rede" ; mkN "tela" ; } ; --*
lin screen_7_N = variants {mkN "coador" ; mkN "Crivo" ; mkN "peneira" ; } ; --*
lin screen_7_V2 = mkV2 (mkV "proteger") ; --*
lin screen_7_V = mkV "proteger" ; --*
lin scree_N = mkN "declives" ; --*
lin screener_N = variants {mkN "screener" ; mkN "Screener" ; } ; --*
lin screening_4_N = mkN "selecção" ; --*
lin screenplay_N = variants {mkN "guião" ; mkN "roteiro" ; } ; --*
lin screenwriter_N = variants {mkN "roteirista" ; mkN "writer" ; } ; --*
lin screw_1_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "comer") ; mkV2 (mkV "foder") ; mkV2 (mkV "in") ; mkV2 (mkV "intercourse") ; mkV2 (mkV "intimate") ; mkV2 (mkV "it") ; mkV2 (mkV "laid") ; mkV2 (mkV "love") ; mkV2 (mkV "meter") ; mkV2 (mkV "montar") ; mkV2 (mkV "out") ; mkV2 (mkV "pinar") ; mkV2 (mkV "sex") ; mkV2 (mkV "together") ; mkV2 (mkV "transar") ; mkV2 (mkV "trepar") ; mkV2 (mkV "with") ; } ; --*
lin screw_2_V2 = variants {mkV2 (mkV "aparafusar") ; mkV2 (mkV "atarraxar") ; } ; --*
lin screw_2_V = variants {mkV "aparafusar" ; mkV "atarraxar" ; } ; --*
lin screw_3_V2 = variants {mkV2 (mkV "aparafusar") ; mkV2 (mkV "in") ; } ; --*
lin screw_4_N = variants {mkN "parafuso" ; mkN "tarraxa" ; } ; --*
lin screw_4_V2 = variants {mkV2 (mkV "atarrachar") ; mkV2 (mkV "rosquear") ; } ; --*
lin screw_5_N = variants {mkN "coito" ; mkN "cópula" ; mkN "foda" ; mkN "in" ; mkN "metida" ; mkN "of" ; mkN "sexo" ; mkN "trepada" ; } ; --*
lin screw_5_V2 = variants {mkV2 (mkV "roubar") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "trapacear") ; } ; --*
lin screw_5_V = variants {mkV "roubar" ; mkV "sacanear" ; mkV "trapacear" ; } ; --*
lin screwball_1_N = variants {mkN "aloprado" ; mkN "case" ; mkN "maluco" ; } ; --*
lin screwdriver_1_N = mkN "chave" ; --*
lin screw_up_2_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin screwy_A = mkA "maluco" ; --*
lin scribble_1_N = mkN "cacografia" ; --*
lin scribble_1_V2 = mkV2 (mkV "rabiscar") ; --*
lin scribble_1_V = mkV "rabiscar" ; --*
lin scribble_2_N = variants {mkN "doodle" ; mkN "garrancho" ; } ; --*
lin scribe_3_N = mkN "escriba" ; --*
lin scribe_4_N = variants {mkN "awl" ; mkN "escriba" ; } ; --*
lin scriber_N = variants {mkN "awl" ; mkN "escriba" ; } ; --*
lin scrimshaw_N = mkN "Scrimshaw" ; --*
lin scrimy_2_A = mkA "tinhoso" ; --*
lin script_1_N = variants {mkN "guião" ; mkN "roteiro" ; mkN "script" ; } ; --*
lin script_2_N = mkN "caligrafia" ; --*
lin script_3_N = mkN "escrita" ; --*
lin scripted_A = mkA "escrito" ; --*
lin scriptorium_N = mkN "Scriptorium" ; --*
lin scriptural_1_A = variants {mkA "biblico" ; mkA "bíblico" ; } ; --*
lin scriptural_2_A = mkA "escritural" ; --*
lin scripture_1_N = variants {mkN "Bible" ; mkN "Bíblia" ; mkN "Book" ; mkN "of" ; mkN "Scripture" ; mkN "Writ" ; } ; --*
lin scrivener_N = mkN "escriba" ; --*
lin scrofula_N = variants {mkN "Escrófula" ; mkN "evil" ; } ; --*
lin scroll_2_N = variants {mkN "pergaminho" ; mkN "rolo" ; } ; --*
lin scrooge_N = variants {mkN "avarento" ; mkN "pão-duro" ; mkN "sovina" ; } ; --*
lin scrotal_A = mkA "escrotal" ; --*
lin scrotum_N = mkN "escroto" ; --*
lin scrub_1_N = mkN "Chaparral" ; --*
lin scrub_1_V2 = mkV2 (mkV "esfregar") ; --*
lin scrub_3_V2 = variants {mkV2 (mkV "cancelar") ; mkV2 (mkV "off") ; } ; --*
lin scrub_V = variants {mkV "esfregar" ; mkV "up" ; } ; --*
lin scruff_N = variants {mkN "cerviz" ; mkN "nuca" ; mkN "pescoço" ; } ; --*
lin scrumptious_A = variants {mkA "apetitoso" ; mkA "delicioso" ; mkA "gostoso" ; mkA "saboroso" ; } ; --*
lin scrunch_2_V2 = variants {mkV2 (mkV "acocorar") ; mkV2 (mkV "acocorar-se") ; mkV2 (mkV "agachar") ; mkV2 (mkV "baixar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "up") ; } ; --*
lin scrunch_3_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; mkV2 (mkV "up") ; } ; --*
lin scruple_1_V = mkV "escrúpulo" ; --*
lin scruple_2_N = mkN "ressalva" ; --*
lin scruple_2_V = mkV "importar" ; --*
lin scruple_3_N = mkN "escrúpulo" ; --*
lin scrupulous_2_A = variants {mkA "consciencioso" ; mkA "consciensiosamente" ; } ; --*
lin scrutinize_1_V2 = variants {mkV2 (mkV "escrutinar") ; mkV2 (mkV "stock") ; mkV2 (mkV "up") ; } ; --*
lin scrutinize_2_V2 = variants {mkV2 (mkV "auditar") ; mkV2 (mkV "auditorar") ; mkV2 (mkV "escrutinizar") ; mkV2 (mkV "inspecionar") ; } ; --*
lin scrutiny_1_N = variants {mkN "examinar" ; mkN "inspecionar" ; } ; --*
lin scuffle_1_N = variants {mkN "batalha" ; mkN "briga" ; mkN "combate" ; mkN "luta" ; } ; --*
lin scuffle_1_V = mkV "embaralhar" ; --*
lin scuffle_2_V = variants {mkV "batalhar" ; mkV "lutar" ; } ; --*
lin scuffle_3_N = variants {mkN "batalha" ; mkN "luta" ; } ; --*
lin sculpt_1_V2 = mkV2 (mkV "esculpir") ; --*
lin sculpt_2_V2 = mkV2 (mkV "esculpir") ; --*
lin sculptor_1_N = variants {mkN "escultor" ; mkN "maker" ; } ; --*
lin sculptor_2_N = mkN "Escultores" ; --*
lin sculptress_N = variants {mkN "escultor" ; mkN "escultora" ; } ; --*
lin sculpture_1_N = mkN "escultura" ; --*
lin sculpture_1_V2 = mkV2 (mkV "esculpir") ; --*
lin sculpture_2_N = variants {mkN "escultura" ; mkN "talha" ; } ; --*
lin sculpture_2_V2 = mkV2 (mkV "esculpir") ; --*
lin scummy_1_A = variants {mkA "abjeto" ; mkA "miserável" ; } ; --*
lin scupper_1_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "estar") ; mkV2 (mkV "in") ; } ; --*
lin scupper_2_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "comprometer") ; } ; --*
lin scurf_2_N = mkN "exfoliação" ; --*
lin scurrilous_A = mkA "injurioso" ; --*
lin scurvy_A = variants {mkA "abjeto" ; mkA "miserável" ; } ; --*
lin scurvy_N = mkN "escorbuto" ; --*
lin scutcheon_1_N = variants {mkN "escudo" ; mkN "plate" ; } ; --*
lin scutcheon_2_N = variants {mkN "escudo" ; mkN "Escudo" ; } ; --*
lin scylla_N = mkN "Cila" ; --*
lin scythe_N = variants {mkN "alfange" ; mkN "foice" ; mkN "fouce" ; mkN "gadanha" ; mkN "gadanho" ; mkN "segadeira" ; } ; --*
lin scythe_V2 = variants {mkV2 (mkV "ceifar") ; mkV2 (mkV "gadanhar") ; mkV2 (mkV "segar") ; } ; --*
lin sea_1_N = variants {mkN "mar" ; mkN "oceano" ; } ; --*
lin sea_2_N = variants {mkN "infinidade" ; mkN "mar" ; mkN "oceano" ; mkN "Oceano" ; } ; --*
lin sea_anemone_N = variants {mkN "anêmona" ; mkN "anemone" ; } ; --*
lin seabed_N = variants {mkN "bottom" ; mkN "floor" ; mkN "fundo" ; mkN "Jones" ; mkN "Jones's" ; } ; --*
lin seabird_1_N = variants {mkN "Ave" ; mkN "bird" ; } ; --*
lin seaboard_N = variants {mkN "costa" ; mkN "litoral" ; } ; --*
lin seaborgium_N = variants {mkN "106" ; mkN "number" ; mkN "seabórgio" ; } ; --*
lin sea_bream_1_N = variants {mkN "bream" ; mkN "brema-do-mar" ; mkN "dourada" ; } ; --*
lin sea_breeze_N = mkN "breeze" ; --*
lin sea_dog_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin seafarer_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin seafaring_1_N = variants {mkN "Navegacão" ; mkN "navegação" ; mkN "Navegação" ; } ; --*
lin seafood_N = variants {mkN "Fruto" ; mkN "Fruto-do-mar" ; mkN "Frutos" ; } ; --*
lin seagrass_N = variants {mkN "Erva" ; mkN "Ervas" ; } ; --*
lin seagull_1_N = variants {mkN "gaivota" ; mkN "gull" ; } ; --*
lin sea_horse_1_N = variants {mkN "horse" ; mkN "morsa" ; } ; --*
lin sea_horse_2_N = variants {mkN "cavalo-marinho" ; mkN "horse" ; } ; --*
lin seal_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "selar") ; } ; --*
lin seal_2_N = variants {mkN "carimbo" ; mkN "selo" ; mkN "sinete" ; mkN "timbre" ; } ; --*
lin seal_2_V2 = variants {mkV2 (mkV "chancelar") ; mkV2 (mkV "lacrar") ; mkV2 (mkV "selar") ; } ; --*
lin seal_3_V2 = mkV2 (mkV "selar") ; --*
lin seal_4_V2 = mkV2 (mkV "selar") ; --*
lin seal_5_N = mkN "selo" ; --*
lin seal_6_N = variants {mkN "of" ; mkN "selo" ; } ; --*
lin seal_9_N = mkN "foca" ; --*
lin sea_lion_N = mkN "lion" ; --*
lin sealyham_1_N = mkN "Sealyham" ; --*
lin sealyham_2_N = variants {mkN "Sealyham" ; mkN "terrier" ; } ; --*
lin seam_2_N = variants {mkN "ruga" ; mkN "sulco" ; } ; --*
lin seaman_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin seamanship_N = variants {mkN "náutica" ; mkN "Náutica" ; } ; --*
lin seamless_1_A = mkA "inconsútil" ; --*
lin seamless_3_A = mkA "sem" ; --*
lin seamount_N = mkN "Monte" ; --*
lin seamstress_N = variants {mkN "costureiro" ; mkN "estilista" ; mkN "modista" ; } ; --*
lin seamy_2_A = mkA "imundo" ; --*
lin seaplane_N = variants {mkN "hidroavião" ; mkN "Hidroaviões" ; } ; --*
lin seaport_N = variants {mkN "cais" ; mkN "porto" ; } ; --*
lin seaquake_N = variants {mkN "earthquake" ; mkN "Maremoto" ; } ; --*
lin sear_1_V2 = mkV2 (mkV "esturricar") ; --*
lin sear_2_V2 = mkV2 (mkV "chamuscar") ; --*
lin sear_3_V2 = mkV2 (mkV "abrasar") ; --*
lin sear_4_V2 = variants {mkV2 (mkV "estorricar") ; mkV2 (mkV "ressecar") ; } ; --*
lin search_1_N = variants {mkN "buscar" ; mkN "procurar" ; } ; --*
lin search_1_V = variants {mkV "buscar" ; mkV "for" ; mkV "procurar" ; } ; --*
lin search_2_N = mkN "inquérito" ; --*
lin search_2_V = variants {mkV "procurar" ; mkV "revistar" ; } ; --*
lin search_3_V = variants {mkV "buscar" ; mkV "explorar" ; mkV "investigar" ; mkV "pesquisar" ; mkV "procurar" ; } ; --*
lin search_4_V2 = variants {mkV2 (mkV "buscar") ; mkV2 (mkV "procurar") ; } ; --*
lin searcher_1_N = mkN "buscador" ; --*
lin searchlight_N = mkN "Holofote" ; --*
lin sea_rover_N = variants {mkN "bucaneiro" ; mkN "pirata" ; mkN "robber" ; mkN "rover" ; } ; --*
lin seashell_N = mkN "concha" ; --*
lin seashore_N = variants {mkN "beira" ; mkN "beira-mar" ; mkN "costa" ; mkN "litoral" ; mkN "orla" ; } ; --*
lin seasickness_N = variants {mkN "de" ; mkN "enjôo" ; } ; --*
lin seaside_N = variants {mkN "costa" ; mkN "litoral" ; } ; --*
lin sea_snake_N = mkN "snake" ; --*
lin season_1_N = variants {mkN "estação" ; mkN "estações" ; mkN "tempo" ; mkN "temporada" ; } ; --*
lin season_1_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "condimentar") ; mkV2 (mkV "dar") ; mkV2 (mkV "temperar") ; } ; --*
lin season_2_N = variants {mkN "estação" ; mkN "Estação" ; mkN "Estações" ; mkN "of" ; mkN "período" ; mkN "tempo" ; } ; --*
lin season_2_V2 = mkV2 (mkV "temperar") ; --*
lin season_3_N = variants {mkN "estação" ; mkN "tempo" ; mkN "temporada" ; } ; --*
lin season_3_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "medir") ; mkV2 (mkV "moderar") ; mkV2 (mkV "temperar") ; } ; --*
lin seasonable_2_A = variants {mkA "oportuno" ; mkA "timed" ; } ; --*
lin seasonal_A = mkA "sazonal" ; --*
lin seasoner_2_N = variants {mkN "aromatizantes" ; mkN "condimento" ; mkN "tempero" ; } ; --*
lin seasoning_1_N = variants {mkN "aromatizantes" ; mkN "condimento" ; mkN "tempero" ; } ; --*
lin seasoning_2_N = mkN "Tempero" ; --*
lin seat_1_N = variants {mkN "assento" ; mkN "cadeira" ; mkN "lugar" ; } ; --*
lin seat_2_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin seat_3_N = variants {mkN "assento" ; mkN "cadeira" ; } ; --*
lin seat_4_N = variants {mkN "assento" ; mkN "cadeira" ; } ; --*
lin seat_6_N = mkN "lugar" ; --*
lin seat_8_N = mkN "traseiro" ; --*
lin seat_belt_1_N = variants {mkN "belt" ; mkN "cinto" ; } ; --*
lin seattle_PN = mkPN "Seattle" ; --*
lin sea_urchin_N = mkN "urchin" ; --*
lin sea_wall_N = variants {mkN "molhe" ; mkN "quebra-mar" ; } ; --*
lin sea_water_N = variants {mkN "água" ; mkN "salmoura" ; } ; --*
lin seaweed_N = variants {mkN "alga" ; mkN "macroalga" ; } ; --*
lin seborrhea_N = mkN "seborréia" ; --*
lin sec_1_N = mkN "segundo" ; --*
lin sec_2_N = mkN "secante" ; --*
lin secant_1_N = mkN "secante" ; --*
lin secant_2_N = mkN "secante" ; --*
lin secateurs_N = mkN "podadeira" ; --*
lin secede_V = variants {mkV "away" ; mkV "romper" ; } ; --*
lin secession_3_N = mkN "secessão" ; --*
lin secessionist_N = mkN "secessionista" ; --*
lin seckel_N = variants {mkN "pear" ; mkN "pêra" ; } ; --*
lin seclude_V2 = variants {mkV2 (mkV "insular") ; mkV2 (mkV "isolar") ; } ; --*
lin seclusion_1_N = variants {mkN "intimidade" ; mkN "privacidade" ; } ; --*
lin seclusion_2_N = mkN "reclusão" ; --*
lin second_1_N = mkN "segundo" ; --*
lin second_1_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "aprovar") ; mkV2 (mkV "endossar") ; mkV2 (mkV "secundar") ; } ; --*
lin second_2_N = variants {mkN "instante" ; mkN "minuto" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin second_4_N = variants {mkN "instante" ; mkN "momento" ; mkN "segundo" ; } ; --*
lin second_5_N = mkN "segundo" ; --*
lin second_8_N = mkN "aceite" ; --*
lin secondary_1_A = mkA "secundário" ; --*
lin secondary_3_A = mkA "secundário" ; --*
lin secondary_4_A = mkA "secundário" ; --*
lin secondary_5_A = mkA "secundário" ; --*
lin second_hand_1_A = mkA "usada" ; --*
lin second_hand_2_A = variants {mkA "de" ; mkA "segunda" ; mkA "usado" ; } ; --*
lin second_hand_2_N = mkN "hand" ; --*
lin secondment_1_N = mkN "aceite" ; --*
lin second_rate_A = mkA "medíocre" ; --*
lin second_sighted_A = mkA "que" ; --*
lin secrecy_1_N = variants {mkN "secretividade" ; mkN "silêncio" ; } ; --*
lin secrecy_2_N = variants {mkN "clandestinidade" ; mkN "intimidade" ; mkN "privacidade" ; mkN "segredo" ; mkN "sigilo" ; } ; --*
lin secret_10_A = variants {mkA "misteriosa" ; mkA "misterioso" ; mkA "místico" ; } ; --*
lin secret_1_A = mkA "secreto" ; --*
lin secret_1_N = mkN "segredo" ; --*
lin secret_2_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin secret_2_N = variants {mkN "arcano" ; mkN "segredo" ; } ; --*
lin secret_3_A = mkA "secreto" ; --*
lin secret_3_N = variants {mkN "book" ; mkN "misterio" ; mkN "mistério" ; } ; --*
lin secret_5_A = variants {mkA "privado" ; mkA "secreto" ; } ; --*
lin secret_6_A = variants {mkA "escondido" ; mkA "secreto" ; } ; --*
lin secret_7_A = variants {mkA "privado" ; mkA "secreto" ; } ; --*
lin secret_8_A = mkA "confidencial" ; --*
lin secret_9_A = mkA "secreto" ; --*
lin secretariat_1_N = variants {mkN "secretaria" ; mkN "secretariado" ; } ; --*
lin secretary_4_N = variants {mkN "escrivaninha" ; mkN "secretária" ; mkN "table" ; } ; --*
lin secretaryFem_1_N = variants {mkN "secretária" ; mkN "secretário" ; } ; --*
lin secretaryFem_2_N = variants {mkN "assistant" ; mkN "secretária" ; } ; --*
lin secretaryFem_3_N = mkN "repositório" ; --*
lin secretaryMasc_1_N = variants {mkN "secretária" ; mkN "secretário" ; } ; --*
lin secretaryMasc_2_N = variants {mkN "assistant" ; mkN "secretária" ; } ; --*
lin secretaryMasc_3_N = mkN "repositório" ; --*
lin secretaryship_N = mkN "secretaria" ; --*
lin secrete_1_V2 = mkV2 (mkV "excretar") ; --*
lin secrete_2_V2 = mkV2 (mkV "ocultar") ; --*
lin secretin_N = mkN "secretina" ; --*
lin secretion_1_N = mkN "secreção" ; --*
lin secretion_2_N = mkN "secreção" ; --*
lin secretive_A = mkA "reticente" ; --*
lin secretiveness_2_N = variants {mkN "secretividade" ; mkN "silêncio" ; } ; --*
lin secretory_A = mkA "secretório" ; --*
lin sect_1_N = variants {mkN "order" ; mkN "sect" ; mkN "seita" ; } ; --*
lin sect_2_N = variants {mkN "facção" ; mkN "seita" ; } ; --*
lin sectarianism_N = mkN "sectarismo" ; --*
lin section_11_N = mkN "secção" ; --*
lin section_12_N = variants {mkN "departamento" ; mkN "Departamento" ; } ; --*
lin section_14_N = variants {mkN "incisão" ; mkN "incision" ; } ; --*
lin section_1_N = variants {mkN "capítulo" ; mkN "parte" ; mkN "seção" ; } ; --*
lin section_2_N = variants {mkN "parte" ; mkN "seção" ; } ; --*
lin section_4_N = mkN "parte" ; --*
lin section_6_N = mkN "componente" ; --*
lin section_8_N = variants {mkN "seção" ; mkN "section" ; } ; --*
lin sectional_2_A = mkA "seccionado" ; --*
lin sector_2_N = mkN "setor" ; --*
lin sector_3_N = variants {mkN "sector" ; mkN "setor" ; } ; --*
lin sector_6_N = mkN "setor" ; --*
lin sectorial_A = mkA "setorial" ; --*
lin secular_1_A = mkA "secular" ; --*
lin secular_2_A = variants {mkA "leigo" ; mkA "secular" ; } ; --*
lin secular_3_A = mkA "profano" ; --*
lin secular_4_A = mkA "secular" ; --*
lin secular_5_A = variants {mkA "laico" ; mkA "secular" ; } ; --*
lin secularism_N = variants {mkN "laicismo" ; mkN "secularismo" ; } ; --*
lin secularization_1_N = mkN "Secularização" ; --*
lin secure_1_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "obter") ; } ; --*
lin secure_2_V2 = variants {mkV2 (mkV "fixar") ; mkV2 (mkV "prender") ; } ; --*
lin secure_4_A = variants {mkA "inatacável" ; mkA "inviolável" ; mkA "seguro" ; } ; --*
lin secure_4_V2 = variants {mkV2 (mkV "assegurar") ; mkV2 (mkV "assegurar-se") ; mkV2 (mkV "certificar-se") ; mkV2 (mkV "garantir") ; mkV2 (mkV "ter") ; } ; --*
lin secure_5_A = mkA "digno" ; --*
lin secure_5_V2 = variants {mkV2 (mkV "tampar") ; mkV2 (mkV "up") ; } ; --*
lin security_1_N = mkN "segurança" ; --*
lin security_2_N = mkN "seguro" ; --*
lin security_3_N = mkN "segurança" ; --*
lin security_4_N = variants {mkN "certificado" ; mkN "garantia" ; } ; --*
lin security_5_N = mkN "garantia" ; --*
lin security_7_N = mkN "segurança" ; --*
lin security_8_N = variants {mkN "measure" ; mkN "sistemas" ; mkN "system" ; } ; --*
lin sedan_1_N = mkN "sedan" ; --*
lin sedate_1_A = variants {mkA "grave" ; mkA "parco" ; mkA "sério" ; mkA "sisudo" ; mkA "sóbrio" ; } ; --*
lin sedate_2_A = variants {mkA "grave" ; mkA "solene" ; } ; --*
lin sedateness_N = mkN "solenidade" ; --*
lin sedation_2_N = mkN "sedação" ; --*
lin sedative_A = mkA "sedativo" ; --*
lin sedative_N = variants {mkN "calmante" ; mkN "drug" ; mkN "sedativo" ; } ; --*
lin sediment_N = variants {mkN "depósito" ; mkN "sedimento" ; mkN "sedimentos" ; } ; --*
lin seditious_2_A = variants {mkA "insurgente" ; mkA "subversivo" ; } ; --*
lin seduce_1_V2 = mkV2 (mkV "seduzir") ; --*
lin seduce_2_V2 = variants {mkV2 (mkV "desencaminhar") ; mkV2 (mkV "seduzir") ; } ; --*
lin seducer_2_N = variants {mkN "killer" ; mkN "man" ; mkN "sedutor" ; } ; --*
lin seduction_1_N = mkN "sedução" ; --*
lin seduction_2_N = variants {mkN "conquista" ; mkN "sedução" ; } ; --*
lin seductress_N = mkN "sedutora" ; --*
lin sedulous_A = mkA "assíduo" ; --*
lin see_10_VS = variants {mkVS (mkV "assegurar") ; mkVS (mkV "to") ; mkVS (mkV "verificar") ; } ; --*
lin see_11_V2 = variants {mkV2 (mkV "consultar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visitar") ; } ; --*
lin see_13_V2 = variants {mkV2 (mkV "ir") ; mkV2 (mkV "visitar") ; } ; --*
lin see_14_V = variants {mkV "care" ; mkV "cuidar" ; } ; --*
lin see_17_V = variants {mkV "compreender" ; mkV "ver" ; } ; --*
lin see_18_V2 = mkV2 (mkV "decidir") ; --*
lin see_1_V2 = variants {mkV2 (mkV "enxergar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "ver") ; } ; --*
lin see_20_V2 = variants {mkV2 (mkV "examinar") ; mkV2 (mkV "inspecionar") ; } ; --*
lin see_21_V2 = variants {mkV2 (mkV "experienciar") ; mkV2 (mkV "experimentar") ; mkV2 (mkV "through") ; } ; --*
lin see_22_V2 = mkV2 (mkV "acompanhar") ; --*
lin see_24_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin see_2_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin see_2_V = variants {mkV "compreender" ; mkV "entender" ; } ; --*
lin see_4_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin see_5_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "considerar") ; mkV2 (mkV "ver") ; } ; --*
lin see_6_VS = variants {mkVS (mkV "a") ; mkVS (mkV "achar") ; mkVS (mkV "descobrir") ; mkVS (mkV "informar-se") ; mkVS (mkV "out") ; mkVS (mkV "up") ; mkVS (mkV "wind") ; mkVS (mkV "word") ; } ; --*
lin see_7_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "in") ; mkV2 (mkV "ver") ; } ; --*
lin see_8_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "into") ; mkV2 (mkV "ver") ; } ; --*
lin see_9_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin seed_1_N = variants {mkN "fruta" ; mkN "semente" ; } ; --*
lin seed_2_N = variants {mkN "fruta" ; mkN "semente" ; } ; --*
lin seed_3_N = variants {mkN "cabeça" ; mkN "player" ; } ; --*
lin seed_4_N = mkN "germes" ; --*
lin seed_5_N = variants {mkN "esperma" ; mkN "fluid" ; mkN "gozo" ; mkN "sémen" ; mkN "sêmen" ; mkN "Sêmen" ; } ; --*
lin seed_5_V2 = mkV2 (mkV "distribuir") ; --*
lin seed_5_V = mkV "distribuir" ; --*
lin seedling_N = mkN "Plântula" ; --*
lin seedy_3_A = variants {mkA "com" ; mkA "indisposto" ; mkA "menstruada" ; mkA "the" ; } ; --*
lin seedy_4_A = mkA "imundo" ; --*
lin seek_1_V2 = variants {mkV2 (mkV "perseguir") ; mkV2 (mkV "procurar") ; } ; --*
lin seek_2_V2 = variants {mkV2 (mkV "buscar") ; mkV2 (mkV "for") ; mkV2 (mkV "procurar") ; } ; --*
lin seek_2_VV = variants {mkVV (mkV "buscar") ; mkVV (mkV "for") ; mkVV (mkV "procurar") ; } ; --*
lin seek_3_VV = variants {mkVV (mkV "procurar") ; mkVV (mkV "tentar") ; } ; --*
lin seeker_1_N = mkN "buscador" ; --*
lin seeking_1_N = variants {mkN "busca" ; mkN "procura" ; } ; --*
lin seem_4_VV = mkVV (mkV "parecer") ; --*
lin seeming_A = mkA "aparente" ; --*
lin seemliness_N = variants {mkN "decência" ; mkN "elegância" ; } ; --*
lin seemly_A = variants {mkA "adequado" ; mkA "conveniente" ; mkA "decoroso" ; mkA "il" ; } ; --*
lin seem_VS = variants {mkVS (mkV "parecer") ; mkVS (mkV "ter") ; } ; --*
lin seep_V = variants {mkV "escoar" ; mkV "segregar" ; } ; --*
lin seer_3_N = variants {mkN "profeta" ; mkN "vidente" ; } ; --*
lin seesaw_N = variants {mkN "balancé" ; mkN "Balancê" ; mkN "board" ; mkN "gangorra" ; } ; --*
lin seethe_2_V = mkV "estar" ; --*
lin seethe_4_V = mkV "ferver" ; --*
lin see_through_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin segment_1_N = mkN "parte" ; --*
lin segment_1_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "secionar") ; mkV2 (mkV "segmentar") ; } ; --*
lin segment_2_N = mkN "segmento" ; --*
lin segment_2_V = mkV "dividir" ; --*
lin segmentation_1_N = mkN "segmentação" ; --*
lin segmentation_2_N = variants {mkN "divisão" ; mkN "partição" ; mkN "segmentação" ; mkN "separação" ; } ; --*
lin segregation_2_N = mkN "segregação" ; --*
lin segregation_3_N = mkN "segregação" ; --*
lin segue_N = mkN "transição" ; --*
lin seiche_N = mkN "seicha" ; --*
lin seine_1_N = variants {mkN "River" ; mkN "Sena" ; } ; --*
lin seismic_1_A = variants {mkA "seismico" ; mkA "sísmico" ; } ; --*
lin seismogram_N = mkN "sismograma" ; --*
lin seismologist_N = variants {mkN "seismologista" ; mkN "seismologistus" ; } ; --*
lin seismology_N = variants {mkN "seismologia" ; mkN "sismologia" ; mkN "Sismologia" ; } ; --*
lin seize_1_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "capturar") ; mkV2 (mkV "pegar") ; mkV2 (mkV "segurar") ; } ; --*
lin seize_2_V2 = variants {mkV2 (mkV "capturar") ; mkV2 (mkV "pegar") ; } ; --*
lin seize_3_V2 = variants {mkV2 (mkV "apropriar-se") ; mkV2 (mkV "capturar") ; mkV2 (mkV "conquistar") ; } ; --*
lin seize_4_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "confiscar") ; } ; --*
lin seize_5_V2 = variants {mkV2 (mkV "esbulhar") ; mkV2 (mkV "over") ; mkV2 (mkV "usurpar") ; } ; --*
lin seize_7_V2 = variants {mkV2 (mkV "acometer") ; mkV2 (mkV "hold") ; mkV2 (mkV "tomar") ; } ; --*
lin seize_8_V2 = variants {mkV2 (mkV "capturar") ; mkV2 (mkV "prender") ; } ; --*
lin seizure_1_N = mkN "convulsão" ; --*
lin seizure_2_N = variants {mkN "confiscação" ; mkN "control" ; } ; --*
lin seizure_4_N = mkN "confiscação" ; --*
lin seldom_AdV = mkAdV "raramente" ; --*
lin select_1_A = variants {mkA "fino" ; mkA "primordial" ; mkA "seleto" ; mkA "superior" ; } ; --*
lin selected_A = mkA "seleccionado" ; --*
lin selection_1_N = variants {mkN "escolha" ; mkN "seleção" ; mkN "selecção" ; } ; --*
lin selection_2_N = mkN "seleção" ; --*
lin selection_3_N = variants {mkN "escolha" ; mkN "selecção" ; } ; --*
lin selection_4_N = variants {mkN "of" ; mkN "seleção" ; mkN "selection" ; } ; --*
lin selection_5_N = variants {mkN "excerto" ; mkN "extrato" ; mkN "passagem" ; mkN "trecho" ; } ; --*
lin selective_1_A = variants {mkA "selectivo" ; mkA "seletivo" ; } ; --*
lin selective_2_A = variants {mkA "selectivo" ; mkA "seletivo" ; } ; --*
lin selectivity_N = variants {mkN "selectividade" ; mkN "seletividade" ; } ; --*
lin selector_2_N = variants {mkN "seletor" ; mkN "switch" ; } ; --*
lin select_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "selecionar") ; } ; --*
lin selenium_N = variants {mkN "number" ; mkN "Selenio" ; mkN "selénio" ; mkN "Selénio" ; } ; --*
lin selenology_N = mkN "selenologia" ; --*
lin self_1_N = mkN "o" ; --*
lin self_abasement_N = mkN "penitência" ; --*
lin self_abnegation_N = mkN "abnegação" ; --*
lin self_assertive_1_A = variants {mkA "agressivo" ; mkA "assertivo" ; mkA "peremptório" ; } ; --*
lin self_assurance_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "certeza" ; mkN "desembaraço" ; mkN "fé" ; mkN "pose" ; } ; --*
lin self_assured_A = mkA "auto-confiante" ; --*
lin self_centred_1_A = mkA "egocêntrico" ; --*
lin self_command_N = variants {mkN "auto-controle" ; mkN "determinação" ; mkN "power" ; } ; --*
lin self_confidence_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "certeza" ; mkN "desembaraço" ; mkN "fé" ; mkN "pose" ; } ; --*
lin self_confident_A = mkA "auto-confiante" ; --*
lin self_consciousness_2_N = variants {mkN "autoconsciência" ; mkN "Auto-consciência" ; } ; --*
lin self_control_1_N = variants {mkN "auto-controle" ; mkN "auto-monitorização" ; } ; --*
lin self_control_2_N = variants {mkN "auto-controle" ; mkN "determinação" ; mkN "power" ; } ; --*
lin self_denial_2_N = variants {mkN "auto-controle" ; mkN "auto-monitorização" ; } ; --*
lin self_denial_3_N = mkN "abnegação" ; --*
lin self_destruct_V = mkV "autodestruir" ; --*
lin self_determination_1_N = variants {mkN "autodeterminação" ; mkN "autogoverno" ; } ; --*
lin self_determination_2_N = mkN "autodeterminação" ; --*
lin self_employed_A = variants {mkA "autónomo" ; mkA "autônomo" ; } ; --*
lin self_esteem_N = variants {mkN "autoestima" ; mkN "auto-estima" ; } ; --*
lin self_evident_A = variants {mkA "axiomático" ; mkA "for" ; } ; --*
lin self_examination_N = mkN "introspecção" ; --*
lin self_help_N = mkN "auto-ajuda" ; --*
lin self_importance_1_N = mkN "egoísmo" ; --*
lin self_important_A = variants {mkA "altivo" ; mkA "arrogante" ; mkA "orgulhoso" ; mkA "presunçoso" ; mkA "ufano" ; } ; --*
lin self_indulgence_1_N = mkN "indulgência" ; --*
lin self_interest_1_N = mkN "oportunismo" ; --*
lin self_interest_2_N = variants {mkN "egocentrismo" ; mkN "egoísmo" ; } ; --*
lin selfishness_N = variants {mkN "egoísmo" ; mkN "Egoísmo" ; } ; --*
lin selflessness_1_N = variants {mkN "Altruismo" ; mkN "altruísmo" ; } ; --*
lin selflessness_2_N = mkN "abnegação" ; --*
lin self_possession_N = variants {mkN "auto-controle" ; mkN "determinação" ; mkN "power" ; } ; --*
lin self_reliance_N = variants {mkN "autonomia" ; mkN "independência" ; } ; --*
lin self_respect_N = variants {mkN "auto-estima" ; mkN "brio" ; mkN "dignidade" ; mkN "pundonor" ; } ; --*
lin self_righteous_A = mkA "hipócrita" ; --*
lin self_rule_N = variants {mkN "autodeterminação" ; mkN "autogoverno" ; } ; --*
lin self_sacrifice_N = mkN "abnegação" ; --*
lin self_same_A = variants {mkA "idêntico" ; mkA "mesmo" ; } ; --*
lin self_seeker_N = mkN "oportunista" ; --*
lin self_seeking_N = mkN "oportunismo" ; --*
lin self_sufficiency_N = variants {mkN "autonomia" ; mkN "independência" ; } ; --*
lin self_sufficient_A = mkA "auto-suficiente" ; --*
lin self_sufficing_A = mkA "auto-suficiente" ; --*
lin self_will_2_N = variants {mkN "auto-controle" ; mkN "determinação" ; mkN "power" ; } ; --*
lin selkirk_PN = variants {mkPN "Alexander" ; mkPN "Selcraig" ; mkPN "Selkirk" ; } ; --*
lin sell_1_V2 = mkV2 (mkV "vender") ; --*
lin sell_3_V2 = mkV2 (mkV "vender") ; --*
lin sell_4_V2 = mkV2 (mkV "vender") ; --*
lin sell_5_V2 = mkV2 (mkV "vender") ; --*
lin sell_8_V2 = variants {mkV2 (mkV "atraiçoar") ; mkV2 (mkV "trair") ; } ; --*
lin sellerFem_N = variants {mkN "comerciante" ; mkN "fornecedor" ; mkN "vendedor" ; } ; --*
lin sellerMasc_N = variants {mkN "comerciante" ; mkN "fornecedor" ; mkN "vendedor" ; } ; --*
lin selling_N = mkN "venda" ; --*
lin sell_N = variants {mkN "marketing" ; mkN "venda" ; } ; --*
lin seltzer_2_N = variants {mkN "águas" ; mkN "soda" ; mkN "water" ; } ; --*
lin selvage_2_N = mkN "bainha" ; --*
lin selvedge_2_N = mkN "bainha" ; --*
lin semantic_1_A = mkA "semântico" ; --*
lin semantics_1_N = variants {mkN "semântica" ; mkN "Semântica" ; } ; --*
lin semantics_2_N = mkN "semântica" ; --*
lin semaphore_N = mkN "semáforo" ; --*
lin semarang_PN = mkPN "Semarang" ; --*
lin semblance_1_N = mkN "aparência" ; --*
lin semblance_2_N = mkN "ilusão" ; --*
lin semblance_3_N = mkN "semelhança" ; --*
lin semen_N = variants {mkN "esperma" ; mkN "fluid" ; mkN "gozo" ; mkN "sémen" ; mkN "sêmen" ; mkN "Sêmen" ; } ; --*
lin semester_1_N = mkN "semestre" ; --*
lin semiaquatic_2_A = mkA "subaquático" ; --*
lin semiautomatic_2_A = mkA "semiautomático" ; --*
lin semibreve_N = variants {mkN "note" ; mkN "semibreve" ; } ; --*
lin semicircle_N = variants {mkN "semicírculo" ; mkN "Semi-círculo" ; } ; --*
lin semicircular_A = mkA "semicircular" ; --*
lin semicolon_N = mkN "ponto" ; --*
lin semiconducting_1_A = mkA "semicondutores" ; --*
lin semiconductor_2_N = variants {mkN "device" ; mkN "semicondutor" ; mkN "unit" ; } ; --*
lin semiliterate_1_A = mkA "semiletrado" ; --*
lin semiliterate_3_A = mkA "semi-analfabeto" ; --*
lin semimonthly_Adv = mkAdv "bimestralmente" ; --*
lin seminar_1_N = mkN "seminário" ; --*
lin seminar_2_N = mkN "seminário" ; --*
lin seminary_2_N = variants {mkN "seminário" ; mkN "Seminários" ; } ; --*
lin seminoma_N = variants {mkN "cancer" ; mkN "seminoma" ; } ; --*
lin semiotics_N = variants {mkN "semiótica" ; mkN "Semiótica" ; } ; --*
lin semiprecious_A = mkA "semiprecioso" ; --*
lin semiquaver_N = variants {mkN "note" ; mkN "semicolcheia" ; } ; --*
lin semite_A = variants {mkA "semita" ; mkA "semítico" ; } ; --*
lin semitic_1_A = variants {mkA "semita" ; mkA "semítico" ; } ; --*
lin semitic_2_A = variants {mkA "semita" ; mkA "semítico" ; } ; --*
lin semitone_N = variants {mkN "semitom" ; mkN "step" ; } ; --*
lin semitropical_1_A = mkA "subtropical" ; --*
lin semivowel_N = variants {mkN "Semi" ; mkN "semivogal" ; } ; --*
lin semolina_N = variants {mkN "Sémola" ; mkN "sêmola" ; mkN "Sêmola" ; mkN "semolina" ; } ; --*
lin sempstress_N = variants {mkN "costureiro" ; mkN "estilista" ; mkN "modista" ; } ; --*
lin senate_1_N = variants {mkN "senado" ; mkN "Senado" ; } ; --*
lin senate_2_N = variants {mkN "Senado" ; mkN "Senate" ; mkN "States" ; } ; --*
lin senator_N = variants {mkN "senador" ; mkN "senadora" ; } ; --*
lin send_1_V2V = variants {mkV2V (mkV "enviar") ; mkV2V (mkV "lançar") ; } ; --*
lin send_2_V2 = variants {mkV2 (mkV "despachar") ; mkV2 (mkV "enviar") ; mkV2 (mkV "out") ; } ; --*
lin send_4_V2 = variants {mkV2 (mkV "despachar") ; mkV2 (mkV "embarcar") ; mkV2 (mkV "enviar") ; mkV2 (mkV "expedir") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin send_4_V2V = variants {mkV2V (mkV "despachar") ; mkV2V (mkV "embarcar") ; mkV2V (mkV "enviar") ; mkV2V (mkV "expedir") ; mkV2V (mkV "transportar") ; mkV2V (mkV "trazer") ; } ; --*
lin send_4_V = variants {mkV "despachar" ; mkV "embarcar" ; mkV "enviar" ; mkV "expedir" ; mkV "transportar" ; mkV "trazer" ; } ; --*
lin send_5_V2 = mkV2 (mkV "situar") ; --*
lin send_5_V2V = mkV2V (mkV "situar") ; --*
lin send_5_V = mkV "situar" ; --*
lin send_6_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "off") ; } ; --*
lin send_7_V2 = variants {mkV2 (mkV "admitir") ; mkV2 (mkV "enviar") ; mkV2 (mkV "institucionalizar") ; mkV2 (mkV "internar") ; } ; --*
lin send_8_V2 = mkV2 (mkV "transmitir") ; --*
lin sender_1_N = mkN "remetente" ; --*
lin sender_2_N = mkN "transmissor" ; --*
lin send_for_V2 = variants {mkV2 (mkV "chamar") ; mkV2 (mkV "for") ; } ; --*
lin send_in_1_V2 = mkV2 (mkV "in") ; --*
lin send_off_1_V2 = variants {mkV2 (mkV "aviar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "noticiar") ; mkV2 (mkV "off") ; } ; --*
lin send_off_3_V2 = variants {mkV2 (mkV "enviar") ; mkV2 (mkV "off") ; } ; --*
lin send_up_1_N = mkN "paródia" ; --*
lin send_V3 = variants {mkV3 (mkV "enviar") ; mkV3 (mkV "mandar") ; } ; --*
lin senegalese_A = mkA "senegalês" ; --*
lin senegalese_N = mkN "senegalês" ; --*
lin senegal_PN = variants {mkPN "of" ; mkPN "Senegal" ; } ; --*
lin sene_N = mkN "sene" ; --*
lin senescence_1_N = variants {mkN "envelhecimento" ; mkN "Envelhecimento" ; } ; --*
lin senescence_2_N = mkN "senescência" ; --*
lin seneschal_N = mkN "mordomo" ; --*
lin senile_A = mkA "senil" ; --*
lin senility_1_N = variants {mkN "childhood" ; mkN "senilidade" ; } ; --*
lin senior_1_A = mkA "sênior" ; --*
lin senior_1_N = mkN "formando" ; --*
lin senior_2_N = variants {mkN "anciã" ; mkN "ancião" ; mkN "pessoa" ; mkN "senior" ; } ; --*
lin senior_3_A = mkA "idosa" ; --*
lin seniority_1_N = variants {mkN "rank" ; mkN "senioridade" ; mkN "status" ; } ; --*
lin seniority_2_N = mkN "longevidade" ; --*
lin sensation_1_N = variants {mkN "datum" ; mkN "experience" ; mkN "impression" ; mkN "sensação" ; } ; --*
lin sensation_2_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin sensation_3_N = mkN "sensação" ; --*
lin sensation_4_N = mkN "sensação" ; --*
lin sensation_5_N = variants {mkN "faculty" ; mkN "sentido" ; } ; --*
lin sensational_2_A = mkA "impressionante" ; --*
lin sensational_3_A = mkA "sensorial" ; --*
lin sensationalism_2_N = mkN "Sensacionalismo" ; --*
lin sensationalism_3_N = variants {mkN "sensacionalismo" ; mkN "sensualismo" ; } ; --*
lin sensationalism_4_N = variants {mkN "empirismo" ; mkN "philosophy" ; } ; --*
lin sense_1_N = mkN "senso" ; --*
lin sense_2_N = variants {mkN "acepção" ; mkN "sentido" ; mkN "significação" ; mkN "significado" ; } ; --*
lin sense_3_N = variants {mkN "faculty" ; mkN "sentido" ; } ; --*
lin sense_3_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "sentir") ; } ; --*
lin sense_4_N = variants {mkN "bom" ; mkN "sense" ; mkN "senso" ; mkN "wit" ; } ; --*
lin sense_4_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "sentir") ; } ; --*
lin sense_5_N = variants {mkN "senso" ; mkN "sentido" ; } ; --*
lin senseless_3_A = mkA "vão" ; --*
lin sense_organ_N = variants {mkN "organ" ; mkN "receptor" ; mkN "Receptor" ; } ; --*
lin sensibility_1_N = mkN "sensibilidade" ; --*
lin sensibility_3_N = mkN "sensibilidade" ; --*
lin sensible_1_A = mkA "razoável" ; --*
lin sensible_2_A = mkA "sensível" ; --*
lin sensible_3_A = mkA "sensível" ; --*
lin sensibleness_N = mkN "sensatez" ; --*
lin sensing_1_N = mkN "detecção" ; --*
lin sensing_2_N = mkN "percepção" ; --*
lin sensitive_1_A = mkA "sensível" ; --*
lin sensitive_2_A = mkA "sensível" ; --*
lin sensitive_3_A = mkA "sensível" ; --*
lin sensitive_4_A = variants {mkA "magoado" ; mkA "ofendido" ; mkA "sensível" ; mkA "terno" ; } ; --*
lin sensitivity_1_N = mkN "sensibilidade" ; --*
lin sensitivity_2_N = mkN "sensibilidade" ; --*
lin sensitivity_3_N = mkN "sensibilidade" ; --*
lin sensitivity_4_N = mkN "sensibilidade" ; --*
lin sensitivity_5_N = mkN "sensibilidade" ; --*
lin sensitization_1_N = mkN "sensibilização" ; --*
lin sensitize_1_V2 = mkV2 (mkV "sensibilizar") ; --*
lin sensitize_2_V2 = mkV2 (mkV "sensibilizar") ; --*
lin sensor_N = variants {mkN "element" ; mkN "sensor" ; } ; --*
lin sensory_1_A = variants {mkA "centrípeto" ; mkA "sensorial" ; } ; --*
lin sensory_2_A = mkA "sensorial" ; --*
lin sensory_3_A = mkA "sensorial" ; --*
lin sensual_1_A = variants {mkA "carnal" ; mkA "sensual" ; } ; --*
lin sensual_2_A = mkA "sensual" ; --*
lin sensualism_1_N = mkN "sensualidade" ; --*
lin sensualism_2_N = variants {mkN "sensacionalismo" ; mkN "sensualismo" ; } ; --*
lin sensuality_N = mkN "sensualidade" ; --*
lin sentence_1_N = variants {mkN "frase" ; mkN "oração" ; mkN "sentença" ; } ; --*
lin sentence_2_N = variants {mkN "condenação" ; mkN "of" ; } ; --*
lin sentence_3_N = variants {mkN "condenação" ; mkN "term" ; } ; --*
lin sentence_V2 = variants {mkV2 (mkV "amaldiçoar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "sentenciar") ; } ; --*
lin sententious_2_A = variants {mkA "conciso" ; mkA "lacónico" ; mkA "sentencioso" ; } ; --*
lin sentience_1_N = variants {mkN "conhecimento" ; mkN "consciência" ; mkN "tomar" ; } ; --*
lin sentience_2_N = variants {mkN "faculty" ; mkN "sentido" ; } ; --*
lin sentience_3_N = mkN "senciência" ; --*
lin sentiment_1_N = mkN "sentimento" ; --*
lin sentiment_2_N = variants {mkN "ideia" ; mkN "idéia" ; mkN "opinião" ; mkN "pensamento" ; mkN "perspicácia" ; } ; --*
lin sentimental_1_A = mkA "sentimental" ; --*
lin sentimental_2_A = mkA "sentimental" ; --*
lin sentimentalism_2_N = mkN "Sentimentalismo" ; --*
lin sentinel_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin sentry_go_N = variants {mkN "duty" ; mkN "go" ; mkN "guarda" ; } ; --*
lin sentry_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin seoul_PN = variants {mkPN "of" ; mkPN "Seul" ; } ; --*
lin sepal_N = mkN "sépala" ; --*
lin separable_1_A = mkA "separável" ; --*
lin separate_10_V = variants {mkV "apart" ; mkV "desmoronar" ; mkV "separar" ; mkV "up" ; } ; --*
lin separate_11_V2 = variants {mkV2 (mkV "discriminar") ; mkV2 (mkV "out") ; } ; --*
lin separate_11_V = variants {mkV "discriminar" ; mkV "out" ; } ; --*
lin separate_12_V = variants {mkV "dividir" ; mkV "separar" ; } ; --*
lin separate_13_V = variants {mkV "bifurcar" ; mkV "brotar" ; mkV "ramificar" ; } ; --*
lin separate_1_A = mkA "separado" ; --*
lin separate_1_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin separate_2_A = mkA "separado" ; --*
lin separate_2_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "partir") ; mkV2 (mkV "separar") ; } ; --*
lin separate_3_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; mkV2 (mkV "separar") ; } ; --*
lin separate_4_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "fracionar") ; mkV2 (mkV "separar") ; mkV2 (mkV "up") ; } ; --*
lin separate_5_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin separate_6_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "out") ; } ; --*
lin separate_7_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin separate_7_V = variants {mkV "dividir" ; mkV "separar" ; } ; --*
lin separate_8_V = variants {mkV "partir" ; mkV "separar" ; mkV "up" ; } ; --*
lin separate_9_V = variants {mkV "partir" ; mkV "separar" ; } ; --*
lin separateness_3_N = mkN "alteridade" ; --*
lin separation_1_N = mkN "separação" ; --*
lin separation_2_N = mkN "dispersão" ; --*
lin separation_3_N = mkN "distância" ; --*
lin separation_4_N = mkN "separação" ; --*
lin separation_5_N = mkN "separação" ; --*
lin separation_9_N = mkN "separação" ; --*
lin separatism_1_N = mkN "segregação" ; --*
lin separatism_2_N = mkN "separatismo" ; --*
lin separatism_3_N = mkN "separatismo" ; --*
lin separatist_N = mkN "separatista" ; --*
lin separator_N = variants {mkN "centrifuga" ; mkN "separador" ; } ; --*
lin sepia_1_N = variants {mkN "brown" ; mkN "lula" ; mkN "red" ; mkN "sépia" ; mkN "sienna" ; } ; --*
lin sepsis_N = variants {mkN "sepse" ; mkN "Sepse" ; mkN "sépse" ; } ; --*
lin sept_1_PN = variants {mkPN "setembro" ; mkPN "Setembro" ; } ; --*
lin sept_2_PN = variants {mkPN "família" ; mkPN "line" ; } ; --*
lin septal_1_A = mkA "septal" ; --*
lin septet_1_N = mkN "sete" ; --*
lin septic_1_A = variants {mkA "infectado" ; mkA "séptico" ; } ; --*
lin septicaemia_N = variants {mkN "poisoning" ; mkN "septicemia" ; } ; --*
lin septicemia_N = variants {mkN "poisoning" ; mkN "septicemia" ; } ; --*
lin septuagint_N = mkN "Septuaginta" ; --*
lin septum_1_N = mkN "septo" ; --*
lin sepulchral_3_A = mkA "fúnebre" ; --*
lin sepulchre_1_N = variants {mkN "chamber" ; mkN "sepulcro" ; mkN "sepultura" ; mkN "túmulo" ; } ; --*
lin sepulture_1_N = variants {mkN "enterro" ; mkN "funeral" ; mkN "inumação" ; mkN "sepultamento" ; mkN "sepultura" ; } ; --*
lin sepulture_2_N = variants {mkN "chamber" ; mkN "sepulcro" ; mkN "sepultura" ; mkN "túmulo" ; } ; --*
lin sequel_1_N = variants {mkN "conseqüência" ; mkN "continuação" ; mkN "resultado" ; } ; --*
lin sequel_2_N = variants {mkN "continuação" ; mkN "sequência" ; } ; --*
lin sequela_N = variants {mkN "sequela" ; mkN "seqüela" ; mkN "Seqüela" ; } ; --*
lin sequence_1_N = variants {mkN "sequência" ; mkN "seqüência" ; } ; --*
lin sequence_2_N = variants {mkN "sequence" ; mkN "sequência" ; mkN "seqüência" ; mkN "succession" ; mkN "sucessão" ; } ; --*
lin sequence_4_N = variants {mkN "sequência" ; mkN "sucessão" ; } ; --*
lin sequent_1_A = variants {mkA "sequencial" ; mkA "seqüencial" ; mkA "sucessivo" ; } ; --*
lin sequent_2_A = variants {mkA "anexado" ; mkA "concomitante" ; mkA "conseqüente" ; mkA "decorrente" ; mkA "resultante" ; } ; --*
lin sequential_A = variants {mkA "sequencial" ; mkA "seqüencial" ; mkA "sucessivo" ; } ; --*
lin sequester_2_V2 = variants {mkV2 (mkV "apreender") ; mkV2 (mkV "confiscar") ; } ; --*
lin sequester_3_V2 = mkV2 (mkV "sequestrar") ; --*
lin sequester_4_V2 = variants {mkV2 (mkV "insular") ; mkV2 (mkV "isolar") ; } ; --*
lin sequester_5_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "isolar") ; mkV2 (mkV "separar") ; } ; --*
lin sequestrate_1_V2 = variants {mkV2 (mkV "insular") ; mkV2 (mkV "isolar") ; } ; --*
lin sequestrate_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "isolar") ; mkV2 (mkV "separar") ; } ; --*
lin sequestration_1_N = mkN "segregação" ; --*
lin sequestration_4_N = variants {mkN "sequestro" ; mkN "Sequestro" ; mkN "Seqüestro" ; } ; --*
lin sequin_N = mkN "lantejoula" ; --*
lin sequoia_N = mkN "sequóia" ; --*
lin seraglio_N = mkN "harém" ; --*
lin seraphic_2_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin seraph_N = mkN "serafim" ; --*
lin serbian_A = mkA "sérvio" ; --*
lin serbo_croat_N = variants {mkN "língua" ; mkN "Língua" ; mkN "servocroata" ; mkN "servo-croata" ; } ; --*
lin serenade_1_N = mkN "serenata" ; --*
lin serenade_2_N = variants {mkN "serenata" ; mkN "Serenata" ; } ; --*
lin serendipity_N = variants {mkN "serendipidade" ; mkN "serendipismo" ; mkN "serendipitia" ; } ; --*
lin serene_1_A = variants {mkA "calma" ; mkA "calmo" ; mkA "sereno" ; mkA "sossegado" ; mkA "tranquilo" ; mkA "tranqüilo" ; } ; --*
lin serenity_1_N = mkN "serenidade" ; --*
lin serenity_2_N = variants {mkN "of" ; mkN "paz" ; mkN "Paz" ; mkN "repouso" ; mkN "serenidade" ; } ; --*
lin serfdom_N = variants {mkN "servidão" ; mkN "Servidão" ; } ; --*
lin serf_N = variants {mkN "escravo" ; mkN "servo" ; } ; --*
lin sergeant_1_N = mkN "sargento" ; --*
lin sergeant_major_2_N = variants {mkN "major" ; mkN "saxatilis" ; } ; --*
lin serge_N = variants {mkN "sarja" ; mkN "Sarja" ; } ; --*
lin serial_1_A = variants {mkA "sequencial" ; mkA "seqüencial" ; mkA "sucessivo" ; } ; --*
lin serial_1_N = mkN "Folhetim" ; --*
lin serial_2_A = mkA "serial" ; --*
lin serial_2_N = variants {mkN "publication" ; mkN "série" ; } ; --*
lin serial_3_A = mkA "serial" ; --*
lin serialism_N = variants {mkN "music" ; mkN "serialismo" ; } ; --*
lin serialization_1_N = mkN "serialização" ; --*
lin serialize_1_V2 = variants {mkV2 (mkV "serializar") ; mkV2 (mkV "seriar") ; } ; --*
lin sericulturist_N = mkN "sericultor" ; --*
lin series_1_N = variants {mkN "sequência" ; mkN "série" ; } ; --*
lin series_2_N = mkN "Folhetim" ; --*
lin series_3_N = variants {mkN "publication" ; mkN "série" ; } ; --*
lin series_7_N = mkN "série" ; --*
lin serif_1_N = mkN "serifa" ; --*
lin serigraphy_N = mkN "serigrafia" ; --*
lin serine_N = mkN "serina" ; --*
lin seriocomedy_N = mkN "tragicomédia" ; --*
lin serious_1_A = mkA "sério" ; --*
lin serious_2_A = mkA "sério" ; --*
lin serious_3_A = variants {mkA "grave" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin serious_4_A = mkA "bom" ; --*
lin serious_5_A = variants {mkA "sério" ; mkA "sombrio" ; } ; --*
lin seriousness_1_N = mkN "sinceridade" ; --*
lin seriousness_2_N = mkN "seriedade" ; --*
lin seriousness_3_N = mkN "seriedade" ; --*
lin sermon_1_N = variants {mkN "prédica" ; mkN "pregação" ; mkN "sermão" ; } ; --*
lin sermon_2_N = mkN "sermão" ; --*
lin sermonize_1_V = mkV "julgar" ; --*
lin serologic_1_A = mkA "sorológico" ; --*
lin serologist_N = mkN "serologista" ; --*
lin serology_N = variants {mkN "serologia" ; mkN "sorologia" ; } ; --*
lin serotonin_N = mkN "serotonina" ; --*
lin serpent_1_N = variants {mkN "cobra" ; mkN "cobras" ; mkN "ofídio" ; mkN "serpente" ; mkN "Serpentes" ; } ; --*
lin serpent_3_N = variants {mkN "serpe" ; mkN "serpentão" ; } ; --*
lin serrate_A = mkA "dentado" ; --*
lin serrated_A = mkA "dentado" ; --*
lin sertraline_N = mkN "sertralina" ; --*
lin serum_N = variants {mkN "serum" ; mkN "soro" ; } ; --*
lin serval_N = mkN "serval" ; --*
lin servantFem_1_N = variants {mkN "empregado" ; mkN "servidor" ; } ; --*
lin servantMasc_1_N = variants {mkN "empregado" ; mkN "servidor" ; } ; --*
lin serve_10_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "assistir") ; mkV2 (mkV "on") ; mkV2 (mkV "servir") ; mkV2 (mkV "to") ; } ; --*
lin serve_12_V = variants {mkV "bastar" ; mkV "ser" ; } ; --*
lin serve_1_V = mkV "servir" ; --*
lin serve_2_V = variants {mkV "exercer" ; mkV "servir" ; } ; --*
lin serve_3_V2 = mkV2 (mkV "servir") ; --*
lin serve_4_V2 = variants {mkV2 (mkV "funcionar") ; mkV2 (mkV "servir") ; } ; --*
lin serve_5_V2 = mkV2 (mkV "ajudar") ; --*
lin serve_6_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "out") ; mkV2 (mkV "servir") ; mkV2 (mkV "up") ; } ; --*
lin serve_9_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "servir") ; } ; --*
lin serve_N = variants {mkN "serviço" ; mkN "Serviço" ; } ; --*
lin server_1_N = variants {mkN "empregado" ; mkN "garçom" ; mkN "Garçom" ; mkN "garçon" ; mkN "garçonete" ; } ; --*
lin server_3_N = mkN "servidor" ; --*
lin server_4_N = mkN "aplicação" ; --*
lin service_12_N = variants {mkN "serviço" ; mkN "Serviço" ; } ; --*
lin service_13_N = variants {mkN "citação" ; mkN "of" ; } ; --*
lin service_14_N = variants {mkN "and" ; mkN "manutenção" ; } ; --*
lin service_15_N = mkN "serviço" ; --*
lin service_1_N = mkN "serviço" ; --*
lin service_1_V2 = variants {mkV2 (mkV "funcionar") ; mkV2 (mkV "servir") ; } ; --*
lin service_2_N = mkN "serviço" ; --*
lin service_3_N = variants {mkN "service" ; mkN "serviço" ; } ; --*
lin service_4_N = mkN "serviço" ; --*
lin service_5_N = mkN "serviço" ; --*
lin service_6_N = variants {mkN "service" ; mkN "serviço" ; } ; --*
lin service_8_N = mkN "assistência" ; --*
lin service_9_N = variants {mkN "service" ; mkN "serviço" ; } ; --*
lin serviceability_N = mkN "usabilidade" ; --*
lin serviceable_1_A = mkA "prestativo" ; --*
lin serviceman_N = variants {mkN "man" ; mkN "militar" ; mkN "personnel" ; } ; --*
lin serviette_N = variants {mkN "guardanapo" ; mkN "napkin" ; } ; --*
lin servile_1_A = mkA "servil" ; --*
lin servile_2_A = mkA "servil" ; --*
lin serving_1_N = mkN "porção" ; --*
lin serving_2_N = variants {mkN "citação" ; mkN "of" ; } ; --*
lin servitude_N = mkN "servidão" ; --*
lin servo_N = mkN "Servo" ; --*
lin sesame_N = variants {mkN "gergelim" ; mkN "indicum" ; } ; --*
lin sesotho_N = variants {mkN "sesotho" ; mkN "Sesotho" ; mkN "SeSotho" ; mkN "sessoto" ; } ; --*
lin sesquipedalian_2_A = mkA "polissílabo" ; --*
lin session_1_N = mkN "sessão" ; --*
lin session_2_N = variants {mkN "semestre" ; mkN "session" ; mkN "term" ; } ; --*
lin session_3_N = mkN "sessão" ; --*
lin sestet_1_N = variants {mkN "6" ; mkN "a" ; mkN "Hicks" ; } ; --*
lin set_10_N = mkN "Seth" ; --*
lin set_10_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "pôr") ; mkV2 (mkV "under") ; } ; --*
lin set_12_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "plantar") ; mkV2 (mkV "pôr") ; } ; --*
lin set_16_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin set_17_V2 = variants {mkV2 (mkV "escarear") ; mkV2 (mkV "pregar") ; } ; --*
lin set_1_N = variants {mkN "grupo" ; mkN "jogo" ; } ; --*
lin set_1_V2 = variants {mkV2 (mkV "botar") ; mkV2 (mkV "carregar") ; mkV2 (mkV "colocar") ; mkV2 (mkV "pôr") ; } ; --*
lin set_20_V2 = mkV2 (mkV "estimar") ; --*
lin set_22_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin set_23_V2 = variants {mkV2 (mkV "acertar") ; mkV2 (mkV "ajustar") ; mkV2 (mkV "corrigir") ; } ; --*
lin set_24_V2 = mkV2 (mkV "frutificar") ; --*
lin set_2_N = mkN "conjunto" ; --*
lin set_2_V2 = mkV2 (mkV "determinar") ; --*
lin set_3_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "especificar") ; } ; --*
lin set_4_N = variants {mkN "cenografia" ; mkN "set" ; } ; --*
lin set_5_N = variants {mkN "círculo" ; mkN "grupo" ; mkN "ordem" ; } ; --*
lin set_6_N = mkN "tendência" ; --*
lin set_7_V2 = variants {mkV2 (mkV "aprontar") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin set_8_N = mkN "partida" ; --*
lin set_9_N = mkN "endurecimento" ; --*
lin set_9_V2 = mkV2 (mkV "localizar") ; --*
lin set_about_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; } ; --*
lin set_about_2_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "empreender") ; } ; --*
lin set_about_3_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; mkV2 (mkV "down") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "out") ; mkV2 (mkV "principiar") ; } ; --*
lin set_apart_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "designar") ; mkV2 (mkV "especificar") ; } ; --*
lin set_apart_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "isolar") ; mkV2 (mkV "separar") ; } ; --*
lin set_aside_1_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "reservar") ; mkV2 (mkV "separar") ; } ; --*
lin set_aside_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "suspender") ; } ; --*
lin set_back_1_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin setback_N = variants {mkN "eye" ; mkN "revés" ; } ; --*
lin set_forth_1_V2 = variants {mkV2 (mkV "explicar") ; mkV2 (mkV "forth") ; } ; --*
lin set_forth_2_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin set_in_1_V = mkV "in" ; --*
lin set_in_2_V = mkV "in" ; --*
lin set_off_1_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin set_off_2_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin set_off_4_V = variants {mkV "detonar" ; mkV "off" ; mkV "up" ; } ; --*
lin set_off_5_V2 = variants {mkV2 (mkV "compensar") ; mkV2 (mkV "off") ; } ; --*
lin set_off_7_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "provocar") ; mkV2 (mkV "reptar") ; mkV2 (mkV "up") ; } ; --*
lin set_on_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "assaltar") ; mkV2 (mkV "atacar") ; mkV2 (mkV "on") ; } ; --*
lin set_out_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "começar") ; mkV2 (mkV "down") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "out") ; mkV2 (mkV "principiar") ; } ; --*
lin set_out_1_V = variants {mkV "about" ; mkV "começar" ; mkV "down" ; mkV "iniciar" ; mkV "out" ; mkV "principiar" ; } ; --*
lin set_out_2_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "ordenar") ; mkV2 (mkV "out") ; } ; --*
lin set_out_3_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin set_square_N = mkN "square" ; --*
lin setswana_N = variants {mkN "Língua" ; mkN "seTswana" ; } ; --*
lin settee_2_N = mkN "sofá" ; --*
lin setter_1_N = mkN "compositor" ; --*
lin setting_1_N = mkN "cenário" ; --*
lin setting_2_N = variants {mkN "âmbito" ; mkN "domínio" ; mkN "esfera" ; } ; --*
lin setting_3_N = variants {mkN "cenografia" ; mkN "en" ; mkN "setting" ; } ; --*
lin setting_4_N = variants {mkN "circunstância" ; mkN "contexto" ; } ; --*
lin settle_10_V2 = mkV2 (mkV "parar") ; --*
lin settle_10_V = mkV "parar" ; --*
lin settle_13_V = variants {mkV "concordar" ; mkV "firmar" ; } ; --*
lin settle_14_V2 = variants {mkV2 (mkV "alienar") ; mkV2 (mkV "dispor") ; } ; --*
lin settle_14_V = variants {mkV "alienar" ; mkV "dispor" ; } ; --*
lin settle_15_V = mkV "sedimentar" ; --*
lin settle_16_V2 = mkV2 (mkV "assentar") ; --*
lin settle_16_V = mkV "assentar" ; --*
lin settle_18_V2 = variants {mkV2 (mkV "assentar") ; mkV2 (mkV "instalar") ; } ; --*
lin settle_1_V = variants {mkV "acumular" ; mkV "down" ; } ; --*
lin settle_20_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "down") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin settle_21_V = variants {mkV "estabelecer" ; mkV "povoar" ; } ; --*
lin settle_22_V = variants {mkV "cair" ; mkV "descer" ; } ; --*
lin settle_2_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "decidir") ; mkV2 (mkV "resolver") ; } ; --*
lin settle_2_V = variants {mkV "concluir" ; mkV "decidir" ; mkV "resolver" ; } ; --*
lin settle_3_V2 = variants {mkV2 (mkV "decidir") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin settle_5_V = variants {mkV "conciliar" ; mkV "reconciliar" ; mkV "up" ; } ; --*
lin settle_6_V = variants {mkV "down" ; mkV "naufragar" ; mkV "under" ; } ; --*
lin settle_7_V = variants {mkV "acomodar" ; mkV "down" ; mkV "enraizar" ; mkV "root" ; } ; --*
lin settle_9_V2 = mkV2 (mkV "estabelecer") ; --*
lin settle_down_3_V = variants {mkV "acalmar-se" ; mkV "down" ; mkV "it" ; mkV "off" ; mkV "out" ; } ; --*
lin settlement_1_N = variants {mkN "assentamento" ; mkN "colônia" ; } ; --*
lin settlement_2_N = variants {mkN "povoado" ; mkN "town" ; mkN "vila" ; } ; --*
lin settlement_4_N = mkN "colonização" ; --*
lin settlement_5_N = mkN "resolução" ; --*
lin settlement_6_N = variants {mkN "localidade" ; mkN "vila" ; } ; --*
lin settler_1_N = variants {mkN "colona" ; mkN "colonato" ; mkN "colono" ; } ; --*
lin settling_N = mkN "subsidência" ; --*
lin sett_N = variants {mkN "calçamento" ; mkN "paralelepípedo" ; } ; --*
lin set_to_N = mkN "luta" ; --*
lin set_up_10_V2 = variants {mkV2 (mkV "instalar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_12_V2 = variants {mkV2 (mkV "armar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_13_V2 = variants {mkV2 (mkV "organizar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_15_V2 = variants {mkV2 (mkV "aprontar") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_1_N = variants {mkN "aparato" ; mkN "aparelho" ; mkN "equipamento" ; } ; --*
lin set_up_1_V2 = variants {mkV2 (mkV "estabelecer") ; mkV2 (mkV "up") ; } ; --*
lin set_up_2_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "montar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin set_up_3_V2 = variants {mkV2 (mkV "construir") ; mkV2 (mkV "erigir") ; mkV2 (mkV "up") ; } ; --*
lin set_up_4_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "preparar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_5_V2 = variants {mkV2 (mkV "arranjar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_7_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_8_V2 = variants {mkV2 (mkV "efetuar") ; mkV2 (mkV "provocar") ; mkV2 (mkV "up") ; } ; --*
lin set_up_9_V2 = variants {mkV2 (mkV "colocar") ; mkV2 (mkV "in") ; mkV2 (mkV "instalar") ; mkV2 (mkV "up") ; } ; --*
lin set_upon_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "upon") ; } ; --*
lin set_up_V2V = variants {mkV2V (mkV "organizar") ; mkV2V (mkV "up") ; } ; --*
lin sever_1_V2 = variants {mkV2 (mkV "apartar") ; mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; mkV2 (mkV "separar-se") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin sever_2_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "decepar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "separar") ; } ; --*
lin severally_1_Adv = mkAdv "independentemente" ; --*
lin severally_2_Adv = variants {mkAdv "à" ; mkAdv "an" ; mkAdv "by" ; mkAdv "em" ; mkAdv "individualmente" ; } ; --*
lin severally_3_Adv = mkAdv "respectivamente" ; --*
lin severance_1_N = variants {mkN "out" ; mkN "rompimento" ; } ; --*
lin severe_1_A = variants {mkA "horrível" ; mkA "severo" ; mkA "terrível" ; } ; --*
lin severe_3_A = mkA "austero" ; --*
lin severe_4_A = mkA "rigoroso" ; --*
lin severe_5_A = variants {mkA "grave" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin severity_1_N = variants {mkN "seriedade" ; mkN "severidade" ; } ; --*
lin severity_2_N = mkN "rigor" ; --*
lin severity_4_N = variants {mkN "dureza" ; mkN "rigor" ; } ; --*
lin seville_PN = mkPN "Sevilha" ; --*
lin sew_1_V2 = variants {mkV2 (mkV "bordar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin sew_1_V = variants {mkV "bordar" ; mkV "together" ; mkV "up" ; } ; --*
lin sew_2_V2 = variants {mkV2 (mkV "confeccionar") ; mkV2 (mkV "coser") ; mkV2 (mkV "costurar") ; } ; --*
lin sewage_farm_N = mkN "farm" ; --*
lin sewage_N = mkN "esgoto" ; --*
lin sewer_1_N = variants {mkN "esgoto" ; mkN "rede" ; } ; --*
lin sewerage_1_N = mkN "esgoto" ; --*
lin sewerage_2_N = variants {mkN "esgoto" ; mkN "rede" ; } ; --*
lin sewing_2_N = mkN "costura" ; --*
lin sewing_machine_N = mkN "machine" ; --*
lin sex_1_N = variants {mkN "activity" ; mkN "practice" ; mkN "sexo" ; } ; --*
lin sex_1_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin sex_2_N = mkN "sexo" ; --*
lin sex_3_N = variants {mkN "sexo" ; mkN "transa" ; mkN "urge" ; } ; --*
lin sex_4_N = variants {mkN "gênero" ; mkN "sexo" ; mkN "sexualidade" ; } ; --*
lin sexagenarian_N = mkN "sexagenário" ; --*
lin sexagesimal_A = mkA "sexagesimal" ; --*
lin sexism_N = variants {mkN "sexismo" ; mkN "Sexismo" ; } ; --*
lin sexist_N = variants {mkN "chauvinist" ; mkN "machista" ; } ; --*
lin sextant_1_N = mkN "sextante" ; --*
lin sextant_2_N = mkN "sextante" ; --*
lin sextet_2_N = variants {mkN "6" ; mkN "a" ; mkN "Hicks" ; } ; --*
lin sextet_5_N = mkN "sexteto" ; --*
lin sextette_3_N = mkN "sexteto" ; --*
lin sexton_1_N = variants {mkN "Anne" ; mkN "Sexton" ; } ; --*
lin sexton_2_N = mkN "sacristão" ; --*
lin sexual_1_A = mkA "sexual" ; --*
lin sexual_2_A = mkA "sexual" ; --*
lin sexual_3_A = mkA "sexual" ; --*
lin sexuality_N = variants {mkN "gênero" ; mkN "sexo" ; mkN "sexualidade" ; } ; --*
lin sex_up_V2 = variants {mkV2 (mkV "erotizar") ; mkV2 (mkV "up") ; } ; --*
lin sexy_1_A = variants {mkA "sensual" ; mkA "sexy" ; } ; --*
lin seychelles_1_PN = variants {mkPN "of" ; mkPN "Seychelles" ; } ; --*
lin seychelles_2_PN = variants {mkPN "islands" ; mkPN "Seychelles" ; } ; --*
lin seychellois_A = variants {mkA "seichelense" ; mkA "seychellense" ; } ; --*
lin shabbiness_2_N = mkN "injustiça" ; --*
lin shack_1_V = variants {mkV "domiciliar" ; mkV "habitar" ; mkV "morar" ; } ; --*
lin shackle_1_N = variants {mkN "algema" ; mkN "cadeia" ; mkN "grilhão" ; } ; --*
lin shackle_2_N = mkN "manilha" ; --*
lin shackle_2_V2 = variants {mkV2 (mkV "acorrentar") ; mkV2 (mkV "agrilhoar") ; mkV2 (mkV "algemar") ; } ; --*
lin shack_N = variants {mkN "barraco" ; mkN "cabana" ; mkN "casebre" ; mkN "choça" ; mkN "choupana" ; } ; --*
lin shack_up_V = variants {mkV "coabitar" ; mkV "together" ; mkV "up" ; } ; --*
lin shad_1_N = mkN "sável" ; --*
lin shad_2_N = mkN "sável" ; --*
lin shaddock_1_N = variants {mkN "decumana" ; mkN "grandis" ; mkN "maxima" ; mkN "pomelo" ; mkN "tree" ; } ; --*
lin shaddock_2_N = mkN "pomelo" ; --*
lin shade_1_N = mkN "sombra" ; --*
lin shade_2_N = variants {mkN "matiz" ; mkN "tintura" ; mkN "tom" ; } ; --*
lin shade_2_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "sombrear") ; } ; --*
lin shade_2_V = variants {mkV "in" ; mkV "sombrear" ; } ; --*
lin shade_4_N = mkN "matiz" ; --*
lin shade_7_N = variants {mkN "espectro" ; mkN "fantasma" ; mkN "sombra" ; } ; --*
lin shade_9_N = variants {mkN "abajur" ; mkN "shade" ; } ; --*
lin shadiness_1_N = mkN "sombra" ; --*
lin shadow_1_N = mkN "sombra" ; --*
lin shadow_2_N = variants {mkN "escuridão" ; mkN "sombra" ; } ; --*
lin shadow_3_N = variants {mkN "aparição" ; mkN "fantasma" ; } ; --*
lin shadow_5_N = variants {mkN "vestígio" ; mkN "vestígios" ; } ; --*
lin shadow_9_N = variants {mkN "sombra" ; mkN "Sombra" ; } ; --*
lin shadowy_1_A = variants {mkA "sombreado" ; mkA "sombrio" ; } ; --*
lin shady_2_A = variants {mkA "desconfiado" ; mkA "duvidoso" ; mkA "suspeito" ; } ; --*
lin shady_4_A = variants {mkA "sombreado" ; mkA "sombrio" ; } ; --*
lin shaft_10_N = variants {mkN "chaminé" ; mkN "poço" ; } ; --*
lin shaft_12_N = mkN "raque" ; --*
lin shaft_1_N = variants {mkN "cabo" ; mkN "haste" ; } ; --*
lin shaft_3_N = variants {mkN "cabo" ; mkN "haste" ; mkN "vara" ; } ; --*
lin shaft_4_N = variants {mkN "beam" ; mkN "feixe" ; mkN "of" ; mkN "raio" ; } ; --*
lin shaft_5_N = mkN "diáfise" ; --*
lin shaft_6_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin shaft_7_N = mkN "lança" ; --*
lin shag_4_N = variants {mkN "coito" ; mkN "cópula" ; mkN "foda" ; mkN "in" ; mkN "metida" ; mkN "of" ; mkN "sexo" ; mkN "trepada" ; } ; --*
lin shaggy_1_A = variants {mkA "peludo" ; mkA "piloso" ; mkA "viloso" ; } ; --*
lin shag_V2 = mkV2 (mkV "transar") ; --*
lin shag_V = mkV "transar" ; --*
lin shah_N = variants {mkN "of" ; mkN "xá" ; } ; --*
lin shake_1_N = variants {mkN "tabuinha" ; mkN "telha" ; } ; --*
lin shake_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "sacudir") ; mkV2 (mkV "tremer") ; } ; --*
lin shake_2_N = variants {mkN "batida" ; mkN "milkshake" ; mkN "shake" ; } ; --*
lin shake_2_V = variants {mkV "estremecer" ; mkV "sacudir" ; mkV "tremer" ; } ; --*
lin shake_3_N = mkN "trilo" ; --*
lin shake_4_N = variants {mkN "aperto" ; mkN "handshake" ; } ; --*
lin shake_4_V2 = variants {mkV2 (mkV "balançar") ; mkV2 (mkV "embalar") ; mkV2 (mkV "sacudir") ; } ; --*
lin shake_4_V = variants {mkV "balançar" ; mkV "embalar" ; mkV "sacudir" ; } ; --*
lin shake_5_N = mkN "trema" ; --*
lin shake_6_N = variants {mkN "agitação" ; mkN "sacolejo" ; } ; --*
lin shake_6_V2 = variants {mkV2 (mkV "comover") ; mkV2 (mkV "up") ; } ; --*
lin shake_7_V2 = variants {mkV2 (mkV "escapar") ; mkV2 (mkV "from") ; mkV2 (mkV "off") ; } ; --*
lin shake_off_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin shaker_1_N = variants {mkN "and" ; mkN "manda-chuva" ; } ; --*
lin shaker_3_N = mkN "chocalho" ; --*
lin shake_up_1_N = variants {mkN "reestruturação" ; mkN "remodelagem" ; mkN "reorganização" ; mkN "restruturação" ; } ; --*
lin shake_up_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "around") ; mkV2 (mkV "up") ; } ; --*
lin shake_up_2_V2 = variants {mkV2 (mkV "reorganizar") ; mkV2 (mkV "up") ; } ; --*
lin shake_up_3_V2 = variants {mkV2 (mkV "sacudir") ; mkV2 (mkV "up") ; } ; --*
lin shake_up_5_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "up") ; } ; --*
lin shakiness_1_N = variants {mkN "palpitação" ; mkN "tremor" ; mkN "trêmulo" ; } ; --*
lin shaking_2_N = variants {mkN "palpitação" ; mkN "tremor" ; mkN "trêmulo" ; } ; --*
lin shaky_2_A = mkA "trêmulo" ; --*
lin shaky_3_A = mkA "precário" ; --*
lin shale_N = variants {mkN "folhelho" ; mkN "xisto" ; } ; --*
lin shale_oil_N = mkN "oil" ; --*
lin shallot_1_N = variants {mkN "cebolinha" ; mkN "chalota" ; } ; --*
lin shallot_3_N = mkN "cebolinha" ; --*
lin shallow_1_A = variants {mkA "desinteressante" ; mkA "raso" ; } ; --*
lin shallow_2_A = mkA "superficial" ; --*
lin shallow_3_A = mkA "superficial" ; --*
lin shallow_N = variants {mkN "baixio" ; mkN "Barra" ; mkN "rasa" ; mkN "raso" ; } ; --*
lin sham_1_V2 = variants {mkV2 (mkV "fingir") ; mkV2 (mkV "simular") ; } ; --*
lin sham_2_N = variants {mkN "impostor" ; mkN "impostora" ; mkN "player" ; } ; --*
lin sham_2_V2 = variants {mkV2 (mkV "aparentar") ; mkV2 (mkV "fingir") ; mkV2 (mkV "pretextar") ; mkV2 (mkV "simular") ; } ; --*
lin sham_A = variants {mkA "assumido" ; mkA "fictício" ; mkA "on" ; mkA "pretendido" ; } ; --*
lin shamanism_1_N = variants {mkN "xamanismo" ; mkN "Xamanismo" ; } ; --*
lin shamanist_1_A = variants {mkA "xamânico" ; mkA "xamanista" ; mkA "xamanístico" ; } ; --*
lin shaman_N = mkN "xamã" ; --*
lin shambles_2_N = variants {mkN "abatedouro" ; mkN "matadouro" ; } ; --*
lin shamble_V = mkV "embaralhar" ; --*
lin shame_1_N = variants {mkN "cruzes" ; mkN "vergonha" ; } ; --*
lin shame_1_V2 = variants {mkV2 (mkV "desgraçar") ; mkV2 (mkV "desonrar") ; } ; --*
lin shame_2_N = variants {mkN "desgraça" ; mkN "ignomínia" ; mkN "vergonha" ; } ; --*
lin shame_2_V2 = mkV2 (mkV "envergonhar") ; --*
lin shame_3_N = variants {mkN "lástima" ; mkN "pena" ; } ; --*
lin shame_3_V2 = mkV2 (mkV "envergonhar") ; --*
lin shameful_1_A = variants {mkA "desgraçado" ; mkA "ignominioso" ; mkA "torpe" ; } ; --*
lin shameful_2_A = mkA "infamante" ; --*
lin shamefulness_N = mkN "vergonha" ; --*
lin shameless_A = variants {mkA "desavergonhado" ; mkA "descarado" ; mkA "impúdico" ; mkA "sem" ; } ; --*
lin shammy_1_N = variants {mkN "camurça" ; mkN "leather" ; } ; --*
lin shampoo_1_N = variants {mkN "champô" ; mkN "xampu" ; } ; --*
lin shampoo_2_N = variants {mkN "xampu" ; mkN "Xampus" ; } ; --*
lin shamrock_1_N = variants {mkN "clover" ; mkN "repens" ; mkN "trevo" ; } ; --*
lin shamrock_3_N = variants {mkN "clover" ; mkN "dubium" ; mkN "trevo" ; mkN "yellow" ; } ; --*
lin shanghai_PN = mkPN "Xangai" ; --*
lin shank_2_N = variants {mkN "canela" ; mkN "perna" ; } ; --*
lin shank_6_N = mkN "cintura" ; --*
lin shank_7_N = mkN "canela" ; --*
lin shanty_1_N = variants {mkN "barraco" ; mkN "cabana" ; mkN "casebre" ; mkN "choça" ; mkN "choupana" ; } ; --*
lin shantytown_N = variants {mkN "bairro" ; mkN "favela" ; mkN "musseque" ; } ; --*
lin shape_1_N = mkN "contorno" ; --*
lin shape_1_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "influenciar") ; mkV2 (mkV "moldar") ; } ; --*
lin shape_2_N = variants {mkN "forma" ; mkN "formato" ; } ; --*
lin shape_2_V2 = variants {mkV2 (mkV "formar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "moldar") ; } ; --*
lin shape_3_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin shape_3_V2 = mkV2 (mkV "formar") ; --*
lin shape_8_N = variants {mkN "forma" ; mkN "padrão" ; } ; --*
lin shapeless_1_A = variants {mkA "amórfico" ; mkA "amorfo" ; } ; --*
lin shaper_1_N = mkN "fazedor" ; --*
lin shape_up_V = variants {mkV "along" ; mkV "avançar" ; mkV "on" ; mkV "progredir" ; mkV "up" ; } ; --*
lin shaping_2_N = mkN "formação" ; --*
lin shard_1_N = variants {mkN "caco" ; mkN "fragmento" ; } ; --*
lin share_1_N = mkN "atribuição" ; --*
lin share_1_V2 = mkV2 (mkV "compartilhar") ; --*
lin share_2_N = mkN "ação" ; --*
lin share_2_V2 = variants {mkV2 (mkV "compartilhar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "partilhar") ; } ; --*
lin share_2_V = variants {mkV "compartilhar" ; mkV "dividir" ; mkV "partilhar" ; } ; --*
lin share_3_N = variants {mkN "parcela" ; mkN "parte" ; } ; --*
lin share_4_N = mkN "contribuição" ; --*
lin share_5_V2 = mkV2 (mkV "compartilhar") ; --*
lin sharecropper_N = variants {mkN "arrendatário" ; mkN "farmer" ; } ; --*
lin shared_1_A = mkA "partilhado" ; --*
lin shareholder_N = variants {mkN "accionista" ; mkN "acionista" ; } ; --*
lin share_out_N = variants {mkN "partição" ; mkN "partilha" ; } ; --*
lin shareware_N = mkN "shareware" ; --*
lin shariah_1_N = variants {mkN "charia" ; mkN "Chariá" ; mkN "law" ; } ; --*
lin sharing_3_N = mkN "comunhão" ; --*
lin sharing_4_N = variants {mkN "partição" ; mkN "partilha" ; } ; --*
lin shark_1_N = variants {mkN "tubarão" ; mkN "Tubarões" ; } ; --*
lin sharp_1_N = mkN "sustenido" ; --*
lin sharp_3_A = mkA "penetrante" ; --*
lin sharp_4_A = mkA "astuto" ; --*
lin sharp_6_A = variants {mkA "agudo" ; mkA "estridente" ; } ; --*
lin sharp_7_A = variants {mkA "abrupto" ; mkA "brusco" ; mkA "repentino" ; } ; --*
lin sharp_9_A = mkA "afiado" ; --*
lin sharpen_1_V2 = variants {mkV2 (mkV "afiar") ; mkV2 (mkV "amolar") ; } ; --*
lin sharpen_2_V2 = mkV2 (mkV "afiar") ; --*
lin sharpen_3_V = variants {mkV "acerar" ; mkV "afiar" ; } ; --*
lin sharpen_7_V2 = variants {mkV2 (mkV "afiar") ; mkV2 (mkV "apontar") ; } ; --*
lin sharpen_8_V2 = mkV2 (mkV "afiar") ; --*
lin sharp_set_A = variants {mkA "faminta" ; mkA "faminto" ; } ; --*
lin sharpshooter_2_N = variants {mkN "atirador" ; mkN "shot" ; } ; --*
lin shatter_1_V = variants {mkV "britar" ; mkV "destroçar" ; mkV "estilhaçar" ; } ; --*
lin shatter_3_V2 = mkV2 (mkV "quebrar") ; --*
lin shave_1_V2 = variants {mkV2 (mkV "barbear") ; mkV2 (mkV "barbear-se") ; mkV2 (mkV "raspar") ; } ; --*
lin shave_1_V = variants {mkV "barbear" ; mkV "barbear-se" ; mkV "raspar" ; } ; --*
lin shave_2_V2 = variants {mkV2 (mkV "barbear") ; mkV2 (mkV "recortar") ; } ; --*
lin shaver_2_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin shaver_3_N = variants {mkN "barbeador" ; mkN "razor" ; mkN "shaver" ; } ; --*
lin shawl_N = variants {mkN "chale" ; mkN "xaile" ; mkN "xale" ; } ; --*
lin shawm_N = mkN "charamela" ; --*
lin sheaf_N = variants {mkN "fardo" ; mkN "feixe" ; mkN "molho" ; mkN "pacote" ; mkN "penca" ; } ; --*
lin shear_1_V2 = variants {mkV2 (mkV "cisalhar") ; mkV2 (mkV "podar") ; mkV2 (mkV "tosar") ; } ; --*
lin shear_2_N = mkN "tesoura" ; --*
lin shear_3_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "tosquiar") ; } ; --*
lin shearer_1_N = variants {mkN "Moira" ; mkN "Shearer" ; } ; --*
lin sheath_3_N = variants {mkN "cocktail" ; mkN "dress" ; } ; --*
lin sheathing_N = mkN "folha" ; --*
lin shed_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin shed_2_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "verter") ; } ; --*
lin shed_3_V2 = mkV2 (mkV "verter") ; --*
lin shed_4_V2 = variants {mkV2 (mkV "depenar") ; mkV2 (mkV "desplumar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin shedding_2_N = mkN "descamação" ; --*
lin shed_N = mkN "celeiro" ; --*
lin sheen_N = variants {mkN "brilho" ; mkN "luzeiro" ; } ; --*
lin sheep_1_N = variants {mkN "carneiro" ; mkN "ovelha" ; mkN "ovinos" ; } ; --*
lin sheepherder_N = variants {mkN "pastor" ; mkN "Pastor" ; mkN "pegureiro" ; } ; --*
lin sheepman_2_N = variants {mkN "pastor" ; mkN "Pastor" ; mkN "pegureiro" ; } ; --*
lin sheepshank_N = mkN "Nó" ; --*
lin sheepshead_N = variants {mkN "probatocephalus" ; mkN "Sargo" ; } ; --*
lin sheepskin_2_N = variants {mkN "pergaminho" ; mkN "Pergaminho" ; } ; --*
lin sheepskin_3_N = variants {mkN "auto" ; mkN "diploma" ; mkN "escritura" ; } ; --*
lin sheer_1_A = variants {mkA "absoluto" ; mkA "completo" ; mkA "total" ; } ; --*
lin sheer_1_Adv = mkAdv "perpendicularmente" ; --*
lin sheer_1_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin sheer_2_A = variants {mkA "pura" ; mkA "puro" ; } ; --*
lin sheer_3_A = mkA "perpendicular" ; --*
lin sheer_4_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin sheet_2_N = variants {mkN "folhas" ; mkN "of" ; mkN "papel" ; } ; --*
lin sheet_3_N = variants {mkN "Lençol" ; mkN "sheet" ; } ; --*
lin sheet_4_N = variants {mkN "plano" ; mkN "Plano" ; } ; --*
lin sheet_5_N = variants {mkN "tabloide" ; mkN "Tablóide" ; } ; --*
lin sheet_6_N = variants {mkN "chapa" ; mkN "placa" ; mkN "solid" ; } ; --*
lin sheet_7_N = variants {mkN "brandái" ; mkN "sheet" ; } ; --*
lin sheet_8_N = mkN "vela" ; --*
lin sheffield_PN = mkPN "Sheffield" ; --*
lin she_goat_N = variants {mkN "bode" ; mkN "cabra" ; } ; --*
lin sheik_1_N = variants {mkN "chief" ; mkN "sheik" ; mkN "sheikh" ; mkN "xeique" ; mkN "Xeque" ; } ; --*
lin sheik_2_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin sheikh_N = variants {mkN "chief" ; mkN "sheik" ; mkN "sheikh" ; mkN "xeique" ; mkN "Xeque" ; } ; --*
lin shekel_N = mkN "shekel" ; --*
lin shelf_1_N = variants {mkN "estante" ; mkN "prateleira" ; } ; --*
lin shell_10_N = variants {mkN "carapaça" ; mkN "concha" ; } ; --*
lin shell_1_N = mkN "munição" ; --*
lin shell_2_N = mkN "casca" ; --*
lin shell_2_V2 = variants {mkV2 (mkV "dinamitar") ; mkV2 (mkV "explodir") ; } ; --*
lin shell_3_N = variants {mkN "carapaça" ; mkN "concha" ; mkN "Cuticula" ; mkN "cutícula" ; } ; --*
lin shell_4_N = mkN "casca" ; --*
lin shell_5_N = mkN "casca" ; --*
lin shell_6_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "out") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin shell_8_N = variants {mkN "caixa" ; mkN "carcaça" ; } ; --*
lin shellac_2_N = variants {mkN "goma-laca" ; mkN "varnish" ; } ; --*
lin shellfish_2_N = variants {mkN "molusco" ; mkN "moluscos" ; } ; --*
lin shell_out_V2 = variants {mkV2 (mkV "conceder") ; mkV2 (mkV "lidar") ; mkV2 (mkV "out") ; } ; --*
lin shelter_1_N = variants {mkN "asilo" ; mkN "refúgio" ; } ; --*
lin shelter_2_N = variants {mkN "abrigo" ; mkN "asilo" ; mkN "refúgio" ; } ; --*
lin shelter_3_N = variants {mkN "abrigo" ; mkN "proteção" ; } ; --*
lin shelter_5_N = mkN "abrigo" ; --*
lin shelter_V2 = variants {mkV2 (mkV "abrigar") ; mkV2 (mkV "amparar") ; } ; --*
lin shelve_1_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin shepherd_1_N = mkN "pastor" ; --*
lin shepherd_1_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "guiar") ; } ; --*
lin shepherd_2_N = variants {mkN "pastor" ; mkN "Pastor" ; mkN "pegureiro" ; } ; --*
lin shepherdess_N = mkN "pastora" ; --*
lin sheriff_N = mkN "xerife" ; --*
lin shetland_1_PN = variants {mkPN "Ilhas" ; mkPN "Islands" ; mkPN "Shetland" ; } ; --*
lin shetland_2_PN = variants {mkPN "Pastor" ; mkPN "sheep" ; mkPN "sheepdog" ; } ; --*
lin shew_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "validar") ; } ; --*
lin shibboleth_1_N = variants {mkN "cambial" ; mkN "lema" ; mkN "Lemas" ; mkN "mote" ; } ; --*
lin shield_1_N = variants {mkN "amparo" ; mkN "escudo" ; mkN "protecção" ; } ; --*
lin shield_1_V2 = mkV2 (mkV "proteger") ; --*
lin shield_2_N = variants {mkN "broquel" ; mkN "escudo" ; mkN "Escudos" ; } ; --*
lin shield_3_N = variants {mkN "carapaça" ; mkN "concha" ; mkN "Cuticula" ; mkN "cutícula" ; } ; --*
lin shift_11_V = variants {mkV "mudar" ; mkV "trocar" ; } ; --*
lin shift_12_V = mkV "trocar" ; --*
lin shift_13_V2 = mkV2 (mkV "mudar") ; --*
lin shift_13_V = mkV "mudar" ; --*
lin shift_1_N = mkN "deslocamento" ; --*
lin shift_2_N = variants {mkN "mudança" ; mkN "transformação" ; mkN "transmutação" ; } ; --*
lin shift_2_V2 = mkV2 (mkV "deslocar") ; --*
lin shift_3_N = variants {mkN "period" ; mkN "shift" ; mkN "turno" ; } ; --*
lin shift_3_V = variants {mkV "transladar" ; mkV "transportar" ; mkV "trasladar" ; } ; --*
lin shift_4_N = mkN "troca" ; --*
lin shift_4_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; mkV2 (mkV "mexer") ; } ; --*
lin shift_4_V = variants {mkV "agitar" ; mkV "bater" ; mkV "mexer" ; } ; --*
lin shift_5_N = mkN "movimento" ; --*
lin shift_5_V2 = mkV2 (mkV "mudar") ; --*
lin shift_6_N = variants {mkN "falha" ; mkN "fault" ; } ; --*
lin shift_6_V = mkV "mudar" ; --*
lin shift_7_V2 = mkV2 (mkV "trocar") ; --*
lin shift_8_N = variants {mkN "key" ; mkN "tecla" ; } ; --*
lin shifty_1_A = mkA "desleal" ; --*
lin shiitake_N = variants {mkN "black" ; mkN "edodes" ; mkN "mushroom" ; mkN "oak" ; mkN "shiitake" ; } ; --*
lin shilling_2_N = variants {mkN "shilling" ; mkN "Xelim" ; } ; --*
lin shilling_4_N = variants {mkN "shilling" ; mkN "xelim" ; } ; --*
lin shilling_6_N = mkN "xelim" ; --*
lin shillyshally_2_V = variants {mkV "adiar" ; mkV "enrolar" ; mkV "one's" ; mkV "procrastinar" ; } ; --*
lin shillyshally_N = mkN "procrastinação" ; --*
lin shimmer_1_V = variants {mkV "cintilar" ; mkV "lucilar" ; mkV "luzir" ; mkV "tremeluzir" ; } ; --*
lin shin_1_N = mkN "canela" ; --*
lin shin_4_N = variants {mkN "bone" ; mkN "tíbia" ; } ; --*
lin shinbone_1_N = variants {mkN "bone" ; mkN "tíbia" ; } ; --*
lin shindig_N = mkN "festa" ; --*
lin shindy_N = mkN "festa" ; --*
lin shine_10_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; } ; --*
lin shine_1_V = variants {mkV "luzir" ; mkV "refletir" ; } ; --*
lin shine_2_V = variants {mkV "brilhar" ; mkV "luzir" ; mkV "resplandecer" ; } ; --*
lin shine_3_V = variants {mkV "cintilar" ; mkV "reluzir" ; } ; --*
lin shine_4_V = variants {mkV "abrilhantar" ; mkV "brilhar" ; mkV "fulgir" ; mkV "fulgurar" ; mkV "refulgir" ; } ; --*
lin shine_5_V = mkV "brilhar" ; --*
lin shine_6_V = mkV "brilhar" ; --*
lin shine_7_V2 = variants {mkV2 (mkV "direcionar") ; mkV2 (mkV "iluminar") ; } ; --*
lin shine_8_V = mkV "brilhar" ; --*
lin shine_9_V = variants {mkV "brilhar" ; mkV "radiar" ; } ; --*
lin shine_N = variants {mkN "brilho" ; mkN "luminosidade" ; mkN "Radiança" ; mkN "refulgência" ; } ; --*
lin shiner_1_N = variants {mkN "eye" ; mkN "olho" ; } ; --*
lin shingle_1_N = variants {mkN "tabuinha" ; mkN "telha" ; } ; --*
lin shingles_N = variants {mkN "cobrão" ; mkN "cobreiro" ; mkN "zona" ; mkN "zoster" ; } ; --*
lin shingle_V2 = variants {mkV2 (mkV "atelhar") ; mkV2 (mkV "entelhar") ; mkV2 (mkV "telhar") ; } ; --*
lin shininess_N = variants {mkN "brilho" ; mkN "luzeiro" ; } ; --*
lin shiny_1_A = variants {mkA "faiscante" ; mkA "reluzente" ; } ; --*
lin shiny_3_A = variants {mkA "brilhoso" ; mkA "faiscante" ; mkA "luminoso" ; mkA "reluzente" ; mkA "soalheiro" ; } ; --*
lin ship_1_V2 = variants {mkV2 (mkV "despachar") ; mkV2 (mkV "embarcar") ; mkV2 (mkV "enviar") ; mkV2 (mkV "expedir") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin ship_1_V = variants {mkV "despachar" ; mkV "embarcar" ; mkV "enviar" ; mkV "expedir" ; mkV "transportar" ; mkV "trazer" ; } ; --*
lin ship_3_V2 = variants {mkV2 (mkV "embarcar") ; mkV2 (mkV "embarcar-se") ; } ; --*
lin ship_3_V = variants {mkV "embarcar" ; mkV "embarcar-se" ; } ; --*
lin shipbuilding_1_N = variants {mkN "building" ; mkN "construção" ; } ; --*
lin shipment_1_N = mkN "carga" ; --*
lin shipment_2_N = variants {mkN "despacho" ; mkN "envio" ; mkN "expedição" ; } ; --*
lin ship_N = variants {mkN "barco" ; mkN "embarcação" ; mkN "navio" ; mkN "navios" ; } ; --*
lin shipowner_N = mkN "armador" ; --*
lin shipping_1_N = variants {mkN "expedição" ; mkN "transportação" ; mkN "transporte" ; } ; --*
lin shipping_2_N = variants {mkN "marine" ; mkN "navios" ; mkN "ships" ; mkN "vessels" ; } ; --*
lin shipworm_N = mkN "Teredo" ; --*
lin shipwreck_1_V = mkV "destruir" ; --*
lin shipwreck_3_N = mkN "naufrágio" ; --*
lin shipwreck_3_V = mkV "naufragar" ; --*
lin shipyard_N = variants {mkN "estaleiro" ; mkN "Estaleiros" ; } ; --*
lin shire_1_N = mkN "condado" ; --*
lin shirk_1_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evitar") ; mkV2 (mkV "from") ; } ; --*
lin shirk_2_V2 = mkV2 (mkV "esquivar") ; --*
lin shirker_N = mkN "Slacker" ; --*
lin shirt_N = mkN "camisa" ; --*
lin shish_kebab_N = mkN "kebab" ; --*
lin shit_1_N = variants {mkN "bosta" ; mkN "cagalhão" ; mkN "cocô" ; mkN "merda" ; mkN "tolete" ; } ; --*
lin shit_2_N = variants {mkN "besteira" ; mkN "bosta" ; mkN "bull" ; mkN "merda" ; } ; --*
lin shit_2_V = variants {mkV "a" ; mkV "cagar" ; mkV "defecar" ; } ; --*
lin shit_3_N = mkN "porcaria" ; --*
lin shit_4_N = mkN "merda" ; --*
lin shit_5_N = variants {mkN "filha" ; mkN "filho" ; mkN "fucker" ; mkN "of" ; } ; --*
lin shit_6_N = variants {mkN "cent" ; mkN "dam" ; mkN "damn" ; mkN "droga" ; mkN "merda" ; mkN "porcaria" ; } ; --*
lin shiva_1_N = variants {mkN "Shivá" ; mkN "Shiv'ah" ; } ; --*
lin shiva_2_N = mkN "Shiva" ; --*
lin shiver_1_N = mkN "trema" ; --*
lin shiver_1_V = variants {mkV "estremecer" ; mkV "tiritar" ; mkV "tremelicar" ; mkV "tremer" ; } ; --*
lin shiver_2_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin shiver_2_V = variants {mkV "tiritar" ; mkV "tremelicar" ; mkV "tremer" ; } ; --*
lin shivery_2_A = variants {mkA "assustador" ; mkA "terrível" ; } ; --*
lin shiv_N = mkN "Estoque" ; --*
lin shoal_1_N = mkN "banco" ; --*
lin shoal_2_N = variants {mkN "baixio" ; mkN "Barra" ; mkN "rasa" ; mkN "raso" ; } ; --*
lin shoal_3_N = mkN "Colégio" ; --*
lin shock_10_N = variants {mkN "absorber" ; mkN "amortecedor" ; } ; --*
lin shock_1_N = variants {mkN "choque" ; mkN "estupor" ; } ; --*
lin shock_1_V2 = variants {mkV2 (mkV "aback") ; mkV2 (mkV "estarrecer") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "pasmar") ; } ; --*
lin shock_2_N = mkN "choque" ; --*
lin shock_2_V2 = variants {mkV2 (mkV "chocar") ; mkV2 (mkV "escandalizar") ; mkV2 (mkV "horrorizar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "ultrajar") ; } ; --*
lin shock_3_N = variants {mkN "choque" ; mkN "shock" ; } ; --*
lin shock_3_V2 = mkV2 (mkV "chocar") ; --*
lin shock_9_N = mkN "sacudida" ; --*
lin shocked_A = variants {mkA "apavorado" ; mkA "aterrorizado" ; mkA "chocada" ; mkA "chocado" ; mkA "espantado" ; mkA "horrorizado" ; mkA "pasmado" ; mkA "pasmo" ; } ; --*
lin shocking_1_A = mkA "sensacional" ; --*
lin shocking_2_A = mkA "infamante" ; --*
lin shod_2_A = variants {mkA "calçada" ; mkA "calçado" ; } ; --*
lin shoddy_1_A = mkA "espalhafatoso" ; --*
lin shoe_1_N = variants {mkN "calçado" ; mkN "sapato" ; } ; --*
lin shoe_1_V2 = mkV2 (mkV "calçar") ; --*
lin shoe_3_N = mkN "ferradura" ; --*
lin shoe_4_N = variants {mkN "sapata" ; mkN "shoe" ; } ; --*
lin shoehorn_N = variants {mkN "calçadeira" ; mkN "Calçadeira" ; } ; --*
lin shoehorn_V2 = variants {mkV2 (mkV "calçadeira") ; mkV2 (mkV "calçar") ; mkV2 (mkV "com") ; } ; --*
lin shoelace_1_N = variants {mkN "cadarço" ; mkN "cordão" ; mkN "lace" ; mkN "string" ; } ; --*
lin shoemaker_N = variants {mkN "sapateira" ; mkN "sapateiro" ; } ; --*
lin shoemaking_N = variants {mkN "repairing" ; mkN "sapataria" ; mkN "sapateiro" ; } ; --*
lin shoeshine_2_N = mkN "engraxate" ; --*
lin shoestring_1_N = variants {mkN "cadarço" ; mkN "cordão" ; mkN "lace" ; mkN "string" ; } ; --*
lin shofar_1_N = mkN "shofar" ; --*
lin shogi_N = mkN "Shogi" ; --*
lin shogun_N = variants {mkN "Shogun" ; mkN "Shōgun" ; mkN "xogum" ; mkN "Xógum" ; mkN "Xoguns" ; } ; --*
lin shoot_10_V2 = variants {mkV2 (mkV "disparar") ; mkV2 (mkV "expelir") ; } ; --*
lin shoot_14_V2 = mkV2 (mkV "rolar") ; --*
lin shoot_14_V = mkV "rolar" ; --*
lin shoot_15_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desperdiçar") ; } ; --*
lin shoot_18_V2 = mkV2 (mkV "medir") ; --*
lin shoot_19_V = variants {mkV "forth" ; mkV "germinar" ; } ; --*
lin shoot_1_N = mkN "broto" ; --*
lin shoot_1_V2 = mkV2 (mkV "atirar") ; --*
lin shoot_20_V2 = variants {mkV2 (mkV "injectar") ; mkV2 (mkV "injetar") ; } ; --*
lin shoot_3_V = variants {mkV "atirar" ; mkV "disparar" ; } ; --*
lin shoot_4_V2 = mkV2 (mkV "filmar") ; --*
lin shoot_9_V2 = variants {mkV2 (mkV "fotografar") ; mkV2 (mkV "tirar") ; } ; --*
lin shooter_2_N = mkN "arqueiro" ; --*
lin shooter_5_N = variants {mkN "Assassinato" ; mkN "assassino" ; mkN "for" ; mkN "gun" ; mkN "man" ; mkN "pistoleiro" ; mkN "sicário" ; } ; --*
lin shoot_for_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "almejar") ; mkV2 (mkV "aspirar") ; mkV2 (mkV "for") ; } ; --*
lin shooting_1_N = variants {mkN "pontaria" ; mkN "tiro" ; } ; --*
lin shooting_gallery_2_N = variants {mkN "gallery" ; mkN "range" ; } ; --*
lin shooting_range_N = variants {mkN "gallery" ; mkN "range" ; } ; --*
lin shootout_N = mkN "tiroteio" ; --*
lin shoo_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; mkV2 (mkV "tanger") ; } ; --*
lin shoo_V = variants {mkV "away" ; mkV "off" ; mkV "tanger" ; } ; --*
lin shop_1_N = variants {mkN "loja" ; mkN "lojas" ; } ; --*
lin shop_1_V = mkV "ir" ; --*
lin shop_2_N = mkN "oficina" ; --*
lin shop_2_V = variants {mkV "at" ; mkV "patrocinar" ; } ; --*
lin shop_3_V = mkV "ir" ; --*
lin shop_assistant_N = variants {mkN "assistant" ; mkN "clerk" ; mkN "empregado" ; } ; --*
lin shopkeeper_N = variants {mkN "comerciante" ; mkN "keeper" ; mkN "lojista" ; } ; --*
lin shopperFem_1_N = variants {mkN "comprador" ; mkN "consumidor" ; } ; --*
lin shopperMasc_1_N = variants {mkN "comprador" ; mkN "consumidor" ; } ; --*
lin shopping_1_N = variants {mkN "compras" ; mkN "procura" ; } ; --*
lin shopwindow_1_N = variants {mkN "montra" ; mkN "window" ; } ; --*
lin shopworn_2_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin shore_1_N = variants {mkN "costa" ; mkN "litoral" ; mkN "margem" ; mkN "orla" ; mkN "praia" ; mkN "ribanceira" ; } ; --*
lin shore_1_V2 = mkV2 (mkV "margear") ; --*
lin shore_2_V2 = variants {mkV2 (mkV "ashore") ; mkV2 (mkV "atracar") ; } ; --*
lin shore_3_V2 = variants {mkV2 (mkV "escorar") ; mkV2 (mkV "up") ; } ; --*
lin shore_up_V2 = variants {mkV2 (mkV "escorar") ; mkV2 (mkV "up") ; } ; --*
lin short_11_A = variants {mkA "brusca" ; mkA "brusco" ; } ; --*
lin short_1_A = mkA "curto" ; --*
lin short_1_Adv = variants {mkAdv "abruptamente" ; mkAdv "de" ; mkAdv "precipitadamente" ; mkAdv "repentinamente" ; mkAdv "subitamente" ; } ; --*
lin short_2_A = mkA "curto" ; --*
lin short_2_N = variants {mkN "circuit" ; mkN "curto-circuito" ; } ; --*
lin short_2_V2 = mkV2 (mkV "atalhar") ; --*
lin short_2_V = mkV "atalhar" ; --*
lin short_3_A = mkA "baixo" ; --*
lin short_4_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin short_5_A = mkA "desconsiderado" ; --*
lin short_7_Adv = mkAdv "brevemente" ; --*
lin shortage_1_N = variants {mkN "carência" ; mkN "deficiência" ; mkN "deficit" ; } ; --*
lin shortage_2_N = variants {mkN "carência" ; mkN "escassez" ; mkN "falta" ; mkN "fome" ; mkN "grande" ; mkN "penúria" ; } ; --*
lin short_change_2_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin short_circuit_2_V2 = mkV2 (mkV "atalhar") ; --*
lin short_circuit_2_V = mkV "atalhar" ; --*
lin short_circuit_3_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "contornar") ; } ; --*
lin shortcoming_N = variants {mkN "carência" ; mkN "defeito" ; mkN "deficiência" ; mkN "limitação" ; } ; --*
lin shortcut_N = variants {mkN "atalho" ; mkN "tecla" ; } ; --*
lin shorten_1_V2 = variants {mkV2 (mkV "encolher") ; mkV2 (mkV "encurtar") ; } ; --*
lin shorten_2_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "condensar") ; mkV2 (mkV "encurtar") ; mkV2 (mkV "resumir") ; } ; --*
lin shorten_5_V2 = variants {mkV2 (mkV "abreviar") ; mkV2 (mkV "expurgar") ; } ; --*
lin shortening_2_N = variants {mkN "abreviatura" ; mkN "encurtamento" ; } ; --*
lin shortfall_N = variants {mkN "carência" ; mkN "deficiência" ; mkN "deficit" ; } ; --*
lin shorthand_N = variants {mkN "estenografia" ; mkN "Estenografia" ; mkN "taquigrafia" ; } ; --*
lin short_lived_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "passageiro" ; mkA "temporário" ; mkA "transitório" ; } ; --*
lin short_sighted_2_A = mkA "míope" ; --*
lin shortstop_1_N = mkN "interbases" ; --*
lin short_tempered_A = mkA "colérico" ; --*
lin short_term_A = mkA "curto" ; --*
lin shot_10_N = variants {mkN "conjetura" ; mkN "reckoning" ; } ; --*
lin shot_11_N = variants {mkN "foto" ; mkN "fotografia" ; } ; --*
lin shot_12_N = mkN "peso" ; --*
lin shot_16_N = variants {mkN "chute" ; mkN "tacada" ; } ; --*
lin shot_1_N = variants {mkN "pontaria" ; mkN "tiro" ; } ; --*
lin shot_3_N = mkN "tacada" ; --*
lin shot_5_N = mkN "arqueiro" ; --*
lin shot_6_N = mkN "plano" ; --*
lin shot_7_N = mkN "injeção" ; --*
lin shot_8_N = mkN "dose" ; --*
lin shotgun_N = variants {mkN "caçadeira" ; mkN "Caçadeira" ; mkN "escopeta" ; mkN "espingarda" ; } ; --*
lin shot_put_N = mkN "put" ; --*
lin shoulder_1_N = mkN "ombro" ; --*
lin shoulder_3_N = variants {mkN "humeri" ; mkN "joint" ; mkN "ombro" ; } ; --*
lin shoulder_5_N = variants {mkN "acostamento" ; mkN "berma" ; } ; --*
lin shoulder_blade_N = variants {mkN "blade" ; mkN "bone" ; mkN "escápula" ; } ; --*
lin shoulder_strap_N = variants {mkN "alcinha" ; mkN "strap" ; } ; --*
lin shout_1_V = variants {mkV "berrar" ; mkV "gritar" ; } ; --*
lin shout_2_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin shout_3_V = variants {mkV "berrar" ; mkV "exclamar" ; mkV "gritar" ; mkV "out" ; } ; --*
lin shout_at_V2 = variants {mkV2 (mkV "injuriar") ; mkV2 (mkV "insultar") ; } ; --*
lin shout_N = variants {mkN "brado" ; mkN "chamada" ; mkN "grito" ; } ; --*
lin shout_out_1_V2 = variants {mkV2 (mkV "berrar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "mugir") ; mkV2 (mkV "out") ; mkV2 (mkV "urrar") ; mkV2 (mkV "vociferar") ; } ; --*
lin shout_V2 = variants {mkV2 (mkV "berrar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "mugir") ; mkV2 (mkV "out") ; mkV2 (mkV "urrar") ; mkV2 (mkV "vociferar") ; } ; --*
lin shove_1_V2 = variants {mkV2 (mkV "acotovelar") ; mkV2 (mkV "empurrar") ; mkV2 (mkV "sacudir") ; } ; --*
lin shove_2_V = mkV "empurrar" ; --*
lin shove_3_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "enfiar") ; } ; --*
lin shovel_1_N = mkN "pá" ; --*
lin shovel_2_N = mkN "paletada" ; --*
lin shovel_3_N = mkN "pá" ; --*
lin shovel_4_N = variants {mkN "Escavadeira" ; mkN "escavadora" ; mkN "shovel" ; } ; --*
lin shovelful_N = mkN "paletada" ; --*
lin shovel_V2 = mkV2 (mkV "cavar") ; --*
lin show_11_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "guiar") ; } ; --*
lin show_1_N = variants {mkN "apresentação" ; mkN "exibição" ; } ; --*
lin show_1_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "manifestar") ; mkV2 (mkV "mostrar") ; } ; --*
lin show_2_V2 = variants {mkV2 (mkV "demonstrar") ; mkV2 (mkV "validar") ; } ; --*
lin show_3_N = variants {mkN "espectáculo" ; mkN "show" ; } ; --*
lin show_3_VS = variants {mkVS (mkV "atestar") ; mkVS (mkV "provar") ; mkVS (mkV "witness") ; } ; --*
lin show_4_N = mkN "aparência" ; --*
lin show_4_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "mostrar") ; } ; --*
lin show_6_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "mostrar") ; } ; --*
lin show_7_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "indicar") ; mkV2 (mkV "mostrar") ; } ; --*
lin show_8_V = variants {mkV "ressaltar" ; mkV "up" ; } ; --*
lin show_9_V2 = variants {mkV2 (mkV "cadastrar") ; mkV2 (mkV "ler") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "registrar") ; } ; --*
lin showcase_2_N = variants {mkN "case" ; mkN "mostrador" ; mkN "vitrina" ; mkN "vitrine" ; } ; --*
lin showdown_N = mkN "enfrentamento" ; --*
lin shower_1_N = variants {mkN "ducha" ; mkN "duche" ; } ; --*
lin shower_1_V2 = mkV2 (mkV "esbanjar") ; --*
lin shower_2_N = variants {mkN "bath" ; mkN "chuveiro" ; } ; --*
lin shower_3_N = variants {mkN "garoa" ; mkN "shower" ; } ; --*
lin shower_4_V = variants {mkV "chover" ; mkV "down" ; } ; --*
lin shower_5_V2 = mkV2 (mkV "regar") ; --*
lin shower_bath_2_N = variants {mkN "bath" ; mkN "chuveiro" ; } ; --*
lin shower_down_V = variants {mkV "chover" ; mkV "down" ; } ; --*
lin showerhead_N = mkN "chuveiro" ; --*
lin showery_A = variants {mkA "chuvoso" ; mkA "pluvioso" ; } ; --*
lin showing_2_N = variants {mkN "exibição" ; mkN "exposição" ; } ; --*
lin showman_2_N = variants {mkN "divulgador" ; mkN "empresário" ; mkN "promoter" ; } ; --*
lin show_off_1_V2 = variants {mkV2 (mkV "empavonar") ; mkV2 (mkV "off") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "pavonear") ; mkV2 (mkV "pavonear-se") ; } ; --*
lin show_up_1_V = variants {mkV "aparecer" ; mkV "on" ; mkV "out" ; mkV "up" ; } ; --*
lin show_window_2_N = variants {mkN "montra" ; mkN "window" ; } ; --*
lin showy_3_A = mkA "vistoso" ; --*
lin shrapnel_N = variants {mkN "estilhaço" ; mkN "schrapnell" ; } ; --*
lin shred_1_N = variants {mkN "fragmento" ; mkN "pingo" ; mkN "pouco" ; } ; --*
lin shred_2_N = variants {mkN "end" ; mkN "farrapo" ; mkN "rasgo" ; mkN "trapo" ; } ; --*
lin shredder_N = mkN "triturador" ; --*
lin shred_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "up") ; } ; --*
lin shrew_1_N = mkN "megera" ; --*
lin shrew_2_N = variants {mkN "musaranho" ; mkN "Soricidae" ; } ; --*
lin shrewd_1_A = mkA "astuto" ; --*
lin shrewdness_N = variants {mkN "astúcia" ; mkN "astucidade" ; mkN "sagacidade" ; } ; --*
lin shrewish_A = variants {mkA "megera" ; mkA "perversa" ; } ; --*
lin shrew_mouse_N = variants {mkN "musaranho" ; mkN "Soricidae" ; } ; --*
lin shriek_1_N = variants {mkN "gritar" ; mkN "grito" ; } ; --*
lin shriek_V2 = variants {mkV2 (mkV "esganiçar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "up") ; } ; --*
lin shriek_V = variants {mkV "esganiçar" ; mkV "gritar" ; mkV "up" ; } ; --*
lin shrike_N = mkN "picanço" ; --*
lin shrill_1_A = variants {mkA "agudo" ; mkA "estridente" ; } ; --*
lin shrill_2_A = mkA "estridente" ; --*
lin shrill_V2 = variants {mkV2 (mkV "esganiçar") ; mkV2 (mkV "gritar") ; mkV2 (mkV "up") ; } ; --*
lin shrill_V = variants {mkV "esganiçar" ; mkV "gritar" ; mkV "up" ; } ; --*
lin shrimp_2_N = variants {mkN "camarão" ; mkN "Camarão" ; mkN "Caridea" ; } ; --*
lin shrine_N = variants {mkN "relicário" ; mkN "santário" ; mkN "santuário" ; mkN "Santuários" ; } ; --*
lin shrine_V2 = mkV2 (mkV "consacrar") ; --*
lin shrink_1_V2 = variants {mkV2 (mkV "enrugar") ; mkV2 (mkV "murchar") ; mkV2 (mkV "up") ; } ; --*
lin shrink_1_V = variants {mkV "enrugar" ; mkV "murchar" ; mkV "up" ; } ; --*
lin shrink_2_V = mkV "recuar" ; --*
lin shrink_3_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "ficar") ; mkV2 (mkV "reduzir") ; } ; --*
lin shrink_4_V = variants {mkV "contrair" ; mkV "contrair-se" ; mkV "encolher" ; mkV "murchar" ; } ; --*
lin shrink_5_V = mkV "encolher" ; --*
lin shrink_N = variants {mkN "encolhimento" ; mkN "psiquiatra" ; } ; --*
lin shrivel_1_V2 = variants {mkV2 (mkV "enrugar") ; mkV2 (mkV "murchar") ; mkV2 (mkV "up") ; } ; --*
lin shrivel_1_V = variants {mkV "enrugar" ; mkV "murchar" ; mkV "up" ; } ; --*
lin shrivel_2_V = mkV "encolher" ; --*
lin shriveled_3_A = mkA "reduzido" ; --*
lin shrive_V2 = mkV2 (mkV "absolver") ; --*
lin shroud_1_V2 = variants {mkV2 (mkV "encobrir") ; mkV2 (mkV "envolver") ; } ; --*
lin shroud_2_N = variants {mkN "brandái" ; mkN "sheet" ; } ; --*
lin shroud_2_V2 = mkV2 (mkV "encobrir") ; --*
lin shroud_3_N = variants {mkN "mortalha" ; mkN "sudário" ; mkN "Sudário" ; } ; --*
lin shroud_3_V2 = mkV2 (mkV "amortalhar") ; --*
lin shrub_N = variants {mkN "arbusto" ; mkN "arbustos" ; mkN "arvoreta" ; mkN "mato" ; mkN "moita" ; } ; --*
lin shrug_N = mkN "dar" ; --*
lin shrug_V2 = mkV2 (mkV "dar") ; --*
lin shuck_N = mkN "palha" ; --*
lin shudder_1_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin shudder_1_V = variants {mkV "tiritar" ; mkV "tremelicar" ; mkV "tremer" ; } ; --*
lin shudder_2_N = mkN "tremor" ; --*
lin shudder_2_V = variants {mkV "estremecer" ; mkV "tiritar" ; mkV "tremelicar" ; mkV "tremer" ; } ; --*
lin shuffle_1_N = mkN "embaralhar" ; --*
lin shuffle_1_V = mkV "embaralhar" ; --*
lin shuffle_3_V2 = variants {mkV2 (mkV "baralhar") ; mkV2 (mkV "embaralhar") ; mkV2 (mkV "misturar") ; } ; --*
lin shun_1_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "renegar") ; } ; --*
lin shun_2_V2 = variants {mkV2 (mkV "banir") ; mkV2 (mkV "escorraçar") ; mkV2 (mkV "ostracizar") ; mkV2 (mkV "out") ; } ; --*
lin shut_1_V2 = variants {mkV2 (mkV "cerrar") ; mkV2 (mkV "fechar") ; } ; --*
lin shut_2_V2 = mkV2 (mkV "fechar") ; --*
lin shutdown_N = variants {mkN "encerramento" ; mkN "fechamento" ; } ; --*
lin shut_down_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "fechar") ; mkV2 (mkV "up") ; } ; --*
lin shut_out_V2 = variants {mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin shutter_1_N = mkN "obturador" ; --*
lin shuttle_1_N = variants {mkN "peteca" ; mkN "volante" ; mkN "Volante" ; } ; --*
lin shuttle_2_N = mkN "traslado" ; --*
lin shuttlecock_N = variants {mkN "peteca" ; mkN "volante" ; mkN "Volante" ; } ; --*
lin shut_up_1_V2 = variants {mkV2 (mkV "mum") ; mkV2 (mkV "quiet") ; mkV2 (mkV "up") ; } ; --*
lin shut_up_3_V2 = variants {mkV2 (mkV "silenciar") ; mkV2 (mkV "up") ; } ; --*
lin shy_1_A = variants {mkA "inseguro" ; mkA "tímido" ; } ; --*
lin shyness_N = mkN "timidez" ; --*
lin sialadenitis_N = variants {mkN "sialadenite" ; mkN "Sialadenite" ; mkN "sialoadenite" ; mkN "sialodenite" ; } ; --*
lin siamese_1_A = variants {mkA "siamês" ; mkA "tailandês" ; } ; --*
lin siamese_1_N = variants {mkN "Língua" ; mkN "Thai" ; } ; --*
lin siamese_2_A = variants {mkA "siamês" ; mkA "tailandês" ; } ; --*
lin siamese_2_N = mkN "tailandês" ; --*
lin siamese_3_A = mkA "tailandês" ; --*
lin siamese_4_N = variants {mkN "cat" ; mkN "gato" ; } ; --*
lin siam_PN = variants {mkPN "of" ; mkPN "Sião" ; mkPN "Tailândia" ; } ; --*
lin sian_PN = variants {mkPN "Xian" ; mkPN "Xi'an" ; } ; --*
lin siberian_A = mkA "siberiano" ; --*
lin sibilation_1_N = mkN "silvo" ; --*
lin sibling_N = variants {mkN "irmã" ; mkN "irmão" ; } ; --*
lin sibyl_1_N = mkN "sibila" ; --*
lin sibylline_2_A = variants {mkA "cabalístico" ; mkA "enigmático" ; } ; --*
lin sicilian_A = mkA "siciliano" ; --*
lin sicilian_N = mkN "siciliano" ; --*
lin sick_1_A = variants {mkA "doente" ; mkA "enfermo" ; } ; --*
lin sick_2_A = mkA "nauseante" ; --*
lin sick_3_A = mkA "louco" ; --*
lin sick_4_A = variants {mkA "farto" ; mkA "of" ; mkA "up" ; } ; --*
lin sick_5_A = variants {mkA "de" ; mkA "fraco" ; } ; --*
lin sick_7_A = variants {mkA "horrível" ; mkA "macabro" ; } ; --*
lin sickbay_N = variants {mkN "berth" ; mkN "enfermagem" ; } ; --*
lin sick_berth_N = variants {mkN "berth" ; mkN "enfermagem" ; } ; --*
lin sicken_1_V2 = variants {mkV2 (mkV "indignar") ; mkV2 (mkV "nausear") ; mkV2 (mkV "repugnar") ; mkV2 (mkV "revoltar") ; mkV2 (mkV "up") ; } ; --*
lin sicken_2_V2 = variants {mkV2 (mkV "adoecer") ; mkV2 (mkV "down") ; } ; --*
lin sicken_2_V = variants {mkV "adoecer" ; mkV "down" ; } ; --*
lin sicken_3_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "enjoar") ; mkV2 (mkV "one's") ; } ; --*
lin sick_headache_2_N = variants {mkN "enxaqueca" ; mkN "headache" ; } ; --*
lin sickish_A = mkA "nauseante" ; --*
lin sickle_N = variants {mkN "foice" ; mkN "hook" ; } ; --*
lin sickly_1_A = mkA "descorado" ; --*
lin sickly_2_A = variants {mkA "com" ; mkA "indisposto" ; mkA "menstruada" ; mkA "the" ; } ; --*
lin sickness_1_N = variants {mkN "doença" ; mkN "enfermidade" ; mkN "enjoo" ; mkN "nausea" ; } ; --*
lin sickness_3_N = variants {mkN "náusea" ; mkN "náuseas" ; } ; --*
lin sick_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin side_10_N = mkN "posição" ; --*
lin side_11_N = variants {mkN "costa" ; mkN "declive" ; mkN "declives" ; mkN "encosta" ; mkN "ladeira" ; mkN "subida" ; } ; --*
lin side_4_N = variants {mkN "face" ; mkN "lado" ; } ; --*
lin side_6_N = mkN "lado" ; --*
lin side_7_N = mkN "lado" ; --*
lin sidebar_1_N = mkN "barra" ; --*
lin sideboard_3_N = variants {mkN "armário" ; mkN "bufete" ; mkN "prateleiras" ; } ; --*
lin sideburn_N = variants {mkN "chop" ; mkN "patilhas" ; } ; --*
lin sidecar_2_N = variants {mkN "side" ; mkN "Sidecar" ; } ; --*
lin side_dish_N = variants {mkN "acompanhamento" ; mkN "dish" ; mkN "order" ; } ; --*
lin side_drum_N = variants {mkN "Caixa" ; mkN "drum" ; } ; --*
lin side_glance_N = mkN "olhar" ; --*
lin sidekick_N = variants {mkN "amigo" ; mkN "camarada" ; mkN "colega" ; mkN "companheiro" ; mkN "irmão" ; } ; --*
lin sideline_3_N = variants {mkN "activity" ; mkN "hobby" ; mkN "passatempo" ; mkN "Passa-tempo" ; mkN "Passatempos" ; } ; --*
lin sidereal_1_A = mkA "sideral" ; --*
lin siderite_1_N = mkN "Siderita" ; --*
lin sidestep_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin sidetrack_V2 = mkV2 (mkV "digressar") ; --*
lin side_view_N = mkN "view" ; --*
lin sidewalk_N = variants {mkN "calçada" ; mkN "passeio" ; } ; --*
lin sidewinder_1_N = variants {mkN "cascavel-chifruda" ; mkN "cerastes" ; mkN "rattlesnake" ; } ; --*
lin siege_N = variants {mkN "assédio" ; mkN "blockade" ; mkN "cerco" ; mkN "sítio" ; } ; --*
lin sierra_leone_PN = variants {mkPN "Leone" ; mkPN "of" ; } ; --*
lin siesta_N = variants {mkN "cochilo" ; mkN "sesta" ; } ; --*
lin sieve_1_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "peneirar") ; } ; --*
lin sieve_2_V2 = variants {mkV2 (mkV "discernir") ; mkV2 (mkV "examinar") ; mkV2 (mkV "minuciosamente") ; } ; --*
lin sieve_3_V2 = variants {mkV2 (mkV "cindir") ; mkV2 (mkV "discernir") ; } ; --*
lin sieve_4_V2 = variants {mkV2 (mkV "coar") ; mkV2 (mkV "peneirar") ; } ; --*
lin sieve_N = variants {mkN "coador" ; mkN "Crivo" ; mkN "peneira" ; } ; --*
lin sift_2_V2 = variants {mkV2 (mkV "cindir") ; mkV2 (mkV "discernir") ; } ; --*
lin sift_3_V2 = variants {mkV2 (mkV "discernir") ; mkV2 (mkV "examinar") ; mkV2 (mkV "minuciosamente") ; } ; --*
lin sifter_N = mkN "crivo" ; --*
lin sift_through_V2 = variants {mkV2 (mkV "coar") ; mkV2 (mkV "peneirar") ; } ; --*
lin sift_V = variants {mkV "joeirar" ; mkV "peneirar" ; } ; --*
lin sigh_1_N = mkN "suspiro" ; --*
lin sigh_1_V = mkV "suspirar" ; --*
lin sigh_2_V2 = variants {mkV2 (mkV "gemer") ; mkV2 (mkV "suspirar") ; } ; --*
lin sigh_2_V = variants {mkV "gemer" ; mkV "suspirar" ; } ; --*
lin sigh_2_VS = variants {mkVS (mkV "gemer") ; mkVS (mkV "suspirar") ; } ; --*
lin sight_1_V2 = variants {mkV2 (mkV "avistar") ; mkV2 (mkV "dar") ; mkV2 (mkV "divisar") ; mkV2 (mkV "prestar") ; mkV2 (mkV "ver") ; } ; --*
lin sight_2_N = mkN "visão" ; --*
lin sight_2_V2 = mkV2 (mkV "mirar") ; --*
lin sight_3_N = variants {mkN "modality" ; mkN "sense" ; mkN "visão" ; } ; --*
lin sight_6_N = mkN "observação" ; --*
lin sighting_N = mkN "observação" ; --*
lin sightless_A = mkA "cego" ; --*
lin sight_of_N = variants {mkN "a" ; mkN "bocado" ; mkN "deal" ; mkN "massa" ; mkN "montanha" ; mkN "montão" ; mkN "multidão" ; mkN "quantidade" ; mkN "sum" ; } ; --*
lin sigma_N = variants {mkN "sigma" ; mkN "Σ" ; } ; --*
lin sigmoidoscopy_N = variants {mkN "Sigmoidoscopia" ; mkN "sigmoidoscopy" ; } ; --*
lin sign_1_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "subscrever") ; } ; --*
lin sign_2_N = mkN "anúncio" ; --*
lin sign_2_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "ratificar") ; } ; --*
lin sign_3_N = variants {mkN "sinal" ; mkN "Sinalização" ; } ; --*
lin sign_3_V2 = mkV2 (mkV "assinar") ; --*
lin sign_4_N = variants {mkN "letreiro" ; mkN "painel" ; mkN "placa" ; } ; --*
lin sign_4_V2 = variants {mkV2 (mkV "contratar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin sign_5_N = variants {mkN "house" ; mkN "of" ; mkN "sign" ; mkN "signo" ; } ; --*
lin sign_5_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "sinalizar") ; } ; --*
lin sign_8_N = variants {mkN "agouro" ; mkN "augúrio" ; mkN "presságio" ; } ; --*
lin sign_9_N = mkN "gesto" ; --*
lin signal_1_N = variants {mkN "sinal" ; mkN "Sinalização" ; } ; --*
lin signal_1_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "sinalizar") ; } ; --*
lin signal_2_N = mkN "sinal" ; --*
lin signal_2_VS = variants {mkVS (mkV "denotar") ; mkVS (mkV "evidenciar") ; mkVS (mkV "indicar") ; mkVS (mkV "sinalizar") ; mkVS (mkV "sugerir") ; } ; --*
lin signal_3_N = mkN "sinal" ; --*
lin signalize_2_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "sinalizar") ; } ; --*
lin signalize_3_V2 = variants {mkV2 (mkV "assinalar") ; mkV2 (mkV "attention") ; mkV2 (mkV "out") ; } ; --*
lin signalman_N = mkN "guarda-barreira" ; --*
lin signature_1_N = mkN "assinatura" ; --*
lin signature_3_N = variants {mkN "sintonia" ; mkN "song" ; mkN "tune" ; } ; --*
lin signature_4_N = variants {mkN "armadura" ; mkN "signature" ; } ; --*
lin signboard_N = variants {mkN "letreiro" ; mkN "painel" ; mkN "placa" ; } ; --*
lin significance_1_N = variants {mkN "significação" ; mkN "significado" ; } ; --*
lin significance_2_N = variants {mkN "importe" ; mkN "significado" ; } ; --*
lin significance_3_N = variants {mkN "intenção" ; mkN "significação" ; mkN "significado" ; } ; --*
lin significant_1_A = variants {mkA "importante" ; mkA "significante" ; mkA "significativo" ; } ; --*
lin significant_4_A = mkA "significativo" ; --*
lin signification_N = variants {mkN "intenção" ; mkN "significação" ; mkN "significado" ; } ; --*
lin significative_of_A2 = mkA2 (mkA "sugestivo") noPrep ; --*
lin signify_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "significar") ; } ; --*
lin signify_2_V2 = variants {mkV2 (mkV "querer") ; mkV2 (mkV "significar") ; } ; --*
lin signify_3_V2 = mkV2 (mkV "significar") ; --*
lin sign_of_N2 = mkN2 (mkN "signo") noPrep ; --*
lin sign_on_V2 = variants {mkV2 (mkV "contratar") ; mkV2 (mkV "empregar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin sign_up_1_V = variants {mkV "contratar" ; mkV "empregar" ; mkV "on" ; mkV "up" ; } ; --*
lin sign_up_2_V = mkV "up" ; --*
lin sikh_N = mkN "Siques" ; --*
lin sildenafil_N = variants {mkN "citrate" ; mkN "sildenafila" ; } ; --*
lin silence_1_V2 = variants {mkV2 (mkV "silenciar") ; mkV2 (mkV "up") ; } ; --*
lin silence_2_N = variants {mkN "calada" ; mkN "silêncio" ; mkN "sossego" ; } ; --*
lin silence_3_N = mkN "silêncio" ; --*
lin silence_4_N = variants {mkN "secretividade" ; mkN "silêncio" ; } ; --*
lin silencer_2_N = mkN "silenciador" ; --*
lin silent_3_A = variants {mkA "indutivo" ; mkA "tácito" ; } ; --*
lin silent_5_A = mkA "silencioso" ; --*
lin silent_6_A = variants {mkA "muda" ; mkA "mudo" ; } ; --*
lin silenus_2_N = mkN "Sileno" ; --*
lin silesia_1_N = variants {mkN "Silesia" ; mkN "Silésia" ; } ; --*
lin silhouette_1_N = mkN "silhueta" ; --*
lin silhouette_2_N = variants {mkN "silhueta" ; mkN "Silhueta" ; } ; --*
lin silica_N = variants {mkN "dioxide" ; mkN "oxide" ; mkN "sílica" ; } ; --*
lin silicate_N = mkN "silicato" ; --*
lin silicone_N = variants {mkN "polymer" ; mkN "silicone" ; } ; --*
lin silicon_N = variants {mkN "number" ; mkN "Silicio" ; mkN "silicone" ; } ; --*
lin silicosis_N = variants {mkN "silicose" ; mkN "Silicose" ; } ; --*
lin silique_1_N = variants {mkN "Síliqua" ; mkN "Síliqüa" ; } ; --*
lin silk_1_N = mkN "seda" ; --*
lin silk_2_N = mkN "seda" ; --*
lin silkworm_1_N = variants {mkN "bicho-da-seda" ; mkN "bômbice" ; mkN "bômbix" ; } ; --*
lin sill_1_N = variants {mkN "limiar" ; mkN "peitoril" ; mkN "soleira" ; } ; --*
lin sill_2_N = mkN "Soleira" ; --*
lin silliness_1_N = mkN "absurdidade" ; --*
lin silliness_2_N = mkN "coisavã" ; --*
lin silly_2_A = variants {mkA "informal" ; mkA "tonto" ; } ; --*
lin silly_3_A = mkA "ridículo" ; --*
lin silo_1_N = variants {mkN "silo" ; mkN "silos" ; } ; --*
lin silo_2_N = mkN "silos" ; --*
lin silt_N = variants {mkN "sedimento" ; mkN "sedimentos" ; mkN "silte" ; } ; --*
lin siltstone_N = mkN "Siltito" ; --*
lin silt_up_V = variants {mkV "assorear" ; mkV "up" ; } ; --*
lin silvan_A = mkA "selvático" ; --*
lin silver_1_A = mkA "argênteo" ; --*
lin silver_1_N = variants {mkN "number" ; mkN "prata" ; } ; --*
lin silver_2_A = variants {mkA "argênteo" ; mkA "argentino" ; mkA "prata" ; mkA "prateado" ; } ; --*
lin silver_2_N = mkN "prata" ; --*
lin silver_2_V2 = mkV2 (mkV "pratear") ; --*
lin silver_3_A = mkA "prateado" ; --*
lin silver_3_N = variants {mkN "cinza" ; mkN "gray" ; mkN "grey" ; } ; --*
lin silver_4_A = variants {mkA "eloquente" ; mkA "eloqüente" ; mkA "expressivo" ; } ; --*
lin silver_4_N = variants {mkN "prataria" ; mkN "Prataria" ; } ; --*
lin silver_fish_1_N = variants {mkN "Lepisma" ; mkN "saccharina" ; } ; --*
lin silvern_2_A = variants {mkA "argênteo" ; mkA "argentino" ; mkA "prata" ; mkA "prateado" ; } ; --*
lin silverware_N = variants {mkN "prata" ; mkN "talher" ; } ; --*
lin silvery_2_A = variants {mkA "argênteo" ; mkA "argentino" ; mkA "prata" ; mkA "prateado" ; } ; --*
lin silvery_3_A = mkA "prateado" ; --*
lin simian_N = mkN "Simiiformes" ; --*
lin similar_1_A = mkA "similar" ; --*
lin similar_2_A = variants {mkA "parecido" ; mkA "semelhante" ; mkA "similar" ; } ; --*
lin similar_3_A = mkA "semelhante" ; --*
lin similar_5_A = mkA "intercambiável" ; --*
lin similarity_1_N = variants {mkN "semelhança" ; mkN "similardidade" ; } ; --*
lin simile_N = mkN "comparação" ; --*
lin similitude_1_N = variants {mkN "semelhança" ; mkN "similardidade" ; mkN "similitude" ; } ; --*
lin similitude_2_N = mkN "cópia" ; --*
lin simmer_down_V = variants {mkV "acalmar-se" ; mkV "down" ; mkV "it" ; mkV "off" ; mkV "out" ; } ; --*
lin simon_1_PN = variants {mkPN "Simão" ; mkPN "Simon" ; mkPN "the" ; mkPN "Zelotes" ; } ; --*
lin simon_2_PN = variants {mkPN "Paul" ; mkPN "Simon" ; } ; --*
lin simon_3_PN = variants {mkPN "Neil" ; mkPN "Simon" ; } ; --*
lin simon_4_PN = variants {mkPN "A." ; mkPN "Alexander" ; mkPN "Herbert" ; mkPN "Simon" ; } ; --*
lin simony_N = mkN "simonia" ; --*
lin simper_V = mkV "sorrir" ; --*
lin simple_1_A = variants {mkA "simples" ; mkA "singelo" ; } ; --*
lin simple_2_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "matarruano" ; mkN "simplória" ; mkN "simplório" ; } ; --*
lin simpleton_N = variants {mkN "estúpido" ; mkN "idiota" ; mkN "matarruano" ; mkN "simplória" ; mkN "simplório" ; } ; --*
lin simplicity_1_N = mkN "Simplicidade" ; --*
lin simplicity_3_N = mkN "simplicidade" ; --*
lin simplicity_4_N = variants {mkN "facilidade" ; mkN "naturalidade" ; } ; --*
lin simplification_2_N = variants {mkN "Eliminação" ; mkN "simplificação" ; } ; --*
lin simplification_3_N = mkN "simplificação" ; --*
lin simplify_V2 = mkV2 (mkV "simplificar") ; --*
lin simplistic_A = mkA "simplístico" ; --*
lin simulacrum_1_N = mkN "simulacro" ; --*
lin simulacrum_2_N = variants {mkN "desenho" ; mkN "efígie" ; mkN "figura" ; mkN "ilustração" ; mkN "imagem" ; } ; --*
lin simulate_1_V2 = variants {mkV2 (mkV "copiar") ; mkV2 (mkV "imitar") ; mkV2 (mkV "simular") ; } ; --*
lin simulate_2_V2 = variants {mkV2 (mkV "modelar") ; mkV2 (mkV "simular") ; } ; --*
lin simulate_3_V2 = variants {mkV2 (mkV "fingir") ; mkV2 (mkV "simular") ; } ; --*
lin simulated_1_A = variants {mkA "artificial" ; mkA "falsificado" ; mkA "falso" ; } ; --*
lin simulation_1_N = variants {mkN "simulação" ; mkN "Simulação" ; } ; --*
lin simulation_2_N = variants {mkN "simulação" ; mkN "simulation" ; } ; --*
lin simulation_3_N = variants {mkN "esquema" ; mkN "modelo" ; } ; --*
lin simulator_N = mkN "simulador" ; --*
lin simultaneity_N = mkN "simultaneidade" ; --*
lin simultaneous_A = variants {mkA "coincidente" ; mkA "concorrente" ; mkA "simultânea" ; mkA "simultâneo" ; } ; --*
lin simultaneousness_N = mkN "simultaneidade" ; --*
lin simvastatin_N = mkN "sinvastatina" ; --*
lin sin_1_N = mkN "pecado" ; --*
lin sin_1_V = mkV "pecar" ; --*
lin sin_2_N = mkN "pecado" ; --*
lin sin_2_V = variants {mkV "pisar" ; mkV "the" ; } ; --*
lin sin_3_N = mkN "seno" ; --*
lin sin_4_N = mkN "Nanna" ; --*
lin sincere_2_A = mkA "sincero" ; --*
lin sincerity_1_N = mkN "sinceridade" ; --*
lin sincerity_2_N = mkN "sinceridade" ; --*
lin sincerity_3_N = mkN "sinceridade" ; --*
lin sincerity_4_N = mkN "seriedade" ; --*
lin sinecure_2_N = mkN "sinecura" ; --*
lin sine_N = mkN "seno" ; --*
lin sine_qua_non_N = variants {mkN "condition" ; mkN "qua" ; } ; --*
lin sinew_1_N = mkN "tendão" ; --*
lin sinew_2_N = mkN "músculo" ; --*
lin sinewy_3_A = mkA "musculoso" ; --*
lin sinful_1_A = variants {mkA "ímpio" ; mkA "pecaminoso" ; } ; --*
lin sinful_2_A = mkA "malvado" ; --*
lin sinfulness_N = mkN "pecado" ; --*
lin sing_1_V2 = mkV2 (mkV "cantar") ; --*
lin sing_2_V = mkV "cantar" ; --*
lin sing_3_V = mkV "cantar" ; --*
lin sing_4_V = variants {mkV "apitar" ; mkV "assobiar" ; } ; --*
lin sing_5_V = variants {mkV "falar" ; mkV "out" ; mkV "the" ; } ; --*
lin singapore_1_PN = variants {mkPN "of" ; mkPN "Singapura" ; } ; --*
lin singapore_2_PN = variants {mkPN "of" ; mkPN "Singapura" ; } ; --*
lin singapore_3_PN = variants {mkPN "Island" ; mkPN "Singapura" ; } ; --*
lin singaporean_1_A = variants {mkA "singapurano" ; mkA "singapurense" ; } ; --*
lin singaporean_2_A = mkA "cingapuriano" ; --*
lin singaporeanFem_N = variants {mkN "singapurense" ; mkN "singapuriano" ; } ; --*
lin singaporeanMasc_N = variants {mkN "singapurense" ; mkN "singapuriano" ; } ; --*
lin singe_1_V2 = mkV2 (mkV "chamuscar") ; --*
lin singe_1_V = mkV "chamuscar" ; --*
lin singe_2_V2 = mkV2 (mkV "chamuscar") ; --*
lin singe_2_V = mkV "chamuscar" ; --*
lin singer_1_N = variants {mkN "cantador" ; mkN "cantor" ; mkN "cantora" ; mkN "vocalista" ; } ; --*
lin singer_2_N = variants {mkN "Isaac" ; mkN "M." ; mkN "Merrit" ; } ; --*
lin singer_3_N = variants {mkN "Bashevis" ; mkN "Isaac" ; } ; --*
lin singhalese_1_A = mkA "cingalês" ; --*
lin singhalese_2_A = mkA "cingalês" ; --*
lin singing_1_N = variants {mkN "canção" ; mkN "canto" ; } ; --*
lin single_1_A = mkA "individual" ; --*
lin single_1_N = mkN "Rebatida" ; --*
lin single_2_N = variants {mkN "1" ; mkN "um" ; } ; --*
lin single_3_A = mkA "desacompanhado" ; --*
lin single_4_A = mkA "solteiro" ; --*
lin single_7_A = variants {mkA "de" ; mkA "individual" ; } ; --*
lin single_minded_A = variants {mkA "obsessivo" ; mkA "solucionado" ; } ; --*
lin single_out_1_V2 = mkV2 (mkV "out") ; --*
lin single_out_2_V2 = variants {mkV2 (mkV "discriminar") ; mkV2 (mkV "out") ; } ; --*
lin singlet_N = variants {mkN "colete" ; mkN "t-shirt" ; } ; --*
lin singleton_2_N = variants {mkN "conjunto" ; mkN "Conjunto" ; mkN "singleto" ; mkN "unitário" ; } ; --*
lin singleton_3_N = mkN "singleton" ; --*
lin singly_1_Adv = variants {mkAdv "umaum" ; mkAdv "única" ; } ; --*
lin singly_2_Adv = variants {mkAdv "à" ; mkAdv "an" ; mkAdv "by" ; mkAdv "em" ; mkAdv "individualmente" ; } ; --*
lin singular_1_A = mkA "singular" ; --*
lin singular_2_A = variants {mkA "bizarro" ; mkA "curioso" ; mkA "estranho" ; mkA "singular" ; mkA "único" ; } ; --*
lin singular_3_A = variants {mkA "singular" ; mkA "único" ; } ; --*
lin singular_6_A = variants {mkA "sem" ; mkA "singular" ; mkA "única" ; mkA "único" ; } ; --*
lin singularity_1_N = variants {mkN "singularidade" ; mkN "unicidade" ; } ; --*
lin singularity_2_N = mkN "singularidade" ; --*
lin singular_N = variants {mkN "form" ; mkN "singular" ; } ; --*
lin sinhala_N = variants {mkN "cingala" ; mkN "cingalá" ; mkN "cingalês" ; mkN "Língua" ; } ; --*
lin sinhalese_1_A = mkA "cingalês" ; --*
lin sinhalese_1_N = mkN "cingalês" ; --*
lin sinhalese_2_A = mkA "cingalês" ; --*
lin sinhalese_2_N = variants {mkN "cingala" ; mkN "cingalá" ; mkN "cingalês" ; mkN "Língua" ; } ; --*
lin sinister_1_A = variants {mkA "ameaçador" ; mkA "ominoso" ; } ; --*
lin sinistral_2_A = mkA "canhoto" ; --*
lin sink_1_N = mkN "pia" ; --*
lin sink_1_V = variants {mkV "afundar" ; mkV "down" ; } ; --*
lin sink_2_V2 = variants {mkV2 (mkV "afundar") ; mkV2 (mkV "submergir") ; } ; --*
lin sink_3_N = variants {mkN "dolina" ; mkN "hole" ; } ; --*
lin sink_4_V = variants {mkV "down" ; mkV "naufragar" ; mkV "under" ; } ; --*
lin sink_8_V = variants {mkV "afundar" ; mkV "down" ; } ; --*
lin sinker_1_N = variants {mkN "rosca" ; mkN "rosquinha" ; mkN "sonho" ; } ; --*
lin sinker_2_N = variants {mkN "chumbada" ; mkN "chumbinho" ; mkN "chumbo" ; } ; --*
lin sinkhole_N = variants {mkN "dolina" ; mkN "hole" ; } ; --*
lin sink_in_1_V = variants {mkV "across" ; mkV "clicar" ; mkV "despontar" ; mkV "entender" ; mkV "home" ; mkV "in" ; mkV "into" ; mkV "through" ; } ; --*
lin sinking_3_N = variants {mkN "feeling" ; mkN "pressentimento" ; } ; --*
lin sinlessness_N = mkN "pureza" ; --*
lin sinner_N = mkN "pecador" ; --*
lin sinn_fein_PN = mkPN "Fein" ; --*
lin sinology_N = mkN "sinologia" ; --*
lin sintered_A = mkA "sinterizado" ; --*
lin sinuate_1_A = mkA "sinuoso" ; --*
lin sinuosity_N = mkN "sinuosidade" ; --*
lin sinuous_1_A = mkA "sinuoso" ; --*
lin sinus_1_N = variants {mkN "fístula" ; mkN "Fístula" ; } ; --*
lin sinusitis_N = mkN "sinusite" ; --*
lin sinusoidal_A = mkA "sinusoidal" ; --*
lin sioux_N = mkN "Sioux" ; --*
lin siphon_1_N = mkN "sifão" ; --*
lin siphon_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "sifonar") ; } ; --*
lin siphon_1_V = variants {mkV "off" ; mkV "sifonar" ; } ; --*
lin siphon_2_V2 = mkV2 (mkV "sifonar") ; --*
lin sip_N = mkN "gole" ; --*
lin sip_V2 = variants {mkV2 (mkV "bebericar") ; mkV2 (mkV "sorver") ; } ; --*
lin sir_1_N = mkN "senhor" ; --*
lin sir_2_N = mkN "Sir" ; --*
lin sire_2_N = mkN "antepassado" ; --*
lin siren_1_N = mkN "sereia" ; --*
lin siren_2_N = variants {mkN "fatale" ; mkN "mulher" ; } ; --*
lin siren_3_N = variants {mkN "sirena" ; mkN "sirene" ; } ; --*
lin siren_4_N = variants {mkN "sereia" ; mkN "sirene" ; } ; --*
lin sire_V2 = variants {mkV2 (mkV "conceber") ; mkV2 (mkV "forth") ; mkV2 (mkV "gerar") ; mkV2 (mkV "procriar") ; mkV2 (mkV "ter") ; } ; --*
lin siris_N = variants {mkN "Albizia" ; mkN "lebbeck" ; mkN "tree" ; } ; --*
lin sirocco_N = variants {mkN "storm" ; mkN "tempestade" ; mkN "Tempestade" ; } ; --*
lin sirup_N = variants {mkN "calda" ; mkN "garrafada" ; mkN "xarope" ; } ; --*
lin sisal_2_N = variants {mkN "sisal" ; mkN "sisalana" ; } ; --*
lin sissified_A = mkA "efeminado" ; --*
lin sissy_N = variants {mkN "baitola" ; mkN "boiola" ; } ; --*
lin sister_1_N = variants {mkN "irmã" ; mkN "irmão" ; mkN "soror" ; } ; --*
lin sister_2_N = mkN "irmã" ; --*
lin sister_3_N = variants {mkN "irmã" ; mkN "soror" ; } ; --*
lin sister_in_law_N = mkN "cunhada" ; --*
lin sit_1_V = variants {mkV "down" ; mkV "estar" ; mkV "sentar" ; } ; --*
lin sit_2_V = variants {mkV "around" ; mkV "sentar-se" ; } ; --*
lin sit_3_V = variants {mkV "down" ; mkV "sentar" ; } ; --*
lin sit_5_V = mkV "posar" ; --*
lin sit_6_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "cavalgar") ; mkV2 (mkV "ir") ; mkV2 (mkV "subir") ; mkV2 (mkV "viajar") ; } ; --*
lin sit_9_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "pôr") ; mkV2 (mkV "sentar") ; mkV2 (mkV "sentar-se") ; } ; --*
lin sitar_N = variants {mkN "cítara" ; mkN "sitar" ; } ; --*
lin sitcom_2_N = variants {mkN "comedy" ; mkN "Sitcom" ; mkN "Sitcoms" ; } ; --*
lin sit_down_1_V = variants {mkV "down" ; mkV "sentar" ; } ; --*
lin sit_down_3_V = variants {mkV "down" ; mkV "estar" ; mkV "sentar" ; } ; --*
lin sit_down_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "pôr") ; mkV2 (mkV "sentar") ; mkV2 (mkV "sentar-se") ; } ; --*
lin site_1_N = variants {mkN "lugar" ; mkN "site" ; mkN "sítio" ; } ; --*
lin site_2_N = variants {mkN "local" ; mkN "lugar" ; mkN "situação" ; } ; --*
lin site_3_N = variants {mkN "site" ; mkN "website" ; } ; --*
lin sit_out_1_V2 = mkV2 (mkV "out") ; --*
lin sitter_1_N = variants {mkN "de" ; mkN "Willem" ; } ; --*
lin sitter_3_N = variants {mkN "babá" ; mkN "baby-sitter" ; } ; --*
lin sitting_room_N = variants {mkN "room" ; mkN "sala" ; mkN "salão" ; } ; --*
lin situate_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "localizar") ; mkV2 (mkV "situar") ; } ; --*
lin situate_2_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "situar") ; } ; --*
lin situation_1_N = variants {mkN "of" ; mkN "situação" ; } ; --*
lin situation_2_N = mkN "situação" ; --*
lin situation_4_N = variants {mkN "local" ; mkN "lugar" ; mkN "situação" ; } ; --*
lin situation_5_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin six_shooter_N = mkN "revólver" ; --*
lin sizable_1_A = variants {mkA "amplo" ; mkA "considerável" ; } ; --*
lin sizable_2_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin size_1_N = variants {mkN "dimensão" ; mkN "magnitude" ; mkN "medida" ; mkN "tamanho" ; } ; --*
lin size_3_N = mkN "classificação" ; --*
lin sizeable_1_A = variants {mkA "amplo" ; mkA "considerável" ; } ; --*
lin sizeable_2_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin size_up_V2 = variants {mkV2 (mkV "escrutinar") ; mkV2 (mkV "stock") ; mkV2 (mkV "up") ; } ; --*
lin sizzle_2_V = variants {mkV "chiar" ; mkV "ferver" ; } ; --*
lin skate_1_N = variants {mkN "patim" ; mkN "patins" ; } ; --*
lin skate_2_N = variants {mkN "raia" ; mkN "Rajidae" ; } ; --*
lin skateboarding_N = mkN "Skate" ; --*
lin skateboard_N = variants {mkN "esqueite" ; mkN "skate" ; } ; --*
lin skate_V = mkV "patinar" ; --*
lin skeletal_1_A = variants {mkA "do" ; mkA "esquelético" ; mkA "ósseo" ; } ; --*
lin skeletal_2_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin skeleton_3_N = variants {mkN "esqueleto" ; mkN "skeletale" ; mkN "system" ; } ; --*
lin skeptical_1_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin skeptical_2_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin skepticism_1_N = variants {mkN "descrença" ; mkN "dúvida" ; mkN "rejection" ; } ; --*
lin skepticism_2_N = variants {mkN "agnosticismo" ; mkN "cepticismo" ; mkN "ceticismo" ; mkN "Ceticismo" ; mkN "descrença" ; } ; --*
lin skeptic_N = mkN "cético" ; --*
lin sketch_1_N = variants {mkN "croqui" ; mkN "desenho" ; mkN "esboço" ; } ; --*
lin sketch_1_V2 = variants {mkV2 (mkV "bosquejar") ; mkV2 (mkV "out") ; mkV2 (mkV "rascunhar") ; } ; --*
lin sketch_2_V2 = mkV2 (mkV "criar") ; --*
lin sketch_3_N = variants {mkN "resumo" ; mkN "sumário" ; } ; --*
lin sketch_4_N = variants {mkN "caricatura" ; mkN "cartoon" ; } ; --*
lin skewer_N = variants {mkN "espetada" ; mkN "espeto" ; } ; --*
lin skewer_V2 = mkV2 (mkV "espetar") ; --*
lin skid_1_V = variants {mkV "derrapar" ; mkV "patinar" ; } ; --*
lin skid_2_N = variants {mkN "sapata" ; mkN "shoe" ; } ; --*
lin skid_3_N = mkN "derrapagem" ; --*
lin skid_4_V = variants {mkV "derrapar" ; mkV "deslizar" ; mkV "escorregar" ; mkV "patinar" ; mkV "resvalar" ; } ; --*
lin skiffle_N = mkN "skiffle" ; --*
lin skiing_N = variants {mkN "esqui" ; mkN "Esqui" ; } ; --*
lin skilful_A = variants {mkA "competente" ; mkA "experiente" ; mkA "hábil" ; mkA "habilidoso" ; mkA "mestre" ; mkA "versado" ; } ; --*
lin ski_lift_N = variants {mkN "lift" ; mkN "teleférico" ; mkN "tow" ; } ; --*
lin skill_1_N = variants {mkN "habilidade" ; mkN "meta" ; mkN "talento" ; mkN "técnica" ; } ; --*
lin skill_2_N = variants {mkN "ciência" ; mkN "habilidade" ; mkN "talento" ; } ; --*
lin skilled_A = variants {mkA "habilidoso" ; mkA "talentoso" ; } ; --*
lin skillet_N = variants {mkN "pan" ; mkN "sartã" ; } ; --*
lin skillful_1_A = variants {mkA "competente" ; mkA "experiente" ; mkA "hábil" ; mkA "habilidoso" ; mkA "mestre" ; mkA "versado" ; } ; --*
lin skillfulness_N = mkN "habilidade" ; --*
lin skim_1_V2 = mkV2 (mkV "planar") ; --*
lin skim_1_V = mkV "planar" ; --*
lin skim_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "ricochetear") ; } ; --*
lin skim_2_V = variants {mkV "over" ; mkV "ricochetear" ; } ; --*
lin skim_3_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "down") ; mkV2 (mkV "over") ; } ; --*
lin skim_4_V2 = mkV2 (mkV "pular") ; --*
lin skim_4_V = mkV "pular" ; --*
lin skim_7_V2 = variants {mkV2 (mkV "ler") ; mkV2 (mkV "over") ; } ; --*
lin skim_7_V = variants {mkV "ler" ; mkV "over" ; } ; --*
lin skimmer_3_N = variants {mkN "chapéu-panamá" ; mkN "hat" ; } ; --*
lin skin_1_N = variants {mkN "pele" ; mkN "Pele" ; } ; --*
lin skin_2_V2 = variants {mkV2 (mkV "escorriar") ; mkV2 (mkV "escorriçar") ; mkV2 (mkV "ferir") ; mkV2 (mkV "machucar") ; } ; --*
lin skin_3_N = mkN "pele" ; --*
lin skin_3_V2 = mkV2 (mkV "descascar") ; --*
lin skin_3_V = mkV "descascar" ; --*
lin skin_4_V2 = variants {mkV2 (mkV "descascar") ; mkV2 (mkV "despelar") ; mkV2 (mkV "pelar") ; } ; --*
lin skin_5_N = variants {mkN "skinhead" ; mkN "Skinhead" ; } ; --*
lin skin_7_N = variants {mkN "casca" ; mkN "crosta" ; mkN "pele" ; } ; --*
lin skin_deep_A = mkA "superficial" ; --*
lin ski_N = mkN "esqui" ; --*
lin skinflint_N = variants {mkN "avarento" ; mkN "pão-duro" ; mkN "sovina" ; } ; --*
lin skinhead_1_N = variants {mkN "skinhead" ; mkN "Skinhead" ; } ; --*
lin skinner_3_N = variants {mkN "Burrhus" ; mkN "F." ; mkN "Frederic" ; mkN "Skinner" ; } ; --*
lin skinny_1_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin skip_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "pular") ; } ; --*
lin skip_2_N = mkN "omissão" ; --*
lin skip_3_V = variants {mkV "pular" ; mkV "saltar" ; mkV "saltitar" ; } ; --*
lin skip_across_V3 = mkV3 (mkV "pular") ; --*
lin skipper_2_N = variants {mkN "capitão" ; mkN "captain" ; mkN "patrão" ; } ; --*
lin skipper_3_N = mkN "capitão" ; --*
lin skipping_rope_N = mkN "rope" ; --*
lin skirmish_N = variants {mkN "conflito" ; mkN "disputa" ; } ; --*
lin skirt_1_V2 = variants {mkV2 (mkV "esquivar") ; mkV2 (mkV "evadir") ; mkV2 (mkV "evitar") ; mkV2 (mkV "off") ; mkV2 (mkV "presumir") ; mkV2 (mkV "varrer") ; } ; --*
lin skirt_2_N = variants {mkN "saia" ; mkN "vestido" ; } ; --*
lin skirt_4_N = variants {mkN "brasa" ; mkN "franguinha" ; mkN "garota" ; mkN "gata" ; mkN "menina" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin skirt_4_V2 = variants {mkV2 (mkV "contornar") ; mkV2 (mkV "rodear") ; } ; --*
lin skirting_board_N = variants {mkN "board" ; mkN "Roda" ; mkN "Rodapé" ; } ; --*
lin skitter_3_V = mkV "pular" ; --*
lin skittish_A = variants {mkA "assustado" ; mkA "nervoso" ; } ; --*
lin skittles_N = mkN "bolão" ; --*
lin ski_V = mkV "esquiar" ; --*
lin skopje_PN = mkPN "Skopje" ; --*
lin skulk_1_V = mkV "espreitar" ; --*
lin skullcap_1_N = mkN "gorro" ; --*
lin skullduggery_1_N = variants {mkN "artifício" ; mkN "artimanha" ; mkN "panky" ; mkN "subterfúgio" ; } ; --*
lin skull_N = variants {mkN "caveira" ; mkN "crâneo" ; mkN "crânio" ; mkN "Crânio" ; } ; --*
lin skunk_1_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin skunk_3_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin skunk_4_N = variants {mkN "gambá" ; mkN "Mephitidae" ; mkN "pussy" ; } ; --*
lin sky_blue_A = variants {mkA "azul" ; mkA "blue" ; mkA "cerúleo" ; } ; --*
lin sky_blue_N = variants {mkN "azul" ; mkN "cerúleo" ; } ; --*
lin skydiver_N = mkN "paraquedista" ; --*
lin sky_high_2_Adv = mkAdv "entusiasticamente" ; --*
lin skylark_N = variants {mkN "arvensis" ; mkN "calandra" ; mkN "calhandra" ; mkN "cotovia" ; mkN "paspalhaça" ; } ; --*
lin skylark_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin skylight_N = mkN "clarabóia" ; --*
lin skyline_2_N = variants {mkN "horizon" ; mkN "horizonte" ; } ; --*
lin sky_N = mkN "céu" ; --*
lin skyrocket_2_N = mkN "foguete" ; --*
lin skyscraper_N = variants {mkN "arranha-céu" ; mkN "arranha-céus" ; } ; --*
lin sky_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "jogar") ; } ; --*
lin slab_N = variants {mkN "chapa" ; mkN "laje" ; mkN "lousa" ; mkN "placa" ; } ; --*
lin slack_1_A = variants {mkA "queda" ; mkA "relaxado" ; mkA "sem" ; } ; --*
lin slack_2_V = mkV "negligenciar" ; --*
lin slack_3_A = mkA "lasso" ; --*
lin slack_4_N = mkN "pântano" ; --*
lin slack_5_V = variants {mkV "desacelerar" ; mkV "down" ; mkV "up" ; } ; --*
lin slack_6_V = variants {mkV "deprimir" ; mkV "deprivar" ; mkV "desprover" ; mkV "diminuir" ; mkV "embotar" ; mkV "minguar" ; mkV "reduzir" ; } ; --*
lin slack_7_V = variants {mkV "abater" ; mkV "amainar" ; mkV "away" ; mkV "enfraquecer" ; mkV "off" ; mkV "up" ; } ; --*
lin slacken_1_V = variants {mkV "desacelerar" ; mkV "down" ; mkV "up" ; } ; --*
lin slacken_4_V2 = mkV2 (mkV "afrouxar") ; --*
lin slacken_4_V = mkV "afrouxar" ; --*
lin slacker_N = mkN "Slacker" ; --*
lin slackness_1_N = variants {mkN "lassidão" ; mkN "letargia" ; } ; --*
lin slackness_3_N = mkN "negligência" ; --*
lin slack_off_V = variants {mkV "abater" ; mkV "amainar" ; mkV "away" ; mkV "enfraquecer" ; mkV "off" ; mkV "up" ; } ; --*
lin slag_N = variants {mkN "escória" ; mkN "jorra" ; } ; --*
lin slake_1_V2 = variants {mkV2 (mkV "aliviar") ; mkV2 (mkV "matar") ; mkV2 (mkV "saciar") ; } ; --*
lin slake_2_V2 = variants {mkV2 (mkV "deprimir") ; mkV2 (mkV "deprivar") ; mkV2 (mkV "desprover") ; mkV2 (mkV "diminuir") ; mkV2 (mkV "embotar") ; mkV2 (mkV "minguar") ; mkV2 (mkV "reduzir") ; } ; --*
lin slam_1_V2 = mkV2 (mkV "bater") ; --*
lin slam_2_N = variants {mkN "esporro" ; mkN "estrilo" ; } ; --*
lin slam_2_V2 = mkV2 (mkV "bater") ; --*
lin slam_4_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "down") ; } ; --*
lin slammer_2_N = variants {mkN "cadeia" ; mkN "cana" ; mkN "cárcere" ; mkN "casa" ; mkN "grades" ; mkN "grande" ; mkN "penalidade" ; mkN "penálti" ; mkN "pênalti" ; mkN "penalty" ; mkN "presídio" ; mkN "prisão" ; mkN "prisno" ; mkN "xadrez" ; mkN "xilindró" ; } ; --*
lin slander_1_N = variants {mkN "aleive" ; mkN "aleivosia" ; mkN "calúnia" ; mkN "Calúnia" ; mkN "injúria" ; } ; --*
lin slander_2_N = variants {mkN "calúnia" ; mkN "difamação" ; } ; --*
lin slanderer_N = variants {mkN "caluniador" ; mkN "difamador" ; } ; --*
lin slanderous_A = variants {mkA "calunioso" ; mkA "difamatório" ; mkA "infamante" ; } ; --*
lin slander_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin slang_1_N = variants {mkN "expression" ; mkN "gíria" ; mkN "term" ; } ; --*
lin slang_1_V2 = mkV2 (mkV "falar") ; --*
lin slang_2_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin slang_3_V2 = mkV2 (mkV "insultar") ; --*
lin slant_1_N = mkN "enfoque" ; --*
lin slant_2_N = mkN "inclinação" ; --*
lin slant_3_V = variants {mkV "debruçar" ; mkV "inclinar" ; } ; --*
lin slap_1_N = variants {mkN "batida" ; mkN "bofetada" ; mkN "estalo" ; mkN "palmada" ; mkN "tabefe" ; } ; --*
lin slap_2_N = mkN "bofetada" ; --*
lin slap_up_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin slap_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "estapear") ; } ; --*
lin slash_1_N = mkN "corte" ; --*
lin slash_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "down") ; } ; --*
lin slash_1_V = variants {mkV "cortar" ; mkV "down" ; } ; --*
lin slash_2_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin slash_4_N = mkN "corte" ; --*
lin slash_5_V = variants {mkV "about" ; mkV "debulhar" ; mkV "esbordoar" ; mkV "sovar" ; mkV "trilhar" ; } ; --*
lin slate_3_N = mkN "ardósia" ; --*
lin slat_N = variants {mkN "ripa" ; mkN "sarrafo" ; } ; --*
lin slattern_1_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin slattern_2_N = variants {mkN "piranha" ; mkN "puta" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin slaughter_1_V2 = mkV2 (mkV "matar") ; --*
lin slaughter_2_N = mkN "surra" ; --*
lin slaughter_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "massacrar") ; mkV2 (mkV "trucidar") ; } ; --*
lin slaughter_3_N = variants {mkN "abate" ; mkN "assassinato" ; mkN "carnificina" ; mkN "massacre" ; mkN "murder" ; } ; --*
lin slaughterhouse_N = variants {mkN "abatedouro" ; mkN "matadouro" ; } ; --*
lin slav_A = mkA "eslavo" ; --*
lin slave_1_N = variants {mkN "escrava" ; mkN "escravo" ; } ; --*
lin slave_2_N = variants {mkN "escravo" ; mkN "servo" ; mkN "worker" ; } ; --*
lin slaver_V = mkV "babar" ; --*
lin slavery_1_N = variants {mkN "escravidão" ; mkN "jugo" ; } ; --*
lin slavery_2_N = mkN "escravidão" ; --*
lin slavery_3_N = variants {mkN "escravidão" ; mkN "Escravidão" ; } ; --*
lin slave_V = variants {mkV "down" ; mkV "mourejar" ; mkV "one's" ; } ; --*
lin slavish_1_A = mkA "escravista" ; --*
lin slavish_2_A = mkA "subserviente" ; --*
lin slav_N = mkN "eslavo" ; --*
lin slavonic_1_A = mkA "eslávico" ; --*
lin slayer_N = variants {mkN "assassino" ; mkN "matador" ; } ; --*
lin slay_V2 = variants {mkV2 (mkV "assassinar") ; mkV2 (mkV "despachar") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin sleazy_2_A = mkA "brega" ; --*
lin sleazy_3_A = mkA "imundo" ; --*
lin sledge_1_N = mkN "trenó" ; --*
lin sledge_2_N = variants {mkN "malho" ; mkN "marreta" ; } ; --*
lin sledgehammer_N = variants {mkN "malho" ; mkN "marreta" ; } ; --*
lin sled_N = mkN "trenó" ; --*
lin sleek_1_A = variants {mkA "lisa" ; mkA "lisas" ; mkA "liso" ; mkA "lisos" ; } ; --*
lin sleek_1_V2 = mkV2 (mkV "alisar") ; --*
lin sleek_2_A = variants {mkA "aerodinâmica" ; mkA "aerodinâmico" ; } ; --*
lin sleep_1_N = mkN "sono" ; --*
lin sleep_1_V = variants {mkV "capotar" ; mkV "dormir" ; mkV "some" ; mkV "Z's" ; } ; --*
lin sleep_2_N = mkN "sono" ; --*
lin sleep_2_V = mkV "acomodar" ; --*
lin sleep_3_N = variants {mkN "sesta" ; mkN "sono" ; } ; --*
lin sleeper_1_N = mkN "dorminhoca" ; --*
lin sleeper_4_N = variants {mkN "dormente" ; mkN "Dormente" ; mkN "tie" ; mkN "travessa" ; } ; --*
lin sleep_in_1_V = variants {mkV "in" ; mkV "late" ; } ; --*
lin sleepiness_N = mkN "sonolência" ; --*
lin sleeping_2_N = mkN "dormência" ; --*
lin sleeping_sickness_N = variants {mkN "encephalitis" ; mkN "lethargica" ; mkN "sickness" ; } ; --*
lin sleepless_A = mkA "insone" ; --*
lin sleeplessness_N = mkN "insônia" ; --*
lin sleepover_N = mkN "Noite" ; --*
lin sleepwalker_N = variants {mkN "sonâmbula" ; mkN "sonâmbulo" ; } ; --*
lin sleepwalking_N = mkN "sonambulismo" ; --*
lin sleepy_A = variants {mkA "com" ; mkA "dorminhoco" ; mkA "sonolento" ; } ; --*
lin sleepy_head_N = variants {mkN "dorminhoca" ; mkN "dorminhoco" ; } ; --*
lin sleet_N = mkN "granizo" ; --*
lin sleet_V = mkV "gear" ; --*
lin sleeve_1_N = mkN "manga" ; --*
lin sleeveless_2_A = mkA "vão" ; --*
lin sleigh_bell_N = variants {mkN "bell" ; mkN "guizo" ; } ; --*
lin sleigh_N = mkN "trenó" ; --*
lin slender_1_A = variants {mkA "delgado" ; mkA "esbelto" ; mkA "esguio" ; mkA "franzino" ; mkA "magro" ; } ; --*
lin slender_4_A = mkA "esguio" ; --*
lin slenderize_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "emagrecer") ; mkV2 (mkV "off") ; mkV2 (mkV "perder") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "weight") ; } ; --*
lin slenderize_2_V = variants {mkV "down" ; mkV "emagrecer" ; mkV "off" ; mkV "perder" ; mkV "reduzir" ; mkV "weight" ; } ; --*
lin sleuth_hound_2_N = mkN "Cão" ; --*
lin slew_1_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin slew_2_V = variants {mkV "derrapar" ; mkV "deslizar" ; mkV "escorregar" ; mkV "patinar" ; mkV "resvalar" ; } ; --*
lin slice_1_N = variants {mkN "parte" ; mkN "quinhão" ; } ; --*
lin slice_1_V2 = mkV2 (mkV "cortar") ; --*
lin slice_2_N = mkN "rodela" ; --*
lin slice_3_N = mkN "corte" ; --*
lin slice_3_V2 = variants {mkV2 (mkV "fatiar") ; mkV2 (mkV "up") ; } ; --*
lin slice_5_N = mkN "fatia" ; --*
lin slick_2_A = mkA "fácil" ; --*
lin slick_5_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin slicker_3_N = mkN "trapaceiro" ; --*
lin slickness_1_N = variants {mkN "artifício" ; mkN "artimanha" ; mkN "panky" ; mkN "subterfúgio" ; } ; --*
lin slide_1_N = variants {mkN "lâmina" ; mkN "slide" ; } ; --*
lin slide_1_V = variants {mkV "derrapar" ; mkV "deslizar" ; mkV "escorregar" ; mkV "patinar" ; mkV "resvalar" ; } ; --*
lin slide_2_N = mkN "avalanche" ; --*
lin slide_2_V = variants {mkV "deslizar" ; mkV "escorregar" ; } ; --*
lin slide_4_N = variants {mkN "board" ; mkN "escorrego" ; mkN "slide" ; } ; --*
lin slide_5_N = mkN "deslizamento" ; --*
lin slide_7_N = variants {mkN "Tremonha" ; mkN "trough" ; } ; --*
lin slide_rule_N = variants {mkN "régua" ; mkN "rule" ; } ; --*
lin slight_3_A = variants {mkA "delgado" ; mkA "esbelto" ; mkA "esguio" ; mkA "franzino" ; mkA "magro" ; } ; --*
lin slight_N = mkN "desconsideração" ; --*
lin slight_V2 = mkV2 (mkV "esnobar") ; --*
lin slim_1_A = variants {mkA "delgado" ; mkA "esbelto" ; mkA "esguio" ; mkA "franzino" ; mkA "magro" ; } ; --*
lin slim_2_A = mkA "esguio" ; --*
lin slimed_A = mkA "lodoso" ; --*
lin slime_N = variants {mkN "barro" ; mkN "gosma" ; mkN "lama" ; mkN "lodo" ; mkN "olho" ; } ; --*
lin slim_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "emagrecer") ; mkV2 (mkV "off") ; mkV2 (mkV "perder") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "weight") ; } ; --*
lin slim_V = variants {mkV "down" ; mkV "emagrecer" ; mkV "off" ; mkV "perder" ; mkV "reduzir" ; mkV "weight" ; } ; --*
lin slimy_1_A = mkA "lodoso" ; --*
lin slimy_2_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin sling_2_N = variants {mkN "atiradeira" ; mkN "baladeira" ; mkN "bodoque" ; mkN "Bodoque" ; mkN "estilingue" ; mkN "fisga" ; mkN "funda" ; mkN "setra" ; } ; --*
lin sling_4_N = variants {mkN "estilingue" ; mkN "funda" ; mkN "fundíbulo" ; } ; --*
lin slingshot_N = variants {mkN "atiradeira" ; mkN "baladeira" ; mkN "bodoque" ; mkN "Bodoque" ; mkN "estilingue" ; mkN "fisga" ; mkN "funda" ; mkN "setra" ; } ; --*
lin slip_10_N = variants {mkN "folha" ; mkN "of" ; } ; --*
lin slip_10_V2 = variants {mkV2 (mkV "esquecer") ; mkV2 (mkV "one's") ; } ; --*
lin slip_10_V = variants {mkV "esquecer" ; mkV "one's" ; } ; --*
lin slip_11_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "deslocar-se") ; } ; --*
lin slip_13_N = mkN "derrapagem" ; --*
lin slip_1_N = variants {mkN "gafe" ; mkN "pas" ; mkN "solecismo" ; } ; --*
lin slip_1_V = variants {mkV "desaparecer" ; mkV "mover" ; } ; --*
lin slip_2_N = mkN "erro" ; --*
lin slip_2_V2 = mkV2 (mkV "passar") ; --*
lin slip_3_V = variants {mkV "derrapar" ; mkV "deslizar" ; mkV "escorregar" ; mkV "patinar" ; mkV "resvalar" ; } ; --*
lin slip_4_V = variants {mkV "away" ; mkV "decair" ; mkV "off" ; } ; --*
lin slip_5_V = mkV "escorregar" ; --*
lin slip_6_N = variants {mkN "ancoradouro" ; mkN "atracadouro" ; } ; --*
lin slip_6_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "equivocar") ; } ; --*
lin slip_6_V = variants {mkV "confundir" ; mkV "equivocar" ; } ; --*
lin slip_7_V2 = mkV2 (mkV "passar") ; --*
lin slip_9_N = mkN "banda" ; --*
lin slip_9_V2 = mkV2 (mkV "deslizar") ; --*
lin slip_away_1_V = variants {mkV "away" ; mkV "off" ; mkV "out" ; } ; --*
lin slip_away_2_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin slip_away_3_V = variants {mkV "desaparecer" ; mkV "mover" ; } ; --*
lin slip_by_V = variants {mkV "along" ; mkV "away" ; mkV "by" ; mkV "passar" ; } ; --*
lin slip_out_V = variants {mkV "away" ; mkV "off" ; mkV "out" ; } ; --*
lin slipover_N = variants {mkN "camisola" ; mkN "pulôver" ; } ; --*
lin slipper_1_N = variants {mkN "chinela" ; mkN "chinelas" ; mkN "chinelo" ; mkN "pantufa" ; mkN "slipper" ; } ; --*
lin slippery_1_A = mkA "escorregadio" ; --*
lin slippery_2_A = variants {mkA "astuto" ; mkA "escorregadio" ; } ; --*
lin slippy_A = mkA "escorregadio" ; --*
lin slip_road_N = mkN "road" ; --*
lin slip_up_N = mkN "erro" ; --*
lin slip_up_V = variants {mkV "enganar-se" ; mkV "up" ; } ; --*
lin slit_1_N = variants {mkN "buraco" ; mkN "fenda" ; mkN "fresta" ; } ; --*
lin slit_1_V2 = mkV2 (mkV "cortar") ; --*
lin slit_2_N = variants {mkN "boceta" ; mkN "buceta" ; mkN "conas" ; mkN "rata" ; mkN "vagina" ; mkN "xana" ; mkN "xavasca" ; mkN "xoxota" ; } ; --*
lin slit_4_N = variants {mkN "fenda" ; mkN "fissura" ; } ; --*
lin slither_V = variants {mkV "deslizar" ; mkV "escorregar" ; } ; --*
lin slithery_A = mkA "deslizante" ; --*
lin sliver_1_N = variants {mkN "farpa" ; mkN "lasca" ; } ; --*
lin sliver_1_V2 = variants {mkV2 (mkV "lascar") ; mkV2 (mkV "rachar") ; } ; --*
lin sliver_1_V = variants {mkV "lascar" ; mkV "rachar" ; } ; --*
lin slivovitz_N = mkN "Slivovitz" ; --*
lin slobber_1_V = mkV "babar" ; --*
lin slobber_N = mkN "baba" ; --*
lin slobber_V2 = mkV2 (mkV "babar") ; --*
lin slob_N = variants {mkN "person" ; mkN "porco" ; } ; --*
lin slogan_N = variants {mkN "cambial" ; mkN "lema" ; mkN "Lemas" ; mkN "mote" ; } ; --*
lin sloop_N = mkN "Chalupa" ; --*
lin slop_1_N = mkN "lavagem" ; --*
lin slop_1_V2 = variants {mkV2 (mkV "derramar") ; mkV2 (mkV "entornar") ; mkV2 (mkV "verter") ; } ; --*
lin slope_1_N = variants {mkN "costa" ; mkN "declive" ; mkN "declives" ; mkN "encosta" ; mkN "ladeira" ; mkN "subida" ; } ; --*
lin slope_2_N = variants {mkN "declives" ; mkN "inclinação" ; mkN "talude" ; } ; --*
lin slope_V = variants {mkV "declivar" ; mkV "inclinar" ; } ; --*
lin sloppiness_3_N = mkN "falta" ; --*
lin sloppy_4_A = mkA "folgado" ; --*
lin slops_1_N = mkN "lavagem" ; --*
lin slosh_1_V = mkV "chapinar" ; --*
lin slot_2_N = mkN "ranhura" ; --*
lin slot_3_N = variants {mkN "horário" ; mkN "slot" ; } ; --*
lin sloth_1_N = variants {mkN "bicho-preguiça" ; mkN "preguiça" ; } ; --*
lin sloth_2_N = variants {mkN "preguiça" ; mkN "sloth" ; } ; --*
lin sloth_3_N = mkN "preguiça" ; --*
lin slothful_A = variants {mkA "preguiçoso" ; mkA "vadio" ; mkA "vagaroso" ; } ; --*
lin slot_machine_N = mkN "machine" ; --*
lin slot_V2 = mkV2 (mkV "agendar") ; --*
lin slouch_1_V = mkV "relaxar" ; --*
lin slough_1_N = mkN "gangrena" ; --*
lin slough_V2 = variants {mkV2 (mkV "depenar") ; mkV2 (mkV "desplumar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin slovak_1_N = mkN "eslovaco" ; --*
lin slovak_2_N = variants {mkN "eslovaco" ; mkN "Língua" ; } ; --*
lin slovenian_A = mkA "esloveno" ; --*
lin slovenian_N = mkN "esloveno" ; --*
lin slovenliness_2_N = mkN "desleixo" ; --*
lin slovenly_A = variants {mkA "desmazelado" ; mkA "mulambento" ; mkA "muxibento" ; } ; --*
lin sloven_N = variants {mkN "person" ; mkN "porco" ; } ; --*
lin slow_1_A = variants {mkA "devagar" ; mkA "lento" ; } ; --*
lin slow_1_Adv = variants {mkAdv "devagar" ; mkAdv "lentamente" ; mkAdv "vagarosamente" ; } ; --*
lin slow_1_V2 = variants {mkV2 (mkV "desacelerar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "up") ; } ; --*
lin slow_1_V = variants {mkV "desacelerar" ; mkV "down" ; mkV "reduzir" ; mkV "up" ; } ; --*
lin slow_2_A = mkA "lento" ; --*
lin slow_2_V = variants {mkV "desacelerar" ; mkV "down" ; mkV "up" ; } ; --*
lin slow_3_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "fátuo" ; mkA "idiota" ; mkA "imbecil" ; } ; --*
lin slow_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "retardar") ; mkV2 (mkV "up") ; } ; --*
lin slow_5_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin slow_6_A = mkA "lento" ; --*
lin slow_down_1_V2 = variants {mkV2 (mkV "desacelerar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "up") ; } ; --*
lin slow_down_4_V2 = variants {mkV2 (mkV "desacelerar") ; mkV2 (mkV "down") ; } ; --*
lin slow_down_5_V = variants {mkV "descontrair" ; mkV "down" ; mkV "pegar" ; mkV "relaxar" ; mkV "up" ; } ; --*
lin slowdown_N = variants {mkN "atraso" ; mkN "operação" ; } ; --*
lin slower_Adv = mkAdv "mais" ; --*
lin slowness_2_N = variants {mkN "lentidão" ; mkN "vagarosidade" ; } ; --*
lin slowness_3_N = variants {mkN "atraso" ; mkN "retardation" ; mkN "Retardo" ; } ; --*
lin slow_up_3_V2 = variants {mkV2 (mkV "desacelerar") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "up") ; } ; --*
lin slow_worm_N = variants {mkN "ânguis" ; mkN "fragilis" ; mkN "licranço" ; } ; --*
lin sludge_1_N = variants {mkN "borra" ; mkN "lamas" ; } ; --*
lin sludge_2_N = variants {mkN "barro" ; mkN "gosma" ; mkN "lama" ; mkN "lodo" ; mkN "olho" ; } ; --*
lin slug_1_N = variants {mkN "bala" ; mkN "balaço" ; mkN "Projetil" ; mkN "Projétil" ; } ; --*
lin slug_2_N = variants {mkN "slug" ; mkN "Slug" ; } ; --*
lin slug_4_N = variants {mkN "armaceiro" ; mkN "moleirão" ; mkN "molenga" ; } ; --*
lin slug_7_N = mkN "lesma" ; --*
lin slug_8_N = variants {mkN "murro" ; mkN "ponche" ; mkN "soco" ; } ; --*
lin sluggard_N = variants {mkN "armaceiro" ; mkN "moleirão" ; mkN "molenga" ; } ; --*
lin slugger_1_N = mkN "batedor" ; --*
lin sluggish_1_A = mkA "preguisoço" ; --*
lin sluggish_2_A = mkA "lento" ; --*
lin sluggish_3_A = mkA "inerte" ; --*
lin sluggishness_1_N = mkN "letargia" ; --*
lin sluggishness_3_N = mkN "letargia" ; --*
lin sluice_1_V = variants {mkV "down" ; mkV "jorrar" ; } ; --*
lin sluicegate_N = variants {mkN "Descarregador" ; mkN "gate" ; mkN "valve" ; } ; --*
lin sluice_N = variants {mkN "canal" ; mkN "ducto" ; mkN "duto" ; } ; --*
lin sluice_valve_N = variants {mkN "Descarregador" ; mkN "gate" ; mkN "valve" ; } ; --*
lin slumber_1_N = mkN "sono" ; --*
lin slumberer_N = mkN "dorminhoca" ; --*
lin slumber_V2 = variants {mkV2 (mkV "capotar") ; mkV2 (mkV "dormir") ; mkV2 (mkV "some") ; mkV2 (mkV "Z's") ; } ; --*
lin slumber_V = variants {mkV "capotar" ; mkV "dormir" ; mkV "some" ; mkV "Z's" ; } ; --*
lin slum_N = variants {mkN "area" ; mkN "favela" ; } ; --*
lin slump_1_V2 = mkV2 (mkV "relaxar") ; --*
lin slump_1_V = mkV "relaxar" ; --*
lin slump_2_N = variants {mkN "crisis" ; mkN "depressão" ; mkN "recessão" ; } ; --*
lin slump_2_V = variants {mkV "afundar" ; mkV "down" ; } ; --*
lin slump_4_V = variants {mkV "corrigir" ; mkV "decair" ; mkV "declinar" ; } ; --*
lin slum_V = mkV "visitar" ; --*
lin slur_3_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin slushy_2_A = mkA "sentimental" ; --*
lin slut_1_N = variants {mkN "piranha" ; mkN "puta" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin slut_2_N = variants {mkN "meretriz" ; mkN "prostituta" ; mkN "woman" ; } ; --*
lin sluttish_2_A = variants {mkA "devasso" ; mkA "promíscuo" ; } ; --*
lin sly_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin slyness_N = mkN "astúcia" ; --*
lin smack_1_N = variants {mkN "batida" ; mkN "bofetada" ; mkN "estalo" ; mkN "palmada" ; mkN "tabefe" ; } ; --*
lin smack_1_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "dar") ; } ; --*
lin smack_2_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin smack_4_V2 = mkV2 (mkV "beijar") ; --*
lin smack_4_V = mkV "beijar" ; --*
lin smack_6_N = mkN "bofetada" ; --*
lin smacking_N = mkN "bofetada" ; --*
lin small_10_A = mkA "pequeno" ; --*
lin small_1_A = mkA "pequeno" ; --*
lin small_2_A = variants {mkA "de" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin small_3_A = mkA "pequeno" ; --*
lin small_4_A = mkA "pouco" ; --*
lin small_5_A = variants {mkA "humilde" ; mkA "ignoto" ; mkA "modesto" ; mkA "pequeno" ; } ; --*
lin small_7_A = variants {mkA "baixo" ; mkA "manso" ; } ; --*
lin small_8_A = mkA "diminuto" ; --*
lin small_9_A = variants {mkA "modesto" ; mkA "pequeno" ; } ; --*
lin smallish_A = mkA "pequenito" ; --*
lin small_minded_A = mkA "mesquinho" ; --*
lin smallpox_N = variants {mkN "major" ; mkN "varíola" ; } ; --*
lin smart_1_A = mkA "esperto" ; --*
lin smart_2_A = variants {mkA "chique" ; mkA "elegante" ; } ; --*
lin smart_4_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin smartness_2_N = variants {mkN "inteligência" ; mkN "talento" ; } ; --*
lin smartness_3_N = variants {mkN "estilo" ; mkN "garbo" ; mkN "modernidade" ; mkN "word" ; } ; --*
lin smartness_4_N = variants {mkN "alacridade" ; mkN "furor" ; mkN "vida" ; } ; --*
lin smart_V = mkV "doer" ; --*
lin smash_1_V2 = mkV2 (mkV "estrelar") ; --*
lin smash_2_V2 = mkV2 (mkV "quebrar") ; --*
lin smash_3_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "falir") ; mkV2 (mkV "quebrar") ; } ; --*
lin smash_5_N = variants {mkN "estrondo" ; mkN "sensação" ; mkN "sucesso" ; } ; --*
lin smash_5_V2 = mkV2 (mkV "esmagar") ; --*
lin smash_6_V2 = variants {mkV2 (mkV "falir") ; mkV2 (mkV "up") ; } ; --*
lin smasher_2_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin smasher_3_N = variants {mkN "estrondo" ; mkN "sensação" ; mkN "sucesso" ; } ; --*
lin smattering_1_N = mkN "punhado" ; --*
lin smear_1_V2 = mkV2 (mkV "lambuzar") ; --*
lin smear_1_V = mkV "lambuzar" ; --*
lin smear_2_V2 = variants {mkV2 (mkV "lambuzar") ; mkV2 (mkV "manchar") ; } ; --*
lin smear_2_V = variants {mkV "lambuzar" ; mkV "manchar" ; } ; --*
lin smear_3_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin smear_3_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "emassar") ; } ; --*
lin smear_4_N = variants {mkN "mácula" ; mkN "mancha" ; } ; --*
lin smear_4_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin smegma_N = mkN "esmegma" ; --*
lin smell_1_N = variants {mkN "cheiro" ; mkN "odor" ; mkN "odores" ; mkN "perception" ; mkN "sensation" ; } ; --*
lin smell_1_V2 = variants {mkV2 (mkV "cheirar") ; mkV2 (mkV "recender") ; } ; --*
lin smell_2_N = variants {mkN "cheiro" ; mkN "hálito" ; mkN "odor" ; mkN "odores" ; mkN "property" ; } ; --*
lin smell_2_VA = variants {mkVA (mkV "cheirar") ; mkVA (mkV "recender") ; } ; --*
lin smell_3_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin smell_3_V = variants {mkV "cheirar" ; mkV "feder" ; mkV "recender" ; } ; --*
lin smell_4_N = variants {mkN "modality" ; mkN "of" ; mkN "olfacto" ; mkN "olfato" ; } ; --*
lin smell_5_N = mkN "exalarcheiro" ; --*
lin smell_5_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "sentir") ; } ; --*
lin smelly_A = variants {mkA "fedorento" ; mkA "fétido" ; mkA "malcheiroso" ; } ; --*
lin smelt_1_N = mkN "eperlano" ; --*
lin smilax_1_N = mkN "Smilax" ; --*
lin smile_1_V = mkV "sorrir" ; --*
lin smile_2_V = mkV "sorrir" ; --*
lin smile_N = variants {mkN "riso" ; mkN "sorriso" ; } ; --*
lin smiler_2_N = variants {mkN "face" ; mkN "Fisiognomia" ; mkN "fisionomia" ; mkN "rosto" ; } ; --*
lin smiley_N = variants {mkN "emoticon" ; mkN "smiley" ; mkN "Smiley" ; } ; --*
lin smirch_1_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin smirch_2_N = variants {mkN "mácula" ; mkN "mancha" ; } ; --*
lin smirch_2_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin smirk_V = mkV "sorrir" ; --*
lin smite_2_V2 = mkV2 (mkV "apaixonar") ; --*
lin smite_3_V2 = variants {mkV2 (mkV "afligir") ; mkV2 (mkV "atribular") ; } ; --*
lin smith_10_N = mkN "ferreiro" ; --*
lin smith_1_N = variants {mkN "Douglas" ; mkN "Ian" ; mkN "Smith" ; } ; --*
lin smith_5_N = variants {mkN "Bessie" ; mkN "Smith" ; } ; --*
lin smith_8_N = variants {mkN "Adam" ; mkN "Smith" ; } ; --*
lin smith_9_N = mkN "ferreiro" ; --*
lin smithy_N = variants {mkN "forja" ; mkN "Forja" ; } ; --*
lin smock_N = variants {mkN "coat" ; mkN "gabardina" ; } ; --*
lin smog_N = mkN "smog" ; --*
lin smoke_1_N = variants {mkN "emanações" ; mkN "exalação" ; mkN "Fumo" ; mkN "gás" ; mkN "vapores" ; } ; --*
lin smoke_1_V2 = mkV2 (mkV "fumar") ; --*
lin smoke_1_V = mkV "fumar" ; --*
lin smoke_2_N = variants {mkN "fumaça" ; mkN "fumo" ; mkN "gás" ; } ; --*
lin smoke_2_V2 = mkV2 (mkV "fumegar") ; --*
lin smoke_2_V = mkV "fumegar" ; --*
lin smoke_5_N = variants {mkN "of" ; mkN "rolo" ; } ; --*
lin smoke_6_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin smoke_7_N = variants {mkN "acto" ; mkN "Tabagismo" ; } ; --*
lin smoker_1_N = variants {mkN "fumante" ; mkN "user" ; } ; --*
lin smoker_2_N = variants {mkN "despedida" ; mkN "party" ; } ; --*
lin smokestack_N = variants {mkN "canodachaminé" ; mkN "chaminé" ; } ; --*
lin smoking_1_N = variants {mkN "acto" ; mkN "Tabagismo" ; } ; --*
lin smoking_2_N = variants {mkN "fumaça" ; mkN "fumo" ; mkN "gás" ; } ; --*
lin smoky_1_A = mkA "fumegante" ; --*
lin smooth_1_A = variants {mkA "liso" ; mkA "macio" ; } ; --*
lin smooth_1_V2 = mkV2 (mkV "alisar") ; --*
lin smooth_2_V2 = variants {mkV2 (mkV "lustrar") ; mkV2 (mkV "polir") ; } ; --*
lin smooth_4_A = variants {mkA "fluente" ; mkA "fluido" ; } ; --*
lin smooth_5_A = mkA "legato" ; --*
lin smooth_8_A = variants {mkA "quieto" ; mkA "silenciosa" ; } ; --*
lin smooth_faced_A = variants {mkA "glabro" ; mkA "imberbe" ; } ; --*
lin smoothing_iron_N = variants {mkN "ferro" ; mkN "iron" ; } ; --*
lin smoothness_1_N = mkN "lisura" ; --*
lin smoothness_2_N = variants {mkN "eloquência" ; mkN "eloqüência" ; } ; --*
lin smooth_spoken_A = variants {mkA "eloquente" ; mkA "eloqüente" ; mkA "expressivo" ; } ; --*
lin smorgasbord_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin smother_1_N = variants {mkN "bagunça" ; mkN "nest" ; mkN "ninho" ; mkN "zona" ; } ; --*
lin smother_2_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin smother_3_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; } ; --*
lin smother_4_V2 = mkV2 (mkV "cobrir") ; --*
lin smother_5_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin smoulder_1_V = mkV "recalcar" ; --*
lin smoulder_2_V = mkV "fumegar" ; --*
lin smudge_2_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin smudge_V2 = variants {mkV2 (mkV "lambuzar") ; mkV2 (mkV "manchar") ; } ; --*
lin smudge_V = variants {mkV "lambuzar" ; mkV "manchar" ; } ; --*
lin smug_A = variants {mkA "cheio" ; mkA "convencido" ; mkA "presunçoso" ; mkA "vaidoso" ; } ; --*
lin smuggler_N = variants {mkN "contrabandista" ; mkN "curser" ; } ; --*
lin smuggle_V2 = mkV2 (mkV "contrabandear") ; --*
lin smuggling_N = mkN "contrabando" ; --*
lin smut_1_N = variants {mkN "black" ; mkN "fuligem" ; mkN "picumã" ; } ; --*
lin smut_4_N = variants {mkN "indecência" ; mkN "obscenidade" ; mkN "palavrão" ; mkN "vulgaridade" ; mkN "word" ; } ; --*
lin smut_5_N = variants {mkN "filme" ; mkN "pornô" ; mkN "pornografia" ; mkN "Pornografia" ; } ; --*
lin smuttiness_2_N = mkN "obscenidade" ; --*
lin smutty_1_A = variants {mkA "obsceno" ; mkA "sujo" ; mkA "verde" ; } ; --*
lin snack_N = variants {mkN "lanche" ; mkN "merenda" ; } ; --*
lin snaffle_1_V2 = variants {mkV2 (mkV "arrebatar") ; mkV2 (mkV "up") ; } ; --*
lin snag_1_V2 = mkV2 (mkV "obter") ; --*
lin snag_3_N = variants {mkN "buraco" ; mkN "fenda" ; mkN "rasgão" ; mkN "rasgo" ; } ; --*
lin snag_4_N = mkN "obstáculo" ; --*
lin snail_1_N = variants {mkN "caracol" ; mkN "caramujo" ; } ; --*
lin snail_2_N = variants {mkN "escargot" ; mkN "Escargot" ; } ; --*
lin snake_1_N = variants {mkN "cobra" ; mkN "cobras" ; mkN "ofídio" ; mkN "serpente" ; mkN "Serpentes" ; } ; --*
lin snake_1_V = mkV "serpentear" ; --*
lin snake_2_V = mkV "serpentear" ; --*
lin snake_3_N = variants {mkN "Rio" ; mkN "River" ; } ; --*
lin snake_4_N = mkN "Hidra" ; --*
lin snake_charmer_N = mkN "charmer" ; --*
lin snap_10_V2 = mkV2 (mkV "estalar") ; --*
lin snap_11_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin snap_11_V = variants {mkV "desmoronar" ; mkV "down" ; mkV "it" ; } ; --*
lin snap_13_V2 = variants {mkV2 (mkV "fotografar") ; mkV2 (mkV "tirar") ; } ; --*
lin snap_1_N = variants {mkN "agarrão" ; mkN "pegada" ; mkN "pegar" ; } ; --*
lin snap_1_V2 = variants {mkV2 (mkV "responder") ; mkV2 (mkV "rosnar") ; } ; --*
lin snap_2_N = mkN "frente" ; --*
lin snap_2_V = variants {mkV "cindir" ; mkV "dividir" ; mkV "rasgar" ; } ; --*
lin snap_6_N = mkN "estalo" ; --*
lin snap_8_N = mkN "elasticidade" ; --*
lin snap_8_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "up") ; } ; --*
lin snap_9_N = variants {mkN "foto" ; mkN "fotografia" ; } ; --*
lin snap_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "quebrar") ; } ; --*
lin snapshot_N = variants {mkN "foto" ; mkN "fotografia" ; } ; --*
lin snap_up_V2 = variants {mkV2 (mkV "arrebatar") ; mkV2 (mkV "up") ; } ; --*
lin snare_1_N = mkN "insídia" ; --*
lin snare_1_V2 = variants {mkV2 (mkV "arapucar") ; mkV2 (mkV "armadilhar") ; } ; --*
lin snare_2_N = variants {mkN "Caixa" ; mkN "drum" ; } ; --*
lin snare_4_N = mkN "caixa" ; --*
lin snare_5_N = mkN "alçapão" ; --*
lin snare_drum_N = variants {mkN "Caixa" ; mkN "drum" ; } ; --*
lin snarl_1_V = variants {mkV "responder" ; mkV "rosnar" ; } ; --*
lin snarl_3_V2 = variants {mkV2 (mkV "emaranhar") ; mkV2 (mkV "misturar") ; } ; --*
lin snarl_up_N = variants {mkN "congestionamento" ; mkN "engarrafamento" ; mkN "jam" ; } ; --*
lin snatch_1_N = variants {mkN "bocado" ; mkN "pedaço" ; mkN "porção" ; } ; --*
lin snatch_1_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "up") ; } ; --*
lin snatch_2_N = variants {mkN "boceta" ; mkN "buceta" ; mkN "conas" ; mkN "rata" ; mkN "vagina" ; mkN "xana" ; mkN "xavasca" ; mkN "xoxota" ; } ; --*
lin snatch_3_N = variants {mkN "rapto" ; mkN "sequestro" ; mkN "seqüestro" ; mkN "Seqüestro" ; mkN "Sequestros" ; } ; --*
lin snatch_3_V2 = variants {mkV2 (mkV "abduzir") ; mkV2 (mkV "raptar") ; mkV2 (mkV "sequestrar") ; mkV2 (mkV "seqüestrar") ; } ; --*
lin snatch_5_N = variants {mkN "agarrão" ; mkN "pegada" ; mkN "pegar" ; } ; --*
lin snatcher_2_N = variants {mkN "raptor" ; mkN "sequestrador" ; mkN "seqüestrador" ; } ; --*
lin sneak_1_V = variants {mkV "esgueirar" ; mkV "ir" ; } ; --*
lin sneak_2_V2 = mkV2 (mkV "roubar") ; --*
lin sneak_3_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin sneak_3_V = variants {mkV "afanar" ; mkV "furtar" ; mkV "larapiar" ; mkV "roubar" ; mkV "surrupiar" ; } ; --*
lin sneak_4_V2 = mkV2 (mkV "passar") ; --*
lin sneak_out_V = variants {mkV "away" ; mkV "off" ; mkV "out" ; } ; --*
lin sneak_thief_N = variants {mkN "chouriço" ; mkN "gatuno" ; mkN "thief" ; } ; --*
lin sneaky_1_A = mkA "malandro" ; --*
lin sneaky_2_A = variants {mkA "furtivo" ; mkA "sub-reptício" ; } ; --*
lin sneer_1_V = mkV "desdenhar" ; --*
lin sneeze_N = mkN "espirro" ; --*
lin sneeze_V = mkV "espirrar" ; --*
lin snicker_V = mkV "casquinar" ; --*
lin sniff_1_V2 = mkV2 (mkV "cheirar") ; --*
lin sniff_out_V2 = mkV2 (mkV "out") ; --*
lin sniffy_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin snigger_V = mkV "casquinar" ; --*
lin snip_1_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "dividir") ; mkV2 (mkV "off") ; } ; --*
lin snip_2_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin snipe_3_V2 = variants {mkV2 (mkV "agredir") ; mkV2 (mkV "atacar") ; mkV2 (mkV "out") ; } ; --*
lin sniper_N = variants {mkN "atirador" ; mkN "franco-atirador" ; } ; --*
lin snips_N = mkN "tesoura" ; --*
lin snitch_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "roubar") ; } ; --*
lin snivel_1_V = variants {mkV "choramingar" ; mkV "lamuriar" ; } ; --*
lin snivel_2_V = mkV "fungar" ; --*
lin snobbish_A = mkA "esnobe" ; --*
lin snog_V = variants {mkV "beijar" ; mkV "dar" ; } ; --*
lin snooker_N = mkN "sinuca" ; --*
lin snoop_V = mkV "espiar" ; --*
lin snooty_A = variants {mkA "big" ; mkA "ranhoso" ; } ; --*
lin snooze_N = variants {mkN "sesta" ; mkN "sleep" ; mkN "soneca" ; mkN "winks" ; } ; --*
lin snooze_V = variants {mkV "cochilar" ; mkV "dormitar" ; mkV "tirar" ; } ; --*
lin snore_2_N = mkN "ronco" ; --*
lin snore_V = variants {mkV "logs" ; mkV "roncar" ; mkV "wood" ; } ; --*
lin snorkel_1_N = mkN "escafandro" ; --*
lin snort_1_V2 = mkV2 (mkV "bufar") ; --*
lin snort_2_V = mkV "bufar" ; --*
lin snot_2_N = mkN "muco" ; --*
lin snot_nosed_1_A = variants {mkA "big" ; mkA "ranhoso" ; } ; --*
lin snot_nosed_2_A = mkA "ranhoso" ; --*
lin snotty_1_A = variants {mkA "big" ; mkA "ranhoso" ; } ; --*
lin snotty_2_A = mkA "ranhoso" ; --*
lin snout_1_N = mkN "focinho" ; --*
lin snout_2_N = variants {mkN "bocal" ; mkN "focinho" ; } ; --*
lin snow_1_N = variants {mkN "nevada" ; mkN "neve" ; mkN "Neve" ; } ; --*
lin snow_1_V = mkV "nevar" ; --*
lin snow_2_N = mkN "neve" ; --*
lin snow_2_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "enganar") ; mkV2 (mkV "false") ; mkV2 (mkV "the") ; } ; --*
lin snow_3_N = variants {mkN "Charles" ; mkN "P." ; mkN "Percy" ; mkN "Snow" ; } ; --*
lin snowball_4_N = mkN "bola" ; --*
lin snowboarding_N = mkN "Snowboard" ; --*
lin snowboard_N = variants {mkN "Snow" ; mkN "Snowboard" ; } ; --*
lin snowdrop_N = variants {mkN "anemone" ; mkN "fura-neve" ; mkN "quinquefolia" ; } ; --*
lin snowfall_N = variants {mkN "nevada" ; mkN "neve" ; mkN "Neve" ; } ; --*
lin snowflake_1_N = variants {mkN "floco" ; mkN "flocodeneve" ; } ; --*
lin snowman_N = mkN "boneco" ; --*
lin snowmobile_N = mkN "Moto" ; --*
lin snowstorm_N = variants {mkN "nevão" ; mkN "nevasca" ; mkN "tempestade" ; } ; --*
lin snow_white_A = mkA "nevoso" ; --*
lin snowy_3_A = mkA "nevoso" ; --*
lin snub_1_V2 = variants {mkV2 (mkV "desconsiderar") ; mkV2 (mkV "esnobar") ; mkV2 (mkV "ignorar") ; } ; --*
lin snub_2_N = variants {mkN "desprezo" ; mkN "esnobada" ; mkN "shoulder" ; } ; --*
lin snub_2_V2 = mkV2 (mkV "repelir") ; --*
lin snub_nosed_A = mkA "pug-nariz" ; --*
lin snuffers_N = mkN "espevitadeira" ; --*
lin snuffle_2_V = mkV "fungar" ; --*
lin snuff_out_1_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin snuff_out_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin snug_2_A = mkA "justo" ; --*
lin snug_4_A = variants {mkA "acolhedor" ; mkA "confortável" ; mkA "íntimo" ; } ; --*
lin snuggle_1_V = variants {mkV "acomodar" ; mkV "close" ; } ; --*
lin snuggle_2_V2 = variants {mkV2 (mkV "acariciar") ; mkV2 (mkV "aconchegar") ; mkV2 (mkV "aconchegar-se") ; } ; --*
lin so_2_Adv = mkAdv "assim" ; --*
lin so_8_Adv = variants {mkAdv "depois" ; mkAdv "em" ; mkAdv "so" ; mkAdv "then" ; } ; --*
lin so_9_Adv = variants {mkAdv "assim" ; mkAdv "consequentemente" ; mkAdv "daqui" ; mkAdv "de" ; mkAdv "dessa" ; mkAdv "desse" ; mkAdv "em" ; mkAdv "por" ; mkAdv "portanto" ; } ; --*
lin soak_1_N = mkN "imersão" ; --*
lin soak_1_V = mkV "ficar" ; --*
lin soak_2_V2 = mkV2 (mkV "roubar") ; --*
lin soak_2_V = mkV "roubar" ; --*
lin soak_3_V2 = variants {mkV2 (mkV "demolhar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "molhar") ; } ; --*
lin soak_4_V2 = mkV2 (mkV "empenhar") ; --*
lin soak_5_V2 = mkV2 (mkV "socar") ; --*
lin soak_5_V = mkV "socar" ; --*
lin soak_6_V2 = mkV2 (mkV "embriagar") ; --*
lin soak_6_V = mkV "embriagar" ; --*
lin soak_7_V2 = variants {mkV2 (mkV "embriagar") ; mkV2 (mkV "enebriar") ; mkV2 (mkV "it") ; } ; --*
lin soak_7_V = variants {mkV "embriagar" ; mkV "enebriar" ; mkV "it" ; } ; --*
lin soak_8_V2 = mkV2 (mkV "imbuir") ; --*
lin soak_9_V2 = mkV2 (mkV "calentar") ; --*
lin soak_9_V = mkV "calentar" ; --*
lin soaker_1_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin soaker_2_N = variants {mkN "alcoólatra" ; mkN "bêbado" ; mkN "borracho" ; } ; --*
lin soak_up_1_V = variants {mkV "absorver" ; mkV "in" ; mkV "up" ; } ; --*
lin soak_up_2_V = variants {mkV "focar" ; mkV "up" ; } ; --*
lin so_and_so_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin soap_1_N = variants {mkN "sabão" ; mkN "sabões" ; mkN "sabonete" ; } ; --*
lin soapbox_2_N = variants {mkN "cátedra" ; mkN "estrado" ; mkN "pódio" ; mkN "púlpito" ; mkN "tribuna" ; } ; --*
lin soap_bubble_N = mkN "bubble" ; --*
lin soap_opera_N = mkN "opera" ; --*
lin soapstone_N = mkN "Esteatite" ; --*
lin soapsuds_N = mkN "espuma" ; --*
lin soap_V2 = mkV2 (mkV "ensaboar") ; --*
lin soar_3_V = mkV "voar" ; --*
lin soar_4_V = mkV "subir" ; --*
lin sob_1_N = variants {mkN "Dispneia" ; mkN "Dispnéia" ; mkN "of" ; } ; --*
lin sob_2_N = variants {mkN "filha" ; mkN "filho" ; mkN "fucker" ; mkN "of" ; } ; --*
lin sober_1_A = mkA "sóbrio" ; --*
lin sober_2_A = variants {mkA "grave" ; mkA "solene" ; } ; --*
lin sober_3_A = mkA "sóbrio" ; --*
lin sober_4_A = variants {mkA "sério" ; mkA "sombrio" ; } ; --*
lin soberness_1_N = mkN "sobriedade" ; --*
lin soberness_2_N = variants {mkN "gravidade" ; mkN "sobriedade" ; } ; --*
lin sobriety_1_N = mkN "sobriedade" ; --*
lin sobriety_3_N = variants {mkN "gravidade" ; mkN "sobriedade" ; } ; --*
lin sobriquet_N = variants {mkN "alcunha" ; mkN "apelido" ; mkN "cognome" ; mkN "sobrenome" ; } ; --*
lin so_called_A = variants {mkA "assim" ; mkA "chamado" ; mkA "dito" ; mkA "suposto" ; } ; --*
lin soccer_N = variants {mkN "football" ; mkN "futebol" ; } ; --*
lin sociable_1_A = mkA "sociável" ; --*
lin sociable_2_A = mkA "sociável" ; --*
lin social_1_A = mkA "social" ; --*
lin social_2_A = mkA "social" ; --*
lin social_3_A = mkA "social" ; --*
lin social_4_A = mkA "social" ; --*
lin social_5_A = mkA "social" ; --*
lin social_6_A = mkA "social" ; --*
lin socialism_1_N = variants {mkN "socialismo" ; mkN "Socialismo" ; } ; --*
lin socialism_2_N = variants {mkN "economy" ; mkN "socialismo" ; } ; --*
lin socialist_A = mkA "socialista" ; --*
lin socialistic_A = mkA "socialista" ; --*
lin socialist_N = mkN "socialista" ; --*
lin socialite_N = variants {mkN "Socialite" ; mkN "Socialites" ; } ; --*
lin social_work_N = mkN "work" ; --*
lin societal_A = mkA "social" ; --*
lin society_1_N = mkN "sociedade" ; --*
lin society_2_N = variants {mkN "club" ; mkN "clube" ; mkN "guilda" ; mkN "ordem" ; mkN "sociedade" ; } ; --*
lin society_3_N = mkN "companherismo" ; --*
lin society_4_N = variants {mkN "alta" ; mkN "monde" ; mkN "set" ; mkN "society" ; mkN "ton" ; } ; --*
lin sociobiology_N = variants {mkN "sociobiologia" ; mkN "Sociobiologia" ; } ; --*
lin sociolinguistics_N = mkN "Sociolinguística" ; --*
lin sociology_N = variants {mkN "sociologia" ; mkN "Sociologia" ; } ; --*
lin sociometry_N = mkN "sociometria" ; --*
lin sock_1_N = variants {mkN "meia" ; mkN "peúga" ; } ; --*
lin sock_2_N = variants {mkN "biruta" ; mkN "cone" ; mkN "sleeve" ; mkN "sock" ; } ; --*
lin socket_3_N = variants {mkN "estojo" ; mkN "soquete" ; } ; --*
lin sock_V2 = variants {mkV2 (mkV "socar") ; mkV2 (mkV "surrar") ; } ; --*
lin sod_2_N = variants {mkN "dismutase" ; mkN "superóxido" ; } ; --*
lin sod_3_N = variants {mkN "Bugre" ; mkN "praticarsodomia" ; } ; --*
lin sod_4_N = variants {mkN "cara" ; mkN "rapaz" ; mkN "tio" ; } ; --*
lin soda_1_N = variants {mkN "ash" ; mkN "carbonate" ; mkN "Carbonato" ; mkN "soda" ; } ; --*
lin soda_2_N = variants {mkN "pop" ; mkN "refrigerante" ; mkN "water" ; } ; --*
lin soda_water_1_N = variants {mkN "águas" ; mkN "soda" ; mkN "water" ; } ; --*
lin soda_water_2_N = variants {mkN "pop" ; mkN "refrigerante" ; mkN "water" ; } ; --*
lin sodden_A = mkA "encharcado" ; --*
lin sodium_N = variants {mkN "number" ; mkN "Sodio" ; mkN "sódio" ; } ; --*
lin sodom_2_N = mkN "Sodoma" ; --*
lin sodomite_N = variants {mkN "Bugre" ; mkN "praticarsodomia" ; } ; --*
lin sodomy_1_N = variants {mkN "bestialidade" ; mkN "zoofilia" ; mkN "zoossexualidade" ; } ; --*
lin sodomy_2_N = variants {mkN "intercourse" ; mkN "sex" ; mkN "sodomia" ; } ; --*
lin sofa_N = variants {mkN "canapé" ; mkN "sofá" ; } ; --*
lin soffit_N = mkN "sofito" ; --*
lin sofia_PN = variants {mkPN "capital" ; mkPN "Sofia" ; mkPN "Sófia" ; } ; --*
lin soft_12_A = mkA "indulgente" ; --*
lin soft_13_A = mkA "suave" ; --*
lin soft_15_A = variants {mkA "brando" ; mkA "flácido" ; mkA "fofo" ; mkA "frouxo" ; mkA "mole" ; } ; --*
lin soft_1_A = mkA "macio" ; --*
lin soft_2_A = mkA "brando" ; --*
lin soft_3_A = mkA "suave" ; --*
lin soft_4_A = mkA "mole" ; --*
lin soft_7_A = mkA "piano" ; --*
lin softball_2_N = variants {mkN "game" ; mkN "Softbol" ; } ; --*
lin soften_2_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "suavizar") ; } ; --*
lin soften_3_V2 = mkV2 (mkV "amolecer") ; --*
lin soften_3_V = mkV "amolecer" ; --*
lin soften_4_V2 = mkV2 (mkV "amortecer") ; --*
lin soften_5_V2 = mkV2 (mkV "moderar") ; --*
lin soften_6_V2 = variants {mkV2 (mkV "abrandar") ; mkV2 (mkV "debilitar") ; mkV2 (mkV "suavizar") ; mkV2 (mkV "temperar") ; } ; --*
lin soften_7_V = mkV "suavizar" ; --*
lin softening_N = mkN "amaciamento" ; --*
lin softness_7_N = variants {mkN "macieza" ; mkN "suavidade" ; } ; --*
lin software_N = variants {mkN "package" ; mkN "program" ; mkN "software" ; mkN "Software" ; mkN "system" ; } ; --*
lin softwood_N = mkN "bosque" ; --*
lin soggy_3_A = mkA "inerte" ; --*
lin soho_1_PN = variants {mkPN "of" ; mkPN "SoHo" ; } ; --*
lin soho_2_PN = mkPN "Soho" ; --*
lin soil_1_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin soil_2_N = variants {mkN "solo" ; mkN "Solo" ; mkN "terra" ; } ; --*
lin soil_3_N = variants {mkN "solo" ; mkN "solos" ; mkN "terra" ; } ; --*
lin soil_4_N = mkN "território" ; --*
lin soiling_N = mkN "contaminação" ; --*
lin soil_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; mkV2 (mkV "sujar") ; } ; --*
lin sojourn_N = mkN "estadia" ; --*
lin sojourn_V = mkV "peregrinar" ; --*
lin solace_1_N = mkN "consolo" ; --*
lin solace_3_N = variants {mkN "conforto" ; mkN "consolação" ; mkN "consolo" ; } ; --*
lin solace_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "confortar") ; mkV2 (mkV "consolar") ; mkV2 (mkV "reconfortar") ; } ; --*
lin solar_A = mkA "solar" ; --*
lin solarium_N = variants {mkN "lounge" ; mkN "parlor" ; mkN "parlour" ; mkN "porch" ; mkN "solário" ; } ; --*
lin solder_N = variants {mkN "luto" ; mkN "solda" ; mkN "Solda" ; } ; --*
lin solder_V2 = mkV2 (mkV "soldar") ; --*
lin soldier_1_N = variants {mkN "militar" ; mkN "soldado" ; } ; --*
lin soldier_V = mkV "servir" ; --*
lin soldiery_N = variants {mkN "exército" ; mkN "milícia" ; mkN "personnel" ; mkN "tropas" ; } ; --*
lin sole_1_A = mkA "exclusivo" ; --*
lin sole_1_N = variants {mkN "Planta" ; mkN "sola" ; } ; --*
lin sole_2_A = variants {mkA "solitário" ; mkA "único" ; } ; --*
lin sole_2_N = variants {mkN "of" ; mkN "solha" ; } ; --*
lin sole_3_N = variants {mkN "planta" ; mkN "sola" ; } ; --*
lin solecism_N = variants {mkN "gafe" ; mkN "pas" ; mkN "solecismo" ; } ; --*
lin solemn_1_A = variants {mkA "grave" ; mkA "solene" ; } ; --*
lin solemn_2_A = mkA "sincero" ; --*
lin solemnity_1_N = mkN "solenidade" ; --*
lin solemnity_2_N = variants {mkN "seriedade" ; mkN "solenidade" ; } ; --*
lin solemnization_1_N = mkN "solenidade" ; --*
lin solenoid_N = variants {mkN "Solenoide" ; mkN "Solenóide" ; } ; --*
lin soleus_N = variants {mkN "muscle" ; mkN "Músculo" ; } ; --*
lin solfege_1_N = mkN "Solmização" ; --*
lin solicit_1_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin solicit_2_V2 = variants {mkV2 (mkV "azarar") ; mkV2 (mkV "galantear") ; mkV2 (mkV "namorar") ; } ; --*
lin solicit_3_V = mkV "abordar" ; --*
lin solicit_5_V = mkV "pedir" ; --*
lin solicitation_2_N = variants {mkN "apelo" ; mkN "coleção" ; mkN "solicitação" ; } ; --*
lin solicitorFem_2_N = mkN "advogado" ; --*
lin solicitorMasc_2_N = mkN "advogado" ; --*
lin solicitous_1_A = mkA "solícito" ; --*
lin solicitous_2_A = mkA "solícito" ; --*
lin solicitude_N = mkN "solicitude" ; --*
lin solid_11_A = mkA "sólido" ; --*
lin solid_15_A = mkA "unânime" ; --*
lin solid_1_A = mkA "sólido" ; --*
lin solid_1_N = variants {mkN "matéria" ; mkN "sólida" ; mkN "sólido" ; } ; --*
lin solid_2_A = mkA "sólido" ; --*
lin solid_2_N = variants {mkN "sólido" ; mkN "state" ; } ; --*
lin solid_3_A = mkA "sólido" ; --*
lin solid_3_N = variants {mkN "sólida" ; mkN "sólido" ; } ; --*
lin solid_7_A = variants {mkA "sólido" ; mkA "substancial" ; } ; --*
lin solidarity_N = variants {mkN "coesão" ; mkN "solidariedade" ; } ; --*
lin solidification_N = mkN "endurecimento" ; --*
lin solidify_1_V2 = mkV2 (mkV "solidificar") ; --*
lin solidify_1_V = mkV "solidificar" ; --*
lin solidify_2_V = mkV "solidificar" ; --*
lin solidness_1_N = variants {mkN "sólido" ; mkN "state" ; } ; --*
lin solid_state_2_A = mkA "estado" ; --*
lin soliloquy_1_N = mkN "monólogo" ; --*
lin solingen_PN = mkPN "Solingen" ; --*
lin solipsism_N = variants {mkN "solipsismo" ; mkN "Solipsismo" ; } ; --*
lin solitaire_4_N = variants {mkN "paciência" ; mkN "Paciência" ; } ; --*
lin solitary_1_A = variants {mkA "só" ; mkA "solitário" ; mkA "sozinho" ; } ; --*
lin solitary_3_A = variants {mkA "solitário" ; mkA "sozinho" ; } ; --*
lin solitary_4_A = variants {mkA "solitário" ; mkA "único" ; } ; --*
lin solitary_5_A = mkA "solitário" ; --*
lin solitude_1_N = mkN "solidão" ; --*
lin solitude_2_N = variants {mkN "solidão" ; mkN "solitude" ; } ; --*
lin solmization_2_N = mkN "Solmização" ; --*
lin solo_1_N = mkN "solo" ; --*
lin solo_2_N = mkN "solo" ; --*
lin solomon_N = mkN "Salomão" ; --*
lin solon_PN = variants {mkPN "estadista" ; mkPN "leader" ; } ; --*
lin solstice_N = mkN "solstício" ; --*
lin solubility_1_N = mkN "solubilidade" ; --*
lin solubility_3_N = mkN "solubilidade" ; --*
lin soluble_1_A = mkA "solúvel" ; --*
lin soluble_2_A = mkA "solúvel" ; --*
lin solute_N = mkN "soluto" ; --*
lin solution_1_N = variants {mkN "solução" ; mkN "soluto" ; mkN "Soluto" ; } ; --*
lin solution_2_N = variants {mkN "resposta" ; mkN "solução" ; } ; --*
lin solution_3_N = mkN "solução" ; --*
lin solution_5_N = mkN "solução" ; --*
lin solvation_N = mkN "solvatação" ; --*
lin solve_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resolver") ; } ; --*
lin solve_2_V2 = mkV2 (mkV "resolver") ; --*
lin solvent_1_N = variants {mkN "agent" ; mkN "solvente" ; mkN "Solventes" ; } ; --*
lin solvent_2_N = variants {mkN "resposta" ; mkN "solução" ; } ; --*
lin solvent_A = mkA "solvente" ; --*
lin soma_2_N = variants {mkN "soma" ; mkN "Soma" ; } ; --*
lin soma_3_N = variants {mkN "anatomia" ; mkN "body" ; mkN "carne" ; mkN "corpo" ; } ; --*
lin somalian_A = variants {mkA "somali" ; mkA "somáli" ; mkA "somaliano" ; mkA "somaliense" ; } ; --*
lin somalianFem_N = mkN "somali" ; --*
lin somalianMasc_N = mkN "somali" ; --*
lin somalia_PN = variants {mkPN "Somalia" ; mkPN "Somália" ; } ; --*
lin somali_A = variants {mkA "somali" ; mkA "somáli" ; mkA "somaliano" ; mkA "somaliense" ; } ; --*
lin somaliFem_1_N = mkN "somali" ; --*
lin somaliFem_2_N = variants {mkN "língua" ; mkN "somali" ; } ; --*
lin somaliMasc_1_N = mkN "somali" ; --*
lin somaliMasc_2_N = variants {mkN "língua" ; mkN "somali" ; } ; --*
lin soman_N = mkN "Soman" ; --*
lin somatic_A = variants {mkA "corpóreo" ; mkA "somático" ; } ; --*
lin somatotropin_1_N = variants {mkN "growth" ; mkN "Hormonas" ; mkN "hormone" ; mkN "hormônio" ; } ; --*
lin somber_1_A = mkA "sóbrio" ; --*
lin somber_2_A = variants {mkA "escuro" ; mkA "lúgubre" ; mkA "sombrio" ; mkA "soturno" ; } ; --*
lin sombre_1_A = mkA "sóbrio" ; --*
lin sombre_2_A = variants {mkA "escuro" ; mkA "lúgubre" ; mkA "sombrio" ; mkA "soturno" ; } ; --*
lin sombreness_2_N = mkN "pessimismo" ; --*
lin sombreness_3_N = variants {mkN "gravidade" ; mkN "sobriedade" ; } ; --*
lin sombrero_2_N = variants {mkN "sombreiro" ; mkN "sombrero" ; } ; --*
lin someday_Adv = mkAdv "um" ; --*
lin somehow_1_Adv = variants {mkAdv "por" ; mkAdv "some" ; } ; --*
lin somehow_1_AdV = variants {mkAdV "por" ; mkAdV "some" ; } ; --*
lin someplace_Adv = mkAdv "algum" ; --*
lin somerset_1_PN = mkPN "Somerset" ; --*
lin somesthesia_1_N = variants {mkN "sensação" ; mkN "sensation" ; } ; --*
lin sometimes_Adv = variants {mkAdv "as" ; mkAdv "às" ; mkAdv "outrora" ; mkAdv "por" ; mkAdv "uma" ; } ; --*
lin sometimes_AdV = variants {mkAdV "as" ; mkAdV "às" ; mkAdV "outrora" ; mkAdV "por" ; mkAdV "uma" ; } ; --*
lin someway_1_Adv = variants {mkAdv "por" ; mkAdv "some" ; } ; --*
lin somewhat_1_Adv = variants {mkAdv "fracamente" ; mkAdv "lestamente" ; mkAdv "ligeiramente" ; mkAdv "meio" ; mkAdv "or" ; } ; --*
lin somewhat_2_Adv = variants {mkAdv "com" ; mkAdv "razoavelmente" ; } ; --*
lin somewhere_Adv = mkAdv "algum" ; --*
lin sommelier_N = variants {mkN "escansão" ; mkN "steward" ; mkN "waiter" ; } ; --*
lin somnambulism_N = mkN "sonambulismo" ; --*
lin somnambulist_N = variants {mkN "sonâmbula" ; mkN "sonâmbulo" ; } ; --*
lin somnolence_N = mkN "sonolência" ; --*
lin somnolent_A = mkA "sonolento" ; --*
lin son_1_N = variants {mkN "criança" ; mkN "filho" ; mkN "menino" ; } ; --*
lin son_2_N = variants {mkN "o" ; mkN "Palavra" ; } ; --*
lin sonar_N = variants {mkN "sonar" ; mkN "Sonar" ; mkN "sounder" ; } ; --*
lin sonata_N = mkN "sonata" ; --*
lin song_1_N = variants {mkN "canção" ; mkN "cantiga" ; } ; --*
lin song_3_N = variants {mkN "canção" ; mkN "cantoria" ; } ; --*
lin song_4_N = mkN "canto" ; --*
lin songbird_N = variants {mkN "aves" ; mkN "Passeri" ; } ; --*
lin songbook_N = variants {mkN "cancioneiro" ; mkN "livro" ; } ; --*
lin songster_1_N = variants {mkN "compositor" ; mkN "maker" ; } ; --*
lin songster_3_N = variants {mkN "aves" ; mkN "Passeri" ; } ; --*
lin songwriter_N = variants {mkN "compositor" ; mkN "maker" ; } ; --*
lin son_in_law_N = mkN "genro" ; --*
lin sonnet_N = mkN "soneto" ; --*
lin sonny_N = variants {mkN "boy" ; mkN "filho" ; mkN "garoto" ; mkN "menino" ; mkN "moço" ; } ; --*
lin sonography_N = variants {mkN "Ultra" ; mkN "Ultra-som" ; mkN "ultrasonografia" ; mkN "Ultrassom" ; } ; --*
lin sonsy_1_A = mkA "peituda" ; --*
lin soon_Adv = variants {mkAdv "brevemente" ; mkAdv "já" ; mkAdv "logo" ; mkAdv "long" ; mkAdv "pronto" ; } ; --*
lin soon_AdV = variants {mkAdV "brevemente" ; mkAdV "já" ; mkAdV "logo" ; mkAdV "long" ; mkAdV "pronto" ; } ; --*
lin sooner_1_Adv = mkAdv "mais" ; --*
lin sooner_2_Adv = variants {mkAdv "de" ; mkAdv "preferencialmente" ; mkAdv "preferivelmente" ; } ; --*
lin soonest_Adv = mkAdv "o" ; --*
lin soothe_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "confortar") ; mkV2 (mkV "consolar") ; mkV2 (mkV "reconfortar") ; } ; --*
lin soothe_2_V2 = mkV2 (mkV "acalmar") ; --*
lin soothing_1_A = mkA "aliviar" ; --*
lin soothing_2_A = variants {mkA "acalmar" ; mkA "relaxar" ; } ; --*
lin sooth_N = mkN "verdade" ; --*
lin soothsayer_N = variants {mkN "adivinha" ; mkN "adivinhão" ; mkN "adivinho" ; } ; --*
lin soot_N = variants {mkN "black" ; mkN "fuligem" ; mkN "picumã" ; } ; --*
lin sop_2_V2 = variants {mkV2 (mkV "ensopar") ; mkV2 (mkV "through") ; } ; --*
lin sop_3_N = variants {mkN "operating" ; mkN "Procedimento" ; mkN "procedure" ; } ; --*
lin sop_4_V2 = variants {mkV2 (mkV "demolhar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "molhar") ; } ; --*
lin sophism_N = mkN "sofisma" ; --*
lin sophistFem_1_N = mkN "Sofista" ; --*
lin sophisticated_1_A = mkA "sofisticado" ; --*
lin sophisticate_N = variants {mkN "cosmopolita" ; mkN "of" ; } ; --*
lin sophistication_1_N = mkN "edificação" ; --*
lin sophistication_2_N = mkN "sofisma" ; --*
lin sophistication_4_N = mkN "sofisticação" ; --*
lin sophistMasc_1_N = mkN "Sofista" ; --*
lin sophistry_N = mkN "sofisma" ; --*
lin soporific_1_A = variants {mkA "soporífero" ; mkA "soporífico" ; } ; --*
lin soporific_2_A = variants {mkA "soporífero" ; mkA "soporífico" ; } ; --*
lin soporific_N = variants {mkN "hipnótico" ; mkN "Hipnótico" ; } ; --*
lin soppy_1_A = mkA "encharcado" ; --*
lin soppy_2_A = mkA "sentimental" ; --*
lin soprano_1_N = mkN "soprano" ; --*
lin soprano_2_N = mkN "soprano" ; --*
lin soprano_3_N = mkN "soprano" ; --*
lin sorbet_N = variants {mkN "ice" ; mkN "sorvete" ; } ; --*
lin sorcerer_N = variants {mkN "assistente" ; mkN "bruxo" ; mkN "feiticeiro" ; mkN "Feiticeiro" ; mkN "mágico" ; mkN "mago" ; mkN "sortílego" ; mkN "taumaturgo" ; } ; --*
lin sorceress_N = variants {mkN "feiticeiro" ; mkN "mágico" ; } ; --*
lin sorcery_N = variants {mkN "art" ; mkN "encanto" ; mkN "feitiço" ; mkN "magia" ; mkN "Magia" ; mkN "magic" ; } ; --*
lin sordid_1_A = mkA "imundo" ; --*
lin sordid_3_A = mkA "sórdido" ; --*
lin sordidness_1_N = variants {mkN "esqualidez" ; mkN "esqualor" ; } ; --*
lin sore_1_A = variants {mkA "magoado" ; mkA "ofendido" ; mkA "sensível" ; mkA "terno" ; } ; --*
lin sore_2_A = variants {mkA "dolorido" ; mkA "doloroso" ; mkA "lamentável" ; mkA "triste" ; } ; --*
lin sore_3_A = variants {mkA "irado" ; mkA "zangado" ; } ; --*
lin sore_N = variants {mkN "chaga" ; mkN "úlcera" ; } ; --*
lin soreness_1_N = mkN "dor" ; --*
lin sorghum_2_N = mkN "Sorghum" ; --*
lin sorghum_3_N = variants {mkN "molasses" ; mkN "sorgo" ; } ; --*
lin sorority_N = mkN "sororidade" ; --*
lin sorption_N = variants {mkN "adsorção" ; mkN "sorção" ; } ; --*
lin sorrel_3_N = variants {mkN "sabdariffa" ; mkN "sorrel" ; mkN "Vinagreira" ; } ; --*
lin sorrel_A = mkA "baio" ; --*
lin sorrow_1_N = variants {mkN "desgosto" ; mkN "dor" ; mkN "mágoa" ; mkN "pesar" ; mkN "tristeza" ; } ; --*
lin sorrow_2_N = variants {mkN "mágoa" ; mkN "pesar" ; mkN "remorso" ; mkN "terpena" ; mkN "tristeza" ; } ; --*
lin sorrow_3_N = variants {mkN "aflição" ; mkN "dor" ; mkN "mágoa" ; mkN "pesar" ; mkN "tristeza" ; } ; --*
lin sorrow_4_N = variants {mkN "pesar" ; mkN "tristeza" ; } ; --*
lin sorrowful_A = mkA "pesaroso" ; --*
lin sorrow_V = variants {mkV "afligir-se" ; mkV "magoar" ; mkV "sofrer" ; } ; --*
lin sorry_2_A = variants {mkA "deplorável" ; mkA "lamentável" ; } ; --*
lin sorry_4_A = variants {mkA "enjoado" ; mkA "entristecedor" ; mkA "ermo" ; mkA "escuro" ; mkA "horrendo" ; mkA "horrível" ; mkA "lastimável" ; mkA "melancólico" ; mkA "nebuloso" ; mkA "sombrio" ; } ; --*
lin sort_1_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "peneirar") ; } ; --*
lin sort_2_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "out") ; } ; --*
lin sort_4_N = mkN "classificação" ; --*
lin sorting_1_N = mkN "classificação" ; --*
lin sorting_2_N = variants {mkN "categorização" ; mkN "classificação" ; mkN "Classificação" ; } ; --*
lin sorting_3_N = mkN "classificação" ; --*
lin sort_of_N2 = variants {mkN2 (mkN "categoria") noPrep ; mkN2 (mkN "classe") noPrep ; mkN2 (mkN "espécies") noPrep ; mkN2 (mkN "género") noPrep ; mkN2 (mkN "raça") noPrep ; mkN2 (mkN "tipo") noPrep ; } ; --*
lin sort_out_1_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "out") ; } ; --*
lin sort_out_2_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin sort_out_3_V2 = variants {mkV2 (mkV "corrigir") ; mkV2 (mkV "disciplinar") ; mkV2 (mkV "out") ; } ; --*
lin sorus_2_N = variants {mkN "soro" ; mkN "Soro" ; } ; --*
lin sos_N = mkN "SOS" ; --*
lin so_so_A = variants {mkA "assim" ; mkA "indiferente" ; mkA "mais" ; } ; --*
lin soteriology_N = variants {mkN "soteriologia" ; mkN "Soteriologia" ; } ; --*
lin sotho_2_N = mkN "sesotho" ; --*
lin sot_N = variants {mkN "bêbado" ; mkN "beberrão" ; mkN "borracho" ; } ; --*
lin soubrette_2_N = variants {mkN "soubrette" ; mkN "Soubrette" ; } ; --*
lin soubriquet_N = variants {mkN "alcunha" ; mkN "apelido" ; mkN "cognome" ; mkN "sobrenome" ; } ; --*
lin sou'_east_N = mkN "sudeste" ; --*
lin soul_1_N = variants {mkN "alma" ; mkN "psiquê" ; } ; --*
lin soul_2_N = variants {mkN "alguém" ; mkN "indivíduo" ; mkN "pessoa" ; mkN "ser" ; } ; --*
lin sound_1_A = mkA "digno" ; --*
lin sound_1_N = variants {mkN "som" ; mkN "voz" ; } ; --*
lin sound_1_VA = mkVA (mkV "parecer") ; --*
lin sound_2_N = variants {mkN "sensation" ; mkN "som" ; } ; --*
lin sound_2_V = variants {mkV "fazer" ; mkV "ressoar" ; mkV "soar" ; } ; --*
lin sound_3_A = variants {mkA "adequado" ; mkA "em" ; } ; --*
lin sound_3_N = mkN "som" ; --*
lin sound_3_VA = variants {mkVA (mkV "ressoar") ; mkVA (mkV "soar") ; } ; --*
lin sound_4_N = variants {mkN "ruído" ; mkN "som" ; } ; --*
lin sound_4_V2 = mkV2 (mkV "soar") ; --*
lin sound_5_A = mkA "fundamentado" ; --*
lin sound_5_N = mkN "som" ; --*
lin sound_6_A = mkA "legal" ; --*
lin sound_6_N = variants {mkN "fone" ; mkN "fonema" ; mkN "sound" ; } ; --*
lin sound_6_V2 = mkV2 (mkV "soar") ; --*
lin sound_7_N = mkN "estreito" ; --*
lin sounding_board_2_N = variants {mkN "board" ; mkN "placa" ; } ; --*
lin soundness_3_N = mkN "correção" ; --*
lin sound_off_1_V = variants {mkV "off" ; mkV "opinar" ; mkV "out" ; mkV "up" ; } ; --*
lin sound_off_3_V = variants {mkV "lamentar" ; mkV "off" ; mkV "reclamar" ; } ; --*
lin sound_out_1_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "out") ; mkV2 (mkV "pronunciar") ; } ; --*
lin sound_recording_N = variants {mkN "Gravação" ; mkN "recording" ; } ; --*
lin soundtrack_N = variants {mkN "banda" ; mkN "Banda" ; mkN "Bandas" ; } ; --*
lin soup_1_N = mkN "sopa" ; --*
lin soupspoon_1_N = variants {mkN "colher" ; mkN "spoon" ; } ; --*
lin soupy_2_A = mkA "sentimental" ; --*
lin sour_1_A = variants {mkA "ranço" ; mkA "rançoso" ; } ; --*
lin sour_1_V = mkV "estragar" ; --*
lin sour_2_A = variants {mkA "acídulo" ; mkA "azedo" ; mkA "desgradável" ; mkA "fermentado" ; } ; --*
lin sour_2_V2 = variants {mkV2 (mkV "acidar") ; mkV2 (mkV "acidificar") ; mkV2 (mkV "azedar") ; mkV2 (mkV "azedar-se") ; } ; --*
lin sour_3_N = variants {mkN "acidez" ; mkN "acididade" ; mkN "azedume" ; } ; --*
lin sour_6_A = mkA "taciturno" ; --*
lin source_1_N = variants {mkN "fonte" ; mkN "manancial" ; mkN "nascente" ; mkN "procedência" ; mkN "prosedensia" ; mkN "raiz" ; } ; --*
lin source_3_N = mkN "germes" ; --*
lin source_4_N = variants {mkN "fonte" ; mkN "origem" ; } ; --*
lin source_5_N = mkN "fonte" ; --*
lin source_6_N = variants {mkN "artífice" ; mkN "autor" ; mkN "escritor" ; } ; --*
lin source_7_N = variants {mkN "código-fonte" ; mkN "fonte" ; } ; --*
lin source_9_N = mkN "referência" ; --*
lin sourness_2_N = variants {mkN "acidez" ; mkN "acididade" ; mkN "azedume" ; } ; --*
lin soursop_1_N = variants {mkN "custard" ; mkN "graviola" ; mkN "muricata" ; mkN "tree" ; } ; --*
lin soursop_2_N = mkN "graviola" ; --*
lin souse_1_N = variants {mkN "alcoólatra" ; mkN "bêbado" ; mkN "borracho" ; } ; --*
lin souse_1_V2 = variants {mkV2 (mkV "demolhar") ; mkV2 (mkV "enxaguar") ; mkV2 (mkV "molhar") ; } ; --*
lin souse_2_V2 = mkV2 (mkV "imergir") ; --*
lin souse_3_N = mkN "impregnação" ; --*
lin souse_3_V2 = variants {mkV2 (mkV "embriagar") ; mkV2 (mkV "enebriar") ; mkV2 (mkV "it") ; } ; --*
lin south_1_N = mkN "Sul" ; --*
lin south_2_N = variants {mkN "Estados" ; mkN "States" ; } ; --*
lin south_3_N = variants {mkN "south" ; mkN "sul" ; mkN "Sul" ; } ; --*
lin south_4_N = variants {mkN "sul" ; mkN "zona" ; } ; --*
lin south_5_N = mkN "sul" ; --*
lin south_Adv = variants {mkAdv "para" ; mkAdv "the" ; } ; --*
lin south_A = mkA "sulista" ; --*
lin southeast_1_Adv = mkAdv "para" ; --*
lin southeast_1_A = mkA "sudeste" ; --*
lin southeast_1_N = mkN "sudeste" ; --*
lin southeast_2_A = mkA "sudeste" ; --*
lin southeast_2_N = variants {mkN "Sudeste" ; mkN "United" ; } ; --*
lin southeasterly_1_A = mkA "sudeste" ; --*
lin southeasterly_2_A = mkA "sudeste" ; --*
lin southeastern_1_A = mkA "sudeste" ; --*
lin southerly_1_A = variants {mkA "austral" ; mkA "meridional" ; } ; --*
lin southern_1_A = variants {mkA "do" ; mkA "meridional" ; mkA "sulista" ; } ; --*
lin southern_2_A = variants {mkA "austral" ; mkA "meridional" ; } ; --*
lin southernwood_N = variants {mkN "abrótano" ; mkN "abrotanum" ; } ; --*
lin southland_N = mkN "sul" ; --*
lin southpaw_1_N = variants {mkN "canhoto" ; mkN "hander" ; mkN "pitcher" ; } ; --*
lin southwest_1_N = mkN "sudoeste" ; --*
lin southwest_2_A = mkA "sudoeste" ; --*
lin southwest_2_N = variants {mkN "Sudoeste" ; mkN "United" ; } ; --*
lin southwesterly_2_A = mkA "sudoeste" ; --*
lin southwestern_1_A = mkA "sudoeste" ; --*
lin souvenir_1_N = variants {mkN "recordação" ; mkN "suvenir" ; } ; --*
lin souvenir_2_N = variants {mkN "lembrança" ; mkN "lembrancinha" ; } ; --*
lin souvlaki_1_N = variants {mkN "souvlaki" ; mkN "Souvlaki" ; } ; --*
lin sou'_west_N = mkN "sudoeste" ; --*
lin sovereign_1_A = variants {mkA "autônoma" ; mkA "autonômico" ; mkA "autônomo" ; mkA "independente" ; mkA "soberano" ; } ; --*
lin sovereign_2_A = variants {mkA "soberano" ; mkA "supremo" ; } ; --*
lin sovereign_N = variants {mkN "head" ; mkN "monarca" ; mkN "suserano" ; } ; --*
lin sovereignty_1_N = variants {mkN "soberania" ; mkN "soberanía" ; } ; --*
lin sovereignty_2_N = mkN "soberania" ; --*
lin soviet_A = variants {mkA "Soviete" ; mkA "soviético" ; } ; --*
lin sow_1_V2 = variants {mkV2 (mkV "plantar") ; mkV2 (mkV "semear") ; } ; --*
lin sow_2_V2 = variants {mkV2 (mkV "plantar") ; mkV2 (mkV "semear") ; } ; --*
lin sow_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "semear") ; } ; --*
lin sower_N = mkN "semeador" ; --*
lin sow_N = variants {mkN "porca" ; mkN "porco" ; } ; --*
lin soy_1_N = variants {mkN "bean" ; mkN "soja" ; } ; --*
lin soy_2_N = variants {mkN "bean" ; mkN "max" ; mkN "plant" ; mkN "semente" ; mkN "soja" ; } ; --*
lin soy_3_N = variants {mkN "sauce" ; mkN "Shoyu" ; } ; --*
lin soy_4_N = variants {mkN "bean" ; mkN "soja" ; } ; --*
lin spa_1_N = variants {mkN "balñaei" ; mkN "hole" ; mkN "place" ; } ; --*
lin spa_3_N = variants {mkN "club" ; mkN "spa" ; } ; --*
lin space_1_N = variants {mkN "espaço" ; mkN "infinito" ; } ; --*
lin space_2_N = mkN "espaço" ; --*
lin space_3_N = mkN "região" ; --*
lin space_4_N = variants {mkN "lugar" ; mkN "space" ; } ; --*
lin space_5_N = mkN "espaço" ; --*
lin space_8_N = mkN "espaço" ; --*
lin space_bar_N = mkN "bar" ; --*
lin spacecraft_N = variants {mkN "capsule" ; mkN "espaçonave" ; mkN "Naves" ; mkN "vehicle" ; } ; --*
lin spaceflight_N = variants {mkN "travel" ; mkN "viagem" ; } ; --*
lin spaceship_N = variants {mkN "espaçonave" ; mkN "nave" ; mkN "Nave" ; } ; --*
lin space_V2 = variants {mkV2 (mkV "caracter") ; mkV2 (mkV "espaçar") ; } ; --*
lin space_vehicle_N = variants {mkN "capsule" ; mkN "espaçonave" ; mkN "Naves" ; mkN "vehicle" ; } ; --*
lin spacing_1_N = mkN "espaçamento" ; --*
lin spacing_2_N = variants {mkN "arrangement" ; mkN "espaçamento" ; } ; --*
lin spacious_2_A = variants {mkA "amplo" ; mkA "espaçoso" ; mkA "vasto" ; } ; --*
lin spade_1_N = mkN "espada" ; --*
lin spade_2_N = variants {mkN "cavadeira" ; mkN "crioulo" ; mkN "pá" ; } ; --*
lin spadeful_N = mkN "paletada" ; --*
lin spade_V2 = mkV2 (mkV "cavar") ; --*
lin spadix_N = mkN "espádice" ; --*
lin spain_PN = variants {mkPN "Espanha" ; mkPN "of" ; } ; --*
lin spallation_N = mkN "espalação" ; --*
lin spam_1_N = variants {mkN "Spam" ; mkN "SPAM" ; } ; --*
lin spam_2_N = variants {mkN "e-mail" ; mkN "spam" ; } ; --*
lin span_1_N = variants {mkN "duração" ; mkN "período" ; } ; --*
lin span_3_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin span_5_N = mkN "ponte" ; --*
lin spandex_N = mkN "elastano" ; --*
lin spangle_N = mkN "lantejoula" ; --*
lin spaniard_N = variants {mkN "espanhol" ; mkN "espanhola" ; } ; --*
lin spanish_A = variants {mkA "espanhol" ; mkA "hispânico" ; } ; --*
lin spanking_N = mkN "surra" ; --*
lin spank_N = mkN "bofetada" ; --*
lin spanner_N = variants {mkN "chave" ; mkN "Chave" ; } ; --*
lin span_V2 = mkV2 (mkV "abranger") ; --*
lin spare_1_V2 = mkV2 (mkV "salvar") ; --*
lin spare_1_V = mkV "salvar" ; --*
lin spare_2_A = variants {mkA "excessivo" ; mkA "extra" ; mkA "redundante" ; mkA "reduntante" ; mkA "supérfluo" ; } ; --*
lin spare_5_A = variants {mkA "escasso" ; mkA "insuficiente" ; } ; --*
lin spare_from_V3 = mkV3 (mkV "poupar") ; --*
lin spare_V3 = mkV3 (mkV "poupar") ; --*
lin sparing_A = variants {mkA "económico" ; mkA "econômico" ; mkA "frugal" ; } ; --*
lin spark_1_N = mkN "fagulha" ; --*
lin spark_2_N = variants {mkN "centelha" ; mkN "chispa" ; mkN "faísca" ; } ; --*
lin spark_3_N = variants {mkN "arc" ; mkN "arco" ; mkN "discharge" ; } ; --*
lin spark_6_N = mkN "faísca" ; --*
lin sparking_plug_N = variants {mkN "plug" ; mkN "vela" ; } ; --*
lin sparkle_1_N = variants {mkN "centelha" ; mkN "chispa" ; mkN "faísca" ; } ; --*
lin sparkle_3_V = mkV "faiscar" ; --*
lin sparkle_4_V = variants {mkV "bubbles" ; mkV "espumar" ; mkV "espumejar" ; mkV "ferver" ; } ; --*
lin spark_off_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin spark_plug_N = variants {mkN "plug" ; mkN "vela" ; } ; --*
lin spark_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin spark_V = mkV "faiscar" ; --*
lin sparrow_1_N = variants {mkN "pardal" ; mkN "sparrow" ; } ; --*
lin sparrow_2_N = variants {mkN "modularis" ; mkN "pássaro" ; mkN "sparrow" ; } ; --*
lin sparse_A = variants {mkA "disperso" ; mkA "esparso" ; } ; --*
lin spartan_1_A = mkA "espartano" ; --*
lin spartan_2_A = mkA "espartano" ; --*
lin spartan_3_A = mkA "rigoroso" ; --*
lin spartan_4_A = mkA "ascético" ; --*
lin spasm_1_N = variants {mkN "cãibra" ; mkN "espasmo" ; mkN "spasm" ; } ; --*
lin spasm_2_N = mkN "espasmo" ; --*
lin spasmodic_1_A = mkA "convulsivo" ; --*
lin spastic_3_A = mkA "convulsivo" ; --*
lin spat_1_N = mkN "desavença" ; --*
lin spat_1_V = variants {mkV "cuspir" ; mkV "pingar" ; } ; --*
lin spat_4_V = variants {mkV "aclamar" ; mkV "aplaudir" ; mkV "bater" ; mkV "ovacionar" ; } ; --*
lin spat_7_V = variants {mkV "aplaudir" ; mkV "bater" ; } ; --*
lin spate_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin spatial_1_A = mkA "espacial" ; --*
lin spatter_1_V2 = mkV2 (mkV "borrifar") ; --*
lin spatter_3_V2 = mkV2 (mkV "salpicar") ; --*
lin spatter_4_V2 = variants {mkV2 (mkV "derramar") ; mkV2 (mkV "entornar") ; mkV2 (mkV "verter") ; } ; --*
lin spatter_V = mkV "borrifar" ; --*
lin spawn_N = variants {mkN "desova" ; mkN "ovas" ; } ; --*
lin spawn_V2 = variants {mkV2 (mkV "desovar") ; mkV2 (mkV "fazer") ; } ; --*
lin spawn_V = variants {mkV "gerar" ; mkV "procriar" ; } ; --*
lin speak_1_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "verbalizar") ; } ; --*
lin speak_1_V = variants {mkV "conversar" ; mkV "dizer" ; mkV "falar" ; mkV "proferir" ; mkV "verbalizar" ; } ; --*
lin speak_2_V2 = mkV2 (mkV "falar") ; --*
lin speak_2_V = mkV "falar" ; --*
lin speak_3_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; } ; --*
lin speak_3_V = variants {mkV "dizer" ; mkV "falar" ; } ; --*
lin speak_5_V = variants {mkV "falar" ; mkV "soar" ; } ; --*
lin speaker_1_N = variants {mkN "alto-falante" ; mkN "falante" ; mkN "locutor" ; mkN "palestrante" ; } ; --*
lin speaker_2_N = variants {mkN "altifalante" ; mkN "alto-falante" ; mkN "system" ; mkN "unit" ; } ; --*
lin speaking_1_N = variants {mkN "fala" ; mkN "production" ; } ; --*
lin speaking_2_N = variants {mkN "Oratória" ; mkN "presentation" ; mkN "speaking" ; } ; --*
lin speak_out_V = variants {mkV "off" ; mkV "opinar" ; mkV "out" ; mkV "up" ; } ; --*
lin speak_up_1_V = variants {mkV "off" ; mkV "opinar" ; mkV "out" ; mkV "up" ; } ; --*
lin speak_up_2_V = mkV "up" ; --*
lin spear_1_N = mkN "lança" ; --*
lin spear_2_N = variants {mkN "arpão" ; mkN "lança" ; } ; --*
lin spearhead_1_N = variants {mkN "comandante" ; mkN "ferro" ; } ; --*
lin spearhead_2_N = mkN "ponta" ; --*
lin spearhead_3_N = mkN "ponta" ; --*
lin spearhead_V2 = mkV2 (mkV "capitanear") ; --*
lin spearmint_N = variants {mkN "Hortelã-verde" ; mkN "spicata" ; } ; --*
lin special_1_A = variants {mkA "avulso" ; mkA "especial" ; mkA "particular" ; mkA "peculiar" ; mkA "próprio" ; } ; --*
lin special_2_A = mkA "especial" ; --*
lin special_3_A = variants {mkA "especial" ; mkA "excepcional" ; } ; --*
lin special_4_A = mkA "especial" ; --*
lin special_6_A = mkA "especial" ; --*
lin specialism_2_N = variants {mkN "especialidade" ; mkN "Especialidades" ; mkN "especialização" ; } ; --*
lin specialist_1_N = variants {mkN "especialista" ; mkN "expert" ; mkN "experto" ; mkN "louvado" ; mkN "perito" ; } ; --*
lin speciality_1_N = variants {mkN "especialidade" ; mkN "forte" ; mkN "point" ; mkN "suit" ; } ; --*
lin speciality_2_N = mkN "especialidade" ; --*
lin speciality_3_N = variants {mkN "especialidade" ; mkN "Especialidades" ; mkN "especialização" ; } ; --*
lin specialization_1_N = mkN "especialização" ; --*
lin specialization_2_N = variants {mkN "especialidade" ; mkN "Especialidades" ; mkN "especialização" ; } ; --*
lin specialization_3_N = mkN "especialização" ; --*
lin specialize_2_V2 = variants {mkV2 (mkV "especificar") ; mkV2 (mkV "particularizar") ; } ; --*
lin specialize_3_V2 = mkV2 (mkV "especializar") ; --*
lin specialty_1_N = variants {mkN "especialidade" ; mkN "forte" ; mkN "point" ; mkN "suit" ; } ; --*
lin specialty_2_N = mkN "especialidade" ; --*
lin specialty_3_N = variants {mkN "especialidade" ; mkN "Especialidades" ; mkN "especialização" ; } ; --*
lin speciation_N = variants {mkN "especiação" ; mkN "Especiação" ; } ; --*
lin specie_N = variants {mkN "moeda" ; mkN "money" ; } ; --*
lin species_1_N = variants {mkN "espécie" ; mkN "Espécie" ; mkN "espécies" ; } ; --*
lin species_2_N = variants {mkN "classe" ; mkN "espécie" ; mkN "espécies" ; mkN "género" ; mkN "tipo" ; mkN "variedade" ; } ; --*
lin specific_2_A = mkA "específico" ; --*
lin specific_3_A = mkA "específico" ; --*
lin specific_4_A = mkA "específico" ; --*
lin specification_4_N = variants {mkN "especificação" ; mkN "estipulação" ; } ; --*
lin specificity_1_N = mkN "especificidade" ; --*
lin specificity_2_N = mkN "especificidade" ; --*
lin specific_to_A2 = mkA2 (mkA "específico") noPrep ; --*
lin specified_A = variants {mkA "especificado" ; mkA "específico" ; } ; --*
lin specify_1_V2 = mkV2 (mkV "estipular") ; --*
lin specify_1_VS = mkVS (mkV "estipular") ; --*
lin specify_2_V2 = variants {mkV2 (mkV "determinar") ; mkV2 (mkV "especificar") ; } ; --*
lin specify_3_V2 = mkV2 (mkV "especificar") ; --*
lin specify_3_V = mkV "especificar" ; --*
lin specify_3_VS = mkVS (mkV "especificar") ; --*
lin specify_4_V2 = variants {mkV2 (mkV "especificar") ; mkV2 (mkV "particularizar") ; } ; --*
lin specify_5_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "especificar") ; } ; --*
lin specify_6_V2 = mkV2 (mkV "destinar") ; --*
lin specify_6_V = mkV "destinar" ; --*
lin specify_6_VS = mkVS (mkV "destinar") ; --*
lin specify_7_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "designar") ; mkV2 (mkV "especificar") ; } ; --*
lin specimen_1_N = mkN "exemplo" ; --*
lin specimen_2_N = variants {mkN "amostra" ; mkN "espécime" ; } ; --*
lin specious_2_A = mkA "espúrio" ; --*
lin speck_2_N = variants {mkN "átomo" ; mkN "partícula" ; } ; --*
lin speck_3_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin speckle_N = mkN "mancha" ; --*
lin speckless_A = mkA "imaculado" ; --*
lin spectacle_1_N = variants {mkN "espetáculo" ; mkN "show" ; } ; --*
lin spectacle_2_N = variants {mkN "espetáculo" ; mkN "Espetáculo" ; } ; --*
lin spectacle_3_N = mkN "espetáculo" ; --*
lin spectacles_N = mkN "óculos" ; --*
lin spectacular_1_A = variants {mkA "acertado" ; mkA "dramático" ; mkA "espectacular" ; mkA "espetacular" ; mkA "impressionante" ; } ; --*
lin spectacular_2_A = mkA "espetacular" ; --*
lin spectacular_3_A = mkA "proeminente" ; --*
lin spectatorFem_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin spectatorMasc_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin spectral_1_A = mkA "espectral" ; --*
lin spectre_1_N = mkN "fantasma" ; --*
lin spectre_2_N = variants {mkN "espectro" ; mkN "fantasma" ; mkN "sombra" ; } ; --*
lin spectrogram_N = mkN "Espectrograma" ; --*
lin spectrograph_2_N = mkN "Espectrograma" ; --*
lin spectroscopy_N = variants {mkN "analysis" ; mkN "espectroscopia" ; } ; --*
lin spectrum_1_N = mkN "espectro" ; --*
lin spectrum_2_N = mkN "espectro" ; --*
lin speculate_1_VS = variants {mkVS (mkV "conjecturar") ; mkVS (mkV "supor") ; mkVS (mkV "teorizar") ; } ; --*
lin speculate_2_VS = mkVS (mkV "especular") ; --*
lin speculate_3_V = variants {mkV "contemplar" ; mkV "over" ; mkV "refletir" ; } ; --*
lin speculate_4_V = mkV "especular" ; --*
lin speculation_1_N = variants {mkN "conjectura" ; mkN "especulação" ; mkN "fazerdeconta" ; mkN "hipótese" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin speculation_2_N = variants {mkN "hipótese" ; mkN "suposição" ; } ; --*
lin speculation_3_N = variants {mkN "especulação" ; mkN "Especulação" ; } ; --*
lin speculation_4_N = mkN "meditação" ; --*
lin speculative_2_A = mkA "especulativo" ; --*
lin speculativeness_1_N = mkN "especulação" ; --*
lin speculum_2_N = mkN "Espéculo" ; --*
lin speech_1_N = mkN "discurso" ; --*
lin speech_2_N = variants {mkN "communication" ; mkN "idioma" ; mkN "language" ; } ; --*
lin speech_4_N = mkN "fala" ; --*
lin speech_5_N = variants {mkN "fala" ; mkN "of" ; } ; --*
lin speech_6_N = variants {mkN "bronca" ; mkN "to" ; } ; --*
lin speech_8_N = variants {mkN "discurso" ; mkN "idioma" ; mkN "língua" ; mkN "linguagem" ; } ; --*
lin speechify_V = mkV "discursar" ; --*
lin speechless_A = variants {mkA "calado" ; mkA "mudo" ; } ; --*
lin speed_1_N = mkN "velocidade" ; --*
lin speed_1_V = variants {mkV "along" ; mkV "apressar" ; mkV "correr" ; mkV "on" ; } ; --*
lin speed_2_N = variants {mkN "rapidez" ; mkN "velocidade" ; } ; --*
lin speed_2_V = variants {mkV "acelerar" ; mkV "agilizar" ; mkV "apressar" ; mkV "up" ; } ; --*
lin speed_3_N = mkN "aceleração" ; --*
lin speed_3_V = variants {mkV "acelerar" ; mkV "apressar" ; mkV "despachar-se" ; mkV "passar" ; mkV "rapidly" ; } ; --*
lin speed_4_V = mkV "correr" ; --*
lin speed_5_N = variants {mkN "anfetamina" ; mkN "pill" ; } ; --*
lin speed_5_V2 = variants {mkV2 (mkV "acelerar") ; mkV2 (mkV "apressar") ; mkV2 (mkV "up") ; } ; --*
lin speed_indicator_N = variants {mkN "indicator" ; mkN "velocímetro" ; } ; --*
lin speeding_N = mkN "aceleração" ; --*
lin speed_limit_N = mkN "limit" ; --*
lin speedometer_N = variants {mkN "indicator" ; mkN "velocímetro" ; } ; --*
lin speedskater_1_N = variants {mkN "Patinadores" ; mkN "skater" ; } ; --*
lin speed_up_1_V2 = variants {mkV2 (mkV "acelerar") ; mkV2 (mkV "agilizar") ; mkV2 (mkV "apressar") ; mkV2 (mkV "up") ; } ; --*
lin speed_up_2_V2 = variants {mkV2 (mkV "acelerar") ; mkV2 (mkV "apressar") ; mkV2 (mkV "up") ; } ; --*
lin speed_up_N = variants {mkN "aceleração" ; mkN "aumento" ; } ; --*
lin speedway_1_N = mkN "vias" ; --*
lin speedwell_N = mkN "sudario" ; --*
lin speedy_1_A = variants {mkA "breve" ; mkA "rápido" ; mkA "veloz" ; } ; --*
lin speedy_2_A = variants {mkA "ligeiro" ; mkA "rápido" ; mkA "veloz" ; } ; --*
lin spelaeology_1_N = mkN "espeleologia" ; --*
lin spelaeology_2_N = variants {mkN "espeleologia" ; mkN "Espeleologia" ; } ; --*
lin speleology_1_N = mkN "espeleologia" ; --*
lin speleology_2_N = variants {mkN "espeleologia" ; mkN "Espeleologia" ; } ; --*
lin spell_1_N = variants {mkN "hipnose" ; mkN "Trance" ; } ; --*
lin spell_2_N = variants {mkN "turno" ; mkN "vez" ; } ; --*
lin spell_2_V2 = mkV2 (mkV "significar") ; --*
lin spell_3_N = variants {mkN "instante" ; mkN "momento" ; mkN "quando" ; mkN "segundo" ; mkN "tempo" ; } ; --*
lin spell_3_V2 = variants {mkV2 (mkV "escrever") ; mkV2 (mkV "soletrar") ; } ; --*
lin spell_4_N = variants {mkN "encantamento" ; mkN "feitiço" ; mkN "spell" ; } ; --*
lin spellbound_1_A = mkA "fascinado" ; --*
lin spelling_N = mkN "ortografia" ; --*
lin spell_out_1_V2 = mkV2 (mkV "out") ; --*
lin spelt_N = variants {mkN "aestivum" ; mkN "espelta" ; mkN "spelta" ; } ; --*
lin spencer_N = variants {mkN "Herbert" ; mkN "Spencer" ; } ; --*
lin spend_1_V2 = mkV2 (mkV "fazer") ; --*
lin spend_2_V2 = variants {mkV2 (mkV "despender") ; mkV2 (mkV "gastar") ; } ; --*
lin spend_3_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "esgotar") ; } ; --*
lin spender_1_N = variants {mkN "Spender" ; mkN "Stephen" ; } ; --*
lin spender_2_N = mkN "gastão" ; --*
lin spending_2_N = variants {mkN "despesa" ; mkN "gasto" ; } ; --*
lin spendthrift_N = mkN "gastão" ; --*
lin spermaceti_N = mkN "espermacete" ; --*
lin spermatogenesis_N = variants {mkN "Espermatogenese" ; mkN "Espermatogénese" ; mkN "Espermatogênese" ; } ; --*
lin spermatophyte_N = variants {mkN "fanerogâmicas" ; mkN "plant" ; } ; --*
lin spermatozoon_1_N = variants {mkN "cell" ; mkN "esperma" ; mkN "espermatozoide" ; mkN "Espermatozóide" ; } ; --*
lin spermicide_N = mkN "espermicida" ; --*
lin sperm_N = variants {mkN "cell" ; mkN "esperma" ; mkN "espermatozoide" ; mkN "Espermatozóide" ; } ; --*
lin sperm_whale_N = variants {mkN "cachalote" ; mkN "catodon" ; mkN "whale" ; } ; --*
lin spew_1_V = mkV "cuspir" ; --*
lin spew_3_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin spew_3_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin spew_out_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vomitar") ; } ; --*
lin sphere_1_N = variants {mkN "domínio" ; mkN "esfera" ; } ; --*
lin sphere_2_N = variants {mkN "bola" ; mkN "esfera" ; } ; --*
lin sphere_3_N = variants {mkN "esfera" ; mkN "of" ; } ; --*
lin sphere_4_N = variants {mkN "sector" ; mkN "setor" ; } ; --*
lin sphere_5_N = variants {mkN "bola" ; mkN "esfera" ; } ; --*
lin sphere_6_N = variants {mkN "bola" ; mkN "esfera" ; mkN "Esfera" ; } ; --*
lin sphere_7_N = variants {mkN "céu" ; mkN "esfera" ; mkN "firmamento" ; mkN "of" ; mkN "sphere" ; } ; --*
lin spherical_1_A = mkA "esférico" ; --*
lin spherical_2_A = variants {mkA "esférico" ; mkA "global" ; } ; --*
lin spheroid_N = variants {mkN "Esferoide" ; mkN "of" ; } ; --*
lin spherometer_N = variants {mkN "esferómetro" ; mkN "esferômetro" ; } ; --*
lin spherule_N = mkN "esférula" ; --*
lin sphincter_N = variants {mkN "esfíncter" ; mkN "muscle" ; mkN "sphincter" ; } ; --*
lin sphinx_1_N = mkN "esfinge" ; --*
lin sphinx_2_N = mkN "Esfinge" ; --*
lin sphinx_3_N = mkN "esfinge" ; --*
lin sphygmomanometer_N = variants {mkN "esfigmomanómetro" ; mkN "esfigmomanômetro" ; } ; --*
lin spice_1_N = variants {mkN "espechiaria" ; mkN "especiaria" ; } ; --*
lin spice_1_V2 = variants {mkV2 (mkV "temperar") ; mkV2 (mkV "up") ; } ; --*
lin spice_2_N = variants {mkN "condimento" ; mkN "espechiaria" ; mkN "especiaria" ; mkN "tempero" ; } ; --*
lin spice_2_V2 = variants {mkV2 (mkV "condimentar") ; mkV2 (mkV "temperar") ; mkV2 (mkV "up") ; } ; --*
lin spice_3_N = mkN "espechiaria" ; --*
lin spiciness_1_N = mkN "espechiaria" ; --*
lin spick_1_A = mkA "imaculado" ; --*
lin spicy_2_A = mkA "verde" ; --*
lin spider_1_N = mkN "aranha" ; --*
lin spiel_1_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "retocar") ; mkV2 (mkV "tocar") ; } ; --*
lin spigot_1_N = mkN "torneira" ; --*
lin spigot_2_N = variants {mkN "bica" ; mkN "torneira" ; } ; --*
lin spike_3_N = mkN "espiga" ; --*
lin spike_3_V2 = mkV2 (mkV "cravar") ; --*
lin spike_5_V2 = mkV2 (mkV "envenenar") ; --*
lin spill_1_N = mkN "derramamento" ; --*
lin spill_1_V2 = variants {mkV2 (mkV "derramar") ; mkV2 (mkV "entornar") ; mkV2 (mkV "verter") ; } ; --*
lin spill_2_N = mkN "vertedouro" ; --*
lin spill_2_V = variants {mkV "out" ; mkV "verter" ; } ; --*
lin spill_3_V2 = mkV2 (mkV "verter") ; --*
lin spill_4_N = mkN "tombo" ; --*
lin spill_4_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "verter") ; } ; --*
lin spill_5_V2 = variants {mkV2 (mkV "dedurar") ; mkV2 (mkV "falar") ; } ; --*
lin spillway_N = mkN "vertedouro" ; --*
lin spin_1_V = variants {mkV "around" ; mkV "girar" ; } ; --*
lin spin_2_N = mkN "giro" ; --*
lin spin_3_V2 = mkV2 (mkV "rodopiar") ; --*
lin spin_5_V2 = mkV2 (mkV "tecer") ; --*
lin spin_6_V2 = mkV2 (mkV "fiar") ; --*
lin spin_7_V2 = variants {mkV2 (mkV "desvirar") ; mkV2 (mkV "distorcer") ; mkV2 (mkV "enrolar") ; } ; --*
lin spinach_1_N = variants {mkN "espinafre" ; mkN "oleracea" ; mkN "plant" ; mkN "spinach" ; } ; --*
lin spinach_2_N = mkN "espinafre" ; --*
lin spindle_4_N = mkN "fuso" ; --*
lin spine_1_N = variants {mkN "column" ; mkN "costas" ; mkN "espinha" ; mkN "espinhaço" ; } ; --*
lin spine_3_N = variants {mkN "acúleo" ; mkN "espinho" ; } ; --*
lin spine_5_N = mkN "espinho" ; --*
lin spineless_1_A = variants {mkA "enrolado" ; mkA "indeciso" ; } ; --*
lin spineless_2_A = mkA "invertebrado" ; --*
lin spinel_N = mkN "espinela" ; --*
lin spinet_2_N = mkN "espineta" ; --*
lin spinney_N = mkN "bosquezinho" ; --*
lin spinning_N = mkN "lanifício" ; --*
lin spinning_wheel_N = mkN "wheel" ; --*
lin spin_off_N = variants {mkN "derivado" ; mkN "subprodutos" ; } ; --*
lin spinster_1_N = variants {mkN "maid" ; mkN "solteira" ; } ; --*
lin spiny_2_A = variants {mkA "espinhento" ; mkA "espinhoso" ; mkA "farpado" ; } ; --*
lin spiral_1_N = mkN "espiral" ; --*
lin spiral_2_N = variants {mkN "hélice" ; mkN "Hélice" ; } ; --*
lin spiral_5_N = variants {mkN "bobine" ; mkN "espiral" ; mkN "hélice" ; mkN "rosca" ; } ; --*
lin spiral_A = mkA "helicoidal" ; --*
lin spirea_3_N = mkN "Spiraea" ; --*
lin spire_N = variants {mkN "agulha" ; mkN "coruchéu" ; mkN "flecha" ; mkN "topo" ; } ; --*
lin spirit_1_N = variants {mkN "alma" ; mkN "espírito" ; } ; --*
lin spirit_2_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin spirit_3_N = mkN "ânimo" ; --*
lin spirit_4_N = variants {mkN "espírito" ; mkN "fantasma" ; mkN "spirit" ; } ; --*
lin spirit_5_N = variants {mkN "espírito" ; mkN "humor" ; mkN "state" ; } ; --*
lin spirit_6_N = variants {mkN "intenção" ; mkN "significado" ; } ; --*
lin spirit_7_N = variants {mkN "alma" ; mkN "vida" ; } ; --*
lin spirit_level_N = variants {mkN "level" ; mkN "nível" ; } ; --*
lin spiritual_1_A = variants {mkA "espiritual" ; mkA "religioso" ; } ; --*
lin spiritual_2_A = mkA "espiritual" ; --*
lin spiritual_3_A = mkA "espiritual" ; --*
lin spiritualism_2_N = mkN "espiritismo" ; --*
lin spiritualism_3_N = variants {mkN "espiritismo" ; mkN "espiritualidade" ; mkN "Espiritualidade" ; } ; --*
lin spiritualistFem_N = mkN "médium" ; --*
lin spiritualistic_A = mkA "espiritualista" ; --*
lin spiritualistMasc_N = mkN "médium" ; --*
lin spirituality_2_N = variants {mkN "espiritismo" ; mkN "espiritualidade" ; mkN "Espiritualidade" ; } ; --*
lin spiritualize_1_V2 = mkV2 (mkV "espiritualizar") ; --*
lin spiritualize_2_V2 = variants {mkV2 (mkV "glorificar") ; mkV2 (mkV "transfigurar") ; } ; --*
lin spiritual_N = variants {mkN "Espiritual" ; mkN "spiritual" ; } ; --*
lin spirituous_1_A = mkA "espiritoso" ; --*
lin spirochete_1_N = variants {mkN "espiroqueta" ; mkN "Spirochaetes" ; } ; --*
lin spirometry_N = variants {mkN "espirometria" ; mkN "Espirometria" ; } ; --*
lin spironolactone_N = mkN "Espironolactona" ; --*
lin spirt_1_V = variants {mkV "borbotar" ; mkV "esguichar" ; mkV "jorrar" ; mkV "minar" ; } ; --*
lin spirt_N = mkN "esguinche" ; --*
lin spit_1_V = mkV "cuspir" ; --*
lin spit_2_N = variants {mkN "cuspe" ; mkN "cuspo" ; mkN "saliva" ; } ; --*
lin spit_3_N = mkN "espeto" ; --*
lin spit_3_V2 = mkV2 (mkV "borrifar") ; --*
lin spit_4_N = mkN "Cuspir" ; --*
lin spit_4_V2 = mkV2 (mkV "espetar") ; --*
lin spite_1_N = variants {mkN "maldade" ; mkN "malícia" ; } ; --*
lin spiteful_A = variants {mkA "danoso" ; mkA "maldoso" ; mkA "malévolo" ; } ; --*
lin spitefulness_1_N = variants {mkN "maldade" ; mkN "malícia" ; } ; --*
lin spite_V2 = variants {mkV2 (mkV "magoar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "provocar") ; } ; --*
lin spit_out_1_V2 = variants {mkV2 (mkV "cuspir") ; mkV2 (mkV "out") ; } ; --*
lin spit_out_3_V2 = variants {mkV2 (mkV "expectorar") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin spitting_N = mkN "Cuspir" ; --*
lin spittle_N = variants {mkN "cuspe" ; mkN "cuspo" ; mkN "saliva" ; } ; --*
lin spittoon_N = variants {mkN "cuspideira" ; mkN "cuspidor" ; mkN "escarradeira" ; } ; --*
lin splash_1_N = variants {mkN "borrifo" ; mkN "respingo" ; } ; --*
lin splash_1_V2 = mkV2 (mkV "borrifar") ; --*
lin splash_3_V2 = mkV2 (mkV "borrifar") ; --*
lin splash_4_N = mkN "mancha" ; --*
lin splash_5_V = mkV "chapinar" ; --*
lin splash_9_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin splay_3_V2 = variants {mkV2 (mkV "deslocar") ; mkV2 (mkV "deslocar-se") ; } ; --*
lin spleen_1_N = variants {mkN "baço" ; mkN "esplim" ; } ; --*
lin splendid_1_A = variants {mkA "esplêndido" ; mkA "glorioso" ; mkA "magnífico" ; mkA "maravilhoso" ; } ; --*
lin splendid_2_A = variants {mkA "brilhante" ; mkA "excelente" ; mkA "fabuloso" ; mkA "magnífico" ; } ; --*
lin splendid_3_A = mkA "magnífico" ; --*
lin splendiferous_A = variants {mkA "esplêndido" ; mkA "glorioso" ; mkA "magnífico" ; mkA "maravilhoso" ; } ; --*
lin splendour_1_N = variants {mkN "brilho" ; mkN "esplendor" ; mkN "lustre" ; } ; --*
lin splendour_2_N = mkN "fulgor" ; --*
lin splenectomy_N = mkN "esplenectomia" ; --*
lin splenomegaly_N = variants {mkN "aumento" ; mkN "esplenomegalia" ; mkN "Esplenomegália" ; } ; --*
lin splice_1_V2 = mkV2 (mkV "juntar") ; --*
lin splice_2_V2 = mkV2 (mkV "casar") ; --*
lin spline_2_N = variants {mkN "ripa" ; mkN "sarrafo" ; } ; --*
lin splinter_1_V = variants {mkV "away" ; mkV "romper" ; } ; --*
lin splinter_2_V2 = variants {mkV2 (mkV "lascar") ; mkV2 (mkV "rachar") ; } ; --*
lin splinter_2_V = variants {mkV "lascar" ; mkV "rachar" ; } ; --*
lin splinter_N = variants {mkN "farpa" ; mkN "lasca" ; } ; --*
lin split_11_N = variants {mkN "cisão" ; mkN "cisma" ; mkN "dissidência" ; } ; --*
lin split_1_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "fracionar") ; mkV2 (mkV "separar") ; mkV2 (mkV "up") ; } ; --*
lin split_2_V2 = mkV2 (mkV "decepar") ; --*
lin split_4_N = mkN "fenda" ; --*
lin split_4_V = variants {mkV "partir" ; mkV "separar" ; } ; --*
lin split_5_N = variants {mkN "buraco" ; mkN "fenda" ; mkN "rasgão" ; mkN "rasgo" ; } ; --*
lin split_5_V = variants {mkV "estourar" ; mkV "explodir" ; mkV "open" ; } ; --*
lin split_9_N = variants {mkN "desdobramento" ; mkN "split" ; mkN "up" ; } ; --*
lin split_PN = mkPN "Split" ; --*
lin split_up_1_V2 = variants {mkV2 (mkV "divorciar") ; mkV2 (mkV "up") ; } ; --*
lin split_up_2_V2 = variants {mkV2 (mkV "dividir") ; mkV2 (mkV "fracionar") ; mkV2 (mkV "separar") ; mkV2 (mkV "up") ; } ; --*
lin split_up_3_V = variants {mkV "partir" ; mkV "separar" ; mkV "up" ; } ; --*
lin split_up_4_V = variants {mkV "apart" ; mkV "desmoronar" ; mkV "separar" ; mkV "up" ; } ; --*
lin splodge_N = mkN "mancha" ; --*
lin splosh_1_V2 = mkV2 (mkV "chapinar") ; --*
lin splosh_3_V2 = mkV2 (mkV "borrifar") ; --*
lin splosh_4_V2 = mkV2 (mkV "borrifar") ; --*
lin splotch_N = mkN "mancha" ; --*
lin splurge_1_V = variants {mkV "gastar" ; mkV "indulgir" ; mkV "paparicar" ; } ; --*
lin splurge_2_N = mkN "bacanal" ; --*
lin splutter_2_V2 = variants {mkV2 (mkV "cuspir") ; mkV2 (mkV "out") ; } ; --*
lin splutter_2_V = variants {mkV "cuspir" ; mkV "out" ; } ; --*
lin spoil_1_N = variants {mkN "espólio" ; mkN "pilhagem" ; } ; --*
lin spoil_1_V2 = variants {mkV2 (mkV "arruinar") ; mkV2 (mkV "borrar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "ferrar") ; mkV2 (mkV "up") ; } ; --*
lin spoil_2_V = variants {mkV "bad" ; mkV "estragar" ; } ; --*
lin spoil_3_N = variants {mkN "espoliação" ; mkN "furto" ; mkN "roubo" ; } ; --*
lin spoil_4_V2 = variants {mkV2 (mkV "afagar") ; mkV2 (mkV "amimar") ; mkV2 (mkV "mimar") ; mkV2 (mkV "mimosear") ; } ; --*
lin spoil_5_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin spoil_6_V = mkV "querer" ; --*
lin spoil_8_V2 = variants {mkV2 (mkV "deteriorar") ; mkV2 (mkV "estragar") ; } ; --*
lin spoiler_2_N = mkN "assaltante" ; --*
lin spoiler_5_N = mkN "spoiler" ; --*
lin spokesman_N = mkN "porta-voz" ; --*
lin spokesperson_N = variants {mkN "porta-voz" ; mkN "representante" ; } ; --*
lin spokeswoman_N = mkN "porta-voz" ; --*
lin spoliation_2_N = variants {mkN "espoliação" ; mkN "furto" ; mkN "roubo" ; } ; --*
lin spondee_N = variants {mkN "espondeu" ; mkN "Espondeu" ; } ; --*
lin spondylitis_N = mkN "espondilite" ; --*
lin spondylolisthesis_N = mkN "Espondilolistese" ; --*
lin sponge_1_N = mkN "esponja" ; --*
lin sponge_3_N = variants {mkN "parasita" ; mkN "sanguessuga" ; } ; --*
lin sponge_4_N = variants {mkN "espongiários" ; mkN "Porifera" ; mkN "Porífera" ; } ; --*
lin sponge_cake_N = mkN "cake" ; --*
lin sponger_2_N = variants {mkN "parasita" ; mkN "sanguessuga" ; } ; --*
lin sponginess_2_N = variants {mkN "compressibilidade" ; mkN "redutibilidade" ; } ; --*
lin spongy_1_A = mkA "esponjoso" ; --*
lin spongy_2_A = mkA "esponjoso" ; --*
lin sponsor_1_N = variants {mkN "fiador" ; mkN "padrinho" ; mkN "Patrocinio" ; } ; --*
lin sponsor_1_V2 = variants {mkV2 (mkV "fiar") ; mkV2 (mkV "patrocinar") ; } ; --*
lin sponsor_2_V2 = variants {mkV2 (mkV "apadrinhar") ; mkV2 (mkV "patrocinar") ; } ; --*
lin sponsor_3_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "patrocinar") ; } ; --*
lin sponsorship_N = variants {mkN "patrocínio" ; mkN "patrocínios" ; } ; --*
lin spontaneous_1_A = mkA "espontâneo" ; --*
lin spontaneous_2_A = mkA "espontâneo" ; --*
lin spoof_N = mkN "paródia" ; --*
lin spoof_V2 = variants {mkV2 (mkV "arremedar") ; mkV2 (mkV "parodiar") ; } ; --*
lin spook_2_N = variants {mkN "espectro" ; mkN "fantasma" ; mkN "sombra" ; } ; --*
lin spook_V2 = mkV2 (mkV "amedrontar") ; --*
lin spooky_A = variants {mkA "assustado" ; mkA "nervoso" ; } ; --*
lin spool_N = variants {mkN "bobina" ; mkN "carretel" ; mkN "carrinho" ; } ; --*
lin spoon_1_N = mkN "colher" ; --*
lin spoon_2_N = variants {mkN "colher" ; mkN "colherada" ; } ; --*
lin spoonerism_N = variants {mkN "Antístrofe" ; mkN "spoonerismo" ; mkN "trocadilho" ; } ; --*
lin spoonful_N = variants {mkN "colher" ; mkN "colherada" ; } ; --*
lin sporadic_1_A = variants {mkA "casual" ; mkA "esporádico" ; mkA "raro" ; } ; --*
lin sporangium_N = variants {mkN "case" ; mkN "esporângio" ; mkN "sac" ; } ; --*
lin spore_N = mkN "esporo" ; --*
lin sporophyte_N = mkN "esporófito" ; --*
lin sport_1_N = mkN "esporte" ; --*
lin sport_1_V2 = variants {mkV2 (mkV "constar") ; mkV2 (mkV "gabar") ; mkV2 (mkV "gabar-se") ; } ; --*
lin sport_2_V = variants {mkV "about" ; mkV "around" ; mkV "curvetear" ; mkV "garotar" ; mkV "traquinar" ; } ; --*
lin sport_5_N = variants {mkN "desportista" ; mkN "esportista" ; mkN "esportiva" ; mkN "esportivo" ; } ; --*
lin sport_6_N = variants {mkN "mutação" ; mkN "mutante" ; mkN "mutantes" ; } ; --*
lin sportive_1_A = variants {mkA "desportivo" ; mkA "esportivo" ; } ; --*
lin sportive_2_A = mkA "traquinas" ; --*
lin sports_editor_N = mkN "editor" ; --*
lin sportsman_N = variants {mkN "desportista" ; mkN "esportista" ; mkN "esportiva" ; mkN "esportivo" ; } ; --*
lin sporty_2_A = mkA "vistoso" ; --*
lin spot_10_N = mkN "pouco" ; --*
lin spot_12_N = mkN "lâmpada" ; --*
lin spot_14_N = variants {mkN "mácula" ; mkN "mancha" ; } ; --*
lin spot_1_N = variants {mkN "área" ; mkN "point" ; mkN "região" ; } ; --*
lin spot_1_V2 = mkV2 (mkV "ver") ; --*
lin spot_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin spot_4_N = variants {mkN "mancha" ; mkN "nódoa" ; } ; --*
lin spot_4_V2 = mkV2 (mkV "manchar") ; --*
lin spot_5_N = mkN "mancha" ; --*
lin spot_8_N = variants {mkN "cargo" ; mkN "posição" ; } ; --*
lin spotless_A = mkA "imaculado" ; --*
lin spotlight_1_N = variants {mkN "centro" ; mkN "eye" ; } ; --*
lin spotlight_1_V2 = variants {mkV2 (mkV "destacar") ; mkV2 (mkV "realçar") ; mkV2 (mkV "salientar") ; mkV2 (mkV "up") ; } ; --*
lin spotlight_2_N = mkN "lâmpada" ; --*
lin spotter_3_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin spotter_4_N = mkN "descobridor" ; --*
lin spousal_1_A = mkA "nupcial" ; --*
lin spousal_2_A = mkA "conjugal" ; --*
lin spouseFem_N = variants {mkN "colega" ; mkN "cónjuge" ; mkN "cônjuge" ; mkN "esposa" ; mkN "half" ; mkN "homem" ; mkN "marido" ; mkN "person" ; } ; --*
lin spouseMasc_N = variants {mkN "colega" ; mkN "cónjuge" ; mkN "cônjuge" ; mkN "esposa" ; mkN "half" ; mkN "homem" ; mkN "marido" ; mkN "person" ; } ; --*
lin spout_1_V = variants {mkV "borbotar" ; mkV "esguichar" ; mkV "jorrar" ; mkV "minar" ; } ; --*
lin spout_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "on") ; mkV2 (mkV "reclamar") ; } ; --*
lin spout_2_V = variants {mkV "off" ; mkV "on" ; mkV "reclamar" ; } ; --*
lin sprain_N = variants {mkN "Entorse" ; mkN "torcedura" ; } ; --*
lin sprain_V2 = mkV2 (mkV "torcer") ; --*
lin sprawl_1_N = variants {mkN "conurbação" ; mkN "sprawl" ; } ; --*
lin spray_2_V2 = mkV2 (mkV "borrifar") ; --*
lin spray_3_N = mkN "ramalhete" ; --*
lin spray_4_N = variants {mkN "atomizador" ; mkN "bombas" ; mkN "nebulizador" ; } ; --*
lin spray_5_N = mkN "respingo" ; --*
lin sprayer_1_N = mkN "pulverizador" ; --*
lin sprayer_2_N = variants {mkN "atomizador" ; mkN "bombas" ; mkN "nebulizador" ; } ; --*
lin spread_10_N = mkN "espalhamento" ; --*
lin spread_10_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "passar") ; } ; --*
lin spread_1_V2 = variants {mkV2 (mkV "disseminar") ; mkV2 (mkV "distribuir") ; mkV2 (mkV "espalhar") ; } ; --*
lin spread_3_N = variants {mkN "farm" ; mkN "granja" ; mkN "ranch" ; mkN "rancho" ; mkN "roça" ; mkN "terras" ; } ; --*
lin spread_4_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "desdobrar") ; mkV2 (mkV "out") ; } ; --*
lin spread_5_N = mkN "pasta" ; --*
lin spread_5_V2 = variants {mkV2 (mkV "alastrar") ; mkV2 (mkV "around") ; mkV2 (mkV "difundir") ; mkV2 (mkV "disseminar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "transmitir") ; } ; --*
lin spread_6_N = variants {mkN "ágape" ; mkN "banquete" ; mkN "comerembanquete" ; } ; --*
lin spread_6_V = variants {mkV "around" ; mkV "circular" ; mkV "espalhar" ; } ; --*
lin spread_7_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "esparramar") ; mkV2 (mkV "out") ; } ; --*
lin spread_8_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "out") ; } ; --*
lin spread_9_N = variants {mkN "colcha" ; mkN "cover" ; mkN "covering" ; } ; --*
lin spread_9_V2 = mkV2 (mkV "espalhar") ; --*
lin spread_out_1_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "out") ; } ; --*
lin spread_out_4_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "out") ; } ; --*
lin spread_out_6_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "espalhar") ; mkV2 (mkV "out") ; } ; --*
lin spread_out_7_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "desdobrar") ; mkV2 (mkV "out") ; } ; --*
lin spreadsheet_N = variants {mkN "folha" ; mkN "planilha" ; } ; --*
lin sprig_1_N = variants {mkN "galho" ; mkN "raminho" ; mkN "ramo" ; } ; --*
lin sprightliness_N = variants {mkN "alma" ; mkN "vida" ; } ; --*
lin spring_1_N = mkN "primavera" ; --*
lin spring_1_V2 = variants {mkV2 (mkV "pular") ; mkV2 (mkV "saltar") ; } ; --*
lin spring_1_V = variants {mkV "pular" ; mkV "saltar" ; } ; --*
lin spring_2_N = mkN "mola" ; --*
lin spring_3_N = variants {mkN "Nascente" ; mkN "spring" ; } ; --*
lin spring_3_V = variants {mkV "a" ; mkV "saltar" ; } ; --*
lin spring_4_N = variants {mkN "fonte" ; mkN "manancial" ; mkN "nascente" ; } ; --*
lin spring_5_N = mkN "elasticidade" ; --*
lin spring_5_V2 = mkV2 (mkV "anunciar") ; --*
lin spring_6_N = variants {mkN "pulo" ; mkN "salto" ; } ; --*
lin spring_balance_N = variants {mkN "balance" ; mkN "scale" ; } ; --*
lin springboard_1_N = mkN "prancha" ; --*
lin springbok_1_N = variants {mkN "Cabra-de-leque" ; mkN "euchore" ; mkN "marsupialis" ; } ; --*
lin springfield_1_PN = variants {mkPN "of" ; mkPN "Springfield" ; } ; --*
lin springfield_2_PN = mkPN "Springfield" ; --*
lin springfield_3_PN = mkPN "Springfield" ; --*
lin springtime_N = mkN "primavera" ; --*
lin spring_up_1_V = variants {mkV "originar-se" ; mkV "provir" ; mkV "surgir" ; mkV "up" ; } ; --*
lin springy_1_A = mkA "elástico" ; --*
lin sprinkle_1_V2 = variants {mkV2 (mkV "espalhar") ; mkV2 (mkV "salpicar") ; } ; --*
lin sprinkle_2_N = mkN "jogaráguabenta" ; --*
lin sprinkle_2_V2 = mkV2 (mkV "borrifar") ; --*
lin sprinkle_3_V2 = mkV2 (mkV "borrifar") ; --*
lin sprinkle_4_V2 = variants {mkV2 (mkV "aspergir") ; mkV2 (mkV "orvalhar") ; mkV2 (mkV "regar") ; } ; --*
lin sprinkling_3_N = mkN "aspersão" ; --*
lin sprinkling_4_N = mkN "jogaráguabenta" ; --*
lin sprint_N = mkN "carreira" ; --*
lin sprite_N = variants {mkN "fada" ; mkN "Fadas" ; } ; --*
lin sprout_1_V = variants {mkV "forth" ; mkV "germinar" ; } ; --*
lin sprout_2_N = variants {mkN "broto" ; mkN "rebento" ; } ; --*
lin spruce_2_N = variants {mkN "abeto" ; mkN "espruce" ; mkN "pícea" ; } ; --*
lin spry_A = variants {mkA "ágil" ; mkA "ativo" ; mkA "lépido" ; mkA "lesto" ; mkA "ligeiro" ; mkA "rápido" ; mkA "serelepe" ; } ; --*
lin spud_1_N = variants {mkN "batata" ; mkN "batatinha" ; mkN "marmêndoa" ; mkN "potato" ; } ; --*
lin spud_2_N = variants {mkN "batata" ; mkN "spud" ; } ; --*
lin spue_1_V = mkV "cuspir" ; --*
lin spue_2_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin spue_2_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin spunk_1_N = mkN "esporra" ; --*
lin spunk_2_N = variants {mkN "coragem" ; mkN "nervo" ; } ; --*
lin spur_1_N = mkN "provocação" ; --*
lin spur_1_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "instigar") ; mkV2 (mkV "provocar") ; } ; --*
lin spur_2_V2 = mkV2 (mkV "encorajar") ; --*
lin spur_2_V = mkV "encorajar" ; --*
lin spur_3_N = mkN "espora" ; --*
lin spur_4_N = mkN "espora" ; --*
lin spurge_N = mkN "eufórbio" ; --*
lin spurn_V2 = variants {mkV2 (mkV "desprezar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin spurt_1_V = variants {mkV "borbotar" ; mkV "esguichar" ; mkV "jorrar" ; mkV "minar" ; } ; --*
lin spurt_N = mkN "esguinche" ; --*
lin sputter_5_V2 = variants {mkV2 (mkV "cuspir") ; mkV2 (mkV "out") ; } ; --*
lin sputter_5_V = variants {mkV "cuspir" ; mkV "out" ; } ; --*
lin sputum_N = variants {mkN "escarro" ; mkN "muco" ; mkN "Sputa" ; } ; --*
lin spy_1_N = variants {mkN "agent" ; mkN "espião" ; } ; --*
lin spy_1_V2 = mkV2 (mkV "ver") ; --*
lin spy_2_V2 = mkV2 (mkV "espiar") ; --*
lin spy_2_V = mkV "espiar" ; --*
lin spy_3_V2 = variants {mkV2 (mkV "avistar") ; mkV2 (mkV "dar") ; mkV2 (mkV "divisar") ; mkV2 (mkV "prestar") ; mkV2 (mkV "ver") ; } ; --*
lin spy_4_V = mkV "espiar" ; --*
lin spyglass_N = variants {mkN "glass" ; mkN "luneta" ; } ; --*
lin spying_3_N = mkN "detecção" ; --*
lin spyware_N = mkN "spyware" ; --*
lin squab_1_N = mkN "pombo" ; --*
lin squabble_N = mkN "desavença" ; --*
lin squabble_V = variants {mkV "bicar" ; mkV "discutir" ; } ; --*
lin squad_1_N = mkN "companhia" ; --*
lin squad_2_N = variants {mkN "companhia" ; mkN "equipa" ; mkN "equipe" ; mkN "time" ; } ; --*
lin squadron_1_N = mkN "esquadrão" ; --*
lin squalid_1_A = mkA "imundo" ; --*
lin squalid_2_A = mkA "sórdido" ; --*
lin squall_1_V = mkV "gritar" ; --*
lin squall_2_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin squall_3_V = mkV "ventar" ; --*
lin squall_N = variants {mkN "aguaceiro" ; mkN "borrasca" ; mkN "rajada" ; mkN "tempestade" ; mkN "vendaval" ; } ; --*
lin squalor_N = variants {mkN "esqualidez" ; mkN "esqualor" ; } ; --*
lin squander_1_V2 = mkV2 (mkV "desperdiçar") ; --*
lin squander_2_V2 = variants {mkV2 (mkV "delapidar") ; mkV2 (mkV "desperdiçar") ; mkV2 (mkV "dilapidar") ; mkV2 (mkV "esbanjar") ; } ; --*
lin square_1_A = mkA "quadrado" ; --*
lin square_1_N = variants {mkN "quadrado" ; mkN "Quadrado" ; } ; --*
lin square_2_A = mkA "correto" ; --*
lin square_2_N = variants {mkN "power" ; mkN "quadrado" ; } ; --*
lin square_2_V2 = mkV2 (mkV "elevar") ; --*
lin square_2_V = mkV "elevar" ; --*
lin square_3_N = variants {mkN "praça" ; mkN "square" ; } ; --*
lin square_4_A = variants {mkA "direto" ; mkA "honesto" ; } ; --*
lin square_away_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "away") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin square_off_V = variants {mkV "decidir" ; mkV "off" ; mkV "up" ; } ; --*
lin squaretail_N = mkN "Tetragonuridae" ; --*
lin square_toed_1_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin square_up_3_V = variants {mkV "decidir" ; mkV "off" ; mkV "up" ; } ; --*
lin squash_1_N = variants {mkN "abóbora" ; mkN "vine" ; } ; --*
lin squash_2_N = mkN "abóbora" ; --*
lin squash_3_N = variants {mkN "rackets" ; mkN "racquets" ; mkN "Squash" ; } ; --*
lin squash_V2 = mkV2 (mkV "esmagar") ; --*
lin squashy_3_A = mkA "esponjoso" ; --*
lin squat_1_N = variants {mkN "Agachamento" ; mkN "bend" ; } ; --*
lin squat_1_V = variants {mkV "acocorar" ; mkV "acocorar-se" ; mkV "agachar" ; mkV "baixar-se" ; mkV "down" ; mkV "up" ; } ; --*
lin squat_2_N = mkN "porcaria" ; --*
lin squat_2_V = mkV "estar" ; --*
lin squat_3_N = variants {mkN "agachamento" ; mkN "cócoras" ; } ; --*
lin squawk_1_V = mkV "gritar" ; --*
lin squawk_2_N = variants {mkN "queixa" ; mkN "reclamação" ; } ; --*
lin squawk_2_V = variants {mkV "gritar" ; mkV "reclamar" ; } ; --*
lin squeak_2_V2 = mkV2 (mkV "gritar") ; --*
lin squeal_1_V2 = mkV2 (mkV "gritar") ; --*
lin squeal_1_V = mkV "gritar" ; --*
lin squeal_2_V2 = mkV2 (mkV "confessar") ; --*
lin squeal_2_V = mkV "confessar" ; --*
lin squealer_1_N = mkN "delator" ; --*
lin squealer_2_N = variants {mkN "porco" ; mkN "scrofa" ; mkN "suíno" ; mkN "Sus" ; } ; --*
lin squeal_N = mkN "gritar" ; --*
lin squeegee_N = mkN "rodo" ; --*
lin squeeze_1_V2 = mkV2 (mkV "esmagar") ; --*
lin squeeze_2_V2 = mkV2 (mkV "espremer") ; --*
lin squeeze_4_V2 = variants {mkV2 (mkV "compelir") ; mkV2 (mkV "forçar") ; mkV2 (mkV "obrigar") ; } ; --*
lin squeeze_5_V2 = mkV2 (mkV "extorquir") ; --*
lin squeeze_6_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "enfiar") ; } ; --*
lin squeeze_7_N = mkN "abraço" ; --*
lin squeeze_7_V2 = variants {mkV2 (mkV "apertar") ; mkV2 (mkV "beliscar") ; mkV2 (mkV "espremer") ; } ; --*
lin squeeze_8_V2 = variants {mkV2 (mkV "abraçar") ; mkV2 (mkV "acariciar") ; } ; --*
lin squeeze_8_V = variants {mkV "abraçar" ; mkV "acariciar" ; } ; --*
lin squeeze_9_V2 = variants {mkV2 (mkV "comprimir") ; mkV2 (mkV "contrair") ; } ; --*
lin squeeze_out_6_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "out") ; } ; --*
lin squelch_1_V2 = mkV2 (mkV "debelar") ; --*
lin squelch_4_V2 = mkV2 (mkV "esmagar") ; --*
lin squid_1_N = mkN "calamar" ; --*
lin squid_2_N = variants {mkN "calamar" ; mkN "lula" ; } ; --*
lin squint_1_N = mkN "estrabismo" ; --*
lin squint_1_V = variants {mkV "olhar" ; mkV "ser" ; mkV "vesguear" ; } ; --*
lin squinter_N = mkN "estrábico" ; --*
lin squire_1_N = mkN "escudeiro" ; --*
lin squirm_V = variants {mkV "contorcer" ; mkV "enroscar" ; mkV "espernear" ; mkV "torcer-se" ; } ; --*
lin squirrel_1_N = variants {mkN "esquilo" ; mkN "serelepe" ; } ; --*
lin squirrel_2_N = variants {mkN "Esquilos" ; mkN "Sciuridae" ; } ; --*
lin squirt_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "out") ; } ; --*
lin squirt_2_N = mkN "esguinche" ; --*
lin sr_1_PN = variants {mkPN "Estroncio" ; mkPN "estrôncio" ; mkPN "number" ; } ; --*
lin sr_2_PN = mkPN "esferorradiano" ; --*
lin sri_lankan_A = variants {mkA "cingalês" ; mkA "Lankan" ; } ; --*
lin sri_lanka_PN = variants {mkPN "Ceilão" ; mkPN "Lanka" ; mkPN "Socialist" ; } ; --*
lin ss_1_N = variants {mkN "Secret" ; mkN "Service" ; mkN "States" ; mkN "United" ; } ; --*
lin ss_2_N = variants {mkN "Schutzstaffel" ; mkN "Schutz-staffel" ; mkN "Schutz-Staffel" ; mkN "SS" ; } ; --*
lin stab_1_V2 = variants {mkV2 (mkV "aferroar") ; mkV2 (mkV "apunhalar") ; mkV2 (mkV "esfaquear") ; } ; --*
lin stab_2_V2 = variants {mkV2 (mkV "apunhalar") ; mkV2 (mkV "esfaquear") ; } ; --*
lin stab_3_N = variants {mkN "chute" ; mkN "tacada" ; } ; --*
lin stab_3_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "cotovelar") ; mkV2 (mkV "cutucar") ; } ; --*
lin stabile_2_A = variants {mkA "estacionário" ; mkA "imóvel" ; } ; --*
lin stability_1_N = mkN "estabilidade" ; --*
lin stability_2_N = mkN "estabilidade" ; --*
lin stabilization_1_N = mkN "estabilização" ; --*
lin stabilize_1_V2 = mkV2 (mkV "estabilizar") ; --*
lin stabilize_3_V = mkV "estabilizar-se" ; --*
lin stable_1_A = mkA "estável" ; --*
lin stable_1_N = variants {mkN "barn" ; mkN "Estábulo" ; mkN "estábulos" ; mkN "quarteirão" ; } ; --*
lin stableboy_N = mkN "palafreneiro" ; --*
lin stableman_N = mkN "palafreneiro" ; --*
lin staccato_A = mkA "staccato" ; --*
lin stack_1_N = variants {mkN "montão" ; mkN "pilha" ; } ; --*
lin stack_2_V2 = variants {mkV2 (mkV "acumular") ; mkV2 (mkV "agavelar") ; mkV2 (mkV "empilhar") ; } ; --*
lin stack_3_N = variants {mkN "list" ; mkN "pilha" ; mkN "stack" ; } ; --*
lin stack_4_N = variants {mkN "canodachaminé" ; mkN "chaminé" ; } ; --*
lin stacker_N = mkN "empilhadora" ; --*
lin stack_of_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin stacks_1_N = mkN "montão" ; --*
lin stadium_N = variants {mkN "estádio" ; mkN "stadium" ; } ; --*
lin staff_1_N = variants {mkN "equipe" ; mkN "estado-maior" ; mkN "pessoal" ; } ; --*
lin staff_3_N = variants {mkN "faculdade" ; mkN "faculdades" ; mkN "Universidades" ; } ; --*
lin staff_5_N = mkN "vareta" ; --*
lin staff_6_N = mkN "pauta" ; --*
lin staff_office_N = variants {mkN "department" ; mkN "office" ; mkN "pessoal" ; } ; --*
lin stag_1_N = mkN "veado" ; --*
lin stag_3_V = mkV "espiar" ; --*
lin stage_1_N = variants {mkN "fase" ; mkN "período" ; } ; --*
lin stage_1_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "encenar") ; } ; --*
lin stage_2_N = variants {mkN "ápice" ; mkN "fase" ; mkN "grau" ; mkN "nível" ; } ; --*
lin stage_2_V2 = variants {mkV2 (mkV "arranjar") ; mkV2 (mkV "realizar") ; } ; --*
lin stage_3_N = variants {mkN "palco" ; mkN "Palco" ; mkN "teatro" ; } ; --*
lin stage_4_N = mkN "teatro" ; --*
lin stage_5_N = mkN "diligência" ; --*
lin stage_6_N = variants {mkN "etapa" ; mkN "parada" ; } ; --*
lin stagecoach_N = mkN "diligência" ; --*
lin stager_2_N = variants {mkN "hand" ; mkN "stager" ; mkN "veterano" ; } ; --*
lin stagflation_N = mkN "Estagflação" ; --*
lin stagger_3_V = variants {mkV "distribuir" ; mkV "escalonar" ; } ; --*
lin stagger_4_V = mkV "inundar" ; --*
lin staggeringly_Adv = variants {mkAdv "enormemente" ; mkAdv "extremamente" ; mkAdv "muitíssimo" ; } ; --*
lin staging_2_N = variants {mkN "andaime" ; mkN "Andaime" ; } ; --*
lin stagnate_2_V = mkV "ficar" ; --*
lin stag_party_N = variants {mkN "despedida" ; mkN "party" ; } ; --*
lin staid_A = variants {mkA "grave" ; mkA "parco" ; mkA "sério" ; mkA "sisudo" ; mkA "sóbrio" ; } ; --*
lin staidness_N = mkN "solenidade" ; --*
lin stain_1_V2 = mkV2 (mkV "colorir") ; --*
lin stain_2_V2 = mkV2 (mkV "manchar") ; --*
lin stain_3_N = variants {mkN "gordura" ; mkN "sujeira" ; } ; --*
lin stain_3_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin stain_4_N = variants {mkN "estigma" ; mkN "mancha" ; mkN "marca" ; } ; --*
lin stain_4_V2 = mkV2 (mkV "tingir") ; --*
lin stain_4_V = mkV "tingir" ; --*
lin stain_5_N = variants {mkN "mácula" ; mkN "mancha" ; } ; --*
lin staining_1_N = mkN "Coloração" ; --*
lin staircase_N = mkN "escada" ; --*
lin stair_N = mkN "degrau" ; --*
lin stairway_N = mkN "escada" ; --*
lin stake_1_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "aventurar") ; mkV2 (mkV "aventurar-se") ; } ; --*
lin stake_2_N = mkN "poste" ; --*
lin stake_2_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "on") ; } ; --*
lin stake_3_V2 = mkV2 (mkV "estacar") ; --*
lin stake_4_N = mkN "aposta" ; --*
lin stake_4_V2 = mkV2 (mkV "estacar") ; --*
lin stake_5_N = mkN "estaca" ; --*
lin stake_5_V2 = mkV2 (mkV "empalar") ; --*
lin stake_holder_N = mkN "parte" ; --*
lin stalagmite_N = mkN "estalagmite" ; --*
lin stalemate_1_N = variants {mkN "end" ; mkN "estancamento" ; mkN "impasse" ; } ; --*
lin stalemate_2_N = mkN "Rei" ; --*
lin stalk_1_N = mkN "palha" ; --*
lin stalk_2_N = variants {mkN "caule" ; mkN "tronco" ; } ; --*
lin stalk_2_V2 = variants {mkV2 (mkV "aparacer") ; mkV2 (mkV "perseguir") ; mkV2 (mkV "seguir") ; } ; --*
lin stalk_4_N = mkN "stalking" ; --*
lin stalking_horse_2_N = mkN "pretexto" ; --*
lin stalk_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "dar" ; } ; --*
lin stall_1_N = mkN "curro" ; --*
lin stall_1_V = variants {mkV "adiar" ; mkV "enrolar" ; mkV "one's" ; mkV "procrastinar" ; } ; --*
lin stall_2_N = variants {mkN "cabine" ; mkN "quiosque" ; } ; --*
lin stall_2_V = mkV "parar" ; --*
lin stall_3_N = variants {mkN "barraca" ; mkN "booth" ; mkN "estande" ; } ; --*
lin stall_3_V = variants {mkV "atrasar" ; mkV "enrolar" ; mkV "procrastinar" ; } ; --*
lin stall_7_V2 = variants {mkV2 (mkV "morrer") ; mkV2 (mkV "parar") ; } ; --*
lin stallion_N = mkN "garanhão" ; --*
lin stalwart_1_A = mkA "rijo" ; --*
lin stamen_N = mkN "estame" ; --*
lin stamina_N = variants {mkN "capacidade" ; mkN "power" ; } ; --*
lin stammer_N = variants {mkN "gagueira" ; mkN "gaguejo" ; } ; --*
lin stammer_V = variants {mkV "balbuciar" ; mkV "gaguejar" ; } ; --*
lin stamp_1_V = mkV "pisar" ; --*
lin stamp_2_N = mkN "classe" ; --*
lin stamp_3_N = mkN "selo" ; --*
lin stamp_4_N = variants {mkN "selo" ; mkN "selodocorreio" ; mkN "Selos" ; mkN "stamp" ; } ; --*
lin stamp_5_V2 = mkV2 (mkV "estereotipar") ; --*
lin stamp_9_N = variants {mkN "carimbo" ; mkN "selo" ; mkN "sinete" ; mkN "timbre" ; } ; --*
lin stamp_collector_N = variants {mkN "collector" ; mkN "filatelista" ; } ; --*
lin stampede_1_N = mkN "Stampede" ; --*
lin stampede_1_V2 = mkV2 (mkV "disparar") ; --*
lin stampede_3_V2 = variants {mkV2 (mkV "debandar") ; mkV2 (mkV "disparar") ; } ; --*
lin stampede_4_V2 = mkV2 (mkV "debandar") ; --*
lin stampede_4_V = mkV "debandar" ; --*
lin stamping_ground_N = variants {mkN "ground" ; mkN "lugar" ; } ; --*
lin stamp_out_V2 = variants {mkV2 (mkV "matar") ; mkV2 (mkV "out") ; } ; --*
lin stance_1_N = variants {mkN "posição" ; mkN "postura" ; } ; --*
lin stance_2_N = variants {mkN "atitude" ; mkN "posição" ; mkN "postura" ; } ; --*
lin stanchion_N = variants {mkN "estaca" ; mkN "mourão" ; mkN "poste" ; } ; --*
lin stanch_V2 = variants {mkV2 (mkV "estagnar") ; mkV2 (mkV "estancar") ; } ; --*
lin stand_10_N = mkN "arquibancada" ; --*
lin stand_10_V2 = variants {mkV2 (mkV "levantar") ; mkV2 (mkV "up") ; mkV2 (mkV "upright") ; } ; --*
lin stand_11_N = variants {mkN "coreto" ; mkN "stage" ; } ; --*
lin stand_11_V2 = mkV2 (mkV "resistir") ; --*
lin stand_1_N = mkN "pé" ; --*
lin stand_1_V = variants {mkV "ficar" ; mkV "up" ; } ; --*
lin stand_2_N = variants {mkN "lugar" ; mkN "posição" ; mkN "posto" ; } ; --*
lin stand_5_N = mkN "prateleira" ; --*
lin stand_5_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin stand_6_N = mkN "paralisação" ; --*
lin stand_6_V = mkV "posicionar" ; --*
lin stand_7_N = variants {mkN "of" ; mkN "ponto" ; } ; --*
lin stand_7_V2 = variants {mkV2 (mkV "estar") ; mkV2 (mkV "ficar") ; } ; --*
lin stand_8_N = variants {mkN "barraca" ; mkN "booth" ; mkN "estande" ; } ; --*
lin stand_8_V = mkV "valer" ; --*
lin standard_1_A = mkA "padrão" ; --*
lin standard_1_N = variants {mkN "critério" ; mkN "padrões" ; } ; --*
lin standard_2_N = variants {mkN "padrão" ; mkN "standard" ; } ; --*
lin standard_5_A = mkA "padrão" ; --*
lin standard_6_N = mkN "estandarte" ; --*
lin standardization_1_N = mkN "padronização" ; --*
lin standardization_2_N = variants {mkN "estandardização" ; mkN "homologação" ; mkN "normalização" ; mkN "padronização" ; } ; --*
lin standardization_3_N = mkN "calibração" ; --*
lin standardize_1_V2 = mkV2 (mkV "padronizar") ; --*
lin standardize_2_V2 = mkV2 (mkV "padronizar") ; --*
lin stand_back_1_V = variants {mkV "away" ; mkV "back" ; mkV "one's" ; } ; --*
lin stand_by_3_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "ficar") ; } ; --*
lin stand_for_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "representar") ; mkV2 (mkV "simbolizar") ; } ; --*
lin stand_for_2_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "significar") ; } ; --*
lin stand_for_3_V2 = variants {mkV2 (mkV "corresponder") ; mkV2 (mkV "for") ; mkV2 (mkV "representar") ; } ; --*
lin stand_for_4_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "still") ; } ; --*
lin stand_in_N = variants {mkN "dobro" ; mkN "man" ; } ; --*
lin stand_out_1_V = variants {mkV "out" ; mkV "saltar" ; } ; --*
lin stand_out_2_V = variants {mkV "exceder" ; mkV "out" ; mkV "sobressair" ; } ; --*
lin standpoint_N = variants {mkN "of" ; mkN "ponto" ; } ; --*
lin standstill_1_N = variants {mkN "end" ; mkN "estancamento" ; mkN "impasse" ; } ; --*
lin standstill_2_N = mkN "paralisação" ; --*
lin stanford_1_PN = variants {mkPN "Leland" ; mkPN "Stanford" ; } ; --*
lin stanford_2_PN = variants {mkPN "Universidade" ; mkPN "University" ; } ; --*
lin stanza_N = mkN "estrofe" ; --*
lin stapedectomy_N = mkN "Estapedectomia" ; --*
lin stapes_N = variants {mkN "estapédio" ; mkN "estribo" ; } ; --*
lin staple_3_N = variants {mkN "material" ; mkN "matéria-prima" ; } ; --*
lin staple_5_N = mkN "grampo" ; --*
lin stapler_N = variants {mkN "grampeador" ; mkN "machine" ; } ; --*
lin staple_V2 = variants {mkV2 (mkV "agrafar") ; mkV2 (mkV "grampear") ; } ; --*
lin stapling_machine_N = variants {mkN "grampeador" ; mkN "machine" ; } ; --*
lin star_1_N = mkN "estrela" ; --*
lin star_1_V2 = variants {mkV2 (mkV "estrelar") ; mkV2 (mkV "protagonizar") ; } ; --*
lin star_2_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin star_2_V2 = variants {mkV2 (mkV "estrelar") ; mkV2 (mkV "protagonizar") ; } ; --*
lin star_3_N = mkN "estrela" ; --*
lin star_4_N = mkN "ator" ; --*
lin star_5_N = mkN "estrela" ; --*
lin star_7_N = variants {mkN "asterisco" ; mkN "Asterisco" ; } ; --*
lin starboard_N = variants {mkN "boreste" ; mkN "estibordo" ; } ; --*
lin starch_1_N = variants {mkN "amido" ; mkN "carbohidrato" ; mkN "fécula" ; } ; --*
lin starch_2_N = variants {mkN "apresto" ; mkN "engomar" ; } ; --*
lin starch_V2 = mkV2 (mkV "engomar") ; --*
lin stare_1_V = variants {mkV "contemplar" ; mkV "encarar" ; mkV "fitar" ; mkV "fixar" ; mkV "olhar" ; mkV "ver" ; } ; --*
lin stare_2_V = mkV "olhar" ; --*
lin stare_N = mkN "olhar" ; --*
lin starfish_N = variants {mkN "estrela-do-mar" ; mkN "star" ; } ; --*
lin stargazer_2_N = variants {mkN "astrónomo" ; mkN "astrônomo" ; mkN "Astrónomos" ; } ; --*
lin stargazer_3_N = mkN "Uranoscopidae" ; --*
lin stark_2_A = mkA "austero" ; --*
lin stark_5_A = variants {mkA "árido" ; mkA "desolado" ; mkA "estéril" ; } ; --*
lin starling_N = mkN "estorninho" ; --*
lin starry_A = mkA "estrelado" ; --*
lin starship_N = variants {mkN "espaçonave" ; mkN "nave" ; mkN "Nave" ; } ; --*
lin start_10_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "up") ; } ; --*
lin start_12_V = variants {mkV "começar" ; mkV "iniciar" ; mkV "principiar" ; } ; --*
lin start_13_V2 = mkV2 (mkV "começar") ; --*
lin start_1_N = variants {mkN "começo" ; mkN "decolagem" ; mkN "início" ; mkN "princípio" ; } ; --*
lin start_1_V = variants {mkV "about" ; mkV "começar" ; mkV "down" ; mkV "iniciar" ; mkV "out" ; mkV "principiar" ; } ; --*
lin start_2_N = variants {mkN "começo" ; mkN "início" ; mkN "princípio" ; mkN "time" ; } ; --*
lin start_2_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "off") ; } ; --*
lin start_3_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin start_4_V = variants {mkV "começar" ; mkV "iniciar" ; mkV "principiar" ; } ; --*
lin start_5_N = variants {mkN "começo" ; mkN "início" ; } ; --*
lin start_5_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "originar") ; mkV2 (mkV "provir") ; mkV2 (mkV "tomar") ; } ; --*
lin start_6_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "iniciar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin start_7_V2 = variants {mkV2 (mkV "saltar") ; mkV2 (mkV "surpreender-se") ; } ; --*
lin start_8_N = variants {mkN "lucro" ; mkN "start" ; } ; --*
lin start_9_V = variants {mkV "começar" ; mkV "going" ; } ; --*
lin starter_1_N = mkN "motor" ; --*
lin starter_4_N = variants {mkN "iniciante" ; mkN "novato" ; } ; --*
lin starter_5_N = variants {mkN "antepasto" ; mkN "aperitivo" ; } ; --*
lin starter_6_N = mkN "manivela" ; --*
lin start_ing_12_VV = variants {mkVV (mkV "começar") ; mkVV (mkV "iniciar") ; mkVV (mkV "principiar") ; } ; --*
lin start_ing_7_VV = variants {mkVV (mkV "saltar") ; mkVV (mkV "surpreender-se") ; } ; --*
lin startle_1_V2 = mkV2 (mkV "amendrontar") ; --*
lin startle_2_V2 = variants {mkV2 (mkV "saltar") ; mkV2 (mkV "surpreender-se") ; } ; --*
lin start_out_2_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin start_to_12_VV = variants {mkVV (mkV "começar") ; mkVV (mkV "iniciar") ; mkVV (mkV "principiar") ; } ; --*
lin start_to_1_VV = variants {mkVV (mkV "começar") ; mkVV (mkV "going") ; } ; --*
lin start_to_7_VV = variants {mkVV (mkV "saltar") ; mkVV (mkV "surpreender-se") ; } ; --*
lin startup_2_N = variants {mkN "inauguração" ; mkN "posse" ; } ; --*
lin starvation_1_N = variants {mkN "fome" ; mkN "inanição" ; mkN "morte" ; } ; --*
lin starve_1_V = variants {mkV "estar" ; mkV "morrer" ; mkV "passar" ; } ; --*
lin starve_2_V = variants {mkV "morrer" ; mkV "passar" ; } ; --*
lin starve_3_V2 = mkV2 (mkV "esfomear") ; --*
lin starve_4_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "querer") ; mkV2 (mkV "ter") ; } ; --*
lin starve_4_V = variants {mkV "desejar" ; mkV "querer" ; mkV "ter" ; } ; --*
lin stash_away_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "guardar") ; mkV2 (mkV "in") ; } ; --*
lin stasis_1_N = mkN "estase" ; --*
lin stasis_2_N = variants {mkN "estagnação" ; mkN "estase" ; } ; --*
lin state_1_N = variants {mkN "estado" ; mkN "província" ; } ; --*
lin state_1_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; } ; --*
lin state_2_N = variants {mkN "condição" ; mkN "estado" ; mkN "situação" ; } ; --*
lin state_2_V2 = variants {mkV2 (mkV "atestar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "forward") ; mkV2 (mkV "propor") ; } ; --*
lin state_2_VS = variants {mkVS (mkV "atestar") ; mkVS (mkV "dizer") ; mkVS (mkV "forward") ; mkVS (mkV "propor") ; } ; --*
lin state_3_N = mkN "Estado" ; --*
lin state_3_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "exprimir") ; } ; --*
lin state_4_N = variants {mkN "nação" ; mkN "país" ; mkN "politic" ; mkN "publica" ; mkN "república" ; mkN "união" ; } ; --*
lin state_5_N = variants {mkN "Estados" ; mkN "of" ; } ; --*
lin state_6_N = mkN "estado" ; --*
lin state_7_N = variants {mkN "nação" ; mkN "país" ; mkN "terra" ; } ; --*
lin state_8_N = variants {mkN "Departamento" ; mkN "Department" ; mkN "of" ; mkN "States" ; } ; --*
lin statecraft_N = mkN "diplomacia" ; --*
lin stateless_A = mkA "desnacionalizado" ; --*
lin stateliness_2_N = variants {mkN "majestade" ; mkN "títulogeraldecortesia" ; } ; --*
lin stately_1_A = variants {mkA "impo" ; mkA "nobre" ; } ; --*
lin statement_1_N = variants {mkN "declaração" ; mkN "descrição" ; mkN "Descrição" ; } ; --*
lin statement_2_N = mkN "argumento" ; --*
lin statement_5_N = variants {mkN "afirmação" ; mkN "asserção" ; } ; --*
lin statement_6_N = variants {mkN "instrução" ; mkN "Instrução" ; mkN "line" ; } ; --*
lin statement_7_N = variants {mkN "extrato" ; mkN "statement" ; } ; --*
lin statesman_N = variants {mkN "estadista" ; mkN "leader" ; } ; --*
lin statesmanship_N = mkN "diplomacia" ; --*
lin static_1_A = variants {mkA "estático" ; mkA "quedo" ; } ; --*
lin static_2_A = mkA "eletrostático" ; --*
lin statics_N = mkN "Estática" ; --*
lin station_0_N = variants {mkN "estação" ; mkN "posto" ; } ; --*
lin station_1_N = variants {mkN "estação" ; mkN "posto" ; } ; --*
lin station_2_N = mkN "posição" ; --*
lin station_4_N = mkN "lugar" ; --*
lin stationariness_N = mkN "imobilidade" ; --*
lin stationary_1_A = mkA "estacionário" ; --*
lin stationary_2_A = mkA "estacionário" ; --*
lin station_V2 = mkV2 (mkV "situar") ; --*
lin station_waggon_N = variants {mkN "car" ; mkN "carro" ; mkN "waggon" ; mkN "wagon" ; } ; --*
lin statistical_A = mkA "estatístico" ; --*
lin statisticianFem_1_N = variants {mkN "Estatísticos" ; mkN "statistician" ; } ; --*
lin statisticianFem_2_N = variants {mkN "actuário" ; mkN "atuário" ; } ; --*
lin statisticianMasc_1_N = variants {mkN "Estatísticos" ; mkN "statistician" ; } ; --*
lin statisticianMasc_2_N = variants {mkN "actuário" ; mkN "atuário" ; } ; --*
lin statistic_N = mkN "estatística" ; --*
lin statistics_N = variants {mkN "estatística" ; mkN "Estatística" ; mkN "estatísticas" ; } ; --*
lin stator_N = variants {mkN "coil" ; mkN "Estator" ; } ; --*
lin statuary_N = mkN "escultura" ; --*
lin statue_N = variants {mkN "estatua" ; mkN "estátua" ; mkN "Estátua" ; } ; --*
lin statuette_N = mkN "estatueta" ; --*
lin stature_2_N = variants {mkN "altura" ; mkN "estatura" ; } ; --*
lin status_1_N = variants {mkN "classe" ; mkN "condição" ; mkN "estado" ; mkN "posição" ; mkN "status" ; } ; --*
lin status_2_N = variants {mkN "condição" ; mkN "estado" ; mkN "Estado" ; mkN "situação" ; } ; --*
lin status_quo_N = mkN "quo" ; --*
lin statute_N = variants {mkN "act" ; mkN "estatuto" ; } ; --*
lin statutory_1_A = mkA "estatutário" ; --*
lin statutory_2_A = variants {mkA "estatutário" ; mkA "regulamentar" ; } ; --*
lin staunch_A = mkA "inquebrantável" ; --*
lin staunch_V2 = variants {mkV2 (mkV "estagnar") ; mkV2 (mkV "estancar") ; } ; --*
lin stave_1_N = mkN "pauta" ; --*
lin stave_off_V2 = variants {mkV2 (mkV "evitar") ; mkV2 (mkV "obviar") ; mkV2 (mkV "off") ; } ; --*
lin stay_11_VA = variants {mkVA (mkV "acalmar") ; mkVA (mkV "aplacar") ; } ; --*
lin stay_11_V = variants {mkV "acalmar" ; mkV "aplacar" ; } ; --*
lin stay_1_N = mkN "permanência" ; --*
lin stay_1_VA = variants {mkVA (mkV "continuar") ; mkVA (mkV "ficar") ; mkVA (mkV "manter") ; mkVA (mkV "permanecer") ; } ; --*
lin stay_2_VA = variants {mkVA (mkV "around") ; mkVA (mkV "estar") ; mkVA (mkV "ficar") ; mkVA (mkV "put") ; } ; --*
lin stay_2_V = variants {mkV "around" ; mkV "estar" ; mkV "ficar" ; mkV "put" ; } ; --*
lin stay_4_V = variants {mkV "ficar" ; mkV "on" ; mkV "permanecer" ; } ; --*
lin stay_5_V = mkV "ficar" ; --*
lin stay_6_V = mkV "atrasar" ; --*
lin stay_7_V = variants {mkV "albergar" ; mkV "ficar" ; mkV "permanecer" ; mkV "restar" ; } ; --*
lin stay_at_home_N = mkN "caseiro" ; --*
lin stay_away_V = variants {mkV "away" ; mkV "back" ; mkV "one's" ; } ; --*
lin std_1_PN = variants {mkPN "curse" ; mkPN "disease" ; mkPN "Doença" ; mkPN "infection" ; mkPN "itch" ; mkPN "transmitted" ; } ; --*
lin steadfast_2_A = mkA "inquebrantável" ; --*
lin steadiness_1_N = mkN "firmeza" ; --*
lin steadiness_2_N = mkN "firmeza" ; --*
lin stead_N = mkN "posição" ; --*
lin steady_1_A = mkA "imutável" ; --*
lin steady_3_A = mkA "fixo" ; --*
lin steady_5_A = mkA "habitual" ; --*
lin steady_Adv = mkAdv "constantemente" ; --*
lin steady_N = mkN "amor" ; --*
lin steakhouse_N = mkN "churrascaria" ; --*
lin steak_N = variants {mkN "bife" ; mkN "bifsteque" ; mkN "filé" ; } ; --*
lin steal_1_V2 = variants {mkV2 (mkV "furtar") ; mkV2 (mkV "roubar") ; } ; --*
lin steal_2_V = variants {mkV "desaparecer" ; mkV "mover" ; } ; --*
lin steal_3_V2 = mkV2 (mkV "roubar") ; --*
lin steal_3_V = mkV "roubar" ; --*
lin steal_away_V = variants {mkV "away" ; mkV "off" ; mkV "out" ; } ; --*
lin stealthy_A = variants {mkA "furtivo" ; mkA "sub-reptício" ; } ; --*
lin steam_2_V = mkV "emitir" ; --*
lin steam_4_V2 = mkV2 (mkV "enfurecer") ; --*
lin steamboat_N = mkN "Barco" ; --*
lin steam_boiler_N = variants {mkN "boiler" ; mkN "caldeira" ; } ; --*
lin steam_engine_N = mkN "engine" ; --*
lin steamer_3_N = variants {mkN "barco" ; mkN "vapor" ; } ; --*
lin steam_N = mkN "vapor" ; --*
lin steamroller_1_N = mkN "jamanta" ; --*
lin steamship_N = variants {mkN "barco" ; mkN "vapor" ; } ; --*
lin steamy_2_A = variants {mkA "pesado" ; mkA "úmido" ; } ; --*
lin steamy_3_A = variants {mkA "com" ; mkA "doidão" ; mkA "excitado" ; mkA "on" ; mkA "quente" ; } ; --*
lin stearin_N = mkN "estearina" ; --*
lin steatopygia_N = variants {mkN "esteatopigia" ; mkN "Esteatopigia" ; } ; --*
lin steatorrhea_N = variants {mkN "Esteatorreia" ; mkN "Esteatorréia" ; } ; --*
lin steed_N = mkN "corcel" ; --*
lin steel_1_N = mkN "aço" ; --*
lin steel_1_V2 = mkV2 (mkV "respirar") ; --*
lin steel_2_N = variants {mkN "espada" ; mkN "Espadas" ; mkN "gládio" ; } ; --*
lin steel_2_V2 = mkV2 (mkV "robustecer") ; --*
lin steel_3_N = mkN "aço" ; --*
lin steelworks_N = variants {mkN "aciaria" ; mkN "factory" ; mkN "mill" ; mkN "plant" ; } ; --*
lin steenbok_1_N = variants {mkN "campestris" ; mkN "Raphicerus" ; } ; --*
lin steep_1_A = variants {mkA "íngreme" ; mkA "íngrime" ; } ; --*
lin steep_1_V2 = variants {mkV2 (mkV "focar") ; mkV2 (mkV "up") ; } ; --*
lin steep_2_A = variants {mkA "descomunal" ; mkA "exorbitante" ; } ; --*
lin steep_3_A = mkA "empinado" ; --*
lin steeple_N = variants {mkN "agulha" ; mkN "coruchéu" ; mkN "flecha" ; mkN "topo" ; } ; --*
lin steer_1_N = variants {mkN "indicação" ; mkN "information" ; } ; --*
lin steer_1_V2 = variants {mkV2 (mkV "canalizar") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "governar") ; } ; --*
lin steer_2_N = mkN "boi" ; --*
lin steer_2_V = variants {mkV "direcionar" ; mkV "dirigir" ; mkV "esterçar" ; mkV "gerir" ; mkV "governar" ; } ; --*
lin steer_3_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "encaminhar") ; mkV2 (mkV "gerir") ; mkV2 (mkV "guiar") ; } ; --*
lin steerable_A = mkA "dirigível" ; --*
lin steerage_2_N = mkN "governo" ; --*
lin steering_1_N = variants {mkN "direção" ; mkN "direcção" ; mkN "directriz" ; mkN "gerência" ; mkN "gestão" ; } ; --*
lin steering_2_N = mkN "orientação" ; --*
lin steering_3_N = mkN "governo" ; --*
lin steering_wheel_N = variants {mkN "volante" ; mkN "wheel" ; } ; --*
lin stegosaur_1_N = variants {mkN "estegossauro" ; mkN "stenops" ; } ; --*
lin stele_2_N = variants {mkN "estela" ; mkN "Estelas" ; } ; --*
lin stella_PN = variants {mkPN "Frank" ; mkPN "Philip" ; mkPN "Stella" ; } ; --*
lin stellar_1_A = variants {mkA "astral" ; mkA "sideral" ; } ; --*
lin stellar_2_A = mkA "o" ; --*
lin stem_1_N = variants {mkN "radical" ; mkN "Radical" ; mkN "raiz" ; mkN "word" ; } ; --*
lin stem_2_N = variants {mkN "caule" ; mkN "tronco" ; } ; --*
lin stem_3_V2 = variants {mkV2 (mkV "estagnar") ; mkV2 (mkV "estancar") ; } ; --*
lin stem_5_N = mkN "proa" ; --*
lin stemless_2_A = mkA "Acaule" ; --*
lin stemma_2_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin stench_N = variants {mkN "fedor" ; mkN "pejo" ; } ; --*
lin stencil_N = variants {mkN "chapa" ; mkN "estêncil" ; } ; --*
lin stenographer_N = variants {mkN "estenógrafo" ; mkN "typist" ; } ; --*
lin stenographic_1_A = mkA "estenográfico" ; --*
lin stenography_1_N = variants {mkN "estenografia" ; mkN "Estenografia" ; mkN "taquigrafia" ; } ; --*
lin stenosed_A = mkA "estenótico" ; --*
lin stenosis_N = mkN "estenose" ; --*
lin stent_N = mkN "stent" ; --*
lin step_11_N = variants {mkN "passo" ; mkN "step" ; } ; --*
lin step_1_N = variants {mkN "medida" ; mkN "passo" ; } ; --*
lin step_2_N = mkN "passo" ; --*
lin step_3_N = mkN "passo" ; --*
lin step_4_N = mkN "degrau" ; --*
lin step_4_V = variants {mkV "abusar" ; mkV "destratar" ; mkV "maltratar" ; } ; --*
lin step_5_N = variants {mkN "gradação" ; mkN "grau" ; } ; --*
lin step_6_V = mkV "andar" ; --*
lin step_9_N = variants {mkN "gasto" ; mkN "pegada" ; } ; --*
lin step_back_V = variants {mkV "andar" ; mkV "caminhar" ; } ; --*
lin stepbrother_N = variants {mkN "brother" ; mkN "meio" ; } ; --*
lin stepchild_N = mkN "enteado" ; --*
lin step_down_1_V = variants {mkV "demitir-se" ; mkV "down" ; mkV "office" ; mkV "quitar" ; mkV "resignar" ; } ; --*
lin step_down_2_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin stepfather_N = mkN "padrasto" ; --*
lin stephen_PN = variants {mkPN "Estêvão" ; mkPN "Leslie" ; } ; --*
lin step_in_V = variants {mkV "in" ; mkV "substituir" ; } ; --*
lin stepmother_N = variants {mkN "madrasta" ; mkN "sogra" ; } ; --*
lin step_on_it_V2 = variants {mkV2 (mkV "along") ; mkV2 (mkV "apressar") ; mkV2 (mkV "correr") ; mkV2 (mkV "on") ; } ; --*
lin step_on_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "caminhar") ; mkV2 (mkV "pisar") ; } ; --*
lin step_over_V = variants {mkV "andar" ; mkV "caminhar" ; } ; --*
lin steppe_N = mkN "estepe" ; --*
lin steps_1_N = variants {mkN "escada" ; mkN "escadas" ; } ; --*
lin stepsister_N = variants {mkN "meia-irmã" ; mkN "sister" ; } ; --*
lin step_up_1_V2 = variants {mkV2 (mkV "aumentar") ; mkV2 (mkV "intensificar") ; mkV2 (mkV "up") ; } ; --*
lin steradian_N = mkN "esferorradiano" ; --*
lin stereo_1_N = variants {mkN "estereofonia" ; mkN "system" ; } ; --*
lin stereotype_N = mkN "estereótipo" ; --*
lin stereotype_V2 = mkV2 (mkV "estereotipar") ; --*
lin sterile_1_A = variants {mkA "estéril" ; mkA "improdutivo" ; mkA "infértil" ; } ; --*
lin sterile_2_A = variants {mkA "asséptico" ; mkA "estéril" ; } ; --*
lin sterility_2_N = mkN "infertilidade" ; --*
lin sterilization_1_N = variants {mkN "esterilização" ; mkN "Esterilização" ; } ; --*
lin sterilization_2_N = mkN "esterilização" ; --*
lin sterilize_1_V2 = mkV2 (mkV "esterilizar") ; --*
lin sterilize_2_V2 = mkV2 (mkV "esterilizar") ; --*
lin sterling_A = variants {mkA "o" ; mkA "superior" ; } ; --*
lin sterling_N = mkN "libra" ; --*
lin stern_1_A = mkA "severo" ; --*
lin stern_1_N = variants {mkN "part" ; mkN "popa" ; mkN "traseiro" ; } ; --*
lin stern_2_A = mkA "implacável" ; --*
lin stern_3_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin stern_4_A = mkA "austero" ; --*
lin sternocleidomastoid_N = variants {mkN "esternocleidomastoideu" ; mkN "mastoideus" ; mkN "muscle" ; mkN "sternocleidomastoideus" ; } ; --*
lin stern_PN = variants {mkPN "Isaac" ; mkPN "Stern" ; } ; --*
lin sternum_N = variants {mkN "esterno" ; mkN "osso" ; } ; --*
lin steroid_1_N = mkN "esteróide" ; --*
lin steroid_2_N = variants {mkN "esteróide" ; mkN "Hormona" ; mkN "hormone" ; mkN "Hormônios" ; } ; --*
lin sterol_N = variants {mkN "alcohol" ; mkN "Esterol" ; } ; --*
lin stethoscope_N = variants {mkN "auscultador" ; mkN "estetoscópio" ; mkN "Estetoscópio" ; } ; --*
lin stevedore_N = variants {mkN "carregador" ; mkN "estivador" ; mkN "worker" ; } ; --*
lin stevia_1_N = mkN "Stévia" ; --*
lin stevia_2_N = mkN "Stevia" ; --*
lin stew_1_V2 = mkV2 (mkV "ficar") ; --*
lin stew_1_V = mkV "ficar" ; --*
lin stew_2_N = variants {mkN "cozido" ; mkN "guisado" ; mkN "Guisados" ; } ; --*
lin stew_2_V2 = mkV2 (mkV "ressentir") ; --*
lin stew_2_V = mkV "ressentir" ; --*
lin stew_3_V2 = mkV2 (mkV "estufar") ; --*
lin steward_3_N = variants {mkN "attendant" ; mkN "comissária" ; mkN "comissário" ; mkN "tafeiro" ; } ; --*
lin steward_5_N = variants {mkN "guardião" ; mkN "tutor" ; } ; --*
lin stewardess_N = variants {mkN "comissária" ; mkN "hospedeira" ; mkN "hostess" ; } ; --*
lin stewart_2_PN = variants {mkPN "Dugald" ; mkPN "Stewart" ; } ; --*
lin stibnite_N = mkN "estibina" ; --*
lin stick_10_V2 = mkV2 (mkV "pregar") ; --*
lin stick_11_V2 = mkV2 (mkV "atar") ; --*
lin stick_12_V2 = mkV2 (mkV "espetar") ; --*
lin stick_14_V = variants {mkV "aderir" ; mkV "colar" ; } ; --*
lin stick_16_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin stick_1_N = variants {mkN "bastão" ; mkN "pau" ; mkN "vara" ; } ; --*
lin stick_2_V = variants {mkV "around" ; mkV "estar" ; mkV "ficar" ; mkV "put" ; } ; --*
lin stick_3_N = variants {mkN "manche" ; mkN "stick" ; } ; --*
lin stick_4_V = mkV "grudar" ; --*
lin stick_6_V = variants {mkV "aderir" ; mkV "manter" ; } ; --*
lin stick_7_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "ficar") ; } ; --*
lin stick_8_N = variants {mkN "baseado" ; mkN "Baseado" ; mkN "cigarette" ; } ; --*
lin stick_8_V2 = mkV2 (mkV "espetar") ; --*
lin stick_9_V2 = variants {mkV2 (mkV "colar") ; mkV2 (mkV "grudar") ; } ; --*
lin stick_around_2_V = variants {mkV "around" ; mkV "estar" ; mkV "ficar" ; mkV "put" ; } ; --*
lin stick_by_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "ficar") ; } ; --*
lin sticker_1_N = variants {mkN "acúleo" ; mkN "espinho" ; } ; --*
lin sticker_2_N = variants {mkN "etiqueta" ; mkN "label" ; } ; --*
lin sticker_4_N = variants {mkN "adaga" ; mkN "punhal" ; } ; --*
lin sticking_plaster_N = variants {mkN "diaquilão" ; mkN "plaster" ; } ; --*
lin stick_out_1_V = variants {mkV "out" ; mkV "projectar-se" ; } ; --*
lin stick_out_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "saltar") ; } ; --*
lin stick_out_2_V = variants {mkV "out" ; mkV "saltar" ; } ; --*
lin stick_out_3_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin stick_to_1_V2 = variants {mkV2 (mkV "aderir") ; mkV2 (mkV "colar") ; mkV2 (mkV "fast") ; mkV2 (mkV "grudar") ; mkV2 (mkV "to") ; } ; --*
lin stick_together_7_V = variants {mkV "by" ; mkV "ficar" ; } ; --*
lin stick_up_N = variants {mkN "assalto" ; mkN "latrocínio" ; mkN "robbery" ; } ; --*
lin sticky_1_A = mkA "viscoso" ; --*
lin sticky_2_A = mkA "pegajoso" ; --*
lin sticky_3_A = variants {mkA "pesado" ; mkA "úmido" ; } ; --*
lin sticky_4_A = variants {mkA "desconcertante" ; mkA "difícil" ; } ; --*
lin stiff_2_N = variants {mkN "cadáver" ; mkN "corpo" ; mkN "defunto" ; mkN "enchido" ; mkN "restos" ; } ; --*
lin stiff_4_A = mkA "potente" ; --*
lin stiff_6_A = variants {mkA "rígida" ; mkA "rígido" ; mkA "teso" ; } ; --*
lin stiffen_1_V = variants {mkV "endurecer" ; mkV "inrijecer" ; } ; --*
lin stiffen_2_V2 = variants {mkV2 (mkV "endurecer") ; mkV2 (mkV "enrijecer") ; } ; --*
lin stiffening_1_N = mkN "ereção" ; --*
lin stiffness_2_N = mkN "rigidez" ; --*
lin stiffness_5_N = variants {mkN "dureza" ; mkN "rigor" ; } ; --*
lin stifle_1_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; } ; --*
lin stifle_2_V2 = mkV2 (mkV "amortecer") ; --*
lin stifle_3_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin stifle_4_V = variants {mkV "asfixiar" ; mkV "estrangular" ; mkV "sufocar" ; } ; --*
lin stifle_N = mkN "joelho" ; --*
lin stigma_1_N = variants {mkN "estigma" ; mkN "Estigma" ; } ; --*
lin stigma_2_N = variants {mkN "estigma" ; mkN "mancha" ; mkN "marca" ; } ; --*
lin stigma_3_N = mkN "estigma" ; --*
lin stigmatize_1_V2 = variants {mkV2 (mkV "denunciar") ; mkV2 (mkV "estigmatizar") ; } ; --*
lin stiletto_N = variants {mkN "estilete" ; mkN "Estilete" ; } ; --*
lin still_1_AdA = mkAdA "ainda" ; --*
lin still_1_Adv = mkAdv "ainda" ; --*
lin still_1_AdV = mkAdV "ainda" ; --*
lin still_1_A = variants {mkA "estático" ; mkA "quedo" ; } ; --*
lin still_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin still_2_AdV = variants {mkAdV "apesar" ; mkAdV "contudo" ; mkAdV "não" ; mkAdV "por" ; mkAdV "porém" ; mkAdV "se" ; mkAdV "so" ; mkAdV "the" ; } ; --*
lin still_2_N = mkN "calma" ; --*
lin still_2_V2 = variants {mkV2 (mkV "silenciar") ; mkV2 (mkV "up") ; } ; --*
lin still_3_AdA = mkAdA "ainda" ; --*
lin still_3_A = variants {mkA "quieto" ; mkA "silenciosa" ; } ; --*
lin still_3_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "aliviar") ; mkV2 (mkV "aquietar") ; mkV2 (mkV "pacificar") ; } ; --*
lin still_4_N = mkN "destilaria" ; --*
lin stillbirth_N = variants {mkN "abortion" ; mkN "aborto" ; mkN "óbito" ; } ; --*
lin stillborn_1_A = variants {mkA "abortado" ; mkA "abortivo" ; mkA "fracassado" ; mkA "frustrado" ; } ; --*
lin stillborn_2_A = mkA "natimorto" ; --*
lin still_life_N = mkN "life" ; --*
lin stillness_1_N = mkN "calma" ; --*
lin stilted_A = mkA "artificial" ; --*
lin stimulant_1_N = variants {mkN "estimulante" ; mkN "estímulo" ; } ; --*
lin stimulant_2_N = variants {mkN "drug" ; mkN "estimulante" ; } ; --*
lin stimulate_1_V2 = mkV2 (mkV "estimular") ; --*
lin stimulate_2_V2V = mkV2V (mkV "induzir") ; --*
lin stimulate_3_V2 = variants {mkV2 (mkV "comover") ; mkV2 (mkV "up") ; } ; --*
lin stimulate_4_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "energizar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "up") ; } ; --*
lin stimulate_5_V2 = variants {mkV2 (mkV "induzir") ; mkV2 (mkV "precipitar") ; } ; --*
lin stimulate_6_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "mexer") ; } ; --*
lin stimulate_7_V2 = variants {mkV2 (mkV "concitar") ; mkV2 (mkV "desafiar") ; mkV2 (mkV "estimular") ; mkV2 (mkV "incitar") ; mkV2 (mkV "provocar") ; } ; --*
lin stimulating_3_A = mkA "estimulador" ; --*
lin stimulation_1_N = mkN "estimulação" ; --*
lin stimulation_2_N = variants {mkN "estimulante" ; mkN "estímulo" ; } ; --*
lin stimulation_4_N = variants {mkN "estimulação" ; mkN "preliminares" ; } ; --*
lin stimulus_N = variants {mkN "estimulante" ; mkN "estímulo" ; } ; --*
lin sting_1_N = mkN "espadas" ; --*
lin sting_1_V2 = mkV2 (mkV "queimar") ; --*
lin sting_2_V2 = variants {mkV2 (mkV "morder") ; mkV2 (mkV "picar") ; } ; --*
lin sting_3_N = variants {mkN "bite" ; mkN "picada" ; } ; --*
lin sting_4_V2 = variants {mkV2 (mkV "machucar") ; mkV2 (mkV "picar") ; } ; --*
lin sting_5_V2 = mkV2 (mkV "alfinetar") ; --*
lin stinginess_N = mkN "parcimónia" ; --*
lin stingray_N = variants {mkN "arraia" ; mkN "raia" ; } ; --*
lin stingy_1_A = variants {mkA "ávaro" ; mkA "ávido" ; mkA "tacanho" ; } ; --*
lin stingy_2_A = mkA "escasso" ; --*
lin stink_2_V = variants {mkV "feder" ; mkV "tresandar" ; } ; --*
lin stinker_1_N = variants {mkN "bag" ; mkN "dog" ; mkN "Fulano" ; } ; --*
lin stinker_3_N = mkN "fureca" ; --*
lin stink_N = variants {mkN "fedor" ; mkN "pejo" ; } ; --*
lin stint_1_N = mkN "período" ; --*
lin stipend_N = mkN "estipêndio" ; --*
lin stipe_N = mkN "estipe" ; --*
lin stipulate_1_V2 = mkV2 (mkV "estipular") ; --*
lin stipulate_1_VS = mkVS (mkV "estipular") ; --*
lin stipulate_2_V2 = variants {mkV2 (mkV "convencionar") ; mkV2 (mkV "estipular") ; mkV2 (mkV "estipule") ; } ; --*
lin stipulation_2_N = variants {mkN "condição" ; mkN "estipulação" ; mkN "pré-condição" ; } ; --*
lin stipulation_3_N = variants {mkN "especificação" ; mkN "estipulação" ; } ; --*
lin stipule_N = mkN "estípula" ; --*
lin stir_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; mkV2 (mkV "mexer") ; } ; --*
lin stir_2_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; mkV2 (mkV "mexer") ; } ; --*
lin stir_2_V = variants {mkV "agitar" ; mkV "bater" ; mkV "mexer" ; } ; --*
lin stir_3_N = mkN "freneticidade" ; --*
lin stir_3_V2 = variants {mkV2 (mkV "estimular") ; mkV2 (mkV "excitar") ; mkV2 (mkV "mexer") ; } ; --*
lin stir_4_V2 = variants {mkV2 (mkV "comover") ; mkV2 (mkV "up") ; } ; --*
lin stir_5_V = mkV "tocar" ; --*
lin stir_7_V = mkV "acordar" ; --*
lin stirrup_1_N = variants {mkN "estribo" ; mkN "iron" ; } ; --*
lin stirrup_2_N = variants {mkN "estapédio" ; mkN "estribo" ; } ; --*
lin stir_up_1_V2 = variants {mkV2 (mkV "fomentar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "up") ; } ; --*
lin stir_up_2_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "up") ; } ; --*
lin stir_up_3_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "up") ; } ; --*
lin stir_up_4_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "provocar") ; mkV2 (mkV "reptar") ; mkV2 (mkV "up") ; } ; --*
lin stitch_1_N = mkN "pontada" ; --*
lin stitch_V2 = variants {mkV2 (mkV "bordar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin stitch_V = variants {mkV "bordar" ; mkV "together" ; mkV "up" ; } ; --*
lin stitchwort_N = variants {mkN "holostea" ; mkN "Stellaria" ; mkN "stitchwort" ; } ; --*
lin stoat_N = mkN "arminho" ; --*
lin stochastic_1_A = variants {mkA "aleatório" ; mkA "estocástico" ; } ; --*
lin stock_17_N = variants {mkN "animal" ; mkN "gado" ; mkN "pecuária" ; } ; --*
lin stock_1_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin stock_1_N = mkN "ação" ; --*
lin stock_2_N = variants {mkN "estoque" ; mkN "inventário" ; } ; --*
lin stock_3_A = mkA "padrão" ; --*
lin stock_4_N = variants {mkN "ação" ; mkN "certificate" ; } ; --*
lin stock_5_N = mkN "estoque" ; --*
lin stock_5_V2 = variants {mkV2 (mkV "estocar") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin stock_6_N = variants {mkN "descendência" ; mkN "família" ; mkN "line" ; mkN "linhagem" ; mkN "of" ; mkN "sangue" ; } ; --*
lin stock_7_N = variants {mkN "estirpe" ; mkN "raça" ; } ; --*
lin stock_8_N = mkN "caldo" ; --*
lin stockade_2_N = variants {mkN "camp" ; mkN "campo" ; } ; --*
lin stockholder_N = variants {mkN "accionista" ; mkN "acionista" ; } ; --*
lin stockholm_PN = variants {mkPN "Éstocolmo" ; mkPN "of" ; } ; --*
lin stocking_1_N = mkN "meia" ; --*
lin stockist_N = mkN "estoquista" ; --*
lin stock_list_N = variants {mkN "inventário" ; mkN "inventários" ; mkN "list" ; } ; --*
lin stockpile_1_N = variants {mkN "acumulação" ; mkN "acúmulo" ; mkN "existências" ; } ; --*
lin stockpile_2_N = variants {mkN "estoque" ; mkN "reserva" ; } ; --*
lin stockpot_N = mkN "pote" ; --*
lin stocks_3_N = mkN "tronco" ; --*
lin stocktaking_2_N = mkN "inventários" ; --*
lin stocky_A = mkA "grosso" ; --*
lin stoic_1_A = variants {mkA "estoico" ; mkA "estóico" ; } ; --*
lin stoical_A = variants {mkA "estoico" ; mkA "estóico" ; } ; --*
lin stoichiometry_N = mkN "estequiometria" ; --*
lin stoicism_2_N = mkN "estoicismo" ; --*
lin stoker_2_N = mkN "fogueiro" ; --*
lin stoker_PN = variants {mkPN "Bram" ; mkPN "Stoker" ; } ; --*
lin stole_N = mkN "estola" ; --*
lin stolid_A = mkA "impassível" ; --*
lin stolidity_1_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin stolon_N = mkN "Estolho" ; --*
lin stoma_1_N = variants {mkN "Estomato" ; mkN "estômato" ; mkN "poro" ; } ; --*
lin stoma_2_N = mkN "ostomia" ; --*
lin stomach_1_N = variants {mkN "Estomago" ; mkN "estômago" ; } ; --*
lin stomach_1_V2 = mkV2 (mkV "ter") ; --*
lin stomach_2_N = variants {mkN "abdome" ; mkN "abdómen" ; mkN "abdômen" ; mkN "barriga" ; mkN "estômago" ; mkN "tronco" ; mkN "ventre" ; } ; --*
lin stomach_2_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin stomach_4_N = mkN "apetite" ; --*
lin stomach_ache_1_N = variants {mkN "ache" ; mkN "dor" ; } ; --*
lin stomatitis_N = variants {mkN "estomatite" ; mkN "Estomatite" ; } ; --*
lin stomp_V = mkV "pisar" ; --*
lin stone_1_N = variants {mkN "pedra" ; mkN "penhasco" ; mkN "rocha" ; } ; --*
lin stone_1_V2 = variants {mkV2 (mkV "apedrejar") ; mkV2 (mkV "lapidar") ; } ; --*
lin stone_3_N = variants {mkN "pedra" ; mkN "rocha" ; } ; --*
lin stone_4_N = variants {mkN "gema" ; mkN "Gemas" ; mkN "pedra" ; } ; --*
lin stone_5_N = mkN "stone" ; --*
lin stone_6_N = variants {mkN "caroço" ; mkN "endocarpo" ; } ; --*
lin stone_7_PN = variants {mkPN "F." ; mkPN "Fisk" ; mkPN "Harlan" ; mkPN "Stone" ; } ; --*
lin stone_8_PN = variants {mkPN "Oliver" ; mkPN "Stone" ; } ; --*
lin stone_A = mkA "pétreo" ; --*
lin stonechat_N = variants {mkN "Saxicola" ; mkN "torquata" ; } ; --*
lin stone_dead_A = mkA "pedra-inoperante" ; --*
lin stone_fruit_N = variants {mkN "Drupa" ; mkN "fruit" ; } ; --*
lin stonemason_N = variants {mkN "escavador" ; mkN "mação" ; mkN "pedreiro" ; } ; --*
lin stone_pit_N = variants {mkN "pedreira" ; mkN "Pedreira" ; mkN "pit" ; } ; --*
lin stoneware_N = variants {mkN "Grés" ; mkN "GRÉS" ; mkN "Grês" ; } ; --*
lin stoning_N = variants {mkN "apedrejamento" ; mkN "lapidação" ; } ; --*
lin stony_1_A = mkA "rochoso" ; --*
lin stony_3_A = mkA "granítico" ; --*
lin stool_1_N = variants {mkN "banco" ; mkN "banqueta" ; mkN "banquinho" ; mkN "cadeira" ; mkN "tamborete" ; } ; --*
lin stool_2_N = variants {mkN "fezes" ; mkN "Fezes" ; mkN "matter" ; mkN "merda" ; } ; --*
lin stool_4_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin stoop_1_N = mkN "incline" ; --*
lin stoop_1_V = variants {mkV "agachar" ; mkV "dobrar" ; mkV "inclinar" ; } ; --*
lin stop_10_V2 = variants {mkV2 (mkV "barricar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "interditar") ; mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin stop_11_N = mkN "obstáculo" ; --*
lin stop_11_V = variants {mkV "esperar" ; mkV "on" ; } ; --*
lin stop_1_V = variants {mkV "deixar" ; mkV "parar" ; } ; --*
lin stop_2_N = mkN "paralização" ; --*
lin stop_2_V2 = variants {mkV2 (mkV "cessar") ; mkV2 (mkV "deixar") ; mkV2 (mkV "descontinuar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "terminar") ; mkV2 (mkV "up") ; } ; --*
lin stop_3_N = mkN "parada" ; --*
lin stop_3_V2 = variants {mkV2 (mkV "parar") ; mkV2 (mkV "travar") ; } ; --*
lin stop_4_V = variants {mkV "over" ; mkV "parar" ; } ; --*
lin stop_5_N = variants {mkN "parada" ; mkN "ponto" ; } ; --*
lin stop_5_V2 = mkV2 (mkV "parar") ; --*
lin stop_6_V2 = variants {mkV2 (mkV "interromper") ; mkV2 (mkV "off") ; mkV2 (mkV "parar") ; mkV2 (mkV "suspender") ; } ; --*
lin stop_7_N = variants {mkN "point" ; mkN "ponto" ; mkN "Ponto" ; mkN "stop" ; } ; --*
lin stop_7_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "resistir") ; } ; --*
lin stop_8_V2 = mkV2 (mkV "intercetar") ; --*
lin stop_9_N = mkN "diafragma" ; --*
lin stop_9_V = variants {mkV "acabar" ; mkV "cessar" ; mkV "encerrar" ; mkV "finalizar" ; mkV "parar" ; mkV "terminar" ; } ; --*
lin stopcock_N = mkN "torneira" ; --*
lin stoplight_2_N = variants {mkN "light" ; mkN "signal" ; mkN "sinal" ; } ; --*
lin stopover_2_N = mkN "parada" ; --*
lin stop_over_2_V = variants {mkV "over" ; mkV "parar" ; } ; --*
lin stoppage_2_N = mkN "obstáculo" ; --*
lin stoppage_3_N = mkN "paralização" ; --*
lin stopper_2_N = variants {mkN "bujão" ; mkN "stopper" ; } ; --*
lin stopper_4_N = mkN "rolha" ; --*
lin stop_up_V2 = variants {mkV2 (mkV "tampar") ; mkV2 (mkV "up") ; } ; --*
lin stopwatch_1_N = variants {mkN "cronômetro" ; mkN "watch" ; } ; --*
lin storage_1_N = variants {mkN "armazenagem" ; mkN "armazenamento" ; } ; --*
lin storage_2_N = variants {mkN "depósito" ; mkN "аrmazenagem" ; } ; --*
lin storage_4_N = mkN "armazenamento" ; --*
lin storage_5_N = variants {mkN "board" ; mkN "memória" ; mkN "memory" ; mkN "storage" ; } ; --*
lin storage_6_N = variants {mkN "armazenamento" ; mkN "depósito" ; } ; --*
lin store_1_N = variants {mkN "loja" ; mkN "lojas" ; } ; --*
lin store_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "guardar") ; mkV2 (mkV "in") ; } ; --*
lin store_2_N = mkN "estoque" ; --*
lin store_2_V2 = mkV2 (mkV "armazenar") ; --*
lin store_3_N = variants {mkN "board" ; mkN "memória" ; mkN "memory" ; mkN "storage" ; } ; --*
lin store_4_N = variants {mkN "depósito" ; mkN "аrmazenagem" ; } ; --*
lin storehouse_N = variants {mkN "depósito" ; mkN "аrmazenagem" ; } ; --*
lin storey_N = variants {mkN "andar" ; mkN "pavimento" ; mkN "piso" ; } ; --*
lin storied_1_A = variants {mkA "celebrado" ; mkA "comemorada" ; mkA "comemorado" ; } ; --*
lin stork_N = variants {mkN "cegonha" ; mkN "Ciconiidae" ; } ; --*
lin storksbill_N = variants {mkN "bill" ; mkN "gerânio" ; } ; --*
lin storm_1_N = variants {mkN "borrasca" ; mkN "storm" ; mkN "tempestade" ; mkN "tempestades" ; mkN "tormenta" ; mkN "trovoadas" ; mkN "vendaval" ; } ; --*
lin storm_3_V = mkV "chover" ; --*
lin storm_4_V = variants {mkV "chover" ; mkV "ter" ; mkV "ventar" ; } ; --*
lin storm_5_V2 = mkV2 (mkV "emboscar") ; --*
lin storm_5_V = mkV "emboscar" ; --*
lin stormy_1_A = mkA "tempestuoso" ; --*
lin stormy_2_A = mkA "tempestuoso" ; --*
lin story_1_N = variants {mkN "história" ; mkN "Modo" ; mkN "Narração" ; mkN "narrativa" ; } ; --*
lin story_2_N = variants {mkN "conto" ; mkN "estória" ; mkN "história" ; } ; --*
lin story_3_N = variants {mkN "andar" ; mkN "pavimento" ; mkN "piso" ; } ; --*
lin story_5_N = variants {mkN "artigo" ; mkN "história" ; mkN "relato" ; mkN "report" ; mkN "up" ; } ; --*
lin story_6_N = variants {mkN "conto" ; mkN "história" ; mkN "mentira" ; mkN "mentirinha" ; } ; --*
lin story_of_N2 = variants {mkN2 (mkN "crónica") noPrep ; mkN2 (mkN "crônica") noPrep ; } ; --*
lin storyteller_1_N = mkN "narrador" ; --*
lin storyteller_2_N = mkN "mentiroso" ; --*
lin stout_2_A = mkA "corpulento" ; --*
lin stout_3_A = mkA "rijo" ; --*
lin stoutness_2_N = variants {mkN "corpulência" ; mkN "que" ; mkN "sobrepeso" ; } ; --*
lin stove_1_N = variants {mkN "fogões" ; mkN "forno" ; mkN "range" ; mkN "stove" ; } ; --*
lin stove_2_N = variants {mkN "aquecedor" ; mkN "fogão" ; mkN "fogões" ; } ; --*
lin stovepipe_2_N = variants {mkN "cartola" ; mkN "hat" ; } ; --*
lin stow_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "estivar") ; } ; --*
lin strabismus_N = mkN "estrabismo" ; --*
lin straddle_1_V2 = mkV2 (mkV "montar") ; --*
lin straddle_1_V = mkV "montar" ; --*
lin straggle_1_V = mkV "digressar" ; --*
lin straggler_N = variants {mkN "lanterninha" ; mkN "retardatário" ; } ; --*
lin straight_12_A = variants {mkA "direto" ; mkA "honesto" ; } ; --*
lin straight_1_A = mkA "consecutivo" ; --*
lin straight_1_Adv = mkAdv "imediatamente" ; --*
lin straight_1_N = variants {mkN "hetero" ; mkN "heterossexual" ; mkN "person" ; } ; --*
lin straight_2_Adv = mkAdv "direto" ; --*
lin straight_2_A = mkA "reto" ; --*
lin straight_3_N = mkN "reta" ; --*
lin straight_6_A = mkA "correto" ; --*
lin straight_8_A = mkA "reto" ; --*
lin straightaway_N = mkN "reta" ; --*
lin straightedge_N = mkN "régua" ; --*
lin straighten_1_V2 = variants {mkV2 (mkV "endireitar") ; mkV2 (mkV "retificar") ; } ; --*
lin straighten_1_V = variants {mkV "endireitar" ; mkV "retificar" ; } ; --*
lin straighten_2_V2 = variants {mkV2 (mkV "endireitar") ; mkV2 (mkV "out") ; } ; --*
lin straighten_2_V = variants {mkV "endireitar" ; mkV "out" ; } ; --*
lin straighten_3_V = mkV "endireitar" ; --*
lin straighten_4_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "away") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin straighten_6_V2 = mkV2 (mkV "alisar") ; --*
lin straighten_out_4_V2 = variants {mkV2 (mkV "endireitar") ; mkV2 (mkV "out") ; } ; --*
lin straighten_out_5_V2 = variants {mkV2 (mkV "elucidar") ; mkV2 (mkV "esclarecer") ; mkV2 (mkV "light") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin straighten_out_6_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "away") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin straightforward_2_A = variants {mkA "direto" ; mkA "honesto" ; } ; --*
lin straightness_2_N = variants {mkN "rectitude" ; mkN "retitude" ; } ; --*
lin straightness_5_N = mkN "heterossexualidade" ; --*
lin strain_10_N = mkN "esforço" ; --*
lin strain_11_N = variants {mkN "canção" ; mkN "cantoria" ; } ; --*
lin strain_1_V2 = mkV2 (mkV "batalhar") ; --*
lin strain_2_N = mkN "stress" ; --*
lin strain_2_V2 = variants {mkV2 (mkV "esgotar") ; mkV2 (mkV "estressar") ; } ; --*
lin strain_3_N = variants {mkN "line" ; mkN "melodia" ; mkN "phrase" ; mkN "toada" ; } ; --*
lin strain_4_N = variants {mkN "strain" ; mkN "tensão" ; } ; --*
lin strain_4_V2 = variants {mkV2 (mkV "cindir") ; mkV2 (mkV "discernir") ; } ; --*
lin strain_5_N = variants {mkN "estirpe" ; mkN "raça" ; } ; --*
lin strain_5_V2 = variants {mkV2 (mkV "estressar") ; mkV2 (mkV "tensionar") ; mkV2 (mkV "up") ; } ; --*
lin strain_6_N = variants {mkN "Estirpe" ; mkN "variante" ; } ; --*
lin strain_6_V2 = mkV2 (mkV "tensionar") ; --*
lin strain_7_V2 = variants {mkV2 (mkV "coar") ; mkV2 (mkV "filtrar") ; mkV2 (mkV "out") ; } ; --*
lin strain_9_N = mkN "esforço" ; --*
lin strain_9_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "distorcer") ; } ; --*
lin strainer_N = variants {mkN "coador" ; mkN "filtro" ; mkN "filtros" ; mkN "passador" ; } ; --*
lin strait_1_N = mkN "estreito" ; --*
lin strait_A = mkA "estreito" ; --*
lin straitjacket_2_N = variants {mkN "camisa" ; mkN "colete" ; } ; --*
lin strait_laced_1_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin strand_1_V2 = mkV2 (mkV "encalhar") ; --*
lin strand_3_N = mkN "colar" ; --*
lin strand_3_V2 = variants {mkV2 (mkV "aground") ; mkV2 (mkV "encalhar") ; } ; --*
lin strand_4_N = mkN "filamento" ; --*
lin strand_5_N = mkN "costa" ; --*
lin strange_1_A = variants {mkA "estranho" ; mkA "extraordinário" ; mkA "insólito" ; mkA "inusual" ; } ; --*
lin strange_3_A = variants {mkA "estrangeiro" ; mkA "estranho" ; } ; --*
lin stranger_1_N = variants {mkN "estrangeiro" ; mkN "pessoa" ; } ; --*
lin stranger_2_N = mkN "estrangeiro" ; --*
lin strangle_1_V2 = mkV2 (mkV "estrangular") ; --*
lin strangle_2_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; } ; --*
lin strangle_3_V2 = mkV2 (mkV "estrangular") ; --*
lin strangle_4_V2 = variants {mkV2 (mkV "estorvar") ; mkV2 (mkV "impedir") ; mkV2 (mkV "obstruir") ; } ; --*
lin strangle_5_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "estrangular") ; } ; --*
lin strangle_6_V2 = variants {mkV2 (mkV "afogar") ; mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin stranglehold_1_N = mkN "controle" ; --*
lin strangler_2_N = mkN "estrangulador" ; --*
lin strangulation_1_N = mkN "estrangulamento" ; --*
lin strap_1_N = variants {mkN "tira" ; mkN "tiradecouro" ; } ; --*
lin strap_2_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin strap_3_N = variants {mkN "alcinha" ; mkN "strap" ; } ; --*
lin strap_4_N = mkN "cinta" ; --*
lin strapping_A = mkA "musculoso" ; --*
lin strasbourg_PN = mkPN "Estrasburgo" ; --*
lin stratagem_1_N = mkN "artimanha" ; --*
lin strategic_1_A = mkA "estratégico" ; --*
lin strategic_2_A = mkA "estratégico" ; --*
lin strategical_A = mkA "estratégico" ; --*
lin strategics_N = mkN "estratégia" ; --*
lin strategy_1_N = variants {mkN "estratégia" ; mkN "planos" ; mkN "táctica" ; } ; --*
lin strategy_2_N = mkN "estratégia" ; --*
lin stratford_on_avon_PN = variants {mkPN "Stratford" ; mkPN "Stratford-upon-avon" ; mkPN "Stratford-upon-Avon" ; } ; --*
lin stratification_1_N = mkN "estratificação" ; --*
lin stratification_2_N = variants {mkN "estratificação" ; mkN "stratification" ; } ; --*
lin stratification_3_N = mkN "estratificação" ; --*
lin stratify_1_V2 = mkV2 (mkV "estratificar") ; --*
lin stratify_2_V = mkV "estratificar" ; --*
lin stratify_3_V = mkV "estratificar" ; --*
lin stratify_4_V2 = mkV2 (mkV "estratificar") ; --*
lin stratify_5_V2 = mkV2 (mkV "estratificar") ; --*
lin stratigraphy_N = variants {mkN "estratigrafia" ; mkN "Estratigrafia" ; } ; --*
lin stratosphere_N = mkN "estratosfera" ; --*
lin stratum_1_N = variants {mkN "estrato" ; mkN "Estrato" ; } ; --*
lin stratum_2_N = variants {mkN "class" ; mkN "classe" ; mkN "estrato" ; } ; --*
lin stratum_3_N = mkN "estrato" ; --*
lin stratus_N = variants {mkN "cloud" ; mkN "Stratus" ; } ; --*
lin straw_1_N = variants {mkN "colmo" ; mkN "palha" ; } ; --*
lin straw_2_N = mkN "palha" ; --*
lin straw_2_V2 = mkV2 (mkV "espalhar") ; --*
lin straw_4_N = variants {mkN "canudo" ; mkN "straw" ; } ; --*
lin strawberry_1_N = mkN "morango" ; --*
lin strawberry_2_N = variants {mkN "morango" ; mkN "morangueiro" ; } ; --*
lin stray_1_A = mkA "isolada" ; --*
lin stray_1_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin stray_2_V = variants {mkV "errar" ; mkV "vagar" ; } ; --*
lin stray_3_V = mkV "divagar" ; --*
lin stray_N = mkN "desgarrado" ; --*
lin streak_1_V = mkV "riscar" ; --*
lin streak_3_N = variants {mkN "listra" ; mkN "risco" ; } ; --*
lin streak_3_V2 = variants {mkV2 (mkV "manchar") ; mkV2 (mkV "riscar") ; } ; --*
lin streak_3_V = variants {mkV "manchar" ; mkV "riscar" ; } ; --*
lin stream_1_N = mkN "córrego" ; --*
lin stream_2_N = mkN "curso" ; --*
lin stream_4_V = variants {mkV "buckets" ; mkV "cats" ; mkV "chover" ; } ; --*
lin stream_5_N = mkN "corrente" ; --*
lin streamer_4_N = variants {mkN "bandeira" ; mkN "estandarte" ; } ; --*
lin streamlet_N = variants {mkN "regato" ; mkN "ribeira" ; } ; --*
lin streamlined_2_A = variants {mkA "aerodinâmica" ; mkA "aerodinâmico" ; } ; --*
lin street_1_N = variants {mkN "rua" ; mkN "Ruas" ; } ; --*
lin street_2_N = mkN "estrada" ; --*
lin streetcar_N = variants {mkN "bonde" ; mkN "car" ; mkN "elétrico" ; mkN "trole" ; mkN "trólebus" ; } ; --*
lin street_girl_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin streetlight_N = variants {mkN "lamp" ; mkN "luz" ; } ; --*
lin streetwalker_N = variants {mkN "girl" ; mkN "prostituta" ; mkN "puta" ; mkN "rapariga" ; } ; --*
lin strength_1_N = mkN "força" ; --*
lin strength_3_N = variants {mkN "força" ; mkN "violência" ; } ; --*
lin strength_4_N = variants {mkN "especialidade" ; mkN "forte" ; mkN "point" ; mkN "suit" ; } ; --*
lin strength_6_N = variants {mkN "intensidade" ; mkN "level" ; } ; --*
lin strength_7_N = variants {mkN "eficácia" ; mkN "força" ; mkN "potencia" ; mkN "potência" ; } ; --*
lin strength_9_N = mkN "durabilidade" ; --*
lin strengthen_1_V2 = variants {mkV2 (mkV "fortalecer") ; mkV2 (mkV "fortificar") ; mkV2 (mkV "up") ; } ; --*
lin strengthen_2_V2 = mkV2 (mkV "consolidar") ; --*
lin strengthening_1_N = mkN "reforço" ; --*
lin strengthening_2_N = mkN "reforço" ; --*
lin strenuous_1_A = mkA "extenuante" ; --*
lin strenuous_2_A = mkA "arduo" ; --*
lin streptomycin_N = mkN "estreptomicina" ; --*
lin stress_1_N = variants {mkN "acento" ; mkN "acentuação" ; mkN "ênfase" ; } ; --*
lin stress_1_V2 = variants {mkV2 (mkV "acentuar") ; mkV2 (mkV "enfatizar") ; mkV2 (mkV "pontuar") ; } ; --*
lin stress_2_N = variants {mkN "fadiga" ; mkN "stress" ; mkN "tensão" ; } ; --*
lin stress_2_V2 = mkV2 (mkV "acentuar") ; --*
lin stress_3_N = variants {mkN "acento" ; mkN "ênfase" ; } ; --*
lin stress_3_V2 = variants {mkV2 (mkV "esgotar") ; mkV2 (mkV "estressar") ; } ; --*
lin stress_4_N = mkN "stress" ; --*
lin stress_5_N = mkN "tensão" ; --*
lin stress_mark_N = mkN "mark" ; --*
lin stretch_11_V = variants {mkV "esticar" ; mkV "out" ; } ; --*
lin stretch_1_V = variants {mkV "along" ; mkV "esticar-se" ; } ; --*
lin stretch_2_V2 = variants {mkV2 (mkV "alongar") ; mkV2 (mkV "estender") ; mkV2 (mkV "esticar") ; } ; --*
lin stretch_4_N = mkN "alongamento" ; --*
lin stretch_4_V = mkV "esticar" ; --*
lin stretch_5_N = mkN "estiramento" ; --*
lin stretch_5_V2 = variants {mkV2 (mkV "alongar") ; mkV2 (mkV "esticar") ; mkV2 (mkV "extender") ; } ; --*
lin stretch_6_N = mkN "período" ; --*
lin stretch_7_V2 = mkV2 (mkV "esticar") ; --*
lin stretch_8_V2 = mkV2 (mkV "estender") ; --*
lin stretch_9_V2 = variants {mkV2 (mkV "adulterar") ; mkV2 (mkV "aviltar") ; mkV2 (mkV "diluir") ; } ; --*
lin stretcher_1_N = mkN "padiola" ; --*
lin stretcher_3_N = mkN "maca" ; --*
lin stretching_2_N = mkN "alongamento" ; --*
lin stretch_out_4_V = variants {mkV "esticar" ; mkV "out" ; } ; --*
lin stretch_out_5_V = variants {mkV "esticar" ; mkV "out" ; } ; --*
lin strew_1_V2 = mkV2 (mkV "espalhar") ; --*
lin stria_1_N = mkN "estria" ; --*
lin stria_2_N = mkN "estria" ; --*
lin striate_A = mkA "serrilhado" ; --*
lin strict_1_A = variants {mkA "estrito" ; mkA "rigoroso" ; } ; --*
lin strictness_1_N = mkN "rigor" ; --*
lin stricture_1_N = mkN "estenose" ; --*
lin stride_1_N = variants {mkN "passo" ; mkN "pernada" ; } ; --*
lin stride_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "dar" ; } ; --*
lin stride_2_N = mkN "passo" ; --*
lin stride_3_N = mkN "progresso" ; --*
lin strident_1_A = mkA "clamoroso" ; --*
lin strident_3_A = mkA "estridente" ; --*
lin strident_4_A = mkA "estridente" ; --*
lin strife_1_N = mkN "discórdia" ; --*
lin strife_2_N = variants {mkN "batalha" ; mkN "conflito" ; mkN "discórdia" ; } ; --*
lin strike_10_V2 = mkV2 (mkV "tocar") ; --*
lin strike_12_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "across") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin strike_13_V2 = mkV2 (mkV "riscar") ; --*
lin strike_14_V2 = variants {mkV2 (mkV "cortar") ; mkV2 (mkV "retirar") ; } ; --*
lin strike_15_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin strike_16_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "desferir") ; } ; --*
lin strike_17_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "up") ; } ; --*
lin strike_19_V2 = mkV2 (mkV "cunhar") ; --*
lin strike_1_N = variants {mkN "greve" ; mkN "stoppage" ; } ; --*
lin strike_1_V2 = variants {mkV2 (mkV "acertar") ; mkV2 (mkV "bater") ; mkV2 (mkV "golpear") ; } ; --*
lin strike_1_V = variants {mkV "acertar" ; mkV "bater" ; mkV "golpear" ; } ; --*
lin strike_21_V2 = mkV2 (mkV "atingir") ; --*
lin strike_22_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "conseguir") ; } ; --*
lin strike_2_N = mkN "ataque" ; --*
lin strike_2_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "comover") ; mkV2 (mkV "impressionar") ; } ; --*
lin strike_3_N = mkN "batidinha" ; --*
lin strike_3_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "bater") ; mkV2 (mkV "into") ; mkV2 (mkV "on") ; mkV2 (mkV "with") ; } ; --*
lin strike_4_V2 = mkV2 (mkV "atacar") ; --*
lin strike_4_V = mkV "atacar" ; --*
lin strike_5_V2 = mkV2 (mkV "bater") ; --*
lin strike_5_V = mkV "bater" ; --*
lin strike_6_N = variants {mkN "estrondo" ; mkN "sensação" ; mkN "sucesso" ; } ; --*
lin strike_6_V = variants {mkV "afetar" ; mkV "atacar" ; mkV "atingir" ; } ; --*
lin strike_7_V = variants {mkV "fazer" ; mkV "out" ; mkV "parar" ; } ; --*
lin strike_8_V2 = mkV2 (mkV "brilhar") ; --*
lin strike_9_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "to") ; } ; --*
lin strike_back_V = variants {mkV "back" ; mkV "contra-atacar" ; } ; --*
lin strikebreaker_N = variants {mkN "fura-greve" ; mkN "Fura-greve" ; } ; --*
lin strike_down_1_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "down") ; } ; --*
lin strike_down_3_V2 = variants {mkV2 (mkV "abater") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; } ; --*
lin strike_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin strike_out_1_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin strikeout_N = variants {mkN "Strike" ; mkN "strikeout" ; } ; --*
lin striker_3_N = mkN "grevista" ; --*
lin strike_through_V2 = mkV2 (mkV "atingir") ; --*
lin striking_1_A = variants {mkA "acertado" ; mkA "dramático" ; mkA "espectacular" ; mkA "espetacular" ; mkA "impressionante" ; } ; --*
lin striking_2_A = mkA "proeminente" ; --*
lin string_10_N = mkN "colar" ; --*
lin string_1_N = mkN "corda" ; --*
lin string_1_V2 = mkV2 (mkV "enfileirar") ; --*
lin string_3_N = mkN "corda" ; --*
lin string_4_N = mkN "série" ; --*
lin string_5_N = mkN "cadeia" ; --*
lin stringency_1_N = mkN "escassez" ; --*
lin stringency_2_N = mkN "rigor" ; --*
lin stringent_A = variants {mkA "estrito" ; mkA "rigoroso" ; } ; --*
lin strip_11_V2 = variants {mkV2 (mkV "desmanchar") ; mkV2 (mkV "desmantelar") ; mkV2 (mkV "remover") ; mkV2 (mkV "retirar") ; } ; --*
lin strip_13_V2 = variants {mkV2 (mkV "desnudar-se") ; mkV2 (mkV "despir-se") ; } ; --*
lin strip_1_N = mkN "tira" ; --*
lin strip_1_V2 = mkV2 (mkV "privar") ; --*
lin strip_2_N = mkN "banda" ; --*
lin strip_2_V2 = variants {mkV2 (mkV "desnudar") ; mkV2 (mkV "despir") ; mkV2 (mkV "despojar") ; mkV2 (mkV "down") ; } ; --*
lin strip_3_N = variants {mkN "pista" ; mkN "strip" ; } ; --*
lin strip_4_N = variants {mkN "Banda" ; mkN "strip" ; mkN "Tiras" ; } ; --*
lin strip_4_V2 = mkV2 (mkV "sacar") ; --*
lin strip_5_V2 = mkV2 (mkV "desnudar") ; --*
lin strip_6_N = variants {mkN "show" ; mkN "striptease" ; mkN "Strip-tease" ; } ; --*
lin strip_6_V2 = variants {mkV2 (mkV "pilhar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "saquear") ; } ; --*
lin strip_7_V2 = variants {mkV2 (mkV "limpar") ; mkV2 (mkV "sacar") ; mkV2 (mkV "tirar") ; } ; --*
lin stripe_1_N = variants {mkN "banda" ; mkN "faixa" ; } ; --*
lin stripe_5_N = variants {mkN "listra" ; mkN "risco" ; } ; --*
lin stripling_N = variants {mkN "adolescente" ; mkN "moça" ; mkN "moço" ; mkN "rapariga" ; mkN "rapaz" ; } ; --*
lin strip_poker_N = mkN "poker" ; --*
lin strip_show_N = variants {mkN "show" ; mkN "striptease" ; mkN "Strip-tease" ; } ; --*
lin striptease_2_N = variants {mkN "show" ; mkN "striptease" ; mkN "Strip-tease" ; } ; --*
lin strive_1_V = variants {mkV "dar-se" ; mkV "empenhar" ; mkV "empenhar-se" ; mkV "esforçar" ; mkV "esforçar-se" ; mkV "perseguir" ; mkV "tentar" ; } ; --*
lin strive_2_V = mkV "batalhar" ; --*
lin strive_2_VV = mkVV (mkV "batalhar") ; --*
lin striver_N = variants {mkN "escravo" ; mkN "servo" ; mkN "worker" ; } ; --*
lin striving_N = mkN "esforço" ; --*
lin stroboscope_N = variants {mkN "estroboscópio" ; mkN "light" ; } ; --*
lin stroke_10_N = mkN "traço" ; --*
lin stroke_11_N = mkN "braçada" ; --*
lin stroke_12_N = mkN "golpe" ; --*
lin stroke_1_N = mkN "tacada" ; --*
lin stroke_1_V2 = mkV2 (mkV "afagar") ; --*
lin stroke_3_N = variants {mkN "accident" ; mkN "apoplexia" ; mkN "AVC" ; mkN "derrame" ; } ; --*
lin stroke_5_N = mkN "carícia" ; --*
lin stroke_8_N = variants {mkN "acidente" ; mkN "event" ; } ; --*
lin stroller_2_N = variants {mkN "buggy" ; mkN "carriage" ; mkN "carrinho" ; mkN "passeador" ; } ; --*
lin stroll_N = variants {mkN "dê" ; mkN "passeio" ; } ; --*
lin stroll_V = mkV "passear" ; --*
lin stroma_3_N = mkN "estroma" ; --*
lin strong_10_A = variants {mkA "firme" ; mkA "forte" ; } ; --*
lin strong_1_A = mkA "forte" ; --*
lin strong_2_A = mkA "forte" ; --*
lin strong_3_A = mkA "potente" ; --*
lin strong_4_A = mkA "potente" ; --*
lin strong_5_A = variants {mkA "inatacável" ; mkA "inviolável" ; mkA "seguro" ; } ; --*
lin strong_6_A = variants {mkA "sólido" ; mkA "substancial" ; } ; --*
lin strong_8_A = mkA "forte" ; --*
lin strongbox_N = variants {mkN "caixa-forte" ; mkN "cofre" ; } ; --*
lin stronghold_N = variants {mkN "baluarte" ; mkN "fortaleza" ; } ; --*
lin strontium_N = variants {mkN "Estroncio" ; mkN "estrôncio" ; mkN "number" ; } ; --*
lin structural_1_A = mkA "estrutural" ; --*
lin structural_2_A = mkA "estrutural" ; --*
lin structural_3_A = mkA "estrutural" ; --*
lin structural_4_A = mkA "estrutural" ; --*
lin structural_5_A = mkA "estrutural" ; --*
lin structural_6_A = mkA "estrutural" ; --*
lin structuralism_2_N = variants {mkN "anthropology" ; mkN "Estruturalismo" ; } ; --*
lin structure_1_N = variants {mkN "edifício" ; mkN "estrutura" ; mkN "tecido" ; } ; --*
lin structure_2_N = variants {mkN "arquitectura" ; mkN "estrutura" ; } ; --*
lin structure_5_N = variants {mkN "estrutura" ; mkN "organisation" ; mkN "organization" ; mkN "structure" ; mkN "system" ; } ; --*
lin structured_1_A = mkA "estruturado" ; --*
lin structured_2_A = mkA "estruturado" ; --*
lin structure_V2 = variants {mkV2 (mkV "estruturar") ; mkV2 (mkV "organizar") ; } ; --*
lin struggle_1_N = variants {mkN "batalha" ; mkN "luta" ; } ; --*
lin struggle_1_VV = variants {mkVV (mkV "batalhar") ; mkVV (mkV "guerrear") ; mkVV (mkV "lidar") ; mkVV (mkV "pelejar") ; } ; --*
lin struggle_2_N = variants {mkN "conflito" ; mkN "luta" ; } ; --*
lin struggle_2_VV = mkVV (mkV "lutar") ; --*
lin struggle_3_N = variants {mkN "batalha" ; mkN "grande" ; mkN "luta" ; } ; --*
lin struggle_4_V = variants {mkV "brigar" ; mkV "debater-se" ; mkV "lutar" ; } ; --*
lin strumpet_N = variants {mkN "meretriz" ; mkN "prostituta" ; mkN "woman" ; } ; --*
lin strut_V = mkV "desfilar" ; --*
lin strychnine_N = mkN "estricnina" ; --*
lin stuart_1_PN = variants {mkPN "Charles" ; mkPN "Gilbert" ; mkPN "Stuart" ; } ; --*
lin stub_1_N = mkN "artigo" ; --*
lin stub_5_N = variants {mkN "bituca" ; mkN "traseiro" ; } ; --*
lin stubble_1_N = mkN "palha" ; --*
lin stubborn_1_A = variants {mkA "obstinado" ; mkA "teimosa" ; mkA "teimoso" ; } ; --*
lin stubbornness_1_N = mkN "obstinação" ; --*
lin stub_out_V2 = variants {mkV2 (mkV "extinguir") ; mkV2 (mkV "out") ; } ; --*
lin stucco_N = mkN "reboco" ; --*
lin stuck_13_V2 = variants {mkV2 (mkV "cravar") ; mkV2 (mkV "espetar") ; } ; --*
lin stuck_up_A = variants {mkA "big" ; mkA "ranhoso" ; } ; --*
lin stud_1_N = variants {mkN "macho" ; mkN "varão" ; } ; --*
lin stud_4_N = mkN "garanhão" ; --*
lin stud_5_N = variants {mkN "poker" ; mkN "Pôquer" ; } ; --*
lin studentFem_1_N = variants {mkN "acadêmico" ; mkN "aluno" ; mkN "estudante" ; mkN "pupila" ; mkN "pupilo" ; } ; --*
lin studentFem_2_N = variants {mkN "acadêmico" ; mkN "erudito" ; mkN "estudioso" ; mkN "person" ; } ; --*
lin studentMasc_1_N = variants {mkN "acadêmico" ; mkN "aluno" ; mkN "estudante" ; mkN "pupila" ; mkN "pupilo" ; } ; --*
lin studentMasc_2_N = variants {mkN "acadêmico" ; mkN "erudito" ; mkN "estudioso" ; mkN "person" ; } ; --*
lin studio_1_N = variants {mkN "Estudio" ; mkN "estúdio" ; } ; --*
lin studio_3_N = mkN "estúdio" ; --*
lin studious_2_A = variants {mkA "estudioso" ; mkA "que" ; } ; --*
lin study_1_V2 = variants {mkV2 (mkV "analizar") ; mkV2 (mkV "examinar") ; } ; --*
lin study_2_N = mkN "estudo" ; --*
lin study_2_V2 = mkV2 (mkV "estudar") ; --*
lin study_2_V = mkV "estudar" ; --*
lin study_3_N = variants {mkN "relato" ; mkN "relatório" ; mkN "report" ; } ; --*
lin study_3_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "julgar") ; mkV2 (mkV "pensar") ; } ; --*
lin study_4_V = variants {mkV "aprender" ; mkV "cursar" ; mkV "estudar" ; } ; --*
lin study_5_N = mkN "escritório" ; --*
lin study_5_V2 = variants {mkV2 (mkV "estudar") ; mkV2 (mkV "the") ; } ; --*
lin study_6_N = variants {mkN "area" ; mkN "campo" ; mkN "disciplina" ; mkN "domínio" ; mkN "field" ; mkN "of" ; mkN "terreno" ; } ; --*
lin study_7_N = variants {mkN "croqui" ; mkN "desenho" ; mkN "esboço" ; } ; --*
lin stuff_1_N = mkN "materiais" ; --*
lin stuff_2_N = mkN "coisas" ; --*
lin stuff_2_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "enfiar") ; } ; --*
lin stuff_4_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "encher") ; mkV2 (mkV "out") ; } ; --*
lin stuff_5_V2 = mkV2 (mkV "estufar") ; --*
lin stuff_6_V2 = variants {mkV2 (mkV "encher") ; mkV2 (mkV "estofar") ; } ; --*
lin stuffing_1_N = mkN "recheio" ; --*
lin stuffy_1_A = mkA "abafado" ; --*
lin stultify_1_V2 = mkV2 (mkV "estultificar") ; --*
lin stultify_2_V2 = mkV2 (mkV "ridicularizar") ; --*
lin stultify_3_V2 = mkV2 (mkV "inutilizar") ; --*
lin stumble_1_V = variants {mkV "tropeçar" ; mkV "tropicar" ; } ; --*
lin stumble_2_N = mkN "tropeço" ; --*
lin stumble_2_V = mkV "tropeçar" ; --*
lin stumble_3_V = variants {mkV "encontrar" ; mkV "topar" ; } ; --*
lin stumble_4_V = variants {mkV "enganar-se" ; mkV "up" ; } ; --*
lin stumblebum_2_N = mkN "bobo" ; --*
lin stumbling_block_N = mkN "block" ; --*
lin stump_1_V2 = variants {mkV2 (mkV "deixar") ; mkV2 (mkV "up") ; } ; --*
lin stump_2_N = mkN "coto" ; --*
lin stump_2_V = mkV "pisar" ; --*
lin stump_4_N = variants {mkN "cátedra" ; mkN "estrado" ; mkN "pódio" ; mkN "púlpito" ; mkN "tribuna" ; } ; --*
lin stun_1_V2 = variants {mkV2 (mkV "atordoar") ; mkV2 (mkV "aturdir") ; } ; --*
lin stun_3_V2 = variants {mkV2 (mkV "atordoar") ; mkV2 (mkV "entontecer") ; } ; --*
lin stunner_1_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin stunning_1_A = mkA "impressionante" ; --*
lin stunning_4_A = variants {mkA "deslumbrante" ; mkA "fantástico" ; mkA "maravilhoso" ; } ; --*
lin stunt_1_N = variants {mkN "façanha" ; mkN "proeza" ; } ; --*
lin stupa_N = variants {mkN "Estupa" ; mkN "Stupa" ; } ; --*
lin stupefy_1_V2 = variants {mkV2 (mkV "estupidificar") ; mkV2 (mkV "imbecilizar") ; } ; --*
lin stupefy_2_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin stupefy_3_V2 = variants {mkV2 (mkV "atordoar") ; mkV2 (mkV "aturdir") ; } ; --*
lin stupefying_1_A = mkA "impressionante" ; --*
lin stupendous_A = mkA "colossal" ; --*
lin stupid_1_A = variants {mkA "estúpido" ; mkA "idiota" ; mkA "imbecil" ; mkA "sonso" ; } ; --*
lin stupid_1_N = variants {mkN "estúpido" ; mkN "fish" ; mkN "head" ; mkN "idiota" ; mkN "imbecil" ; mkN "person" ; } ; --*
lin stupid_3_A = variants {mkA "estúpido" ; mkA "lerdo" ; } ; --*
lin stupidity_1_N = mkN "estupidez" ; --*
lin stupidity_2_N = variants {mkN "burrice" ; mkN "estupidez" ; } ; --*
lin stupor_1_N = variants {mkN "choque" ; mkN "estupor" ; } ; --*
lin sturdy_1_A = mkA "rijo" ; --*
lin sturdy_2_A = mkA "inflexível" ; --*
lin sturdy_3_A = mkA "resistente" ; --*
lin sturgeon_N = variants {mkN "Acipenseridae" ; mkN "esturjão" ; } ; --*
lin stutter_N = variants {mkN "gagueira" ; mkN "gaguejo" ; } ; --*
lin stutter_V = variants {mkV "balbuciar" ; mkV "gaguejar" ; } ; --*
lin stuttgart_PN = mkPN "Estugarda" ; --*
lin sty_1_N = variants {mkN "hordéolo" ; mkN "infection" ; mkN "terçol" ; } ; --*
lin sty_2_N = variants {mkN "aprisco" ; mkN "chiqueiro" ; mkN "pocilga" ; mkN "pocilgas" ; } ; --*
lin stye_N = variants {mkN "hordéolo" ; mkN "infection" ; mkN "terçol" ; } ; --*
lin style_1_N = variants {mkN "estilo" ; mkN "maneira" ; } ; --*
lin style_1_V2 = variants {mkV2 (mkV "denominar") ; mkV2 (mkV "intitular") ; } ; --*
lin style_2_N = variants {mkN "estilo" ; mkN "língua" ; mkN "linguagem" ; mkN "style" ; } ; --*
lin style_2_V2 = mkV2 (mkV "estilizar") ; --*
lin style_3_N = variants {mkN "espécie" ; mkN "estilo" ; mkN "género" ; mkN "tipo" ; } ; --*
lin style_3_V2 = mkV2 (mkV "estilizar") ; --*
lin style_4_N = variants {mkN "estilo" ; mkN "moda" ; mkN "tendências" ; } ; --*
lin style_5_N = mkN "estilo" ; --*
lin style_6_N = mkN "estilo" ; --*
lin style_7_N = variants {mkN "elegância" ; mkN "estilo" ; } ; --*
lin style_8_N = variants {mkN "estilete" ; mkN "estilo" ; mkN "Stylus" ; } ; --*
lin stylish_1_A = mkA "chique" ; --*
lin stylish_2_A = mkA "chique" ; --*
lin stylishness_N = variants {mkN "estilo" ; mkN "garbo" ; mkN "modernidade" ; mkN "word" ; } ; --*
lin stylist_2_N = variants {mkN "cabeleireira" ; mkN "cabeleireiro" ; mkN "frisador" ; } ; --*
lin stylus_1_N = variants {mkN "agulha" ; mkN "safira" ; } ; --*
lin stylus_2_N = variants {mkN "estilete" ; mkN "estilo" ; mkN "Stylus" ; } ; --*
lin stymie_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin stymy_V2 = variants {mkV2 (mkV "atrapalhar") ; mkV2 (mkV "bloquear") ; mkV2 (mkV "obstaculizar") ; mkV2 (mkV "obstruir") ; mkV2 (mkV "tolher") ; } ; --*
lin styptic_A = mkA "hemostático" ; --*
lin styptic_N = variants {mkN "adstringência" ; mkN "drug" ; } ; --*
lin styrene_N = mkN "Estireno" ; --*
lin styx_PN = variants {mkPN "Estige" ; mkPN "Styx" ; } ; --*
lin suasion_N = mkN "persuasão" ; --*
lin sub_2_N = variants {mkN "submarino" ; mkN "Submarinos" ; } ; --*
lin subacute_A = mkA "subagudo" ; --*
lin subaltern_N = mkN "alferes" ; --*
lin subaqueous_A = mkA "subaquático" ; --*
lin subarctic_A = mkA "subártico" ; --*
lin subatomic_1_A = variants {mkA "subatómico" ; mkA "subatômico" ; } ; --*
lin subclass_N = mkN "subclasse" ; --*
lin subconscious_N = variants {mkN "mind" ; mkN "subconsciência" ; } ; --*
lin subcontinent_N = mkN "subcontinente" ; --*
lin subcontract_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "subcontratar") ; } ; --*
lin subcontract_1_V = variants {mkV "out" ; mkV "subcontratar" ; } ; --*
lin subcontractor_N = mkN "outtasking" ; --*
lin subculture_N = variants {mkN "sub-área" ; mkN "subcultura" ; mkN "Subcultura" ; } ; --*
lin subdirectory_N = variants {mkN "subdirectório" ; mkN "sub-directório" ; mkN "subdiretório" ; } ; --*
lin subdivide_1_V = mkV "subdividir" ; --*
lin subdivision_3_N = variants {mkN "broto" ; mkN "ramo" ; } ; --*
lin subdivision_4_N = variants {mkN "capítulo" ; mkN "parte" ; mkN "seção" ; } ; --*
lin subdivision_5_N = variants {mkN "subdivisão" ; mkN "subseção" ; } ; --*
lin subduction_N = mkN "zona" ; --*
lin subdue_1_V2 = variants {mkV2 (mkV "defazer") ; mkV2 (mkV "down") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "subjugar") ; } ; --*
lin subdue_2_V2 = variants {mkV2 (mkV "conquistar") ; mkV2 (mkV "down") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "sufocar") ; mkV2 (mkV "suprimir") ; } ; --*
lin subdue_3_V2 = mkV2 (mkV "mortificar") ; --*
lin subdue_4_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin subdue_5_V2 = variants {mkV2 (mkV "dominar") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "submeter") ; mkV2 (mkV "subordinar") ; } ; --*
lin subdural_A = mkA "subdural" ; --*
lin subeditor_N = variants {mkN "editor" ; mkN "subeditor" ; } ; --*
lin subgroup_1_N = mkN "subgrupo" ; --*
lin subgroup_2_N = mkN "subgrupo" ; --*
lin subheading_N = mkN "subtítulo" ; --*
lin subject_1_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin subject_1_V2 = mkV2 (mkV "sujeitar") ; --*
lin subject_2_A = mkA "súdito" ; --*
lin subject_2_N = variants {mkN "conteúdo" ; mkN "object" ; mkN "tópico" ; } ; --*
lin subject_3_N = variants {mkN "area" ; mkN "campo" ; mkN "disciplina" ; mkN "domínio" ; mkN "field" ; mkN "of" ; mkN "terreno" ; } ; --*
lin subject_3_V2 = mkV2 (mkV "submeter") ; --*
lin subject_4_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin subject_5_N = variants {mkN "sujeito" ; mkN "Sujeito" ; } ; --*
lin subject_6_N = variants {mkN "cobaia" ; mkN "pig" ; } ; --*
lin subject_7_N = mkN "cidadãos" ; --*
lin subjection_2_N = mkN "conquista" ; --*
lin subjective_1_A = mkA "subjetivo" ; --*
lin subjective_2_A = variants {mkA "imanente" ; mkA "subjetivo" ; } ; --*
lin subjectivism_2_N = mkN "subjetivismo" ; --*
lin subjectivity_N = mkN "subjectividade" ; --*
lin subject_to_3_A2 = mkA2 (mkA "sujeito") noPrep ; --*
lin subjugate_1_V2 = variants {mkV2 (mkV "defazer") ; mkV2 (mkV "down") ; mkV2 (mkV "recalcar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "subjugar") ; } ; --*
lin subjugate_2_V2 = mkV2 (mkV "submeter") ; --*
lin subjugation_2_N = mkN "opressão" ; --*
lin subjugation_3_N = mkN "conquista" ; --*
lin subjunctive_N = variants {mkN "modo" ; mkN "Modo" ; mkN "mood" ; mkN "subjuntivo" ; } ; --*
lin sublease_V2 = mkV2 (mkV "sublocar") ; --*
lin sublet_V2 = mkV2 (mkV "sublocar") ; --*
lin sublimate_1_V2 = mkV2 (mkV "sublimar") ; --*
lin sublimate_2_V2 = variants {mkV2 (mkV "sublimar") ; mkV2 (mkV "sutilizar") ; } ; --*
lin sublimate_3_V2 = variants {mkV2 (mkV "destilar") ; mkV2 (mkV "pure") ; mkV2 (mkV "purificar") ; mkV2 (mkV "sublimar") ; } ; --*
lin sublimate_4_V2 = mkV2 (mkV "sublimar") ; --*
lin sublimate_5_V2 = mkV2 (mkV "sublimar") ; --*
lin sublime_2_A = mkA "sublime" ; --*
lin sublime_3_A = mkA "sublime" ; --*
lin sublime_4_A = variants {mkA "elevado" ; mkA "sublime" ; } ; --*
lin sublingual_A = mkA "sublingual" ; --*
lin sublunar_1_A = mkA "sublunar" ; --*
lin submarine_1_N = variants {mkN "submarino" ; mkN "Submarinos" ; } ; --*
lin submarine_A = mkA "submarino" ; --*
lin submerge_2_V2 = variants {mkV2 (mkV "afogar") ; mkV2 (mkV "submergir") ; } ; --*
lin submerge_4_V2 = mkV2 (mkV "inundar") ; --*
lin submergence_N = mkN "imersão" ; --*
lin submerge_V = mkV "submergir" ; --*
lin submersible_1_A = mkA "submarino" ; --*
lin submersible_1_N = mkN "submarino" ; --*
lin submersible_2_N = variants {mkN "submarino" ; mkN "warship" ; } ; --*
lin submersion_1_N = mkN "imersão" ; --*
lin submersion_2_N = mkN "imersão" ; --*
lin submission_1_N = variants {mkN "entrada" ; mkN "submissão" ; } ; --*
lin submission_2_N = mkN "submissão" ; --*
lin submissive_2_A = mkA "subserviente" ; --*
lin submit_10_V = variants {mkV "reconciliar" ; mkV "resignar" ; mkV "resignar-se" ; mkV "submeter" ; } ; --*
lin submit_4_V2 = mkV2 (mkV "entregar") ; --*
lin submit_4_V = mkV "entregar" ; --*
lin submit_6_V = variants {mkV "aceder" ; mkV "in" ; } ; --*
lin submit_7_V2 = mkV2 (mkV "aceitar") ; --*
lin submit_9_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; } ; --*
lin submit_to_V2S = variants {mkV2S (mkV "atestar") ; mkV2S (mkV "dizer") ; mkV2S (mkV "forward") ; mkV2S (mkV "propor") ; } ; --*
lin subnormality_1_N = mkN "anormalidade" ; --*
lin subnormality_2_N = variants {mkN "atraso" ; mkN "retardation" ; mkN "Retardo" ; } ; --*
lin subordinate_1_A = variants {mkA "subordinada" ; mkA "subordinado" ; } ; --*
lin subordinate_1_V2 = mkV2 (mkV "subordinar") ; --*
lin subordinate_2_A = mkA "subalterno" ; --*
lin subordinate_2_N = variants {mkN "hipónimo" ; mkN "termos" ; mkN "word" ; } ; --*
lin subordinate_2_V2 = variants {mkV2 (mkV "dominar") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "submeter") ; mkV2 (mkV "subordinar") ; } ; --*
lin subordination_1_N = mkN "subordinação" ; --*
lin subordination_3_N = mkN "subordinação" ; --*
lin subordination_4_N = mkN "subordinação" ; --*
lin subpoena_N = variants {mkN "ad" ; mkN "citação" ; } ; --*
lin subpoena_V2 = mkV2 (mkV "intimar") ; --*
lin subscribe_2_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "subscrever") ; } ; --*
lin subscribe_3_V = mkV "subscrever" ; --*
lin subscribe_5_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "to") ; } ; --*
lin subscriber_2_N = variants {mkN "assinante" ; mkN "leitor" ; mkN "subscritor" ; } ; --*
lin subscriber_3_N = variants {mkN "contribuinte" ; mkN "doador" ; } ; --*
lin subscription_2_N = variants {mkN "assinatura" ; mkN "subscrição" ; } ; --*
lin subscript_N = mkN "texto" ; --*
lin subsection_N = variants {mkN "subdivisão" ; mkN "subseção" ; } ; --*
lin subsequent_A = variants {mkA "posterior" ; mkA "subsequente" ; mkA "subseqüente" ; mkA "ulterior" ; } ; --*
lin subservient_1_A = mkA "subserviente" ; --*
lin subservient_3_A = mkA "subserviente" ; --*
lin subset_N = mkN "subconjunto" ; --*
lin subside_1_V = variants {mkV "diminuir" ; mkV "minguar" ; } ; --*
lin subsidence_1_N = variants {mkN "remição" ; mkN "remissão" ; } ; --*
lin subsidence_2_N = mkN "subsidência" ; --*
lin subsidence_3_N = variants {mkN "in" ; mkN "subsidência" ; } ; --*
lin subsidiary_2_N = variants {mkN "company" ; mkN "subsidiária" ; } ; --*
lin subsidiary_A = variants {mkA "adicional" ; mkA "auxiliar" ; mkA "suplementar" ; } ; --*
lin subsidize_1_V2 = variants {mkV2 (mkV "subsidiar") ; mkV2 (mkV "subvencionar") ; } ; --*
lin subsidize_2_V2 = variants {mkV2 (mkV "subsidiar") ; mkV2 (mkV "subvencionar") ; } ; --*
lin subsidy_N = variants {mkN "subsídio" ; mkN "subvenção" ; } ; --*
lin subsistence_2_N = mkN "subsistência" ; --*
lin subsist_V = variants {mkV "haver" ; mkV "sobreviver" ; mkV "subsistir" ; } ; --*
lin subsoil_N = mkN "subsolo" ; --*
lin subspecies_N = variants {mkN "gênero" ; mkN "subespécie" ; } ; --*
lin substance_1_N = mkN "substância" ; --*
lin substance_2_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin substance_3_N = variants {mkN "intenção" ; mkN "sentido" ; mkN "significado" ; } ; --*
lin substance_5_N = mkN "meios" ; --*
lin substance_7_N = variants {mkN "consistência" ; mkN "viscosidade" ; } ; --*
lin substance_8_N = mkN "substância" ; --*
lin substantial_2_A = variants {mkA "substancial" ; mkA "substantivo" ; } ; --*
lin substantial_3_A = mkA "substancial" ; --*
lin substantial_5_A = variants {mkA "sólido" ; mkA "substancial" ; } ; --*
lin substantial_6_A = variants {mkA "afluente" ; mkA "rico" ; } ; --*
lin substantiate_1_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "corroborar") ; mkV2 (mkV "provar") ; mkV2 (mkV "substanciar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; } ; --*
lin substantiate_2_V2 = variants {mkV2 (mkV "forth") ; mkV2 (mkV "representar") ; } ; --*
lin substantiate_3_V2 = variants {mkV2 (mkV "concretizar") ; mkV2 (mkV "realizar") ; } ; --*
lin substantiation_1_N = variants {mkN "confirmação" ; mkN "crisma" ; mkN "verificação" ; } ; --*
lin substantiation_2_N = mkN "verificação" ; --*
lin substantive_1_A = variants {mkA "substancial" ; mkA "substantivo" ; } ; --*
lin substantive_2_A = variants {mkA "essencial" ; mkA "substancial" ; mkA "substantivo" ; } ; --*
lin substantive_3_A = variants {mkA "substancial" ; mkA "substantivo" ; } ; --*
lin substantive_N = mkN "substantivo" ; --*
lin substitute_1_N = mkN "substituto" ; --*
lin substitute_1_V2 = variants {mkV2 (mkV "pôr") ; mkV2 (mkV "substituir") ; mkV2 (mkV "trocar") ; } ; --*
lin substitute_2_V = variants {mkV "fazer" ; mkV "in" ; mkV "substituir" ; } ; --*
lin substitute_3_N = variants {mkN "dobro" ; mkN "man" ; } ; --*
lin substitute_3_V = variants {mkV "in" ; mkV "substituir" ; } ; --*
lin substitution_2_N = variants {mkN "mudança" ; mkN "substituição" ; } ; --*
lin substrate_1_N = mkN "substrato" ; --*
lin substrate_3_N = mkN "substrato" ; --*
lin substratum_2_N = mkN "substrato" ; --*
lin substructure_1_N = variants {mkN "infraestructura" ; mkN "infraestrutura" ; mkN "infra-estrutura" ; } ; --*
lin substructure_2_N = variants {mkN "alicerce" ; mkN "base" ; mkN "pé" ; } ; --*
lin subsume_1_V2 = variants {mkV2 (mkV "classificar") ; mkV2 (mkV "conter") ; mkV2 (mkV "incluir") ; mkV2 (mkV "subordinar") ; mkV2 (mkV "subsumir") ; } ; --*
lin subsumption_2_N = mkN "subsunção" ; --*
lin subtend_V2 = mkV2 (mkV "delimitar") ; --*
lin subterfuge_N = variants {mkN "estratagema" ; mkN "socapa" ; mkN "subterfúgio" ; mkN "tramóia" ; } ; --*
lin subterranean_1_A = mkA "subterrâneo" ; --*
lin subterranean_2_A = mkA "ulterior" ; --*
lin subthalamus_N = mkN "subtálamo" ; --*
lin subtitle_1_N = mkN "legenda" ; --*
lin subtitle_2_N = variants {mkN "legenda" ; mkN "subtítulo" ; } ; --*
lin subtitle_V3 = variants {mkV3 (mkV "colocar") ; mkV3 (mkV "legendar") ; } ; --*
lin subtle_1_A = mkA "subtil" ; --*
lin subtle_2_A = variants {mkA "arguto" ; mkA "quase" ; mkA "subtil" ; } ; --*
lin subtle_3_A = mkA "insidioso" ; --*
lin subtlety_1_N = mkN "matiz" ; --*
lin subtlety_2_N = variants {mkN "fineza" ; mkN "subtileza" ; mkN "sutileza" ; } ; --*
lin subtotal_N = mkN "subtotal" ; --*
lin subtract_1_V2 = variants {mkV2 (mkV "deduzir") ; mkV2 (mkV "off") ; mkV2 (mkV "subtrair") ; } ; --*
lin subtract_2_V2 = mkV2 (mkV "subtrair") ; --*
lin subtraction_1_N = variants {mkN "sinal" ; mkN "Subtraçao" ; mkN "subtração" ; mkN "subtracção" ; } ; --*
lin subtraction_2_N = variants {mkN "subtração" ; mkN "subtracção" ; } ; --*
lin subtrahend_N = mkN "subtraendo" ; --*
lin subtropical_1_A = mkA "subtropical" ; --*
lin subtropics_N = mkN "Subtrópico" ; --*
lin suburban_A = variants {mkA "suburbana" ; mkA "suburbano" ; } ; --*
lin suburbia_1_N = variants {mkN "area" ; mkN "periferia" ; mkN "subúrbio" ; mkN "subúrbios" ; } ; --*
lin suburb_N = variants {mkN "area" ; mkN "periferia" ; mkN "subúrbio" ; mkN "subúrbios" ; } ; --*
lin subvention_1_N = variants {mkN "subsídio" ; mkN "subvenção" ; } ; --*
lin subvention_2_N = mkN "subvenção" ; --*
lin subversion_1_N = mkN "corrupção" ; --*
lin subversion_2_N = variants {mkN "activity" ; mkN "subversão" ; } ; --*
lin subversive_A = variants {mkA "insurgente" ; mkA "subversivo" ; } ; --*
lin subversive_N = variants {mkN "revolucionário" ; mkN "Revolucionário" ; mkN "Revolucionários" ; mkN "subversivo" ; } ; --*
lin subvert_1_V2 = variants {mkV2 (mkV "derribar") ; mkV2 (mkV "derrubar") ; mkV2 (mkV "down") ; mkV2 (mkV "subverter") ; } ; --*
lin subvert_2_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin subvert_3_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "sabotar") ; mkV2 (mkV "solapar") ; } ; --*
lin subvert_4_V2 = mkV2 (mkV "subverter") ; --*
lin sub_V = variants {mkV "fazer" ; mkV "in" ; mkV "substituir" ; } ; --*
lin subway_1_N = variants {mkN "metro" ; mkN "metrô" ; mkN "metropolitano" ; mkN "system" ; } ; --*
lin subwoofer_N = variants {mkN "subwoofer" ; mkN "Sub-woofer" ; } ; --*
lin succedaneum_N = mkN "sucedâneo" ; --*
lin succeed_1_V = variants {mkV "atingir" ; mkV "home" ; mkV "suceder" ; mkV "the" ; mkV "through" ; } ; --*
lin succeed_2_V = variants {mkV "after" ; mkV "seguir" ; mkV "suceder" ; } ; --*
lin succeed_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "seguir") ; mkV2 (mkV "suceder") ; } ; --*
lin success_1_N = mkN "vitória" ; --*
lin success_2_N = variants {mkN "êxito" ; mkN "sucesso" ; mkN "triunfo" ; } ; --*
lin success_3_N = variants {mkN "éxito" ; mkN "êxito" ; } ; --*
lin success_4_N = variants {mkN "ganhador" ; mkN "vencedor" ; } ; --*
lin successful_A = variants {mkA "bem" ; mkA "bem-sucedido" ; mkA "próspero" ; } ; --*
lin succession_1_N = variants {mkN "sequence" ; mkN "sequência" ; mkN "seqüência" ; mkN "succession" ; mkN "sucessão" ; } ; --*
lin succession_2_N = mkN "sucessão" ; --*
lin succession_3_N = variants {mkN "sequência" ; mkN "sucessão" ; } ; --*
lin succession_4_N = variants {mkN "succession" ; mkN "sucessão" ; } ; --*
lin succession_5_N = variants {mkN "over" ; mkN "sucessão" ; } ; --*
lin successive_A = variants {mkA "sequencial" ; mkA "seqüencial" ; mkA "sucessivo" ; } ; --*
lin successor_1_N = mkN "sucessor" ; --*
lin successor_2_N = mkN "sucessor" ; --*
lin successor_3_N = mkN "sucessor" ; --*
lin succinct_A = variants {mkA "compêndio" ; mkA "sucinto" ; mkA "sumário" ; } ; --*
lin succour_1_N = variants {mkN "ajuda" ; mkN "assistência" ; mkN "socorro" ; } ; --*
lin succour_1_V2 = mkV2 (mkV "socorrer") ; --*
lin succubus_1_N = variants {mkN "Sucubo" ; mkN "súcubo" ; } ; --*
lin succumb_1_V = variants {mkV "ceder" ; mkV "in" ; mkV "sucumbir" ; mkV "under" ; } ; --*
lin succumb_2_V = variants {mkV "bater" ; mkV "morrer" ; mkV "sucumbir" ; } ; --*
lin such_1_Predet = variants {variants {} ; variants {} ; variants {} ; } ; --*
lin suck_1_V2 = variants {mkV2 (mkV "chupar") ; mkV2 (mkV "sugar") ; } ; --*
lin suck_1_V = variants {mkV "chupar" ; mkV "sugar" ; } ; --*
lin suck_2_V = variants {mkV "chupar" ; mkV "sugar" ; } ; --*
lin suck_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "sugar") ; } ; --*
lin suck_5_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "mamar") ; } ; --*
lin suck_5_V = variants {mkV "down" ; mkV "mamar" ; } ; --*
lin suck_6_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin suck_7_V2 = variants {mkV2 (mkV "aleitar") ; mkV2 (mkV "amamentar") ; mkV2 (mkV "lactar") ; mkV2 (mkV "suck") ; } ; --*
lin suckerFem_1_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin suckerFem_3_N = variants {mkN "chupador" ; mkN "sugador" ; } ; --*
lin suckerFem_5_N = variants {mkN "pirulito" ; mkN "sucker" ; } ; --*
lin suckerMasc_1_N = variants {mkN "guy" ; mkN "otário" ; mkN "touch" ; mkN "trouxa" ; } ; --*
lin suckerMasc_3_N = variants {mkN "chupador" ; mkN "sugador" ; } ; --*
lin suckerMasc_5_N = variants {mkN "pirulito" ; mkN "sucker" ; } ; --*
lin suck_in_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin sucking_N = mkN "sugue" ; --*
lin sucking_pig_N = mkN "pig" ; --*
lin suckle_2_V2 = variants {mkV2 (mkV "aleitar") ; mkV2 (mkV "amamentar") ; mkV2 (mkV "lactar") ; mkV2 (mkV "suck") ; } ; --*
lin suckling_2_N = mkN "primeira" ; --*
lin suck_N = mkN "sugue" ; --*
lin suck_up_1_V = variants {mkV "absorver" ; mkV "in" ; mkV "up" ; } ; --*
lin sucralfate_N = mkN "Sucralfato" ; --*
lin sucre_2_N = mkN "Sucre" ; --*
lin sucrose_N = mkN "sacarose" ; --*
lin suction_2_N = mkN "sugue" ; --*
lin sudan_1_PN = variants {mkPN "of" ; mkPN "Sudao" ; mkPN "Sudão" ; } ; --*
lin sudanese_A = mkA "sudanês" ; --*
lin sudden_A = variants {mkA "abrupto" ; mkA "repentina" ; mkA "repentino" ; mkA "súbito" ; } ; --*
lin sudra_1_N = mkN "shudra" ; --*
lin suds_1_N = mkN "espuma" ; --*
lin suede_1_N = variants {mkN "camurça" ; mkN "leather" ; } ; --*
lin suede_2_N = variants {mkN "Camurça" ; mkN "cloth" ; } ; --*
lin sue_PN = variants {mkPN "Eugène" ; mkPN "Sue" ; } ; --*
lin suet_N = mkN "sebo" ; --*
lin sue_V2 = variants {mkV2 (mkV "acionar") ; mkV2 (mkV "ajuizar") ; mkV2 (mkV "litigar") ; } ; --*
lin suffer_1_V2 = mkV2 (mkV "sofrer") ; --*
lin suffer_2_V2 = variants {mkV2 (mkV "contrair") ; mkV2 (mkV "sofrer") ; mkV2 (mkV "ter") ; } ; --*
lin suffer_3_V2 = mkV2 (mkV "sofrer") ; --*
lin suffer_4_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin suffer_5_V = mkV "piorar" ; --*
lin suffer_6_V2 = variants {mkV2 (mkV "doer") ; mkV2 (mkV "sofrer") ; } ; --*
lin suffer_6_V = variants {mkV "doer" ; mkV "sofrer" ; } ; --*
lin suffer_7_V = variants {mkV "causar" ; mkV "doer" ; } ; --*
lin suffer_8_V = variants {mkV "padecer" ; mkV "sofrer" ; } ; --*
lin suffer_9_V = mkV "sofrer" ; --*
lin sufferable_A = variants {mkA "suportável" ; mkA "tolerável" ; } ; --*
lin sufferance_1_N = mkN "sofrimento" ; --*
lin sufferance_2_N = mkN "tolerância" ; --*
lin sufferer_2_N = variants {mkN "mártir" ; mkN "Mártires" ; } ; --*
lin suffering_1_N = variants {mkN "agonia" ; mkN "passamento" ; mkN "sofrimento" ; } ; --*
lin suffering_2_N = variants {mkN "infelicidade" ; mkN "sofrimento" ; } ; --*
lin suffering_3_N = variants {mkN "dor" ; mkN "sofrimento" ; } ; --*
lin suffering_4_N = variants {mkN "agonia" ; mkN "dor" ; mkN "martírio" ; mkN "tormento" ; mkN "tortura" ; } ; --*
lin suffice_V = variants {mkV "bastar" ; mkV "ser" ; } ; --*
lin sufficiency_3_N = variants {mkN "adequação" ; mkN "suficiência" ; } ; --*
lin sufficient_A = variants {mkA "bastante" ; mkA "suficiente" ; } ; --*
lin suffix_N = mkN "sufixo" ; --*
lin suffocate_1_V = variants {mkV "asfixiar" ; mkV "sufocar" ; } ; --*
lin suffocate_2_V2 = variants {mkV2 (mkV "asfixiar") ; mkV2 (mkV "sufocar") ; } ; --*
lin suffocate_5_V = variants {mkV "asfixiar" ; mkV "estrangular" ; mkV "sufocar" ; } ; --*
lin suffocate_7_V = variants {mkV "afogar" ; mkV "asfixiar" ; mkV "sufocar" ; } ; --*
lin suffocation_1_N = variants {mkN "asfixia" ; mkN "sufocamento" ; } ; --*
lin suffrage_N = variants {mkN "sufrágio" ; mkN "to" ; mkN "voto" ; } ; --*
lin suffusion_N = mkN "osmose" ; --*
lin sugar_1_N = variants {mkN "açúcar" ; mkN "sugar" ; } ; --*
lin sugar_2_N = variants {mkN "açúcar" ; mkN "carboidrato" ; mkN "Carboidratos" ; mkN "hidratos" ; } ; --*
lin sugar_3_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin sugar_beet_2_N = mkN "beet" ; --*
lin sugar_candy_N = mkN "candy" ; --*
lin sugar_cane_1_N = variants {mkN "cana-de-açúcar" ; mkN "cane" ; } ; --*
lin sugar_cane_2_N = variants {mkN "cana" ; mkN "cane" ; mkN "officinarum" ; } ; --*
lin sugariness_1_N = mkN "doçura" ; --*
lin sugar_V2 = mkV2 (mkV "açucarar") ; --*
lin suggest_1_V2 = variants {mkV2 (mkV "propor") ; mkV2 (mkV "sugerir") ; } ; --*
lin suggest_1_V = variants {mkV "propor" ; mkV "sugerir" ; } ; --*
lin suggest_1_VS = variants {mkVS (mkV "propor") ; mkVS (mkV "sugerir") ; } ; --*
lin suggest_2_V2 = variants {mkV2 (mkV "aludir") ; mkV2 (mkV "dar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "reportar-se") ; mkV2 (mkV "sugerir") ; } ; --*
lin suggest_2_V = variants {mkV "aludir" ; mkV "dar" ; mkV "fazer" ; mkV "reportar-se" ; mkV "sugerir" ; } ; --*
lin suggest_2_VS = variants {mkVS (mkV "aludir") ; mkVS (mkV "dar") ; mkVS (mkV "fazer") ; mkVS (mkV "reportar-se") ; mkVS (mkV "sugerir") ; } ; --*
lin suggest_3_V2 = mkV2 (mkV "sugestionar") ; --*
lin suggest_4_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "evocar") ; mkV2 (mkV "sugerir") ; } ; --*
lin suggestion_2_N = variants {mkN "proposição" ; mkN "proposta" ; mkN "sugestão" ; } ; --*
lin suggestion_3_N = variants {mkN "sinal" ; mkN "sombra" ; mkN "traço" ; mkN "vestígio" ; } ; --*
lin suggestion_4_N = mkN "sugestão" ; --*
lin suggestion_6_N = variants {mkN "hipnotismo" ; mkN "mesmerismo" ; } ; --*
lin suggestive_3_A = mkA "sugestivo" ; --*
lin suggestive_of_A2 = mkA2 (mkA "sugestivo") noPrep ; --*
lin suicidal_A = mkA "suicida" ; --*
lin suicide_1_N = variants {mkN "auto-destruição" ; mkN "suicídio" ; } ; --*
lin suicide_2_N = mkN "suicida" ; --*
lin suit_1_N = variants {mkN "fato" ; mkN "of" ; mkN "terno" ; mkN "traje" ; } ; --*
lin suit_1_V2 = mkV2 (mkV "acomodar") ; --*
lin suit_2_N = variants {mkN "causa" ; mkN "pleito" ; mkN "processo" ; } ; --*
lin suit_2_V2 = variants {mkV2 (mkV "agradar") ; mkV2 (mkV "ser") ; } ; --*
lin suit_3_V2 = variants {mkV2 (mkV "adaptar-se") ; mkV2 (mkV "adequar-se") ; mkV2 (mkV "convir") ; } ; --*
lin suit_4_N = variants {mkN "cortejamento" ; mkN "galanteio" ; } ; --*
lin suit_6_N = mkN "naipe" ; --*
lin suitability_N = variants {mkN "adequabilidade" ; mkN "adequação" ; mkN "conveniência" ; } ; --*
lin suitable_1_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "apto" ; mkA "capaz" ; mkA "conveniente" ; mkA "correspondente" ; } ; --*
lin suitable_2_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "capaz" ; mkA "conveniente" ; mkA "desejável" ; } ; --*
lin suitableness_N = variants {mkN "adequabilidade" ; mkN "adequação" ; mkN "conveniência" ; } ; --*
lin suitcase_N = variants {mkN "bag" ; mkN "mala" ; mkN "valise" ; } ; --*
lin suite_1_N = mkN "suíte" ; --*
lin suite_2_N = mkN "suíte" ; --*
lin suite_3_N = variants {mkN "comitiva" ; mkN "séquito" ; } ; --*
lin suite_4_N = variants {mkN "mobiliário" ; mkN "suíte" ; mkN "Suítes" ; } ; --*
lin sulfanilamide_N = mkN "Sulfanilamida" ; --*
lin sulfate_N = variants {mkN "sulfato" ; mkN "sulfatos" ; mkN "Sulfatos" ; } ; --*
lin sulfide_N = variants {mkN "sulfeto" ; mkN "Sulfetos" ; mkN "sulfureto" ; } ; --*
lin sulfonate_N = mkN "sulfonato" ; --*
lin sulfonylurea_N = mkN "sulfoniluréias" ; --*
lin sulk_V = variants {mkV "amuar" ; mkV "emburrar" ; } ; --*
lin sulky_2_A = mkA "preguisoço" ; --*
lin sullen_1_A = mkA "taciturno" ; --*
lin sully_1_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin sully_2_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin sully_3_V2 = variants {mkV2 (mkV "caluniar") ; mkV2 (mkV "conspurcar") ; mkV2 (mkV "denegrir") ; mkV2 (mkV "difamar") ; } ; --*
lin sulpha_1_N = variants {mkN "drug" ; mkN "sulfonamida" ; } ; --*
lin sulphate_N = variants {mkN "sulfato" ; mkN "sulfatos" ; mkN "Sulfatos" ; } ; --*
lin sulphide_N = variants {mkN "sulfeto" ; mkN "Sulfetos" ; mkN "sulfureto" ; } ; --*
lin sulphuric_1_A = variants {mkA "sulfúrico" ; mkA "sulfuroso" ; } ; --*
lin sulphur_N = variants {mkN "enxofre" ; mkN "enxôfre" ; mkN "number" ; } ; --*
lin sulphurous_2_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin sultanate_N = mkN "sultanato" ; --*
lin sultan_N = variants {mkN "sultão" ; mkN "Turk" ; } ; --*
lin sultry_1_A = mkA "sensual" ; --*
lin sum_1_N = variants {mkN "custo" ; mkN "of" ; } ; --*
lin sum_1_V2 = variants {mkV2 (mkV "resumir") ; mkV2 (mkV "sumarizar") ; mkV2 (mkV "up") ; } ; --*
lin sum_2_N = variants {mkN "montante" ; mkN "número" ; mkN "soma" ; mkN "totalizar" ; } ; --*
lin sum_2_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin sum_3_N = variants {mkN "suma" ; mkN "total" ; } ; --*
lin sum_4_N = variants {mkN "and" ; mkN "centro" ; mkN "cerne" ; mkN "essência" ; mkN "substância" ; } ; --*
lin sum_5_N = variants {mkN "soma" ; mkN "totalidade" ; } ; --*
lin sum_6_N = mkN "união" ; --*
lin sumatran_A = mkA "de" ; --*
lin sumatra_PN = variants {mkPN "Samatra" ; mkPN "Sumatra" ; } ; --*
lin summarize_1_V2 = variants {mkV2 (mkV "resumir") ; mkV2 (mkV "sumarizar") ; mkV2 (mkV "up") ; } ; --*
lin summarize_2_V2 = variants {mkV2 (mkV "resumir") ; mkV2 (mkV "sumarizar") ; mkV2 (mkV "up") ; } ; --*
lin summary_2_A = variants {mkA "compêndio" ; mkA "sucinto" ; mkA "sumário" ; } ; --*
lin summary_N = variants {mkN "resumo" ; mkN "sumário" ; } ; --*
lin summation_2_N = mkN "somatório" ; --*
lin summation_3_N = variants {mkN "suma" ; mkN "total" ; } ; --*
lin summation_4_N = mkN "adição" ; --*
lin summer_1_N = variants {mkN "estio" ; mkN "verão" ; } ; --*
lin summer_2_N = mkN "verão" ; --*
lin summerhouse_N = variants {mkN "coreto" ; mkN "pavilhão" ; } ; --*
lin summertime_N = variants {mkN "estio" ; mkN "verão" ; } ; --*
lin summer_V = mkV "veranear" ; --*
lin summit_1_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin summit_2_N = variants {mkN "cima" ; mkN "cume" ; mkN "pico" ; mkN "topo" ; } ; --*
lin summit_3_N = variants {mkN "Cimeira" ; mkN "conferência" ; mkN "cúpula" ; mkN "meeting" ; } ; --*
lin summon_1_V2 = mkV2 (mkV "convocar") ; --*
lin summon_2_V2 = mkV2 (mkV "convocar") ; --*
lin summon_4_V2 = variants {mkV2 (mkV "reagrupar") ; mkV2 (mkV "up") ; } ; --*
lin summon_5_V2 = variants {mkV2 (mkV "convocar") ; mkV2 (mkV "mobilizar") ; mkV2 (mkV "reunir") ; } ; --*
lin summons_3_N = mkN "Intimação" ; --*
lin summons_V2 = mkV2 (mkV "convocar") ; --*
lin sumo_N = mkN "sumô" ; --*
lin sumpter_N = variants {mkN "animal" ; mkN "burro" ; } ; --*
lin sumptuous_A = variants {mkA "luxuoso" ; mkA "luxuriante" ; mkA "rico" ; } ; --*
lin sumptuousness_1_N = variants {mkN "luxo" ; mkN "opulência" ; mkN "sumptuosidade" ; mkN "suntuosidade" ; } ; --*
lin sumptuousness_2_N = variants {mkN "luxo" ; mkN "sumptuosidade" ; } ; --*
lin sum_up_1_V2 = variants {mkV2 (mkV "resumir") ; mkV2 (mkV "sumarizar") ; mkV2 (mkV "up") ; } ; --*
lin sum_up_2_V2 = variants {mkV2 (mkV "resumir") ; mkV2 (mkV "sumarizar") ; mkV2 (mkV "up") ; } ; --*
lin sum_up_3_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin sun_1_V2 = variants {mkV2 (mkV "bronzear") ; mkV2 (mkV "expor") ; } ; --*
lin sun_2_N = variants {mkN "luz" ; mkN "sol" ; } ; --*
lin sun_3_N = mkN "sol" ; --*
lin sun_4_N = mkN "sol" ; --*
lin sunbathe_V = variants {mkV "bronzear" ; mkV "expor" ; } ; --*
lin sunbeam_N = mkN "raio" ; --*
lin sunblind_N = mkN "toldo" ; --*
lin sunburn_1_N = variants {mkN "bronzeado" ; mkN "queimadura" ; } ; --*
lin sunburn_2_N = variants {mkN "queimadura" ; mkN "solare" ; } ; --*
lin sundae_N = mkN "sundae" ; --*
lin sunderland_PN = mkPN "Sunderland" ; --*
lin sundew_N = variants {mkN "dew" ; mkN "drósera" ; mkN "plant" ; } ; --*
lin sundial_N = mkN "relógio" ; --*
lin sundown_N = variants {mkN "crepúsculo" ; mkN "poente" ; mkN "pôr-do-sol" ; } ; --*
lin sundries_N = variants {mkN "coisa" ; mkN "coisas" ; mkN "tralha" ; } ; --*
lin sundry_A = variants {mkA "misto" ; mkA "sortido" ; mkA "variado" ; } ; --*
lin sunfish_2_N = variants {mkN "Peixe" ; mkN "peixe-lua" ; mkN "sunfish" ; } ; --*
lin sunflower_N = variants {mkN "girassol" ; mkN "helianto" ; mkN "heliotrópio" ; mkN "tornassol" ; } ; --*
lin sunglasses_N = variants {mkN "glasses" ; mkN "óculos" ; } ; --*
lin sunless_A = mkA "nublado" ; --*
lin sunlight_N = variants {mkN "luz" ; mkN "sol" ; } ; --*
lin sun_lounge_N = variants {mkN "lounge" ; mkN "parlor" ; mkN "parlour" ; mkN "porch" ; mkN "solário" ; } ; --*
lin sunny_A = mkA "ensolarado" ; --*
lin sun_parlour_N = variants {mkN "lounge" ; mkN "parlor" ; mkN "parlour" ; mkN "porch" ; mkN "solário" ; } ; --*
lin sun_PN = variants {mkPN "sol" ; mkPN "Sol" ; } ; --*
lin sun_porch_1_N = variants {mkN "lounge" ; mkN "parlor" ; mkN "parlour" ; mkN "porch" ; mkN "solário" ; } ; --*
lin sunray_1_N = mkN "raio" ; --*
lin sunrise_1_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin sunrise_2_N = variants {mkN "nascer" ; mkN "Nascer-do-sol" ; } ; --*
lin sunrise_3_N = mkN "aurora" ; --*
lin sunroof_N = variants {mkN "teto" ; mkN "Teto-solar" ; } ; --*
lin sunscreen_N = variants {mkN "blocker" ; mkN "filtro" ; mkN "fotoprotetor" ; } ; --*
lin sunset_1_N = variants {mkN "crepúsculo" ; mkN "poente" ; mkN "pôr-do-sol" ; } ; --*
lin sunset_2_N = variants {mkN "entardecer" ; mkN "ocaso" ; } ; --*
lin sunshade_1_N = mkN "toldo" ; --*
lin sunshade_2_N = mkN "guarda-chuva" ; --*
lin sunshine_1_N = variants {mkN "luz" ; mkN "sol" ; } ; --*
lin sunshine_2_N = variants {mkN "clima" ; mkN "tempo" ; mkN "weather" ; } ; --*
lin sunshine_roof_N = variants {mkN "teto" ; mkN "Teto-solar" ; } ; --*
lin sunspot_N = mkN "mancha" ; --*
lin sunstroke_N = variants {mkN "fever" ; mkN "insolação" ; } ; --*
lin suntan_N = variants {mkN "bronzeado" ; mkN "queimadura" ; } ; --*
lin sun_up_N = variants {mkN "aurora" ; mkN "folga" ; mkN "light" ; mkN "madrugada" ; mkN "of" ; } ; --*
lin sun_worship_N = mkN "heliolatria" ; --*
lin super_2_A = mkA "súper" ; --*
lin superannuate_1_V2 = variants {mkV2 (mkV "aposentar") ; mkV2 (mkV "jubilar") ; } ; --*
lin superb_1_A = variants {mkA "luzente" ; mkA "magnífico" ; } ; --*
lin superb_2_A = mkA "magnífico" ; --*
lin supercede_V2 = variants {mkV2 (mkV "sobrepor") ; mkV2 (mkV "substituir") ; mkV2 (mkV "suplantar") ; mkV2 (mkV "upon") ; } ; --*
lin supercharger_N = mkN "supercompressor" ; --*
lin supercilious_1_A = variants {mkA "imodesto" ; mkA "imperioso" ; mkA "soberbo" ; mkA "vanglorioso" ; } ; --*
lin superclass_N = mkN "superclasse" ; --*
lin superconductivity_N = mkN "supercondutividade" ; --*
lin superego_N = mkN "superego" ; --*
lin superfecundation_N = mkN "Superfecundação" ; --*
lin superficial_1_A = mkA "superficial" ; --*
lin superficial_2_A = mkA "superficial" ; --*
lin superficies_1_N = mkN "superfície" ; --*
lin superfluity_N = variants {mkN "excesso" ; mkN "pletora" ; mkN "superabundância" ; } ; --*
lin superfluous_1_A = mkA "vão" ; --*
lin superfluous_2_A = variants {mkA "excessivo" ; mkA "extra" ; mkA "redundante" ; mkA "reduntante" ; mkA "supérfluo" ; } ; --*
lin superhighway_1_N = variants {mkN "autoestrada" ; mkN "auto-estrada" ; mkN "estrada" ; mkN "highway" ; mkN "rodovia" ; mkN "super-autopista" ; mkN "via" ; mkN "vias" ; } ; --*
lin superimpose_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "sobrepor") ; } ; --*
lin superintendence_N = variants {mkN "superintendência" ; mkN "supervisão" ; } ; --*
lin superintendent_1_N = variants {mkN "feitor" ; mkN "superintendente" ; } ; --*
lin superintendent_2_N = mkN "superintendente" ; --*
lin superintend_V2 = variants {mkV2 (mkV "chefiar") ; mkV2 (mkV "controlar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "manejar") ; mkV2 (mkV "supervisar") ; mkV2 (mkV "supervisionar") ; } ; --*
lin superior_1_A = mkA "superior" ; --*
lin superior_3_N = mkN "vencedor" ; --*
lin superior_4_N = variants {mkN "Lago" ; mkN "Superior" ; } ; --*
lin superior_6_N = mkN "texto" ; --*
lin superlative_2_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin superlative_3_N = variants {mkN "degree" ; mkN "superlativo" ; } ; --*
lin superlative_A = variants {mkA "o" ; mkA "superior" ; } ; --*
lin superman_1_N = variants {mkN "semideus" ; mkN "super-homem" ; } ; --*
lin superman_2_N = variants {mkN "breaker" ; mkN "in" ; mkN "Lucy" ; mkN "pane" ; mkN "toons" ; } ; --*
lin supermarket_N = variants {mkN "supermarket" ; mkN "supermercado" ; mkN "Supermercados" ; } ; --*
lin supermodel_N = mkN "supermodelo" ; --*
lin supernal_2_A = mkA "celeste" ; --*
lin supernatural_A = variants {mkA "sobrecomum" ; mkA "sobrenatural" ; } ; --*
lin supernatural_N = variants {mkN "ocultismo" ; mkN "oculto" ; mkN "sobrenatural" ; } ; --*
lin supernova_N = variants {mkN "supernova" ; mkN "Supernovas" ; } ; --*
lin super_N = mkN "superintendente" ; --*
lin supernumerary_2_N = variants {mkN "carrier" ; mkN "comparsa" ; } ; --*
lin superorder_N = mkN "superordem" ; --*
lin superoxide_2_N = variants {mkN "anion" ; mkN "superóxido" ; } ; --*
lin superscription_1_N = mkN "sobrescrito" ; --*
lin superscript_N = mkN "texto" ; --*
lin supersede_V2 = variants {mkV2 (mkV "sobrepor") ; mkV2 (mkV "substituir") ; mkV2 (mkV "suplantar") ; mkV2 (mkV "upon") ; } ; --*
lin supersonic_1_A = variants {mkA "supersônico" ; mkA "ultrassônico" ; } ; --*
lin supersonic_2_A = variants {mkA "supersônico" ; mkA "ultrassônico" ; } ; --*
lin superstar_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin superstition_N = variants {mkN "notion" ; mkN "superstição" ; } ; --*
lin superstitious_A = mkA "supersticioso" ; --*
lin supersymmetry_N = mkN "supersimetria" ; --*
lin supervene_V = mkV "acontecer" ; --*
lin supervise_1_V2 = variants {mkV2 (mkV "chefiar") ; mkV2 (mkV "controlar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "manejar") ; mkV2 (mkV "supervisar") ; mkV2 (mkV "supervisionar") ; } ; --*
lin supervise_2_V2 = variants {mkV2 (mkV "controlar") ; mkV2 (mkV "monitorar") ; mkV2 (mkV "policiar") ; } ; --*
lin supervision_N = variants {mkN "superintendência" ; mkN "supervisão" ; } ; --*
lin supervisor_1_N = mkN "supervisor" ; --*
lin supination_N = mkN "supinação" ; --*
lin supine_1_A = mkA "supino" ; --*
lin supper_1_N = mkN "cear" ; --*
lin supper_2_N = mkN "jantar" ; --*
lin supplanter_N = mkN "usurpador" ; --*
lin supplant_V2 = variants {mkV2 (mkV "sobrepor") ; mkV2 (mkV "substituir") ; mkV2 (mkV "suplantar") ; mkV2 (mkV "upon") ; } ; --*
lin supplement_1_N = variants {mkN "adendo" ; mkN "Post-scriptum" ; mkN "Post-Scriptum" ; } ; --*
lin supplement_2_N = variants {mkN "suplementação" ; mkN "suplemento" ; } ; --*
lin supplement_3_N = mkN "acessório" ; --*
lin supplement_3_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin supplementary_1_A = variants {mkA "adicional" ; mkA "auxiliar" ; mkA "suplementar" ; } ; --*
lin supplementary_2_A = variants {mkA "adicional" ; mkA "complementar" ; mkA "suplementar" ; } ; --*
lin supplementation_1_N = variants {mkN "suplementação" ; mkN "suplemento" ; } ; --*
lin suppleness_3_N = mkN "elasticidade" ; --*
lin suppliant_N = mkN "apresentante" ; --*
lin supplicant_1_N = variants {mkN "rezador" ; mkN "suplicante" ; } ; --*
lin supplicant_2_N = mkN "apresentante" ; --*
lin supplicate_3_V2 = mkV2 (mkV "suplicar") ; --*
lin supplication_2_N = mkN "súplica" ; --*
lin supplication_3_N = mkN "carola" ; --*
lin supplier_N = variants {mkN "fornecedor" ; mkN "provedor" ; } ; --*
lin supply_1_N = variants {mkN "fornecimento" ; mkN "provisão" ; } ; --*
lin supply_1_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "suprir") ; } ; --*
lin supply_2_N = mkN "fornecimento" ; --*
lin supply_2_V2 = variants {mkV2 (mkV "distribuir") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "suprir") ; } ; --*
lin supply_3_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "prover") ; mkV2 (mkV "provisionar") ; mkV2 (mkV "servir") ; } ; --*
lin supply_of_N2 = variants {mkN2 (mkN "abastecimento") noPrep ; mkN2 (mkN "fornecimento") noPrep ; } ; --*
lin support_10_N = variants {mkN "apoio" ; mkN "encosto" ; mkN "suporte" ; } ; --*
lin support_10_V2 = variants {mkV2 (mkV "going") ; mkV2 (mkV "patrocinar") ; mkV2 (mkV "suportar") ; } ; --*
lin support_11_N = variants {mkN "apoio" ; mkN "backing" ; mkN "support" ; } ; --*
lin support_11_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin support_1_N = variants {mkN "amparo" ; mkN "suporte" ; } ; --*
lin support_1_V2 = variants {mkV2 (mkV "apoiar") ; mkV2 (mkV "up") ; } ; --*
lin support_2_N = variants {mkN "apoio" ; mkN "suporte" ; } ; --*
lin support_2_V2 = variants {mkV2 (mkV "financiar") ; mkV2 (mkV "manter") ; } ; --*
lin support_3_V2 = variants {mkV2 (mkV "aprovar") ; mkV2 (mkV "for") ; } ; --*
lin support_4_V2 = variants {mkV2 (mkV "segurar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; mkV2 (mkV "up") ; } ; --*
lin support_5_N = mkN "documentação" ; --*
lin support_5_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "corroborar") ; mkV2 (mkV "provar") ; mkV2 (mkV "substanciar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; } ; --*
lin support_6_N = variants {mkN "and" ; mkN "manutenção" ; mkN "pão" ; } ; --*
lin support_6_V2 = mkV2 (mkV "subscrever") ; --*
lin support_7_N = mkN "base" ; --*
lin support_7_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "out") ; mkV2 (mkV "sustentar") ; } ; --*
lin support_8_V2 = variants {mkV2 (mkV "defender") ; mkV2 (mkV "for") ; mkV2 (mkV "suportar") ; } ; --*
lin support_9_N = variants {mkN "accompaniment" ; mkN "acompanhamento" ; } ; --*
lin support_9_V2 = mkV2 (mkV "coadjuvar") ; --*
lin supportable_A = variants {mkA "suportável" ; mkA "tolerável" ; } ; --*
lin supporter_1_N = mkN "seguidor" ; --*
lin supporter_2_N = variants {mkN "fiador" ; mkN "padrinho" ; mkN "Patrocinio" ; } ; --*
lin supporter_3_N = variants {mkN "adjunto" ; mkN "ajudante" ; mkN "assistente" ; mkN "criado" ; mkN "servente" ; mkN "servidor" ; } ; --*
lin supporter_4_N = mkN "Jarreteira" ; --*
lin suppose_1_VS = mkVS (mkV "supor") ; --*
lin suppose_2_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "esperar") ; mkVS (mkV "pensar") ; mkVS (mkV "supor") ; } ; --*
lin suppose_3_VS = variants {mkVS (mkV "conjecturar") ; mkVS (mkV "supor") ; mkVS (mkV "teorizar") ; } ; --*
lin suppose_4_V2 = mkV2 (mkV "pressupor") ; --*
lin suppose_5_V2 = mkV2 (mkV "pressupor") ; --*
lin supposed_1_A = mkA "suposto" ; --*
lin supposed_2_A = mkA "suposto" ; --*
lin supposed_3_A = variants {mkA "assim" ; mkA "chamado" ; mkA "dito" ; mkA "suposto" ; } ; --*
lin supposed_4_A = mkA "hipotético" ; --*
lin supposition_1_N = variants {mkN "conjectura" ; mkN "especulação" ; mkN "fazerdeconta" ; mkN "hipótese" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin supposition_2_N = variants {mkN "hipótese" ; mkN "pressuposição" ; mkN "suposição" ; } ; --*
lin supposition_3_N = variants {mkN "hipótese" ; mkN "suposição" ; } ; --*
lin suppository_N = mkN "supositório" ; --*
lin suppress_1_V2 = variants {mkV2 (mkV "conquistar") ; mkV2 (mkV "down") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "sufocar") ; mkV2 (mkV "suprimir") ; } ; --*
lin suppress_2_V2 = mkV2 (mkV "oprimir") ; --*
lin suppress_3_V2 = variants {mkV2 (mkV "inibir") ; mkV2 (mkV "suprimir") ; mkV2 (mkV "up") ; } ; --*
lin suppress_4_V2 = variants {mkV2 (mkV "reprimir") ; mkV2 (mkV "suprimir") ; } ; --*
lin suppress_5_V2 = mkV2 (mkV "suprimir") ; --*
lin suppression_3_N = variants {mkN "repressão" ; mkN "supressão" ; } ; --*
lin suppression_4_N = mkN "inibição" ; --*
lin suppurate_1_V = mkV "supurar" ; --*
lin suppuration_1_N = mkN "supuração" ; --*
lin suppuration_2_N = mkN "pus" ; --*
lin supra_Adv = mkAdv "a" ; --*
lin supremacy_N = mkN "supremacia" ; --*
lin supreme_1_A = variants {mkA "suprema" ; mkA "supremo" ; } ; --*
lin supreme_2_A = variants {mkA "soberano" ; mkA "supremo" ; } ; --*
lin sura_1_N = mkN "sura" ; --*
lin sura_2_N = variants {mkN "barriga" ; mkN "panturrilha" ; mkN "surata" ; } ; --*
lin surcharge_2_V2 = mkV2 (mkV "roubar") ; --*
lin surcharge_6_V2 = mkV2 (mkV "sobrecarregar") ; --*
lin surcharge_N = mkN "sobrecarga" ; --*
lin sure_1_A = mkA "certo" ; --*
lin sure_3_A = variants {mkA "certo" ; mkA "inevitável" ; mkA "seguro" ; } ; --*
lin sure_7_A = mkA "indefectível" ; --*
lin sure_Adv = variants {mkAdv "as" ; mkAdv "certain" ; mkAdv "certamente" ; mkAdv "de" ; mkAdv "enough" ; mkAdv "seguramente" ; mkAdv "sure" ; } ; --*
lin sureness_1_N = variants {mkN "altivez" ; mkN "aprumo" ; mkN "certeza" ; mkN "desembaraço" ; mkN "fé" ; mkN "pose" ; } ; --*
lin sureness_2_N = mkN "segurança" ; --*
lin surety_2_N = mkN "garantia" ; --*
lin surety_3_N = mkN "refém" ; --*
lin surety_5_N = mkN "segurança" ; --*
lin surface_1_N = mkN "superfície" ; --*
lin surface_1_V2 = variants {mkV2 (mkV "emergir") ; mkV2 (mkV "up") ; } ; --*
lin surface_1_V2V = variants {mkV2V (mkV "emergir") ; mkV2V (mkV "up") ; } ; --*
lin surface_1_V = variants {mkV "emergir" ; mkV "up" ; } ; --*
lin surface_1_VS = variants {mkVS (mkV "emergir") ; mkVS (mkV "up") ; } ; --*
lin surface_2_N = mkN "superfície" ; --*
lin surface_2_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "revestir") ; } ; --*
lin surface_3_N = variants {mkN "superfície" ; mkN "surface" ; } ; --*
lin surface_3_V = variants {mkV "aparecer" ; mkV "on" ; mkV "out" ; mkV "up" ; } ; --*
lin surface_6_N = variants {mkN "aerofólio" ; mkN "surface" ; } ; --*
lin surfacing_N = mkN "Surfacing" ; --*
lin surfboard_N = variants {mkN "prancha" ; mkN "Prancha" ; } ; --*
lin surfeit_2_V2 = mkV2 (mkV "saciar") ; --*
lin surfing_N = mkN "Surfe" ; --*
lin surfperch_N = variants {mkN "Embiotocidae" ; mkN "fish" ; } ; --*
lin surfriding_N = mkN "Surfe" ; --*
lin surge_3_N = variants {mkN "onda" ; mkN "vaga" ; mkN "vagalhão" ; } ; --*
lin surgeon_N = variants {mkN "cirurgião" ; mkN "surgeon" ; } ; --*
lin surgery_1_N = mkN "cirurgia" ; --*
lin surgery_3_N = variants {mkN "room" ; mkN "sala" ; mkN "theater" ; mkN "theatre" ; } ; --*
lin surgery_4_N = variants {mkN "cirurgia" ; mkN "operação" ; mkN "operation" ; mkN "procedure" ; mkN "process" ; } ; --*
lin surgical_1_A = mkA "cirúrgico" ; --*
lin surgical_2_A = mkA "cirúrgico" ; --*
lin surgical_3_A = mkA "cirúrgico" ; --*
lin surmise_N = variants {mkN "conjectura" ; mkN "especulação" ; mkN "fazerdeconta" ; mkN "hipótese" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin surmise_VS = mkVS (mkV "suspeitar") ; --*
lin surmount_1_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "subjugar") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin surmount_4_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin surname_N = variants {mkN "cognome" ; mkN "name" ; mkN "sobrenome" ; } ; --*
lin surpass_1_V2 = variants {mkV2 (mkV "exceder") ; mkV2 (mkV "out") ; mkV2 (mkV "sobressair") ; } ; --*
lin surpass_2_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "ser") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; } ; --*
lin surpass_3_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "ir") ; mkV2 (mkV "past") ; } ; --*
lin surpass_4_V2 = variants {mkV2 (mkV "exceder") ; mkV2 (mkV "transcender") ; } ; --*
lin surpassing_1_A = mkA "transcedente" ; --*
lin surpassing_2_A = mkA "excepcional" ; --*
lin surplice_N = mkN "sobrepeliz" ; --*
lin surplus_A = variants {mkA "excessivo" ; mkA "extra" ; mkA "redundante" ; mkA "reduntante" ; mkA "supérfluo" ; } ; --*
lin surplus_N = variants {mkN "abundância" ; mkN "excedente" ; mkN "excesso" ; } ; --*
lin surprise_1_N = variants {mkN "sobressalto" ; mkN "surpresa" ; } ; --*
lin surprise_1_V2 = variants {mkV2 (mkV "assombrar") ; mkV2 (mkV "sobressaltar") ; mkV2 (mkV "surpreender") ; } ; --*
lin surprise_2_N = mkN "surpresa" ; --*
lin surprise_2_V2 = mkV2 (mkV "surpreender") ; --*
lin surprise_3_N = mkN "surpresa" ; --*
lin surprise_3_V2 = mkV2 (mkV "emboscar") ; --*
lin surprise_3_V2V = mkV2V (mkV "emboscar") ; --*
lin surprised_A = variants {mkA "surpreendida" ; mkA "surpreendido" ; mkA "surpresa" ; mkA "surpreso" ; } ; --*
lin surprising_A = mkA "surpreendente" ; --*
lin surreal_1_A = variants {mkA "fantasmagórico" ; mkA "surreal" ; mkA "surrealista" ; } ; --*
lin surrealism_N = mkN "surrealismo" ; --*
lin surrealistic_A = variants {mkA "fantasmagórico" ; mkA "surreal" ; mkA "surrealista" ; } ; --*
lin surrender_1_N = mkN "resignação" ; --*
lin surrender_4_N = variants {mkN "capitulação" ; mkN "rendição" ; } ; --*
lin surrender_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "render-se") ; mkV2 (mkV "up") ; } ; --*
lin surrender_V = variants {mkV "render-se" ; mkV "up" ; } ; --*
lin surreptitious_1_A = variants {mkA "furtivo" ; mkA "sub-reptício" ; } ; --*
lin surreptitious_2_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin surrey_1_N = mkN "Surrey" ; --*
lin surrey_1_PN = mkPN "Surrey" ; --*
lin surrogate_1_N = mkN "substituto" ; --*
lin surrogate_2_N = variants {mkN "representante" ; mkN "substituto" ; } ; --*
lin surrogate_A = variants {mkA "adoptivo" ; mkA "adotivo" ; } ; --*
lin surround_1_V2 = variants {mkV2 (mkV "contornar") ; mkV2 (mkV "rodear") ; } ; --*
lin surround_3_V2 = variants {mkV2 (mkV "cercar") ; mkV2 (mkV "in") ; mkV2 (mkV "sitiar") ; } ; --*
lin surround_4_V2 = variants {mkV2 (mkV "emparedar") ; mkV2 (mkV "in") ; } ; --*
lin surrounding_A = mkA "envolvente" ; --*
lin surroundings_1_N = variants {mkN "ambiente" ; mkN "arredores" ; mkN "cercanias" ; mkN "meio" ; } ; --*
lin surroundings_2_N = variants {mkN "ambiente" ; mkN "cerque" ; mkN "entorno" ; mkN "meio" ; } ; --*
lin surround_N = variants {mkN "ambiente" ; mkN "cerque" ; mkN "entorno" ; mkN "meio" ; } ; --*
lin surveillance_N = variants {mkN "vigilância" ; mkN "vigilângia" ; } ; --*
lin survey_1_V2 = mkV2 (mkV "examinar") ; --*
lin survey_2_N = variants {mkN "resumo" ; mkN "sumário" ; } ; --*
lin survey_3_N = mkN "observação" ; --*
lin survey_4_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "vistoriar") ; } ; --*
lin survey_5_V2 = mkV2 (mkV "inspecionar") ; --*
lin survey_6_V2 = mkV2 (mkV "mapear") ; --*
lin surveying_N = mkN "engenharia" ; --*
lin surveyor_1_N = mkN "topógrafo" ; --*
lin survival_1_N = mkN "sobrevivência" ; --*
lin survival_2_N = variants {mkN "of" ; mkN "seleção" ; mkN "selection" ; } ; --*
lin survivalist_N = variants {mkN "preparador" ; mkN "sobrevivencialista" ; } ; --*
lin survive_1_V = variants {mkV "on" ; mkV "out" ; mkV "perseverar" ; mkV "resistir" ; mkV "sobreviver" ; mkV "up" ; } ; --*
lin survive_2_V2 = variants {mkV2 (mkV "it") ; mkV2 (mkV "round") ; mkV2 (mkV "sobreviver") ; mkV2 (mkV "through") ; } ; --*
lin survive_3_V = variants {mkV "haver" ; mkV "sobreviver" ; mkV "subsistir" ; } ; --*
lin survive_4_V2 = mkV2 (mkV "sobreviver") ; --*
lin survivor_1_N = mkN "sobrevivente" ; --*
lin survivor_2_N = mkN "sobrevivente" ; --*
lin survivor_3_N = mkN "sobrevivente" ; --*
lin susceptibility_N = variants {mkN "susceptibilidade" ; mkN "suscetibilidade" ; } ; --*
lin susceptible_2_A = variants {mkA "susceptível" ; mkA "suscetível" ; } ; --*
lin susceptible_of_A2 = variants {mkA2 (mkA "susceptível") noPrep ; mkA2 (mkA "suscetível") noPrep ; } ; --*
lin susceptible_to_A2 = variants {mkA2 (mkA "susceptível") noPrep ; mkA2 (mkA "suscetível") noPrep ; } ; --*
lin sushi_N = variants {mkN "suchi" ; mkN "sushi" ; } ; --*
lin suspect_1_N = mkN "suspeito" ; --*
lin suspect_2_N = variants {mkN "acusado" ; mkN "argüido" ; mkN "ré" ; mkN "réu" ; mkN "suspeito" ; } ; --*
lin suspect_2_V2 = mkV2 (mkV "desconfiar") ; --*
lin suspect_3_V2 = mkV2 (mkV "suspeitar") ; --*
lin suspect_A = variants {mkA "desconfiado" ; mkA "duvidoso" ; mkA "suspeito" ; } ; --*
lin suspect_VS = mkVS (mkV "suspeitar") ; --*
lin suspend_2_V2 = mkV2 (mkV "suspender") ; --*
lin suspend_4_V2 = variants {mkV2 (mkV "congelar") ; mkV2 (mkV "suspender") ; } ; --*
lin suspend_5_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "suspender") ; } ; --*
lin suspender_N = mkN "suspensório" ; --*
lin suspense_3_N = mkN "suspense" ; --*
lin suspension_2_N = variants {mkN "fazerumapausa" ; mkN "interrupção" ; mkN "pausa" ; mkN "suspensão" ; } ; --*
lin suspension_3_N = variants {mkN "pendência" ; mkN "suspensão" ; } ; --*
lin suspension_4_N = variants {mkN "hiato" ; mkN "suspensão" ; } ; --*
lin suspension_5_N = variants {mkN "suspensão" ; mkN "system" ; } ; --*
lin suspension_6_N = mkN "suspensão" ; --*
lin suspension_7_N = variants {mkN "removal" ; mkN "suspensão" ; } ; --*
lin suspicion_1_N = variants {mkN "intuição" ; mkN "premonição" ; } ; --*
lin suspicion_2_N = variants {mkN "desconfiança" ; mkN "receio" ; } ; --*
lin suspicion_3_N = mkN "suspeita" ; --*
lin suspicious_1_A = mkA "suspeito" ; --*
lin suspicious_2_A = variants {mkA "desconfiado" ; mkA "duvidoso" ; mkA "suspeito" ; } ; --*
lin sussex_PN = mkPN "Sussex" ; --*
lin suss_out_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "into") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin sustain_1_V2 = variants {mkV2 (mkV "prolongar") ; mkV2 (mkV "up") ; } ; --*
lin sustain_2_V2 = variants {mkV2 (mkV "contrair") ; mkV2 (mkV "sofrer") ; mkV2 (mkV "ter") ; } ; --*
lin sustain_3_V2 = variants {mkV2 (mkV "alimentar") ; mkV2 (mkV "nutrir") ; } ; --*
lin sustain_4_V2 = variants {mkV2 (mkV "manter") ; mkV2 (mkV "sustentar") ; } ; --*
lin sustain_5_V2 = variants {mkV2 (mkV "segurar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; mkV2 (mkV "up") ; } ; --*
lin sustain_7_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "corroborar") ; mkV2 (mkV "provar") ; mkV2 (mkV "substanciar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "sustentar") ; } ; --*
lin sustainability_N = variants {mkN "sustentabilidade" ; mkN "Sustentabilidade" ; } ; --*
lin sustainable_A = mkA "sustentável" ; --*
lin sustained_1_A = variants {mkA "contínuo" ; mkA "ininterrupto" ; } ; --*
lin sustenance_1_N = variants {mkN "alimentação" ; mkN "alimento" ; mkN "comida" ; mkN "nutrição" ; mkN "nutrientes" ; mkN "pão" ; } ; --*
lin sustenance_2_N = variants {mkN "and" ; mkN "manutenção" ; mkN "pão" ; } ; --*
lin sustenance_3_N = mkN "sustentação" ; --*
lin susurration_2_N = variants {mkN "cochicho" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin suture_1_N = variants {mkN "joint" ; mkN "ponto" ; mkN "sutura" ; } ; --*
lin suture_2_N = variants {mkN "seam" ; mkN "sutura" ; } ; --*
lin suzerain_N = mkN "suserano" ; --*
lin suzerainty_2_N = variants {mkN "senhorio" ; mkN "Suserania" ; } ; --*
lin svelte_A = variants {mkA "delgado" ; mkA "esbelto" ; mkA "esguio" ; mkA "franzino" ; mkA "magro" ; } ; --*
lin swab_1_N = mkN "suabe" ; --*
lin swab_2_N = variants {mkN "esfregão" ; mkN "Esfregão" ; } ; --*
lin swag_2_N = variants {mkN "botim" ; mkN "espólio" ; mkN "money" ; mkN "pilhagem" ; mkN "rapina" ; mkN "roubo" ; mkN "saque" ; } ; --*
lin swagger_1_V = mkV "desfilar" ; --*
lin swagger_2_V = mkV "intimidar" ; --*
lin swain_N = variants {mkN "homem" ; mkN "man" ; mkN "namorado" ; mkN "noivo" ; } ; --*
lin swale_N = variants {mkN "Canaleta" ; mkN "Valetas" ; } ; --*
lin swallow_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "engolir") ; } ; --*
lin swallow_2_N = mkN "deglutição" ; --*
lin swallow_3_N = mkN "andorinha" ; --*
lin swallow_5_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "devolver") ; } ; --*
lin swallow_6_V2 = mkV2 (mkV "engolir") ; --*
lin swallow_7_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "engolir") ; mkV2 (mkV "with") ; } ; --*
lin swallow_8_V2 = mkV2 (mkV "engulir") ; --*
lin swamp_1_N = variants {mkN "pântano" ; mkN "paúis" ; } ; --*
lin swamp_1_V2 = variants {mkV2 (mkV "afundar") ; mkV2 (mkV "encharcar") ; } ; --*
lin swamp_2_V2 = variants {mkV2 (mkV "alagar") ; mkV2 (mkV "encharcar") ; mkV2 (mkV "inundar") ; } ; --*
lin swan_1_V = variants {mkV "afirmar" ; mkV "jurar" ; } ; --*
lin swan_2_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin swank_N = variants {mkN "estilo" ; mkN "garbo" ; mkN "modernidade" ; mkN "word" ; } ; --*
lin swank_V = variants {mkV "empavonar" ; mkV "off" ; mkV "ostentar" ; mkV "pavonear" ; mkV "pavonear-se" ; } ; --*
lin swan_N = variants {mkN "cisne" ; mkN "Cisne" ; } ; --*
lin swansea_PN = mkPN "Swansea" ; --*
lin swan_song_N = variants {mkN "hurrah" ; mkN "song" ; } ; --*
lin swap_1_V2 = variants {mkV2 (mkV "permutar") ; mkV2 (mkV "trocar") ; } ; --*
lin swap_1_V = variants {mkV "permutar" ; mkV "trocar" ; } ; --*
lin swap_N = variants {mkN "permuta" ; mkN "troca" ; } ; --*
lin swarm_1_N = variants {mkN "horda" ; mkN "legião" ; mkN "leva" ; mkN "massa" ; mkN "multidão" ; mkN "turba" ; } ; --*
lin swarm_1_V = variants {mkV "enxamear" ; mkV "formigar" ; mkV "pulular" ; } ; --*
lin swarm_2_N = variants {mkN "enxame" ; mkN "turma" ; } ; --*
lin swastika_N = variants {mkN "cruz" ; mkN "suástica" ; mkN "svástica" ; } ; --*
lin swatch_N = mkN "amostra" ; --*
lin swathe_N = mkN "bandagem" ; --*
lin sway_1_V = variants {mkV "balançar" ; mkV "embalar" ; mkV "sacudir" ; } ; --*
lin sway_2_V = variants {mkV "balançar" ; mkV "gingar" ; mkV "requebrar" ; } ; --*
lin sway_3_V2 = variants {mkV2 (mkV "convencer") ; mkV2 (mkV "persuadir") ; } ; --*
lin sway_4_V2 = mkV2 (mkV "balançar") ; --*
lin swazi_1_N = mkN "Suázis" ; --*
lin swazi_2_N = mkN "Língua" ; --*
lin swazi_A = mkA "suazi" ; --*
lin swaziland_PN = variants {mkPN "of" ; mkPN "Suazilandia" ; } ; --*
lin swear_1_V = variants {mkV "desbocar" ; mkV "insultar" ; mkV "xingar" ; } ; --*
lin swear_3_V2 = mkV2 (mkV "jurar") ; --*
lin swear_3_V = mkV "jurar" ; --*
lin swear_3_VV = mkVV (mkV "jurar") ; --*
lin swear_4_V2 = mkV2 (mkV "depor") ; --*
lin swear_4_V = mkV "depor" ; --*
lin swear_4_VV = mkVV (mkV "depor") ; --*
lin swearing_1_N = variants {mkN "expletivo" ; mkN "palavrão" ; mkN "word" ; } ; --*
lin swearing_2_N = mkN "juramento" ; --*
lin swear_on_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "crer") ; mkV2 (mkV "depender") ; } ; --*
lin swear_VS = variants {mkVS (mkV "afirmar") ; mkVS (mkV "jurar") ; } ; --*
lin swearword_N = variants {mkN "expletivo" ; mkN "palavrão" ; mkN "word" ; } ; --*
lin sweat_1_N = variants {mkN "perspiração" ; mkN "sudorese" ; mkN "suor" ; mkN "transpiração" ; } ; --*
lin sweat_4_N = variants {mkN "empenho" ; mkN "esforço" ; mkN "grease" ; } ; --*
lin sweater_1_N = variants {mkN "agasalho" ; mkN "camisola" ; mkN "pulôver" ; mkN "suéter" ; } ; --*
lin sweat_V = variants {mkV "suar" ; mkV "transpirar" ; } ; --*
lin swedeFem_1_N = variants {mkN "sueca" ; mkN "sueco" ; } ; --*
lin swedeFem_2_N = variants {mkN "cabbage" ; mkN "couve-nabo" ; mkN "napus" ; mkN "plant" ; mkN "turnip" ; } ; --*
lin swedeFem_3_N = variants {mkN "couve-nabo" ; mkN "turnip" ; } ; --*
lin swedeMasc_1_N = variants {mkN "sueca" ; mkN "sueco" ; } ; --*
lin swedeMasc_2_N = variants {mkN "cabbage" ; mkN "couve-nabo" ; mkN "napus" ; mkN "plant" ; mkN "turnip" ; } ; --*
lin swedeMasc_3_N = variants {mkN "couve-nabo" ; mkN "turnip" ; } ; --*
lin sweden_PN = variants {mkPN "of" ; mkPN "Suecia" ; mkPN "Suécia" ; } ; --*
lin swedish_A = mkA "sueco" ; --*
lin swedishFem_1_N = variants {mkN "sueca" ; mkN "sueco" ; } ; --*
lin swedishFem_2_N = variants {mkN "cabbage" ; mkN "couve-nabo" ; mkN "napus" ; mkN "plant" ; mkN "turnip" ; } ; --*
lin swedishFem_3_N = variants {mkN "couve-nabo" ; mkN "turnip" ; } ; --*
lin swedishMasc_1_N = variants {mkN "sueca" ; mkN "sueco" ; } ; --*
lin swedishMasc_2_N = variants {mkN "cabbage" ; mkN "couve-nabo" ; mkN "napus" ; mkN "plant" ; mkN "turnip" ; } ; --*
lin swedishMasc_3_N = variants {mkN "couve-nabo" ; mkN "turnip" ; } ; --*
lin sweep_1_V2 = variants {mkV2 (mkV "varrer") ; mkV2 (mkV "vasculhar") ; mkV2 (mkV "vassourar") ; } ; --*
lin sweep_3_V = mkV "varrer" ; --*
lin sweep_4_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "ser") ; mkV2 (mkV "up") ; } ; --*
lin sweep_5_V2 = mkV2 (mkV "abranger") ; --*
lin sweep_6_V2 = variants {mkV2 (mkV "escovar") ; mkV2 (mkV "varrer") ; } ; --*
lin sweet_10_A = variants {mkA "adocicado" ; mkA "doce" ; } ; --*
lin sweet_1_A = mkA "doce" ; --*
lin sweet_2_A = variants {mkA "angelical" ; mkA "angélico" ; } ; --*
lin sweet_2_N = mkN "sobremesa" ; --*
lin sweet_4_A = mkA "cheiroso" ; --*
lin sweet_4_N = mkN "doçura" ; --*
lin sweet_5_A = mkA "gratificante" ; --*
lin sweet_5_N = mkN "Doce" ; --*
lin sweet_6_A = variants {mkA "cheiroso" ; mkA "perfumado" ; } ; --*
lin sweeten_1_V2 = variants {mkV2 (mkV "adoçar") ; mkV2 (mkV "dulcificar") ; } ; --*
lin sweeten_1_V = variants {mkV "adoçar" ; mkV "dulcificar" ; } ; --*
lin sweetening_1_N = variants {mkN "adoçante" ; mkN "adoçantes" ; } ; --*
lin sweetening_2_N = variants {mkN "aprimoramento" ; mkN "melhoramento" ; mkN "melhoria" ; } ; --*
lin sweetheart_1_N = mkN "amor" ; --*
lin sweetheart_2_N = variants {mkN "amor" ; mkN "anjo" ; mkN "doçura" ; mkN "querido" ; } ; --*
lin sweetheart_3_N = variants {mkN "avião" ; mkN "beleza" ; mkN "gostosa" ; mkN "mulher" ; } ; --*
lin sweetie_N = mkN "amor" ; --*
lin sweetness_1_N = mkN "doçura" ; --*
lin sweetness_2_N = mkN "Doce" ; --*
lin sweetness_3_N = variants {mkN "aroma" ; mkN "fragância" ; } ; --*
lin sweet_scented_A = variants {mkA "cheiroso" ; mkA "perfumado" ; } ; --*
lin swell_1_V = variants {mkV "aumentar" ; mkV "crescer" ; mkV "subir" ; } ; --*
lin swell_2_V = variants {mkV "encher" ; mkV "up" ; } ; --*
lin swell_3_V = variants {mkV "entumescer" ; mkV "inchar" ; mkV "up" ; } ; --*
lin swell_4_N = variants {mkN "almofadinha" ; mkN "dândi" ; mkN "Dândi" ; mkN "figurino" ; mkN "galã" ; mkN "janota" ; mkN "plate" ; } ; --*
lin swell_4_V = variants {mkV "emergir" ; mkV "up" ; } ; --*
lin swell_6_V2 = variants {mkV2 (mkV "avultar") ; mkV2 (mkV "inchar") ; } ; --*
lin swell_A = variants {mkA "bad" ; mkA "muito" ; } ; --*
lin swelling_1_N = variants {mkN "inchação" ; mkN "inchamento" ; mkN "turgidez" ; } ; --*
lin swelling_2_N = variants {mkN "excrescência" ; mkN "giba" ; mkN "montículo" ; mkN "protuberância" ; mkN "saliência" ; } ; --*
lin swerve_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin swift_2_N = variants {mkN "Jonathan" ; mkN "Swift" ; } ; --*
lin swift_3_N = mkN "gaivão" ; --*
lin swift_A = mkA "rápido" ; --*
lin swiftness_N = variants {mkN "rapidez" ; mkN "velocidade" ; } ; --*
lin swig_2_V = variants {mkV "beber" ; mkV "libar" ; mkV "tomar" ; } ; --*
lin swill_N = mkN "lavagem" ; --*
lin swim_1_V = mkV "nadar" ; --*
lin swim_2_V = variants {mkV "boiar" ; mkV "nadar" ; } ; --*
lin swim_3_V = mkV "boiar" ; --*
lin swim_4_V = mkV "nadar" ; --*
lin swim_5_V = mkV "nadar" ; --*
lin swimmer_1_N = mkN "nadador" ; --*
lin swimmer_2_N = variants {mkN "Nadador" ; mkN "Nadadores" ; } ; --*
lin swimming_bath_N = variants {mkN "bath" ; mkN "piscina" ; mkN "pool" ; } ; --*
lin swimming_costume_N = variants {mkN "costume" ; mkN "fatodebanho" ; mkN "roupadebanho" ; mkN "suit" ; } ; --*
lin swimmingly_Adv = variants {mkAdv "sem" ; mkAdv "suavemente" ; } ; --*
lin swimming_N = variants {mkN "nadada" ; mkN "natação" ; mkN "Natação" ; } ; --*
lin swimming_pool_N = variants {mkN "bath" ; mkN "piscina" ; mkN "pool" ; } ; --*
lin swim_N = variants {mkN "nadada" ; mkN "natação" ; mkN "Natação" ; } ; --*
lin swimsuit_N = variants {mkN "costume" ; mkN "fatodebanho" ; mkN "roupadebanho" ; mkN "suit" ; } ; --*
lin swindler_N = mkN "canteiro" ; --*
lin swindle_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin swine_N = variants {mkN "porco" ; mkN "suíno" ; mkN "świnia" ; } ; --*
lin swing_12_V2 = variants {mkV2 (mkV "balançar") ; mkV2 (mkV "requebrar") ; } ; --*
lin swing_12_V = variants {mkV "balançar" ; mkV "requebrar" ; } ; --*
lin swing_13_V = mkV "fazer" ; --*
lin swing_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "bater") ; mkV2 (mkV "mexer") ; } ; --*
lin swing_2_N = variants {mkN "balanço" ; mkN "baloiço" ; } ; --*
lin swing_2_V = variants {mkV "balançar" ; mkV "gingar" ; mkV "requebrar" ; } ; --*
lin swing_3_V = mkV "virar" ; --*
lin swing_4_N = mkN "vacilação" ; --*
lin swing_5_N = variants {mkN "music" ; mkN "Swing" ; } ; --*
lin swinge_V2 = mkV2 (mkV "chamuscar") ; --*
lin swipe_1_V2 = mkV2 (mkV "bater") ; --*
lin swipe_2_V2 = variants {mkV2 (mkV "afanar") ; mkV2 (mkV "furtar") ; mkV2 (mkV "larapiar") ; mkV2 (mkV "roubar") ; mkV2 (mkV "surrupiar") ; } ; --*
lin swirl_1_V = variants {mkV "girar" ; mkV "piruetar" ; mkV "redemoinhar" ; } ; --*
lin swirl_2_V = mkV "redemoinhar" ; --*
lin swirl_N = variants {mkN "redemoinho" ; mkN "turbilhão" ; mkN "vórtice" ; } ; --*
lin swirl_V2 = mkV2 (mkV "redemoinhar") ; --*
lin swish_1_V = variants {mkV "farfalhar" ; mkV "sibilar" ; } ; --*
lin swish_A = variants {mkA "chique" ; mkA "classudo" ; } ; --*
lin swish_V2 = variants {mkV2 (mkV "farfalhar") ; mkV2 (mkV "sibilar") ; } ; --*
lin swiss_A = variants {mkA "suíça" ; mkA "suíço" ; } ; --*
lin swiss_N = variants {mkN "people" ; mkN "Suíço" ; } ; --*
lin switch_1_N = variants {mkN "chave" ; mkN "switch" ; } ; --*
lin switch_1_V2 = variants {mkV2 (mkV "alterar") ; mkV2 (mkV "over") ; } ; --*
lin switch_1_V = variants {mkV "alterar" ; mkV "over" ; } ; --*
lin switch_2_V2 = variants {mkV2 (mkV "permutar") ; mkV2 (mkV "trocar") ; } ; --*
lin switch_2_V = variants {mkV "permutar" ; mkV "trocar" ; } ; --*
lin switch_3_V2 = mkV2 (mkV "mudar") ; --*
lin switch_3_V = mkV "mudar" ; --*
lin switch_5_N = mkN "vara" ; --*
lin switch_5_V2 = mkV2 (mkV "ligar") ; --*
lin switch_7_N = mkN "troca" ; --*
lin switch_7_V2 = variants {mkV2 (mkV "alternar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin switch_7_V = variants {mkV "alternar" ; mkV "mudar" ; mkV "trocar" ; } ; --*
lin switchboard_N = mkN "central" ; --*
lin switzerland_PN = variants {mkPN "Confederation" ; mkPN "Suiça" ; mkPN "Suíça" ; } ; --*
lin swivel_V2 = mkV2 (mkV "girar") ; --*
lin swivel_V = mkV "girar" ; --*
lin swob_N = variants {mkN "esfregão" ; mkN "Esfregão" ; } ; --*
lin swollen_headed_A = variants {mkA "convencido" ; mkA "egoísta" ; } ; --*
lin swoon_N = variants {mkN "chilique" ; mkN "desfalecimento" ; mkN "desmaio" ; } ; --*
lin swoon_V = variants {mkV "desfalecer" ; mkV "desmaiar" ; mkV "esvanecer" ; mkV "out" ; } ; --*
lin swoop_1_V = mkV "polvilhar" ; --*
lin swop_N = variants {mkN "permuta" ; mkN "troca" ; } ; --*
lin swop_V2 = variants {mkV2 (mkV "permutar") ; mkV2 (mkV "trocar") ; } ; --*
lin swop_V = variants {mkV "permutar" ; mkV "trocar" ; } ; --*
lin swordfish_1_N = mkN "espadarte" ; --*
lin swordfish_2_N = variants {mkN "espadarte" ; mkN "gladius" ; } ; --*
lin sword_N = variants {mkN "espada" ; mkN "Espadas" ; mkN "gládio" ; } ; --*
lin swordplay_N = mkN "esgrima" ; --*
lin swordsman_N = mkN "espadeiro" ; --*
lin swot_V = variants {mkV "away" ; mkV "marrar" ; mkV "up" ; } ; --*
lin sybaritic_A = mkA "voluptuoso" ; --*
lin sycamore_4_N = variants {mkN "fig" ; mkN "sicômoro" ; mkN "sycomorus" ; } ; --*
lin syconium_N = variants {mkN "sicónio" ; mkN "Sicônio" ; } ; --*
lin sycophant_N = variants {mkN "adulador" ; mkN "bajulador" ; mkN "lambe-botas" ; mkN "puxa-saco" ; mkN "sicofanta" ; } ; --*
lin sydney_PN = mkPN "Sydney" ; --*
lin syllabary_N = variants {mkN "script" ; mkN "silabário" ; } ; --*
lin syllabicate_V2 = mkV2 (mkV "separar") ; --*
lin syllabication_N = variants {mkN "divisão" ; mkN "separação" ; mkN "silabação" ; } ; --*
lin syllabification_N = variants {mkN "divisão" ; mkN "separação" ; mkN "silabação" ; } ; --*
lin syllabify_1_V2 = mkV2 (mkV "separar") ; --*
lin syllabify_2_V2 = mkV2 (mkV "silabificar") ; --*
lin syllabize_1_V2 = mkV2 (mkV "separar") ; --*
lin syllabize_2_V2 = mkV2 (mkV "silabificar") ; --*
lin syllable_N = mkN "sílaba" ; --*
lin syllabus_N = variants {mkN "curricula" ; mkN "currículo" ; mkN "ementa" ; mkN "matéria" ; mkN "of" ; mkN "programa" ; } ; --*
lin syllogism_N = mkN "silogismo" ; --*
lin sylph_2_N = variants {mkN "sílfide" ; mkN "Silfo" ; } ; --*
lin sylvan_A = mkA "selvático" ; --*
lin symbiosis_N = variants {mkN "mutualismo" ; mkN "simbiose" ; } ; --*
lin symbiotic_1_A = mkA "simbiôntico" ; --*
lin symbol_1_N = variants {mkN "aceno" ; mkN "emblema" ; mkN "Simbolo" ; mkN "símbolo" ; mkN "Símbolos" ; mkN "sinal" ; } ; --*
lin symbol_2_N = variants {mkN "representation" ; mkN "símbolo" ; } ; --*
lin symbolic_1_A = mkA "simbólico" ; --*
lin symbolic_2_A = mkA "simbólico" ; --*
lin symbolic_3_A = mkA "simbólico" ; --*
lin symbolical_1_A = mkA "simbólico" ; --*
lin symbolical_2_A = mkA "simbólico" ; --*
lin symbolism_1_N = mkN "simbolismo" ; --*
lin symbolism_2_N = variants {mkN "simbolismo" ; mkN "Simbolismo" ; } ; --*
lin symbolization_2_N = variants {mkN "representation" ; mkN "símbolo" ; } ; --*
lin symbolization_3_N = variants {mkN "simbolismo" ; mkN "Simbolismo" ; } ; --*
lin symbolize_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "representar") ; mkV2 (mkV "simbolizar") ; } ; --*
lin symmetrical_1_A = mkA "simétrico" ; --*
lin symmetrical_2_A = variants {mkA "proporcional" ; mkA "simétrico" ; } ; --*
lin symmetric_A = mkA "simétrico" ; --*
lin symmetry_1_N = mkN "simetria" ; --*
lin symmetry_2_N = variants {mkN "proporção" ; mkN "simetria" ; mkN "Simetria" ; } ; --*
lin symmetry_3_N = mkN "isotropia" ; --*
lin sympathetic_2_A = mkA "simpática" ; --*
lin sympathetic_3_A = variants {mkA "benevolente" ; mkA "benévolo" ; mkA "bondoso" ; } ; --*
lin sympathetic_4_A = mkA "atractivo" ; --*
lin sympathize_1_V = mkV "simpatizar" ; --*
lin sympathize_2_V = mkV "entender" ; --*
lin sympathize_3_V = variants {mkV "comiserar" ; mkV "compadecer" ; mkV "compadecer-se" ; } ; --*
lin sympathizer_1_N = mkN "simpatizante" ; --*
lin sympathy_1_N = variants {mkN "compreensão" ; mkN "simpatia" ; } ; --*
lin sympathy_2_N = variants {mkN "compaixão" ; mkN "feeling" ; mkN "piedade" ; mkN "simpatia" ; } ; --*
lin sympathy_3_N = variants {mkN "afinidade" ; mkN "simpatia" ; } ; --*
lin symphonic_1_A = mkA "sinfônico" ; --*
lin symphonic_2_A = mkA "sinfônico" ; --*
lin symphonist_N = mkN "sinfonista" ; --*
lin symphony_1_N = variants {mkN "music" ; mkN "sinfonia" ; } ; --*
lin symphony_2_N = variants {mkN "orchestra" ; mkN "sinfonia" ; } ; --*
lin symposium_N = mkN "simpósio" ; --*
lin symptom_1_N = mkN "sintoma" ; --*
lin symptom_2_N = variants {mkN "Sinal/Sintoma" ; mkN "sintoma" ; mkN "Sintomas" ; } ; --*
lin symptomatic_1_A = mkA "sintomático" ; --*
lin symptomless_A = mkA "assintomático" ; --*
lin synagogue_N = variants {mkN "sinagoga" ; mkN "templo" ; mkN "Templos" ; } ; --*
lin synapsid_N = variants {mkN "reptile" ; mkN "Sinapsida" ; mkN "sinápsida" ; } ; --*
lin synapsis_N = mkN "Synapsis" ; --*
lin synchrocyclotron_N = mkN "sincrocíclotron" ; --*
lin synchronic_1_A = variants {mkA "sincrônico" ; mkA "síncrono" ; } ; --*
lin synchronic_2_A = mkA "sincrônico" ; --*
lin synchronic_3_A = mkA "sincrônico" ; --*
lin synchronism_N = variants {mkN "sincronia" ; mkN "Sincronicidade" ; mkN "sincronismo" ; mkN "sincronização" ; } ; --*
lin synchronization_1_N = variants {mkN "sincronia" ; mkN "Sincronicidade" ; mkN "sincronismo" ; mkN "sincronização" ; } ; --*
lin synchronization_2_N = mkN "sincronização" ; --*
lin synchronization_3_N = mkN "sincronização" ; --*
lin synchronize_1_V2 = mkV2 (mkV "sincronizar") ; --*
lin synchronize_2_V2 = mkV2 (mkV "sincronizar") ; --*
lin synchronize_2_V = mkV "sincronizar" ; --*
lin synchronize_3_V2 = mkV2 (mkV "sincronizar") ; --*
lin synchronize_4_V2 = mkV2 (mkV "sincronizar") ; --*
lin synchronize_5_V = mkV "sincronizar" ; --*
lin synchronize_6_V2 = mkV2 (mkV "sincronizar") ; --*
lin synchronous_1_A = variants {mkA "sincrônico" ; mkA "síncrono" ; } ; --*
lin synchronous_2_A = variants {mkA "sincrônico" ; mkA "síncrono" ; } ; --*
lin synchrony_N = variants {mkN "sincronia" ; mkN "Sincronicidade" ; mkN "sincronismo" ; mkN "sincronização" ; } ; --*
lin synchrotron_N = mkN "síncrotron" ; --*
lin synclinal_A = mkA "sinclinal" ; --*
lin syncopate_1_V2 = mkV2 (mkV "sincopar") ; --*
lin syncopate_2_V2 = mkV2 (mkV "sincopar") ; --*
lin syncopation_1_N = mkN "síncope" ; --*
lin syncopation_2_N = mkN "síncope" ; --*
lin syncope_1_N = variants {mkN "chilique" ; mkN "desfalecimento" ; mkN "desmaio" ; } ; --*
lin syncope_2_N = mkN "síncope" ; --*
lin syncretism_1_N = mkN "sincretismo" ; --*
lin syncretism_2_N = mkN "sincretismo" ; --*
lin syndactyly_N = mkN "sindactilia" ; --*
lin syndicalism_N = mkN "sindicalismo" ; --*
lin syndicalistFem_N = mkN "anarquista" ; --*
lin syndicalistMasc_N = mkN "anarquista" ; --*
lin syndicate_1_V2 = mkV2 (mkV "sindicar-se") ; --*
lin syndicate_2_N = variants {mkN "consórcio" ; mkN "sindicato" ; } ; --*
lin syndicate_2_V2 = variants {mkV2 (mkV "sindicar") ; mkV2 (mkV "sindicar-se") ; } ; --*
lin syndic_N = mkN "síndico" ; --*
lin syndrome_1_N = mkN "síndrome" ; --*
lin syndrome_2_N = variants {mkN "síndroma" ; mkN "síndrome" ; } ; --*
lin synecdoche_N = variants {mkN "Sinedoque" ; mkN "Sinédoque" ; } ; --*
lin synechia_N = variants {mkN "sinequia" ; mkN "Sinéquia" ; } ; --*
lin syneresis_1_N = mkN "sinérese" ; --*
lin synergism_1_N = mkN "sinergia" ; --*
lin synergism_2_N = mkN "sinergismo" ; --*
lin synergistic_1_A = variants {mkA "interativo" ; mkA "sinérgico" ; } ; --*
lin synergy_N = mkN "sinergia" ; --*
lin synesthesia_1_N = mkN "sinestesia" ; --*
lin synesthetic_1_A = mkA "sinestésico" ; --*
lin synod_N = mkN "concílio" ; --*
lin synonym_N = variants {mkN "sinónimo" ; mkN "word" ; } ; --*
lin synonymy_1_N = mkN "sinonímia" ; --*
lin synopsis_N = variants {mkN "resumo" ; mkN "sinopse" ; mkN "sumário" ; } ; --*
lin synoptic_1_A = mkA "sinótico" ; --*
lin synoptic_2_A = mkA "sinótico" ; --*
lin synovia_N = variants {mkN "fluid" ; mkN "Líquido" ; } ; --*
lin syntactic_1_A = variants {mkA "sintáctico" ; mkA "sintático" ; } ; --*
lin syntagma_1_N = mkN "sintagma" ; --*
lin syntax_1_N = variants {mkN "sintaxe" ; mkN "structure" ; } ; --*
lin syntax_2_N = mkN "sintaxe" ; --*
lin syntax_3_N = variants {mkN "sintaxe" ; mkN "Sintaxe" ; } ; --*
lin synthesis_1_N = mkN "síntese" ; --*
lin synthesis_2_N = variants {mkN "síntese" ; mkN "thinking" ; } ; --*
lin synthesis_3_N = variants {mkN "dedução" ; mkN "método" ; mkN "reasoning" ; } ; --*
lin synthesize_1_V2 = mkV2 (mkV "sintetizar") ; --*
lin synthesize_2_V2 = mkV2 (mkV "sintetizar") ; --*
lin synthesizer_2_N = variants {mkN "sintetizador" ; mkN "Sintetizadores" ; } ; --*
lin synthetic_1_A = mkA "sintético" ; --*
lin synthetic_2_A = mkA "sintético" ; --*
lin synthetic_3_A = mkA "sintético" ; --*
lin synthetic_4_A = variants {mkA "artificial" ; mkA "sintético" ; } ; --*
lin synthetic_5_A = mkA "sintético" ; --*
lin synthetic_6_A = mkA "sintético" ; --*
lin syphilis_N = variants {mkN "lues" ; mkN "Sifilis" ; mkN "sífilis" ; mkN "venerea" ; } ; --*
lin syphilitic_A = mkA "sifilítico" ; --*
lin syphon_1_N = mkN "sifão" ; --*
lin syphon_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "sifonar") ; } ; --*
lin syphon_V = variants {mkV "off" ; mkV "sifonar" ; } ; --*
lin syracuse_3_PN = variants {mkPN "of" ; mkPN "Siracusa" ; } ; --*
lin syrian_A = mkA "sírio" ; --*
lin syria_PN = variants {mkPN "Arab" ; mkPN "Síria" ; } ; --*
lin syringa_2_N = mkN "Syringa" ; --*
lin syringe_N = variants {mkN "injetor" ; mkN "seringa" ; } ; --*
lin syrinx_2_N = mkN "Siringe" ; --*
lin syrup_N = variants {mkN "calda" ; mkN "garrafada" ; mkN "xarope" ; } ; --*
lin syrupy_2_A = mkA "viscoso" ; --*
lin system_1_N = mkN "sistema" ; --*
lin system_2_N = variants {mkN "organização" ; mkN "sistema" ; } ; --*
lin system_3_N = mkN "sistema" ; --*
lin system_4_N = variants {mkN "of" ; mkN "sistema" ; } ; --*
lin system_5_N = variants {mkN "estrutura" ; mkN "ordem" ; mkN "organização" ; mkN "sistema" ; } ; --*
lin system_6_N = mkN "sistema" ; --*
lin system_7_N = mkN "sistema" ; --*
lin system_8_N = mkN "sistema" ; --*
lin system_9_N = mkN "organização" ; --*
lin systematic_1_A = variants {mkA "sistemático" ; mkA "sistémico" ; } ; --*
lin systematic_2_A = variants {mkA "sistemático" ; mkA "taxonômico" ; } ; --*
lin systematics_N = mkN "sistemática" ; --*
lin systemic_A = mkA "sistêmico" ; --*
lin systole_N = mkN "sístole" ; --*
lin systolic_A = mkA "sistólico" ; --*
lin tab_1_N = variants {mkN "conta" ; mkN "nota" ; } ; --*
lin tab_2_N = variants {mkN "imprensa" ; mkN "journalism" ; } ; --*
lin tab_3_N = variants {mkN "key" ; mkN "tecla" ; } ; --*
lin tab_5_N = variants {mkN "comprimido" ; mkN "pílula" ; } ; --*
lin tabasco_1_N = mkN "Tabasco" ; --*
lin tabasco_2_N = variants {mkN "Molho" ; mkN "sauce" ; } ; --*
lin tabasco_3_N = variants {mkN "pepper" ; mkN "pimenta" ; } ; --*
lin tabbouleh_N = mkN "Tabule" ; --*
lin tabby_2_N = mkN "gato" ; --*
lin tabernacle_2_N = mkN "tabernáculo" ; --*
lin tabernacle_3_N = variants {mkN "sinagoga" ; mkN "templo" ; mkN "Templos" ; } ; --*
lin tablature_N = variants {mkN "partitura" ; mkN "tablatura" ; } ; --*
lin table_1_N = variants {mkN "array" ; mkN "tabela" ; } ; --*
lin table_1_V2 = variants {mkV2 (mkV "adiar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "over") ; mkV2 (mkV "pospor") ; mkV2 (mkV "protelar") ; } ; --*
lin table_2_N = mkN "mesa" ; --*
lin table_2_V2 = mkV2 (mkV "tabular") ; --*
lin table_3_N = mkN "mesa" ; --*
lin table_4_N = mkN "Mesa" ; --*
lin table_6_N = mkN "mesa" ; --*
lin tablecloth_N = mkN "toalha" ; --*
lin tablefork_N = mkN "garfo" ; --*
lin table_knife_N = mkN "knife" ; --*
lin tableland_N = variants {mkN "patamar" ; mkN "planalto" ; mkN "Planalto" ; mkN "Planaltos" ; mkN "platô" ; mkN "superfícieplana" ; } ; --*
lin table_linen_N = variants {mkN "linen" ; mkN "toalha" ; } ; --*
lin tablespoon_1_N = mkN "colher" ; --*
lin tablespoon_2_N = mkN "colher" ; --*
lin tablespoonful_N = mkN "colher" ; --*
lin tablet_1_N = variants {mkN "lapide" ; mkN "prancheta" ; } ; --*
lin tablet_2_N = variants {mkN "bloco" ; mkN "of" ; } ; --*
lin tablet_4_N = variants {mkN "comprimido" ; mkN "pílula" ; } ; --*
lin tableware_N = mkN "louça" ; --*
lin tabloid_1_N = variants {mkN "imprensa" ; mkN "journalism" ; } ; --*
lin tabloid_2_N = variants {mkN "tabloide" ; mkN "Tablóide" ; } ; --*
lin taboo_1_A = variants {mkA "proibido" ; mkA "vedado" ; } ; --*
lin taboo_1_N = variants {mkN "tabu" ; mkN "tabú" ; } ; --*
lin taboo_2_N = variants {mkN "tabu" ; mkN "tabú" ; } ; --*
lin tabulate_1_V2 = mkV2 (mkV "tabular") ; --*
lin tabulation_1_N = variants {mkN "matter" ; mkN "tabela" ; mkN "tabelação" ; } ; --*
lin tabun_N = mkN "Tabun" ; --*
lin tachograph_N = variants {mkN "tacógrafo" ; mkN "Tacógrafo" ; } ; --*
lin tachometer_N = mkN "tacômetro" ; --*
lin tachycardia_N = variants {mkN "taquicardia" ; mkN "Taquicardia" ; } ; --*
lin tacit_A = variants {mkA "indutivo" ; mkA "tácito" ; } ; --*
lin taciturn_A = mkA "taciturno" ; --*
lin taciturnity_N = variants {mkN "reserva" ; mkN "reticência" ; mkN "taciturnidade" ; } ; --*
lin tack_3_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "montar") ; mkV2 (mkV "reunir") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin tack_4_N = variants {mkN "brandái" ; mkN "sheet" ; } ; --*
lin tack_5_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin tack_6_V2 = variants {mkV2 (mkV "alternar") ; mkV2 (mkV "mudar") ; mkV2 (mkV "trocar") ; } ; --*
lin tack_6_V = variants {mkV "alternar" ; mkV "mudar" ; mkV "trocar" ; } ; --*
lin tackle_1_V2 = variants {mkV2 (mkV "encarar") ; mkV2 (mkV "on") ; } ; --*
lin tackle_2_N = mkN "cordame" ; --*
lin tackle_2_V2 = variants {mkV2 (mkV "arrear") ; mkV2 (mkV "atrelar") ; } ; --*
lin tack_on_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin tacky_1_A = variants {mkA "cafona" ; mkA "de" ; mkA "desleixado" ; mkA "esnobe" ; mkA "fajuto" ; } ; --*
lin tacky_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin taco_2_N = mkN "taco" ; --*
lin tactical_A = variants {mkA "táctico" ; mkA "tático" ; } ; --*
lin tactic_N = variants {mkN "manobra" ; mkN "táctica" ; mkN "tática" ; } ; --*
lin tactics_1_N = mkN "táticas" ; --*
lin tactics_2_N = variants {mkN "manobra" ; mkN "táctica" ; mkN "tática" ; } ; --*
lin tactile_1_A = variants {mkA "táctil" ; mkA "tátil" ; } ; --*
lin tactile_2_A = mkA "tátil" ; --*
lin tact_N = variants {mkN "andamento" ; mkN "tato" ; mkN "tino" ; } ; --*
lin tactual_1_A = variants {mkA "táctil" ; mkA "tátil" ; } ; --*
lin tactual_2_A = mkA "tátil" ; --*
lin tadalafil_N = mkN "tadalafila" ; --*
lin tadpole_N = mkN "girino" ; --*
lin taenia_2_N = variants {mkN "ténia" ; mkN "tênia" ; } ; --*
lin taffeta_N = variants {mkN "tafetá" ; mkN "Tafetá" ; } ; --*
lin taffrail_N = mkN "coroamento" ; --*
lin tag_1_N = variants {mkN "apanhada" ; mkN "etiqueta" ; mkN "marca" ; mkN "pega-pega" ; mkN "tag" ; } ; --*
lin tag_1_V2 = variants {mkV2 (mkV "etiquetar") ; mkV2 (mkV "rotular") ; } ; --*
lin tag_3_N = variants {mkN "end" ; mkN "farrapo" ; mkN "rasgo" ; mkN "trapo" ; } ; --*
lin tag_3_V3 = mkV3 (mkV "apelidar") ; --*
lin tag_4_N = mkN "pega-pega" ; --*
lin tag_4_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin tag_on_V2 = variants {mkV2 (mkV "anexar") ; mkV2 (mkV "on") ; } ; --*
lin tahini_N = mkN "tahine" ; --*
lin tahitian_1_N = mkN "taitiano" ; --*
lin tahitian_2_N = variants {mkN "Língua" ; mkN "taitiano" ; } ; --*
lin tahitian_A = mkA "taitiano" ; --*
lin tahiti_PN = mkPN "Taiti" ; --*
lin tail_1_N = variants {mkN "cauda" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin tail_1_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin tail_2_N = variants {mkN "end" ; mkN "rabo" ; } ; --*
lin tail_3_N = variants {mkN "cauda" ; mkN "end" ; } ; --*
lin tail_4_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin tail_6_N = mkN "coroa" ; --*
lin tail_7_N = variants {mkN "assembly" ; mkN "Empenagem" ; mkN "traseiro" ; } ; --*
lin tail_8_N = variants {mkN "part" ; mkN "popa" ; mkN "traseiro" ; } ; --*
lin tailboard_N = mkN "portão" ; --*
lin tail_coat_1_N = variants {mkN "casaca" ; mkN "caudas" ; mkN "coat" ; mkN "dress" ; mkN "suit" ; mkN "tie" ; } ; --*
lin tail_end_1_N = variants {mkN "end" ; mkN "rabo" ; } ; --*
lin tail_end_2_N = variants {mkN "cauda" ; mkN "end" ; } ; --*
lin tail_end_3_N = variants {mkN "anca" ; mkN "ânus" ; mkN "bumbum" ; mkN "bunda" ; mkN "cu" ; mkN "end" ; mkN "nádegas" ; mkN "nalgas" ; mkN "popô" ; mkN "rabo" ; mkN "traseiro" ; } ; --*
lin tailgate_N = mkN "portão" ; --*
lin tailor_1_V2 = mkV2 (mkV "orientar") ; --*
lin tailor_3_V2 = variants {mkV2 (mkV "confeccionar") ; mkV2 (mkV "coser") ; mkV2 (mkV "costurar") ; } ; --*
lin tailor_made_A = mkA "sob" ; --*
lin tailor_N = variants {mkN "alfaiata" ; mkN "alfaiate" ; mkN "Alfaiate" ; mkN "castuveira" ; mkN "costureira" ; mkN "xastre" ; } ; --*
lin tailpipe_N = mkN "escapamento" ; --*
lin taint_1_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin taint_2_V2 = variants {mkV2 (mkV "contaminar") ; mkV2 (mkV "infectar") ; mkV2 (mkV "infetar") ; } ; --*
lin taint_N = variants {mkN "contaminação" ; mkN "poluição" ; } ; --*
lin taipan_N = variants {mkN "scutellatus" ; mkN "taipan" ; } ; --*
lin taipei_PN = variants {mkPN "of" ; mkPN "Taipei" ; mkPN "Taipéi" ; } ; --*
lin taiwan_1_PN = variants {mkPN "China" ; mkPN "Formosa" ; mkPN "of" ; mkPN "Taiwan" ; } ; --*
lin taiwan_2_PN = variants {mkPN "Formosa" ; mkPN "Ilha" ; mkPN "Taiwan" ; } ; --*
lin taiwanese_A = mkA "taiwanês" ; --*
lin taiwaneseFem_1_N = variants {mkN "taiwanês" ; mkN "taiwanesa" ; } ; --*
lin taiwaneseMasc_1_N = variants {mkN "taiwanês" ; mkN "taiwanesa" ; } ; --*
lin taiyuan_PN = mkPN "Taiyuan" ; --*
lin taka_N = mkN "taka" ; --*
lin take_10_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; mkV2 (mkV "selecionar") ; } ; --*
lin take_11_V2 = mkV2 (mkV "aceitar") ; --*
lin take_13_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "considerar") ; } ; --*
lin take_14_V2 = variants {mkV2 (mkV "demandar") ; mkV2 (mkV "for") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin take_16_V2 = mkV2 (mkV "filmar") ; --*
lin take_17_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "remover") ; mkV2 (mkV "retirar") ; mkV2 (mkV "tirar") ; } ; --*
lin take_18_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "in") ; mkV2 (mkV "tomar") ; } ; --*
lin take_19_V2 = mkV2 (mkV "aceitar") ; --*
lin take_1_N = variants {mkN "receita" ; mkN "renda" ; mkN "rendimento" ; } ; --*
lin take_1_V2 = variants {mkV2 (mkV "executar") ; mkV2 (mkV "fazer") ; } ; --*
lin take_21_V2 = variants {mkV2 (mkV "apoderar-se") ; mkV2 (mkV "tomar") ; } ; --*
lin take_22_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "up") ; } ; --*
lin take_23_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "admitir") ; mkV2 (mkV "on") ; } ; --*
lin take_25_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "cursar") ; mkV2 (mkV "estudar") ; } ; --*
lin take_26_V2 = mkV2 (mkV "custar") ; --*
lin take_28_V2 = variants {mkV2 (mkV "aim") ; mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "mirar") ; } ; --*
lin take_2_N = mkN "tomada" ; --*
lin take_2_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "ocupar") ; mkV2 (mkV "up") ; } ; --*
lin take_30_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "portar") ; } ; --*
lin take_31_V2 = variants {mkV2 (mkV "alugar") ; mkV2 (mkV "fretar") ; } ; --*
lin take_32_V2 = variants {mkV2 (mkV "assinar") ; mkV2 (mkV "to") ; } ; --*
lin take_36_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "reivindicar") ; } ; --*
lin take_38_V2 = mkV2 (mkV "conter") ; --*
lin take_3_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "conduzir") ; mkV2 (mkV "dirigir") ; mkV2 (mkV "guiar") ; mkV2 (mkV "levar") ; } ; --*
lin take_42_V2 = variants {mkV2 (mkV "contagiar-se") ; mkV2 (mkV "contrair") ; } ; --*
lin take_4_V2 = variants {mkV2 (mkV "agarrar") ; mkV2 (mkV "hold") ; mkV2 (mkV "tomar") ; } ; --*
lin take_5_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; } ; --*
lin take_6_V2 = mkV2 (mkV "ler") ; --*
lin take_7_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "tirar") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin take_8_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "tomar") ; } ; --*
lin take_aback_V2 = variants {mkV2 (mkV "atraz") ; mkV2 (mkV "pelo") ; mkV2 (mkV "por") ; mkV2 (mkV "surpreso") ; } ; --*
lin take_after_1_V2 = mkV2 (mkV "after") ; --*
lin take_aim_V = variants {mkV "aim" ; mkV "apontar" ; mkV "direcionar" ; mkV "mirar" ; } ; --*
lin take_apart_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "desfazer") ; mkV2 (mkV "desmantelar") ; mkV2 (mkV "up") ; } ; --*
lin take_apart_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "desmembrar") ; } ; --*
lin take_apart_3_V2 = variants {mkV2 (mkV "analisar") ; mkV2 (mkV "apart") ; mkV2 (mkV "down") ; } ; --*
lin take_away_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; } ; --*
lin take_away_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "out") ; } ; --*
lin take_away_4_V2 = mkV2 (mkV "away") ; --*
lin take_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "voltar") ; } ; --*
lin take_back_1_V = variants {mkV "back" ; mkV "voltar" ; } ; --*
lin take_back_2_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reapropriar") ; } ; --*
lin take_back_2_V = variants {mkV "back" ; mkV "reapropriar" ; } ; --*
lin take_back_3_V2 = mkV2 (mkV "back") ; --*
lin take_back_3_V = mkV "back" ; --*
lin take_back_5_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "devolver") ; } ; --*
lin take_back_6_V2 = mkV2 (mkV "back") ; --*
lin take_down_1_V2 = variants {mkV2 (mkV "baixar") ; mkV2 (mkV "down") ; } ; --*
lin take_down_3_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin take_down_4_V2 = variants {mkV2 (mkV "anotar") ; mkV2 (mkV "down") ; } ; --*
lin take_for_VA = variants {mkVA (mkV "as") ; mkVA (mkV "considerar") ; mkVA (mkV "for") ; mkVA (mkV "julgar") ; } ; --*
lin take_in_13_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin take_in_14_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin take_in_14_V = variants {mkV "in" ; mkV "up" ; } ; --*
lin take_in_16_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "adotar") ; mkV2 (mkV "in") ; } ; --*
lin take_in_3_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; } ; --*
lin take_in_6_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "in") ; mkV2 (mkV "ver") ; } ; --*
lin take_in_7_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "in") ; mkV2 (mkV "receber") ; } ; --*
lin take_in_9_V2 = variants {mkV2 (mkV "assimilar") ; mkV2 (mkV "in") ; } ; --*
lin take_off_1_V = variants {mkV "departir" ; mkV "forth" ; mkV "off" ; mkV "out" ; mkV "partir" ; mkV "sair" ; } ; --*
lin take_off_3_N = mkN "paródia" ; --*
lin take_off_3_V = mkV "off" ; --*
lin take_off_4_N = mkN "paródia" ; --*
lin take_off_7_V2 = mkV2 (mkV "off") ; --*
lin take_off_7_V = mkV "off" ; --*
lin take_off_9_V2 = variants {mkV2 (mkV "deduzir") ; mkV2 (mkV "off") ; mkV2 (mkV "subtrair") ; } ; --*
lin take_off_V3 = mkV3 (mkV "off") ; --*
lin take_on_1_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; } ; --*
lin take_on_2_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; } ; --*
lin take_on_3_V2 = variants {mkV2 (mkV "encarar") ; mkV2 (mkV "on") ; } ; --*
lin take_out_10_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin take_out_11_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; mkV2 (mkV "up") ; } ; --*
lin take_out_13_V2 = variants {mkV2 (mkV "extrair") ; mkV2 (mkV "out") ; mkV2 (mkV "selecionar") ; } ; --*
lin take_out_13_V = variants {mkV "extrair" ; mkV "out" ; mkV "selecionar" ; } ; --*
lin take_out_14_V2 = variants {mkV2 (mkV "excetuar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "off") ; mkV2 (mkV "omitir") ; mkV2 (mkV "out") ; } ; --*
lin take_out_14_V = variants {mkV "excetuar" ; mkV "excluir" ; mkV "off" ; mkV "omitir" ; mkV "out" ; } ; --*
lin take_out_2_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "sacar") ; } ; --*
lin take_out_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "out") ; } ; --*
lin take_out_4_V2 = mkV2 (mkV "out") ; --*
lin take_out_6_V2 = mkV2 (mkV "out") ; --*
lin take_out_6_V = mkV "out" ; --*
lin take_out_8_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin take_out_9_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin takeover_1_N = variants {mkN "d'etat" ; mkN "golpe" ; mkN "transferência" ; } ; --*
lin take_over_1_V2 = variants {mkV2 (mkV "esbulhar") ; mkV2 (mkV "over") ; mkV2 (mkV "usurpar") ; } ; --*
lin takeover_2_N = mkN "Oferta" ; --*
lin take_over_2_V2 = variants {mkV2 (mkV "assumir") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; } ; --*
lin take_over_3_V2 = variants {mkV2 (mkV "eximir") ; mkV2 (mkV "over") ; } ; --*
lin take_over_3_V = variants {mkV "eximir" ; mkV "over" ; } ; --*
lin take_over_5_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin take_over_5_V = variants {mkV "out" ; mkV "over" ; mkV "up" ; } ; --*
lin take_over_6_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "reiterar") ; } ; --*
lin take_over_7_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin take_over_7_V = variants {mkV "adoptar" ; mkV "over" ; mkV "up" ; } ; --*
lin take_to_1_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "querer") ; mkV2 (mkV "to") ; } ; --*
lin take_up_11_V2 = variants {mkV2 (mkV "absorver") ; mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin take_up_12_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "up") ; } ; --*
lin take_up_12_V = variants {mkV "in" ; mkV "up" ; } ; --*
lin take_up_13_V = variants {mkV "reassumir" ; mkV "recomeçar" ; mkV "up" ; } ; --*
lin take_up_22_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "up") ; } ; --*
lin take_up_2_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin take_up_5_V2 = variants {mkV2 (mkV "começar") ; mkV2 (mkV "up") ; } ; --*
lin take_up_6_V2 = variants {mkV2 (mkV "adoptar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin take_up_6_V = variants {mkV "adoptar" ; mkV "over" ; mkV "up" ; } ; --*
lin take_V2V = mkV2V (mkV "off") ; --*
lin talc_N = mkN "talco" ; --*
lin talcum_1_N = mkN "talco" ; --*
lin tale_1_N = variants {mkN "história" ; mkN "Modo" ; mkN "Narração" ; mkN "narrativa" ; } ; --*
lin tale_2_N = variants {mkN "conto" ; mkN "história" ; mkN "mentira" ; mkN "mentirinha" ; } ; --*
lin tale_bearer_N = variants {mkN "palrador" ; mkN "paroleiro" ; mkN "tagarela" ; } ; --*
lin talent_1_N = variants {mkN "dom" ; mkN "endowment" ; mkN "presente" ; mkN "talento" ; } ; --*
lin talent_2_N = variants {mkN "superdotado" ; mkN "talento" ; } ; --*
lin talented_A = variants {mkA "dotado" ; mkA "talentoso" ; } ; --*
lin tale_teller_N = variants {mkN "palrador" ; mkN "paroleiro" ; mkN "tagarela" ; } ; --*
lin talisman_N = variants {mkN "amuleto" ; mkN "figa" ; mkN "patuá" ; mkN "talismã" ; } ; --*
lin talk_1_N = mkN "conversa" ; --*
lin talk_1_V2 = mkV2 (mkV "falar") ; --*
lin talk_1_V = mkV "falar" ; --*
lin talk_2_N = mkN "papo" ; --*
lin talk_2_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "verbalizar") ; } ; --*
lin talk_3_V = variants {mkV "dizer" ; mkV "falar" ; } ; --*
lin talk_4_N = variants {mkN "lecture" ; mkN "palestra" ; mkN "preleção" ; } ; --*
lin talk_4_V = variants {mkV "dedurar" ; mkV "falar" ; } ; --*
lin talk_5_N = variants {mkN "fofoca" ; mkN "of" ; } ; --*
lin talk_5_V = variants {mkV "falar" ; mkV "out" ; mkV "the" ; } ; --*
lin talk_6_V = variants {mkV "falar" ; mkV "palestrar" ; } ; --*
lin talkative_1_A = variants {mkA "conversador" ; mkA "loquaz" ; mkA "tagarela" ; } ; --*
lin talkative_3_A = variants {mkA "comunicativo" ; mkA "falador" ; } ; --*
lin talker_N = variants {mkN "alto-falante" ; mkN "falante" ; mkN "locutor" ; mkN "palestrante" ; } ; --*
lin talking_N = mkN "conversa" ; --*
lin talking_to_N = variants {mkN "bronca" ; mkN "to" ; } ; --*
lin talk_out_of_V3 = mkV3 (mkV "out") ; --*
lin talk_over_V2 = variants {mkV2 (mkV "discutir") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; } ; --*
lin tall_1_A = mkA "alto" ; --*
lin tall_3_A = mkA "improvável" ; --*
lin tallness_1_N = variants {mkN "altitude" ; mkN "altura" ; } ; --*
lin tallow_N = mkN "sebo" ; --*
lin tally_1_N = mkN "corrida" ; --*
lin tally_1_V2 = variants {mkV2 (mkV "combinar") ; mkV2 (mkV "concordar") ; mkV2 (mkV "corresponder") ; } ; --*
lin tally_1_V = variants {mkV "combinar" ; mkV "concordar" ; mkV "corresponder" ; } ; --*
lin tally_2_N = mkN "cálculo" ; --*
lin tally_3_N = variants {mkN "conta" ; mkN "contagem" ; mkN "enumeração" ; } ; --*
lin tally_4_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin talmud_N = variants {mkN "Talmud" ; mkN "Talmude" ; } ; --*
lin talus_1_N = mkN "declives" ; --*
lin talus_2_N = variants {mkN "astrágalo" ; mkN "tálus" ; mkN "Tálus" ; } ; --*
lin tamale_1_N = mkN "Tamale" ; --*
lin tamale_2_N = mkN "Tamal" ; --*
lin tamandua_1_N = variants {mkN "anteater" ; mkN "Tamanduá" ; mkN "Tamanduá-mirim" ; mkN "tetradactyla" ; } ; --*
lin tamarind_1_N = variants {mkN "indica" ; mkN "Tamarindus" ; mkN "tree" ; } ; --*
lin tamarisk_N = variants {mkN "tamarga" ; mkN "tamargueira" ; mkN "tamarisco" ; mkN "tamariz" ; mkN "tramaga" ; mkN "tramagueira" ; } ; --*
lin tambourine_N = variants {mkN "pandeireta" ; mkN "pandeiro" ; mkN "tamborim" ; } ; --*
lin tame_2_V2 = variants {mkV2 (mkV "amansar") ; mkV2 (mkV "down") ; mkV2 (mkV "moderar") ; mkV2 (mkV "suavizar") ; } ; --*
lin tame_3_A = mkA "manso" ; --*
lin tame_3_V2 = variants {mkV2 (mkV "cultivar") ; mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin tame_4_V2 = variants {mkV2 (mkV "domar") ; mkV2 (mkV "domesticar") ; } ; --*
lin tame_5_V2 = mkV2 (mkV "domesticar") ; --*
lin tameness_1_N = mkN "insipidez" ; --*
lin tameness_2_N = mkN "domesticação" ; --*
lin tamer_N = mkN "domador" ; --*
lin tamil_1_N = mkN "tâmil" ; --*
lin tamil_2_N = variants {mkN "Língua" ; mkN "tâmil" ; mkN "tâmul" ; } ; --*
lin tammany_N = variants {mkN "Hall" ; mkN "Society" ; mkN "Tammany" ; } ; --*
lin tampere_PN = mkPN "Tampere" ; --*
lin tampon_N = mkN "tampão" ; --*
lin tamp_V2 = variants {mkV2 (mkV "compactar") ; mkV2 (mkV "down") ; } ; --*
lin tan_1_N = variants {mkN "bronzeado" ; mkN "queimadura" ; } ; --*
lin tan_1_V2 = mkV2 (mkV "curtir") ; --*
lin tan_1_V = mkV "curtir" ; --*
lin tan_2_V2 = mkV2 (mkV "bronzear") ; --*
lin tan_2_V = mkV "bronzear" ; --*
lin tan_3_N = mkN "tangente" ; --*
lin tandem_1_N = variants {mkN "fila" ; mkN "tandem" ; } ; --*
lin tandem_2_N = variants {mkN "Bicicleta" ; mkN "bicycle" ; mkN "tandem" ; } ; --*
lin tang_2_N = variants {mkN "Dinastia" ; mkN "dynasty" ; } ; --*
lin tang_3_N = variants {mkN "gosto" ; mkN "sabor" ; mkN "Sabor" ; } ; --*
lin tang_4_N = variants {mkN "fucus" ; mkN "Fucus" ; mkN "rockweed" ; mkN "vesiculosus" ; } ; --*
lin tangelo_2_N = variants {mkN "fruit" ; mkN "tangelo" ; } ; --*
lin tangency_2_N = mkN "tangência" ; --*
lin tangent_1_N = mkN "tangente" ; --*
lin tangent_2_N = mkN "tangente" ; --*
lin tangential_1_A = mkA "tangencial" ; --*
lin tangerine_1_N = variants {mkN "tangerina" ; mkN "tree" ; } ; --*
lin tangerine_2_N = mkN "tangerina" ; --*
lin tangible_1_A = variants {mkA "físico" ; mkA "tangível" ; } ; --*
lin tangible_2_A = mkA "tangível" ; --*
lin tangible_3_A = mkA "físico" ; --*
lin tangible_4_A = variants {mkA "físico" ; mkA "palpável" ; mkA "tangível" ; } ; --*
lin tangle_1_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "ser") ; mkV2 (mkV "up") ; } ; --*
lin tangle_3_V2 = variants {mkV2 (mkV "arrepiar") ; mkV2 (mkV "desgrenhar") ; mkV2 (mkV "despentear") ; mkV2 (mkV "emaranhar") ; mkV2 (mkV "eriçar") ; mkV2 (mkV "retorcer") ; } ; --*
lin tangle_4_V2 = variants {mkV2 (mkV "emaranhar") ; mkV2 (mkV "misturar") ; } ; --*
lin tango_1_N = mkN "tango" ; --*
lin tango_2_N = variants {mkN "tango" ; mkN "Tango" ; } ; --*
lin tangram_N = mkN "tangram" ; --*
lin tangshan_PN = mkPN "Tangshan" ; --*
lin tank_1_N = variants {mkN "combat" ; mkN "tank" ; mkN "tanque" ; } ; --*
lin tank_2_N = variants {mkN "tank" ; mkN "tanque" ; } ; --*
lin tanker_1_N = variants {mkN "petroleiro" ; mkN "petroleiros" ; mkN "ship" ; mkN "tanker" ; } ; --*
lin tanning_2_N = mkN "flagelação" ; --*
lin tanning_3_N = mkN "curtume" ; --*
lin tannin_N = variants {mkN "acid" ; mkN "tanino" ; } ; --*
lin tantalite_N = mkN "tantalita" ; --*
lin tantalize_1_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin tantalizing_2_A = mkA "tentador" ; --*
lin tantalum_N = variants {mkN "number" ; mkN "Tantálio" ; mkN "Tantalo" ; mkN "tántalo" ; mkN "tântalo" ; } ; --*
lin tantamount_A = mkA "equivalente" ; --*
lin tantra_2_N = variants {mkN "tantra" ; mkN "Tantra" ; } ; --*
lin tantrum_N = variants {mkN "birra" ; mkN "cena" ; mkN "chilique" ; mkN "piti" ; } ; --*
lin tanzanian_A = mkA "tanzaniano" ; --*
lin tanzania_PN = variants {mkPN "Republic" ; mkPN "Tanzania" ; } ; --*
lin tap_12_V2 = variants {mkV2 (mkV "pedir") ; mkV2 (mkV "rogar") ; mkV2 (mkV "suplicar") ; } ; --*
lin tap_1_V2 = mkV2 (mkV "bater") ; --*
lin tap_1_V = mkV "bater" ; --*
lin tap_2_N = mkN "batidinha" ; --*
lin tap_3_N = variants {mkN "faucet" ; mkN "tap" ; mkN "torneira" ; } ; --*
lin tap_3_V2 = mkV2 (mkV "bater") ; --*
lin tap_4_V2 = mkV2 (mkV "explorar") ; --*
lin tap_5_N = mkN "torno" ; --*
lin tap_5_V2 = mkV2 (mkV "interceptar") ; --*
lin tap_6_N = mkN "torneira" ; --*
lin tap_7_N = variants {mkN "escuta" ; mkN "grampo" ; } ; --*
lin tap_8_N = mkN "baterdeleve" ; --*
lin tap_9_V2 = mkV2 (mkV "sapatear") ; --*
lin tap_9_V = mkV "sapatear" ; --*
lin tap_dancing_N = variants {mkN "dance" ; mkN "dancing" ; } ; --*
lin tape_1_N = variants {mkN "coirela" ; mkN "fita" ; mkN "listrão" ; } ; --*
lin tape_2_N = variants {mkN "fita" ; mkN "recording" ; } ; --*
lin tape_2_V2 = mkV2 (mkV "gravar") ; --*
lin tape_2_V = mkV "gravar" ; --*
lin tape_3_V2 = mkV2 (mkV "gravar") ; --*
lin tape_4_N = variants {mkN "fita" ; mkN "measure" ; mkN "metro" ; } ; --*
lin tape_5_N = variants {mkN "fita" ; mkN "tape" ; } ; --*
lin tape_measure_N = variants {mkN "fita" ; mkN "measure" ; mkN "metro" ; } ; --*
lin taper_3_N = mkN "mecha" ; --*
lin taper_4_N = variants {mkN "light" ; mkN "vela" ; mkN "Vela" ; } ; --*
lin tape_recorder_N = variants {mkN "machine" ; mkN "recorder" ; } ; --*
lin taper_off_3_V = mkV "diminuir" ; --*
lin taper_V2 = variants {mkV2 (mkV "afiar") ; mkV2 (mkV "apontar") ; } ; --*
lin tapestried_A = mkA "estofado" ; --*
lin tapestry_1_N = mkN "forro" ; --*
lin tapestry_3_N = mkN "tapeçaria" ; --*
lin tapioca_N = mkN "tapioca" ; --*
lin tapir_N = mkN "anta" ; --*
lin tapping_N = mkN "tapping" ; --*
lin taproom_N = mkN "bar" ; --*
lin tar_1_N = variants {mkN "alcatrão" ; mkN "piche" ; } ; --*
lin tar_2_N = variants {mkN "dog" ; mkN "Jack" ; mkN "Jacó" ; mkN "João" ; mkN "marinheiro" ; mkN "navegante" ; mkN "salt" ; } ; --*
lin taradiddle_1_N = variants {mkN "conto" ; mkN "história" ; mkN "mentira" ; mkN "mentirinha" ; } ; --*
lin taradiddle_2_N = mkN "mexerico" ; --*
lin tarantella_1_N = mkN "tarantella" ; --*
lin tarantella_2_N = mkN "tarantela" ; --*
lin tarantelle_N = mkN "tarantela" ; --*
lin tarantula_1_N = variants {mkN "tarântula" ; mkN "tarentula" ; mkN "wolf" ; } ; --*
lin tarantula_2_N = mkN "tarântula" ; --*
lin tarboosh_N = variants {mkN "fez" ; mkN "tarbush" ; } ; --*
lin tardigrade_N = mkN "Tardigrada" ; --*
lin tardy_A = variants {mkA "tarde" ; mkA "tardio" ; } ; --*
lin tare_3_N = variants {mkN "darnel" ; mkN "joio" ; mkN "temulentum" ; } ; --*
lin tare_5_N = mkN "tara" ; --*
lin target_1_N = mkN "alvo" ; --*
lin target_1_V2 = variants {mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "dirigir") ; } ; --*
lin target_2_N = variants {mkN "game" ; mkN "presa" ; } ; --*
lin target_5_N = variants {mkN "fim" ; mkN "ideia" ; mkN "intenção" ; mkN "objetivo" ; mkN "ponto" ; } ; --*
lin target_V2V = variants {mkV2V (mkV "apontar") ; mkV2V (mkV "direcionar") ; mkV2V (mkV "dirigir") ; } ; --*
lin tariff_N = mkN "tarifas" ; --*
lin tarmac_1_N = mkN "asfalto" ; --*
lin tarmac_2_N = variants {mkN "asfalto" ; mkN "macadame" ; } ; --*
lin tar_macadam_1_N = mkN "asfalto" ; --*
lin tar_macadam_2_N = variants {mkN "asfalto" ; mkN "macadame" ; } ; --*
lin tarnish_V2 = variants {mkV2 (mkV "macular") ; mkV2 (mkV "manchar") ; } ; --*
lin taro_3_N = variants {mkN "root" ; mkN "taro" ; } ; --*
lin tarpaulin_N = mkN "Lona" ; --*
lin tarradiddle_1_N = variants {mkN "conto" ; mkN "história" ; mkN "mentira" ; mkN "mentirinha" ; } ; --*
lin tarradiddle_2_N = mkN "mexerico" ; --*
lin tarragon_1_N = variants {mkN "dracunculus" ; mkN "estragão" ; } ; --*
lin tarry_1_V = variants {mkV "about" ; mkV "around" ; mkV "ficar" ; mkV "permanecer" ; } ; --*
lin tarry_2_V = variants {mkV "demorar" ; mkV "tardar" ; } ; --*
lin tarsus_N = mkN "tarso" ; --*
lin tart_1_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin tartan_N = mkN "tartan" ; --*
lin tartar_1_N = variants {mkN "bitartrate" ; mkN "hydrogen" ; mkN "of" ; mkN "sarro" ; } ; --*
lin tartar_2_N = mkN "dragão" ; --*
lin tartar_3_N = variants {mkN "Tartária" ; mkN "Tártaros" ; mkN "Tatar" ; } ; --*
lin tartar_4_N = mkN "tártaro" ; --*
lin tartaric_A = mkA "tartárico" ; --*
lin tartness_3_N = variants {mkN "acrimónia" ; mkN "acrimônia" ; mkN "acuidade" ; mkN "agrura" ; mkN "agudeza" ; } ; --*
lin tar_V2 = variants {mkV2 (mkV "alcatroar") ; mkV2 (mkV "asfaltar") ; mkV2 (mkV "cobrir") ; mkV2 (mkV "pichar") ; } ; --*
lin tashkent_PN = variants {mkPN "of" ; mkPN "Tashkent" ; } ; --*
lin task_1_N = variants {mkN "projeto" ; mkN "tarefa" ; } ; --*
lin task_2_N = variants {mkN "incumbência" ; mkN "serviço" ; } ; --*
lin task_force_2_N = mkN "force" ; --*
lin taskmaster_N = variants {mkN "feitor" ; mkN "intendente" ; mkN "zelador" ; } ; --*
lin tasmania_1_PN = variants {mkPN "Tasmania" ; mkPN "Tasmânia" ; } ; --*
lin tasmania_2_PN = mkPN "Tasmânia" ; --*
lin taste_1_N = variants {mkN "gosto" ; mkN "perception" ; mkN "sensation" ; } ; --*
lin taste_2_N = variants {mkN "predileção" ; mkN "preferência" ; mkN "tendência" ; } ; --*
lin taste_2_V2 = mkV2 (mkV "saborear") ; --*
lin taste_3_N = mkN "sabor" ; --*
lin taste_3_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "provar") ; mkV2 (mkV "sentir") ; } ; --*
lin taste_5_N = mkN "bocado" ; --*
lin taste_6_N = variants {mkN "gosto" ; mkN "modality" ; mkN "of" ; } ; --*
lin taste_6_V2 = mkV2 (mkV "experimentar") ; --*
lin taste_7_N = mkN "paladar" ; --*
lin tastebud_1_N = variants {mkN "bud" ; mkN "organ" ; mkN "Papila" ; } ; --*
lin tasteless_1_A = mkA "insípido" ; --*
lin tasteless_2_A = mkA "insípido" ; --*
lin tasting_2_N = mkN "paladar" ; --*
lin tasting_3_N = mkN "degustação" ; --*
lin tasty_A = mkA "saboroso" ; --*
lin tattered_2_A = mkA "esfarrapado" ; --*
lin tatter_N = variants {mkN "end" ; mkN "farrapo" ; mkN "rasgo" ; mkN "trapo" ; } ; --*
lin tattle_1_V2 = mkV2 (mkV "tagarelar") ; --*
lin tattle_1_V = mkV "tagarelar" ; --*
lin tattle_2_V = variants {mkV "falar" ; mkV "out" ; mkV "the" ; } ; --*
lin tattler_1_N = variants {mkN "palrador" ; mkN "paroleiro" ; mkN "tagarela" ; } ; --*
lin tattletale_N = variants {mkN "palrador" ; mkN "paroleiro" ; mkN "tagarela" ; } ; --*
lin tattoo_2_N = variants {mkN "tatuagem" ; mkN "Tatuagem" ; } ; --*
lin tattoo_3_N = mkN "tatuagem" ; --*
lin tattoo_V2 = mkV2 (mkV "tatuar") ; --*
lin tatty_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin tau_N = mkN "tau" ; --*
lin taunt_N = mkN "zombaria" ; --*
lin taunt_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin tauon_N = variants {mkN "particle" ; mkN "tau" ; } ; --*
lin taurine_N = mkN "taurina" ; --*
lin taurus_1_PN = variants {mkPN "Assat" ; mkPN "Carlos" ; mkPN "Gebhard" ; mkPN "Hevodidbon" ; mkPN "Martinez" ; mkPN "Ramirez" ; mkPN "Sanchez" ; mkPN "the" ; } ; --*
lin taurus_3_PN = variants {mkPN "Taurus" ; mkPN "touro" ; } ; --*
lin taurus_4_PN = variants {mkPN "Taurus" ; mkPN "the" ; mkPN "Touro" ; } ; --*
lin taut_1_A = mkA "tenso" ; --*
lin taut_2_A = mkA "tenso" ; --*
lin tautness_1_N = mkN "tensão" ; --*
lin tautological_1_A = variants {mkA "desnecessário" ; mkA "excessivo" ; mkA "pleonástico" ; mkA "redundante" ; mkA "supérfluo" ; mkA "tautológico" ; } ; --*
lin tautology_1_N = mkN "tautologia" ; --*
lin tautology_2_N = variants {mkN "tautologia" ; mkN "Tautologia" ; } ; --*
lin tavern_N = variants {mkN "boteco" ; mkN "house" ; mkN "taverna" ; } ; --*
lin tawdry_1_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin tawdry_2_A = mkA "espalhafatoso" ; --*
lin tax_1_V2 = mkV2 (mkV "taxar") ; --*
lin tax_2_V2 = mkV2 (mkV "avaliar") ; --*
lin tax_4_V2 = variants {mkV2 (mkV "taxar") ; mkV2 (mkV "tributar") ; } ; --*
lin taxation_1_N = variants {mkN "enhancement" ; mkN "imposto" ; mkN "impostos" ; mkN "taxa" ; mkN "tributo" ; } ; --*
lin taxation_2_N = variants {mkN "income" ; mkN "pagamento" ; mkN "revenue" ; } ; --*
lin tax_collector_N = variants {mkN "collector" ; mkN "fiscal" ; mkN "of" ; mkN "revenue" ; } ; --*
lin taxer_N = mkN "arrecadador" ; --*
lin taxicab_N = variants {mkN "Taxi" ; mkN "táxi" ; } ; --*
lin taxidermy_N = variants {mkN "taxidermia" ; mkN "Taxidermia" ; } ; --*
lin taxidriver_N = variants {mkN "driver" ; mkN "motorista" ; mkN "taxista" ; } ; --*
lin taximeter_N = mkN "taxímetro" ; --*
lin taxi_N = variants {mkN "Taxi" ; mkN "táxi" ; } ; --*
lin taxis_1_N = mkN "taxia" ; --*
lin taxiway_N = variants {mkN "strip" ; mkN "taxiway" ; } ; --*
lin tax_N = variants {mkN "enhancement" ; mkN "imposto" ; mkN "impostos" ; mkN "taxa" ; mkN "tributo" ; } ; --*
lin taxonomic_1_A = variants {mkA "sistemático" ; mkA "taxonômico" ; } ; --*
lin taxonomy_1_N = variants {mkN "taxinomia" ; mkN "taxionomia" ; mkN "taxonomia" ; } ; --*
lin taxonomy_2_N = mkN "taxonomia" ; --*
lin taxonomy_3_N = mkN "taxonomia" ; --*
lin taxpayer_N = mkN "contribuinte" ; --*
lin tayra_1_N = variants {mkN "barbara" ; mkN "irara" ; } ; --*
lin tb_1_N = variants {mkN "number" ; mkN "Terbio" ; mkN "térbio" ; } ; --*
lin tb_2_N = mkN "tuberculose" ; --*
lin tb_4_N = variants {mkN "terabyte" ; mkN "Terabyte" ; } ; --*
lin tb_5_N = mkN "tebibyte" ; --*
lin tbilisi_PN = variants {mkPN "of" ; mkPN "Tbilisi" ; mkPN "Tíflis" ; } ; --*
lin tea_1_N = mkN "chá" ; --*
lin tea_2_N = variants {mkN "merenda" ; mkN "tea" ; } ; --*
lin tea_3_N = variants {mkN "Camellia" ; mkN "sinensis" ; } ; --*
lin tea_5_N = variants {mkN "chá" ; mkN "leaf" ; } ; --*
lin tea_break_N = mkN "break" ; --*
lin teach_1_V2 = variants {mkV2 (mkV "ensinar") ; mkV2 (mkV "instruir") ; mkV2 (mkV "lecionar") ; } ; --*
lin teach_2_V2 = variants {mkV2 (mkV "ensinar") ; mkV2 (mkV "instruir") ; } ; --*
lin teachable_A = mkA "dócil" ; --*
lin teacherFem_1_N = variants {mkN "docente" ; mkN "instrutor" ; mkN "mestre" ; mkN "professor" ; } ; --*
lin teacherFem_2_N = mkN "professor" ; --*
lin teacherMasc_1_N = variants {mkN "docente" ; mkN "instrutor" ; mkN "mestre" ; mkN "professor" ; } ; --*
lin teacherMasc_2_N = mkN "professor" ; --*
lin teachership_N = mkN "magistério" ; --*
lin teaching_1_N = variants {mkN "educação" ; mkN "ensino" ; mkN "pedagogia" ; } ; --*
lin teaching_2_N = mkN "preceito" ; --*
lin teaching_3_N = variants {mkN "activity" ; mkN "didáctica" ; mkN "educação" ; mkN "Educação" ; mkN "ensino" ; mkN "formação" ; mkN "instrução" ; } ; --*
lin tea_cosy_N = variants {mkN "abafador" ; mkN "cosy" ; mkN "cozy" ; } ; --*
lin teak_2_N = variants {mkN "grandis" ; mkN "Tectona" ; } ; --*
lin tea_kettle_N = mkN "chaleira" ; --*
lin teal_1_N = variants {mkN "azul-petróleo" ; mkN "green" ; } ; --*
lin teal_2_N = variants {mkN "patinho" ; mkN "verde-azulado" ; } ; --*
lin tea_leaf_N = variants {mkN "chá" ; mkN "leaf" ; } ; --*
lin team_1_N = variants {mkN "companhia" ; mkN "equipa" ; mkN "equipe" ; mkN "time" ; } ; --*
lin team_2_N = mkN "equipe" ; --*
lin teammate_N = mkN "colega" ; --*
lin teamster_1_N = mkN "caminhoneiro" ; --*
lin teamster_2_N = variants {mkN "caminhoneiro" ; mkN "Camionista" ; mkN "driver" ; } ; --*
lin teamwork_N = mkN "trabalho" ; --*
lin teapot_N = mkN "bule" ; --*
lin tear_1_N = mkN "lágrima" ; --*
lin tear_1_V2 = variants {mkV2 (mkV "cindir") ; mkV2 (mkV "dividir") ; mkV2 (mkV "rasgar") ; } ; --*
lin tear_2_N = variants {mkN "buraco" ; mkN "fenda" ; mkN "rasgão" ; mkN "rasgo" ; } ; --*
lin tear_3_N = mkN "compulsão" ; --*
lin tear_4_N = mkN "rasgão" ; --*
lin tear_4_V2 = mkV2 (mkV "depenar") ; --*
lin tear_5_V = mkV "lacrimejar" ; --*
lin tear_apart_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "destruir") ; } ; --*
lin tearaway_A = mkA "tumultuante" ; --*
lin tear_down_V2 = variants {mkV2 (mkV "arrasar") ; mkV2 (mkV "demolir") ; mkV2 (mkV "down") ; } ; --*
lin tear_drop_1_N = mkN "lágrima" ; --*
lin tear_drop_2_N = mkN "lágrima" ; --*
lin tear_gas_1_N = variants {mkN "gas" ; mkN "gás" ; } ; --*
lin tearing_N = mkN "lacrimejamento" ; --*
lin tear_off_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; } ; --*
lin tear_out_V = variants {mkV "extrair" ; mkV "out" ; mkV "tirar" ; mkV "up" ; } ; --*
lin tear_up_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "up") ; } ; --*
lin tear_up_V = variants {mkV "desfiar" ; mkV "up" ; } ; --*
lin tease_1_V2 = variants {mkV2 (mkV "amolar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "incomodar") ; } ; --*
lin tease_2_N = mkN "interesseira" ; --*
lin tease_2_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin tease_3_V2 = variants {mkV2 (mkV "instigar") ; mkV2 (mkV "provocar") ; } ; --*
lin tease_4_V2 = mkV2 (mkV "rasgar") ; --*
lin tease_6_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "separar") ; } ; --*
lin tease_8_V2 = mkV2 (mkV "sacanear") ; --*
lin teasel_1_N = mkN "carda" ; --*
lin teaser_4_N = variants {mkN "adivinha" ; mkN "charada" ; mkN "enigma" ; } ; --*
lin teaser_5_N = mkN "teaser" ; --*
lin teasing_1_A = variants {mkA "irónico" ; mkA "irônico" ; mkA "sarcástico" ; } ; --*
lin teasing_3_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin teaspoon_1_N = mkN "colher" ; --*
lin teaspoon_2_N = mkN "colher" ; --*
lin teaspoonful_N = mkN "colher" ; --*
lin tea_strainer_N = mkN "coador" ; --*
lin tea_time_N = variants {mkN "merenda" ; mkN "tea" ; } ; --*
lin teat_N = variants {mkN "bico" ; mkN "chupadouro" ; mkN "chupeta" ; mkN "mama" ; mkN "mamilo" ; mkN "teta" ; } ; --*
lin teazel_N = mkN "carda" ; --*
lin technetium_N = variants {mkN "number" ; mkN "Tecnecio" ; mkN "tecnécio" ; } ; --*
lin technical_1_A = mkA "técnico" ; --*
lin technical_2_A = mkA "técnico" ; --*
lin technical_3_A = variants {mkA "técnico" ; mkA "tecnológico" ; } ; --*
lin technical_4_A = variants {mkA "mecânico" ; mkA "skillful" ; } ; --*
lin technical_6_A = mkA "versado" ; --*
lin technicality_2_N = mkN "minúncia" ; --*
lin technician_1_N = mkN "técnico" ; --*
lin technician_2_N = mkN "técnico" ; --*
lin technique_1_N = variants {mkN "métodos" ; mkN "técnica" ; } ; --*
lin technique_2_N = variants {mkN "habilidade" ; mkN "técnica" ; } ; --*
lin technocracy_N = mkN "tecnocracia" ; --*
lin technocrat_2_N = mkN "tecnocrata" ; --*
lin technological_1_A = mkA "tecnológico" ; --*
lin technological_2_A = variants {mkA "técnico" ; mkA "tecnológico" ; } ; --*
lin technologist_N = variants {mkN "engenheiro" ; mkN "scientist" ; } ; --*
lin technology_1_N = variants {mkN "engenharia" ; mkN "tecnologia" ; } ; --*
lin technology_2_N = variants {mkN "ciências" ; mkN "engenharia" ; mkN "science" ; mkN "tecnologia" ; } ; --*
lin techno_N = variants {mkN "techno" ; mkN "Techno" ; } ; --*
lin technophilia_N = mkN "Tecnofilia" ; --*
lin technophobia_N = mkN "Tecnofobia" ; --*
lin techy_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin tec_N = variants {mkN "detective" ; mkN "detetive" ; } ; --*
lin tectonic_2_A = mkA "arquitetônico" ; --*
lin tectonics_2_N = variants {mkN "tectonic" ; mkN "tectónica" ; mkN "Tectónica" ; mkN "tectonics" ; } ; --*
lin teddy_1_N = variants {mkN "bear" ; mkN "ursídeos" ; } ; --*
lin teddy_1_PN = variants {mkPN "bear" ; mkPN "ursídeos" ; } ; --*
lin teddy_boy_N = variants {mkN "boy" ; mkN "Teddy" ; } ; --*
lin te_deum_N = mkN "Deum" ; --*
lin tedious_1_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin tediousness_N = mkN "tédio" ; --*
lin tedium_1_N = variants {mkN "aborrecimento" ; mkN "apatia" ; mkN "enfado" ; mkN "fastio" ; mkN "tedio" ; mkN "tédio" ; } ; --*
lin tedium_2_N = mkN "tédio" ; --*
lin ted_N = variants {mkN "boy" ; mkN "Teddy" ; } ; --*
lin ted_PN = variants {mkPN "boy" ; mkPN "Teddy" ; } ; --*
lin tee_1_N = variants {mkN "ground" ; mkN "tê" ; } ; --*
lin teem_1_V = variants {mkV "enxamear" ; mkV "formigar" ; mkV "pulular" ; } ; --*
lin teenager_N = variants {mkN "adolescente" ; mkN "moça" ; mkN "moço" ; mkN "rapariga" ; mkN "rapaz" ; } ; --*
lin teens_1_N = mkN "teens" ; --*
lin tee_shirt_N = variants {mkN "camisa" ; mkN "Jersey" ; mkN "shirt" ; mkN "t-shirt" ; } ; --*
lin teetotaling_N = mkN "abstemia" ; --*
lin teetotum_N = variants {mkN "pião" ; mkN "top" ; } ; --*
lin tegument_N = variants {mkN "pele" ; mkN "Pele" ; } ; --*
lin teheran_PN = variants {mkPN "capital" ; mkPN "of" ; mkPN "Teerã" ; mkPN "Teerão" ; } ; --*
lin telecast_V2 = mkV2 (mkV "televisionar") ; --*
lin telecommunication_1_N = variants {mkN "telecomunicação" ; mkN "telecomunicações" ; } ; --*
lin telecommuting_N = mkN "teletrabalho" ; --*
lin telecom_N = variants {mkN "telecomunicação" ; mkN "telecomunicações" ; } ; --*
lin teleconference_N = mkN "teleconferência" ; --*
lin telegram_N = mkN "telegrama" ; --*
lin telegraph_N = mkN "telégrafo" ; --*
lin telegraph_V2 = mkV2 (mkV "telegrafar") ; --*
lin telegraph_V = mkV "telegrafar" ; --*
lin telegraphy_1_N = mkN "telegrafia" ; --*
lin telegraphy_2_N = mkN "telégrafo" ; --*
lin telekinesis_N = variants {mkN "telecinêse" ; mkN "Telecinesia" ; mkN "telecinésia" ; } ; --*
lin telemarketing_N = variants {mkN "telemarketing" ; mkN "Telemarketing" ; mkN "Tele-marketing" ; } ; --*
lin telemetry_N = mkN "telemetria" ; --*
lin teleology_N = mkN "teleologia" ; --*
lin telepathist_2_N = variants {mkN "leitor" ; mkN "reader" ; } ; --*
lin telepathy_N = variants {mkN "telepatia" ; mkN "transference" ; } ; --*
lin telephone_1_N = variants {mkN "set" ; mkN "telefone" ; } ; --*
lin telephone_2_N = mkN "telefonia" ; --*
lin telephone_V2 = variants {mkV2 (mkV "chamar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "telefonar") ; mkV2 (mkV "up") ; } ; --*
lin telephone_V = variants {mkV "chamar" ; mkV "ligar" ; mkV "telefonar" ; mkV "up" ; } ; --*
lin telephonic_A = variants {mkA "telefónico" ; mkA "telefônico" ; } ; --*
lin telephony_N = mkN "telefonia" ; --*
lin teleportation_N = mkN "teletransporte" ; --*
lin telescope_N = variants {mkN "telescópio" ; mkN "Telescópio" ; mkN "Telescópios" ; } ; --*
lin televise_V2 = mkV2 (mkV "televisionar") ; --*
lin television_1_N = variants {mkN "televisão" ; mkN "tevê" ; mkN "tv" ; } ; --*
lin television_2_N = variants {mkN "sistema" ; mkN "system" ; mkN "televisão" ; } ; --*
lin television_3_N = variants {mkN "box" ; mkN "receiver" ; mkN "set" ; mkN "televisão" ; mkN "tevê" ; mkN "tube" ; mkN "tv" ; } ; --*
lin tell_1_V3 = variants {mkV3 (mkV "contar") ; mkV3 (mkV "dizer") ; mkV3 (mkV "falar") ; } ; --*
lin tell_2_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "informar") ; } ; --*
lin tell_3_V2 = variants {mkV2 (mkV "contar") ; mkV2 (mkV "narrar") ; mkV2 (mkV "recontar") ; } ; --*
lin tell_4_V2V = variants {mkV2V (mkV "impetrar") ; mkV2V (mkV "intimar") ; mkV2V (mkV "mandar") ; mkV2V (mkV "ordenar") ; } ; --*
lin tell_5_VS = mkVS (mkV "dizer") ; --*
lin tell_6_V2 = mkV2 (mkV "afirmar") ; --*
lin tell_8_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; mkV2 (mkV "separar") ; } ; --*
lin tell_apart_1_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "discernir") ; mkV2 (mkV "out") ; } ; --*
lin tell_apart_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "diferenciar") ; mkV2 (mkV "distinguir") ; mkV2 (mkV "separar") ; } ; --*
lin teller_1_N = variants {mkN "Edward" ; mkN "Teller" ; } ; --*
lin teller_3_N = variants {mkN "caixa" ; mkN "clerk" ; mkN "multibanco" ; } ; --*
lin teller_4_N = mkN "narrador" ; --*
lin telling_2_A = mkA "coerente" ; --*
lin telling_2_N = variants {mkN "anúncio" ; mkN "aviso" ; } ; --*
lin telling_3_A = mkA "impressionante" ; --*
lin tell_on_2_V2 = mkV2 (mkV "on") ; --*
lin telltale_N = variants {mkN "palrador" ; mkN "paroleiro" ; mkN "tagarela" ; } ; --*
lin tellurian_A = variants {mkA "telúrico" ; mkA "terreno" ; mkA "terrestre" ; } ; --*
lin tellurian_N = variants {mkN "terráqueo" ; mkN "terrestre" ; } ; --*
lin telluric_1_A = mkA "telúrico" ; --*
lin telluric_2_A = variants {mkA "telúrico" ; mkA "terreno" ; mkA "terrestre" ; } ; --*
lin tellurium_N = variants {mkN "number" ; mkN "Telurio" ; mkN "telúrio" ; } ; --*
lin telly_N = variants {mkN "box" ; mkN "receiver" ; mkN "set" ; mkN "televisão" ; mkN "tevê" ; mkN "tube" ; mkN "tv" ; } ; --*
lin telomerase_N = mkN "telomerase" ; --*
lin telomere_N = variants {mkN "Telómero" ; mkN "telômero" ; } ; --*
lin telophase_2_N = mkN "telófase" ; --*
lin temazepam_N = mkN "Temazepam" ; --*
lin temerity_N = mkN "audácia" ; --*
lin temper_1_N = mkN "irritação" ; --*
lin temper_1_V2 = mkV2 (mkV "temperar") ; --*
lin temper_2_N = mkN "humor" ; --*
lin temper_2_V2 = variants {mkV2 (mkV "endurecer") ; mkV2 (mkV "enrijar") ; mkV2 (mkV "enrijecer") ; mkV2 (mkV "temperar") ; } ; --*
lin temper_4_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "medir") ; mkV2 (mkV "moderar") ; mkV2 (mkV "temperar") ; } ; --*
lin temper_5_V2 = variants {mkV2 (mkV "comedir") ; mkV2 (mkV "moderar") ; } ; --*
lin temper_5_V = variants {mkV "comedir" ; mkV "moderar" ; } ; --*
lin temperament_1_N = variants {mkN "disposição" ; mkN "temperamento" ; } ; --*
lin temperamental_3_A = mkA "errático" ; --*
lin temperance_3_N = mkN "a" ; --*
lin tempera_N = variants {mkN "color" ; mkN "colour" ; mkN "paint" ; mkN "Tempera" ; } ; --*
lin temperate_3_A = mkA "comedido" ; --*
lin temperateness_1_N = variants {mkN "clima" ; mkN "tempo" ; mkN "weather" ; } ; --*
lin temperateness_2_N = mkN "autodomínio" ; --*
lin temperature_1_N = variants {mkN "calor" ; mkN "temperatura" ; mkN "Temperatura" ; } ; --*
lin temperature_2_N = variants {mkN "febre" ; mkN "temperatura" ; } ; --*
lin tempestuous_1_A = mkA "tempestuoso" ; --*
lin tempestuous_2_A = variants {mkA "feroz" ; mkA "furioso" ; mkA "raivoso" ; mkA "tempestuoso" ; } ; --*
lin tempestuousness_2_N = variants {mkN "agitação" ; mkN "perturbação" ; } ; --*
lin template_N = variants {mkN "clichê" ; mkN "gabarito" ; mkN "modelo" ; mkN "molde" ; mkN "predefinição" ; } ; --*
lin temple_1_N = mkN "templo" ; --*
lin temple_2_N = mkN "têmpora" ; --*
lin temple_3_N = mkN "templo" ; --*
lin temple_4_N = variants {mkN "sinagoga" ; mkN "templo" ; mkN "Templos" ; } ; --*
lin templet_N = variants {mkN "clichê" ; mkN "gabarito" ; mkN "modelo" ; mkN "molde" ; mkN "predefinição" ; } ; --*
lin tempo_1_N = mkN "andamento" ; --*
lin tempo_2_N = variants {mkN "ritmo" ; mkN "taxas" ; } ; --*
lin temporal_2_A = mkA "temporal" ; --*
lin temporal_3_A = mkA "temporal" ; --*
lin temporal_4_A = variants {mkA "leigo" ; mkA "secular" ; } ; --*
lin temporalty_2_N = variants {mkN "Laico" ; mkN "os" ; } ; --*
lin temporary_1_A = mkA "temporário" ; --*
lin temporize_1_V = mkV "temporizar" ; --*
lin tempt_1_V2 = variants {mkV2 (mkV "atrair") ; mkV2 (mkV "tentar") ; } ; --*
lin tempt_2_V2 = variants {mkV2 (mkV "desencaminhar") ; mkV2 (mkV "engodar") ; mkV2 (mkV "incitar") ; mkV2 (mkV "induzir") ; mkV2 (mkV "seduzir") ; } ; --*
lin tempt_3_V2 = variants {mkV2 (mkV "convidar") ; mkV2 (mkV "tentar") ; } ; --*
lin tempt_4_V2 = variants {mkV2 (mkV "influenciar") ; mkV2 (mkV "seduzir") ; } ; --*
lin tempt_5_V2 = variants {mkV2 (mkV "seduzir") ; mkV2 (mkV "tentar") ; } ; --*
lin tempt_5_V2V = variants {mkV2V (mkV "seduzir") ; mkV2V (mkV "tentar") ; } ; --*
lin temptation_1_N = mkN "tentação" ; --*
lin temptation_2_N = mkN "tentação" ; --*
lin temptation_3_N = mkN "tentação" ; --*
lin temptress_N = variants {mkN "fatale" ; mkN "mulher" ; } ; --*
lin tempura_N = mkN "tempurá" ; --*
lin tenacious_1_A = mkA "tenaz" ; --*
lin tenacious_2_A = variants {mkA "porfiado" ; mkA "teimoso" ; mkA "tenaz" ; } ; --*
lin tenacious_3_A = variants {mkA "coerente" ; mkA "tenaz" ; } ; --*
lin tenaciousness_N = variants {mkN "empenho" ; mkN "persistência" ; mkN "tenacidade" ; } ; --*
lin tenacity_N = variants {mkN "empenho" ; mkN "persistência" ; mkN "tenacidade" ; } ; --*
lin tenancy_N = mkN "locação" ; --*
lin tenant_1_N = variants {mkN "inquilino" ; mkN "locatário" ; } ; --*
lin tench_N = variants {mkN "tenca" ; mkN "tinca" ; } ; --*
lin tendency_1_N = mkN "tendência" ; --*
lin tendency_2_N = mkN "tendência" ; --*
lin tendency_3_N = mkN "tendência" ; --*
lin tendency_4_N = variants {mkN "moda" ; mkN "tendência" ; } ; --*
lin tendentious_1_A = mkA "tendencioso" ; --*
lin tender_1_A = variants {mkA "meigo" ; mkA "tenro" ; } ; --*
lin tender_1_V2 = mkV2 (mkV "oferecer") ; --*
lin tender_1_V2V = mkV2V (mkV "oferecer") ; --*
lin tender_1_V = mkV "oferecer" ; --*
lin tender_2_A = variants {mkA "magoado" ; mkA "ofendido" ; mkA "sensível" ; mkA "terno" ; } ; --*
lin tender_2_N = variants {mkN "ajudante" ; mkN "assistente" ; mkN "empregado" ; } ; --*
lin tender_2_V2 = mkV2 (mkV "oferecer") ; --*
lin tender_3_A = variants {mkA "tenro" ; mkA "terno" ; mkA "vulnerável" ; } ; --*
lin tender_3_N = mkN "oferta" ; --*
lin tender_3_V2 = mkV2 (mkV "pagar") ; --*
lin tender_3_V2V = mkV2V (mkV "pagar") ; --*
lin tender_3_V = mkV "pagar" ; --*
lin tender_4_A = variants {mkA "afectuoso" ; mkA "afeiçoado" ; mkA "cálido" ; mkA "carinhoso" ; mkA "meigo" ; mkA "que" ; mkA "terno" ; } ; --*
lin tender_4_V2 = variants {mkV2 (mkV "amaciar") ; mkV2 (mkV "tenderizar") ; } ; --*
lin tender_4_V2V = variants {mkV2V (mkV "amaciar") ; mkV2V (mkV "tenderizar") ; } ; --*
lin tender_4_V = variants {mkV "amaciar" ; mkV "tenderizar" ; } ; --*
lin tender_5_A = variants {mkA "macio" ; mkA "tenro" ; } ; --*
lin tender_5_N = variants {mkN "boat" ; mkN "pinaça" ; } ; --*
lin tenderness_1_N = variants {mkN "afeição" ; mkN "amor" ; mkN "dolorimento" ; mkN "finura" ; mkN "maciez" ; } ; --*
lin tenderness_2_N = mkN "dor" ; --*
lin tenderness_3_N = mkN "ternura" ; --*
lin tenderness_4_N = variants {mkN "afecção" ; mkN "afeição" ; mkN "afetividade" ; mkN "amor" ; mkN "apego" ; mkN "carinho" ; } ; --*
lin tendinitis_1_N = mkN "tendinite" ; --*
lin tendon_N = mkN "tendão" ; --*
lin tendril_N = mkN "gavinha" ; --*
lin tend_to_V2 = mkV2 (mkV "cuidar") ; --*
lin tend_V2 = variants {mkV2 (mkV "gerenciar") ; mkV2 (mkV "tomar") ; } ; --*
lin tenebrous_1_A = mkA "tenebroso" ; --*
lin tenement_house_N = variants {mkN "cortiço" ; mkN "house" ; } ; --*
lin tenement_N = variants {mkN "cortiço" ; mkN "house" ; } ; --*
lin tenet_N = mkN "dogma" ; --*
lin tenfold_1_A = mkA "denário" ; --*
lin tenner_1_N = variants {mkN "10" ; mkN "dez" ; mkN "dezena" ; } ; --*
lin tennessee_1_PN = variants {mkPN "State" ; mkPN "Tennessee" ; } ; --*
lin tennessee_2_PN = variants {mkPN "Rio" ; mkPN "River" ; mkPN "Tennessee" ; } ; --*
lin tennis_elbow_N = variants {mkN "elbow" ; mkN "epicondylitis" ; mkN "humeral" ; } ; --*
lin tennis_N = variants {mkN "tênis" ; mkN "Tênis" ; mkN "tennis" ; } ; --*
lin tenor_1_N = variants {mkN "tenor" ; mkN "Tenores" ; mkN "voice" ; } ; --*
lin tenor_2_N = mkN "tenor" ; --*
lin tenosynovitis_1_N = variants {mkN "synovitis" ; mkN "Tenossinovite" ; } ; --*
lin tense_1_A = mkA "tenso" ; --*
lin tense_1_V = mkV "tensionar" ; --*
lin tense_2_V2 = mkV2 (mkV "tensionar") ; --*
lin tense_3_A = mkA "tenso" ; --*
lin tense_3_V = variants {mkV "ficar" ; mkV "up" ; } ; --*
lin tense_4_V2 = variants {mkV2 (mkV "estressar") ; mkV2 (mkV "tensionar") ; mkV2 (mkV "up") ; } ; --*
lin tenseness_1_N = mkN "tensão" ; --*
lin tenseness_2_N = variants {mkN "fadiga" ; mkN "stress" ; mkN "tensão" ; } ; --*
lin tensile_1_A = mkA "tensional" ; --*
lin tensile_2_A = variants {mkA "dúctil" ; mkA "maleável" ; } ; --*
lin tension_1_N = variants {mkN "fadiga" ; mkN "stress" ; mkN "tensão" ; } ; --*
lin tension_2_N = mkN "tensão" ; --*
lin tension_4_N = mkN "tensão" ; --*
lin tension_5_N = variants {mkN "hostility" ; mkN "tensão" ; } ; --*
lin tensionless_A = mkA "relaxado" ; --*
lin tensity_N = mkN "tensão" ; --*
lin tent_1_N = variants {mkN "shelter" ; mkN "tenda" ; } ; --*
lin tentacle_1_N = mkN "tentáculo" ; --*
lin tentacle_2_N = mkN "tentáculo" ; --*
lin tentative_1_A = variants {mkA "provisória" ; mkA "provisório" ; mkA "temporário" ; mkA "tentativo" ; } ; --*
lin tenth_1_N = variants {mkN "décimo" ; mkN "part" ; mkN "percent" ; } ; --*
lin tenth_2_N = variants {mkN "décima" ; mkN "décimo" ; } ; --*
lin tenuous_2_A = mkA "tênue" ; --*
lin tenure_1_N = variants {mkN "legislatura" ; mkN "of" ; mkN "titularidade" ; } ; --*
lin tenure_2_N = variants {mkN "tenência" ; mkN "tenure" ; } ; --*
lin tepal_N = mkN "tépala" ; --*
lin tepee_1_N = mkN "Tipi" ; --*
lin tepid_1_A = variants {mkA "morna" ; mkA "morno" ; mkA "tépida" ; mkA "tépido" ; mkA "tíbio" ; } ; --*
lin tepid_2_A = variants {mkA "morno" ; mkA "tépido" ; } ; --*
lin tequila_N = variants {mkN "tequila" ; mkN "Tequila" ; } ; --*
lin terabyte_1_N = variants {mkN "terabyte" ; mkN "Terabyte" ; } ; --*
lin terabyte_2_N = mkN "tebibyte" ; --*
lin teratogenesis_N = mkN "teratogénese" ; --*
lin teratogenic_A = mkA "teratogenico" ; --*
lin teratoma_N = mkN "teratoma" ; --*
lin terbinafine_N = mkN "Terbinafina" ; --*
lin terbium_N = variants {mkN "number" ; mkN "Terbio" ; mkN "térbio" ; } ; --*
lin terce_N = variants {mkN "Terça" ; mkN "Tércia" ; } ; --*
lin terebinth_N = variants {mkN "terebinthus" ; mkN "terebinto" ; } ; --*
lin terence_PN = variants {mkPN "Terencio" ; mkPN "Terentius" ; } ; --*
lin teresa_PN = variants {mkPN "Gonxha" ; mkPN "Teresa" ; mkPN "Theresa" ; } ; --*
lin tergiversate_1_V = variants {mkV "around" ; mkV "embromar" ; mkV "enrolar" ; mkV "mentir" ; mkV "tergiversar" ; } ; --*
lin tergiversate_2_V = mkV "apostatar" ; --*
lin tergiversation_2_N = mkN "apostasia" ; --*
lin teriyaki_N = mkN "teriyaki" ; --*
lin term_1_N = variants {mkN "palavra" ; mkN "termo" ; mkN "vocábulo" ; } ; --*
lin term_2_N = mkN "período" ; --*
lin term_3_N = variants {mkN "condição" ; mkN "termo" ; } ; --*
lin term_5_N = mkN "termo" ; --*
lin termagant_N = mkN "megera" ; --*
lin terminal_1_A = mkA "terminal" ; --*
lin terminal_1_N = mkN "estação" ; --*
lin terminal_2_A = mkA "terminal" ; --*
lin terminal_3_A = variants {mkA "terminal" ; mkA "último" ; } ; --*
lin terminal_3_N = mkN "traseiro" ; --*
lin terminal_4_A = variants {mkA "final" ; mkA "último" ; } ; --*
lin terminal_4_N = mkN "terminal" ; --*
lin terminal_5_A = mkA "terminal" ; --*
lin terminate_1_V2 = variants {mkV2 (mkV "concluir") ; mkV2 (mkV "encerrar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "terminar") ; } ; --*
lin terminate_2_V = variants {mkV "acabar" ; mkV "cessar" ; mkV "encerrar" ; mkV "finalizar" ; mkV "parar" ; mkV "terminar" ; } ; --*
lin terminate_3_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "finalizar") ; mkV2 (mkV "findar") ; } ; --*
lin terminate_4_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "demitir") ; mkV2 (mkV "despedir") ; mkV2 (mkV "destituir") ; mkV2 (mkV "notice") ; mkV2 (mkV "out") ; mkV2 (mkV "the") ; } ; --*
lin termination_1_N = variants {mkN "decurso" ; mkN "desinência" ; mkN "expiração" ; mkN "término" ; mkN "vencimento" ; } ; --*
lin termination_2_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin termination_3_N = variants {mkN "placar" ; mkN "result" ; mkN "resultado" ; } ; --*
lin termination_4_N = mkN "sufixo" ; --*
lin termination_5_N = variants {mkN "conclusão" ; mkN "termino" ; } ; --*
lin terminology_N = variants {mkN "nomenclatura" ; mkN "terminologia" ; } ; --*
lin terminus_1_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin terminus_2_N = mkN "destino" ; --*
lin terminus_5_N = mkN "estação" ; --*
lin termite_N = variants {mkN "ant" ; mkN "cupim" ; mkN "térmite" ; mkN "térmites" ; } ; --*
lin terms_1_N = mkN "termos" ; --*
lin terms_2_N = variants {mkN "custo" ; mkN "preço" ; mkN "preços" ; } ; --*
lin term_V2 = mkV2 (mkV "nomear") ; --*
lin term_VS = mkVS (mkV "nomear") ; --*
lin ternary_A = mkA "triplo" ; --*
lin tern_N = variants {mkN "andorinha" ; mkN "Sternidae" ; } ; --*
lin terpene_N = variants {mkN "terpeno" ; mkN "Terpenos" ; } ; --*
lin terpsichorean_A = variants {mkA "dançante" ; mkA "terpsicoreano" ; } ; --*
lin terrace_1_N = variants {mkN "pátio" ; mkN "terraço" ; } ; --*
lin terrace_2_N = variants {mkN "socalco" ; mkN "Terraceamento" ; } ; --*
lin terra_cotta_N = mkN "cotta" ; --*
lin terra_firma_N = variants {mkN "chão" ; mkN "firma" ; mkN "ground" ; mkN "land" ; mkN "solo" ; mkN "terra" ; } ; --*
lin terra_incognita_N = variants {mkN "incognita" ; mkN "region" ; mkN "terra" ; } ; --*
lin terrain_N = variants {mkN "relevo" ; mkN "terreno" ; } ; --*
lin terrestrial_1_A = variants {mkA "telúrico" ; mkA "terreno" ; mkA "terrestre" ; } ; --*
lin terrestrial_2_A = mkA "terrestre" ; --*
lin terrestrial_3_A = mkA "terrestre" ; --*
lin terrestrial_4_A = variants {mkA "mundano" ; mkA "terrestre" ; } ; --*
lin terrible_1_A = variants {mkA "calamitoso" ; mkA "horrível" ; mkA "medonho" ; mkA "pavoroso" ; mkA "temido" ; mkA "temível" ; mkA "terrível" ; } ; --*
lin terrible_2_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin terrible_3_A = variants {mkA "horrível" ; mkA "severo" ; mkA "terrível" ; } ; --*
lin terrible_4_A = mkA "horrível" ; --*
lin terrier_N = variants {mkN "Terrier" ; mkN "Terriers" ; } ; --*
lin terrific_1_A = mkA "sensasional" ; --*
lin terrific_2_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin terrify_V2 = variants {mkV2 (mkV "aterrorizar") ; mkV2 (mkV "horripilar") ; mkV2 (mkV "terrificar") ; } ; --*
lin terrine_N = mkN "terrina" ; --*
lin territorial_1_A = mkA "territorial" ; --*
lin territorial_2_A = mkA "territorial" ; --*
lin territorial_3_A = mkA "territorial" ; --*
lin territory_1_N = variants {mkN "circunscrição" ; mkN "comarca" ; mkN "condado" ; mkN "districto" ; mkN "distrito" ; mkN "domínio" ; mkN "dominion" ; mkN "país" ; mkN "território" ; } ; --*
lin territory_2_N = mkN "área" ; --*
lin territory_3_N = mkN "território" ; --*
lin terror_1_N = variants {mkN "medo" ; mkN "pânico" ; mkN "terror" ; } ; --*
lin terror_2_N = mkN "terror" ; --*
lin terror_4_N = mkN "terrorismo" ; --*
lin terrorism_N = variants {mkN "act" ; mkN "of" ; mkN "Terrorismo" ; } ; --*
lin terrorist_N = mkN "terrorista" ; --*
lin terrorize_1_V2 = mkV2 (mkV "aterrorizar") ; --*
lin terrorize_2_V2 = variants {mkV2 (mkV "aterrorizar") ; mkV2 (mkV "horripilar") ; mkV2 (mkV "terrificar") ; } ; --*
lin terse_A = variants {mkA "curto" ; mkA "lacônico" ; } ; --*
lin tertiary_A = mkA "terciário" ; --*
lin tesla_1_N = variants {mkN "tesla" ; mkN "Tesla" ; } ; --*
lin tesla_2_N = variants {mkN "Nikola" ; mkN "Tesla" ; } ; --*
lin tesseract_N = mkN "tesserato" ; --*
lin tessera_N = variants {mkN "azulejo" ; mkN "Tessera" ; mkN "téssera" ; mkN "Téssera" ; } ; --*
lin test_1_N = variants {mkN "ensaio" ; mkN "prova" ; mkN "run" ; } ; --*
lin test_1_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "out") ; mkV2 (mkV "tentar") ; } ; --*
lin test_2_N = variants {mkN "test" ; mkN "teste" ; mkN "testing" ; } ; --*
lin test_2_V2 = variants {mkV2 (mkV "checar") ; mkV2 (mkV "testar") ; } ; --*
lin test_3_N = variants {mkN "exame" ; mkN "teste" ; } ; --*
lin test_4_N = variants {mkN "esforço" ; mkN "tentativa" ; mkN "teste" ; } ; --*
lin test_5_N = mkN "teste" ; --*
lin testament_2_N = variants {mkN "nota" ; mkN "testamento" ; } ; --*
lin tester_1_N = mkN "examinador" ; --*
lin testicle_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin testicular_A = mkA "testicular" ; --*
lin testify_1_V2 = variants {mkV2 (mkV "testemunhar") ; mkV2 (mkV "the") ; mkV2 (mkV "witness") ; } ; --*
lin testify_1_VS = variants {mkVS (mkV "testemunhar") ; mkVS (mkV "the") ; mkVS (mkV "witness") ; } ; --*
lin testify_1_V = variants {mkV "testemunhar" ; mkV "the" ; mkV "witness" ; } ; --*
lin testify_2_V = variants {mkV "atestar" ; mkV "provar" ; mkV "witness" ; } ; --*
lin testimonial_1_N = variants {mkN "testemunha" ; mkN "testemunho" ; } ; --*
lin testimonial_2_N = mkN "tributo" ; --*
lin testimonial_3_N = variants {mkN "recomendação" ; mkN "recomendações" ; mkN "word" ; } ; --*
lin testimony_1_N = variants {mkN "depoimento" ; mkN "testemunha" ; mkN "testemunho" ; } ; --*
lin testimony_2_N = variants {mkN "depoimento" ; mkN "testemunha" ; mkN "testemunho" ; } ; --*
lin testimony_3_N = variants {mkN "testemunha" ; mkN "testemunho" ; } ; --*
lin testing_1_N = variants {mkN "experiência" ; mkN "teste" ; } ; --*
lin testing_2_N = variants {mkN "exame" ; mkN "teste" ; } ; --*
lin testing_3_N = variants {mkN "exame" ; mkN "examinação" ; mkN "teste" ; } ; --*
lin testis_N = variants {mkN "culhão" ; mkN "gónada" ; mkN "testículo" ; } ; --*
lin testosterone_N = mkN "testosterona" ; --*
lin test_tube_N = mkN "tube" ; --*
lin testy_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin tetanus_1_N = variants {mkN "Tetano" ; mkN "tétano" ; } ; --*
lin tetany_N = variants {mkN "cramp" ; mkN "tetania" ; mkN "Tetania" ; mkN "tetanus" ; } ; --*
lin tetchy_A = variants {mkA "irritadiço" ; mkA "petulante" ; } ; --*
lin tetherball_N = mkN "Espirobol" ; --*
lin tether_N = variants {mkN "coleira" ; mkN "trela" ; } ; --*
lin tetracaine_N = mkN "Tetracaína" ; --*
lin tetracycline_N = mkN "tetraciclina" ; --*
lin tetragram_N = mkN "tetragrama" ; --*
lin tetrahedron_N = mkN "tetraedro" ; --*
lin tetrahydrocannabinol_N = variants {mkN "tetrahidrocanabinol" ; mkN "tetraidrocanabinol" ; } ; --*
lin tetralogy_N = mkN "tetralogia" ; --*
lin tetrameter_N = mkN "tetrâmetro" ; --*
lin tetrapod_N = variants {mkN "Tetrapoda" ; mkN "tetrápodes" ; } ; --*
lin tetrodotoxin_N = mkN "Tetrodotoxina" ; --*
lin teuton_1_N = mkN "Teutões" ; --*
lin teutonic_A = mkA "teutônico" ; --*
lin texan_A = mkA "texano" ; --*
lin texan_N = mkN "texano" ; --*
lin texas_PN = variants {mkPN "State" ; mkPN "Texas" ; } ; --*
lin text_1_N = variants {mkN "matter" ; mkN "texto" ; } ; --*
lin text_3_N = variants {mkN "apostila" ; mkN "compêndio" ; mkN "edition" ; mkN "sebenta" ; mkN "text" ; mkN "texto" ; } ; --*
lin text_4_N = mkN "texto" ; --*
lin textbook_N = variants {mkN "apostila" ; mkN "compêndio" ; mkN "edition" ; mkN "sebenta" ; mkN "text" ; mkN "texto" ; } ; --*
lin textile_A = variants {mkA "tecido" ; mkA "têxtil" ; } ; --*
lin textile_N = variants {mkN "fazenda" ; mkN "pano" ; mkN "tecido" ; mkN "têxteis" ; } ; --*
lin textual_A = mkA "textual" ; --*
lin texture_1_N = mkN "textura" ; --*
lin texture_3_N = mkN "textura" ; --*
lin texture_4_N = mkN "textura" ; --*
lin textured_A = mkA "áspero" ; --*
lin thai_1_A = variants {mkA "siamês" ; mkA "tailandês" ; } ; --*
lin thai_2_A = variants {mkA "siamês" ; mkA "tailandês" ; } ; --*
lin thai_3_A = mkA "tailandês" ; --*
lin thaiFem_N = mkN "tailandês" ; --*
lin thailand_PN = variants {mkPN "of" ; mkPN "Sião" ; mkPN "Tailândia" ; } ; --*
lin thaiMasc_N = mkN "tailandês" ; --*
lin thai_N = variants {mkN "Língua" ; mkN "Thai" ; } ; --*
lin thalamus_N = mkN "tálamo" ; --*
lin thalassemia_1_N = variants {mkN "anaemia" ; mkN "anemia" ; mkN "talassemia" ; mkN "Talassémia" ; } ; --*
lin thalidomide_N = mkN "talidomida" ; --*
lin thallium_N = variants {mkN "number" ; mkN "Talio" ; mkN "tálio" ; } ; --*
lin thallophytic_A = mkA "talofítico" ; --*
lin thallus_N = mkN "Talo" ; --*
lin thalweg_2_N = mkN "talvegue" ; --*
lin thanatology_N = variants {mkN "tanatologia" ; mkN "Tanatologia" ; } ; --*
lin thanatophobia_N = mkN "tanatofobia" ; --*
lin thankful_A = variants {mkA "agradecido" ; mkA "gratidão" ; mkA "grato" ; mkA "reconhecido" ; } ; --*
lin thankfulness_N = mkN "gratidão" ; --*
lin thankless_1_A = variants {mkA "ingrato" ; mkA "mal-agradecido" ; } ; --*
lin thanks_1_N = mkN "agradecimento" ; --*
lin thanksgiving_1_N = variants {mkN "Ação" ; mkN "Day" ; } ; --*
lin thanksgiving_2_N = mkN "bênção" ; --*
lin thank_V2 = variants {mkV2 (mkV "apreciar") ; mkV2 (mkV "thanks") ; } ; --*
lin thatch_3_N = variants {mkN "Barbanegra" ; mkN "Teach" ; mkN "Thatch" ; } ; --*
lin thatcher_1_N = variants {mkN "Hilda" ; mkN "Lady" ; mkN "Margaret" ; mkN "Thatcher" ; } ; --*
lin thatch_V2 = mkV2 (mkV "colmar") ; --*
lin thaw_1_N = variants {mkN "degelo" ; mkN "derretimento" ; mkN "fusão" ; } ; --*
lin thaw_1_V = variants {mkV "amolecer" ; mkV "degelar" ; mkV "derreter" ; mkV "descongelar" ; } ; --*
lin thaw_2_N = mkN "degelo" ; --*
lin theanthropism_2_N = variants {mkN "antropomorfismo" ; mkN "Antropomorfismo" ; } ; --*
lin theatre_1_N = variants {mkN "casa" ; mkN "teatro" ; } ; --*
lin theatre_2_N = variants {mkN "art" ; mkN "dramaturgia" ; mkN "Dramaturgia" ; mkN "teatro" ; } ; --*
lin theatre_3_N = variants {mkN "campo" ; mkN "of" ; mkN "teatro" ; } ; --*
lin theatrical_1_A = mkA "teatral" ; --*
lin theatrical_2_A = mkA "teatral" ; --*
lin theft_N = variants {mkN "furto" ; mkN "roubo" ; } ; --*
lin the_hague_PN = variants {mkPN "Gravenhage" ; mkPN "Haag" ; mkPN "Hague" ; } ; --*
lin theism_N = variants {mkN "teísmo" ; mkN "Teísmo" ; } ; --*
lin theist_N = mkN "teísta" ; --*
lin thematic_1_A = mkA "temático" ; --*
lin thematic_2_A = mkA "temático" ; --*
lin theme_1_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin theme_2_N = variants {mkN "ideia" ; mkN "motivo" ; mkN "tema" ; } ; --*
lin theme_3_N = variants {mkN "tema" ; mkN "theme" ; } ; --*
lin theme_4_N = variants {mkN "ensaio" ; mkN "relatório" ; } ; --*
lin theme_5_N = variants {mkN "radical" ; mkN "Radical" ; mkN "raiz" ; mkN "word" ; } ; --*
lin then_1_Adv = variants {mkAdv "depois" ; mkAdv "em" ; mkAdv "so" ; mkAdv "then" ; } ; --*
lin then_3_Adv = mkAdv "então" ; --*
lin thenar_2_N = mkN "palma" ; --*
lin thence_1_Adv = variants {mkAdv "daí" ; mkAdv "desde" ; mkAdv "por" ; } ; --*
lin thence_3_Adv = variants {mkAdv "assim" ; mkAdv "consequentemente" ; mkAdv "daqui" ; mkAdv "de" ; mkAdv "dessa" ; mkAdv "desse" ; mkAdv "em" ; mkAdv "por" ; mkAdv "portanto" ; } ; --*
lin thenceforth_Adv = variants {mkAdv "depois" ; mkAdv "mais" ; } ; --*
lin theocracy_1_N = mkN "teocracia" ; --*
lin theocracy_2_N = mkN "teocracia" ; --*
lin theodolite_N = mkN "teodolito" ; --*
lin theologian_1_N = variants {mkN "teologista" ; mkN "teologisto" ; mkN "teólogo" ; } ; --*
lin theology_1_N = mkN "teologia" ; --*
lin theology_2_N = variants {mkN "system" ; mkN "teologia" ; } ; --*
lin theology_3_N = mkN "teologia" ; --*
lin theophany_N = variants {mkN "teofania" ; mkN "Teofania" ; } ; --*
lin theophylline_N = variants {mkN "teofilina" ; mkN "Teofilina" ; } ; --*
lin theorem_1_N = variants {mkN "proposição" ; mkN "teorema" ; } ; --*
lin theorem_2_N = mkN "teorema" ; --*
lin theoretical_1_A = mkA "teórico" ; --*
lin theoretical_2_A = mkA "teórico" ; --*
lin theoretic_A = mkA "teórico" ; --*
lin theoretician_N = variants {mkN "estudioso" ; mkN "teórico" ; } ; --*
lin theorist_1_N = variants {mkN "estudioso" ; mkN "teórico" ; } ; --*
lin theorization_1_N = mkN "especulação" ; --*
lin theorize_1_V2 = variants {mkV2 (mkV "conjecturar") ; mkV2 (mkV "supor") ; mkV2 (mkV "teorizar") ; } ; --*
lin theorize_1_V = variants {mkV "conjecturar" ; mkV "supor" ; mkV "teorizar" ; } ; --*
lin theorize_2_V2 = mkV2 (mkV "teorizar") ; --*
lin theorize_3_V = mkV "teorizar" ; --*
lin theory_1_N = mkN "teoria" ; --*
lin theory_2_N = variants {mkN "hipótese" ; mkN "possibilidade" ; mkN "suposição" ; mkN "teoria" ; } ; --*
lin theory_3_N = mkN "teoria" ; --*
lin theosophy_N = mkN "teosofia" ; --*
lin therapeutic_1_A = variants {mkA "curativo" ; mkA "terapêutico" ; } ; --*
lin therapeutic_2_A = variants {mkA "terapêutica" ; mkA "terapêutico" ; } ; --*
lin therapeutical_A = variants {mkA "terapêutica" ; mkA "terapêutico" ; } ; --*
lin therapeutics_N = mkN "terapêutica" ; --*
lin therapist_N = variants {mkN "curandeiro" ; mkN "terapeuta" ; } ; --*
lin therapy_N = variants {mkN "terapia" ; mkN "Terapias" ; } ; --*
lin there_1_Adv = variants {mkAdv "ali" ; mkAdv "eis" ; mkAdv "that" ; } ; --*
lin thereabout_1_Adv = variants {mkAdv "à" ; mkAdv "em" ; } ; --*
lin thereabout_2_Adv = variants {mkAdv "à" ; mkAdv "em" ; } ; --*
lin thereabouts_1_Adv = variants {mkAdv "à" ; mkAdv "em" ; } ; --*
lin thereabouts_2_Adv = variants {mkAdv "à" ; mkAdv "em" ; } ; --*
lin thereafter_Adv = variants {mkAdv "depois" ; mkAdv "mais" ; } ; --*
lin thereby_Adv = variants {mkAdv "assim" ; mkAdv "deste" ; } ; --*
lin therefore_1_Adv = variants {mkAdv "assim" ; mkAdv "consequentemente" ; mkAdv "daqui" ; mkAdv "de" ; mkAdv "dessa" ; mkAdv "desse" ; mkAdv "em" ; mkAdv "por" ; mkAdv "portanto" ; } ; --*
lin therefore_2_Adv = mkAdv "conseqüentemente" ; --*
lin therefrom_2_Adv = variants {mkAdv "daí" ; mkAdv "desde" ; mkAdv "por" ; } ; --*
lin theremin_N = mkN "teremim" ; --*
lin theresa_PN = variants {mkPN "Gonxha" ; mkPN "Teresa" ; mkPN "Theresa" ; } ; --*
lin thereto_Adv = variants {mkAdv "àquele" ; mkAdv "it" ; mkAdv "that" ; } ; --*
lin thermal_1_A = variants {mkA "calórico" ; mkA "termal" ; mkA "térmico" ; } ; --*
lin thermal_2_A = mkA "termal" ; --*
lin thermal_3_A = variants {mkA "termal" ; mkA "térmico" ; } ; --*
lin thermistor_N = variants {mkN "resistor" ; mkN "Termistor" ; mkN "termístor" ; } ; --*
lin thermochemistry_N = variants {mkN "termoquímica" ; mkN "Termoquímica" ; } ; --*
lin thermocouple_N = variants {mkN "junction" ; mkN "termopar" ; } ; --*
lin thermodynamics_N = variants {mkN "termodinâmica" ; mkN "Termodinâmica" ; } ; --*
lin thermoelectricity_N = mkN "Termoeletricidade" ; --*
lin thermography_N = mkN "termografia" ; --*
lin thermometer_N = variants {mkN "Termometro" ; mkN "Termómetro" ; mkN "termômetro" ; mkN "Termómetros" ; } ; --*
lin thermoplastic_N = variants {mkN "resin" ; mkN "Termoplastico" ; } ; --*
lin thermoreceptor_N = mkN "Termoceptor" ; --*
lin thermos_N = variants {mkN "bottle" ; mkN "cafeteira" ; mkN "flask" ; } ; --*
lin thermosphere_N = mkN "termosfera" ; --*
lin thermostat_N = mkN "termostato" ; --*
lin thesaurus_N = variants {mkN "finder" ; mkN "léxico" ; mkN "tesauro" ; mkN "thesauri" ; mkN "thesaurus" ; mkN "vocabulário" ; } ; --*
lin thesis_1_N = mkN "tese" ; --*
lin thesis_2_N = variants {mkN "dissertação" ; mkN "tese" ; mkN "teses" ; } ; --*
lin thespian_N = variants {mkN "actor" ; mkN "artista" ; mkN "ator" ; mkN "intérprete" ; mkN "player" ; } ; --*
lin thessaloniki_PN = variants {mkPN "Salonica" ; mkPN "Salónica" ; mkPN "Salônica" ; } ; --*
lin theta_N = variants {mkN "teta" ; mkN "Θ" ; } ; --*
lin theurgy_2_N = mkN "Teurgia" ; --*
lin thiazide_N = mkN "tiazida" ; --*
lin thick_1_A = variants {mkA "espesso" ; mkA "grosso" ; } ; --*
lin thick_2_A = mkA "denso" ; --*
lin thick_3_A = variants {mkA "espesso" ; mkA "Família" ; } ; --*
lin thick_5_A = mkA "grosso" ; --*
lin thick_6_A = mkA "denso" ; --*
lin thick_9_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "imbecil" ; } ; --*
lin thicken_1_V2 = variants {mkV2 (mkV "avolumar") ; mkV2 (mkV "engrossar") ; } ; --*
lin thicken_3_V2 = mkV2 (mkV "espessar") ; --*
lin thickening_3_N = variants {mkN "compactação" ; mkN "espessamento" ; } ; --*
lin thicket_N = mkN "arvoredo" ; --*
lin thick_headed_A = variants {mkA "burro" ; mkA "estúpido" ; mkA "imbecil" ; } ; --*
lin thick_N = variants {mkN "entre" ; mkN "interior" ; } ; --*
lin thickness_1_N = variants {mkN "espessura" ; mkN "grossura" ; } ; --*
lin thickness_4_N = mkN "grossura" ; --*
lin thick_set_1_A = mkA "grosso" ; --*
lin thief_N = variants {mkN "gatuno" ; mkN "ladra" ; mkN "ladrão" ; } ; --*
lin thievery_N = variants {mkN "furto" ; mkN "roubo" ; } ; --*
lin thieve_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "roubar") ; } ; --*
lin thigh_1_N = variants {mkN "anca" ; mkN "coxa" ; } ; --*
lin thigh_2_N = variants {mkN "coxa" ; mkN "joint" ; } ; --*
lin thighbone_N = variants {mkN "fémur" ; mkN "Fémur" ; mkN "fêmur" ; } ; --*
lin thimble_2_N = variants {mkN "dedal" ; mkN "Dedal" ; } ; --*
lin thin_1_A = mkA "fino" ; --*
lin thin_1_V2 = mkV2 (mkV "emagrecer") ; --*
lin thin_1_V = mkV "emagrecer" ; --*
lin thin_2_A = variants {mkA "esbelto" ; mkA "magro" ; mkA "tênue" ; } ; --*
lin thin_3_V2 = variants {mkV2 (mkV "diluir") ; mkV2 (mkV "out") ; } ; --*
lin thin_4_A = variants {mkA "disperso" ; mkA "esparso" ; } ; --*
lin thin_4_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "emagrecer") ; mkV2 (mkV "off") ; mkV2 (mkV "perder") ; mkV2 (mkV "reduzir") ; mkV2 (mkV "weight") ; } ; --*
lin thin_4_V = variants {mkV "down" ; mkV "emagrecer" ; mkV "off" ; mkV "perder" ; mkV "reduzir" ; mkV "weight" ; } ; --*
lin thin_5_A = mkA "rala" ; --*
lin thing_12_N = mkN "coisa" ; --*
lin thing_2_N = mkN "coisa" ; --*
lin thing_6_N = variants {mkN "caso" ; mkN "interesse" ; } ; --*
lin thing_8_N = mkN "coisa" ; --*
lin thingumabob_1_N = variants {mkN "coisa" ; mkN "coisas" ; mkN "negócio" ; mkN "troço" ; } ; --*
lin thingumajig_1_N = variants {mkN "coisa" ; mkN "coisas" ; mkN "negócio" ; mkN "troço" ; } ; --*
lin thingummy_N = variants {mkN "coisa" ; mkN "coisas" ; mkN "negócio" ; mkN "troço" ; } ; --*
lin think_10_V = variants {mkV "achar" ; mkV "considerar" ; } ; --*
lin think_2_VV = variants {mkVV (mkV "achar") ; mkVV (mkV "esperar") ; mkVV (mkV "pensar") ; mkVV (mkV "supor") ; } ; --*
lin think_3_V = variants {mkV "pensar" ; mkV "raciocínar" ; mkV "refletir" ; } ; --*
lin think_4_VQ = variants {mkVQ (mkV "back") ; mkVQ (mkV "lembrar") ; mkVQ (mkV "recordar") ; mkVQ (mkV "recordar-se") ; mkVQ (mkV "up") ; } ; --*
lin think_7_VV = mkVV (mkV "pretender") ; --*
lin think_8_VQ = variants {mkVQ (mkV "achar") ; mkVQ (mkV "pensar") ; } ; --*
lin think_9_VQ = mkVQ (mkV "pensar") ; --*
lin thinkerFem_1_N = variants {mkN "intelectual" ; mkN "mente" ; mkN "thinker" ; } ; --*
lin thinkerFem_2_N = mkN "intelectual" ; --*
lin thinkerMasc_1_N = variants {mkN "intelectual" ; mkN "mente" ; mkN "thinker" ; } ; --*
lin thinkerMasc_2_N = mkN "intelectual" ; --*
lin thinking_A = variants {mkA "inteligente" ; mkA "racional" ; } ; --*
lin thinking_N = variants {mkN "ideia" ; mkN "process" ; } ; --*
lin think_tank_N = variants {mkN "factory" ; mkN "tank" ; } ; --*
lin think_through_V2 = mkV2 (mkV "pensar") ; --*
lin think_up_V2 = variants {mkV2 (mkV "inventar") ; mkV2 (mkV "of") ; mkV2 (mkV "pensar") ; mkV2 (mkV "up") ; } ; --*
lin think_V2 = mkV2 (mkV "pensar") ; --*
lin think_V2V = variants {mkV2V (mkV "achar") ; mkV2V (mkV "esperar") ; mkV2V (mkV "pensar") ; mkV2V (mkV "supor") ; } ; --*
lin think_VA = mkVA (mkV "pensar") ; --*
lin think_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "pensar") ; } ; --*
lin thiocyanate_N = variants {mkN "tiocianato" ; mkN "Tiocianatos" ; } ; --*
lin thirst_1_N = mkN "sede" ; --*
lin thirst_2_N = variants {mkN "fome" ; mkN "sede" ; } ; --*
lin thirst_2_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "querer") ; mkV2 (mkV "ter") ; } ; --*
lin thirsty_1_A = mkA "com" ; --*
lin thirsty_2_A = variants {mkA "com" ; mkA "sedento" ; mkA "sequioso" ; } ; --*
lin thistle_N = mkN "cardo" ; --*
lin thomas_4_PN = variants {mkPN "Dylan" ; mkPN "Marlais" ; mkPN "Thomas" ; } ; --*
lin thomas_5_PN = variants {mkPN "the" ; mkPN "Thomas" ; } ; --*
lin thong_1_N = variants {mkN "chicote" ; mkN "látego" ; mkN "tira" ; } ; --*
lin thoracocentesis_1_N = mkN "toracocentese" ; --*
lin thoracotomy_N = mkN "Toracotomia" ; --*
lin thorax_1_N = mkN "tórax" ; --*
lin thorax_2_N = variants {mkN "peito" ; mkN "seio" ; } ; --*
lin thorium_N = variants {mkN "number" ; mkN "Torio" ; mkN "tório" ; } ; --*
lin thorn_1_N = variants {mkN "acúleo" ; mkN "contrariedade" ; mkN "estrepe" ; mkN "incômodo" ; mkN "irritação" ; } ; --*
lin thorn_2_N = variants {mkN "acúleo" ; mkN "espinho" ; } ; --*
lin thorn_3_N = mkN "thorn" ; --*
lin thorny_1_A = variants {mkA "cheio" ; mkA "espinhoso" ; } ; --*
lin thorny_2_A = variants {mkA "espinhento" ; mkA "espinhoso" ; mkA "farpado" ; } ; --*
lin thorough_2_A = mkA "exaustivo" ; --*
lin thoroughbred_2_N = mkN "thoroughbred" ; --*
lin thoroughbred_3_N = mkN "Pedigree" ; --*
lin thoroughbred_A = mkA "de" ; --*
lin thoroughfare_N = variants {mkN "estrada" ; mkN "rua" ; } ; --*
lin thoroughgoing_1_A = mkA "exaustivo" ; --*
lin thoroughness_N = variants {mkN "meticulosidade" ; mkN "minuciosidade" ; } ; --*
lin though_Adv = variants {mkAdv "ainda" ; mkAdv "conquanto" ; mkAdv "embora" ; mkAdv "posto" ; } ; --*
lin thought_1_N = variants {mkN "conceito" ; mkN "ideia" ; mkN "idéia" ; mkN "opinião" ; mkN "pensamento" ; } ; --*
lin thought_2_N = variants {mkN "ideia" ; mkN "process" ; } ; --*
lin thought_3_N = variants {mkN "ideia" ; mkN "pensamento" ; } ; --*
lin thought_4_N = variants {mkN "ideia" ; mkN "idéia" ; mkN "opinião" ; mkN "pensamento" ; mkN "perspicácia" ; } ; --*
lin thoughtful_4_A = variants {mkA "atencioso" ; mkA "atento" ; mkA "attention" ; } ; --*
lin thoughtful_5_A = variants {mkA "atencioso" ; mkA "gentil" ; } ; --*
lin thoughtfulness_1_N = variants {mkN "contemplação" ; mkN "especulação" ; mkN "meditação" ; mkN "pensamento" ; mkN "reflexão" ; } ; --*
lin thoughtfulness_2_N = mkN "consideração" ; --*
lin thoughtless_1_A = mkA "desatento" ; --*
lin thought_reader_2_N = variants {mkN "leitor" ; mkN "reader" ; } ; --*
lin thraldom_1_N = variants {mkN "escravidão" ; mkN "jugo" ; } ; --*
lin thrall_1_N = variants {mkN "escravidão" ; mkN "jugo" ; } ; --*
lin thrall_2_N = variants {mkN "escravo" ; mkN "servo" ; } ; --*
lin thrash_1_V2 = mkV2 (mkV "surrar") ; --*
lin thrash_1_V = mkV "surrar" ; --*
lin thrash_2_V = variants {mkV "about" ; mkV "debulhar" ; mkV "esbordoar" ; mkV "sovar" ; mkV "trilhar" ; } ; --*
lin thrash_6_V2 = mkV2 (mkV "espalhar") ; --*
lin thrash_6_V = mkV "espalhar" ; --*
lin thrash_7_V2 = mkV2 (mkV "destruir") ; --*
lin thrashing_1_N = mkN "surra" ; --*
lin thrashing_2_N = mkN "surra" ; --*
lin thread_1_N = variants {mkN "fio" ; mkN "Fio" ; mkN "lã" ; } ; --*
lin thread_1_V2 = variants {mkV2 (mkV "ir") ; mkV2 (mkV "vagar") ; } ; --*
lin thread_5_V2 = mkV2 (mkV "enfileirar") ; --*
lin threadbare_1_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin threadbare_2_A = mkA "banal" ; --*
lin threadfin_N = mkN "Polynemidae" ; --*
lin threadlike_A = mkA "filiforme" ; --*
lin threat_1_N = mkN "ameaça" ; --*
lin threat_2_N = variants {mkN "ameaça" ; mkN "groźba" ; } ; --*
lin threat_3_N = mkN "ameaça" ; --*
lin threat_4_N = mkN "terror" ; --*
lin threaten_1_V2 = variants {mkV2 (mkV "ameaçar") ; mkV2 (mkV "arriscar") ; mkV2 (mkV "imperilar") ; mkV2 (mkV "perigar") ; } ; --*
lin threaten_2_V2 = mkV2 (mkV "ameaçar") ; --*
lin threaten_3_V = mkV "ameaçar" ; --*
lin three_d_1_N = mkN "3D" ; --*
lin three_d_2_N = mkN "3D" ; --*
lin three_d_A = variants {mkA "Imagem" ; mkA "tridimensional" ; } ; --*
lin three_dimensional_1_A = variants {mkA "Imagem" ; mkA "tridimensional" ; } ; --*
lin three_dimensional_2_A = variants {mkA "cúbico" ; mkA "tridimensional" ; } ; --*
lin threefold_1_A = mkA "triplo" ; --*
lin threefold_2_A = variants {mkA "dúplice" ; mkA "duplo" ; } ; --*
lin threefold_Adv = variants {mkAdv "times" ; mkAdv "três" ; } ; --*
lin threesome_1_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin threesome_2_N = variants {mkN "tríade" ; mkN "trindade" ; mkN "trio" ; } ; --*
lin threnody_N = variants {mkN "pranto" ; mkN "réquiem" ; } ; --*
lin threonine_N = mkN "treonina" ; --*
lin thresh_1_V = variants {mkV "about" ; mkV "debulhar" ; mkV "esbordoar" ; mkV "sovar" ; mkV "trilhar" ; } ; --*
lin thresh_3_V2 = mkV2 (mkV "espalhar") ; --*
lin thresh_3_V = mkV "espalhar" ; --*
lin thresh_4_V2 = mkV2 (mkV "surrar") ; --*
lin thresh_4_V = mkV "surrar" ; --*
lin threshing_floor_N = mkN "floor" ; --*
lin threshold_2_N = mkN "gatilho" ; --*
lin threshold_3_N = variants {mkN "access" ; mkN "acesso" ; mkN "porta" ; mkN "portão" ; mkN "pórtico" ; } ; --*
lin threshold_4_N = variants {mkN "limiar" ; mkN "umbral" ; } ; --*
lin threshold_5_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "fronteiras" ; mkN "limite" ; mkN "margem" ; } ; --*
lin thrice_Adv = mkAdv "três" ; --*
lin thrift_2_N = variants {mkN "parcimónia" ; mkN "parcimônia" ; } ; --*
lin thriftlessness_N = mkN "desperdício" ; --*
lin thrifty_1_A = mkA "parcimonioso" ; --*
lin thrill_1_N = variants {mkN "emoção" ; mkN "estremecimento" ; mkN "excitação" ; } ; --*
lin thrill_2_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin thrill_2_V2 = variants {mkV2 (mkV "eletrizar") ; mkV2 (mkV "emocionar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "vibrar") ; } ; --*
lin thrill_3_V2 = variants {mkV2 (mkV "estremecer") ; mkV2 (mkV "tiritar") ; mkV2 (mkV "tremelicar") ; mkV2 (mkV "tremer") ; } ; --*
lin thrill_3_V = variants {mkV "estremecer" ; mkV "tiritar" ; mkV "tremelicar" ; mkV "tremer" ; } ; --*
lin thrill_4_V2 = variants {mkV2 (mkV "enebriar") ; mkV2 (mkV "exaltar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "exultar") ; mkV2 (mkV "pink") ; } ; --*
lin thriller_N = mkN "romance" ; --*
lin thrips_1_N = mkN "Thysanoptera" ; --*
lin thrive_1_V = mkV "vigorar" ; --*
lin thrive_2_V = variants {mkV "high" ; mkV "prosperar" ; } ; --*
lin throat_1_N = variants {mkN "faringe" ; mkN "garganta" ; } ; --*
lin throat_3_N = variants {mkN "gargalo" ; mkN "garganta" ; } ; --*
lin throat_4_N = mkN "garganta" ; --*
lin throb_1_N = mkN "tremida" ; --*
lin throb_2_V = variants {mkV "palpitar" ; mkV "pulsar" ; } ; --*
lin throb_3_V = variants {mkV "estremecer" ; mkV "tiritar" ; mkV "tremelicar" ; mkV "tremer" ; } ; --*
lin throes_N = mkN "agonia" ; --*
lin thrombin_N = mkN "trombina" ; --*
lin thrombocytopenia_N = variants {mkN "trombocitopenia" ; mkN "Trombocitopénia" ; } ; --*
lin thrombocytosis_N = mkN "trombocitose" ; --*
lin thromboembolism_N = mkN "tromboembolismo" ; --*
lin thrombolysis_N = mkN "trombólise" ; --*
lin thrombophlebitis_N = mkN "tromboflebite" ; --*
lin thromboplastin_N = variants {mkN "III" ; mkN "tromboquinase" ; } ; --*
lin thrombosis_N = variants {mkN "trombose" ; mkN "Trombose" ; } ; --*
lin thrombus_N = mkN "trombo" ; --*
lin throne_1_N = mkN "trono" ; --*
lin throne_2_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin throne_3_N = mkN "trono" ; --*
lin throng_N = variants {mkN "massa" ; mkN "multidão" ; mkN "povo" ; } ; --*
lin throng_V2 = mkV2 (mkV "lotar") ; --*
lin throstle_2_N = variants {mkN "philomelos" ; mkN "thrush" ; mkN "turdo" ; } ; --*
lin throttle_1_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin throttle_2_N = variants {mkN "acelerador" ; mkN "pedal" ; } ; --*
lin throttle_2_V2 = mkV2 (mkV "estrangular") ; --*
lin throughout_1_Adv = mkAdv "durante" ; --*
lin throughput_N = mkN "throughput" ; --*
lin throughway_N = variants {mkN "autoestrada" ; mkN "auto-estrada" ; mkN "estrada" ; mkN "highway" ; mkN "rodovia" ; mkN "super-autopista" ; mkN "via" ; mkN "vias" ; } ; --*
lin throw_10_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin throw_13_V2 = variants {mkV2 (mkV "derrubar") ; mkV2 (mkV "desmontar") ; } ; --*
lin throw_15_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "enrolar") ; mkV2 (mkV "perplexar") ; } ; --*
lin throw_1_N = variants {mkN "arremesso" ; mkN "lançamento" ; } ; --*
lin throw_1_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "jogar") ; mkV2 (mkV "lançar") ; } ; --*
lin throw_2_V2 = variants {mkV2 (mkV "jogar-se") ; mkV2 (mkV "se") ; } ; --*
lin throw_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin throw_3_V = variants {mkV "away" ; mkV "jogar" ; mkV "off" ; } ; --*
lin throw_4_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "jogar") ; } ; --*
lin throw_5_V2 = mkV2 (mkV "lançar") ; --*
lin throw_6_V2 = mkV2 (mkV "ligar") ; --*
lin throw_9_V2 = variants {mkV2 (mkV "descombobular") ; mkV2 (mkV "desconcertar") ; mkV2 (mkV "desnortear") ; } ; --*
lin throw_9_V = variants {mkV "descombobular" ; mkV "desconcertar" ; mkV "desnortear" ; } ; --*
lin throwaway_2_N = variants {mkN "filipeta" ; mkN "panfleto" ; } ; --*
lin throw_away_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin throwback_2_N = variants {mkN "atavismo" ; mkN "Atavismo" ; } ; --*
lin thrower_3_N = variants {mkN "ceramista" ; mkN "oleiro" ; } ; --*
lin throw_in_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "interpor") ; } ; --*
lin throw_off_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "jogar") ; mkV2 (mkV "off") ; } ; --*
lin throw_off_1_V = variants {mkV "away" ; mkV "jogar" ; mkV "off" ; } ; --*
lin throw_off_2_V2 = variants {mkV2 (mkV "escapar") ; mkV2 (mkV "from") ; mkV2 (mkV "off") ; } ; --*
lin throw_out_1_V2 = variants {mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin throw_out_2_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin throw_out_3_V2 = variants {mkV2 (mkV "enxotar") ; mkV2 (mkV "expulsar") ; mkV2 (mkV "out") ; } ; --*
lin throw_out_4_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "promover") ; } ; --*
lin throw_out_5_V2 = variants {mkV2 (mkV "dispersar") ; mkV2 (mkV "out") ; } ; --*
lin throw_together_2_V2 = variants {mkV2 (mkV "misturar") ; mkV2 (mkV "together") ; } ; --*
lin throw_up_V2 = variants {mkV2 (mkV "regurgitar") ; mkV2 (mkV "sick") ; mkV2 (mkV "up") ; mkV2 (mkV "vomitar") ; } ; --*
lin throw_up_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin thrum_1_V2 = variants {mkV2 (mkV "zumbir") ; mkV2 (mkV "zunir") ; } ; --*
lin thrum_1_V = variants {mkV "zumbir" ; mkV "zunir" ; } ; --*
lin thrum_3_V = variants {mkV "bater" ; mkV "batucar" ; } ; --*
lin thrush_1_N = mkN "cândida" ; --*
lin thrush_3_N = variants {mkN "sabiá" ; mkN "tordo" ; } ; --*
lin thrust_1_N = mkN "Empuxo" ; --*
lin thrust_1_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "propulsionar") ; } ; --*
lin thrust_2_V2 = variants {mkV2 (mkV "empurrar") ; mkV2 (mkV "enfiar") ; } ; --*
lin thrust_3_N = variants {mkN "empurrão" ; mkN "forca" ; mkN "force" ; mkN "impulso" ; } ; --*
lin thrust_3_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "impulsionar") ; } ; --*
lin thrust_3_V = variants {mkV "arremessar" ; mkV "impulsionar" ; } ; --*
lin thrust_5_N = mkN "injecção" ; --*
lin thrust_8_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "jogar") ; } ; --*
lin thug_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin thulium_N = variants {mkN "number" ; mkN "Tulio" ; mkN "túlio" ; } ; --*
lin thumb_1_N = variants {mkN "dedo" ; mkN "polegar" ; } ; --*
lin thumb_1_V2 = mkV2 (mkV "pedir") ; --*
lin thumb_3_V2 = mkV2 (mkV "manusear") ; --*
lin thumbnail_N = mkN "unha" ; --*
lin thump_1_V = mkV "pulsar" ; --*
lin thump_3_V2 = mkV2 (mkV "bater") ; --*
lin thunder_1_N = mkN "ribombo" ; --*
lin thunder_1_V = variants {mkV "ribombar" ; mkV "trovoar" ; } ; --*
lin thunder_2_N = mkN "trovão" ; --*
lin thunder_2_V = variants {mkV "mugir" ; mkV "roncar" ; mkV "vociferar" ; } ; --*
lin thunder_3_V = variants {mkV "trovejar" ; mkV "trovoar" ; } ; --*
lin thunderbolt_1_N = variants {mkN "of" ; mkN "raio" ; mkN "trovão" ; mkN "trovoadas" ; } ; --*
lin thunderous_1_A = mkA "ensurdecedor" ; --*
lin thunderous_2_A = mkA "ensurdecedor" ; --*
lin thunderstorm_N = variants {mkN "storm" ; mkN "tempestade" ; mkN "temporal" ; mkN "trovoada" ; } ; --*
lin thunder_V2 = variants {mkV2 (mkV "mugir") ; mkV2 (mkV "roncar") ; mkV2 (mkV "vociferar") ; } ; --*
lin thundery_1_A = mkA "ensurdecedor" ; --*
lin thundery_2_A = mkA "ensurdecedor" ; --*
lin thurible_N = variants {mkN "incensário" ; mkN "turíbulo" ; } ; --*
lin thus_1_Adv = variants {mkAdv "assim" ; mkAdv "consequentemente" ; mkAdv "daqui" ; mkAdv "de" ; mkAdv "dessa" ; mkAdv "desse" ; mkAdv "em" ; mkAdv "por" ; mkAdv "portanto" ; } ; --*
lin thwack_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "dar") ; } ; --*
lin thwart_N = variants {mkN "banco" ; mkN "thwart" ; } ; --*
lin thwart_V2 = variants {mkV2 (mkV "contrariar") ; mkV2 (mkV "frustrar") ; } ; --*
lin thylacine_N = variants {mkN "cynocephalus" ; mkN "tiger" ; mkN "tilacino" ; mkN "wolf" ; } ; --*
lin thyme_1_N = variants {mkN "Thymus" ; mkN "timo" ; mkN "tomilho" ; } ; --*
lin thyme_2_N = mkN "tomilho" ; --*
lin thymine_N = mkN "timina" ; --*
lin thymol_N = variants {mkN "acid" ; mkN "camphor" ; mkN "timol" ; } ; --*
lin thyroidectomy_N = mkN "Tiroidectomia" ; --*
lin thyroiditis_N = variants {mkN "tireoidite" ; mkN "Tireoidite" ; } ; --*
lin thyroid_N = variants {mkN "gland" ; mkN "tireóide" ; mkN "tiroide" ; mkN "Tiróide" ; } ; --*
lin thyroxine_1_N = mkN "tiroxina" ; --*
lin ti_3_N = mkN "si" ; --*
lin tiara_N = mkN "tiara" ; --*
lin tibetan_1_N = variants {mkN "tibetano" ; mkN "Tibetano" ; } ; --*
lin tibetan_A = mkA "tibetano" ; --*
lin tibet_PN = mkPN "Tibete" ; --*
lin tibia_1_N = variants {mkN "bone" ; mkN "tíbia" ; } ; --*
lin tick_1_V = variants {mkV "clicar" ; mkV "estalar" ; } ; --*
lin tick_2_N = variants {mkN "carrapato" ; mkN "Carrapato" ; mkN "tiquetaque" ; } ; --*
lin tick_2_V = mkV "bater" ; --*
lin tick_3_N = variants {mkN "mark" ; mkN "sinal" ; } ; --*
lin ticker_1_N = variants {mkN "Coraçao" ; mkN "coração" ; } ; --*
lin ticker_2_N = mkN "relógio" ; --*
lin ticket_1_N = variants {mkN "bilhete" ; mkN "passagem" ; } ; --*
lin ticket_1_V2 = mkV2 (mkV "multar") ; --*
lin ticket_2_N = variants {mkN "apanhada" ; mkN "etiqueta" ; mkN "marca" ; mkN "pega-pega" ; mkN "tag" ; } ; --*
lin ticket_3_N = variants {mkN "coima" ; mkN "multa" ; } ; --*
lin ticket_collector_N = variants {mkN "collector" ; mkN "taker" ; } ; --*
lin tickle_2_N = mkN "cócegas" ; --*
lin tickle_2_V2 = variants {mkV2 (mkV "eletrizar") ; mkV2 (mkV "emocionar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "vibrar") ; } ; --*
lin tickle_3_V2 = variants {mkV2 (mkV "cocegar") ; mkV2 (mkV "fazer") ; } ; --*
lin ticklish_A = variants {mkA "cócegozo" ; mkA "sensitivo" ; } ; --*
lin tick_off_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "verificar") ; } ; --*
lin ticktacktoe_1_N = variants {mkN "and" ; mkN "jogo" ; } ; --*
lin tic_N = variants {mkN "lona" ; mkN "tique" ; mkN "Tique" ; } ; --*
lin tidbit_N = variants {mkN "acepipe" ; mkN "guloseima" ; mkN "morsel" ; } ; --*
lin tiddler_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin tiddlywinks_N = mkN "jôgo" ; --*
lin tide_1_N = variants {mkN "maré" ; mkN "marés" ; } ; --*
lin tidiness_2_N = mkN "asseio" ; --*
lin tidy_1_A = mkA "Limpo" ; --*
lin tidy_3_A = variants {mkA "apreciável" ; mkA "considerável" ; } ; --*
lin tidy_up_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "away") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin tidy_V2 = variants {mkV2 (mkV "arrumar") ; mkV2 (mkV "away") ; mkV2 (mkV "out") ; mkV2 (mkV "up") ; } ; --*
lin tie_1_N = mkN "gravata" ; --*
lin tie_1_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "ligar") ; } ; --*
lin tie_2_N = variants {mkN "afiliação" ; mkN "filiação" ; } ; --*
lin tie_4_V2 = variants {mkV2 (mkV "juntar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "unir") ; mkV2 (mkV "up") ; } ; --*
lin tie_5_N = variants {mkN "agente" ; mkN "enlace" ; mkN "liame" ; mkN "ligação" ; mkN "vínculo" ; } ; --*
lin tie_5_V2 = mkV2 (mkV "dar") ; --*
lin tie_6_N = mkN "empate" ; --*
lin tie_6_V2 = variants {mkV2 (mkV "aproximar") ; mkV2 (mkV "aproximar-se") ; mkV2 (mkV "criar") ; mkV2 (mkV "ligar") ; } ; --*
lin tie_7_N = mkN "ligadura" ; --*
lin tie_7_V2 = mkV2 (mkV "casar") ; --*
lin tie_8_N = variants {mkN "dormente" ; mkN "Dormente" ; mkN "tie" ; mkN "travessa" ; } ; --*
lin tie_9_V2 = variants {mkV2 (mkV "ligar") ; mkV2 (mkV "paquerar") ; } ; --*
lin tie_9_V = variants {mkV "ligar" ; mkV "paquerar" ; } ; --*
lin tiebreaker_N = variants {mkN "Jogo" ; mkN "Tiebreaker" ; } ; --*
lin tie_down_1_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; mkV2 (mkV "down") ; mkV2 (mkV "up") ; } ; --*
lin tie_in_2_V2 = variants {mkV2 (mkV "associar") ; mkV2 (mkV "conectar") ; mkV2 (mkV "in") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "up") ; } ; --*
lin tientsin_PN = mkPN "Tianjin" ; --*
lin tier_1_N = variants {mkN "classe" ; mkN "nível" ; mkN "posto" ; } ; --*
lin tier_5_N = mkN "camada" ; --*
lin tie_up_1_N = variants {mkN "afiliação" ; mkN "filiação" ; } ; --*
lin tie_up_1_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; mkV2 (mkV "down") ; mkV2 (mkV "up") ; } ; --*
lin tie_up_2_N = mkN "paralisação" ; --*
lin tie_up_4_V2 = variants {mkV2 (mkV "atracar") ; mkV2 (mkV "up") ; } ; --*
lin tie_up_5_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "up") ; } ; --*
lin tiff_N = mkN "desavença" ; --*
lin tiger_1_N = mkN "tigre" ; --*
lin tiger_2_N = variants {mkN "leopardo" ; mkN "onça" ; mkN "tigre" ; mkN "tigris" ; } ; --*
lin tight_13_A = variants {mkA "estrito" ; mkA "rigoroso" ; } ; --*
lin tight_1_A = mkA "apertado" ; --*
lin tight_2_A = mkA "tenso" ; --*
lin tight_3_A = variants {mkA "apertado" ; mkA "justo" ; } ; --*
lin tight_4_A = mkA "comprimido" ; --*
lin tighten_1_V2 = variants {mkV2 (mkV "apertar") ; mkV2 (mkV "estreitar") ; } ; --*
lin tighten_2_V = variants {mkV "apertar" ; mkV "estreitar" ; } ; --*
lin tighten_4_V2 = mkV2 (mkV "restringir") ; --*
lin tight_laced_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin tight_lipped_A = mkA "reticente" ; --*
lin tightness_1_N = mkN "escassez" ; --*
lin tightness_3_N = variants {mkN "concentração" ; mkN "densidade" ; } ; --*
lin tightness_4_N = variants {mkN "parcimónia" ; mkN "Parcimônia" ; } ; --*
lin tights_N = mkN "Collants" ; --*
lin tight_wad_N = mkN "mão-de-vaca" ; --*
lin tiglon_1_N = variants {mkN "Tigon" ; mkN "tigreão" ; } ; --*
lin tigress_N = mkN "tigresa" ; --*
lin tike_1_N = mkN "indivíduo" ; --*
lin tike_2_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin tilde_N = mkN "til" ; --*
lin tile_1_N = mkN "ladrilho" ; --*
lin tile_2_N = variants {mkN "telha" ; mkN "tile" ; } ; --*
lin tile_V2 = variants {mkV2 (mkV "azulejar") ; mkV2 (mkV "ladrilhar") ; mkV2 (mkV "telhar") ; } ; --*
lin till_2_N = variants {mkN "erário" ; mkN "finanças" ; mkN "treasury" ; } ; --*
lin till_3_N = variants {mkN "box" ; mkN "cofre" ; } ; --*
lin tillage_1_N = variants {mkN "land" ; mkN "terra" ; } ; --*
lin tillage_2_N = variants {mkN "agricultura" ; mkN "cultivo" ; } ; --*
lin tiller_4_N = mkN "cultivador" ; --*
lin till_V2 = variants {mkV2 (mkV "arar") ; mkV2 (mkV "lavrar") ; } ; --*
lin tilt_1_N = mkN "torneio" ; --*
lin tilt_1_V = variants {mkV "debruçar" ; mkV "inclinar" ; } ; --*
lin tilt_2_N = variants {mkN "contestação" ; mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; mkN "polémica" ; mkN "polêmica" ; } ; --*
lin tilt_3_N = mkN "inclinação" ; --*
lin tilt_4_N = mkN "inclinação" ; --*
lin tilth_2_N = variants {mkN "land" ; mkN "terra" ; } ; --*
lin timber_1_N = mkN "madeira" ; --*
lin timber_4_N = variants {mkN "arvoredo" ; mkN "bosque" ; mkN "floresta" ; mkN "florestas" ; mkN "mata" ; mkN "selva" ; } ; --*
lin timber_5_N = variants {mkN "som" ; mkN "timbre" ; } ; --*
lin timbre_N = variants {mkN "som" ; mkN "timbre" ; } ; --*
lin time_10_N = variants {mkN "condenação" ; mkN "term" ; } ; --*
lin time_1_N = mkN "vez" ; --*
lin time_1_V2 = mkV2 (mkV "cronometrar") ; --*
lin time_2_N = variants {mkN "hora" ; mkN "tempo" ; } ; --*
lin time_3_N = variants {mkN "época" ; mkN "era" ; mkN "momento" ; mkN "período" ; mkN "tempo" ; } ; --*
lin time_3_V2 = mkV2 (mkV "cronometrar") ; --*
lin time_4_N = mkN "hora" ; --*
lin time_5_N = variants {mkN "espaço" ; mkN "tempo" ; } ; --*
lin time_7_N = variants {mkN "hora" ; mkN "time" ; } ; --*
lin time_8_N = variants {mkN "dimension" ; mkN "quarta" ; } ; --*
lin time_9_N = mkN "medidor" ; --*
lin timecard_1_N = mkN "cartão" ; --*
lin timekeeper_3_N = mkN "relógio" ; --*
lin time_lag_N = variants {mkN "adiamento" ; mkN "demora" ; mkN "lag" ; mkN "pausa" ; } ; --*
lin timeless_A = variants {mkA "impróprio" ; mkA "interminável" ; mkA "prematuro" ; mkA "sempiterno" ; } ; --*
lin time_limit_N = mkN "limit" ; --*
lin timeline_N = mkN "Cronologias" ; --*
lin timely_1_A = mkA "tempestivo" ; --*
lin timely_2_A = variants {mkA "oportuno" ; mkA "timed" ; } ; --*
lin timepiece_N = mkN "relógio" ; --*
lin times_1_N = variants {mkN "era" ; mkN "período" ; } ; --*
lin times_2_N = mkN "multiplicação" ; --*
lin timetable_1_N = mkN "horário" ; --*
lin timetable_2_N = mkN "horário" ; --*
lin timid_1_A = mkA "timorato" ; --*
lin timid_2_A = variants {mkA "inseguro" ; mkA "tímido" ; } ; --*
lin timing_1_N = mkN "cronometragem" ; --*
lin timolol_N = mkN "Timolol" ; --*
lin tin_1_N = variants {mkN "estanho" ; mkN "number" ; } ; --*
lin tin_1_V2 = mkV2 (mkV "cobrir") ; --*
lin tin_2_V2 = variants {mkV2 (mkV "enlatar") ; mkV2 (mkV "up") ; } ; --*
lin tin_3_N = variants {mkN "lata" ; mkN "vasilha" ; } ; --*
lin tin_4_N = variants {mkN "can" ; mkN "lata" ; mkN "vasilha" ; } ; --*
lin tinamou_N = mkN "perdiz" ; --*
lin tincture_2_N = variants {mkN "vestígio" ; mkN "vestígios" ; } ; --*
lin tincture_2_V2 = variants {mkV2 (mkV "matizar") ; mkV2 (mkV "tinturar") ; } ; --*
lin tincture_3_N = variants {mkN "matiz" ; mkN "tintura" ; mkN "tom" ; } ; --*
lin tincture_4_N = variants {mkN "tintura" ; mkN "Tintura" ; } ; --*
lin tinder_N = mkN "esporra" ; --*
lin tinea_1_N = variants {mkN "dermatofitose" ; mkN "micose" ; mkN "tinha" ; } ; --*
lin tine_N = mkN "dente" ; --*
lin tinfoil_2_N = mkN "foil" ; --*
lin tinge_1_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin tinge_1_V2 = mkV2 (mkV "colorir") ; --*
lin tinge_2_N = mkN "matiz" ; --*
lin tinge_2_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "tingir") ; } ; --*
lin tingle_1_N = variants {mkN "arrepio" ; mkN "Arrepio" ; mkN "calafrio" ; mkN "tremedeira" ; mkN "tremura" ; } ; --*
lin ting_N = mkN "tinido" ; --*
lin tinkle_N = mkN "tinido" ; --*
lin tinning_2_N = mkN "Folha-de-flandres" ; --*
lin tinnitus_N = variants {mkN "acúfeno" ; mkN "'tinnitus'" ; mkN "zumbido" ; } ; --*
lin tinny_2_A = mkA "brega" ; --*
lin tin_opener_N = mkN "opener" ; --*
lin tin_plate_1_N = variants {mkN "lata" ; mkN "plate" ; } ; --*
lin tinsmith_N = variants {mkN "funileiro" ; mkN "latoaria" ; } ; --*
lin tint_1_N = variants {mkN "matiz" ; mkN "tintura" ; mkN "tom" ; } ; --*
lin tint_1_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "tingir") ; } ; --*
lin tint_3_N = variants {mkN "sinal" ; mkN "sombra" ; mkN "traço" ; mkN "vestígio" ; } ; --*
lin tintinnabulation_N = mkN "anilhagem" ; --*
lin tiny_A = variants {mkA "diminuto" ; mkA "minúsculo" ; mkA "nanico" ; mkA "pequeno" ; } ; --*
lin tip_1_N = variants {mkN "pico" ; mkN "ponta" ; } ; --*
lin tip_2_N = mkN "gorjeta" ; --*
lin tip_3_N = variants {mkN "indicação" ; mkN "information" ; } ; --*
lin tip_3_V2 = mkV2 (mkV "gratificar") ; --*
lin tip_4_N = variants {mkN "pico" ; mkN "ponta" ; } ; --*
lin tip_4_V2 = mkV2 (mkV "derrubar") ; --*
lin tip_4_V = mkV "derrubar" ; --*
lin tip_5_N = variants {mkN "cima" ; mkN "cume" ; mkN "pico" ; mkN "topo" ; } ; --*
lin tip_5_V = variants {mkV "debruçar" ; mkV "inclinar" ; } ; --*
lin tip_6_V2 = mkV2 (mkV "andar") ; --*
lin tip_6_V = mkV "andar" ; --*
lin tip_7_V2 = mkV2 (mkV "bater") ; --*
lin tip_off_V2 = variants {mkV2 (mkV "avisar") ; mkV2 (mkV "off") ; } ; --*
lin tip_over_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin tip_over_V = variants {mkV "derrubar" ; mkV "over" ; } ; --*
lin tipper_2_N = variants {mkN "Dumper" ; mkN "lorry" ; mkN "tombador" ; mkN "truck" ; } ; --*
lin tipsy_1_A = variants {mkA "ligeiramente" ; mkA "tocado" ; } ; --*
lin tiptoe_1_V = mkV "andar" ; --*
lin tiptop_1_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin tiptop_2_N = mkN "craque" ; --*
lin tirade_N = mkN "diatribe" ; --*
lin tiramisu_N = variants {mkN "tiramisu" ; mkN "Tiramisu" ; mkN "Tiramisù" ; } ; --*
lin tire_2_V2 = variants {mkV2 (mkV "cansar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "exaurir-se") ; mkV2 (mkV "out") ; mkV2 (mkV "upon") ; } ; --*
lin tire_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "out") ; } ; --*
lin tire_4_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "cansar") ; mkV2 (mkV "chatear") ; mkV2 (mkV "entediar") ; mkV2 (mkV "fatigar") ; } ; --*
lin tired_1_A = variants {mkA "cansada" ; mkA "cansado" ; mkA "fatigado" ; } ; --*
lin tired_2_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin tiredness_N = variants {mkN "cansaço" ; mkN "esgotamento" ; mkN "estafa" ; mkN "fadiga" ; mkN "Fadiga" ; mkN "fatiga" ; } ; --*
lin tireless_1_A = variants {mkA "incansável" ; mkA "inesgotável" ; mkA "infatigável" ; } ; --*
lin tireless_2_A = variants {mkA "aplicado" ; mkA "assíduo" ; mkA "diligente" ; mkA "esforçado" ; mkA "laborioso" ; mkA "operoso" ; mkA "trabalhador" ; } ; --*
lin tire_N = mkN "pneu" ; --*
lin tire_of_V2 = mkV2 (mkV "fatigar") ; --*
lin tiresome_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin tiro_N = variants {mkN "novato" ; mkN "principiante" ; } ; --*
lin tisane_N = mkN "chá" ; --*
lin tissue_1_N = variants {mkN "tecido" ; mkN "Tecido" ; mkN "Tecidos" ; } ; --*
lin tissue_2_N = variants {mkN "folha" ; mkN "paper" ; } ; --*
lin tit_1_N = variants {mkN "mama" ; mkN "peito" ; mkN "seio" ; mkN "seios" ; mkN "teta" ; } ; --*
lin tit_2_N = variants {mkN "bico" ; mkN "chupadouro" ; mkN "chupeta" ; mkN "mama" ; mkN "mamilo" ; mkN "teta" ; } ; --*
lin tit_3_N = variants {mkN "abelharuco" ; mkN "chapim" ; mkN "milharós" ; } ; --*
lin titan_1_N = variants {mkN "gigante" ; mkN "monstro" ; mkN "titã" ; } ; --*
lin titan_2_N = mkN "Titã" ; --*
lin titan_3_N = variants {mkN "Titã" ; mkN "Titão" ; } ; --*
lin titanic_A = mkA "titânico" ; --*
lin titanium_N = variants {mkN "number" ; mkN "Titanio" ; mkN "titânio" ; } ; --*
lin titbit_N = variants {mkN "acepipe" ; mkN "guloseima" ; mkN "morsel" ; } ; --*
lin titer_1_N = mkN "titulação" ; --*
lin tithe_2_N = mkN "dízimo" ; --*
lin titillate_2_V2 = variants {mkV2 (mkV "excitar") ; mkV2 (mkV "titilar") ; } ; --*
lin titillating_2_A = mkA "erótico" ; --*
lin titillation_3_N = mkN "cócegas" ; --*
lin title_10_N = variants {mkN "reclamo" ; mkN "reivindicação" ; } ; --*
lin title_1_N = variants {mkN "cabeçalho" ; mkN "title" ; } ; --*
lin title_1_V3 = mkV3 (mkV "intitular") ; --*
lin title_2_N = mkN "título" ; --*
lin title_2_V3 = variants {mkV3 (mkV "denominar") ; mkV3 (mkV "intitular") ; } ; --*
lin title_3_N = mkN "título" ; --*
lin title_4_N = mkN "campeonato" ; --*
lin title_5_N = variants {mkN "ato" ; mkN "contrato" ; mkN "escritura" ; mkN "feito" ; mkN "of" ; } ; --*
lin title_6_N = variants {mkN "of" ; mkN "título" ; } ; --*
lin title_7_N = mkN "título" ; --*
lin title_8_N = mkN "crédito" ; --*
lin titmouse_N = variants {mkN "abelharuco" ; mkN "chapim" ; mkN "milharós" ; } ; --*
lin titration_N = variants {mkN "titulação" ; mkN "Titulação" ; } ; --*
lin tittle_N = variants {mkN "fragmento" ; mkN "pingo" ; mkN "pouco" ; } ; --*
lin tittle_tattle_N = variants {mkN "chat" ; mkN "fofoca" ; mkN "talk" ; mkN "wag" ; mkN "wagging" ; } ; --*
lin tittle_tattle_V = mkV "tagarelar" ; --*
lin titular_1_A = mkA "titular" ; --*
lin titular_5_A = mkA "titular" ; --*
lin tizzy_N = mkN "rebuliço" ; --*
lin tl_PN = variants {mkPN "number" ; mkPN "Talio" ; mkPN "tálio" ; } ; --*
lin toad_N = variants {mkN "Anfíbios" ; mkN "Anura" ; mkN "frog" ; mkN "râ" ; mkN "rã" ; mkN "rãs" ; } ; --*
lin toadstool_N = mkN "cogumelo" ; --*
lin toady_N = variants {mkN "adulador" ; mkN "bajulador" ; mkN "lambe-botas" ; mkN "puxa-saco" ; mkN "sicofanta" ; } ; --*
lin toast_1_N = variants {mkN "torrada" ; mkN "toste" ; } ; --*
lin toast_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "tostar") ; } ; --*
lin toast_2_V2 = mkV2 (mkV "brindar") ; --*
lin toast_4_N = mkN "brinde" ; --*
lin toaster_2_N = mkN "torradeira" ; --*
lin tobacco_1_N = variants {mkN "fumo" ; mkN "tabaco" ; mkN "Tabaco" ; } ; --*
lin tobacco_2_N = variants {mkN "plant" ; mkN "tabaco" ; } ; --*
lin tobacconist_2_N = variants {mkN "shop" ; mkN "Tabacaria" ; } ; --*
lin tobagonian_A = mkA "tobagoniano" ; --*
lin tobago_PN = mkPN "Tobago" ; --*
lin toccata_N = mkN "tocata" ; --*
lin to_date_Adv = variants {mkAdv "date" ; mkAdv "to" ; } ; --*
lin today_1_Adv = variants {mkAdv "actualmente" ; mkAdv "atualmente" ; mkAdv "hoje" ; mkAdv "presentemente" ; } ; --*
lin today_1_N = mkN "hoje" ; --*
lin today_2_Adv = mkAdv "hoje" ; --*
lin today_2_N = mkN "hoje" ; --*
lin to_do_N = variants {mkN "bagunça" ; mkN "burly" ; mkN "comoção" ; mkN "confusão" ; mkN "zona" ; } ; --*
lin toe_1_N = variants {mkN "dedo" ; mkN "Dedo" ; } ; --*
lin toe_3_N = mkN "dedo" ; --*
lin toenail_N = mkN "unha" ; --*
lin toga_N = mkN "toga" ; --*
lin together_3_Adv = variants {mkAdv "junta" ; mkAdv "junto" ; } ; --*
lin toggle_2_N = variants {mkN "interruptor" ; mkN "switch" ; } ; --*
lin togolese_A = mkA "togolês" ; --*
lin togolese_N = mkN "togolense" ; --*
lin togo_PN = variants {mkPN "Republic" ; mkPN "Togo" ; } ; --*
lin tog_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "vestir") ; } ; --*
lin toilet_1_N = variants {mkN "banheiro" ; mkN "casa" ; mkN "privada" ; } ; --*
lin toilet_2_N = variants {mkN "banheiro" ; mkN "vaso" ; } ; --*
lin toilet_paper_N = variants {mkN "paper" ; mkN "tissue" ; } ; --*
lin toilet_roll_N = mkN "roll" ; --*
lin toil_N = variants {mkN "mão-de-obra" ; mkN "trabalho" ; } ; --*
lin toilsome_A = variants {mkA "arduo" ; mkA "penoso" ; } ; --*
lin toil_V = variants {mkV "laborar" ; mkV "ralar" ; mkV "trabalhar" ; } ; --*
lin tokamak_N = mkN "Tokamak" ; --*
lin token_1_N = variants {mkN "selo" ; mkN "símbolo" ; } ; --*
lin token_3_N = mkN "ficha" ; --*
lin token_4_N = variants {mkN "recordação" ; mkN "suvenir" ; } ; --*
lin tokyo_PN = variants {mkPN "capital" ; mkPN "of" ; mkPN "Tóquio" ; } ; --*
lin tolerance_1_N = mkN "tolerância" ; --*
lin tolerance_2_N = mkN "tolerância" ; --*
lin tolerance_3_N = mkN "tolerância" ; --*
lin tolerance_4_N = mkN "tolerância" ; --*
lin tolerant_1_A = mkA "tolerante" ; --*
lin tolerant_3_A = mkA "liberal" ; --*
lin tolerant_5_A = variants {mkA "of" ; mkA "tolerante" ; } ; --*
lin tolerate_1_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "out") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; mkV2 (mkV "up") ; } ; --*
lin tolerate_2_V2 = mkV2 (mkV "tolerar") ; --*
lin tolerate_3_V2 = mkV2 (mkV "tolerar") ; --*
lin tolerate_4_V2 = variants {mkV2 (mkV "aguentar") ; mkV2 (mkV "agüentar") ; mkV2 (mkV "aturar") ; mkV2 (mkV "suportar") ; mkV2 (mkV "tolerar") ; } ; --*
lin toleration_1_N = mkN "tolerância" ; --*
lin toleration_2_N = mkN "Tolerância" ; --*
lin toll_1_N = variants {mkN "pedágio" ; mkN "portagem" ; } ; --*
lin toll_2_N = variants {mkN "custo" ; mkN "preço" ; } ; --*
lin tollbooth_1_N = mkN "pedágio" ; --*
lin tollhouse_N = mkN "pedágio" ; --*
lin toll_V = mkV "badalar" ; --*
lin tom_1_N = mkN "gato" ; --*
lin tom_1_PN = mkPN "gato" ; --*
lin tom_2_N = variants {mkN "cock" ; mkN "tom-tom" ; mkN "turkey" ; } ; --*
lin tom_2_PN = variants {mkPN "cock" ; mkPN "tom-tom" ; mkPN "turkey" ; } ; --*
lin tomato_1_N = variants {mkN "tomate" ; mkN "tomateiro" ; } ; --*
lin tomato_2_N = variants {mkN "apple" ; mkN "esculentum" ; mkN "plant" ; mkN "tomate" ; } ; --*
lin tombac_1_N = mkN "Tombac" ; --*
lin tomb_N = variants {mkN "sepultura" ; mkN "tumba" ; mkN "túmulo" ; } ; --*
lin tomboy_N = mkN "maria-rapaz" ; --*
lin tombstone_N = variants {mkN "estela" ; mkN "lápide" ; mkN "Lápide" ; } ; --*
lin tomcat_N = mkN "gato" ; --*
lin tome_N = variants {mkN "livro" ; mkN "volume" ; } ; --*
lin tomfoolery_N = variants {mkN "idiotice" ; mkN "tolice" ; } ; --*
lin tomfool_N = variants {mkN "bobo" ; mkN "estúpido" ; mkN "idiota" ; mkN "imbecil" ; mkN "tolo" ; } ; --*
lin tommy_rot_N = mkN "mexerico" ; --*
lin tomorrow_1_N = mkN "amanhã" ; --*
lin tomorrow_2_N = variants {mkN "amanhã" ; mkN "futuro" ; } ; --*
lin tomorrow_Adv = mkAdv "amanhã" ; --*
lin tomtit_N = variants {mkN "caeruleus" ; mkN "chapim-azul" ; mkN "tit" ; } ; --*
lin ton_1_N = variants {mkN "ton" ; mkN "tonelada" ; } ; --*
lin ton_2_N = variants {mkN "ton" ; mkN "tonelada" ; } ; --*
lin tonal_1_A = mkA "tonal" ; --*
lin tonal_2_A = mkA "tonal" ; --*
lin tonality_N = mkN "Tonalidade" ; --*
lin tone_1_N = variants {mkN "of" ; mkN "tom" ; } ; --*
lin tone_2_N = mkN "tom" ; --*
lin tone_2_V2 = mkV2 (mkV "modular") ; --*
lin tone_2_V = mkV "modular" ; --*
lin tone_3_N = variants {mkN "som" ; mkN "timbre" ; } ; --*
lin tone_4_N = variants {mkN "atmosfera" ; mkN "cara" ; mkN "tom" ; } ; --*
lin tone_5_N = variants {mkN "matiz" ; mkN "tintura" ; mkN "tom" ; } ; --*
lin tone_6_N = variants {mkN "nota" ; mkN "note" ; mkN "tom" ; } ; --*
lin tone_7_N = variants {mkN "som" ; mkN "tone" ; } ; --*
lin tone_deaf_A = mkA "sem" ; --*
lin tone_down_1_V2 = variants {mkV2 (mkV "abafar") ; mkV2 (mkV "amortecer") ; mkV2 (mkV "down") ; } ; --*
lin tone_down_2_V2 = variants {mkV2 (mkV "amansar") ; mkV2 (mkV "down") ; mkV2 (mkV "moderar") ; mkV2 (mkV "suavizar") ; } ; --*
lin tone_poem_N = mkN "poem" ; --*
lin tonga_1_PN = variants {mkPN "Islands" ; mkPN "of" ; mkPN "Tonga" ; } ; --*
lin tonga_2_PN = mkPN "Língua" ; --*
lin tongan_1_N = mkN "tonganês" ; --*
lin tongan_2_N = mkN "Língua" ; --*
lin tongan_A = mkA "tonganês" ; --*
lin tongs_N = variants {mkN "alicate" ; mkN "of" ; mkN "tenaz" ; } ; --*
lin tongue_1_N = mkN "língua" ; --*
lin tongue_2_N = variants {mkN "idioma" ; mkN "language" ; mkN "Lingua" ; mkN "língua" ; mkN "Língua" ; } ; --*
lin tongue_7_N = mkN "língua" ; --*
lin tonguefish_1_N = mkN "Cynoglossidae" ; --*
lin tongue_in_cheek_A = mkA "busseta" ; --*
lin tongueless_2_A = variants {mkA "mudo" ; mkA "sem" ; } ; --*
lin tonic_1_N = variants {mkN "Água" ; mkN "water" ; } ; --*
lin tonic_2_A = mkA "tonal" ; --*
lin tonic_2_N = variants {mkN "pop" ; mkN "refrigerante" ; mkN "water" ; } ; --*
lin tonic_3_N = variants {mkN "Tonica" ; mkN "Tónica" ; mkN "tônica" ; } ; --*
lin tonic_5_A = variants {mkA "fresco" ; mkA "refrescante" ; } ; --*
lin tonight_Adv = variants {mkAdv "esta" ; mkAdv "evening" ; mkAdv "night" ; } ; --*
lin tonight_N = mkN "nesta" ; --*
lin tonnage_1_N = variants {mkN "arqueação" ; mkN "duty" ; } ; --*
lin tonne_N = variants {mkN "ton" ; mkN "tonelada" ; } ; --*
lin tonometry_N = mkN "Tonometria" ; --*
lin tons_1_N = mkN "montão" ; --*
lin tonsil_1_N = variants {mkN "tonsil" ; mkN "tonsila" ; mkN "tônsila" ; } ; --*
lin tonsillitis_N = variants {mkN "amigdalite" ; mkN "tonsilite" ; } ; --*
lin tonsure_1_N = mkN "tonsura" ; --*
lin tonsure_2_N = mkN "tonsura" ; --*
lin too_AdA = variants {mkAdA "a" ; mkAdA "demais" ; mkAdA "excessivamente" ; mkAdA "medos" ; } ; --*
lin too_Adv = variants {mkAdv "ainda" ; mkAdv "idem" ; mkAdv "outrossim" ; mkAdv "também" ; mkAdv "well" ; } ; --*
lin tool_1_N = variants {mkN "ferramenta" ; mkN "implemento" ; mkN "instrumento" ; } ; --*
lin tool_2_N = variants {mkN "ferramenta" ; mkN "instrumento" ; } ; --*
lin tool_3_V2 = mkV2 (mkV "equipar") ; --*
lin tool_4_N = variants {mkN "cacete" ; mkN "caralho" ; mkN "jeba" ; mkN "pau" ; mkN "pénis" ; mkN "pica" ; mkN "picha" ; mkN "pinto" ; mkN "piroca" ; mkN "rola" ; mkN "vara" ; mkN "verga" ; } ; --*
lin toolbox_N = variants {mkN "cabinet" ; mkN "caixa" ; mkN "case" ; mkN "chest" ; } ; --*
lin toot_2_N = mkN "farra" ; --*
lin tooth_1_N = variants {mkN "dente" ; mkN "Dentes" ; } ; --*
lin tooth_2_N = mkN "dente" ; --*
lin tooth_3_N = mkN "dente" ; --*
lin tooth_5_N = mkN "dente" ; --*
lin toothache_N = variants {mkN "dentalgia" ; mkN "dor" ; } ; --*
lin toothbrush_1_N = mkN "escova" ; --*
lin toothed_2_A = mkA "dentado" ; --*
lin toothless_1_A = variants {mkA "banguelo" ; mkA "desdentado" ; } ; --*
lin toothpaste_N = variants {mkN "creme" ; mkN "Creme" ; mkN "dentifrício" ; mkN "dentífrico" ; mkN "pasta" ; } ; --*
lin toothpick_N = mkN "palito" ; --*
lin toothsome_2_A = variants {mkA "apetitoso" ; mkA "delicioso" ; mkA "gostoso" ; mkA "saboroso" ; } ; --*
lin toothsome_3_A = mkA "voluptário" ; --*
lin toot_V = mkV "buzinar" ; --*
lin top_10_N = mkN "blusa" ; --*
lin top_1_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "exceder") ; mkV2 (mkV "past") ; mkV2 (mkV "superar") ; mkV2 (mkV "transcender") ; } ; --*
lin top_2_N = variants {mkN "side" ; mkN "topo" ; } ; --*
lin top_3_N = variants {mkN "cima" ; mkN "cume" ; mkN "pico" ; mkN "topo" ; } ; --*
lin top_4_V2 = mkV2 (mkV "liderar") ; --*
lin top_5_N = variants {mkN "ápice" ; mkN "auge" ; } ; --*
lin top_8_N = variants {mkN "pião" ; mkN "top" ; } ; --*
lin top_9_N = mkN "tampa" ; --*
lin top_9_V2 = mkV2 (mkV "culminar") ; --*
lin topaz_2_N = mkN "topázio" ; --*
lin top_boot_N = variants {mkN "boot" ; mkN "coturno" ; } ; --*
lin topcoat_N = variants {mkN "casacão" ; mkN "paletó" ; mkN "sobretudo" ; mkN "Sobretudo" ; } ; --*
lin tope_V = variants {mkV "beber" ; mkV "tomar" ; } ; --*
lin topgallant_2_N = variants {mkN "joanete" ; mkN "mast" ; } ; --*
lin tophus_2_N = mkN "tártaro" ; --*
lin topi_2_N = variants {mkN "Damaliscus" ; mkN "lunatus" ; } ; --*
lin topiary_2_N = variants {mkN "topiária" ; mkN "Topiária" ; } ; --*
lin topic_1_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin topic_2_N = variants {mkN "assunto" ; mkN "matéria" ; mkN "tema" ; mkN "tópico" ; } ; --*
lin topicality_N = variants {mkN "atualidade" ; mkN "vigência" ; } ; --*
lin topographical_A = mkA "topográfico" ; --*
lin topographic_A = mkA "topográfico" ; --*
lin topography_1_N = variants {mkN "topografia" ; mkN "Topografia" ; } ; --*
lin topography_2_N = mkN "topografia" ; --*
lin topological_1_A = mkA "topológico" ; --*
lin topology_3_N = variants {mkN "situs" ; mkN "topologia" ; } ; --*
lin topology_4_N = variants {mkN "Topologia" ; mkN "topology" ; } ; --*
lin toponymy_1_N = mkN "toponímia" ; --*
lin toponymy_2_N = mkN "Toponímia" ; --*
lin topper_6_N = variants {mkN "cartola" ; mkN "hat" ; } ; --*
lin topple_1_V = mkV "derrubar" ; --*
lin topple_2_V2 = mkV2 (mkV "derrubar") ; --*
lin topple_2_V = mkV "derrubar" ; --*
lin topside_N = mkN "convés" ; --*
lin topsoil_N = variants {mkN "soil" ; mkN "solo" ; } ; --*
lin topspin_N = mkN "Topspin" ; --*
lin topsy_turvydom_N = variants {mkN "balbúrdia" ; mkN "caos" ; mkN "confusão" ; mkN "tumulto" ; } ; --*
lin toque_2_N = mkN "turbante" ; --*
lin torch_1_N = variants {mkN "archote" ; mkN "facho" ; mkN "lanterna" ; mkN "tocha" ; mkN "Tocha" ; } ; --*
lin torch_2_N = variants {mkN "mullein" ; mkN "rod" ; mkN "thapsus" ; mkN "Verbascum" ; } ; --*
lin torch_3_N = variants {mkN "lanterna" ; mkN "Lanterna" ; } ; --*
lin torch_4_N = mkN "maçarico" ; --*
lin toreador_N = mkN "toureiro" ; --*
lin torero_N = variants {mkN "Toureiro" ; mkN "Toureiros" ; } ; --*
lin torino_PN = mkPN "Turim" ; --*
lin torment_1_N = variants {mkN "martírio" ; mkN "tortura" ; } ; --*
lin torment_1_V2 = variants {mkV2 (mkV "atormentar") ; mkV2 (mkV "excruciar") ; mkV2 (mkV "torturar") ; } ; --*
lin torment_2_N = variants {mkN "agonia" ; mkN "angústia" ; mkN "tormento" ; mkN "transe" ; } ; --*
lin torment_2_V2 = variants {mkV2 (mkV "crucificar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "retalhar") ; mkV2 (mkV "tormentar") ; } ; --*
lin torment_3_N = mkN "agonia" ; --*
lin torment_3_V2 = variants {mkV2 (mkV "atormentar") ; mkV2 (mkV "excruciar") ; mkV2 (mkV "torturar") ; } ; --*
lin tornado_1_N = variants {mkN "ciclone" ; mkN "tornado" ; mkN "tornados" ; } ; --*
lin tornado_2_N = variants {mkN "cocaine" ; mkN "crack" ; } ; --*
lin toroid_2_N = mkN "toro" ; --*
lin toroidal_A = mkA "toroidal" ; --*
lin toronto_PN = mkPN "Toronto" ; --*
lin torpedo_1_N = variants {mkN "Assassinato" ; mkN "assassino" ; mkN "for" ; mkN "gun" ; mkN "man" ; mkN "pistoleiro" ; mkN "sicário" ; } ; --*
lin torpedo_6_N = variants {mkN "torpedo" ; mkN "Torpedos" ; } ; --*
lin torpedo_7_N = variants {mkN "ray" ; mkN "torpedo" ; } ; --*
lin torpedo_boat_N = mkN "boat" ; --*
lin torpedo_tube_N = mkN "tube" ; --*
lin torpedo_V2 = mkV2 (mkV "torpedear") ; --*
lin torpid_A = mkA "inerte" ; --*
lin torpidity_1_N = mkN "torpor" ; --*
lin torpor_1_N = mkN "torpor" ; --*
lin torque_N = mkN "torque" ; --*
lin torrent_1_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin torrent_3_N = mkN "dilúvio" ; --*
lin torrential_2_A = mkA "torrencial" ; --*
lin torrential_3_A = mkA "torrencial" ; --*
lin torrid_1_A = mkA "ardente" ; --*
lin torrid_2_A = mkA "tórrido" ; --*
lin torr_N = variants {mkN "Hg" ; mkN "of" ; mkN "torr" ; } ; --*
lin torsion_2_N = mkN "torque" ; --*
lin torso_N = variants {mkN "corpo" ; mkN "torso" ; mkN "tronco" ; mkN "Tronco" ; } ; --*
lin torticollis_N = mkN "Torcicolo" ; --*
lin tortilla_N = mkN "tortilla" ; --*
lin tortoise_N = variants {mkN "cágado" ; mkN "jabuti" ; mkN "tartaruga" ; mkN "tartarugas" ; } ; --*
lin tortuous_1_A = variants {mkA "convoluto" ; mkA "tortuoso" ; } ; --*
lin torture_1_N = variants {mkN "agonia" ; mkN "angústia" ; mkN "tormento" ; mkN "transe" ; } ; --*
lin torture_1_V2 = variants {mkV2 (mkV "atormentar") ; mkV2 (mkV "excruciar") ; mkV2 (mkV "torturar") ; } ; --*
lin torture_2_N = variants {mkN "martírio" ; mkN "tortura" ; } ; --*
lin torture_2_V2 = variants {mkV2 (mkV "atormentar") ; mkV2 (mkV "excruciar") ; mkV2 (mkV "torturar") ; } ; --*
lin torture_3_N = mkN "agonia" ; --*
lin torture_5_N = mkN "tortura" ; --*
lin torus_1_N = mkN "toro" ; --*
lin tory_1_N = mkN "Tory" ; --*
lin tosh_N = mkN "mexerico" ; --*
lin toss_1_V2 = variants {mkV2 (mkV "arremessar") ; mkV2 (mkV "jogar") ; } ; --*
lin toss_2_N = mkN "lance" ; --*
lin toss_2_V2 = mkV2 (mkV "tirar") ; --*
lin toss_3_V2 = variants {mkV2 (mkV "atirar") ; mkV2 (mkV "lançar") ; } ; --*
lin toss_4_V = variants {mkV "about" ; mkV "debulhar" ; mkV "esbordoar" ; mkV "sovar" ; mkV "trilhar" ; } ; --*
lin toss_5_V2 = variants {mkV2 (mkV "aside") ; mkV2 (mkV "away") ; mkV2 (mkV "descartar") ; mkV2 (mkV "out") ; } ; --*
lin toss_6_V2 = mkV2 (mkV "misturar") ; --*
lin tosser_1_N = mkN "punheteiro" ; --*
lin toss_off_2_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "matar") ; mkV2 (mkV "off") ; } ; --*
lin toss_out_V = variants {mkV "aside" ; mkV "away" ; mkV "descartar" ; mkV "out" ; } ; --*
lin tostada_2_N = mkN "torrada" ; --*
lin total_1_A = variants {mkA "inteira" ; mkA "inteiro" ; mkA "total" ; } ; --*
lin total_1_N = variants {mkN "soma" ; mkN "totalidade" ; } ; --*
lin total_1_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "up") ; } ; --*
lin total_2_A = variants {mkA "completo" ; mkA "total" ; } ; --*
lin total_2_N = variants {mkN "montante" ; mkN "número" ; mkN "soma" ; mkN "totalizar" ; } ; --*
lin total_2_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin totalitarian_1_A = mkA "totalitário" ; --*
lin totalitarian_2_A = mkA "totalitário" ; --*
lin totalitarianism_1_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; mkN "rule" ; mkN "stalinismo" ; mkN "Stalinismo" ; } ; --*
lin totalitarianism_2_N = variants {mkN "absolutismo" ; mkN "totalitarismo" ; mkN "Totalitarismo" ; } ; --*
lin totality_1_N = variants {mkN "total" ; mkN "totalidade" ; } ; --*
lin totality_2_N = mkN "totalidade" ; --*
lin totality_3_N = variants {mkN "soma" ; mkN "totalidade" ; } ; --*
lin totem_2_N = variants {mkN "totem" ; mkN "Totem" ; } ; --*
lin totipotency_1_N = mkN "Totipotência" ; --*
lin tot_up_V = variants {mkV "adicionar" ; mkV "somar" ; mkV "together" ; mkV "up" ; } ; --*
lin tot_V2 = variants {mkV2 (mkV "adicionar") ; mkV2 (mkV "somar") ; mkV2 (mkV "together") ; mkV2 (mkV "up") ; } ; --*
lin toucan_N = variants {mkN "tucano" ; mkN "Tucano" ; mkN "Tucanos" ; } ; --*
lin touch_10_N = variants {mkN "sensação" ; mkN "sensation" ; mkN "toque" ; } ; --*
lin touch_10_V = mkV "competir" ; --*
lin touch_11_V2 = variants {mkV2 (mkV "mexer") ; mkV2 (mkV "tocar") ; } ; --*
lin touch_12_V = variants {mkV "aludir" ; mkV "fazer" ; mkV "reportar-se" ; } ; --*
lin touch_13_V2 = mkV2 (mkV "comprender") ; --*
lin touch_14_V2 = mkV2 (mkV "tocar") ; --*
lin touch_15_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "tingir") ; } ; --*
lin touch_1_N = variants {mkN "tocar" ; mkN "toque" ; } ; --*
lin touch_1_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "tocar") ; } ; --*
lin touch_2_N = variants {mkN "modality" ; mkN "of" ; mkN "senses" ; mkN "toque" ; } ; --*
lin touch_2_V2 = mkV2 (mkV "apalpar") ; --*
lin touch_3_V2 = mkV2 (mkV "tocar") ; --*
lin touch_4_V = variants {mkV "concernir" ; mkV "doe" ; mkV "on" ; mkV "referir" ; mkV "relacionar" ; mkV "to" ; } ; --*
lin touch_5_N = variants {mkN "contato" ; mkN "toque" ; } ; --*
lin touch_5_V = variants {mkV "encostar" ; mkV "tocar" ; } ; --*
lin touch_6_N = variants {mkN "ácaro" ; mkN "fragmento" ; } ; --*
lin touch_6_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "impactar") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin touch_7_N = variants {mkN "contacto" ; mkN "contato" ; } ; --*
lin touch_8_V2 = variants {mkV2 (mkV "encostar") ; mkV2 (mkV "esbarrar") ; mkV2 (mkV "tocar") ; } ; --*
lin touch_9_V2 = variants {mkV2 (mkV "alcançar") ; mkV2 (mkV "encostar") ; mkV2 (mkV "to") ; } ; --*
lin touchable_A = variants {mkA "físico" ; mkA "tangível" ; } ; --*
lin touch_and_go_A = variants {mkA "arriscado" ; mkA "periculoso" ; mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin touchback_N = mkN "touchback" ; --*
lin touchdown_1_N = variants {mkN "aterrissagem" ; mkN "Touchdown" ; } ; --*
lin touchdown_2_N = mkN "aterragem" ; --*
lin touching_A = mkA "comovente" ; --*
lin touch_off_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin touch_on_1_V2 = mkV2 (mkV "on") ; --*
lin touch_on_2_V2 = variants {mkV2 (mkV "concernir") ; mkV2 (mkV "doe") ; mkV2 (mkV "on") ; mkV2 (mkV "referir") ; mkV2 (mkV "relacionar") ; mkV2 (mkV "to") ; } ; --*
lin touch_on_3_V2 = variants {mkV2 (mkV "consertar") ; mkV2 (mkV "emendar") ; mkV2 (mkV "on") ; mkV2 (mkV "reparar") ; mkV2 (mkV "up") ; } ; --*
lin touch_on_4_V2 = variants {mkV2 (mkV "afetar") ; mkV2 (mkV "impactar") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin touchstone_N = variants {mkN "critério" ; mkN "padrões" ; } ; --*
lin touchy_2_A = variants {mkA "cócegozo" ; mkA "sensitivo" ; } ; --*
lin tough_1_A = mkA "cabeçudo" ; --*
lin tough_2_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin tough_3_A = variants {mkA "grosso" ; mkA "resistente" ; } ; --*
lin tough_3_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin tough_4_A = mkA "resistente" ; --*
lin tough_9_A = mkA "frustrante" ; --*
lin toughen_V2 = mkV2 (mkV "endurecer") ; --*
lin toughie_1_N = variants {mkN "bandido" ; mkN "facinora" ; mkN "facínora" ; mkN "gângster" ; mkN "malfeitor" ; mkN "marginal" ; } ; --*
lin toughness_1_N = variants {mkN "capacidade" ; mkN "power" ; } ; --*
lin toulon_PN = mkPN "Toulon" ; --*
lin toulouse_PN = variants {mkPN "Tolosa" ; mkPN "Toulouse" ; } ; --*
lin tour_1_N = variants {mkN "caminhada" ; mkN "turnê" ; } ; --*
lin tour_2_N = variants {mkN "turno" ; mkN "vez" ; } ; --*
lin tour_de_force_N = mkN "de" ; --*
lin tourism_N = mkN "turismo" ; --*
lin touristed_1_A = mkA "turístico" ; --*
lin tourist_N = mkN "turista" ; --*
lin tourmaline_N = variants {mkN "tormalina" ; mkN "turmalina" ; } ; --*
lin tournament_1_N = mkN "torneio" ; --*
lin tournament_2_N = mkN "torneio" ; --*
lin tourney_N = mkN "torneio" ; --*
lin tourniquet_N = variants {mkN "bandage" ; mkN "torniquete" ; } ; --*
lin tours_PN = mkPN "Tours" ; --*
lin tour_V2 = mkV2 (mkV "excursionar") ; --*
lin tousle_V2 = variants {mkV2 (mkV "arrepiar") ; mkV2 (mkV "desgrenhar") ; mkV2 (mkV "despentear") ; mkV2 (mkV "emaranhar") ; mkV2 (mkV "eriçar") ; mkV2 (mkV "retorcer") ; } ; --*
lin tout_1_V2 = mkV2 (mkV "propagandear") ; --*
lin tout_2_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin tout_2_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin tout_ensemble_Adv = variants {mkAdv "ensemble" ; mkAdv "in" ; mkAdv "numa" ; mkAdv "the" ; } ; --*
lin towel_N = mkN "toalha" ; --*
lin towel_V2 = mkV2 (mkV "enxugar") ; --*
lin tower_1_N = variants {mkN "roque" ; mkN "torre" ; mkN "Torres" ; } ; --*
lin tower_2_N = mkN "coluna" ; --*
lin tower_3_N = mkN "rebocador" ; --*
lin tower_block_N = variants {mkN "arranha-céus" ; mkN "block" ; } ; --*
lin tower_V = variants {mkV "atirar-se" ; mkV "erguer-se" ; mkV "predominar" ; } ; --*
lin towing_path_N = variants {mkN "Caminho" ; mkN "path" ; } ; --*
lin town_1_N = variants {mkN "aldeia" ; mkN "arraial" ; mkN "burgo" ; mkN "povoado" ; mkN "vila" ; } ; --*
lin town_3_N = variants {mkN "lugarejo" ; mkN "vila" ; } ; --*
lin town_PN = variants {mkPN "Town" ; mkPN "Vilas" ; } ; --*
lin tow_N = variants {mkN "rebocador" ; mkN "reboque" ; } ; --*
lin township_N = variants {mkN "lugarejo" ; mkN "vila" ; } ; --*
lin towpath_N = variants {mkN "Caminho" ; mkN "path" ; } ; --*
lin tow_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "rebocar") ; } ; --*
lin toxaemia_1_N = variants {mkN "of" ; mkN "toxemia" ; } ; --*
lin toxemia_1_N = variants {mkN "of" ; mkN "toxemia" ; } ; --*
lin toxic_A = mkA "tóxico" ; --*
lin toxicity_1_N = mkN "Toxicidade" ; --*
lin toxicity_2_N = variants {mkN "toxicidade" ; mkN "toxidade" ; } ; --*
lin toxicologist_N = variants {mkN "toxicologista" ; mkN "toxicólogo" ; } ; --*
lin toxicology_N = variants {mkN "toxicologia" ; mkN "Toxicologia" ; } ; --*
lin toxin_N = variants {mkN "toxina" ; mkN "toxinas" ; mkN "Toxinas" ; } ; --*
lin toxoplasmosis_N = mkN "toxoplasmose" ; --*
lin toy_1_N = variants {mkN "brinquedo" ; mkN "Brinquedos" ; } ; --*
lin toy_1_V = variants {mkV "brincar" ; mkV "folgar" ; mkV "jogar" ; } ; --*
lin toy_2_V = mkV "brincar" ; --*
lin toy_3_V = variants {mkV "brincar" ; mkV "jogar" ; } ; --*
lin toy_4_N = mkN "miniatura" ; --*
lin toy_with_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "entreter") ; mkV2 (mkV "of") ; mkV2 (mkV "with") ; } ; --*
lin trabecula_N = mkN "Trabécula" ; --*
lin trace_1_N = variants {mkN "sinal" ; mkN "sombra" ; mkN "traço" ; mkN "vestígio" ; } ; --*
lin trace_1_V2 = variants {mkV2 (mkV "seguir") ; mkV2 (mkV "traçar") ; } ; --*
lin trace_2_N = variants {mkN "vestígio" ; mkN "vestígios" ; } ; --*
lin trace_2_V2 = variants {mkV2 (mkV "delinear") ; mkV2 (mkV "traçar") ; } ; --*
lin trace_3_V2 = mkV2 (mkV "retraçar") ; --*
lin trace_6_N = variants {mkN "rastro" ; mkN "vestígio" ; } ; --*
lin trace_7_V2 = mkV2 (mkV "traçar") ; --*
lin tracer_3_N = mkN "traçadores" ; --*
lin trachea_1_N = mkN "traqueia" ; --*
lin trachea_2_N = variants {mkN "traqueia" ; mkN "traquéia" ; } ; --*
lin tracheal_A = mkA "traqueal" ; --*
lin tracheitis_N = variants {mkN "traqueíte" ; mkN "Traqueíte" ; } ; --*
lin tracheostomy_1_N = mkN "traqueostomia" ; --*
lin trachoma_N = mkN "Tracoma" ; --*
lin track_10_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "track" ; } ; --*
lin track_11_N = mkN "carreira" ; --*
lin track_1_N = variants {mkN "caminho" ; mkN "curso" ; } ; --*
lin track_2_N = mkN "trilha" ; --*
lin track_2_V2 = mkV2 (mkV "monitorar") ; --*
lin track_3_N = mkN "via" ; --*
lin track_3_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin track_4_N = mkN "pista" ; --*
lin track_4_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin track_7_N = variants {mkN "track" ; mkN "trilha" ; } ; --*
lin track_9_N = mkN "trilho" ; --*
lin trackball_N = mkN "trackball" ; --*
lin track_down_V2 = variants {mkV2 (mkV "caçar") ; mkV2 (mkV "down") ; } ; --*
lin tracker_N = mkN "rastreador" ; --*
lin tract_1_N = variants {mkN "of" ; mkN "região" ; mkN "terreno" ; } ; --*
lin tract_2_N = mkN "trato" ; --*
lin tract_3_N = mkN "tratado" ; --*
lin tractable_1_A = mkA "tratável" ; --*
lin traction_1_N = variants {mkN "friction" ; mkN "tracção" ; mkN "Tracção" ; } ; --*
lin tractor_1_N = variants {mkN "tractor" ; mkN "trator" ; } ; --*
lin tractor_2_N = mkN "Trator" ; --*
lin tracy_PN = variants {mkPN "Spencer" ; mkPN "Tracy" ; } ; --*
lin trade_1_N = mkN "comércio" ; --*
lin trade_2_N = variants {mkN "arte" ; mkN "ofício" ; mkN "profissão" ; } ; --*
lin trade_3_N = variants {mkN "negociação" ; mkN "transação" ; } ; --*
lin trade_4_N = variants {mkN "comércio" ; mkN "deal" ; mkN "negócio" ; } ; --*
lin trade_4_V2 = variants {mkV2 (mkV "permutar") ; mkV2 (mkV "trocar") ; } ; --*
lin trade_4_V = variants {mkV "permutar" ; mkV "trocar" ; } ; --*
lin trade_5_N = mkN "ordem" ; --*
lin trade_5_V2 = mkV2 (mkV "vender") ; --*
lin trade_5_V = mkV "vender" ; --*
lin trade_6_N = variants {mkN "alísio" ; mkN "wind" ; } ; --*
lin trade_7_N = variants {mkN "permuta" ; mkN "troca" ; } ; --*
lin trademark_2_N = variants {mkN "marca" ; mkN "Marca" ; } ; --*
lin tradeoff_1_N = variants {mkN "compromisso" ; mkN "dilema" ; } ; --*
lin trader_N = variants {mkN "comerciante" ; mkN "mercador" ; mkN "negociante" ; } ; --*
lin tradesman_N = variants {mkN "comerciante" ; mkN "keeper" ; mkN "lojista" ; } ; --*
lin trades_union_N = variants {mkN "ordem" ; mkN "union" ; } ; --*
lin trade_unionism_N = variants {mkN "unionism" ; mkN "Unionismo" ; } ; --*
lin trade_unionist_N = variants {mkN "member" ; mkN "sindicalista" ; mkN "unionist" ; } ; --*
lin trade_union_N = variants {mkN "ordem" ; mkN "union" ; } ; --*
lin trade_wind_N = variants {mkN "alísio" ; mkN "wind" ; } ; --*
lin trading_N = variants {mkN "comércio" ; mkN "compra" ; } ; --*
lin tradition_1_N = mkN "tradição" ; --*
lin tradition_2_N = variants {mkN "costume" ; mkN "costumes" ; mkN "hábito" ; mkN "tradição" ; mkN "Tradições" ; } ; --*
lin traditional_1_A = mkA "tradicional" ; --*
lin traditional_2_A = mkA "tradicional" ; --*
lin traducer_N = variants {mkN "caluniador" ; mkN "difamador" ; } ; --*
lin traduce_V2 = variants {mkV2 (mkV "difamar") ; mkV2 (mkV "through") ; } ; --*
lin traffic_1_N = variants {mkN "circulação" ; mkN "tráfego" ; mkN "Transito" ; mkN "Tránsito" ; mkN "trânsito" ; mkN "Trânsito" ; } ; --*
lin traffic_1_V = mkV "traficar" ; --*
lin traffic_2_N = variants {mkN "tráfego" ; mkN "tráfico" ; mkN "trânsito" ; } ; --*
lin traffic_2_V = mkV "traficar" ; --*
lin trafficator_N = variants {mkN "indicator" ; mkN "seta" ; mkN "signal" ; } ; --*
lin trafficker_N = variants {mkN "comerciante" ; mkN "fornecedor" ; mkN "vendedor" ; } ; --*
lin tragedy_1_N = variants {mkN "calamidade" ; mkN "cataclismo" ; mkN "catástrofe" ; mkN "catástrofes" ; mkN "desastre" ; mkN "flagelo" ; mkN "tragédia" ; } ; --*
lin tragedy_2_N = mkN "tragédia" ; --*
lin tragic_1_A = mkA "trágico" ; --*
lin tragic_2_A = mkA "trágico" ; --*
lin tragicomedy_2_N = mkN "tragicomédia" ; --*
lin trail_1_N = mkN "trilha" ; --*
lin trail_1_V = variants {mkV "back" ; mkV "behind" ; mkV "ficar" ; } ; --*
lin trail_2_N = variants {mkN "caminho" ; mkN "Trilha" ; } ; --*
lin trail_2_V2 = variants {mkV2 (mkV "after") ; mkV2 (mkV "caçar") ; mkV2 (mkV "chase") ; mkV2 (mkV "seguir") ; } ; --*
lin trail_3_N = mkN "trilha" ; --*
lin trailblazer_2_N = variants {mkN "inovador" ; mkN "pioneiro" ; } ; --*
lin trailer_4_N = variants {mkN "Reboque" ; mkN "trailer" ; } ; --*
lin trailing_N = variants {mkN "rastreamento" ; mkN "rastreio" ; } ; --*
lin train_1_N = variants {mkN "comboio" ; mkN "train" ; mkN "trem" ; } ; --*
lin train_1_V2 = variants {mkV2 (mkV "instruir") ; mkV2 (mkV "treinar") ; } ; --*
lin train_2_N = mkN "série" ; --*
lin train_2_VV = mkVV (mkV "treinar") ; --*
lin train_3_N = variants {mkN "caravana" ; mkN "train" ; } ; --*
lin train_4_V2V = mkV2V (mkV "preparar") ; --*
lin train_5_V2 = variants {mkV2 (mkV "civilizar") ; mkV2 (mkV "educar") ; } ; --*
lin train_6_V2 = variants {mkV2 (mkV "aim") ; mkV2 (mkV "apontar") ; mkV2 (mkV "direcionar") ; mkV2 (mkV "mirar") ; } ; --*
lin train_7_V2 = variants {mkV2 (mkV "praticar") ; mkV2 (mkV "treinar") ; } ; --*
lin train_8_V = mkV "treinar" ; --*
lin train_as_V2 = mkV2 (mkV "treinar") ; --*
lin traineeFem_N = variants {mkN "estagiária" ; mkN "estagiário" ; } ; --*
lin traineeMasc_N = variants {mkN "estagiária" ; mkN "estagiário" ; } ; --*
lin trainer_1_N = variants {mkN "técnico" ; mkN "treinador" ; } ; --*
lin trainer_2_N = variants {mkN "simulador" ; mkN "simulator" ; } ; --*
lin training_1_N = variants {mkN "preparação" ; mkN "treino" ; } ; --*
lin training_2_N = variants {mkN "educação" ; mkN "instrução" ; } ; --*
lin trainman_N = variants {mkN "ferroviário" ; mkN "man" ; } ; --*
lin traipse_V = mkV "percorrer" ; --*
lin trait_N = variants {mkN "feição" ; mkN "peculiaridade" ; } ; --*
lin traitor_1_N = mkN "traidor" ; --*
lin traitor_2_N = variants {mkN "informante" ; mkN "traição" ; mkN "traidor" ; } ; --*
lin traitorous_A = variants {mkA "infiel" ; mkA "sem" ; } ; --*
lin trajectory_N = variants {mkN "trajectória" ; mkN "trajetória" ; } ; --*
lin tram_1_N = variants {mkN "teleférico" ; mkN "Teleféricos" ; mkN "tramway" ; } ; --*
lin tram_3_N = variants {mkN "bonde" ; mkN "car" ; mkN "elétrico" ; mkN "trole" ; mkN "trólebus" ; } ; --*
lin tram_car_2_N = variants {mkN "bonde" ; mkN "car" ; mkN "elétrico" ; mkN "trole" ; mkN "trólebus" ; } ; --*
lin trammel_1_V2 = variants {mkV2 (mkV "arapucar") ; mkV2 (mkV "armadilhar") ; } ; --*
lin trammel_2_V2 = variants {mkV2 (mkV "conter") ; mkV2 (mkV "limitar") ; mkV2 (mkV "restringir") ; } ; --*
lin trammel_4_N = variants {mkN "algema" ; mkN "cadeia" ; mkN "grilhão" ; } ; --*
lin tramp_1_N = variants {mkN "vagabunda" ; mkN "vagabundo" ; } ; --*
lin tramp_1_V = variants {mkV "andar" ; mkV "caminhar" ; } ; --*
lin tramp_3_N = mkN "Vagabundo" ; --*
lin tramp_4_V2 = variants {mkV2 (mkV "correr") ; mkV2 (mkV "errar") ; mkV2 (mkV "perambular") ; mkV2 (mkV "transmigrar") ; mkV2 (mkV "vadiar") ; mkV2 (mkV "vagabundear") ; mkV2 (mkV "vagar") ; mkV2 (mkV "vaguear") ; } ; --*
lin tramp_4_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin tramp_6_N = mkN "vagar" ; --*
lin trample_1_V = variants {mkV "marchar" ; mkV "pisotear" ; } ; --*
lin trample_2_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "calcar") ; mkV2 (mkV "pisotear") ; } ; --*
lin trample_3_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "down") ; } ; --*
lin trampoline_N = variants {mkN "trampolim" ; mkN "Trampolim" ; } ; --*
lin tramway_1_N = variants {mkN "teleférico" ; mkN "Teleféricos" ; mkN "tramway" ; } ; --*
lin trance_1_N = variants {mkN "hipnose" ; mkN "Trance" ; } ; --*
lin trance_2_N = variants {mkN "tontura" ; mkN "transe" ; } ; --*
lin trandolapril_N = mkN "trandolapril" ; --*
lin tranquil_1_A = variants {mkA "quieto" ; mkA "silenciosa" ; } ; --*
lin tranquil_2_A = variants {mkA "calma" ; mkA "calmo" ; mkA "sereno" ; mkA "sossegado" ; mkA "tranquilo" ; mkA "tranqüilo" ; } ; --*
lin tranquillity_1_N = mkN "paz" ; --*
lin tranquillity_2_N = variants {mkN "paz" ; mkN "quietude" ; mkN "silêncio" ; } ; --*
lin tranquillity_3_N = mkN "serenidade" ; --*
lin tranquillize_1_V2 = variants {mkV2 (mkV "acalmar") ; mkV2 (mkV "down") ; mkV2 (mkV "silenciar") ; mkV2 (mkV "tranquilizar") ; mkV2 (mkV "tranqüilizar") ; } ; --*
lin tranquillizer_1_N = variants {mkN "agent" ; mkN "barbitúrico" ; mkN "calmante" ; mkN "drug" ; } ; --*
lin transaction_N = mkN "transação" ; --*
lin transact_V2 = variants {mkV2 (mkV "tramitar") ; mkV2 (mkV "transacionar") ; } ; --*
lin transaminase_N = variants {mkN "aminotransferase" ; mkN "transaminase" ; } ; --*
lin transcend_1_V2 = variants {mkV2 (mkV "exceder") ; mkV2 (mkV "transcender") ; } ; --*
lin transcend_2_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "exceder") ; mkV2 (mkV "past") ; mkV2 (mkV "superar") ; mkV2 (mkV "transcender") ; } ; --*
lin transcendent_1_A = mkA "transcedente" ; --*
lin transcendent_2_A = mkA "transcedente" ; --*
lin transcendentalism_N = variants {mkN "philosophy" ; mkN "Transcendentalismo" ; } ; --*
lin transcontinental_A = mkA "transcontinental" ; --*
lin transcribe_2_V2 = mkV2 (mkV "transliterar") ; --*
lin transcriber_1_N = variants {mkN "tradutor" ; mkN "tradutora" ; } ; --*
lin transcript_2_N = mkN "cópia" ; --*
lin transcriptase_N = variants {mkN "ARN-polimerase" ; mkN "polymerase" ; } ; --*
lin transcription_1_N = variants {mkN "text" ; mkN "transcrição" ; } ; --*
lin transcription_2_N = mkN "transcrição" ; --*
lin transcription_4_N = variants {mkN "arranjo" ; mkN "transcrição" ; } ; --*
lin transcription_5_N = mkN "gravação" ; --*
lin transdermal_1_A = mkA "percutâneo" ; --*
lin transducer_N = mkN "transdutor" ; --*
lin transept_N = mkN "transepto" ; --*
lin transfer_1_N = variants {mkN "transferência" ; mkN "transporte" ; } ; --*
lin transfer_1_V = variants {mkV "redesignar" ; mkV "remanejar" ; mkV "transferir" ; } ; --*
lin transfer_2_V = variants {mkV "transferir" ; mkV "transmitir" ; mkV "trazer" ; } ; --*
lin transfer_3_N = mkN "transferência" ; --*
lin transfer_3_V = mkV "transplantar" ; --*
lin transfer_4_V = variants {mkV "transladar" ; mkV "transportar" ; mkV "trasladar" ; } ; --*
lin transfer_5_N = variants {mkN "generalização" ; mkN "of" ; } ; --*
lin transfer_5_V = mkV "transferir" ; --*
lin transfer_6_N = mkN "transferência" ; --*
lin transfer_6_V = variants {mkV "baldear" ; mkV "trocar" ; } ; --*
lin transfer_7_V = mkV "transmitir" ; --*
lin transfer_9_V = mkV "mudar-se" ; --*
lin transferase_N = variants {mkN "transferase" ; mkN "Transferases" ; } ; --*
lin transference_1_N = mkN "transferência" ; --*
lin transference_2_N = mkN "transferência" ; --*
lin transference_3_N = mkN "transferência" ; --*
lin transferrin_N = variants {mkN "globulin" ; mkN "Transferrina" ; } ; --*
lin transfiguration_1_N = variants {mkN "6" ; mkN "Day" ; mkN "Transfiguração" ; } ; --*
lin transfiguration_2_N = variants {mkN "of" ; mkN "Transfiguração" ; } ; --*
lin transfiguration_3_N = mkN "metamorfose" ; --*
lin transfigure_1_V2 = variants {mkV2 (mkV "glorificar") ; mkV2 (mkV "transfigurar") ; } ; --*
lin transfigure_2_V2 = variants {mkV2 (mkV "metamorfosear") ; mkV2 (mkV "transfigurar") ; } ; --*
lin transfix_1_V2 = variants {mkV2 (mkV "encantar") ; mkV2 (mkV "fascinar") ; } ; --*
lin transform_1_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "transformar") ; } ; --*
lin transform_2_V2 = variants {mkV2 (mkV "transformar") ; mkV2 (mkV "transmudar") ; mkV2 (mkV "transubstanciar") ; } ; --*
lin transform_3_V2 = variants {mkV2 (mkV "mudar") ; mkV2 (mkV "transformar") ; mkV2 (mkV "transmutar") ; } ; --*
lin transform_4_V2 = variants {mkV2 (mkV "mudar") ; mkV2 (mkV "traduzir") ; mkV2 (mkV "transformar") ; } ; --*
lin transform_5_V2 = mkV2 (mkV "transformar") ; --*
lin transformable_A = mkA "traduzível" ; --*
lin transformation_1_N = variants {mkN "mudança" ; mkN "transformação" ; mkN "transmutação" ; } ; --*
lin transformation_2_N = variants {mkN "transformação" ; mkN "Transformação" ; } ; --*
lin transformation_4_N = mkN "transformação" ; --*
lin transformation_5_N = mkN "transformação" ; --*
lin transformer_N = mkN "transformador" ; --*
lin transfusion_1_N = variants {mkN "transfusão" ; mkN "Transfusão" ; mkN "transfusion" ; } ; --*
lin transgress_1_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "infringir") ; mkV2 (mkV "ofender") ; mkV2 (mkV "pecar") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "transgredir") ; mkV2 (mkV "violar") ; } ; --*
lin transgress_3_V2 = mkV2 (mkV "pecar") ; --*
lin transgress_3_V = mkV "pecar" ; --*
lin transgress_4_V2 = mkV2 (mkV "transgredir") ; --*
lin transgress_4_V = mkV "transgredir" ; --*
lin transgression_1_N = mkN "transgressão" ; --*
lin transgression_2_N = mkN "transgressão" ; --*
lin transient_2_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "passageiro" ; mkA "temporário" ; mkA "transitório" ; } ; --*
lin transient_2_N = mkN "transiente" ; --*
lin transistor_N = mkN "transistor" ; --*
lin transit_1_N = mkN "teodolito" ; --*
lin transition_1_N = variants {mkN "passagem" ; mkN "transição" ; } ; --*
lin transition_2_N = variants {mkN "mudança" ; mkN "transição" ; } ; --*
lin transition_3_N = mkN "transição" ; --*
lin transition_4_N = mkN "modulação" ; --*
lin transition_5_N = mkN "transição" ; --*
lin transitional_A = mkA "transicional" ; --*
lin transitive_A = mkA "transitivo" ; --*
lin transitivity_1_N = mkN "transitiva" ; --*
lin transitivity_2_N = mkN "transitividade" ; --*
lin transitory_A = variants {mkA "efémero" ; mkA "efêmero" ; mkA "passageiro" ; mkA "temporário" ; mkA "transitório" ; } ; --*
lin translatable_1_A = mkA "traduzível" ; --*
lin translatable_2_A = mkA "traduzível" ; --*
lin translate_1_V = mkV "traduzir" ; --*
lin translate_2_V2 = variants {mkV2 (mkV "mudar") ; mkV2 (mkV "traduzir") ; mkV2 (mkV "transformar") ; } ; --*
lin translate_3_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "interpretar") ; mkV2 (mkV "traduzir") ; } ; --*
lin translate_5_V2 = mkV2 (mkV "transladar") ; --*
lin translate_5_V = mkV "transladar" ; --*
lin translate_9_V2 = mkV2 (mkV "traduzir") ; --*
lin translation_1_N = variants {mkN "interpretação" ; mkN "rendition" ; mkN "tradução" ; } ; --*
lin translation_2_N = mkN "translação" ; --*
lin translation_3_N = mkN "transformação" ; --*
lin translation_5_N = variants {mkN "tradução" ; mkN "Tradução" ; } ; --*
lin translation_6_N = mkN "tradução" ; --*
lin translation_7_N = mkN "deslocamento" ; --*
lin translator_1_N = variants {mkN "tradutor" ; mkN "tradutora" ; } ; --*
lin translator_2_N = variants {mkN "intéprete" ; mkN "intérprete" ; mkN "tradutor" ; } ; --*
lin translator_3_N = variants {mkN "program" ; mkN "tradutor" ; } ; --*
lin transliterate_V2 = mkV2 (mkV "transliterar") ; --*
lin transliteration_N = variants {mkN "transcrição" ; mkN "transliteração" ; mkN "Transliteração" ; } ; --*
lin translucent_A = mkA "translúcido" ; --*
lin transmission_2_N = mkN "transmissão" ; --*
lin transmission_3_N = mkN "transmissão" ; --*
lin transmission_4_N = variants {mkN "contágio" ; mkN "infecção" ; mkN "spillover" ; } ; --*
lin transmission_5_N = variants {mkN "system" ; mkN "transmissão" ; } ; --*
lin transmit_1_V2 = mkV2 (mkV "enviar") ; --*
lin transmit_2_V2 = variants {mkV2 (mkV "conduzir") ; mkV2 (mkV "transmitir") ; mkV2 (mkV "trazer") ; } ; --*
lin transmit_3_V2 = mkV2 (mkV "transmitir") ; --*
lin transmit_4_V2 = mkV2 (mkV "transmitir") ; --*
lin transmittance_N = mkN "transmissão" ; --*
lin transmitter_1_N = mkN "remetente" ; --*
lin transmitter_3_N = mkN "transmissor" ; --*
lin transmogrify_V2 = variants {mkV2 (mkV "metamorfosear") ; mkV2 (mkV "transfigurar") ; } ; --*
lin transmutable_A = mkA "traduzível" ; --*
lin transmutation_1_N = mkN "transmutação" ; --*
lin transmutation_2_N = variants {mkN "mudança" ; mkN "transformação" ; mkN "transmutação" ; } ; --*
lin transmute_1_V2 = variants {mkV2 (mkV "mudar") ; mkV2 (mkV "transformar") ; mkV2 (mkV "transmutar") ; } ; --*
lin transmute_2_V2 = variants {mkV2 (mkV "transformar") ; mkV2 (mkV "transmudar") ; mkV2 (mkV "transubstanciar") ; } ; --*
lin transparence_1_N = mkN "transparência" ; --*
lin transparence_2_N = mkN "transparência" ; --*
lin transparency_1_N = mkN "transparência" ; --*
lin transparency_2_N = mkN "transparência" ; --*
lin transparency_3_N = mkN "transparência" ; --*
lin transparent_1_A = variants {mkA "clear" ; mkA "límpido" ; mkA "transparente" ; } ; --*
lin transparent_2_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin transparent_4_A = mkA "transparente" ; --*
lin transpiration_1_N = mkN "transpiração" ; --*
lin transpiration_3_N = mkN "transpiração" ; --*
lin transpire_1_V2 = mkV2 (mkV "transpirar") ; --*
lin transpire_1_V = mkV "transpirar" ; --*
lin transpire_5_V2 = variants {mkV2 (mkV "suar") ; mkV2 (mkV "transpirar") ; } ; --*
lin transpire_5_V = variants {mkV "suar" ; mkV "transpirar" ; } ; --*
lin transpire_VS = mkVS (mkV "transpirar") ; --*
lin transplant_1_N = mkN "enxerto" ; --*
lin transplant_1_V2 = mkV2 (mkV "transplantar") ; --*
lin transplant_2_N = variants {mkN "transplant" ; mkN "transplantação" ; mkN "transplante" ; } ; --*
lin transplant_3_N = mkN "transplante" ; --*
lin transplant_3_V2 = mkV2 (mkV "transplantar") ; --*
lin transplant_3_V = mkV "transplantar" ; --*
lin transplant_4_V2 = mkV2 (mkV "mudar-se") ; --*
lin transplantation_1_N = variants {mkN "transplant" ; mkN "transplantação" ; mkN "transplante" ; } ; --*
lin transplantation_2_N = mkN "transplante" ; --*
lin transponder_N = mkN "transponder" ; --*
lin transport_1_N = variants {mkN "meios" ; mkN "modo" ; mkN "veículo" ; } ; --*
lin transport_1_V2 = mkV2 (mkV "transportar") ; --*
lin transport_2_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "levar") ; mkV2 (mkV "transportar") ; } ; --*
lin transport_3_N = variants {mkN "expedição" ; mkN "transportação" ; mkN "transporte" ; } ; --*
lin transport_3_V2 = mkV2 (mkV "encantar") ; --*
lin transport_4_N = variants {mkN "embevecimento" ; mkN "enlevo" ; mkN "êxtase" ; } ; --*
lin transport_4_V2 = variants {mkV2 (mkV "despachar") ; mkV2 (mkV "embarcar") ; mkV2 (mkV "enviar") ; mkV2 (mkV "expedir") ; mkV2 (mkV "transportar") ; mkV2 (mkV "trazer") ; } ; --*
lin transport_5_V2 = mkV2 (mkV "transmitir") ; --*
lin transport_6_N = variants {mkN "transferência" ; mkN "transporte" ; } ; --*
lin transportation_2_N = variants {mkN "transferência" ; mkN "transporte" ; } ; --*
lin transportation_3_N = mkN "tarifa" ; --*
lin transportation_4_N = variants {mkN "of" ; mkN "Transporte" ; } ; --*
lin transportation_5_N = variants {mkN "expedição" ; mkN "transportação" ; mkN "transporte" ; } ; --*
lin transportation_6_N = variants {mkN "deportação" ; mkN "exílio" ; } ; --*
lin transporter_3_N = variants {mkN "belt" ; mkN "correia" ; mkN "esteira" ; } ; --*
lin transpose_1_V2 = mkV2 (mkV "transpor") ; --*
lin transpose_2_V2 = mkV2 (mkV "mudar-se") ; --*
lin transpose_3_V2 = mkV2 (mkV "trocar") ; --*
lin transpose_7_V2 = mkV2 (mkV "transportar") ; --*
lin transpose_N = mkN "matriz" ; --*
lin transposition_6_N = mkN "transposição" ; --*
lin transposition_7_N = mkN "Transposição" ; --*
lin transsexual_1_N = mkN "transexual" ; --*
lin transsexualism_N = variants {mkN "Transexual" ; mkN "transexualidade" ; } ; --*
lin transubstantiation_1_N = mkN "transubstanciação" ; --*
lin transubstantiation_2_N = mkN "transmutação" ; --*
lin transudate_N = mkN "transudato" ; --*
lin transverse_1_A = variants {mkA "transversal" ; mkA "transverso" ; } ; --*
lin transvestism_1_N = variants {mkN "dressing" ; mkN "travestismo" ; } ; --*
lin transvestite_N = mkN "travesti" ; --*
lin tranylcypromine_N = mkN "Tranilcipromina" ; --*
lin trap_1_N = variants {mkN "arapuca" ; mkN "armadilha" ; mkN "rede" ; } ; --*
lin trap_1_V2 = variants {mkV2 (mkV "aprisionar") ; mkV2 (mkV "down") ; } ; --*
lin trap_2_V2 = variants {mkV2 (mkV "arapucar") ; mkV2 (mkV "armadilhar") ; } ; --*
lin trap_3_N = mkN "insídia" ; --*
lin trap_3_V2 = mkV2 (mkV "atrapar") ; --*
lin trap_5_N = variants {mkN "emboscada" ; mkN "Emboscada" ; mkN "in" ; mkN "tocaia" ; } ; --*
lin trap_6_N = variants {mkN "boca" ; mkN "goela" ; } ; --*
lin trap_8_N = variants {mkN "casamata" ; mkN "trap" ; } ; --*
lin trapeze_N = mkN "Trapézio" ; --*
lin trapezium_1_N = mkN "trapézio" ; --*
lin trapezium_3_N = variants {mkN "bone" ; mkN "trapézio" ; mkN "trapezium" ; } ; --*
lin trapezius_N = variants {mkN "muscle" ; mkN "Músculo" ; mkN "trapezius" ; } ; --*
lin trapezohedron_N = mkN "trapezoedro" ; --*
lin trapezoid_1_N = mkN "trapézio" ; --*
lin trapezoid_2_N = variants {mkN "bone" ; mkN "trapezoide" ; mkN "trapezoideum" ; } ; --*
lin trapezoidal_A = mkA "trapezoidal" ; --*
lin trash_1_N = variants {mkN "cama" ; mkN "detritos" ; mkN "lixo" ; mkN "resíduos" ; mkN "veículos" ; } ; --*
lin trash_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "destruir") ; } ; --*
lin trash_3_N = variants {mkN "besteira" ; mkN "besteirol" ; mkN "folharada" ; } ; --*
lin trash_4_N = variants {mkN "feed" ; mkN "hydrochloride" ; mkN "metanfetamina" ; mkN "Metanfetaminas" ; } ; --*
lin trashy_2_A = variants {mkA "espalhafatoso" ; mkA "mirabolante" ; mkA "vistoso" ; } ; --*
lin trauma_1_N = variants {mkN "dano" ; mkN "ferimentos" ; mkN "inchaço" ; mkN "lesão" ; mkN "mal" ; mkN "traumatismo" ; } ; --*
lin trauma_2_N = mkN "trauma" ; --*
lin traumatic_1_A = mkA "traumático" ; --*
lin traumatic_2_A = mkA "traumático" ; --*
lin travail_2_N = variants {mkN "empenho" ; mkN "esforço" ; mkN "grease" ; } ; --*
lin travel_1_N = variants {mkN "travessia" ; mkN "viagem" ; } ; --*
lin travel_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin travel_2_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "viajar") ; } ; --*
lin travel_2_V = variants {mkV "andar" ; mkV "viajar" ; } ; --*
lin travel_3_N = mkN "locomoção" ; --*
lin travel_3_V2 = mkV2 (mkV "viajar") ; --*
lin travel_3_V = mkV "viajar" ; --*
lin travel_4_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "ir") ; mkV2 (mkV "viajar") ; } ; --*
lin travel_5_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "ir") ; mkV2 (mkV "viajar") ; } ; --*
lin travel_5_V = variants {mkV "andar" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin travel_6_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "ir") ; mkV2 (mkV "viajar") ; } ; --*
lin travel_6_V = variants {mkV "around" ; mkV "ir" ; mkV "viajar" ; } ; --*
lin traveler_N = variants {mkN "turista" ; mkN "viajante" ; } ; --*
lin travelled_A = mkA "viajado" ; --*
lin traveller_N = variants {mkN "turista" ; mkN "viajante" ; } ; --*
lin travelling_N = variants {mkN "travessia" ; mkN "viagem" ; } ; --*
lin travelogue_1_N = mkN "Travelogue" ; --*
lin traverse_1_V2 = variants {mkV2 (mkV "across") ; mkV2 (mkV "atravessar") ; mkV2 (mkV "over") ; mkV2 (mkV "through") ; } ; --*
lin traverse_2_V2 = mkV2 (mkV "abranger") ; --*
lin travesty_1_N = variants {mkN "comédia" ; mkN "comedy" ; mkN "farsa" ; } ; --*
lin travesty_2_N = mkN "paródia" ; --*
lin trawl_2_N = variants {mkN "net" ; mkN "rasca" ; } ; --*
lin trawler_2_N = mkN "arrastão" ; --*
lin trawl_net_N = variants {mkN "net" ; mkN "rasca" ; } ; --*
lin tray_N = variants {mkN "bandeja" ; mkN "Bandeja" ; } ; --*
lin treacherous_1_A = mkA "traiçoeiro" ; --*
lin treacherous_2_A = variants {mkA "perfido" ; mkA "pérfido" ; mkA "traiçoeiro" ; } ; --*
lin treachery_1_N = variants {mkN "perfídia" ; mkN "traição" ; } ; --*
lin treachery_2_N = mkN "traição" ; --*
lin treacle_1_N = variants {mkN "melaço" ; mkN "syrup" ; } ; --*
lin tread_1_N = variants {mkN "passo" ; mkN "pernada" ; } ; --*
lin tread_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "pisar" ; } ; --*
lin tread_2_V = variants {mkV "marchar" ; mkV "pisotear" ; } ; --*
lin tread_4_N = mkN "degrau" ; --*
lin treadle_N = variants {mkN "lever" ; mkN "pedal" ; } ; --*
lin treadmill_1_N = variants {mkN "esteira" ; mkN "Esteira" ; } ; --*
lin treason_1_N = variants {mkN "majesty" ; mkN "traição" ; mkN "treason" ; } ; --*
lin treason_2_N = mkN "traição" ; --*
lin treason_3_N = mkN "traição" ; --*
lin treasonable_A = variants {mkA "infiel" ; mkA "sem" ; } ; --*
lin treasonous_A = variants {mkA "infiel" ; mkA "sem" ; } ; --*
lin treasure_1_N = variants {mkN "tesouro" ; mkN "wealth" ; } ; --*
lin treasure_1_V2 = variants {mkV2 (mkV "apreciar") ; mkV2 (mkV "valorizar") ; } ; --*
lin treasure_2_N = mkN "tesouro" ; --*
lin treasure_2_V2 = variants {mkV2 (mkV "adorar") ; mkV2 (mkV "apreciar") ; mkV2 (mkV "dear") ; mkV2 (mkV "for") ; } ; --*
lin treasure_3_N = mkN "tesouro" ; --*
lin treasure_4_N = mkN "tesouro" ; --*
lin treasurer_N = variants {mkN "officer" ; mkN "tesoureiro" ; } ; --*
lin treasury_5_N = variants {mkN "Department" ; mkN "of" ; mkN "States" ; mkN "tesouro" ; } ; --*
lin treasury_6_N = mkN "tesouraria" ; --*
lin treat_1_N = mkN "guloseima" ; --*
lin treat_1_V2 = variants {mkV2 (mkV "by") ; mkV2 (mkV "tratar") ; } ; --*
lin treat_2_N = mkN "bom" ; --*
lin treat_3_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "tratar") ; } ; --*
lin treat_4_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "endereçar") ; mkV2 (mkV "falar") ; mkV2 (mkV "lidar") ; mkV2 (mkV "tratar") ; } ; --*
lin treat_8_V2 = mkV2 (mkV "tratar") ; --*
lin treatise_N = mkN "tratado" ; --*
lin treatment_1_N = mkN "tratamento" ; --*
lin treatment_2_N = mkN "tratamento" ; --*
lin treatment_3_N = mkN "tratamento" ; --*
lin treatment_4_N = variants {mkN "discurso" ; mkN "discussão" ; } ; --*
lin treaty_N = variants {mkN "acordo" ; mkN "convenção" ; mkN "convênio" ; mkN "pacto" ; mkN "tratado" ; } ; --*
lin treble_2_A = mkA "triplo" ; --*
lin treble_2_V2 = mkV2 (mkV "triplicar") ; --*
lin treble_3_A = mkA "triplo" ; --*
lin treble_4_A = variants {mkA "dúplice" ; mkA "duplo" ; } ; --*
lin treble_N = mkN "soprano" ; --*
lin tree_1_N = mkN "árvore" ; --*
lin tree_1_V2 = variants {mkV2 (mkV "acuar") ; mkV2 (mkV "emboscar") ; mkV2 (mkV "encurralar") ; } ; --*
lin tree_2_N = variants {mkN "árvore" ; mkN "diagram" ; } ; --*
lin tree_2_V2 = mkV2 (mkV "arborizar") ; --*
lin treehopper_N = mkN "Membracidae" ; --*
lin trefoil_1_N = variants {mkN "trevo" ; mkN "trifólio" ; } ; --*
lin trefoil_2_N = mkN "trevo" ; --*
lin tremble_N = mkN "trema" ; --*
lin tremble_V = variants {mkV "estremecer" ; mkV "tiritar" ; mkV "tremer" ; } ; --*
lin tremendous_1_A = variants {mkA "enorme" ; mkA "imenso" ; mkA "muitogrande" ; mkA "tremendo" ; mkA "vasto" ; } ; --*
lin tremendous_2_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin tremendous_3_A = mkA "horrível" ; --*
lin tremolite_N = mkN "tremolite" ; --*
lin tremolo_2_N = mkN "Tremolo" ; --*
lin tremor_1_N = mkN "tremor" ; --*
lin tremor_2_N = mkN "tremor" ; --*
lin trench_1_N = mkN "vala" ; --*
lin trench_3_N = mkN "trincheira" ; --*
lin trench_5_V2 = mkV2 (mkV "valar") ; --*
lin trenchancy_N = mkN "incisividade" ; --*
lin trencherman_N = variants {mkN "guloso" ; mkN "rapa" ; } ; --*
lin trend_1_N = variants {mkN "moda" ; mkN "tendência" ; } ; --*
lin trend_2_N = mkN "curso" ; --*
lin trend_3_N = mkN "tendência" ; --*
lin trend_4_N = variants {mkN "estilo" ; mkN "moda" ; mkN "tendências" ; } ; --*
lin trend_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin trendy_A = mkA "do" ; --*
lin trespass_2_N = variants {mkN "intrusão" ; mkN "invasão" ; mkN "violação" ; } ; --*
lin trespass_2_V = variants {mkV "advantage" ; mkV "infrinjir" ; } ; --*
lin trespass_4_V = mkV "pecar" ; --*
lin trespass_5_V = mkV "transgredir" ; --*
lin tress_N = variants {mkN "Nó" ; mkN "trança" ; } ; --*
lin trey_1_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin triad_1_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin triad_2_N = mkN "tríade" ; --*
lin triad_3_N = variants {mkN "tríade" ; mkN "trindade" ; mkN "trio" ; } ; --*
lin triad_4_N = variants {mkN "chord" ; mkN "Tríade" ; } ; --*
lin triage_N = mkN "triagem" ; --*
lin trial_1_N = mkN "teste" ; --*
lin trial_2_N = variants {mkN "ensaio" ; mkN "prova" ; mkN "run" ; } ; --*
lin trial_3_N = variants {mkN "esforço" ; mkN "tentativa" ; mkN "teste" ; } ; --*
lin trial_4_N = variants {mkN "julgamento" ; mkN "processo" ; mkN "Processo" ; } ; --*
lin trial_6_N = mkN "tribulação" ; --*
lin triangle_1_N = variants {mkN "Triangulo" ; mkN "triângulo" ; mkN "Triângulo" ; } ; --*
lin triangle_2_N = mkN "triângulo" ; --*
lin triangle_3_N = variants {mkN "Constelação" ; mkN "triângulo" ; mkN "Triangulum" ; } ; --*
lin triangle_4_N = mkN "triângulo" ; --*
lin triangle_5_N = mkN "triângulo" ; --*
lin triangular_1_A = mkA "triangular" ; --*
lin triangular_2_A = mkA "triangular" ; --*
lin triangulation_1_N = variants {mkN "triangulação" ; mkN "Triangulação" ; } ; --*
lin triangulation_2_N = mkN "triangulação" ; --*
lin triazine_N = mkN "triazina" ; --*
lin triazolam_N = mkN "Triazolam" ; --*
lin tribadism_N = mkN "Tribadismo" ; --*
lin tribal_A = mkA "tribal" ; --*
lin tribe_1_N = variants {mkN "gente" ; mkN "tribo" ; } ; --*
lin tribe_2_N = variants {mkN "of" ; mkN "tribo" ; } ; --*
lin tribe_3_N = mkN "tribo" ; --*
lin tribe_4_N = variants {mkN "clã" ; mkN "familia" ; mkN "família" ; mkN "group" ; mkN "tribo" ; } ; --*
lin tribology_N = variants {mkN "tribologia" ; mkN "Tribologia" ; } ; --*
lin tribulation_N = mkN "tribulação" ; --*
lin tribunal_N = mkN "tribunal" ; --*
lin tributary_1_A = mkA "tributário" ; --*
lin tributary_3_A = mkA "favorável" ; --*
lin tributary_N = variants {mkN "afluente" ; mkN "confluente" ; } ; --*
lin tribute_1_N = mkN "tributo" ; --*
lin tribute_2_N = mkN "tributo" ; --*
lin tribute_3_N = mkN "tributo" ; --*
lin trice_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin triceps_N = mkN "tríceps" ; --*
lin triceratops_N = mkN "tricerátopo" ; --*
lin trichinosis_1_N = variants {mkN "trichinosa" ; mkN "triquinose" ; } ; --*
lin trichotillomania_N = mkN "tricotilomania" ; --*
lin trichromatic_A = mkA "tricolor" ; --*
lin trichuriasis_N = mkN "Tricuríase" ; --*
lin trick_1_N = variants {mkN "one" ; mkN "truque" ; } ; --*
lin trick_4_N = variants {mkN "gozação" ; mkN "sacanagem" ; mkN "travessura" ; mkN "trote" ; } ; --*
lin trick_5_N = variants {mkN "ilusão" ; mkN "magia" ; mkN "trick" ; mkN "truque" ; } ; --*
lin trickery_1_N = variants {mkN "artifício" ; mkN "artimanha" ; mkN "panky" ; mkN "subterfúgio" ; } ; --*
lin trickery_2_N = variants {mkN "artimanha" ; mkN "astúcia" ; } ; --*
lin trickle_N = mkN "drible" ; --*
lin trickle_V = mkV "correr" ; --*
lin trickster_2_N = mkN "trapaceiro" ; --*
lin trickster_3_N = mkN "trickster" ; --*
lin tricksy_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin tricky_1_A = variants {mkA "astuto" ; mkA "escorregadio" ; } ; --*
lin tricky_2_A = mkA "complicada" ; --*
lin tricky_3_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin triclinic_A = mkA "triclínico" ; --*
lin tricolor_N = mkN "tricolor" ; --*
lin tricolour_N = mkN "tricolor" ; --*
lin tricuspid_A = mkA "tricúspide" ; --*
lin tricycle_N = mkN "triciclo" ; --*
lin tricyclic_N = variants {mkN "antidepressant" ; mkN "Antidepressivo" ; } ; --*
lin trident_N = mkN "tridente" ; --*
lin tridymite_N = mkN "Tridimita" ; --*
lin triennial_A = mkA "trienal" ; --*
lin trifle_1_N = mkN "trifle" ; --*
lin trifle_1_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desperdiçar") ; } ; --*
lin trifle_1_V = variants {mkV "away" ; mkV "desperdiçar" ; } ; --*
lin trifle_2_N = mkN "minúncia" ; --*
lin trifle_3_N = variants {mkN "bagatela" ; mkN "beer" ; mkN "minúcia" ; mkN "ninharia" ; } ; --*
lin trifle_3_V = mkV "brincar" ; --*
lin trigeminal_1_N = variants {mkN "cranial" ; mkN "nerve" ; mkN "nervo" ; mkN "trigeminus" ; } ; --*
lin trigger_1_N = variants {mkN "gatilho" ; mkN "trigger" ; } ; --*
lin trigger_1_V2 = variants {mkV2 (mkV "activar") ; mkV2 (mkV "desencadear") ; mkV2 (mkV "off") ; } ; --*
lin trigger_3_N = mkN "indução" ; --*
lin trigger_happy_1_A = mkA "veemente" ; --*
lin trigger_happy_2_A = variants {mkA "feroz" ; mkA "veemente" ; mkA "violento" ; } ; --*
lin triglyceride_N = mkN "Triacilglicerol" ; --*
lin trigon_1_N = variants {mkN "Triangulo" ; mkN "triângulo" ; mkN "Triângulo" ; } ; --*
lin trigonometric_A = mkA "trigonométrico" ; --*
lin trigonometry_N = variants {mkN "trigonometria" ; mkN "Trigonometria" ; } ; --*
lin trigram_N = mkN "trigrama" ; --*
lin triiodothyronine_N = variants {mkN "Triiodotironina" ; mkN "Tri-iodotironina" ; } ; --*
lin trilateral_2_A = mkA "triangular" ; --*
lin trilingual_A = mkA "trilíngüe" ; --*
lin trill_1_N = mkN "trilo" ; --*
lin trill_1_V2 = mkV2 (mkV "trilar") ; --*
lin trill_2_V2 = mkV2 (mkV "trinar") ; --*
lin trill_2_V = mkV "trinar" ; --*
lin trillion_1_N = variants {mkN "milhão" ; mkN "milhentos" ; mkN "zilhão" ; } ; --*
lin trillion_2_A = mkA "trilhão" ; --*
lin trillion_2_N = variants {mkN "million" ; mkN "trilhão" ; } ; --*
lin trilobite_N = variants {mkN "trilobita" ; mkN "Trilobita" ; } ; --*
lin trilogy_N = mkN "trilogia" ; --*
lin trim_1_V2 = variants {mkV2 (mkV "podar") ; mkV2 (mkV "recortar") ; } ; --*
lin trim_2_V2 = mkV2 (mkV "decorar") ; --*
lin trim_3_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin trim_5_V = mkV "aparar" ; --*
lin trim_6_V2 = variants {mkV2 (mkV "adornar") ; mkV2 (mkV "enfeitar") ; } ; --*
lin trim_6_V = variants {mkV "adornar" ; mkV "enfeitar" ; } ; --*
lin trim_7_V2 = variants {mkV2 (mkV "aparar") ; mkV2 (mkV "back") ; mkV2 (mkV "cortar") ; mkV2 (mkV "podar") ; } ; --*
lin trim_8_V2 = variants {mkV2 (mkV "barbear") ; mkV2 (mkV "recortar") ; } ; --*
lin trimer_N = mkN "trímero" ; --*
lin trimester_1_N = mkN "trimestre" ; --*
lin trimester_2_N = mkN "trimestre" ; --*
lin trimmer_3_N = variants {mkN "capacitor" ; mkN "trimpot" ; } ; --*
lin trinidad_PN = mkPN "Trinidad" ; --*
lin trinity_1_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin trinity_2_N = variants {mkN "Trindade" ; mkN "Trinity" ; } ; --*
lin trinity_3_N = variants {mkN "tríade" ; mkN "trindade" ; mkN "trio" ; } ; --*
lin trio_1_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin trio_2_N = variants {mkN "trio" ; mkN "Trio" ; } ; --*
lin trio_4_N = mkN "tríade" ; --*
lin trio_5_N = variants {mkN "tríade" ; mkN "trindade" ; mkN "trio" ; } ; --*
lin triode_N = mkN "Tríodo" ; --*
lin trip_1_N = mkN "excursão" ; --*
lin trip_1_V = mkV "tropeçar" ; --*
lin trip_3_V = mkV "viajar" ; --*
lin trip_4_V = variants {mkV "activar" ; mkV "desencadear" ; mkV "off" ; } ; --*
lin trip_7_N = mkN "tropeço" ; --*
lin tripartite_A = mkA "tripartido" ; --*
lin tripe_1_N = mkN "Tripas" ; --*
lin tripe_2_N = variants {mkN "besteira" ; mkN "besteirol" ; mkN "folharada" ; } ; --*
lin triple_1_A = mkA "triplo" ; --*
lin triple_1_N = variants {mkN "hit" ; mkN "triplo" ; } ; --*
lin triple_2_A = mkA "triplo" ; --*
lin triple_2_N = mkN "tríade" ; --*
lin triple_3_N = mkN "triplo" ; --*
lin triplet_1_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin triplet_2_N = variants {mkN "trigémeo" ; mkN "trigêmeo" ; } ; --*
lin triplet_3_N = mkN "tríade" ; --*
lin tripletail_N = mkN "Lobotidae" ; --*
lin triple_V2 = mkV2 (mkV "triplicar") ; --*
lin triplex_A = mkA "triplo" ; --*
lin tripod_N = variants {mkN "tripé" ; mkN "Tripé" ; } ; --*
lin triptych_N = mkN "tríptico" ; --*
lin trip_up_1_V2 = variants {mkV2 (mkV "pegar") ; mkV2 (mkV "up") ; } ; --*
lin trip_up_V = variants {mkV "enganar-se" ; mkV "up" ; } ; --*
lin trireme_N = variants {mkN "trirreme" ; mkN "trirremo" ; } ; --*
lin triskaidekaphobia_N = mkN "triscaidecafobia" ; --*
lin triskelion_N = mkN "tríscele" ; --*
lin trismus_N = variants {mkN "trismo" ; mkN "Trismo" ; } ; --*
lin trisomy_N = mkN "trissomia" ; --*
lin trite_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin tritheism_N = variants {mkN "triteísmo" ; mkN "Triteísmo" ; } ; --*
lin tritium_N = mkN "trítio" ; --*
lin triton_1_N = mkN "Tritão" ; --*
lin triton_2_N = mkN "Tritão" ; --*
lin triton_4_N = mkN "Tritão" ; --*
lin triumph_1_N = mkN "vitória" ; --*
lin triumph_1_V = variants {mkV "triunfar" ; mkV "vencer" ; } ; --*
lin triumph_2_N = variants {mkN "triunfo" ; mkN "vitória" ; } ; --*
lin triumph_2_V = variants {mkV "regojizar" ; mkV "triunfar" ; } ; --*
lin triumph_3_V = variants {mkV "gabar" ; mkV "triunfar" ; } ; --*
lin triumph_4_V = variants {mkV "exultar" ; mkV "rejubilar" ; } ; --*
lin triumphal_2_A = variants {mkA "exultante" ; mkA "jubiloso" ; mkA "triunfador" ; mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin triumphant_1_A = variants {mkA "exultante" ; mkA "jubiloso" ; mkA "triunfador" ; mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin triumphant_2_A = variants {mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin triumvirate_N = mkN "triunvirato" ; --*
lin trivial_1_A = variants {mkA "insignificante" ; mkA "pequeno" ; mkA "trivial" ; } ; --*
lin trivial_3_A = mkA "trivial" ; --*
lin triviality_2_N = mkN "minúncia" ; --*
lin triviality_3_N = variants {mkN "bagatela" ; mkN "beer" ; mkN "minúcia" ; mkN "ninharia" ; } ; --*
lin trivium_N = mkN "trivium" ; --*
lin trochee_N = mkN "troqueu" ; --*
lin trochlear_1_N = variants {mkN "cranial" ; mkN "nerve" ; mkN "Nervo" ; } ; --*
lin troglodyte_1_N = mkN "eremita" ; --*
lin troglodyte_2_N = variants {mkN "cavernícola" ; mkN "dweller" ; mkN "man" ; mkN "troglodita" ; } ; --*
lin troika_1_N = mkN "tróica" ; --*
lin troika_2_N = variants {mkN "3" ; mkN "três" ; mkN "trio" ; } ; --*
lin trojan_1_N = variants {mkN "troiana" ; mkN "troiano" ; mkN "Troianos" ; } ; --*
lin trojan_A = mkA "troiano" ; --*
lin troll_1_N = variants {mkN "troll" ; mkN "Troll" ; } ; --*
lin trolleybus_N = variants {mkN "coach" ; mkN "Trolebus" ; mkN "trolley" ; } ; --*
lin trolley_car_N = variants {mkN "bonde" ; mkN "car" ; mkN "elétrico" ; mkN "trole" ; mkN "trólebus" ; } ; --*
lin trolley_N = variants {mkN "bonde" ; mkN "car" ; mkN "elétrico" ; mkN "trole" ; mkN "trólebus" ; } ; --*
lin trollop_1_N = variants {mkN "piranha" ; mkN "puta" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin trollop_2_N = variants {mkN "meretriz" ; mkN "prostituta" ; mkN "woman" ; } ; --*
lin trombone_N = mkN "trombone" ; --*
lin trombonist_N = variants {mkN "player" ; mkN "trombone" ; } ; --*
lin troop_1_N = variants {mkN "companhia" ; mkN "tropa" ; } ; --*
lin troop_2_N = mkN "companhia" ; --*
lin troop_4_N = mkN "tropa" ; --*
lin trope_N = variants {mkN "figura" ; mkN "metáfora" ; mkN "of" ; } ; --*
lin trophoblastic_A = mkA "trofoblástico" ; --*
lin trophoblast_N = mkN "Trofoblasto" ; --*
lin trophy_1_N = mkN "troféu" ; --*
lin trophy_2_N = variants {mkN "prémio" ; mkN "troféu" ; } ; --*
lin tropical_1_A = mkA "tropical" ; --*
lin tropical_2_A = mkA "tropical" ; --*
lin tropical_3_A = mkA "tropical" ; --*
lin tropical_4_A = mkA "tropical" ; --*
lin tropic_N = mkN "trópico" ; --*
lin tropism_N = variants {mkN "tropismo" ; mkN "Tropismo" ; } ; --*
lin tropopause_N = mkN "tropopausa" ; --*
lin troposphere_N = mkN "troposfera" ; --*
lin trot_1_V = variants {mkV "andar" ; mkV "trotar" ; } ; --*
lin trot_2_N = mkN "Trotskyista" ; --*
lin trot_2_V2 = mkV2 (mkV "trotar") ; --*
lin trot_2_V = mkV "trotar" ; --*
lin trot_3_V2 = mkV2 (mkV "trotar") ; --*
lin trot_4_N = mkN "trote" ; --*
lin troth_1_N = variants {mkN "casamento" ; mkN "noivado" ; } ; --*
lin trotter_1_N = mkN "pé" ; --*
lin troubadour_N = variants {mkN "jogral" ; mkN "poeta-cantor" ; mkN "singer" ; mkN "trovador" ; } ; --*
lin trouble_1_N = variants {mkN "dificuldade" ; mkN "obstáculo" ; mkN "problema" ; } ; --*
lin trouble_1_V2 = variants {mkV2 (mkV "disturbar") ; mkV2 (mkV "perturbar") ; } ; --*
lin trouble_2_V2 = variants {mkV2 (mkV "desconfortar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "out") ; } ; --*
lin trouble_3_N = mkN "problema" ; --*
lin trouble_3_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "transtornar") ; } ; --*
lin trouble_4_N = mkN "dificuldade" ; --*
lin trouble_4_V2 = variants {mkV2 (mkV "incomodar") ; mkV2 (mkV "incomodar-se") ; mkV2 (mkV "oneself") ; } ; --*
lin trouble_5_N = variants {mkN "ansiedade" ; mkN "preocupação" ; } ; --*
lin troubled_2_A = mkA "tumultuoso" ; --*
lin troublemaker_1_N = variants {mkN "desordeiro" ; mkN "hat" ; mkN "maker" ; } ; --*
lin troublesome_A = variants {mkA "difícil" ; mkA "problemático" ; } ; --*
lin trough_2_N = mkN "sargeta" ; --*
lin trough_4_N = variants {mkN "erário" ; mkN "finanças" ; mkN "treasury" ; } ; --*
lin trough_6_N = variants {mkN "cocho" ; mkN "manjedoura" ; } ; --*
lin trounce_1_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin trounce_2_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "out") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin trounce_3_V2 = variants {mkV2 (mkV "censurar") ; mkV2 (mkV "condenar") ; mkV2 (mkV "descompor") ; mkV2 (mkV "down") ; mkV2 (mkV "esculhambar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "repreender") ; mkV2 (mkV "reprimendar") ; mkV2 (mkV "reprimir") ; mkV2 (mkV "reprovar") ; mkV2 (mkV "to") ; mkV2 (mkV "up") ; mkV2 (mkV "verberar") ; mkV2 (mkV "words") ; } ; --*
lin trouncing_1_N = mkN "surra" ; --*
lin trouncing_2_N = mkN "surra" ; --*
lin troupe_N = variants {mkN "companhia" ; mkN "elenco" ; mkN "pessoal" ; } ; --*
lin trouper_2_N = mkN "ator" ; --*
lin trouser_N = mkN "calça" ; --*
lin trousseau_N = mkN "enxoval" ; --*
lin trout_1_N = mkN "truta" ; --*
lin trout_2_N = mkN "truta" ; --*
lin trowel_N = mkN "colher" ; --*
lin troy_2_N = variants {mkN "Troia" ; mkN "Tróia" ; } ; --*
lin truancy_N = variants {mkN "Absenteísmo" ; mkN "absentismo" ; } ; --*
lin truce_N = variants {mkN "armistício" ; mkN "cessar-fogo" ; mkN "trégua" ; } ; --*
lin truck_1_N = variants {mkN "camião" ; mkN "caminhão" ; mkN "camiões" ; mkN "Camiões" ; } ; --*
lin truculent_A = variants {mkA "batalhador" ; mkA "lutador" ; mkA "truculento" ; } ; --*
lin true_10_A = variants {mkA "autêntico" ; mkA "verdadeiro" ; } ; --*
lin true_1_A = mkA "verdadeiro" ; --*
lin true_5_A = mkA "verídico" ; --*
lin true_6_A = variants {mkA "confiável" ; mkA "digno" ; mkA "fiável" ; } ; --*
lin true_7_A = variants {mkA "legítimo" ; mkA "verdadeiro" ; } ; --*
lin true_9_A = variants {mkA "que" ; mkA "tr00" ; } ; --*
lin true_hearted_A = mkA "fiel" ; --*
lin truelove_N = mkN "amor" ; --*
lin trueness_1_N = variants {mkN "true" ; mkN "verdade" ; } ; --*
lin trueness_2_N = mkN "lealdade" ; --*
lin truffle_1_N = mkN "trufa" ; --*
lin truffle_2_N = mkN "trufa" ; --*
lin truffle_3_N = variants {mkN "trufa" ; mkN "truffle" ; } ; --*
lin truly_1_AdV = mkAdV "sinceramente" ; --*
lin truly_3_AdA = mkAdA "sinceramente" ; --*
lin truly_4_AdA = variants {mkAdA "truth" ; mkAdA "verdadeiramente" ; } ; --*
lin trump_1_N = variants {mkN "card" ; mkN "trunfo" ; } ; --*
lin trump_2_V2 = variants {mkV2 (mkV "derrotar") ; mkV2 (mkV "superar") ; mkV2 (mkV "triunfar") ; mkV2 (mkV "vencer") ; } ; --*
lin trump_3_N = variants {mkN "berimbau" ; mkN "corneta" ; mkN "harpa" ; mkN "trombeta" ; mkN "trompa" ; mkN "trompete" ; } ; --*
lin trump_4_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "trunfar") ; } ; --*
lin trump_4_V = variants {mkV "out" ; mkV "trunfar" ; } ; --*
lin trumpet_1_V2 = mkV2 (mkV "trombetear") ; --*
lin trumpet_2_V2 = mkV2 (mkV "trompetear") ; --*
lin trumpet_2_V = mkV "trompetear" ; --*
lin trumpet_3_V = mkV "trompetear" ; --*
lin trumpeter_1_N = variants {mkN "trombeta" ; mkN "trombeteiro" ; mkN "trompetista" ; } ; --*
lin trumpeter_2_N = mkN "arauto" ; --*
lin trumpet_N = variants {mkN "berimbau" ; mkN "corneta" ; mkN "harpa" ; mkN "trombeta" ; mkN "trompa" ; mkN "trompete" ; } ; --*
lin truncate_3_V2 = variants {mkV2 (mkV "short") ; mkV2 (mkV "truncar") ; } ; --*
lin truncate_A = mkA "truncado" ; --*
lin truncation_3_N = mkN "Truncatura" ; --*
lin truncheon_N = variants {mkN "cassetete" ; mkN "club" ; mkN "porrete" ; } ; --*
lin trunk_1_N = variants {mkN "tronco" ; mkN "Tronco" ; mkN "trunk" ; } ; --*
lin trunk_2_N = variants {mkN "baú" ; mkN "mala" ; } ; --*
lin trunk_3_N = variants {mkN "corpo" ; mkN "torso" ; mkN "tronco" ; mkN "Tronco" ; } ; --*
lin trunk_4_N = variants {mkN "compartment" ; mkN "mala" ; mkN "porta-bagagem" ; mkN "trunk" ; } ; --*
lin trunk_5_N = variants {mkN "Proboscide" ; mkN "probóscide" ; mkN "tromba" ; } ; --*
lin trunk_road_N = variants {mkN "estrada" ; mkN "road" ; } ; --*
lin truss_2_N = mkN "Treliça" ; --*
lin truss_2_V2 = variants {mkV2 (mkV "amarrar") ; mkV2 (mkV "atar") ; mkV2 (mkV "down") ; mkV2 (mkV "up") ; } ; --*
lin truss_3_N = mkN "Mísula" ; --*
lin trust_1_V2 = mkV2 (mkV "crer") ; --*
lin trust_2_N = variants {mkN "confiança" ; mkN "fé" ; } ; --*
lin trust_3_VS = variants {mkVS (mkV "achar") ; mkVS (mkV "acreditar") ; mkVS (mkV "crer") ; mkVS (mkV "pensar") ; } ; --*
lin trust_4_N = variants {mkN "cartel" ; mkN "trust" ; } ; --*
lin trust_4_VS = variants {mkVS (mkV "desejar") ; mkVS (mkV "esperançar") ; mkVS (mkV "esperar") ; mkVS (mkV "pretender") ; mkVS (mkV "querer") ; } ; --*
lin trust_5_N = variants {mkN "confiança" ; mkN "fé" ; } ; --*
lin trust_5_V2 = variants {mkV2 (mkV "comissionar") ; mkV2 (mkV "confiar") ; mkV2 (mkV "encarregar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "incumbir") ; mkV2 (mkV "ter") ; } ; --*
lin trust_6_N = mkN "fé" ; --*
lin trustee_1_N = variants {mkN "Curador" ; mkN "guardian" ; } ; --*
lin trustworthiness_N = variants {mkN "confiabilidade" ; mkN "fé" ; } ; --*
lin trustworthy_2_A = mkA "fidedigno" ; --*
lin truth_1_N = variants {mkN "fato" ; mkN "verdade" ; mkN "verdades" ; } ; --*
lin truth_2_N = variants {mkN "true" ; mkN "verdade" ; } ; --*
lin truth_3_N = variants {mkN "statement" ; mkN "verdade" ; } ; --*
lin truth_4_N = variants {mkN "acurácia" ; mkN "correção" ; mkN "exactidão" ; mkN "exatidão" ; mkN "precisão" ; mkN "rigor" ; } ; --*
lin truth_5_N = variants {mkN "Sojourner" ; mkN "Truth" ; } ; --*
lin truthfulness_N = mkN "veracidade" ; --*
lin try_2_V2 = variants {mkV2 (mkV "ensaiar") ; mkV2 (mkV "out") ; mkV2 (mkV "tentar") ; } ; --*
lin try_3_V2 = mkV2 (mkV "julgar") ; --*
lin try_4_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "provar") ; mkV2 (mkV "sentir") ; } ; --*
lin try_6_V2 = mkV2 (mkV "incomodar") ; --*
lin try_7_V2 = variants {mkV2 (mkV "esgotar") ; mkV2 (mkV "estressar") ; } ; --*
lin try_N = variants {mkN "esforço" ; mkN "tentativa" ; } ; --*
lin try_on_N = variants {mkN "on" ; mkN "teste" ; } ; --*
lin try_on_V2V = variants {mkV2V (mkV "experimentar") ; mkV2V (mkV "on") ; } ; --*
lin try_out_1_N = variants {mkN "ensaio" ; mkN "prova" ; mkN "run" ; } ; --*
lin try_out_2_N = variants {mkN "audição" ; mkN "ensaio" ; mkN "teste" ; } ; --*
lin try_out_2_V = variants {mkV "experimentar" ; mkV "out" ; } ; --*
lin trypsin_N = mkN "tripsina" ; --*
lin tryptophan_1_N = variants {mkN "Triptofano" ; mkN "triptófano" ; } ; --*
lin tryst_1_N = mkN "encontro" ; --*
lin try_V = variants {mkV "procurar" ; mkV "tentar" ; } ; --*
lin try_VV = variants {mkVV (mkV "procurar") ; mkVV (mkV "tentar") ; } ; --*
lin tsarina_1_N = mkN "tsarina" ; --*
lin tsar_N = variants {mkN "czar" ; mkN "tsar" ; } ; --*
lin tsetse_1_N = variants {mkN "fly" ; mkN "mosca" ; mkN "Mosca" ; mkN "Mosca-tsé-tsé" ; } ; --*
lin tsetse_fly_N = variants {mkN "fly" ; mkN "mosca" ; mkN "Mosca" ; mkN "Mosca-tsé-tsé" ; } ; --*
lin t_shirt_N = variants {mkN "camisa" ; mkN "Jersey" ; mkN "shirt" ; mkN "t-shirt" ; } ; --*
lin t_square_N = variants {mkN "esquadro" ; mkN "Régua" ; mkN "régua-tê" ; mkN "T-quadrado" ; } ; --*
lin tsunami_N = variants {mkN "maremoto" ; mkN "maremotos" ; mkN "tsunami" ; } ; --*
lin tswana_2_N = variants {mkN "Língua" ; mkN "seTswana" ; } ; --*
lin tuatara_N = variants {mkN "punctatum" ; mkN "tuatara" ; } ; --*
lin tub_1_N = variants {mkN "banheira" ; mkN "tub" ; } ; --*
lin tub_2_N = variants {mkN "banheira" ; mkN "cuba" ; mkN "tina" ; mkN "tonel" ; } ; --*
lin tuba_N = variants {mkN "horn" ; mkN "tuba" ; } ; --*
lin tube_1_N = variants {mkN "cachimbo" ; mkN "canais" ; mkN "canal" ; mkN "cano" ; mkN "chaminés" ; mkN "condutas" ; mkN "conduto" ; mkN "ducto" ; mkN "duto" ; mkN "pipeline" ; mkN "tubo" ; } ; --*
lin tube_2_N = variants {mkN "tube" ; mkN "vacuum" ; mkN "valve" ; mkN "válvula" ; } ; --*
lin tube_3_N = variants {mkN "cano" ; mkN "duto" ; mkN "tubo" ; } ; --*
lin tube_4_N = variants {mkN "structure" ; mkN "tubo" ; } ; --*
lin tube_5_N = variants {mkN "metro" ; mkN "metrô" ; mkN "metropolitano" ; mkN "system" ; } ; --*
lin tuber_1_N = variants {mkN "cebola" ; mkN "Tubérculo" ; } ; --*
lin tuber_2_N = variants {mkN "trufa" ; mkN "Tuber" ; } ; --*
lin tubercle_3_N = mkN "eminência" ; --*
lin tubercular_1_A = mkA "tuberculoso" ; --*
lin tuberculosis_N = mkN "tuberculose" ; --*
lin tuberosity_N = mkN "eminência" ; --*
lin tubing_N = variants {mkN "cachimbo" ; mkN "canais" ; mkN "canal" ; mkN "cano" ; mkN "chaminés" ; mkN "condutas" ; mkN "conduto" ; mkN "ducto" ; mkN "duto" ; mkN "pipeline" ; mkN "tubo" ; } ; --*
lin tubocurarine_N = mkN "curare" ; --*
lin tubular_A = mkA "tubular" ; --*
lin tuck_4_N = variants {mkN "espada" ; mkN "florete" ; mkN "rapieira" ; } ; --*
lin tuck_in_1_V2 = variants {mkV2 (mkV "enfiar") ; mkV2 (mkV "meter") ; } ; --*
lin tuck_in_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "in") ; } ; --*
lin tues_PN = mkPN "terça-feira" ; --*
lin tufa_2_N = mkN "tufo" ; --*
lin tuff_N = mkN "tufo" ; --*
lin tuft_1_N = mkN "topete" ; --*
lin tug_2_N = mkN "rebocador" ; --*
lin tug_2_V2 = variants {mkV2 (mkV "esforçar") ; mkV2 (mkV "esforçar-se") ; mkV2 (mkV "pressionar") ; } ; --*
lin tug_3_V2 = mkV2 (mkV "arrastar") ; --*
lin tug_5_V2 = variants {mkV2 (mkV "arrastar") ; mkV2 (mkV "tirar") ; } ; --*
lin tug_6_V2 = variants {mkV2 (mkV "puxar") ; mkV2 (mkV "tirar") ; } ; --*
lin tug_7_V = variants {mkV "batalhar" ; mkV "lutar" ; } ; --*
lin tugboat_1_N = mkN "rebocador" ; --*
lin tuition_2_N = variants {mkN "tutelagem" ; mkN "tutoria" ; } ; --*
lin tularemia_1_N = variants {mkN "fever" ; mkN "fly" ; mkN "tularemia" ; } ; --*
lin tulip_N = variants {mkN "tulipa" ; mkN "túlipa" ; } ; --*
lin tulle_N = mkN "tule" ; --*
lin tumble_1_V = mkV "derrubar" ; --*
lin tumble_2_N = mkN "tombo" ; --*
lin tumble_2_V2 = mkV2 (mkV "derrubar") ; --*
lin tumble_2_V = mkV "derrubar" ; --*
lin tumble_3_V2 = mkV2 (mkV "cambalhotar") ; --*
lin tumble_3_V = mkV "cambalhotar" ; --*
lin tumble_4_V = variants {mkV "around" ; mkV "bater" ; mkV "mexer" ; } ; --*
lin tumble_5_V = variants {mkV "amarfanhar" ; mkV "desmoronar" ; mkV "down" ; mkV "esboroar" ; mkV "esfarelar" ; } ; --*
lin tumble_7_V = variants {mkV "entender" ; mkV "it" ; mkV "on" ; mkV "onto" ; mkV "wise" ; } ; --*
lin tumble_8_V = variants {mkV "cair" ; mkV "tombar" ; } ; --*
lin tumble_down_A = variants {mkA "dilapidada" ; mkA "dilapidadas" ; mkA "dilapidado" ; mkA "dilapidados" ; mkA "malcuidada" ; mkA "malcuidado" ; } ; --*
lin tumbler_1_N = mkN "acrobata" ; --*
lin tumbleweed_1_N = mkN "salsola" ; --*
lin tumefaction_N = mkN "tumefação" ; --*
lin tumid_1_A = mkA "bombástico" ; --*
lin tummy_1_N = variants {mkN "barriga" ; mkN "window" ; } ; --*
lin tummy_2_N = variants {mkN "Estomago" ; mkN "estômago" ; } ; --*
lin tumor_N = variants {mkN "neoplasia" ; mkN "tumor" ; mkN "tumores" ; } ; --*
lin tumour_1_N = variants {mkN "neoplasia" ; mkN "tumor" ; mkN "tumores" ; } ; --*
lin tumult_3_N = variants {mkN "escândalo" ; mkN "tumulto" ; } ; --*
lin tumultuous_A = mkA "tumultuoso" ; --*
lin tumulus_N = variants {mkN "mamoa" ; mkN "Mâmoa" ; mkN "mound" ; } ; --*
lin tuna_2_N = variants {mkN "atum" ; mkN "fish" ; } ; --*
lin tuna_3_N = mkN "atum" ; --*
lin tundra_N = mkN "tundra" ; --*
lin tune_1_N = variants {mkN "line" ; mkN "melodia" ; mkN "phrase" ; mkN "toada" ; } ; --*
lin tune_1_V2 = variants {mkV2 (mkV "afinar") ; mkV2 (mkV "regular") ; mkV2 (mkV "sintonizar") ; mkV2 (mkV "up") ; } ; --*
lin tune_2_V2 = variants {mkV2 (mkV "afinar") ; mkV2 (mkV "up") ; } ; --*
lin tuneful_A = variants {mkA "melódico" ; mkA "melodioso" ; } ; --*
lin tuneless_A = mkA "desafinado" ; --*
lin tuner_1_N = variants {mkN "afinador" ; mkN "tuner" ; } ; --*
lin tuner_2_N = variants {mkN "rádio" ; mkN "receiver" ; mkN "set" ; } ; --*
lin tungstate_N = mkN "Tungstatos" ; --*
lin tungsten_N = variants {mkN "number" ; mkN "Tungstenio" ; mkN "tungsténio" ; mkN "tungstênio" ; mkN "volfrâmio" ; } ; --*
lin tunic_1_N = variants {mkN "membrana" ; mkN "túnica" ; } ; --*
lin tunic_2_N = mkN "túnica" ; --*
lin tunicate_N = variants {mkN "Tunicados" ; mkN "Urochordata" ; } ; --*
lin tuning_fork_N = mkN "fork" ; --*
lin tuning_N = mkN "afinação" ; --*
lin tunisian_1_A = variants {mkA "tunesino" ; mkA "tunisino" ; } ; --*
lin tunisian_2_A = mkA "tunisiano" ; --*
lin tunisia_PN = variants {mkPN "of" ; mkPN "Tunisia" ; } ; --*
lin tunis_PN = variants {mkPN "of" ; mkPN "Túnis" ; } ; --*
lin tunnel_1_N = mkN "túnel" ; --*
lin tunnel_1_V = mkV "cavar" ; --*
lin tunnel_2_N = variants {mkN "cova" ; mkN "toca" ; mkN "túnel" ; } ; --*
lin tunny_1_N = variants {mkN "atum" ; mkN "fish" ; } ; --*
lin tunny_2_N = mkN "atum" ; --*
lin tupelo_3_N = mkN "Nyssa" ; --*
lin tup_N = variants {mkN "aríete" ; mkN "carneiro" ; } ; --*
lin turban_1_N = mkN "turbante" ; --*
lin turban_2_N = mkN "turbante" ; --*
lin turbidity_N = mkN "turvação" ; --*
lin turbidness_N = mkN "turvação" ; --*
lin turbinate_2_A = mkA "helicoidal" ; --*
lin turbine_N = variants {mkN "turbina" ; mkN "Turbina" ; mkN "turbinas" ; } ; --*
lin turbojet_2_N = variants {mkN "engine" ; mkN "turbofan" ; mkN "turbojato" ; } ; --*
lin turboprop_N = variants {mkN "plane" ; mkN "turboélice" ; } ; --*
lin turbot_2_N = variants {mkN "maxima" ; mkN "Pregado" ; } ; --*
lin turbulence_1_N = mkN "turbulência" ; --*
lin turbulence_2_N = mkN "turbulência" ; --*
lin turbulence_3_N = variants {mkN "turbulência" ; mkN "und" ; } ; --*
lin turbulent_1_A = mkA "tumultuoso" ; --*
lin turd_N = variants {mkN "bosta" ; mkN "cagalhão" ; mkN "cocô" ; mkN "merda" ; mkN "tolete" ; } ; --*
lin turf_2_N = mkN "feudo" ; --*
lin turgid_1_A = mkA "bombástico" ; --*
lin turgidity_N = variants {mkN "flatulência" ; mkN "Flatulência" ; } ; --*
lin turin_PN = mkPN "Turim" ; --*
lin turkey_1_N = variants {mkN "gallopavo" ; mkN "peru" ; } ; --*
lin turkey_4_N = mkN "peru" ; --*
lin turkey_PN = variants {mkPN "of" ; mkPN "Turquia" ; } ; --*
lin turkish_A = variants {mkA "turca" ; mkA "turco" ; } ; --*
lin turkish_N = variants {mkN "língua" ; mkN "turco" ; } ; --*
lin turk_N = mkN "turco" ; --*
lin turmeric_1_N = variants {mkN "Cúrcuma" ; mkN "domestica" ; mkN "longa" ; } ; --*
lin turmeric_2_N = mkN "cúrcuma" ; --*
lin turmoil_3_N = mkN "distúrbio" ; --*
lin turn_10_N = mkN "número" ; --*
lin turn_10_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin turn_12_V2 = variants {mkV2 (mkV "arar") ; mkV2 (mkV "estevar") ; mkV2 (mkV "lavrar") ; } ; --*
lin turn_15_V2 = mkV2 (mkV "torcer") ; --*
lin turn_16_V2 = mkV2 (mkV "virar") ; --*
lin turn_18_V2 = mkV2 (mkV "fazer") ; --*
lin turn_1_N = mkN "arco" ; --*
lin turn_1_V = variants {mkV "virar" ; mkV "virar-se" ; } ; --*
lin turn_21_V2 = mkV2 (mkV "torcer") ; --*
lin turn_22_V2 = mkV2 (mkV "girar") ; --*
lin turn_25_V = mkV "estragar" ; --*
lin turn_2_V = variants {mkV "revoltar-se" ; mkV "state" ; mkV "tornar" ; } ; --*
lin turn_3_N = variants {mkN "jogo" ; mkN "vez" ; } ; --*
lin turn_3_V2 = variants {mkV2 (mkV "acontecer") ; mkV2 (mkV "tornar-se") ; mkV2 (mkV "transformar") ; mkV2 (mkV "transformar-se") ; mkV2 (mkV "virar") ; } ; --*
lin turn_4_V2 = mkV2 (mkV "girar") ; --*
lin turn_5_V = variants {mkV "by" ; mkV "inverter" ; mkV "reverter" ; mkV "virar" ; } ; --*
lin turn_7_N = mkN "giro" ; --*
lin turn_7_VA = variants {mkVA (mkV "acontecer") ; mkVA (mkV "mudar") ; mkVA (mkV "tornar-se") ; } ; --*
lin turn_8_N = variants {mkN "turno" ; mkN "vez" ; } ; --*
lin turn_9_N = mkN "jogo" ; --*
lin turn_9_V = variants {mkV "girar" ; mkV "virar" ; } ; --*
lin turn_against_V2 = variants {mkV2 (mkV "revoltar-se") ; mkV2 (mkV "state") ; mkV2 (mkV "tornar") ; } ; --*
lin turn_around_3_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "up") ; } ; --*
lin turnaround_5_N = mkN "reversão" ; --*
lin turn_around_V = variants {mkV "about" ; mkV "around" ; } ; --*
lin turn_away_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "curvar") ; mkV2 (mkV "virar") ; } ; --*
lin turn_away_2_V = variants {mkV "away" ; mkV "curvar" ; mkV "virar" ; } ; --*
lin turn_away_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin turn_away_4_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "desviar") ; } ; --*
lin turn_back_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "resistir") ; } ; --*
lin turn_back_1_V = variants {mkV "back" ; mkV "regressar" ; } ; --*
lin turn_back_2_V = variants {mkV "back" ; mkV "reverter" ; } ; --*
lin turn_back_3_V2 = variants {mkV2 (mkV "afastar") ; mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin turn_back_5_V = variants {mkV "back" ; mkV "desvirar" ; mkV "inverter" ; } ; --*
lin turncoat_N = variants {mkN "apóstata" ; mkN "desertor" ; mkN "renegado" ; mkN "vira-casaca" ; } ; --*
lin turncock_2_N = mkN "torneira" ; --*
lin turn_down_1_V2 = variants {mkV2 (mkV "declinar") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; mkV2 (mkV "up") ; } ; --*
lin turn_down_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "down") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin turn_down_3_V2 = variants {mkV2 (mkV "desprezar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; mkV2 (mkV "recusar") ; mkV2 (mkV "rejeitar") ; } ; --*
lin turn_down_5_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "reduzir") ; } ; --*
lin turner_4_N = variants {mkN "Frederick" ; mkN "Jackson" ; } ; --*
lin turn_in_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "in") ; mkV2 (mkV "livrar") ; mkV2 (mkV "out") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin turn_in_3_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "on") ; } ; --*
lin turn_in_4_V = variants {mkV "deitar-se" ; mkV "down" ; mkV "in" ; mkV "out" ; mkV "the" ; mkV "to" ; } ; --*
lin turning_2_N = mkN "mudança" ; --*
lin turning_point_1_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin turning_point_2_N = variants {mkN "chanfro" ; mkN "corner" ; mkN "point" ; } ; --*
lin turn_into_V2 = variants {mkV2 (mkV "acontecer") ; mkV2 (mkV "tornar-se") ; mkV2 (mkV "transformar") ; mkV2 (mkV "transformar-se") ; mkV2 (mkV "virar") ; } ; --*
lin turnip_1_N = variants {mkN "nabo" ; mkN "rapa" ; mkN "turnip" ; } ; --*
lin turnip_2_N = variants {mkN "nabo" ; mkN "Nabo" ; } ; --*
lin turn_off_1_V2 = variants {mkV2 (mkV "desligar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin turn_off_3_V2 = mkV2 (mkV "off") ; --*
lin turn_on_2_V2 = variants {mkV2 (mkV "depender") ; mkV2 (mkV "on") ; mkV2 (mkV "upon") ; } ; --*
lin turn_on_5_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin turn_on_5_V = variants {mkV "agitar" ; mkV "excitar" ; mkV "on" ; mkV "up" ; } ; --*
lin turn_on_6_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin turn_out_12_V = variants {mkV "acordar" ; mkV "out" ; mkV "up" ; } ; --*
lin turn_out_1_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "out") ; mkV2 (mkV "provar") ; mkV2 (mkV "up") ; } ; --*
lin turn_out_2_V = mkV "out" ; --*
lin turn_out_4_N = mkN "produção" ; --*
lin turn_out_4_V = mkV "out" ; --*
lin turn_out_5_N = variants {mkN "roupa" ; mkN "traje" ; } ; --*
lin turn_out_5_V2 = mkV2 (mkV "out") ; --*
lin turn_out_6_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "out") ; } ; --*
lin turn_out_7_V2 = variants {mkV2 (mkV "ejetar") ; mkV2 (mkV "excluir") ; mkV2 (mkV "out") ; } ; --*
lin turnover_1_N = variants {mkN "rate" ; mkN "turnover" ; } ; --*
lin turn_over_1_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "on") ; mkV2 (mkV "over") ; mkV2 (mkV "passar") ; } ; --*
lin turn_over_2_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin turn_over_3_V = variants {mkV "girar" ; mkV "over" ; mkV "rolar" ; } ; --*
lin turn_over_4_V2 = variants {mkV2 (mkV "cavar") ; mkV2 (mkV "into") ; mkV2 (mkV "over") ; } ; --*
lin turn_over_6_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin turn_over_7_V = variants {mkV "derrubar" ; mkV "over" ; } ; --*
lin turn_over_9_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "deliberar") ; mkV2 (mkV "over") ; } ; --*
lin turnpike_2_N = variants {mkN "road" ; mkN "rodovia" ; mkN "vias" ; } ; --*
lin turnstile_N = variants {mkN "catraca" ; mkN "Catraca" ; mkN "Roleta" ; } ; --*
lin turn_to_1_V2 = variants {mkV2 (mkV "dirigir") ; mkV2 (mkV "to") ; } ; --*
lin turn_up_2_V2 = variants {mkV2 (mkV "dobrar") ; mkV2 (mkV "up") ; } ; --*
lin turn_up_3_V2 = variants {mkV2 (mkV "descobrir") ; mkV2 (mkV "localizar") ; mkV2 (mkV "up") ; } ; --*
lin turn_up_N = mkN "punho" ; --*
lin turn_up_V = variants {mkV "aparecer" ; mkV "on" ; mkV "out" ; mkV "up" ; } ; --*
lin turpentine_2_N = variants {mkN "Aguarrás" ; mkN "of" ; } ; --*
lin turps_N = variants {mkN "Aguarrás" ; mkN "of" ; } ; --*
lin turquoise_1_N = mkN "turquesa" ; --*
lin turquoise_2_N = variants {mkN "aquamarina" ; mkN "blue" ; mkN "turquesa" ; mkN "Turquesa" ; } ; --*
lin turret_2_N = variants {mkN "enclosure" ; mkN "torre" ; mkN "turret" ; } ; --*
lin turtle_2_N = variants {mkN "tartaruga" ; mkN "testudinata" ; } ; --*
lin tusk_1_N = variants {mkN "marfim" ; mkN "Marfim" ; } ; --*
lin tusk_2_N = mkN "colmilho" ; --*
lin tussle_1_V = variants {mkV "batalhar" ; mkV "lutar" ; } ; --*
lin tussle_N = variants {mkN "batalha" ; mkN "briga" ; mkN "combate" ; mkN "luta" ; } ; --*
lin tussock_N = mkN "topete" ; --*
lin tutelage_1_N = variants {mkN "tutelagem" ; mkN "tutoria" ; } ; --*
lin tutelage_2_N = variants {mkN "cuidado" ; mkN "tutela" ; } ; --*
lin tutor_1_V2 = variants {mkV2 (mkV "educar") ; mkV2 (mkV "instruir") ; } ; --*
lin tutorial_N = variants {mkN "tutorial" ; mkN "Tutorial" ; } ; --*
lin tutor_N = variants {mkN "instructor" ; mkN "tutor" ; mkN "tutoria" ; } ; --*
lin tutorship_N = variants {mkN "tutelagem" ; mkN "tutoria" ; } ; --*
lin tutu_1_N = variants {mkN "Desmond" ; mkN "Tutu" ; } ; --*
lin tuxedo_N = variants {mkN "jacket" ; mkN "smoking" ; mkN "tie" ; } ; --*
lin tv_1_N = variants {mkN "televisão" ; mkN "tevê" ; mkN "tv" ; } ; --*
lin tv_2_N = variants {mkN "box" ; mkN "receiver" ; mkN "set" ; mkN "televisão" ; mkN "tevê" ; mkN "tube" ; mkN "tv" ; } ; --*
lin twaddle_N = mkN "mexerico" ; --*
lin twaddle_V = mkV "tagarelar" ; --*
lin twain_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin tweak_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "tirar") ; } ; --*
lin tweak_3_V2 = mkV2 (mkV "afinar") ; --*
lin tweed_1_N = mkN "tweed" ; --*
lin tweed_2_N = mkN "gabardine" ; --*
lin tweet_2_V = variants {mkV "apertar" ; mkV "beliscar" ; mkV "espremer" ; } ; --*
lin tweeter_N = mkN "Tweeter" ; --*
lin tweet_N = mkN "pio" ; --*
lin twelfth_night_PN = mkPN "night" ; --*
lin twelvemonth_N = mkN "ano" ; --*
lin twerp_1_N = variants {mkN "estúpido" ; mkN "idiota" ; } ; --*
lin twice_Adv = mkAdv "duas" ; --*
lin twiddle_1_V2 = variants {mkV2 (mkV "girar") ; mkV2 (mkV "piruetar") ; mkV2 (mkV "redemoinhar") ; } ; --*
lin twiddle_1_V = variants {mkV "girar" ; mkV "piruetar" ; mkV "redemoinhar" ; } ; --*
lin twiddle_2_V2 = variants {mkV2 (mkV "brincar") ; mkV2 (mkV "with") ; } ; --*
lin twig_2_V = variants {mkV "entender" ; mkV "it" ; mkV "on" ; mkV "onto" ; mkV "wise" ; } ; --*
lin twig_N = variants {mkN "galho" ; mkN "raminho" ; mkN "ramo" ; } ; --*
lin twilight_1_N = variants {mkN "anoitecer" ; mkN "crepúsculo" ; mkN "pôr" ; } ; --*
lin twilight_2_N = mkN "crepúsculo" ; --*
lin twilight_3_N = mkN "crepúsculo" ; --*
lin twilit_A = mkA "crepuscular" ; --*
lin twin_1_N = variants {mkN "gémeo" ; mkN "gêmeo" ; mkN "Gemeos" ; mkN "Gémeos" ; mkN "gêmeos" ; mkN "Gêmeos" ; } ; --*
lin twin_2_N = mkN "Gêmeos" ; --*
lin twin_2_V2 = variants {mkV2 (mkV "acoplar") ; mkV2 (mkV "casar") ; mkV2 (mkV "emparelhar") ; } ; --*
lin twin_3_V2 = variants {mkV2 (mkV "irmanar") ; mkV2 (mkV "irmanar-se") ; } ; --*
lin twin_4_N = mkN "cópia" ; --*
lin twin_A = mkA "gemelar" ; --*
lin twinberry_1_N = variants {mkN "involucrata" ; mkN "Lonicera" ; } ; --*
lin twine_1_V2 = variants {mkV2 (mkV "enlaçar") ; mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; mkV2 (mkV "envenenar") ; mkV2 (mkV "trançar") ; } ; --*
lin twine_2_V2 = mkV2 (mkV "bolear") ; --*
lin twine_4_V2 = mkV2 (mkV "torcer") ; --*
lin twine_N = mkN "corda" ; --*
lin twinkle_1_V = variants {mkV "cintilar" ; mkV "piscar" ; } ; --*
lin twinkle_2_N = variants {mkN "centelha" ; mkN "chispa" ; mkN "faísca" ; } ; --*
lin twinkle_2_V = mkV "brilhar" ; --*
lin twinkling_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin twins_1_N = mkN "gémeos" ; --*
lin twins_2_N = variants {mkN "Gémeos" ; mkN "Gêmeos" ; mkN "the" ; } ; --*
lin twirl_1_N = mkN "cacho" ; --*
lin twirl_1_V2 = variants {mkV2 (mkV "girar") ; mkV2 (mkV "piruetar") ; mkV2 (mkV "redemoinhar") ; } ; --*
lin twirl_1_V = variants {mkV "girar" ; mkV "piruetar" ; mkV "redemoinhar" ; } ; --*
lin twirl_2_N = mkN "giro" ; --*
lin twirl_2_V2 = mkV2 (mkV "rodopiar") ; --*
lin twist_10_N = variants {mkN "Nó" ; mkN "trança" ; } ; --*
lin twist_10_V2 = mkV2 (mkV "torcer") ; --*
lin twist_12_N = mkN "torção" ; --*
lin twist_13_N = mkN "giro" ; --*
lin twist_1_V2 = variants {mkV2 (mkV "contorcer") ; mkV2 (mkV "enroscar") ; mkV2 (mkV "espernear") ; mkV2 (mkV "torcer-se") ; } ; --*
lin twist_2_V2 = mkV2 (mkV "torcer") ; --*
lin twist_3_N = variants {mkN "artimanha" ; mkN "truque" ; } ; --*
lin twist_3_V2 = mkV2 (mkV "girar") ; --*
lin twist_4_N = mkN "giro" ; --*
lin twist_4_V2 = mkV2 (mkV "torcer") ; --*
lin twist_5_N = mkN "torcedura" ; --*
lin twist_5_V2 = variants {mkV2 (mkV "retorcer") ; mkV2 (mkV "torcer") ; } ; --*
lin twist_6_N = mkN "cacho" ; --*
lin twist_7_N = mkN "arco" ; --*
lin twist_8_N = variants {mkN "redemoinho" ; mkN "remoinho" ; mkN "vórtice" ; } ; --*
lin twist_9_N = mkN "torção" ; --*
lin twist_9_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "sofismar") ; mkV2 (mkV "torcer") ; } ; --*
lin twisted_A = mkA "distorcido" ; --*
lin twister_1_N = variants {mkN "ciclone" ; mkN "tornado" ; mkN "tornados" ; } ; --*
lin twit_1_N = variants {mkN "estúpido" ; mkN "idiota" ; } ; --*
lin twit_2_N = mkN "zombaria" ; --*
lin twitch_1_V = variants {mkV "saculejar" ; mkV "tremer" ; } ; --*
lin twitch_3_V2 = mkV2 (mkV "virar") ; --*
lin twitch_3_V = mkV "virar" ; --*
lin twitch_4_V2 = variants {mkV2 (mkV "apertar") ; mkV2 (mkV "beliscar") ; mkV2 (mkV "espremer") ; } ; --*
lin twitch_5_V2 = mkV2 (mkV "puxar") ; --*
lin twitch_5_V = mkV "puxar" ; --*
lin twitter_1_V = variants {mkV "gorjear" ; mkV "guinchar" ; mkV "piar" ; mkV "pipilar" ; } ; --*
lin twit_V2 = variants {mkV2 (mkV "escarnear") ; mkV2 (mkV "sacanear") ; mkV2 (mkV "tantalizar") ; } ; --*
lin twofold_1_A = variants {mkA "dúplice" ; mkA "duplo" ; } ; --*
lin twofold_2_A = mkA "duplo" ; --*
lin two_handed_1_A = mkA "ambidestro" ; --*
lin two_handed_2_A = mkA "bimanual" ; --*
lin two_piece_2_N = variants {mkN "Biquini" ; mkN "biquíni" ; } ; --*
lin two_timing_A = mkA "adulterino" ; --*
lin tycoon_N = variants {mkN "businessman" ; mkN "executive" ; mkN "leader" ; mkN "magnata" ; } ; --*
lin tying_N = mkN "ligatura" ; --*
lin tyke_2_N = mkN "indivíduo" ; --*
lin tyke_3_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin tympanic_2_A = variants {mkA "do" ; mkA "timpânico" ; } ; --*
lin tympanum_2_N = variants {mkN "gabionada" ; mkN "Membrana" ; mkN "membrane" ; mkN "tímpano" ; } ; --*
lin tympanum_3_N = variants {mkN "tímpano" ; mkN "Tímpano" ; } ; --*
lin tyne_PN = variants {mkPN "Rio" ; mkPN "River" ; mkPN "Tyne" ; } ; --*
lin type_1_N = variants {mkN "classe" ; mkN "espécie" ; mkN "género" ; mkN "tipo" ; mkN "variedade" ; } ; --*
lin type_1_V2 = variants {mkV2 (mkV "datilografar") ; mkV2 (mkV "escrever") ; } ; --*
lin type_2_N = mkN "figura" ; --*
lin type_2_V2 = mkV2 (mkV "tipar") ; --*
lin type_3_N = mkN "género" ; --*
lin type_5_N = mkN "tipo" ; --*
lin typecast_2_V2 = mkV2 (mkV "tipar") ; --*
lin typeface_N = mkN "família" ; --*
lin typesetter_N = mkN "compositor" ; --*
lin typewriter_N = variants {mkN "datilógrafo" ; mkN "máquina" ; mkN "Máquina" ; mkN "Máquina-de-escrever" ; } ; --*
lin typhoid_N = variants {mkN "Febre" ; mkN "fever" ; } ; --*
lin typhoon_N = variants {mkN "tufão" ; mkN "tufões" ; } ; --*
lin typhus_N = variants {mkN "fever" ; mkN "tifo" ; } ; --*
lin typical_1_A = mkA "típico" ; --*
lin typical_2_A = variants {mkA "distintivo" ; mkA "típico" ; } ; --*
lin typical_3_A = mkA "típico" ; --*
lin typify_1_V2 = mkV2 (mkV "tipificar") ; --*
lin typify_2_V2 = variants {mkV2 (mkV "for") ; mkV2 (mkV "representar") ; mkV2 (mkV "simbolizar") ; } ; --*
lin typist_N = mkN "datilógrafo" ; --*
lin typographer_N = mkN "compositor" ; --*
lin typography_2_N = variants {mkN "tipografia" ; mkN "Tipografia" ; mkN "trabalho" ; } ; --*
lin typology_N = mkN "tipologia" ; --*
lin tyramine_N = mkN "Tiramina" ; --*
lin tyrannical_1_A = variants {mkA "opressivo" ; mkA "opressor" ; mkA "tirano" ; } ; --*
lin tyrannical_2_A = variants {mkA "autocrático" ; mkA "ditatorial" ; } ; --*
lin tyrannicide_N = mkN "tiranicídio" ; --*
lin tyrannize_1_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "tiranizar") ; } ; --*
lin tyrannize_1_V = variants {mkV "down" ; mkV "tiranizar" ; } ; --*
lin tyrannize_2_V2 = variants {mkV2 (mkV "dominar") ; mkV2 (mkV "tiranizar") ; } ; --*
lin tyrannosaur_1_N = variants {mkN "rex" ; mkN "tiranossauro" ; } ; --*
lin tyrannous_A = variants {mkA "opressivo" ; mkA "opressor" ; mkA "tirano" ; } ; --*
lin tyranny_1_N = variants {mkN "autocracia" ; mkN "despotismo" ; mkN "ditadura" ; mkN "rule" ; mkN "stalinismo" ; mkN "Stalinismo" ; } ; --*
lin tyranny_2_N = variants {mkN "despotismo" ; mkN "Despotismo" ; } ; --*
lin tyrant_1_N = variants {mkN "autocrata" ; mkN "autócrata" ; mkN "déspota" ; mkN "ditador" ; mkN "tirano" ; } ; --*
lin tyrant_2_N = mkN "tirano" ; --*
lin tyrant_3_N = mkN "tirano" ; --*
lin tyre_1_N = mkN "Tiro" ; --*
lin tyre_2_N = mkN "pneu" ; --*
lin tyro_N = variants {mkN "novato" ; mkN "principiante" ; } ; --*
lin tyrosinemia_N = mkN "tirosinemia" ; --*
lin tyrosine_N = mkN "tirosina" ; --*
lin tzarina_N = mkN "tsarina" ; --*
lin tzar_N = variants {mkN "czar" ; mkN "tsar" ; } ; --*
lin ubiquitous_A = variants {mkA "omnipresente" ; mkA "onipresente" ; mkA "ubíquo" ; } ; --*
lin ubiquity_N = variants {mkN "omnipresença" ; mkN "onipresença" ; mkN "Onipresença" ; mkN "ubiquidade" ; mkN "ubiqüidade" ; } ; --*
lin u_boat_N = variants {mkN "submarino" ; mkN "Submarinos" ; } ; --*
lin udder_N = variants {mkN "úbere" ; mkN "ubre" ; } ; --*
lin ufa_PN = variants {mkPN "ufa" ; mkPN "Ufa" ; } ; --*
lin ufo_N = variants {mkN "flying" ; mkN "Ovni" ; mkN "OVNI" ; mkN "Óvni" ; mkN "saucer" ; } ; --*
lin ugandan_A = variants {mkA "ugandense" ; mkA "ugandês" ; } ; --*
lin uganda_PN = variants {mkPN "of" ; mkPN "Uganda" ; } ; --*
lin uglify_V2 = mkV2 (mkV "enfeiar") ; --*
lin ugliness_1_N = variants {mkN "Feiura" ; mkN "feiúra" ; mkN "Feiúra" ; } ; --*
lin ugly_1_A = variants {mkA "feia" ; mkA "feio" ; } ; --*
lin ugly_3_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin ugly_4_A = variants {mkA "abominável" ; mkA "atroz" ; mkA "horrível" ; } ; --*
lin uk_1_PN = variants {mkPN "Britain" ; mkPN "Kingdom" ; mkPN "Reino-Unido" ; mkPN "RU" ; } ; --*
lin uke_N = mkN "ukulele" ; --*
lin ukraine_PN = variants {mkPN "Ucrania" ; mkPN "Ucránia" ; mkPN "Ucrânia" ; } ; --*
lin ukulele_N = mkN "ukulele" ; --*
lin ulcerate_1_V = mkV "ulcerar" ; --*
lin ulcerate_2_V2 = mkV2 (mkV "ulcerar") ; --*
lin ulceration_1_N = variants {mkN "úlcera" ; mkN "ulceração" ; } ; --*
lin ulceration_2_N = mkN "ulceração" ; --*
lin ulcer_N = variants {mkN "úlcera" ; mkN "ulceração" ; } ; --*
lin ulema_1_N = variants {mkN "Ulema" ; mkN "ulemá" ; } ; --*
lin ulna_N = variants {mkN "bone" ; mkN "ulna" ; } ; --*
lin ulster_PN = mkPN "Ulster" ; --*
lin ulterior_1_A = mkA "ulterior" ; --*
lin ulterior_2_A = mkA "ulterior" ; --*
lin ulterior_3_A = variants {mkA "posterior" ; mkA "ulterior" ; } ; --*
lin ultimate_1_A = mkA "definitivo" ; --*
lin ultimatum_N = mkN "ultimato" ; --*
lin ultramarine_2_N = mkN "Azul" ; --*
lin ultrasonic_1_A = variants {mkA "supersônico" ; mkA "ultrassônico" ; } ; --*
lin ultrasound_1_N = mkN "ultra-sons" ; --*
lin ultrasound_2_N = variants {mkN "Ultra" ; mkN "Ultra-som" ; mkN "ultrasonografia" ; mkN "Ultrassom" ; } ; --*
lin ultraviolet_A = mkA "ultravioleta" ; --*
lin ultraviolet_N = variants {mkN "illumination" ; mkN "light" ; mkN "radiation" ; mkN "ultravioleta" ; } ; --*
lin ululate_V = variants {mkV "bramir" ; mkV "ulular" ; } ; --*
lin umbel_N = mkN "umbela" ; --*
lin umber_2_N = variants {mkN "brown" ; mkN "chocolate" ; mkN "umber" ; } ; --*
lin umbilical_A = mkA "umbilical" ; --*
lin umbra_N = variants {mkN "penumbra" ; mkN "Umbra" ; } ; --*
lin umbrella_1_N = variants {mkN "chapéu-de-chuva" ; mkN "Guarda" ; mkN "guarda-chuva" ; mkN "sombrinha" ; } ; --*
lin umlaut_N = variants {mkN "diérese" ; mkN "trema" ; } ; --*
lin umpire_1_N = variants {mkN "árbitro" ; mkN "juiz" ; } ; --*
lin umpire_2_N = variants {mkN "árbitro" ; mkN "juiz" ; } ; --*
lin umpteenth_1_A = mkA "enésimo" ; --*
lin unable_1_A = mkA "incapaz" ; --*
lin unable_3_A = mkA "incapaz" ; --*
lin unacceptable_1_A = mkA "inaceitável" ; --*
lin unacceptable_2_A = variants {mkA "inaceitável" ; mkA "inadmissível" ; } ; --*
lin unacceptable_3_A = variants {mkA "inaceitável" ; mkA "intolerável" ; } ; --*
lin unacceptable_4_A = mkA "inaceitável" ; --*
lin unachievable_A = mkA "impossível" ; --*
lin unafraid_2_A = variants {mkA "destemido" ; mkA "sem" ; } ; --*
lin unagitated_3_A = variants {mkA "calma" ; mkA "calmo" ; mkA "sereno" ; mkA "sossegado" ; mkA "tranquilo" ; mkA "tranqüilo" ; } ; --*
lin unalienable_A = mkA "inalienável" ; --*
lin unalike_A = mkA "diferente" ; --*
lin unalterable_3_A = variants {mkA "imutável" ; mkA "invariável" ; } ; --*
lin unambiguous_1_A = mkA "não" ; --*
lin unambiguous_2_A = variants {mkA "inequívoco" ; mkA "unívoco" ; } ; --*
lin unanimity_N = variants {mkN "unanimidade" ; mkN "Unanimidade" ; } ; --*
lin unanimous_1_A = mkA "unânime" ; --*
lin unanimous_2_A = mkA "unânime" ; --*
lin unanswerable_A = mkA "irrefutável" ; --*
lin unanticipated_A = variants {mkA "imprevisto" ; mkA "inesperado" ; mkA "não" ; mkA "of" ; } ; --*
lin unappealable_A = mkA "inapelável" ; --*
lin unarmed_1_A = variants {mkA "desarmado" ; mkA "inerme" ; } ; --*
lin unarmed_2_A = variants {mkA "desarmado" ; mkA "inerme" ; } ; --*
lin unassailable_1_A = variants {mkA "inatacável" ; mkA "inviolável" ; mkA "seguro" ; } ; --*
lin unattainable_A = mkA "impossível" ; --*
lin unattractive_2_A = mkA "não" ; --*
lin unavailable_A = variants {mkA "inacessível" ; mkA "indisponível" ; } ; --*
lin unavailing_A = variants {mkA "fútil" ; mkA "inútil" ; mkA "nulidade" ; mkA "vão" ; } ; --*
lin unavenged_A = variants {mkA "não" ; mkA "sem" ; } ; --*
lin unavoidable_A = variants {mkA "inevitável" ; mkA "inexorável" ; } ; --*
lin unavowed_3_A = mkA "secreto" ; --*
lin unbalance_1_V2 = mkV2 (mkV "desequilibrar") ; --*
lin unbalance_2_V2 = mkV2 (mkV "desarranjar") ; --*
lin unbearable_A = variants {mkA "insuportável" ; mkA "intolerável" ; } ; --*
lin unbeatable_1_A = variants {mkA "imbatível" ; mkA "invencível" ; } ; --*
lin unbeatable_2_A = mkA "invencível" ; --*
lin unbeaten_A = mkA "invito" ; --*
lin unbecoming_A = variants {mkA "indecente" ; mkA "inoportuno" ; mkA "maladequado" ; } ; --*
lin unbeknown_A = mkA "desconhecido" ; --*
lin unbeknown_Adv = mkAdv "sem" ; --*
lin unbeknownst_A = mkA "desconhecido" ; --*
lin unbeknownst_Adv = mkAdv "sem" ; --*
lin unbelief_N = mkN "descrença" ; --*
lin unbelievable_1_A = variants {mkA "inacreditáveis" ; mkA "inacreditável" ; mkA "incríveis" ; mkA "incrível" ; } ; --*
lin unbelievable_2_A = mkA "improvável" ; --*
lin unbelieving_1_A = mkA "ateístico" ; --*
lin unbelieving_3_A = variants {mkA "céptico" ; mkA "cético" ; } ; --*
lin unbend_1_V2 = variants {mkV2 (mkV "endireitar") ; mkV2 (mkV "retificar") ; } ; --*
lin unbend_1_V = variants {mkV "endireitar" ; mkV "retificar" ; } ; --*
lin unbend_5_V = variants {mkV "descontrair" ; mkV "down" ; mkV "pegar" ; mkV "relaxar" ; mkV "up" ; } ; --*
lin unbiased_1_A = variants {mkA "imparcial" ; mkA "indiferente" ; } ; --*
lin unbiassed_1_A = variants {mkA "imparcial" ; mkA "indiferente" ; } ; --*
lin unbind_V2 = mkV2 (mkV "desatar") ; --*
lin unblock_1_V2 = mkV2 (mkV "desbloquear") ; --*
lin unblock_3_V2 = variants {mkV2 (mkV "desbloquear") ; mkV2 (mkV "liberar") ; } ; --*
lin unblushing_A = variants {mkA "desavergonhado" ; mkA "descarado" ; mkA "impúdico" ; mkA "sem" ; } ; --*
lin unborn_A = variants {mkA "nascituro" ; mkA "pré-natal" ; } ; --*
lin unbounded_A = variants {mkA "ilimitado" ; mkA "infinito" ; } ; --*
lin unbreakable_A = mkA "inquebrável" ; --*
lin unbroken_4_A = mkA "guardado" ; --*
lin unbutton_V2 = mkV2 (mkV "desabotoar") ; --*
lin uncalled_for_2_A = variants {mkA "desnecessário" ; mkA "gratuito" ; } ; --*
lin uncanny_1_A = variants {mkA "barroco" ; mkA "bizarro" ; mkA "esquisito" ; mkA "estranho" ; mkA "extravagante" ; mkA "misterioso" ; } ; --*
lin uncanny_2_A = mkA "misterioso" ; --*
lin uncared_for_A = mkA "desamparado" ; --*
lin unceasing_1_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin unceasing_2_A = variants {mkA "constante" ; mkA "contínuo" ; mkA "incessante" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin uncertain_1_A = variants {mkA "incerto" ; mkA "inseguro" ; } ; --*
lin uncertain_2_A = mkA "incerto" ; --*
lin uncertain_3_A = mkA "incerto" ; --*
lin uncertain_4_A = mkA "incerto" ; --*
lin uncertain_5_A = variants {mkA "instável" ; mkA "variável" ; } ; --*
lin uncertainty_1_N = variants {mkN "incerteza" ; mkN "precariedade" ; } ; --*
lin uncertainty_2_N = variants {mkN "dúvida" ; mkN "incerteza" ; } ; --*
lin unchain_1_V2 = mkV2 (mkV "desencadear") ; --*
lin unchain_2_V2 = mkV2 (mkV "desencadear") ; --*
lin unchallenged_A = variants {mkA "incontestado" ; mkA "inquestionável" ; } ; --*
lin unchangeable_A = variants {mkA "imutável" ; mkA "inalterável" ; } ; --*
lin unchanging_1_A = mkA "imutável" ; --*
lin uncivil_A = mkA "grosseiro" ; --*
lin uncivilized_1_A = variants {mkA "bárbaro" ; mkA "bravio" ; mkA "gentio" ; mkA "selvagem" ; } ; --*
lin uncle_1_N = mkN "tio" ; --*
lin uncle_2_N = mkN "tio" ; --*
lin unclean_1_A = variants {mkA "suja" ; mkA "sujado" ; mkA "sujo" ; } ; --*
lin unclear_2_A = mkA "confuso" ; --*
lin uncollected_A = mkA "não" ; --*
lin uncomfortable_1_A = mkA "desconfortável" ; --*
lin uncomfortable_2_A = variants {mkA "desconfortável" ; mkA "incómodo" ; mkA "incômodo" ; mkA "pouco" ; } ; --*
lin uncommon_2_A = variants {mkA "incomum" ; mkA "raro" ; } ; --*
lin uncomplaining_A = mkA "resignado" ; --*
lin uncompleted_1_A = mkA "incompleto" ; --*
lin uncompromising_A = mkA "inflexível" ; --*
lin unconcern_2_N = mkN "indiferença" ; --*
lin unconditional_1_A = mkA "incondicional" ; --*
lin unconditional_2_A = variants {mkA "categórico" ; mkA "incondicional" ; } ; --*
lin unconditional_3_A = mkA "incondicional" ; --*
lin unconditioned_2_A = mkA "incondicional" ; --*
lin uncongenial_1_A = mkA "incompatível" ; --*
lin uncongenial_2_A = variants {mkA "hostil" ; mkA "inóspito" ; } ; --*
lin unconnected_3_A = variants {mkA "confundido" ; mkA "confuso" ; mkA "perplexo" ; } ; --*
lin unconquerable_1_A = mkA "inconquistável" ; --*
lin unconquered_A = mkA "invito" ; --*
lin unconscionable_1_A = mkA "sem" ; --*
lin unconscionable_2_A = variants {mkA "descomunal" ; mkA "exorbitante" ; } ; --*
lin unconscious_1_A = variants {mkA "desacordado" ; mkA "desfalecido" ; mkA "desmaiado" ; mkA "esmaecido" ; mkA "inconsciente" ; mkA "incônscio" ; } ; --*
lin unconscious_2_A = variants {mkA "automático" ; mkA "inconsciente" ; mkA "incônscio" ; mkA "involuntário" ; mkA "maquinal" ; mkA "mecânico" ; } ; --*
lin unconscious_N = variants {mkN "inconsciente" ; mkN "mind" ; } ; --*
lin unconscious_of_A2 = mkA2 (mkA "inconsciente") noPrep ; --*
lin unconsidered_A = mkA "inconsiderado" ; --*
lin unconstitutional_A = mkA "inconstitucional" ; --*
lin uncontaminated_2_A = mkA "impoluto" ; --*
lin uncontested_A = mkA "inconteste" ; --*
lin uncontrollable_2_A = mkA "indomável" ; --*
lin unconventional_1_A = mkA "não" ; --*
lin unconventional_2_A = mkA "não" ; --*
lin unconvincing_2_A = mkA "improvável" ; --*
lin unco_operative_1_A = variants {mkA "não" ; mkA "que" ; } ; --*
lin uncork_2_V2 = mkV2 (mkV "desarrolhar") ; --*
lin uncouth_A = variants {mkA "agreste" ; mkA "grosseira" ; mkA "grosseiro" ; mkA "ríspido" ; mkA "rude" ; mkA "tosco" ; } ; --*
lin uncover_1_V2 = variants {mkV2 (mkV "expor") ; mkV2 (mkV "revelar") ; } ; --*
lin uncover_2_V2 = variants {mkV2 (mkV "descerrar") ; mkV2 (mkV "expor") ; mkV2 (mkV "mostrar") ; mkV2 (mkV "revelar") ; } ; --*
lin uncover_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin unction_3_N = variants {mkN "pomada" ; mkN "reboco" ; mkN "ungüento" ; } ; --*
lin undamaged_A = variants {mkA "indemne" ; mkA "indene" ; mkA "intato" ; } ; --*
lin undaunted_2_A = mkA "destemido" ; --*
lin undecagon_N = mkN "hendecágono" ; --*
lin undefined_A = variants {mkA "indefinido" ; mkA "vago" ; } ; --*
lin undeniable_A = variants {mkA "inegável" ; mkA "que" ; } ; --*
lin undependable_1_A = mkA "não" ; --*
lin under_8_Adv = mkAdv "abaixo" ; --*
lin underage_2_A = mkA "de" ; --*
lin underbred_1_A = mkA "grosseiro" ; --*
lin undercarriage_N = mkN "trem" ; --*
lin underclothing_N = mkN "roupa" ; --*
lin undercover_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin underdevelopment_2_N = mkN "subdesenvolvimento" ; --*
lin underdog_N = variants {mkN "mané" ; mkN "Underdog" ; } ; --*
lin underestimate_1_V2 = mkV2 (mkV "subestimar") ; --*
lin underestimate_2_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "menosprezar") ; mkV2 (mkV "subestimar") ; } ; --*
lin underestimate_3_V2 = mkV2 (mkV "subestimar") ; --*
lin underfed_A = mkA "desnutrido" ; --*
lin undergarment_N = mkN "roupa" ; --*
lin undergo_V2 = variants {mkV2 (mkV "experimentar") ; mkV2 (mkV "receber") ; mkV2 (mkV "sofrer") ; } ; --*
lin undergraduate_N = mkN "não-graduado" ; --*
lin underground_1_A = mkA "subterrânea" ; --*
lin underground_1_N = mkN "organização" ; --*
lin underground_2_A = variants {mkA "clandestino" ; mkA "escondido" ; } ; --*
lin underground_2_N = variants {mkN "metro" ; mkN "metrô" ; mkN "metropolitano" ; mkN "system" ; } ; --*
lin underhand_2_A = mkA "malandro" ; --*
lin underhanded_1_A = mkA "malandro" ; --*
lin underlie_1_V2 = mkV2 (mkV "subjazer") ; --*
lin underlie_2_V2 = mkV2 (mkV "subjazer") ; --*
lin underline_1_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "grifar") ; mkV2 (mkV "sublinhar") ; } ; --*
lin underline_2_V2 = variants {mkV2 (mkV "grifar") ; mkV2 (mkV "sublinhar") ; } ; --*
lin underline_N = variants {mkN "sublinha" ; mkN "sublinhado" ; } ; --*
lin underlying_1_A = variants {mkA "in" ; mkA "inerente" ; } ; --*
lin underlying_2_A = variants {mkA "fundamental" ; mkA "subjacente" ; } ; --*
lin underlying_3_A = mkA "fundamental" ; --*
lin undermentioned_A = mkA "seguinte" ; --*
lin undermine_1_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "sabotar") ; mkV2 (mkV "solapar") ; } ; --*
lin underneath_1_Adv = mkAdv "debaixo" ; --*
lin underneath_2_Adv = variants {mkAdv "abaixo" ; mkAdv "debaixo" ; mkAdv "por" ; mkAdv "sob" ; } ; --*
lin undernourished_A = mkA "desnutrido" ; --*
lin underpants_N = variants {mkN "calças" ; mkN "ceroulas" ; mkN "cuecas" ; } ; --*
lin underpay_V2 = mkV2 (mkV "pagar") ; --*
lin underpin_2_V2 = variants {mkV2 (mkV "confirmar") ; mkV2 (mkV "out") ; mkV2 (mkV "sustentar") ; } ; --*
lin underrate_V2 = mkV2 (mkV "subestimar") ; --*
lin underscore_1_V2 = variants {mkV2 (mkV "enfatizar") ; mkV2 (mkV "grifar") ; mkV2 (mkV "sublinhar") ; } ; --*
lin underscore_2_V2 = variants {mkV2 (mkV "grifar") ; mkV2 (mkV "sublinhar") ; } ; --*
lin underscore_N = variants {mkN "sublinha" ; mkN "sublinhado" ; } ; --*
lin undersea_A = mkA "submarino" ; --*
lin underside_N = variants {mkN "fundo" ; mkN "parte" ; } ; --*
lin underskirt_N = variants {mkN "anágua" ; mkN "Anágua" ; mkN "combinação" ; mkN "saiote" ; } ; --*
lin understand_1_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "comprender") ; mkV2 (mkV "entender") ; } ; --*
lin understand_2_V2 = variants {mkV2 (mkV "compreender") ; mkV2 (mkV "entender") ; } ; --*
lin understand_3_V2 = variants {mkV2 (mkV "entender") ; mkV2 (mkV "interpretar") ; mkV2 (mkV "traduzir") ; } ; --*
lin understand_4_VS = variants {mkVS (mkV "entender") ; mkVS (mkV "inferir") ; } ; --*
lin understandable_A = variants {mkA "compreensível" ; mkA "entendível" ; } ; --*
lin understanding_1_N = variants {mkN "compreensão" ; mkN "Compreensão" ; mkN "discernimento" ; } ; --*
lin understanding_2_N = variants {mkN "acordo" ; mkN "pacto" ; } ; --*
lin understanding_3_N = variants {mkN "compreensão" ; mkN "simpatia" ; } ; --*
lin understanding_4_N = variants {mkN "entendimento" ; mkN "inteligência" ; mkN "razão" ; } ; --*
lin understand_V = mkV "entender" ; --*
lin understatement_N = mkN "eufemismo" ; --*
lin understate_V2 = mkV2 (mkV "minimizar") ; --*
lin understudy_V2 = mkV2 (mkV "ser") ; --*
lin undersurface_N = variants {mkN "fundo" ; mkN "parte" ; } ; --*
lin undertake_1_V2 = variants {mkV2 (mkV "about") ; mkV2 (mkV "empreender") ; } ; --*
lin undertake_2_V2 = variants {mkV2 (mkV "encarar") ; mkV2 (mkV "on") ; } ; --*
lin undertake_3_V2 = mkV2 (mkV "garantir") ; --*
lin undertake_4_V2 = mkV2 (mkV "contratar") ; --*
lin undertaker_N = variants {mkN "agente" ; mkN "director" ; mkN "undertaker" ; } ; --*
lin undertaking_1_N = variants {mkN "projeto" ; mkN "tarefa" ; } ; --*
lin undertone_3_N = mkN "matiz" ; --*
lin undervalue_1_V2 = mkV2 (mkV "subestimar") ; --*
lin undervalue_2_V2 = variants {mkV2 (mkV "não") ; mkV2 (mkV "subvalorizar") ; } ; --*
lin undervalue_3_V2 = mkV2 (mkV "desvalorizar") ; --*
lin underwater_1_A = variants {mkA "subaquático" ; mkA "submarinho" ; mkA "submarino" ; } ; --*
lin underwater_2_A = mkA "subaquático" ; --*
lin underwear_N = mkN "roupa" ; --*
lin underweight_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin underworld_1_N = mkN "submundo" ; --*
lin underworld_2_N = variants {mkN "inferno" ; mkN "region" ; mkN "submundo" ; } ; --*
lin underwrite_2_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "proteger") ; } ; --*
lin underwriter_1_N = variants {mkN "banker" ; mkN "segurador" ; } ; --*
lin underwriter_2_N = variants {mkN "agent" ; mkN "broker" ; mkN "corretor" ; } ; --*
lin underwriter_3_N = variants {mkN "companhia" ; mkN "company" ; mkN "firm" ; mkN "underwriter" ; } ; --*
lin undesirable_2_A = mkA "inadequado" ; --*
lin undestroyable_1_A = mkA "perdurável" ; --*
lin undetectable_1_A = mkA "indetectável" ; --*
lin undeveloped_2_A = mkA "atrasado" ; --*
lin undiplomatic_A = mkA "insensível" ; --*
lin undisputed_A = variants {mkA "incontestado" ; mkA "inquestionável" ; } ; --*
lin undo_1_V2 = mkV2 (mkV "desfazer") ; --*
lin undo_2_V2 = variants {mkV2 (mkV "desfazer") ; mkV2 (mkV "desmanchar") ; mkV2 (mkV "destruir") ; } ; --*
lin undo_4_V2 = mkV2 (mkV "desamarrar") ; --*
lin undo_5_V2 = mkV2 (mkV "desembrulhar") ; --*
lin undoer_2_N = mkN "abridor" ; --*
lin undoer_3_N = mkN "destruidor" ; --*
lin undress_V2 = variants {mkV2 (mkV "desnudar-se") ; mkV2 (mkV "despir-se") ; } ; --*
lin undress_V = variants {mkV "desnudar" ; mkV "despir" ; mkV "despojar" ; mkV "down" ; } ; --*
lin undue_1_A = mkA "indevido" ; --*
lin undue_2_A = mkA "indevido" ; --*
lin undue_3_A = variants {mkA "indevido" ; mkA "injustificado" ; } ; --*
lin undue_4_A = variants {mkA "demasiado" ; mkA "excessivo" ; } ; --*
lin undulate_3_V = mkV "bater" ; --*
lin undulate_4_V = mkV "ondular" ; --*
lin undulation_3_N = mkN "onda" ; --*
lin undying_A = mkA "imortal" ; --*
lin unearth_1_V2 = mkV2 (mkV "desenterrar") ; --*
lin unearth_2_V2 = variants {mkV2 (mkV "desenterrar") ; mkV2 (mkV "escavar") ; } ; --*
lin unearthly_1_A = mkA "espiritual" ; --*
lin unearthly_2_A = variants {mkA "barroco" ; mkA "bizarro" ; mkA "esquisito" ; mkA "estranho" ; mkA "extravagante" ; mkA "misterioso" ; } ; --*
lin unease_1_N = variants {mkN "mal" ; mkN "mal-estar" ; } ; --*
lin unease_2_N = mkN "inquietação" ; --*
lin uneasiness_1_N = mkN "inquietude" ; --*
lin uneasiness_2_N = variants {mkN "mal" ; mkN "mal-estar" ; } ; --*
lin uneasiness_4_N = mkN "inquietação" ; --*
lin uneasiness_5_N = variants {mkN "inquietação" ; mkN "inquietude" ; } ; --*
lin uneasy_1_A = mkA "desassossegado" ; --*
lin uneasy_2_A = mkA "inquieto" ; --*
lin uneasy_3_A = variants {mkA "ansioso" ; mkA "inquieto" ; mkA "nervoso" ; } ; --*
lin uneconomical_1_A = mkA "anti-econômico" ; --*
lin uneffective_A = variants {mkA "inútil" ; mkA "vão" ; } ; --*
lin unemotionality_1_N = variants {mkN "apatia" ; mkN "fleuma" ; mkN "impassibilidade" ; mkN "indiferença" ; } ; --*
lin unemployed_A = mkA "desempregados" ; --*
lin unemployment_N = mkN "desemprego" ; --*
lin unending_A = variants {mkA "eterna" ; mkA "eternas" ; mkA "eterno" ; mkA "eternos" ; mkA "imperecível" ; mkA "interminável" ; mkA "perene" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin unendurable_A = variants {mkA "insuportável" ; mkA "intolerável" ; } ; --*
lin unenviable_1_A = variants {mkA "desconcertante" ; mkA "difícil" ; } ; --*
lin unequal_2_A = mkA "inadequado" ; --*
lin unequalled_1_A = variants {mkA "inigualável" ; mkA "único" ; } ; --*
lin unequivocal_1_A = variants {mkA "inequívoco" ; mkA "unívoco" ; } ; --*
lin unequivocal_2_A = mkA "inequívoco" ; --*
lin unesco_PN = variants {mkPN "Ciência" ; mkPN "Nations" ; mkPN "UNESCO" ; } ; --*
lin unethical_A = mkA "não" ; --*
lin uneven_1_A = variants {mkA "desnivelado" ; mkA "despadronizado" ; mkA "desuniforme" ; } ; --*
lin uneven_3_A = mkA "ímpar" ; --*
lin unevenness_1_N = mkN "desigualdade" ; --*
lin unexpected_A = variants {mkA "imprevisto" ; mkA "inesperado" ; } ; --*
lin unexploited_A = mkA "atrasado" ; --*
lin unfailing_1_A = mkA "à" ; --*
lin unfair_A = mkA "injusto" ; --*
lin unfairness_3_N = mkN "injustiça" ; --*
lin unfaithful_1_A = mkA "infiel" ; --*
lin unfaithful_2_A = mkA "infiel" ; --*
lin unfaithful_3_A = variants {mkA "infiel" ; mkA "sem" ; } ; --*
lin unfaithful_4_A = mkA "infiel" ; --*
lin unfaithfulness_N = mkN "infidelidade" ; --*
lin unfamiliar_A = variants {mkA "desconhecido" ; mkA "estranho" ; mkA "pouco" ; } ; --*
lin unfasten_1_V2 = mkV2 (mkV "desatar") ; --*
lin unfasten_2_V = mkV "desatar" ; --*
lin unfavorable_1_A = mkA "desfavorável" ; --*
lin unfavorable_2_A = mkA "desfavorável" ; --*
lin unfavorable_3_A = variants {mkA "desfavorável" ; mkA "desvantajoso" ; } ; --*
lin unfavourable_1_A = mkA "desfavorável" ; --*
lin unfavourable_2_A = mkA "desfavorável" ; --*
lin unfavourable_3_A = variants {mkA "desfavorável" ; mkA "desvantajoso" ; } ; --*
lin unfeelingness_N = mkN "dureza" ; --*
lin unfeigned_A = variants {mkA "autêntico" ; mkA "verdadeiro" ; } ; --*
lin unfettered_A = mkA "solto" ; --*
lin unfilled_A = mkA "não" ; --*
lin unfinished_1_A = mkA "interminado" ; --*
lin unfinished_2_A = mkA "interminado" ; --*
lin unfit_2_A = mkA "inapropriado" ; --*
lin unfitness_2_N = mkN "incapacidade" ; --*
lin unfit_V2 = variants {mkV2 (mkV "desqualificar") ; mkV2 (mkV "dyskwalifikować") ; mkV2 (mkV "inabilitar") ; } ; --*
lin unflagging_1_A = variants {mkA "incansável" ; mkA "inesgotável" ; mkA "infatigável" ; } ; --*
lin unfold_1_V = variants {mkV "florescer" ; mkV "forth" ; mkV "out" ; } ; --*
lin unfold_2_V2 = variants {mkV2 (mkV "descobrir") ; mkV2 (mkV "descortinar") ; mkV2 (mkV "revelar") ; } ; --*
lin unfold_4_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "desdobrar") ; mkV2 (mkV "out") ; } ; --*
lin unfolding_N = mkN "floração" ; --*
lin unforeseen_A = variants {mkA "imprevisto" ; mkA "inesperado" ; mkA "não" ; mkA "of" ; } ; --*
lin unforfeitable_A = mkA "inalienável" ; --*
lin unforgettable_A = mkA "inesquecível" ; --*
lin unforgiving_2_A = mkA "implacável" ; --*
lin unfortunate_1_A = variants {mkA "infeliz" ; mkA "infortunoso" ; mkA "miserável" ; } ; --*
lin unfortunately_Adv = variants {mkAdv "desgraçadamente" ; mkAdv "infelizmente" ; mkAdv "lamentavelmente" ; } ; --*
lin unfortunate_N = variants {mkN "desafortunado" ; mkN "person" ; } ; --*
lin unfounded_A = variants {mkA "infundado" ; mkA "não" ; mkA "sem" ; mkA "sembase" ; mkA "semfundamento" ; } ; --*
lin unfrequented_A = mkA "solitário" ; --*
lin unfriendly_4_A = variants {mkA "hostil" ; mkA "inóspito" ; } ; --*
lin unfulfilled_A = variants {mkA "não" ; mkA "que" ; } ; --*
lin unfurl_V2 = variants {mkV2 (mkV "desenovelar") ; mkV2 (mkV "desfraldar") ; } ; --*
lin ungainly_1_A = variants {mkA "atrapalhado" ; mkA "desajeitado" ; } ; --*
lin ungenerous_2_A = variants {mkA "ávaro" ; mkA "ávido" ; mkA "tacanho" ; } ; --*
lin ungodly_A = variants {mkA "ímpio" ; mkA "pecaminoso" ; } ; --*
lin ungovernable_A = mkA "indomável" ; --*
lin ungracious_2_A = mkA "descortês" ; --*
lin ungrateful_1_A = variants {mkA "ingrato" ; mkA "mal-agradecido" ; } ; --*
lin ungratefulness_N = mkN "ingratidão" ; --*
lin unguent_N = variants {mkN "pomada" ; mkN "reboco" ; mkN "ungüento" ; } ; --*
lin ungulate_N = variants {mkN "mammal" ; mkN "ungulados" ; } ; --*
lin unhappiness_1_N = variants {mkN "pesar" ; mkN "tristeza" ; } ; --*
lin unhappy_1_A = variants {mkA "infeliz" ; mkA "triste" ; } ; --*
lin unhappy_2_A = mkA "triste" ; --*
lin unhappy_3_A = variants {mkA "doloroso" ; mkA "triste" ; } ; --*
lin unhappy_4_A = mkA "triste" ; --*
lin unharmed_A = variants {mkA "ileso" ; mkA "incólume" ; } ; --*
lin unhealthful_3_A = mkA "insalubre" ; --*
lin unhealthy_1_A = variants {mkA "adoentado" ; mkA "doente" ; mkA "doentio" ; mkA "insalubre" ; } ; --*
lin unhealthy_2_A = mkA "insalubre" ; --*
lin unheard_of_A = mkA "sem" ; --*
lin unhinge_1_V2 = variants {mkV2 (mkV "causar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "transtornar") ; } ; --*
lin unhinge_2_V2 = mkV2 (mkV "remover") ; --*
lin unhitch_V2 = mkV2 (mkV "desengatar") ; --*
lin unhitch_V = mkV "desengatar" ; --*
lin unholy_2_A = variants {mkA "diabólico" ; mkA "infernal" ; mkA "sinistro" ; } ; --*
lin unholy_3_A = mkA "malvado" ; --*
lin unhook_V2 = mkV2 (mkV "desenganchar") ; --*
lin unhorse_V2 = variants {mkV2 (mkV "apear") ; mkV2 (mkV "apear-se") ; mkV2 (mkV "desmontar") ; mkV2 (mkV "down") ; mkV2 (mkV "off") ; } ; --*
lin unhurt_1_A = variants {mkA "ileso" ; mkA "incólume" ; } ; --*
lin unhurt_2_A = variants {mkA "and" ; mkA "são" ; } ; --*
lin unicef_PN = variants {mkPN "Fundo" ; mkPN "Nations" ; } ; --*
lin unicellular_A = mkA "unicelular" ; --*
lin unicorn_N = variants {mkN "licorne" ; mkN "unicórnio" ; } ; --*
lin unicycle_N = mkN "monociclo" ; --*
lin unidentified_2_A = variants {mkA "anónimo" ; mkA "anônimo" ; mkA "incógnito" ; } ; --*
lin unidimensional_A = mkA "unidimensional" ; --*
lin unification_1_N = variants {mkN "fusão" ; mkN "unificação" ; } ; --*
lin unification_2_N = variants {mkN "estado" ; mkN "ligação" ; mkN "união" ; } ; --*
lin unification_3_N = variants {mkN "junção" ; mkN "unificação" ; } ; --*
lin uniform_1_A = variants {mkA "invariável" ; mkA "uniforme" ; } ; --*
lin uniformity_1_N = mkN "uniformidade" ; --*
lin uniformity_2_N = mkN "uniformidade" ; --*
lin uniform_N = variants {mkN "farda" ; mkN "fardamento" ; mkN "uniforme" ; } ; --*
lin unify_1_V2 = variants {mkV2 (mkV "fundir-se") ; mkV2 (mkV "intercalar") ; mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin unify_2_V2 = variants {mkV2 (mkV "confraternizar") ; mkV2 (mkV "misturar") ; } ; --*
lin unify_3_V2 = variants {mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin unify_4_V2 = variants {mkV2 (mkV "reunir") ; mkV2 (mkV "unificar") ; } ; --*
lin unify_5_V2 = variants {mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin unilateral_1_A = mkA "unilateral" ; --*
lin unilateral_2_A = mkA "unilateral" ; --*
lin unimaginable_A = variants {mkA "impossível" ; mkA "incrível" ; mkA "inimaginável" ; mkA "of" ; } ; --*
lin unimpeachable_2_A = variants {mkA "inocente" ; mkA "irrepreensível" ; mkA "irreprochável" ; mkA "sem" ; } ; --*
lin unimportance_1_N = mkN "humildade" ; --*
lin uninflected_3_A = mkA "analítico" ; --*
lin uninhabited_A = variants {mkA "desabitado" ; mkA "inabitado" ; } ; --*
lin uninhibited_A = mkA "irrestrito" ; --*
lin uninjured_A = variants {mkA "indemne" ; mkA "indene" ; } ; --*
lin unintelligent_A = variants {mkA "estúpido" ; mkA "lerdo" ; } ; --*
lin unintelligible_2_A = mkA "opaco" ; --*
lin unintentional_1_A = variants {mkA "desenhado" ; mkA "projetado" ; } ; --*
lin uninterrupted_2_A = mkA "contínuo" ; --*
lin union_11_N = variants {mkN "junção" ; mkN "unificação" ; } ; --*
lin union_1_A = mkA "federal" ; --*
lin union_1_N = variants {mkN "ordem" ; mkN "union" ; } ; --*
lin union_2_A = mkA "sindical" ; --*
lin union_2_N = variants {mkN "Norte" ; mkN "União" ; } ; --*
lin union_3_N = variants {mkN "Acasalamento" ; mkN "acoplamento" ; mkN "Cópula" ; mkN "union" ; } ; --*
lin union_4_N = variants {mkN "estado" ; mkN "ligação" ; mkN "união" ; } ; --*
lin union_5_N = variants {mkN "casal" ; mkN "casamento" ; mkN "conúbio" ; mkN "matrimónio" ; mkN "relationship" ; } ; --*
lin union_7_N = mkN "união" ; --*
lin union_8_N = mkN "união" ; --*
lin unionism_N = variants {mkN "unionism" ; mkN "Unionismo" ; } ; --*
lin unionist_N = variants {mkN "member" ; mkN "sindicalista" ; mkN "unionist" ; } ; --*
lin unique_1_A = variants {mkA "inigualável" ; mkA "único" ; } ; --*
lin unique_3_A = variants {mkA "sem" ; mkA "singular" ; mkA "única" ; mkA "único" ; } ; --*
lin uniqueness_N = variants {mkN "singularidade" ; mkN "unicidade" ; } ; --*
lin unironed_A = mkA "rugoso" ; --*
lin unisex_A = mkA "unissex" ; --*
lin unison_3_N = mkN "uníssono" ; --*
lin unit_1_N = variants {mkN "Medição" ; mkN "Medida" ; mkN "of" ; mkN "unidade" ; } ; --*
lin unit_2_N = variants {mkN "componente" ; mkN "unidade" ; } ; --*
lin unit_4_N = mkN "unidade" ; --*
lin unit_5_N = variants {mkN "block" ; mkN "unidade" ; } ; --*
lin unit_6_N = variants {mkN "todo" ; mkN "unidade" ; } ; --*
lin unitarianism_N = variants {mkN "unitarismo" ; mkN "Unitarismo" ; } ; --*
lin unitary_3_A = mkA "unitário" ; --*
lin unitary_4_A = mkA "unitário" ; --*
lin unite_1_V2 = variants {mkV2 (mkV "reunir") ; mkV2 (mkV "unificar") ; } ; --*
lin unite_1_V = variants {mkV "reunir" ; mkV "unificar" ; } ; --*
lin unite_2_V2 = variants {mkV2 (mkV "fundir-se") ; mkV2 (mkV "intercalar") ; mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin unite_2_V = variants {mkV "fundir-se" ; mkV "intercalar" ; mkV "unificar" ; mkV "unir" ; } ; --*
lin unite_4_V2 = variants {mkV2 (mkV "conectar") ; mkV2 (mkV "juntar") ; mkV2 (mkV "ligar") ; mkV2 (mkV "unir") ; mkV2 (mkV "up") ; } ; --*
lin unite_4_V = variants {mkV "conectar" ; mkV "juntar" ; mkV "ligar" ; mkV "unir" ; mkV "up" ; } ; --*
lin unite_5_V2 = variants {mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin unite_6_V2 = variants {mkV2 (mkV "unificar") ; mkV2 (mkV "unir") ; } ; --*
lin united_1_A = mkA "unido" ; --*
lin unity_1_N = mkN "integridade" ; --*
lin unity_2_N = variants {mkN "1" ; mkN "um" ; } ; --*
lin unity_3_N = mkN "unidade" ; --*
lin universal_1_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin universal_4_N = variants {mkN "joint" ; mkN "junta" ; } ; --*
lin universality_N = mkN "universalidade" ; --*
lin universe_1_N = variants {mkN "cosmo" ; mkN "criação" ; mkN "mundo" ; mkN "natureza" ; mkN "universo" ; mkN "Universo" ; } ; --*
lin universe_2_N = mkN "universo" ; --*
lin universe_3_N = variants {mkN "of" ; mkN "universo" ; } ; --*
lin university_1_N = mkN "universidade" ; --*
lin university_2_N = mkN "universidade" ; --*
lin university_3_N = mkN "universidade" ; --*
lin unjust_1_A = mkA "injusto" ; --*
lin unjust_2_A = mkA "injusto" ; --*
lin unjust_3_A = mkA "injusto" ; --*
lin unjustifiable_A = mkA "insustentável" ; --*
lin unjustified_A = variants {mkA "indevido" ; mkA "injustificado" ; } ; --*
lin unknowingness_2_N = mkN "ignorância" ; --*
lin unknown_1_A = variants {mkA "desconhecida" ; mkA "desconhecido" ; } ; --*
lin unknown_1_N = variants {mkN "incognita" ; mkN "region" ; mkN "terra" ; } ; --*
lin unknown_2_A = variants {mkA "anónimo" ; mkA "anônimo" ; mkA "incógnito" ; } ; --*
lin unknown_2_N = variants {mkN "estrangeiro" ; mkN "pessoa" ; } ; --*
lin unknown_4_A = variants {mkA "desconhecido" ; mkA "obscuro" ; } ; --*
lin unlawful_2_A = variants {mkA "fora" ; mkA "ilegal" ; } ; --*
lin unlawful_3_A = mkA "ilegal" ; --*
lin unlawful_4_A = mkA "ilegal" ; --*
lin unlawful_5_A = variants {mkA "ilegal" ; mkA "ilegítimo" ; mkA "ilícito" ; } ; --*
lin unleaded_1_A = mkA "sem" ; --*
lin unleaded_2_A = mkA "sem" ; --*
lin unlearn_1_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "desaprender") ; mkV2 (mkV "esquecer") ; } ; --*
lin unlearn_2_V2 = mkV2 (mkV "desaprender") ; --*
lin unleash_1_V2 = mkV2 (mkV "liberar") ; --*
lin unleash_2_V2 = mkV2 (mkV "desencadear") ; --*
lin unleash_3_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "loose") ; mkV2 (mkV "soltar") ; } ; --*
lin unleavened_A = mkA "ázimo" ; --*
lin unlettered_2_A = variants {mkA "ignorante" ; mkA "iletrado" ; mkA "néscio" ; } ; --*
lin unlike_1_A = variants {mkA "desigual" ; mkA "diferente" ; } ; --*
lin unlike_2_A = variants {mkA "desigual" ; mkA "diferente" ; } ; --*
lin unlikelihood_N = mkN "improbabilidade" ; --*
lin unlikely_1_A = mkA "improvável" ; --*
lin unlikely_2_A = mkA "improvável" ; --*
lin unlikely_3_A = mkA "improvável" ; --*
lin unlikeness_N = variants {mkN "desigualdade" ; mkN "diferença" ; mkN "dissimilitude" ; } ; --*
lin unlimited_2_A = mkA "ilimitado" ; --*
lin unlimited_3_A = variants {mkA "ilimitado" ; mkA "inesgotável" ; } ; --*
lin unload_2_V2 = mkV2 (mkV "descarregar") ; --*
lin unloading_N = mkN "luxação" ; --*
lin unlock_1_V2 = variants {mkV2 (mkV "abrir") ; mkV2 (mkV "desfechar") ; mkV2 (mkV "destrancar") ; mkV2 (mkV "destravar") ; } ; --*
lin unlock_3_V = mkV "abrir" ; --*
lin unlooked_for_A = variants {mkA "imprevisto" ; mkA "inesperado" ; mkA "não" ; mkA "of" ; } ; --*
lin unloose_1_V2 = variants {mkV2 (mkV "liberar") ; mkV2 (mkV "soltar") ; } ; --*
lin unmalted_A = mkA "não" ; --*
lin unmanly_1_A = mkA "efeminado" ; --*
lin unmanly_2_A = mkA "pusilânime" ; --*
lin unmannered_1_A = variants {mkA "descortês" ; mkA "grosseiro" ; mkA "malcomportado" ; mkA "malcriado" ; mkA "mal-educado" ; mkA "rude" ; } ; --*
lin unmannerly_A = variants {mkA "descortês" ; mkA "grosseiro" ; mkA "malcomportado" ; mkA "malcriado" ; mkA "mal-educado" ; mkA "rude" ; } ; --*
lin unman_V2 = variants {mkV2 (mkV "brochar") ; mkV2 (mkV "desanimar") ; } ; --*
lin unmarried_A = mkA "solteiro" ; --*
lin unmask_1_V2 = mkV2 (mkV "desmascarar") ; --*
lin unmask_2_V2 = mkV2 (mkV "desmascarar") ; --*
lin unmatchable_A = variants {mkA "and" ; mkA "incomparável" ; mkA "sem" ; } ; --*
lin unmatched_2_A = variants {mkA "and" ; mkA "incomparável" ; mkA "sem" ; } ; --*
lin unmeasured_2_A = mkA "sem" ; --*
lin unmelodious_1_A = mkA "desafinado" ; --*
lin unmerciful_A = variants {mkA "imisericordioso" ; mkA "impiedoso" ; } ; --*
lin unmindful_A = mkA "insensível" ; --*
lin unmingled_A = variants {mkA "pura" ; mkA "puro" ; } ; --*
lin unmistakable_2_A = variants {mkA "evidente" ; mkA "manifesto" ; mkA "óbvio" ; mkA "patente" ; } ; --*
lin unmixed_1_A = variants {mkA "pura" ; mkA "puro" ; } ; --*
lin unmovable_A = variants {mkA "estacionário" ; mkA "imóvel" ; } ; --*
lin unmoving_1_A = mkA "imóvel" ; --*
lin unmoving_2_A = mkA "imóvel" ; --*
lin unnamed_A = variants {mkA "anónimo" ; mkA "anônimo" ; mkA "incógnito" ; } ; --*
lin unnatural_1_A = variants {mkA "afetado" ; mkA "antinatural" ; } ; --*
lin unnatural_2_A = mkA "anormal" ; --*
lin unnatural_3_A = variants {mkA "afetado" ; mkA "artificial" ; } ; --*
lin unnecessary_A = variants {mkA "desnecessária" ; mkA "desnecessário" ; } ; --*
lin unnerve_V2 = variants {mkV2 (mkV "descontrolar") ; mkV2 (mkV "perturbar") ; } ; --*
lin un_N = variants {mkN "Nations" ; mkN "ONU" ; } ; --*
lin unnumbered_A = variants {mkA "incontável" ; mkA "infinito" ; mkA "inumerável" ; mkA "inúmero" ; mkA "sem" ; } ; --*
lin unobjectionable_2_A = mkA "inócuo" ; --*
lin unobserved_A = mkA "despercebido" ; --*
lin unobtainable_A = variants {mkA "inacessível" ; mkA "não" ; } ; --*
lin unoffending_2_A = mkA "inofensivo" ; --*
lin unofficial_1_A = variants {mkA "não" ; mkA "oficioso" ; } ; --*
lin unofficial_2_A = mkA "oficioso" ; --*
lin unopen_A = mkA "fechado" ; --*
lin unorthodoxy_1_N = variants {mkN "heresia" ; mkN "heterodoxia" ; } ; --*
lin unpack_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "sacar") ; } ; --*
lin unpaid_2_A = mkA "voluntário" ; --*
lin unparalleled_A = variants {mkA "inigualável" ; mkA "único" ; } ; --*
lin unpasteurized_1_A = mkA "não" ; --*
lin unpick_1_V2 = variants {mkV2 (mkV "desemaranhar") ; mkV2 (mkV "desembaraçar") ; mkV2 (mkV "desembaralhar") ; mkV2 (mkV "desenrolar") ; mkV2 (mkV "deslindar") ; } ; --*
lin unplayful_A = variants {mkA "sério" ; mkA "sombrio" ; } ; --*
lin unpleasant_A = variants {mkA "arisco" ; mkA "desagradável" ; } ; --*
lin unpolluted_A = mkA "impoluto" ; --*
lin unposed_A = mkA "espontâneo" ; --*
lin unprecedented_A = mkA "sem" ; --*
lin unpredictability_2_N = mkN "volatilidade" ; --*
lin unpredictable_1_A = mkA "imprevisível" ; --*
lin unpredictable_2_A = mkA "imprevisível" ; --*
lin unpredictable_3_A = mkA "irregular" ; --*
lin unprejudiced_A = mkA "imparcial" ; --*
lin unprocessed_1_A = variants {mkA "cru" ; mkA "não" ; } ; --*
lin unprompted_A = mkA "impulsivo" ; --*
lin unproved_A = mkA "não" ; --*
lin unproven_A = mkA "não" ; --*
lin unpublished_A = mkA "inédito" ; --*
lin unquestionable_2_A = variants {mkA "autêntico" ; mkA "fide" ; mkA "genuíno" ; } ; --*
lin unquestioned_A = variants {mkA "incontestado" ; mkA "inquestionável" ; } ; --*
lin unquestioning_2_A = mkA "implícito" ; --*
lin unquiet_2_A = variants {mkA "ansioso" ; mkA "inquieto" ; mkA "nervoso" ; } ; --*
lin unquotable_A = mkA "irrepetível" ; --*
lin unravel_1_V2 = variants {mkV2 (mkV "desemaranhar") ; mkV2 (mkV "desembaraçar") ; mkV2 (mkV "desembaralhar") ; mkV2 (mkV "desenrolar") ; mkV2 (mkV "deslindar") ; } ; --*
lin unravel_2_V2 = variants {mkV2 (mkV "desenrolar") ; mkV2 (mkV "out") ; } ; --*
lin unravel_3_V2 = variants {mkV2 (mkV "desfiar") ; mkV2 (mkV "deslindar") ; } ; --*
lin unravel_3_V = variants {mkV "desfiar" ; mkV "deslindar" ; } ; --*
lin unreal_1_A = variants {mkA "irreal" ; mkA "não" ; } ; --*
lin unreal_2_A = mkA "surreal" ; --*
lin unreal_3_A = variants {mkA "artificial" ; mkA "f''" ; } ; --*
lin unreal_4_A = variants {mkA "insubstancial" ; mkA "insustancial" ; } ; --*
lin unrealized_1_A = variants {mkA "não" ; mkA "que" ; } ; --*
lin unreasonable_2_A = variants {mkA "demasiado" ; mkA "excessivo" ; } ; --*
lin unreassuring_A = variants {mkA "angustiante" ; mkA "preocupante" ; } ; --*
lin unrecognizable_1_A = mkA "irreconhecível" ; --*
lin unrecorded_A = mkA "ao" ; --*
lin unrecoverable_A = mkA "irrecuperável" ; --*
lin unrefined_1_A = variants {mkA "cru" ; mkA "não" ; } ; --*
lin unregenerate_1_A = variants {mkA "obstinado" ; mkA "teimosa" ; mkA "teimoso" ; } ; --*
lin unrehearsed_A = variants {mkA "extemporânea" ; mkA "extemporâneo" ; } ; --*
lin unrelenting_1_A = mkA "implacável" ; --*
lin unrelenting_2_A = mkA "brutal" ; --*
lin unrelenting_3_A = mkA "persistente" ; --*
lin unreliable_2_A = mkA "não" ; --*
lin unreliable_3_A = mkA "traiçoeiro" ; --*
lin unremarkable_A = variants {mkA "cotidiano" ; mkA "quotidiano" ; } ; --*
lin unremitting_A = variants {mkA "constante" ; mkA "contínuo" ; mkA "incessante" ; mkA "perpétuo" ; mkA "sem" ; } ; --*
lin unrepeatable_1_A = mkA "irrepetível" ; --*
lin unresolved_1_A = mkA "não" ; --*
lin unresolved_3_A = mkA "dissonante" ; --*
lin unrest_1_N = variants {mkN "agitação" ; mkN "perturbação" ; } ; --*
lin unrest_2_N = mkN "desassossego" ; --*
lin unrestrained_2_A = variants {mkA "delirante" ; mkA "frenético" ; } ; --*
lin unretentive_A = mkA "desconsiderado" ; --*
lin unripe_1_A = variants {mkA "imaturo" ; mkA "verde" ; } ; --*
lin unripe_2_A = mkA "verde" ; --*
lin unripened_A = variants {mkA "imaturo" ; mkA "verde" ; } ; --*
lin unrivalled_A = variants {mkA "and" ; mkA "incomparável" ; mkA "sem" ; } ; --*
lin unroll_1_V2 = variants {mkV2 (mkV "desenrolar") ; mkV2 (mkV "off") ; } ; --*
lin unroll_2_V2 = variants {mkV2 (mkV "desenovelar") ; mkV2 (mkV "desfraldar") ; } ; --*
lin unruffled_2_A = variants {mkA "quieto" ; mkA "silenciosa" ; } ; --*
lin unruly_1_A = mkA "descontrolado" ; --*
lin unruly_2_A = mkA "desobediente" ; --*
lin unruly_3_A = mkA "indomável" ; --*
lin unsafe_1_A = mkA "inseguro" ; --*
lin unsafe_2_A = mkA "perigoso" ; --*
lin unsafe_3_A = mkA "inseguro" ; --*
lin unsaponified_A = mkA "não" ; --*
lin unsatisfying_A = mkA "decepcionante" ; --*
lin unsaturated_2_A = mkA "saturação" ; --*
lin unsavoury_2_A = mkA "repugnante" ; --*
lin unsay_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "devolver") ; } ; --*
lin unscathed_A = variants {mkA "ileso" ; mkA "incólume" ; } ; --*
lin unscheduled_A = mkA "não" ; --*
lin unscramble_1_V2 = mkV2 (mkV "desembaralhar") ; --*
lin unscramble_2_V2 = variants {mkV2 (mkV "desemaranhar") ; mkV2 (mkV "desembaraçar") ; mkV2 (mkV "desembaralhar") ; mkV2 (mkV "desenrolar") ; mkV2 (mkV "deslindar") ; } ; --*
lin unscrew_1_V2 = mkV2 (mkV "desaparafusar") ; --*
lin unscrupulous_A = mkA "inescrupuloso" ; --*
lin unsealed_1_A = mkA "incerto" ; --*
lin unseeing_2_A = mkA "cego" ; --*
lin unseemly_A = variants {mkA "indecente" ; mkA "inoportuno" ; mkA "maladequado" ; } ; --*
lin unseen_2_A = mkA "despercebido" ; --*
lin unseen_3_A = variants {mkA "imprevisto" ; mkA "inesperado" ; mkA "não" ; mkA "of" ; } ; --*
lin unselfishness_2_N = mkN "generosidade" ; --*
lin unserviceable_2_A = variants {mkA "inutilizável" ; mkA "sem" ; } ; --*
lin unsettle_V2 = variants {mkV2 (mkV "descontrolar") ; mkV2 (mkV "perturbar") ; } ; --*
lin unsex_3_V2 = mkV2 (mkV "esterilizar") ; --*
lin unshod_2_A = mkA "descalço" ; --*
lin unsighted_A = variants {mkA "cego" ; mkA "invisual" ; } ; --*
lin unskilled_3_A = mkA "incompetente" ; --*
lin unsleeping_A = mkA "acordado" ; --*
lin unsnarling_N = mkN "desenrascanço" ; --*
lin unsolved_A = mkA "não" ; --*
lin unsophisticated_3_A = variants {mkA "caipira" ; mkA "provinciano" ; mkA "rústico" ; } ; --*
lin unsound_2_A = variants {mkA "com" ; mkA "imcompleto" ; } ; --*
lin unsound_4_A = variants {mkA "ill" ; mkA "instável" ; } ; --*
lin unsparing_1_A = mkA "exuberante" ; --*
lin unspeakable_1_A = variants {mkA "indescritível" ; mkA "inefável" ; } ; --*
lin unspeakable_2_A = variants {mkA "abominável" ; mkA "apavorante" ; mkA "atroz" ; mkA "horrível" ; mkA "terrível" ; } ; --*
lin unspeakable_3_A = mkA "inefável" ; --*
lin unspoken_1_A = variants {mkA "mudo" ; mkA "sem" ; } ; --*
lin unsporting_A = mkA "sujo" ; --*
lin unsportsmanlike_A = mkA "sujo" ; --*
lin unstable_1_A = variants {mkA "instável" ; mkA "precário" ; } ; --*
lin unstable_3_A = mkA "precário" ; --*
lin unstable_4_A = variants {mkA "ill" ; mkA "instável" ; } ; --*
lin unstable_6_A = mkA "instável" ; --*
lin unsteadiness_2_N = mkN "instabilidade" ; --*
lin unsteady_1_A = variants {mkA "inseguro" ; mkA "oscilante" ; } ; --*
lin unsuccessful_1_A = variants {mkA "mal" ; mkA "sem" ; } ; --*
lin unsuccessful_2_A = variants {mkA "abortado" ; mkA "abortivo" ; mkA "fracassado" ; mkA "frustrado" ; } ; --*
lin unsuitable_1_A = mkA "indecoroso" ; --*
lin unsuitable_3_A = mkA "inapropriado" ; --*
lin unsuitable_4_A = mkA "inadequado" ; --*
lin unsuited_A = mkA "incompatível" ; --*
lin unsung_1_A = variants {mkA "desconhecido" ; mkA "obscuro" ; } ; --*
lin unsure_1_A = variants {mkA "inseguro" ; mkA "tímido" ; } ; --*
lin unsure_2_A = variants {mkA "incerto" ; mkA "inseguro" ; } ; --*
lin unsurmountable_1_A = variants {mkA "inexorável" ; mkA "insuperável" ; } ; --*
lin unsusceptibility_N = mkN "imunidade" ; --*
lin unswerving_2_A = mkA "inquebrantável" ; --*
lin unsympathetic_3_A = mkA "fechado" ; --*
lin untamed_A = variants {mkA "selvagem" ; mkA "silvestre" ; } ; --*
lin untidy_A = variants {mkA "eriçado" ; mkA "hirto" ; } ; --*
lin untie_1_V2 = variants {mkV2 (mkV "desamarrar") ; mkV2 (mkV "desatar") ; } ; --*
lin untie_1_V = variants {mkV "desamarrar" ; mkV "desatar" ; } ; --*
lin untie_2_V2 = mkV2 (mkV "desamarrar") ; --*
lin untied_3_A = mkA "solto" ; --*
lin untimely_2_A = variants {mkA "antes" ; mkA "prematuro" ; } ; --*
lin untiring_A = variants {mkA "aplicado" ; mkA "assíduo" ; mkA "diligente" ; mkA "esforçado" ; mkA "laborioso" ; mkA "operoso" ; mkA "trabalhador" ; } ; --*
lin untouchable_1_A = mkA "intocável" ; --*
lin untouchable_3_A = mkA "intocável" ; --*
lin untouchable_4_A = mkA "intocável" ; --*
lin untouchable_5_A = variants {mkA "inacessível" ; mkA "não" ; } ; --*
lin untoward_1_A = variants {mkA "indecente" ; mkA "inoportuno" ; mkA "maladequado" ; } ; --*
lin untranslatable_A = mkA "intraduzível" ; --*
lin untrue_4_A = variants {mkA "artificial" ; mkA "falso" ; } ; --*
lin untruthfulness_N = mkN "falsidade" ; --*
lin untruth_N = variants {mkN "falsidade" ; mkN "mentira" ; } ; --*
lin untypical_A = mkA "atípico" ; --*
lin ununbium_N = variants {mkN "112" ; mkN "number" ; mkN "ununbio" ; mkN "unúnbio" ; } ; --*
lin ununhexium_N = variants {mkN "116" ; mkN "number" ; mkN "Unun-héxio" ; } ; --*
lin ununpentium_N = variants {mkN "115" ; mkN "number" ; mkN "ununpentio" ; mkN "ununpêntio" ; } ; --*
lin ununquadium_N = variants {mkN "114" ; mkN "Fleróvio" ; mkN "number" ; mkN "Ununquádio" ; } ; --*
lin ununtrium_N = variants {mkN "113" ; mkN "number" ; mkN "ununtrio" ; mkN "Ununtrio" ; } ; --*
lin unusual_1_A = variants {mkA "extraordinário" ; mkA "incomun" ; mkA "insólito" ; mkA "inusual" ; } ; --*
lin unusual_2_A = variants {mkA "estranho" ; mkA "extraordinário" ; mkA "insólito" ; mkA "inusual" ; } ; --*
lin unusual_3_A = variants {mkA "extraordinário" ; mkA "inesperado" ; mkA "insólito" ; mkA "inusual" ; } ; --*
lin unutterable_1_A = mkA "inefável" ; --*
lin unutterable_2_A = variants {mkA "indescritível" ; mkA "inefável" ; } ; --*
lin unvarying_1_A = mkA "constante" ; --*
lin unvarying_3_A = variants {mkA "invariável" ; mkA "uniforme" ; } ; --*
lin unveil_1_V = variants {mkV "desvelar" ; mkV "revelar" ; } ; --*
lin unveil_2_V2 = variants {mkV2 (mkV "desvendar") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; mkV2 (mkV "trazer") ; } ; --*
lin unveil_3_V2 = mkV2 (mkV "destampar") ; --*
lin unveiling_2_N = variants {mkN "appearance" ; mkN "apresentação" ; mkN "introdução" ; mkN "lançamento" ; } ; --*
lin unvoiced_1_A = mkA "surdo" ; --*
lin unwarranted_1_A = mkA "insustentável" ; --*
lin unwarranted_2_A = variants {mkA "infundado" ; mkA "não" ; mkA "sem" ; mkA "sembase" ; mkA "semfundamento" ; } ; --*
lin unwarranted_3_A = variants {mkA "indevido" ; mkA "injustificado" ; } ; --*
lin unwashed_1_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "popular" ; mkA "vulgar" ; } ; --*
lin unwell_A = variants {mkA "com" ; mkA "indisposto" ; mkA "menstruada" ; mkA "the" ; } ; --*
lin unwieldy_3_A = variants {mkA "atrapalhado" ; mkA "desajeitado" ; } ; --*
lin unwillingness_N = variants {mkN "hesitação" ; mkN "relutância" ; } ; --*
lin unwind_1_V2 = variants {mkV2 (mkV "desenrolar") ; mkV2 (mkV "off") ; } ; --*
lin unwind_2_V2 = mkV2 (mkV "desembaraçar") ; --*
lin unwind_2_V = mkV "desembaraçar" ; --*
lin unwind_3_V = variants {mkV "descontrair" ; mkV "down" ; mkV "pegar" ; mkV "relaxar" ; mkV "up" ; } ; --*
lin unwind_4_V2 = variants {mkV2 (mkV "espairecer") ; mkV2 (mkV "relaxar") ; mkV2 (mkV "relaxed") ; mkV2 (mkV "up") ; } ; --*
lin unwise_1_A = mkA "insensato" ; --*
lin unwitting_2_A = variants {mkA "involuntário" ; mkA "sem" ; } ; --*
lin unworkable_A = variants {mkA "impraticável" ; mkA "não" ; } ; --*
lin unworried_A = mkA "despreocupado" ; --*
lin unworthy_1_A = mkA "indigno" ; --*
lin unworthy_3_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin unwrap_1_V2 = mkV2 (mkV "desembrulhar") ; --*
lin unwrap_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "descerrar") ; mkV2 (mkV "divulgar") ; mkV2 (mkV "on") ; mkV2 (mkV "out") ; mkV2 (mkV "revelar") ; } ; --*
lin unwritten_1_A = mkA "consuetudinário" ; --*
lin unwritten_2_A = variants {mkA "bucal" ; mkA "oral" ; } ; --*
lin unwritten_3_A = mkA "espontâneo" ; --*
lin unyielding_1_A = variants {mkA "porfiado" ; mkA "teimoso" ; mkA "tenaz" ; } ; --*
lin up_1_Adv = mkAdv "de" ; --*
lin up_2_Adv = variants {mkAdv "aumentar" ; mkAdv "elevar" ; } ; --*
lin up_5_Adv = variants {mkAdv "acima" ; mkAdv "para" ; } ; --*
lin up_and_coming_A = mkA "diligente" ; --*
lin up_beat_1_N = variants {mkN "bem-estar" ; mkN "eudemonismo" ; mkN "saúde" ; } ; --*
lin upbeat_A = mkA "alegre" ; --*
lin upbraid_V2 = mkV2 (mkV "repreender") ; --*
lin upbringing_1_N = mkN "educação" ; --*
lin upcoming_A = variants {mkA "iminente" ; mkA "próximo" ; mkA "que" ; } ; --*
lin update_1_N = variants {mkN "actualização" ; mkN "atualização" ; } ; --*
lin update_1_V2 = variants {mkV2 (mkV "actualizar") ; mkV2 (mkV "tornar") ; } ; --*
lin update_2_V2 = mkV2 (mkV "atualizar") ; --*
lin update_3_V2 = variants {mkV2 (mkV "actualizar") ; mkV2 (mkV "atualizar") ; } ; --*
lin upgrade_1_N = variants {mkN "aclive" ; mkN "declive" ; mkN "encosta" ; mkN "ladeira" ; mkN "rampa" ; mkN "subida" ; } ; --*
lin upgrade_1_V2 = mkV2 (mkV "aumentar") ; --*
lin upgrade_2_V2 = mkV2 (mkV "melhorar") ; --*
lin upgrade_3_V2 = variants {mkV2 (mkV "avançar") ; mkV2 (mkV "upstairs") ; } ; --*
lin upgrade_6_N = variants {mkN "Up" ; mkN "Upgrade" ; } ; --*
lin upheaval_1_N = variants {mkN "turbulência" ; mkN "und" ; } ; --*
lin upheaval_4_N = mkN "distúrbio" ; --*
lin uphill_1_Adv = mkAdv "para" ; --*
lin uphill_2_Adv = mkAdv "para" ; --*
lin uphold_1_V2 = variants {mkV2 (mkV "continuar") ; mkV2 (mkV "manter") ; mkV2 (mkV "on") ; mkV2 (mkV "preservar") ; } ; --*
lin uphold_2_V2 = mkV2 (mkV "suportar") ; --*
lin upholster_V2 = mkV2 (mkV "estofar") ; --*
lin upkeep_1_N = mkN "manutenção" ; --*
lin upkeep_2_N = mkN "sustentação" ; --*
lin upland_N = mkN "terras" ; --*
lin uplift_1_V2 = variants {mkV2 (mkV "elevar") ; mkV2 (mkV "intoxicar") ; mkV2 (mkV "up") ; } ; --*
lin uplift_2_V2 = mkV2 (mkV "levantar") ; --*
lin upper_2_A = variants {mkA "acima" ; mkA "superior" ; } ; --*
lin upper_3_N = variants {mkN "anfetamina" ; mkN "pill" ; } ; --*
lin uppermost_1_Adv = mkAdv "em" ; --*
lin uppermost_2_Adv = mkAdv "em" ; --*
lin uppish_A = variants {mkA "big" ; mkA "ranhoso" ; } ; --*
lin upright_1_A = variants {mkA "honrado" ; mkA "vertical" ; } ; --*
lin upright_2_A = variants {mkA "bom" ; mkA "direito" ; mkA "justo" ; } ; --*
lin upright_3_A = mkA "vertical" ; --*
lin uprightness_3_N = mkN "retidão" ; --*
lin uprising_N = variants {mkN "insurreição" ; mkN "rebelião" ; mkN "revolta" ; } ; --*
lin uproar_2_N = mkN "rusga" ; --*
lin uproarious_2_A = variants {mkA "hilária" ; mkA "hilariante" ; mkA "hilário" ; } ; --*
lin uproot_1_V2 = mkV2 (mkV "desenraizar") ; --*
lin uproot_2_V2 = variants {mkV2 (mkV "erradicar") ; mkV2 (mkV "exterminar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; } ; --*
lin uproot_3_V2 = variants {mkV2 (mkV "arrancar") ; mkV2 (mkV "desenraizar") ; mkV2 (mkV "extirpar") ; mkV2 (mkV "out") ; mkV2 (mkV "sacar") ; } ; --*
lin upset_1_A = mkA "preocupado" ; --*
lin upset_1_N = mkN "transtorno" ; --*
lin upset_2_A = mkA "perplexo" ; --*
lin upset_2_N = mkN "desarranjo" ; --*
lin upset_2_V2 = variants {mkV2 (mkV "confundir") ; mkV2 (mkV "perturbar") ; } ; --*
lin upset_2_V = variants {mkV "confundir" ; mkV "perturbar" ; } ; --*
lin upset_3_N = variants {mkN "bagunça" ; mkN "distúrbio" ; mkN "doença" ; mkN "transtorno" ; } ; --*
lin upset_3_V2 = variants {mkV2 (mkV "disturbar") ; mkV2 (mkV "perturbar") ; } ; --*
lin upset_4_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "virar") ; } ; --*
lin upset_5_V2 = mkV2 (mkV "forjar") ; --*
lin upset_5_V = mkV "forjar" ; --*
lin upshot_N = variants {mkN "conseqüência" ; mkN "efeito" ; mkN "efeitos" ; mkN "fim" ; mkN "resultado" ; } ; --*
lin upside_N = variants {mkN "side" ; mkN "topo" ; } ; --*
lin upsilon_N = variants {mkN "hipsilo" ; mkN "ipsilão" ; mkN "ípsilon" ; mkN "ipsilone" ; mkN "Y" ; mkN "Υ" ; } ; --*
lin upstage_2_A = variants {mkA "afastado" ; mkA "alijado" ; mkA "distante" ; } ; --*
lin uptake_1_N = mkN "ingestão" ; --*
lin uptight_A = variants {mkA "irritável" ; mkA "strung" ; mkA "tenso" ; } ; --*
lin uptime_N = mkN "Uptime" ; --*
lin up_to_date_1_A = variants {mkA "actual" ; mkA "até" ; mkA "atual" ; mkA "moderno" ; mkA "vigente" ; } ; --*
lin up_to_date_2_A = mkA "actual" ; --*
lin up_to_the_minute_A = variants {mkA "mais" ; mkA "último" ; } ; --*
lin up_V2 = mkV2 (mkV "aumentar") ; --*
lin upward_1_Adv = mkAdv "de" ; --*
lin upward_2_Adv = variants {mkAdv "acima" ; mkAdv "para" ; } ; --*
lin upwards_1_Adv = mkAdv "de" ; --*
lin upwards_2_Adv = variants {mkAdv "acima" ; mkAdv "para" ; } ; --*
lin uracil_N = mkN "Uracilo" ; --*
lin uraninite_N = mkN "pechblenda" ; --*
lin uranium_N = variants {mkN "number" ; mkN "Uranio" ; mkN "urânio" ; } ; --*
lin uranus_1_PN = mkPN "Urano" ; --*
lin uranus_2_PN = mkPN "Urano" ; --*
lin uranyl_N = variants {mkN "group" ; mkN "radical" ; mkN "uranilo" ; } ; --*
lin urban_1_A = mkA "urbano" ; --*
lin urban_2_A = mkA "urbano" ; --*
lin urbane_A = variants {mkA "cortês" ; mkA "educado" ; mkA "polido" ; } ; --*
lin urbanization_1_N = variants {mkN "urbanização" ; mkN "urbanizações" ; } ; --*
lin urbanization_2_N = variants {mkN "urbanização" ; mkN "urbanizações" ; } ; --*
lin urbanize_1_V2 = variants {mkV2 (mkV "industrializar") ; mkV2 (mkV "urbanizar") ; } ; --*
lin urceolate_A = mkA "urceolado" ; --*
lin urchin_N = variants {mkN "gaiato" ; mkN "moleque" ; mkN "pivete" ; } ; --*
lin urea_N = variants {mkN "ureia" ; mkN "Uréia" ; } ; --*
lin urease_N = mkN "urease" ; --*
lin uremia_1_N = variants {mkN "azotemia" ; mkN "Azotemia" ; } ; --*
lin ureter_N = variants {mkN "ureter" ; mkN "uréter" ; } ; --*
lin urethral_A = mkA "uretral" ; --*
lin urethra_N = mkN "uretra" ; --*
lin urethritis_N = mkN "uretrite" ; --*
lin urge_1_N = mkN "impulso" ; --*
lin urge_1_V2V = variants {mkV2V (mkV "exortar") ; mkV2V (mkV "on") ; mkV2V (mkV "urgir") ; } ; --*
lin urge_2_N = mkN "comichão" ; --*
lin urge_2_V2 = variants {mkV2 (mkV "advocar") ; mkV2 (mkV "recomendar") ; mkV2 (mkV "urgir") ; } ; --*
lin urge_2_VS = variants {mkVS (mkV "advocar") ; mkVS (mkV "recomendar") ; mkVS (mkV "urgir") ; } ; --*
lin urge_3_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin urgency_1_N = mkN "urgência" ; --*
lin urgency_2_N = mkN "urgência" ; --*
lin urgency_3_N = mkN "urgência" ; --*
lin urgent_A = mkA "urgente" ; --*
lin urge_on_1_V2 = variants {mkV2 (mkV "incentivar") ; mkV2 (mkV "inspirar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin urging_1_N = mkN "provocação" ; --*
lin urinal_N = variants {mkN "mictório" ; mkN "penico" ; } ; --*
lin urinalysis_1_N = variants {mkN "exame" ; mkN "urinálise" ; } ; --*
lin urinary_1_A = mkA "urinário" ; --*
lin urinate_1_V = mkV "urinar" ; --*
lin urinate_2_V = variants {mkV "a" ; mkV "mijar" ; mkV "oneself" ; mkV "urinar" ; mkV "water" ; } ; --*
lin urine_N = variants {mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin urn_2_N = mkN "urna" ; --*
lin urobilinogen_N = variants {mkN "Urobilinogénio" ; mkN "urobilinogênio" ; } ; --*
lin urochord_1_N = variants {mkN "Tunicados" ; mkN "Urochordata" ; } ; --*
lin urologist_N = mkN "urologista" ; --*
lin urology_N = variants {mkN "medicine" ; mkN "urologia" ; } ; --*
lin urtication_1_N = variants {mkN "rash" ; mkN "urticária" ; mkN "Urticária" ; } ; --*
lin urtication_2_N = mkN "Urticante" ; --*
lin uruguayan_A = variants {mkA "uruguaia" ; mkA "uruguaio" ; } ; --*
lin uruguayan_N = variants {mkN "uruguaia" ; mkN "uruguaio" ; } ; --*
lin uruguay_PN = mkPN "Uruguai" ; --*
lin usa_1_PN = variants {mkPN "América" ; mkPN "Continente" ; mkPN "EEUU" ; mkPN "EstadosUnidosdaAmérica" ; mkPN "EUA" ; mkPN "E.U.A." ; mkPN "States" ; } ; --*
lin usa_2_PN = variants {mkPN "Army" ; mkPN "Exército" ; mkPN "S." ; mkPN "States" ; } ; --*
lin usable_1_A = variants {mkA "usável" ; mkA "utilizável" ; } ; --*
lin usable_2_A = variants {mkA "funcional" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin usable_3_A = variants {mkA "disponível" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin usaf_N = variants {mkN "Air" ; mkN "Força" ; mkN "Force" ; mkN "S." ; mkN "States" ; } ; --*
lin usage_1_N = variants {mkN "uso" ; mkN "utilização" ; } ; --*
lin usage_2_N = variants {mkN "costume" ; mkN "emprego" ; mkN "hábito" ; } ; --*
lin usage_3_N = mkN "emprego" ; --*
lin usance_2_N = variants {mkN "consumo" ; mkN "consumption" ; mkN "of" ; } ; --*
lin usance_3_N = variants {mkN "costume" ; mkN "emprego" ; mkN "hábito" ; } ; --*
lin use_1_N = variants {mkN "uso" ; mkN "utilização" ; } ; --*
lin use_1_V2 = variants {mkV2 (mkV "empregar") ; mkV2 (mkV "usar") ; mkV2 (mkV "utilizar") ; } ; --*
lin use_2_N = variants {mkN "função" ; mkN "propósito" ; } ; --*
lin use_2_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "usar") ; } ; --*
lin use_3_V2 = variants {mkV2 (mkV "despender") ; mkV2 (mkV "esgotar") ; mkV2 (mkV "gastar") ; } ; --*
lin use_4_N = variants {mkN "consumo" ; mkN "consumption" ; mkN "of" ; } ; --*
lin use_4_V2 = variants {mkV2 (mkV "usar") ; mkV2 (mkV "utilizar") ; } ; --*
lin use_5_N = variants {mkN "costume" ; mkN "hábito" ; } ; --*
lin use_5_V2 = variants {mkV2 (mkV "aplicar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "praticar") ; mkV2 (mkV "utilizar") ; } ; --*
lin use_6_N = mkN "manipulação" ; --*
lin use_6_VV = mkVV (mkV "costumar") ; --*
lin useable_1_A = variants {mkA "funcional" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin useable_2_A = variants {mkA "usável" ; mkA "utilizável" ; } ; --*
lin useable_3_A = variants {mkA "disponível" ; mkA "usável" ; mkA "utilizável" ; } ; --*
lin used_3_A = variants {mkA "de" ; mkA "segunda" ; mkA "usado" ; } ; --*
lin useful_1_A = mkA "útil" ; --*
lin useful_2_A = mkA "útil" ; --*
lin usefulness_N = mkN "utilidade" ; --*
lin useless_A = variants {mkA "impróprio" ; mkA "inapto" ; mkA "inútil" ; mkA "vão" ; } ; --*
lin uselessness_N = mkN "inutilidade" ; --*
lin userFem_1_N = variants {mkN "consumidor" ; mkN "usuário" ; mkN "utente" ; mkN "utilizador" ; } ; --*
lin userFem_2_N = mkN "explorador" ; --*
lin userFem_3_N = variants {mkN "abuser" ; mkN "user" ; mkN "usuário" ; } ; --*
lin userMasc_1_N = variants {mkN "consumidor" ; mkN "usuário" ; mkN "utente" ; mkN "utilizador" ; } ; --*
lin userMasc_2_N = mkN "explorador" ; --*
lin userMasc_3_N = variants {mkN "abuser" ; mkN "user" ; mkN "usuário" ; } ; --*
lin use_up_1_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin use_up_2_V2 = variants {mkV2 (mkV "levar") ; mkV2 (mkV "ocupar") ; mkV2 (mkV "up") ; } ; --*
lin use_V = variants {mkV "despender" ; mkV "esgotar" ; mkV "gastar" ; } ; --*
lin usher_1_N = variants {mkN "James" ; mkN "Usher" ; mkN "Ussher" ; } ; --*
lin usher_in_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "inaugurar") ; mkV2 (mkV "introduzir") ; } ; --*
lin usn_N = variants {mkN "Marinha" ; mkN "Navy" ; mkN "States" ; } ; --*
lin us_PN = variants {mkPN "América" ; mkPN "Continente" ; mkPN "EEUU" ; mkPN "EstadosUnidosdaAmérica" ; mkPN "EUA" ; mkPN "E.U.A." ; mkPN "States" ; } ; --*
lin ussr_PN = variants {mkPN "of" ; mkPN "Rússia" ; mkPN "Union" ; mkPN "URSS" ; } ; --*
lin usual_1_A = variants {mkA "comum" ; mkA "costumeiro" ; mkA "genérico" ; mkA "geral" ; mkA "habitual" ; mkA "ordinário" ; mkA "usual" ; } ; --*
lin usual_2_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "usual" ; } ; --*
lin usufruct_N = mkN "usufruto" ; --*
lin usurer_N = variants {mkN "agiota" ; mkN "shark" ; } ; --*
lin usurious_A = variants {mkA "descomunal" ; mkA "exorbitante" ; } ; --*
lin usurp_1_V2 = variants {mkV2 (mkV "esbulhar") ; mkV2 (mkV "over") ; mkV2 (mkV "usurpar") ; } ; --*
lin usurpation_1_N = variants {mkN "intrusão" ; mkN "invasão" ; mkN "violação" ; } ; --*
lin usurper_N = mkN "usurpador" ; --*
lin usury_1_N = mkN "usura" ; --*
lin usury_2_N = mkN "usura" ; --*
lin utah_PN = variants {mkPN "State" ; mkPN "Utah" ; } ; --*
lin utensil_N = variants {mkN "ferramenta" ; mkN "utensílio" ; } ; --*
lin uterine_A = mkA "uterino" ; --*
lin uterus_N = variants {mkN "matriz" ; mkN "útero" ; mkN "ventre" ; } ; --*
lin utilitarian_1_A = mkA "útil" ; --*
lin utilitarianism_N = mkN "utilitarismo" ; --*
lin utility_1_N = variants {mkN "corporation" ; mkN "serviços" ; mkN "utility" ; } ; --*
lin utility_2_N = mkN "utilidade" ; --*
lin utility_4_N = mkN "Função" ; --*
lin utility_5_N = variants {mkN "program" ; mkN "utilitário" ; } ; --*
lin utility_6_N = mkN "instalação" ; --*
lin utilization_1_N = variants {mkN "uso" ; mkN "utilização" ; } ; --*
lin utilize_1_V2 = variants {mkV2 (mkV "empregar") ; mkV2 (mkV "usar") ; mkV2 (mkV "utilizar") ; } ; --*
lin utmost_1_A = mkA "maior" ; --*
lin utmost_2_A = mkA "derradeiro" ; --*
lin utmost_N = variants {mkN "best" ; mkN "limite" ; mkN "máximo" ; } ; --*
lin utopia_1_N = mkN "Utopia" ; --*
lin utopia_2_N = variants {mkN "utopia" ; mkN "Utopia" ; mkN "Utopias" ; } ; --*
lin utopia_3_N = mkN "utopia" ; --*
lin utopia_4_N = mkN "utopia" ; --*
lin utopian_1_A = mkA "utópico" ; --*
lin utopian_2_A = mkA "utópico" ; --*
lin utrecht_PN = mkPN "Utrecht" ; --*
lin utter_1_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "tongue") ; mkV2 (mkV "vebalizar") ; } ; --*
lin utter_2_V2 = variants {mkV2 (mkV "emitir") ; mkV2 (mkV "loose") ; mkV2 (mkV "out") ; mkV2 (mkV "soltar") ; } ; --*
lin utter_3_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "verbalizar") ; } ; --*
lin utterance_N = variants {mkN "enunciado" ; mkN "expressão" ; } ; --*
lin utterer_3_N = variants {mkN "alto-falante" ; mkN "falante" ; mkN "locutor" ; mkN "palestrante" ; } ; --*
lin uttermost_2_A = mkA "maior" ; --*
lin uttermost_N = variants {mkN "best" ; mkN "limite" ; mkN "máximo" ; } ; --*
lin uveal_A = mkA "uveal" ; --*
lin uvea_N = variants {mkN "Uvea" ; mkN "úvea" ; } ; --*
lin uveitis_N = mkN "uveíte" ; --*
lin uvula_N = mkN "úvula" ; --*
lin uxor_1_N = mkN "uxor" ; --*
lin vacancy_2_N = variants {mkN "vacância" ; mkN "vácuo" ; mkN "vaga" ; mkN "vazio" ; } ; --*
lin vacant_1_A = variants {mkA "desocupado" ; mkA "vacante" ; mkA "vago" ; } ; --*
lin vacate_1_V2 = variants {mkV2 (mkV "demitir-se") ; mkV2 (mkV "renunciar") ; mkV2 (mkV "resignar") ; mkV2 (mkV "up") ; } ; --*
lin vacate_2_V2 = variants {mkV2 (mkV "abandonar") ; mkV2 (mkV "desocupar") ; mkV2 (mkV "evacuar") ; } ; --*
lin vacate_3_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "cassar") ; mkV2 (mkV "rescindir") ; mkV2 (mkV "reverter") ; mkV2 (mkV "revogar") ; } ; --*
lin vacation_1_N = variants {mkN "dia" ; mkN "feria" ; mkN "féria" ; mkN "férias" ; mkN "sueto" ; } ; --*
lin vacation_V = mkV "tirar" ; --*
lin vaccinate_V2 = mkV2 (mkV "vacinar") ; --*
lin vaccination_1_N = mkN "vacinação" ; --*
lin vaccination_2_N = mkN "vacinação" ; --*
lin vaccine_1_N = variants {mkN "vacina" ; mkN "Vacinação" ; } ; --*
lin vaccinia_2_N = mkN "varíola" ; --*
lin vacillate_1_V = mkV "vacilar" ; --*
lin vacillation_1_N = mkN "indecisão" ; --*
lin vacillation_2_N = mkN "vacilação" ; --*
lin vacuity_1_N = mkN "vacuidade" ; --*
lin vacuity_2_N = mkN "vácuo" ; --*
lin vacuole_N = variants {mkN "Vacuolo" ; mkN "vacúolo" ; } ; --*
lin vacuolization_1_N = mkN "vacuolização" ; --*
lin vacuous_1_A = variants {mkA "inane" ; mkA "néscio" ; } ; --*
lin vacuum_1_N = mkN "vacuidade" ; --*
lin vacuum_2_N = variants {mkN "vacância" ; mkN "vácuo" ; mkN "vaga" ; mkN "vazio" ; } ; --*
lin vacuum_3_N = mkN "vácuo" ; --*
lin vacuum_4_N = variants {mkN "aspirador" ; mkN "cleaner" ; } ; --*
lin vade_mecum_N = variants {mkN "manual" ; mkN "mecum" ; mkN "Vademecum" ; } ; --*
lin vagabond_1_A = mkA "vagabundo" ; --*
lin vaginal_A = mkA "vaginal" ; --*
lin vagina_N = mkN "vagina" ; --*
lin vaginismus_N = variants {mkN "vaginismo" ; mkN "Vaginismo" ; } ; --*
lin vaginitis_N = mkN "vaginite" ; --*
lin vagrancy_N = mkN "vadiagem" ; --*
lin vague_1_A = mkA "vago" ; --*
lin vague_2_A = variants {mkA "indefinido" ; mkA "vago" ; } ; --*
lin vagueness_1_N = variants {mkN "vagueza" ; mkN "vaguidade" ; mkN "vaguidão" ; } ; --*
lin vagus_N = variants {mkN "cranial" ; mkN "nerve" ; mkN "Nervo" ; mkN "vagus" ; } ; --*
lin vain_1_A = variants {mkA "convencido" ; mkA "egoísta" ; } ; --*
lin vain_2_A = mkA "vão" ; --*
lin vainglorious_A = variants {mkA "vangloriosa" ; mkA "vanglorioso" ; } ; --*
lin vainglory_N = mkN "vanglória" ; --*
lin vale_N = variants {mkN "baixada" ; mkN "vale" ; } ; --*
lin valence_1_N = mkN "valência" ; --*
lin valence_2_N = variants {mkN "valência" ; mkN "Valência" ; } ; --*
lin valencia_1_PN = mkPN "Valência" ; --*
lin valencia_2_PN = variants {mkPN "Espanha" ; mkPN "Valencia" ; mkPN "València" ; mkPN "Valência" ; } ; --*
lin valency_1_N = mkN "valência" ; --*
lin valency_2_N = mkN "valência" ; --*
lin valency_3_N = variants {mkN "valência" ; mkN "Valência" ; } ; --*
lin valentine_2_N = mkN "Valentím" ; --*
lin valiant_A = mkA "valente" ; --*
lin valid_1_A = mkA "válido" ; --*
lin valid_2_A = mkA "válido" ; --*
lin validate_1_V2 = variants {mkV2 (mkV "formalizar") ; mkV2 (mkV "validar") ; } ; --*
lin validate_2_V2 = mkV2 (mkV "validar") ; --*
lin validate_3_V2 = variants {mkV2 (mkV "corroborar") ; mkV2 (mkV "homologar") ; mkV2 (mkV "ratificar") ; } ; --*
lin validate_4_V2 = mkV2 (mkV "validar") ; --*
lin validation_1_N = mkN "verificação" ; --*
lin validation_2_N = mkN "validação" ; --*
lin validity_1_N = variants {mkN "rigor" ; mkN "validade" ; } ; --*
lin validity_2_N = mkN "validade" ; --*
lin valine_N = mkN "valina" ; --*
lin valise_N = variants {mkN "malademão" ; mkN "maleta" ; } ; --*
lin valley_N = variants {mkN "baixada" ; mkN "vale" ; } ; --*
lin valorous_A = mkA "valente" ; --*
lin valour_1_N = mkN "heroísmo" ; --*
lin valsartan_N = variants {mkN "valsartan" ; mkN "Valsartan" ; } ; --*
lin valuable_1_A = variants {mkA "precioso" ; mkA "valioso" ; } ; --*
lin valuable_2_A = variants {mkA "precioso" ; mkA "valioso" ; } ; --*
lin valuable_N = mkN "que" ; --*
lin valuation_1_N = mkN "avaliação" ; --*
lin value_1_N = mkN "valor" ; --*
lin value_1_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "taxar") ; } ; --*
lin value_2_N = variants {mkN "preço" ; mkN "preços" ; mkN "qualidade" ; } ; --*
lin value_2_V2 = variants {mkV2 (mkV "apreciar") ; mkV2 (mkV "valorizar") ; } ; --*
lin value_3_N = variants {mkN "valor" ; mkN "value" ; } ; --*
lin value_3_V2 = variants {mkV2 (mkV "prezar") ; mkV2 (mkV "respeitar") ; mkV2 (mkV "venerar") ; } ; --*
lin value_4_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "estimar") ; } ; --*
lin value_5_N = variants {mkN "valor" ; mkN "value" ; } ; --*
lin value_5_V2 = variants {mkV2 (mkV "avaliar") ; mkV2 (mkV "taxar") ; mkV2 (mkV "valorizar") ; } ; --*
lin value_6_N = mkN "valor" ; --*
lin valuer_N = mkN "avaliador" ; --*
lin valve_1_N = mkN "válvula" ; --*
lin valve_2_N = variants {mkN "valva" ; mkN "válvula" ; } ; --*
lin valve_3_N = mkN "válvula" ; --*
lin valvular_A = mkA "valvular" ; --*
lin vamp_1_N = mkN "interesseira" ; --*
lin vamp_4_V2 = mkV2 (mkV "renovar") ; --*
lin vampire_N = mkN "vampiro" ; --*
lin vampirism_2_N = mkN "vampirismo" ; --*
lin van_1_N = variants {mkN "vanguarda" ; mkN "wave" ; } ; --*
lin van_2_N = variants {mkN "anteguarda" ; mkN "vanguarda" ; } ; --*
lin van_4_N = mkN "caravana" ; --*
lin van_5_N = mkN "van" ; --*
lin vanadate_N = mkN "Vanadatos" ; --*
lin vanadinite_N = variants {mkN "vanadinita" ; mkN "Vanadinita" ; } ; --*
lin vanadium_N = variants {mkN "number" ; mkN "Vanadio" ; mkN "vanádio" ; } ; --*
lin vancomycin_N = mkN "vancomicina" ; --*
lin vancouver_1_PN = variants {mkPN "George" ; mkPN "Vancouver" ; } ; --*
lin vancouver_2_PN = mkPN "Vancouver" ; --*
lin vancouver_3_PN = mkPN "Vancouver" ; --*
lin vandal_1_N = mkN "vândalo" ; --*
lin vandal_2_N = mkN "vândalo" ; --*
lin vandalism_N = variants {mkN "mischief" ; mkN "vandalismo" ; mkN "Vandalismo" ; } ; --*
lin vane_1_N = variants {mkN "cata-vento" ; mkN "Catavento" ; mkN "vane" ; } ; --*
lin vanguard_1_N = variants {mkN "anteguarda" ; mkN "vanguarda" ; } ; --*
lin vanguard_2_N = variants {mkN "vanguarda" ; mkN "wave" ; } ; --*
lin vanguard_3_N = variants {mkN "edge" ; mkN "primeiro" ; } ; --*
lin vanilla_1_N = mkN "baunilha" ; --*
lin vanilla_2_N = variants {mkN "baunilha" ; mkN "extract" ; } ; --*
lin vanillin_N = mkN "Vanilina" ; --*
lin vanish_1_V = variants {mkV "away" ; mkV "desaparecer" ; mkV "sumir" ; } ; --*
lin vanish_2_V = variants {mkV "away" ; mkV "desaparecer" ; mkV "esvair" ; } ; --*
lin vanish_4_V = mkV "desaparecer" ; --*
lin vanish_5_V = mkV "desaparecer" ; --*
lin vanished_A = mkA "desaparecido" ; --*
lin vanity_1_N = variants {mkN "presunção" ; mkN "propre" ; mkN "vaidade" ; } ; --*
lin vanity_2_N = mkN "vaidade" ; --*
lin vanity_3_N = mkN "vaidade" ; --*
lin vanquish_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "out") ; mkV2 (mkV "superar") ; mkV2 (mkV "ultrapassar") ; mkV2 (mkV "vencer") ; } ; --*
lin vantage_2_N = variants {mkN "benefício" ; mkN "handicap" ; mkN "lucro" ; mkN "utilidade" ; mkN "vantagem" ; } ; --*
lin vapid_1_A = mkA "insípido" ; --*
lin vapidity_N = mkN "insipidez" ; --*
lin vapidness_N = mkN "insipidez" ; --*
lin vapor_1_N = variants {mkN "evaporação" ; mkN "vapor" ; } ; --*
lin vapor_2_N = variants {mkN "evaporação" ; mkN "vapor" ; } ; --*
lin vaporific_2_A = mkA "vaporoso" ; --*
lin vaporization_2_N = variants {mkN "evaporação" ; mkN "vapor" ; } ; --*
lin vaporize_2_V = variants {mkV "evaporar" ; mkV "gaseificar" ; mkV "vaporizar" ; } ; --*
lin vaporize_3_V2 = variants {mkV2 (mkV "evaporar") ; mkV2 (mkV "vaporizar") ; } ; --*
lin vaporize_4_V = mkV "desaparecer" ; --*
lin vaporize_6_V2 = mkV2 (mkV "evaporar") ; --*
lin vaporizer_1_N = mkN "vaporizador" ; --*
lin vaporous_1_A = variants {mkA "diáfano" ; mkA "transparente" ; } ; --*
lin vaporous_2_A = mkA "vaporoso" ; --*
lin vapour_1_N = variants {mkN "evaporação" ; mkN "vapor" ; } ; --*
lin vapour_2_N = variants {mkN "evaporação" ; mkN "vapor" ; } ; --*
lin vaquita_N = variants {mkN "sinus" ; mkN "Vaquita" ; } ; --*
lin vardenafil_N = mkN "Vardenafila" ; --*
lin variability_2_N = mkN "desigualdade" ; --*
lin variable_1_A = mkA "variável" ; --*
lin variable_1_N = mkN "variável" ; --*
lin variable_2_A = mkA "variável" ; --*
lin variable_2_N = variants {mkN "quantity" ; mkN "variável" ; } ; --*
lin variable_3_A = mkA "variável" ; --*
lin variable_3_N = variants {mkN "Estrela" ; mkN "star" ; } ; --*
lin variable_4_N = mkN "variável" ; --*
lin variance_1_N = mkN "discrepância" ; --*
lin variance_2_N = mkN "divisão" ; --*
lin variance_3_N = mkN "variância" ; --*
lin variance_4_N = variants {mkN "discordância" ; mkN "discrepância" ; } ; --*
lin variance_7_N = mkN "variação" ; --*
lin variant_1_N = mkN "discrepância" ; --*
lin variant_2_N = variants {mkN "Estirpe" ; mkN "variante" ; } ; --*
lin variant_3_N = variants {mkN "variable" ; mkN "variante" ; mkN "Variável" ; } ; --*
lin variant_4_N = variants {mkN "variante" ; mkN "versão" ; } ; --*
lin variation_1_N = variants {mkN "flutuação" ; mkN "mudança" ; mkN "variação" ; } ; --*
lin variation_2_N = mkN "variação" ; --*
lin variation_4_N = variants {mkN "variante" ; mkN "versão" ; } ; --*
lin variation_6_N = variants {mkN "declinação" ; mkN "declination" ; mkN "variation" ; } ; --*
lin variation_9_N = variants {mkN "mutação" ; mkN "mutante" ; mkN "mutantes" ; } ; --*
lin varicocele_N = mkN "varicocele" ; --*
lin varicolored_2_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin varicoloured_2_A = variants {mkA "multicolor" ; mkA "multicor" ; } ; --*
lin varied_1_A = variants {mkA "que" ; mkA "vário" ; } ; --*
lin variegation_2_N = mkN "diversificação" ; --*
lin varietal_N = variants {mkN "Varietal" ; mkN "wine" ; } ; --*
lin variety_1_N = variants {mkN "bag" ; mkN "encepamento" ; mkN "mistura" ; } ; --*
lin variety_2_N = mkN "diversidade" ; --*
lin variety_3_N = mkN "variedade" ; --*
lin variety_6_N = mkN "variedade" ; --*
lin variety_of_N2 = variants {mkN2 (mkN "categoria") noPrep ; mkN2 (mkN "classe") noPrep ; mkN2 (mkN "espécies") noPrep ; mkN2 (mkN "género") noPrep ; mkN2 (mkN "raça") noPrep ; mkN2 (mkN "tipo") noPrep ; } ; --*
lin various_1_A = variants {mkA "sortido" ; mkA "variado" ; } ; --*
lin various_2_A = variants {mkA "respectivo" ; mkA "respetivo" ; } ; --*
lin various_3_A = variants {mkA "diverso" ; mkA "vários" ; } ; --*
lin various_4_A = mkA "diverso" ; --*
lin varlet_1_N = variants {mkN "bilontra" ; mkN "biltre" ; mkN "canalha" ; mkN "maroto" ; mkN "patife" ; mkN "traste" ; } ; --*
lin varmint_1_N = mkN "vérmina" ; --*
lin varna_1_N = mkN "Varna" ; --*
lin varna_2_N = mkN "casta" ; --*
lin varnish_N = variants {mkN "verniz" ; mkN "vernizes" ; } ; --*
lin vary_1_V = variants {mkV "alterar" ; mkV "modificar" ; mkV "mudar" ; mkV "variar" ; } ; --*
lin vary_2_V = variants {mkV "desviar" ; mkV "variar" ; } ; --*
lin vary_3_V = mkV "variar" ; --*
lin vary_4_V2 = mkV2 (mkV "variar") ; --*
lin varying_A = mkA "variável" ; --*
lin vasculitis_N = variants {mkN "vasculite" ; mkN "Vasculite" ; } ; --*
lin vasectomy_N = mkN "vasectomia" ; --*
lin vaseline_N = mkN "vaselina" ; --*
lin vase_N = variants {mkN "recipiente" ; mkN "vaso" ; } ; --*
lin vasoconstriction_N = mkN "vasoconstrição" ; --*
lin vasodilation_N = variants {mkN "vasodilatação" ; mkN "Vasodilatadores" ; } ; --*
lin vasomotor_A = mkA "vasomotor" ; --*
lin vasopressin_N = variants {mkN "hormone" ; mkN "vasopressina" ; } ; --*
lin vasovasostomy_N = mkN "vasovasostomia" ; --*
lin vassalage_N = variants {mkN "servidão" ; mkN "Servidão" ; } ; --*
lin vassal_N = variants {mkN "subject" ; mkN "Vassalagem" ; mkN "vassalo" ; } ; --*
lin vast_A = variants {mkA "amplo" ; mkA "enorme" ; mkA "extenso" ; mkA "imenso" ; mkA "vasta" ; } ; --*
lin vastness_N = variants {mkN "enormidade" ; mkN "grandeza" ; mkN "imensidade" ; mkN "imensidão" ; } ; --*
lin vat_1_N = variants {mkN "IVA" ; mkN "tax" ; mkN "valorem" ; } ; --*
lin vat_2_N = variants {mkN "banheira" ; mkN "cuba" ; mkN "tina" ; mkN "tonel" ; } ; --*
lin vatican_N = variants {mkN "Palace" ; mkN "Vaticão" ; } ; --*
lin vaudeville_N = variants {mkN "hall" ; mkN "vaudeville" ; } ; --*
lin vault_2_N = variants {mkN "caixa-forte" ; mkN "Caixaforte" ; mkN "vault" ; } ; --*
lin vault_3_N = mkN "abóbada" ; --*
lin vault_4_N = mkN "salto" ; --*
lin vaunter_N = mkN "pimpão" ; --*
lin vaunt_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "fanfarrear") ; mkV2 (mkV "ostentar") ; mkV2 (mkV "vangloriar-se") ; } ; --*
lin vaunt_V = variants {mkV "a" ; mkV "fanfarrear" ; mkV "ostentar" ; mkV "vangloriar-se" ; } ; --*
lin vd_N = variants {mkN "curse" ; mkN "disease" ; mkN "Doença" ; mkN "infection" ; mkN "itch" ; mkN "transmitted" ; } ; --*
lin veal_1_N = variants {mkN "carne" ; mkN "vitela" ; } ; --*
lin vector_1_N = variants {mkN "vector" ; mkN "vectores" ; mkN "vetor" ; } ; --*
lin vector_2_N = variants {mkN "vector" ; mkN "vetor" ; } ; --*
lin veer_1_V = variants {mkV "dirigir-se" ; mkV "inclinar" ; mkV "inclinar-se" ; mkV "tender" ; mkV "virar" ; } ; --*
lin vegan_N = mkN "vegano" ; --*
lin vegetable_1_N = variants {mkN "hortaliça" ; mkN "legume" ; mkN "vegetal" ; mkN "verdura" ; } ; --*
lin vegetable_2_N = variants {mkN "hortaliça" ; mkN "Hortaliças" ; mkN "legume" ; mkN "vegetal" ; } ; --*
lin vegetal_1_A = variants {mkA "vegetal" ; mkA "vegetativo" ; } ; --*
lin vegetal_2_A = mkA "vegetativo" ; --*
lin vegetarianFem_N = mkN "vegetariano" ; --*
lin vegetarianism_N = variants {mkN "vegetarianismo" ; mkN "Vegetarianismo" ; } ; --*
lin vegetarianMasc_N = mkN "vegetariano" ; --*
lin vegetate_1_V = mkV "vegetar" ; --*
lin vegetate_4_V = mkV "vegetar" ; --*
lin vegetation_1_N = variants {mkN "coberto" ; mkN "flora" ; mkN "Vegetaçao" ; mkN "vegetação" ; mkN "Vegetação" ; } ; --*
lin vegetation_2_N = mkN "vida" ; --*
lin vegetative_1_A = variants {mkA "vegetal" ; mkA "vegetativo" ; } ; --*
lin vegetative_2_A = mkA "vegetativo" ; --*
lin vegetative_3_A = mkA "vegetativo" ; --*
lin vegetative_4_A = mkA "vegetativo" ; --*
lin vehemence_1_N = variants {mkN "ênfase" ; mkN "veemência" ; } ; --*
lin vehemence_2_N = mkN "violência" ; --*
lin vehement_1_A = variants {mkA "feroz" ; mkA "veemente" ; mkA "violento" ; } ; --*
lin vehement_2_A = mkA "veemente" ; --*
lin vehicle_1_N = variants {mkN "veículo" ; mkN "veículos" ; mkN "viatura" ; } ; --*
lin vehicle_2_N = mkN "veículo" ; --*
lin veil_1_N = variants {mkN "covering" ; mkN "véu" ; } ; --*
lin veil_1_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "encobrir") ; mkV2 (mkV "esconder") ; mkV2 (mkV "ocultar") ; } ; --*
lin veil_2_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "esconder") ; mkV2 (mkV "out") ; } ; --*
lin veiling_N = mkN "gaze" ; --*
lin vein_1_N = variants {mkN "blood" ; mkN "veia" ; mkN "Veias" ; } ; --*
lin veinal_A = mkA "venoso" ; --*
lin velar_N = variants {mkN "Consoante" ; mkN "consonant" ; } ; --*
lin veld_1_N = mkN "savana" ; --*
lin velleity_1_N = mkN "veleidade" ; --*
lin velocipede_2_N = mkN "triciclo" ; --*
lin velociraptor_N = mkN "velociráptor" ; --*
lin velocity_N = mkN "velocidade" ; --*
lin velodrome_N = variants {mkN "velódromo" ; mkN "Velódromos" ; } ; --*
lin velvet_1_A = mkA "aveludado" ; --*
lin velvet_N = mkN "veludo" ; --*
lin velvety_1_A = mkA "aveludado" ; --*
lin venal_A = variants {mkA "corruptível" ; mkA "desonesto" ; mkA "venal" ; } ; --*
lin venality_N = mkN "venalidade" ; --*
lin vendee_N = variants {mkN "comprador" ; mkN "freguês" ; } ; --*
lin vender_N = variants {mkN "comerciante" ; mkN "fornecedor" ; mkN "vendedor" ; } ; --*
lin vendetta_N = variants {mkN "feud" ; mkN "rivalidade" ; } ; --*
lin vendor_N = variants {mkN "comerciante" ; mkN "fornecedor" ; mkN "vendedor" ; } ; --*
lin vend_V2 = variants {mkV2 (mkV "chatinar") ; mkV2 (mkV "mercadejar") ; mkV2 (mkV "traficar") ; } ; --*
lin veneer_1_N = variants {mkN "folheado" ; mkN "verniz" ; } ; --*
lin veneer_2_N = mkN "verniz" ; --*
lin veneering_1_N = variants {mkN "folheado" ; mkN "verniz" ; } ; --*
lin veneer_V2 = variants {mkV2 (mkV "envernizar") ; mkV2 (mkV "folhear") ; } ; --*
lin venerable_1_A = variants {mkA "Veneráveis" ; mkA "venerável" ; } ; --*
lin venerable_2_A = variants {mkA "augusto" ; mkA "venerável" ; } ; --*
lin venerate_V2 = variants {mkV2 (mkV "reverenciar") ; mkV2 (mkV "temer") ; mkV2 (mkV "venerar") ; } ; --*
lin veneration_1_N = variants {mkN "reverência" ; mkN "temor" ; } ; --*
lin veneration_2_N = variants {mkN "adorar" ; mkN "veneração" ; } ; --*
lin venereal_A = variants {mkA "genital" ; mkA "venérea" ; mkA "venéreo" ; } ; --*
lin venesection_N = mkN "flebotomia" ; --*
lin venetian_A = mkA "veneziano" ; --*
lin venezia_PN = mkPN "Veneza" ; --*
lin venezuelan_A = mkA "venezuelano" ; --*
lin venezuelan_N = mkN "venezuelano" ; --*
lin venezuela_PN = variants {mkPN "of" ; mkPN "Venezuela" ; } ; --*
lin vengeance_N = mkN "vingança" ; --*
lin vengeful_A = mkA "vingativo" ; --*
lin venial_1_A = mkA "venial" ; --*
lin venial_2_A = mkA "perdoável" ; --*
lin venice_PN = mkPN "Veneza" ; --*
lin venison_N = mkN "carne" ; --*
lin venom_1_N = variants {mkN "Animais" ; mkN "peçonha" ; mkN "veneno" ; } ; --*
lin venom_2_N = variants {mkN "maldade" ; mkN "malícia" ; } ; --*
lin venomous_1_A = variants {mkA "venenosa" ; mkA "venenoso" ; mkA "virulento" ; } ; --*
lin venomous_2_A = mkA "venenoso" ; --*
lin venous_A = mkA "venoso" ; --*
lin vent_1_N = mkN "espiráculo" ; --*
lin vent_1_V2 = variants {mkV2 (mkV "desabafar") ; mkV2 (mkV "vent") ; } ; --*
lin vent_2_V2 = variants {mkV2 (mkV "arejar") ; mkV2 (mkV "out") ; } ; --*
lin vent_5_N = mkN "desabafo" ; --*
lin venter_2_N = variants {mkN "abdome" ; mkN "abdómen" ; mkN "abdômen" ; mkN "barriga" ; mkN "estômago" ; mkN "tronco" ; mkN "ventre" ; } ; --*
lin venter_4_N = variants {mkN "abdómen" ; mkN "barriga" ; } ; --*
lin vent_hole_1_N = mkN "espiráculo" ; --*
lin ventilate_1_V2 = variants {mkV2 (mkV "arejar") ; mkV2 (mkV "out") ; } ; --*
lin ventilate_2_V2 = mkV2 (mkV "arejar") ; --*
lin ventilate_4_V2 = variants {mkV2 (mkV "desabafar") ; mkV2 (mkV "vent") ; } ; --*
lin ventilation_1_N = mkN "ventilação" ; --*
lin ventilation_2_N = variants {mkN "system" ; mkN "ventilação" ; } ; --*
lin ventilation_4_N = variants {mkN "respiração" ; mkN "respiration" ; } ; --*
lin ventilator_1_N = variants {mkN "circulador" ; mkN "exaustor" ; mkN "ventilador" ; } ; --*
lin ventilatory_A = mkA "ventilatório" ; --*
lin ventral_1_A = mkA "ventral" ; --*
lin ventricle_2_N = variants {mkN "ventricle" ; mkN "ventrículo" ; } ; --*
lin ventricular_A = variants {mkA "do" ; mkA "ventricular" ; } ; --*
lin ventriloquism_N = mkN "ventriloquia" ; --*
lin venture_1_N = mkN "empreendimento" ; --*
lin venture_1_V = variants {mkV "aventurar" ; mkV "embarcar" ; } ; --*
lin venture_2_N = variants {mkN "especulação" ; mkN "Especulação" ; } ; --*
lin venture_2_VS = variants {mkVS (mkV "adivinhar") ; mkVS (mkV "aventurar") ; mkVS (mkV "pretender") ; mkVS (mkV "supor") ; } ; --*
lin venture_3_N = mkN "aventura" ; --*
lin venture_3_V2 = variants {mkV2 (mkV "arriscar") ; mkV2 (mkV "aventurar") ; mkV2 (mkV "aventurar-se") ; } ; --*
lin venturesome_A = variants {mkA "arriscado" ; mkA "arriscador" ; mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "ousado" ; } ; --*
lin venturi_1_N = variants {mkN "Charles" ; mkN "Robert" ; mkN "Venturi" ; } ; --*
lin venturous_A = variants {mkA "arriscado" ; mkA "arriscador" ; mkA "audacioso" ; mkA "audaz" ; mkA "destemido" ; mkA "ousado" ; } ; --*
lin venue_1_N = mkN "Locale" ; --*
lin venue_2_N = variants {mkN "Casa" ; mkN "jurisdição" ; } ; --*
lin venule_1_N = variants {mkN "vein" ; mkN "Vénula" ; mkN "Vênula" ; } ; --*
lin venus_1_PN = variants {mkPN "Vénus" ; mkPN "Vênus" ; } ; --*
lin venus_2_PN = variants {mkPN "Vénus" ; mkPN "Vênus" ; } ; --*
lin veracious_1_A = mkA "veraz" ; --*
lin veracity_N = mkN "veracidade" ; --*
lin verandah_N = variants {mkN "galeria" ; mkN "varanda" ; } ; --*
lin veranda_N = variants {mkN "galeria" ; mkN "varanda" ; } ; --*
lin verb_1_N = mkN "verbo" ; --*
lin verb_2_N = mkN "verbo" ; --*
lin verbal_1_A = mkA "verbal" ; --*
lin verbal_3_A = mkA "verbal" ; --*
lin verbal_4_A = mkA "verbal" ; --*
lin verbal_5_A = mkA "verbal" ; --*
lin verbalize_1_V2 = mkV2 (mkV "verbalizar") ; --*
lin verbalize_2_V2 = variants {mkV2 (mkV "conversar") ; mkV2 (mkV "dizer") ; mkV2 (mkV "falar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "verbalizar") ; } ; --*
lin verbalize_3_V2 = variants {mkV2 (mkV "expressar") ; mkV2 (mkV "proferir") ; mkV2 (mkV "tongue") ; mkV2 (mkV "vebalizar") ; } ; --*
lin verbatim_Adv = variants {mkAdv "for" ; mkAdv "ipsis" ; mkAdv "literalmente" ; mkAdv "palavraporpalavra" ; mkAdv "verbatim" ; } ; --*
lin verbiage_2_N = variants {mkN "dicção" ; mkN "Dicção" ; mkN "fraseologia" ; mkN "of" ; } ; --*
lin verboseness_N = mkN "verbosidade" ; --*
lin verbosity_N = mkN "verbosidade" ; --*
lin verdant_A = mkA "verde" ; --*
lin verdict_N = variants {mkN "of" ; mkN "veredicto" ; } ; --*
lin verdigris_2_N = variants {mkN "azinhavre" ; mkN "Azinhavre" ; mkN "zinabre" ; } ; --*
lin verge_1_N = variants {mkN "borda" ; mkN "fronteira" ; mkN "fronteiras" ; mkN "limite" ; mkN "margem" ; } ; --*
lin verge_2_N = mkN "beira" ; --*
lin verge_3_N = variants {mkN "ceptro" ; mkN "cetro" ; } ; --*
lin verifiable_1_A = mkA "comprovável" ; --*
lin verifiable_2_A = variants {mkA "capaz" ; mkA "confirmável" ; mkA "testável" ; } ; --*
lin verification_1_N = variants {mkN "confirmação" ; mkN "crisma" ; mkN "verificação" ; } ; --*
lin verify_1_V2 = mkV2 (mkV "verificar") ; --*
lin verify_2_V2 = variants {mkV2 (mkV "provar") ; mkV2 (mkV "verificar") ; } ; --*
lin verify_3_V2 = mkV2 (mkV "verificar") ; --*
lin verify_4_V2 = variants {mkV2 (mkV "afirmar") ; mkV2 (mkV "jurar") ; } ; --*
lin veritable_1_A = variants {mkA "autêntico" ; mkA "fide" ; mkA "genuíno" ; } ; --*
lin veritable_2_A = mkA "verdadeiro" ; --*
lin verity_1_N = variants {mkN "true" ; mkN "verdade" ; } ; --*
lin vermiculate_1_A = variants {mkA "picada" ; mkA "sem-fim-comido" ; } ; --*
lin vermiculation_1_N = variants {mkN "peristalse" ; mkN "peristaltismo" ; } ; --*
lin vermiculite_N = variants {mkN "vermiculita" ; mkN "Vermiculita" ; } ; --*
lin vermifuge_N = mkN "Vermífugo" ; --*
lin vermilion_1_A = mkA "vermelho" ; --*
lin vermilion_N = variants {mkN "escarlate" ; mkN "red" ; mkN "vermelho" ; } ; --*
lin vermin_1_N = mkN "vérmina" ; --*
lin vermin_2_N = variants {mkN "infestantes" ; mkN "vérmina" ; } ; --*
lin vermont_PN = variants {mkPN "Mountain" ; mkPN "Vermont" ; } ; --*
lin vermouth_N = variants {mkN "vermute" ; mkN "Vermute" ; } ; --*
lin vernacular_1_N = variants {mkN "calão" ; mkN "gíria" ; mkN "jargão" ; } ; --*
lin vernacular_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "vernáculo" ; mkA "Vernáculo" ; } ; --*
lin vernal_1_A = mkA "juvenil" ; --*
lin vernal_2_A = mkA "juvenil" ; --*
lin vernation_N = mkN "vernação" ; --*
lin verona_PN = mkPN "Verona" ; --*
lin veronica_N = mkN "sudario" ; --*
lin veronica_PN = mkPN "sudario" ; --*
lin verruca_N = mkN "verruga" ; --*
lin versatile_1_A = mkA "diverso" ; --*
lin versatile_2_A = mkA "versátil" ; --*
lin verse_1_N = variants {mkN "Poemas" ; mkN "poesia" ; mkN "verso" ; } ; --*
lin versed_A = mkA "versado" ; --*
lin versicle_N = mkN "versículo" ; --*
lin versify_V2 = variants {mkV2 (mkV "versar") ; mkV2 (mkV "versejar") ; } ; --*
lin version_1_N = mkN "versão" ; --*
lin version_2_N = variants {mkN "variante" ; mkN "versão" ; } ; --*
lin version_3_N = mkN "versão" ; --*
lin version_4_N = variants {mkN "interpretação" ; mkN "rendition" ; mkN "tradução" ; } ; --*
lin version_5_N = mkN "interpretação" ; --*
lin vertebral_A = mkA "vertebral" ; --*
lin vertebra_N = variants {mkN "vertebra" ; mkN "vértebra" ; } ; --*
lin vertebrate_A = variants {mkA "vertebrada" ; mkA "vertebrado" ; } ; --*
lin vertebrate_N = mkN "vertebrado" ; --*
lin vertex_1_N = mkN "Vértice" ; --*
lin vertex_2_N = variants {mkN "topo" ; mkN "vértice" ; } ; --*
lin vertical_1_A = variants {mkA "fio" ; mkA "perpendicular" ; mkA "vertical" ; } ; --*
lin vertical_2_A = mkA "vertical" ; --*
lin vertical_3_A = mkA "vertical" ; --*
lin vertiginous_A = variants {mkA "com" ; mkA "que" ; mkA "tonto" ; mkA "vertiginoso" ; } ; --*
lin vertigo_N = variants {mkN "tontura" ; mkN "Tontura" ; mkN "vertigem" ; } ; --*
lin verve_N = variants {mkN "elã" ; mkN "estro" ; mkN "verve" ; mkN "vitalidade" ; mkN "vivacidade" ; } ; --*
lin very_2_A = variants {mkA "idêntico" ; mkA "mesmo" ; } ; --*
lin very_AdA = mkAdA "muito" ; --*
lin vesicle_N = mkN "vesícula" ; --*
lin vesicular_A = mkA "vesicular" ; --*
lin vesper_1_N = variants {mkN "Hésperos" ; mkN "star" ; mkN "Vénus" ; } ; --*
lin vessel_1_N = mkN "vaso" ; --*
lin vessel_2_N = variants {mkN "barco" ; mkN "embarcação" ; mkN "Embarcações" ; mkN "navio" ; mkN "navios" ; } ; --*
lin vessel_3_N = variants {mkN "vasilha" ; mkN "vasilhame" ; mkN "vaso" ; } ; --*
lin vest_1_N = mkN "colete" ; --*
lin vest_1_V2 = variants {mkV2 (mkV "entronar") ; mkV2 (mkV "investir") ; } ; --*
lin vest_2_N = variants {mkN "colete" ; mkN "t-shirt" ; } ; --*
lin vest_5_V2 = variants {mkV2 (mkV "vestido") ; mkV2 (mkV "vestir") ; } ; --*
lin vest_5_V = variants {mkV "vestido" ; mkV "vestir" ; } ; --*
lin vestal_2_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin vestibular_A = mkA "vestibular" ; --*
lin vestibule_1_N = variants {mkN "antecâmara" ; mkN "antessala" ; mkN "átrio" ; mkN "hall" ; mkN "saguão" ; mkN "sala" ; mkN "vestíbulo" ; } ; --*
lin vestibule_2_N = mkN "vestíbulo" ; --*
lin vestige_N = variants {mkN "vestígio" ; mkN "vestígios" ; } ; --*
lin vestigial_A = mkA "rudimentar" ; --*
lin vestmental_A = mkA "vestimental" ; --*
lin vestment_N = mkN "veste" ; --*
lin vestry_2_N = variants {mkN "sacristia" ; mkN "Sacristia" ; } ; --*
lin vesture_2_N = variants {mkN "of" ; mkN "roupa" ; mkN "traje" ; mkN "vestido" ; mkN "vestimenta" ; mkN "vestuário" ; } ; --*
lin vet_1_N = variants {mkN "surgeon" ; mkN "vet" ; mkN "veterinário" ; } ; --*
lin vet_2_N = mkN "veterano" ; --*
lin veteran_1_N = variants {mkN "soldier" ; mkN "veterano" ; } ; --*
lin veteran_2_N = mkN "veterano" ; --*
lin veteran_3_N = variants {mkN "hand" ; mkN "stager" ; mkN "veterano" ; } ; --*
lin veterinarian_N = variants {mkN "surgeon" ; mkN "vet" ; mkN "veterinário" ; } ; --*
lin veto_1_N = mkN "veto" ; --*
lin veto_1_V = mkV "vetar" ; --*
lin veto_2_N = mkN "veto" ; --*
lin veto_2_V2 = variants {mkV2 (mkV "proibir") ; mkV2 (mkV "proscrever") ; mkV2 (mkV "vetar") ; } ; --*
lin vex_1_V2 = variants {mkV2 (mkV "aborrecer") ; mkV2 (mkV "amolar") ; mkV2 (mkV "at") ; mkV2 (mkV "atormentar") ; mkV2 (mkV "importunar") ; mkV2 (mkV "incomodar") ; mkV2 (mkV "irritar") ; mkV2 (mkV "molestar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "to") ; mkV2 (mkV "vexar") ; } ; --*
lin vex_2_V2 = variants {mkV2 (mkV "inquietar") ; mkV2 (mkV "preocupar") ; } ; --*
lin vex_3_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "perturbar") ; mkV2 (mkV "up") ; } ; --*
lin vex_3_V2V = variants {mkV2V (mkV "agitar") ; mkV2V (mkV "perturbar") ; mkV2V (mkV "up") ; } ; --*
lin vex_5_V2 = variants {mkV2 (mkV "ater") ; mkV2 (mkV "atordoar") ; mkV2 (mkV "desnortear") ; mkV2 (mkV "pegar") ; mkV2 (mkV "surpreender") ; } ; --*
lin vexation_1_N = mkN "irritação" ; --*
lin vexation_2_N = variants {mkN "contrariedade" ; mkN "incômodo" ; mkN "irritação" ; } ; --*
lin vexation_3_N = variants {mkN "dor-de-cabeça" ; mkN "preocupação" ; } ; --*
lin vexation_4_N = mkN "irritação" ; --*
lin vexatious_A = variants {mkA "aborrecedor" ; mkA "chateante" ; mkA "irritante" ; mkA "irritativo" ; mkA "molestante" ; } ; --*
lin viability_1_N = mkN "viabilidade" ; --*
lin viable_A = variants {mkA "executável" ; mkA "exequível" ; mkA "exeqüível" ; mkA "factível" ; mkA "fazível" ; mkA "maneável" ; mkA "manejável" ; mkA "possível" ; mkA "praticável" ; mkA "prestimoso" ; mkA "verossímil" ; mkA "viável" ; } ; --*
lin viaduct_N = mkN "viaduto" ; --*
lin vial_N = mkN "ampola" ; --*
lin via_media_N = variants {mkN "compromisso" ; mkN "contratos" ; mkN "media" ; mkN "meio-termo" ; } ; --*
lin vibraphone_N = variants {mkN "vibrafone" ; mkN "Vibrafonistas" ; } ; --*
lin vibrate_1_V2 = mkV2 (mkV "vibrar") ; --*
lin vibrate_1_V = mkV "vibrar" ; --*
lin vibrate_2_V = variants {mkV "fremir" ; mkV "vibrar" ; } ; --*
lin vibrate_3_V = mkV "vacilar" ; --*
lin vibrate_4_V = mkV "ressoar" ; --*
lin vibrate_5_V2 = variants {mkV2 (mkV "eletrizar") ; mkV2 (mkV "emocionar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "vibrar") ; } ; --*
lin vibration_1_N = variants {mkN "aljava" ; mkN "tremor" ; } ; --*
lin vibration_2_N = variants {mkN "palpitação" ; mkN "tremor" ; mkN "trêmulo" ; } ; --*
lin vibration_3_N = variants {mkN "oscilação" ; mkN "vibração" ; mkN "Vibração" ; mkN "vibrações" ; } ; --*
lin vibration_4_N = mkN "vibrafone" ; --*
lin vibrato_N = mkN "vibrato" ; --*
lin vibrator_2_N = mkN "vibrador" ; --*
lin vibrionic_A = mkA "vibriônico" ; --*
lin vicar_1_N = mkN "Vigário" ; --*
lin vicar_2_N = mkN "pároco" ; --*
lin vicar_3_N = variants {mkN "pároco" ; mkN "Vigário" ; } ; --*
lin vicarage_N = mkN "reitoria" ; --*
lin vicarious_1_A = mkA "vicário" ; --*
lin vicarious_2_A = mkA "vicário" ; --*
lin vicarious_3_A = mkA "vicário" ; --*
lin vice_1_N = variants {mkN "perversão" ; mkN "vice" ; } ; --*
lin vice_2_N = mkN "imoralidade" ; --*
lin vice_president_N = variants {mkN "president" ; mkN "vice-presidente" ; } ; --*
lin vicereine_2_N = mkN "vice-rei" ; --*
lin viceroy_1_N = mkN "vice-rei" ; --*
lin vice_versa_Adv = variants {mkAdv "other" ; mkAdv "versa" ; mkAdv "vice-versa" ; } ; --*
lin vichyssoise_N = mkN "Vichyssoise" ; --*
lin vicinity_N = variants {mkN "bairro" ; mkN "cercania" ; mkN "of" ; mkN "proximidade" ; mkN "vizinhança" ; mkN "vizinho" ; } ; --*
lin vicious_1_A = variants {mkA "bárbaro" ; mkA "brutal" ; mkA "cruel" ; mkA "desalmado" ; mkA "feroz" ; } ; --*
lin vicious_3_A = mkA "repreensível" ; --*
lin vicious_4_A = mkA "venenoso" ; --*
lin viciousness_N = variants {mkN "barbárie" ; mkN "brutalidade" ; } ; --*
lin vicissitude_1_N = mkN "vicissitude" ; --*
lin vicissitude_2_N = mkN "vicissitude" ; --*
lin victim_1_N = mkN "vítima" ; --*
lin victim_2_N = mkN "vítima" ; --*
lin victimization_2_N = mkN "exploração" ; --*
lin victimize_2_V2 = mkV2 (mkV "vitimizar") ; --*
lin victimize_3_V2 = variants {mkV2 (mkV "calotear") ; mkV2 (mkV "defraudar") ; mkV2 (mkV "estafar") ; mkV2 (mkV "fraudar") ; mkV2 (mkV "trapacear") ; } ; --*
lin victor_1_N = mkN "vencedor" ; --*
lin victor_1_PN = mkPN "vencedor" ; --*
lin victor_2_N = variants {mkN "ganhador" ; mkN "vencedor" ; } ; --*
lin victor_2_PN = variants {mkPN "ganhador" ; mkPN "vencedor" ; } ; --*
lin victoria_2_PN = variants {mkPN "vitória" ; mkPN "Vitória" ; } ; --*
lin victoria_3_PN = variants {mkPN "Cataratas" ; mkPN "Falls" ; } ; --*
lin victoria_7_PN = variants {mkPN "Columbia" ; mkPN "Victoria" ; } ; --*
lin victorian_1_A = mkA "vitoriano" ; --*
lin victorian_2_A = variants {mkA "puritânico" ; mkA "recatado" ; mkA "vitoriano" ; } ; --*
lin victorian_3_A = mkA "vitoriano" ; --*
lin victorian_N = mkN "vitoriano" ; --*
lin victorious_1_A = variants {mkA "ganhador" ; mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin victorious_2_A = variants {mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin victory_N = mkN "vitória" ; --*
lin victual_1_V2 = variants {mkV2 (mkV "abastecer") ; mkV2 (mkV "fornecer") ; mkV2 (mkV "suprir") ; } ; --*
lin victual_1_V = variants {mkV "abastecer" ; mkV "fornecer" ; mkV "suprir" ; } ; --*
lin victual_N = mkN "alimento" ; --*
lin videlicet_Adv = variants {mkAdv "a" ; mkAdv "is" ; mkAdv "isto" ; mkAdv "wit" ; } ; --*
lin video_1_N = variants {mkN "video" ; mkN "vídeo" ; mkN "vídeos" ; } ; --*
lin video_2_N = variants {mkN "recording" ; mkN "vídeo" ; mkN "Vídeo" ; mkN "vídeos" ; } ; --*
lin video_3_N = mkN "vídeos" ; --*
lin video_4_N = variants {mkN "televisão" ; mkN "tevê" ; mkN "tv" ; } ; --*
lin videocassette_N = mkN "videocassete" ; --*
lin videodisk_1_N = variants {mkN "Disco" ; mkN "DVD" ; } ; --*
lin videotape_2_N = variants {mkN "fita" ; mkN "videocassette" ; mkN "videoteipe" ; } ; --*
lin videotape_V2 = mkV2 (mkV "gravar") ; --*
lin vienna_PN = variants {mkPN "capital" ; mkPN "of" ; mkPN "Viena" ; } ; --*
lin vietnam_1_PN = variants {mkPN "Nam" ; mkPN "Republic" ; mkPN "Vietname" ; } ; --*
lin vietnam_2_PN = variants {mkPN "Guerra" ; mkPN "War" ; } ; --*
lin vietnamese_1_N = mkN "vietnamita" ; --*
lin vietnamese_2_N = variants {mkN "Língua" ; mkN "vietnamita" ; } ; --*
lin vietnamese_A = variants {mkA "vietnamita" ; mkA "vietnamitas" ; } ; --*
lin vie_V = variants {mkV "competir" ; mkV "concorrer" ; } ; --*
lin view_1_N = variants {mkN "perspectiva" ; mkN "posição" ; mkN "visão" ; } ; --*
lin view_1_V2 = variants {mkV2 (mkV "achar") ; mkV2 (mkV "considerar") ; mkV2 (mkV "ver") ; } ; --*
lin view_2_N = variants {mkN "panorama" ; mkN "vista" ; } ; --*
lin view_2_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "ver") ; } ; --*
lin view_3_N = mkN "observação" ; --*
lin view_3_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "in") ; mkV2 (mkV "ver") ; } ; --*
lin view_6_N = mkN "opinião" ; --*
lin view_7_N = mkN "intenção" ; --*
lin view_9_N = variants {mkN "âmbito" ; mkN "horizonte" ; } ; --*
lin viewer_1_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin viewfinder_N = variants {mkN "finder" ; mkN "mira" ; mkN "visor" ; } ; --*
lin view_on_N2 = variants {mkN2 (mkN "ideia") noPrep ; mkN2 (mkN "idéia") noPrep ; mkN2 (mkN "opinião") noPrep ; mkN2 (mkN "pensamento") noPrep ; mkN2 (mkN "perspicácia") noPrep ; } ; --*
lin viewpoint_1_N = variants {mkN "of" ; mkN "ponto" ; } ; --*
lin vigil_2_N = mkN "vigília" ; --*
lin vigil_3_N = mkN "guarda" ; --*
lin vigilance_2_N = variants {mkN "eye" ; mkN "vigilância" ; } ; --*
lin vigilante_N = variants {mkN "Justiceiro" ; mkN "man" ; } ; --*
lin vigor_1_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin vigor_2_N = variants {mkN "força" ; mkN "vigor" ; } ; --*
lin vigor_3_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin vigorous_1_A = mkA "vigoroso" ; --*
lin vigorous_2_A = mkA "vigoroso" ; --*
lin vigour_1_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin vigour_2_N = variants {mkN "força" ; mkN "vigor" ; } ; --*
lin vigour_3_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin viking_N = variants {mkN "vikings" ; mkN "Vikings" ; mkN "viquingue" ; } ; --*
lin vile_1_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin vile_2_A = variants {mkA "nauseante" ; mkA "ofensivo" ; } ; --*
lin vilification_2_N = variants {mkN "injúria" ; mkN "insulto" ; } ; --*
lin vilify_V2 = mkV2 (mkV "denegrir") ; --*
lin villa_1_N = variants {mkN "Arango" ; mkN "Pancho" ; mkN "Villa" ; } ; --*
lin villa_4_N = mkN "villa" ; --*
lin village_1_N = variants {mkN "povoado" ; mkN "town" ; mkN "vila" ; } ; --*
lin village_2_N = variants {mkN "aldeia" ; mkN "vila" ; mkN "vilarejo" ; } ; --*
lin village_3_N = variants {mkN "Greenwich" ; mkN "Village" ; } ; --*
lin villager_N = variants {mkN "aldeã" ; mkN "aldeão" ; } ; --*
lin villain_2_N = variants {mkN "vilão" ; mkN "Vilões" ; } ; --*
lin villainous_A = mkA "malvado" ; --*
lin villein_N = variants {mkN "escravo" ; mkN "servo" ; } ; --*
lin vim_1_N = variants {mkN "energia" ; mkN "vitalidade" ; } ; --*
lin vim_2_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin vinaceous_1_A = mkA "vínico" ; --*
lin vinblastine_N = mkN "vimblastina" ; --*
lin vincristine_N = mkN "Vincristina" ; --*
lin vindicate_1_V2 = variants {mkV2 (mkV "justificar") ; mkV2 (mkV "vindicar") ; } ; --*
lin vindicate_2_V2 = mkV2 (mkV "vindicar") ; --*
lin vindicate_3_V2 = mkV2 (mkV "vindicar") ; --*
lin vindication_1_N = variants {mkN "exoneração" ; mkN "justificação" ; } ; --*
lin vindication_2_N = variants {mkN "defesa" ; mkN "justificação" ; } ; --*
lin vindictive_1_A = mkA "vingativo" ; --*
lin vindictive_2_A = variants {mkA "danoso" ; mkA "maldoso" ; mkA "malévolo" ; } ; --*
lin vindictiveness_N = mkN "vingatividade" ; --*
lin vinegar_1_N = mkN "vinagre" ; --*
lin vinegar_2_N = mkN "vinagre" ; --*
lin vinegary_1_A = variants {mkA "ácido" ; mkA "azedo" ; } ; --*
lin vine_N = variants {mkN "cipó" ; mkN "parreira" ; mkN "videira" ; } ; --*
lin vinery_N = variants {mkN "vinha" ; mkN "Vinha" ; mkN "vinhedo" ; } ; --*
lin vineyard_N = variants {mkN "vinha" ; mkN "Vinha" ; mkN "vinhedo" ; } ; --*
lin vinifera_N = variants {mkN "grape" ; mkN "vinifera" ; mkN "Vitis" ; } ; --*
lin vinous_A = mkA "vínico" ; --*
lin vintage_1_N = mkN "vindima" ; --*
lin vintage_2_N = variants {mkN "of" ; mkN "Vintage" ; } ; --*
lin vinyl_1_N = variants {mkN "Etenil" ; mkN "group" ; mkN "radical" ; } ; --*
lin viola_1_N = mkN "viola" ; --*
lin viola_1_PN = mkPN "viola" ; --*
lin viola_3_N = variants {mkN "viola" ; mkN "Viola" ; mkN "violeta" ; } ; --*
lin viola_3_PN = variants {mkPN "viola" ; mkPN "Viola" ; mkPN "violeta" ; } ; --*
lin violate_1_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "destruir") ; mkV2 (mkV "ir") ; } ; --*
lin violate_2_V2 = variants {mkV2 (mkV "against") ; mkV2 (mkV "infringir") ; mkV2 (mkV "ofender") ; mkV2 (mkV "pecar") ; mkV2 (mkV "quebrar") ; mkV2 (mkV "transgredir") ; mkV2 (mkV "violar") ; } ; --*
lin violate_4_V2 = variants {mkV2 (mkV "dessacralizar") ; mkV2 (mkV "profanar") ; mkV2 (mkV "violar") ; } ; --*
lin violate_5_V2 = variants {mkV2 (mkV "atacar") ; mkV2 (mkV "atentar") ; mkV2 (mkV "estuprar") ; mkV2 (mkV "violentar") ; } ; --*
lin violation_1_N = variants {mkN "infração" ; mkN "infracção" ; } ; --*
lin violation_2_N = mkN "violação" ; --*
lin violation_3_N = variants {mkN "intrusão" ; mkN "invasão" ; mkN "violação" ; } ; --*
lin violation_4_N = mkN "irreverência" ; --*
lin violation_5_N = mkN "estupro" ; --*
lin violator_1_N = variants {mkN "contraventor" ; mkN "offender" ; } ; --*
lin violator_2_N = variants {mkN "estuprador" ; mkN "violador" ; } ; --*
lin violence_1_N = variants {mkN "força" ; mkN "violência" ; } ; --*
lin violence_2_N = mkN "violência" ; --*
lin violence_3_N = mkN "violência" ; --*
lin violent_1_A = mkA "violento" ; --*
lin violent_2_A = mkA "violento" ; --*
lin violent_3_A = mkA "violento" ; --*
lin violent_4_A = variants {mkA "feroz" ; mkA "veemente" ; mkA "violento" ; } ; --*
lin violent_5_A = mkA "violento" ; --*
lin violet_1_N = mkN "violeta" ; --*
lin violet_1_PN = mkPN "violeta" ; --*
lin violet_2_N = variants {mkN "blue" ; mkN "roxo" ; mkN "violeta" ; } ; --*
lin violet_2_PN = variants {mkPN "blue" ; mkPN "roxo" ; mkPN "violeta" ; } ; --*
lin violinistFem_N = mkN "violinista" ; --*
lin violinistMasc_N = mkN "violinista" ; --*
lin violin_N = variants {mkN "embuste" ; mkN "fiddle" ; mkN "violino" ; } ; --*
lin violistFem_N = mkN "violista" ; --*
lin violistMasc_N = mkN "violista" ; --*
lin viol_N = mkN "viola" ; --*
lin viper_N = variants {mkN "cobra" ; mkN "vibora" ; mkN "víbora" ; } ; --*
lin vip_N = variants {mkN "dignitário" ; mkN "important" ; mkN "muckamuck" ; mkN "personalidade" ; mkN "Vip" ; mkN "VIP" ; } ; --*
lin virago_1_N = mkN "virago" ; --*
lin viral_A = mkA "viral" ; --*
lin viremia_1_N = variants {mkN "viremia" ; mkN "Viremia" ; } ; --*
lin virga_N = mkN "Virga" ; --*
lin virgin_1_A = mkA "virgem" ; --*
lin virgin_1_N = mkN "virgem" ; --*
lin virgin_2_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin virgin_3_N = variants {mkN "the" ; mkN "Virgem" ; } ; --*
lin virginal_1_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin virginal_2_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin virginal_3_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin virginal_N = variants {mkN "of" ; mkN "virginal" ; } ; --*
lin virginia_1_PN = variants {mkPN "Dominion" ; mkPN "Virgínia" ; } ; --*
lin virginia_2_PN = mkPN "Virgínia" ; --*
lin virginity_N = mkN "virgindade" ; --*
lin virgo_2_PN = variants {mkPN "Constelação" ; mkPN "Virgem" ; mkPN "Virgo" ; } ; --*
lin virgo_3_PN = variants {mkPN "the" ; mkPN "Virgem" ; } ; --*
lin virile_2_A = variants {mkA "macho" ; mkA "varão" ; mkA "varonil" ; mkA "viril" ; } ; --*
lin virile_3_A = mkA "viril" ; --*
lin virility_2_N = variants {mkN "hombridade" ; mkN "virilidade" ; } ; --*
lin viroid_1_N = mkN "viróide" ; --*
lin virological_A = mkA "virológico" ; --*
lin virology_N = variants {mkN "virologia" ; mkN "Virologia" ; } ; --*
lin virtual_1_A = mkA "virtual" ; --*
lin virtual_2_A = mkA "virtual" ; --*
lin virtue_1_N = variants {mkN "excellence" ; mkN "virtude" ; } ; --*
lin virtue_2_N = variants {mkN "merecimento" ; mkN "mérito" ; mkN "virtude" ; } ; --*
lin virtue_3_N = variants {mkN "castidade" ; mkN "morality" ; mkN "virtude" ; } ; --*
lin virtue_4_N = variants {mkN "virtude" ; mkN "Virtudes" ; } ; --*
lin virtuoso_1_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin virtuoso_2_N = mkN "virtuoso" ; --*
lin virtuous_1_A = variants {mkA "digno" ; mkA "nobre" ; mkA "virtuoso" ; } ; --*
lin virtuous_2_A = variants {mkA "virgem" ; mkA "virginal" ; } ; --*
lin virulence_1_N = variants {mkN "virulência" ; mkN "Virulência" ; } ; --*
lin virulent_1_A = variants {mkA "venenosa" ; mkA "venenoso" ; mkA "virulento" ; } ; --*
lin virulent_2_A = mkA "virulento" ; --*
lin virulent_3_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin virus_1_N = mkN "vírus" ; --*
lin virus_3_N = variants {mkN "virus" ; mkN "Virus" ; mkN "vírus" ; mkN "Vírus" ; } ; --*
lin visa_1_V2 = mkV2 (mkV "visar") ; --*
lin visage_1_N = variants {mkN "face" ; mkN "Fisiognomia" ; mkN "fisionomia" ; mkN "rosto" ; } ; --*
lin visage_2_N = variants {mkN "aparência" ; mkN "rosto" ; mkN "semblante" ; } ; --*
lin visa_N = mkN "visto" ; --*
lin viscacha_N = variants {mkN "maximus" ; mkN "viscacha" ; } ; --*
lin visceral_1_A = mkA "visceral" ; --*
lin visceral_2_A = mkA "intuitivo" ; --*
lin viscera_N = mkN "tripas" ; --*
lin viscid_A = mkA "viscoso" ; --*
lin viscometer_1_N = variants {mkN "viscosímetro" ; mkN "Viscosímetro" ; } ; --*
lin viscosity_N = mkN "viscosidade" ; --*
lin viscount_1_N = mkN "visconde" ; --*
lin viscount_2_N = mkN "visconde" ; --*
lin viscountess_2_N = mkN "viscondessa" ; --*
lin viscous_1_A = mkA "viscoso" ; --*
lin viscous_2_A = mkA "viscoso" ; --*
lin vise_N = variants {mkN "morsa" ; mkN "Morsa" ; mkN "vise" ; } ; --*
lin visibility_1_N = mkN "visibilidade" ; --*
lin visibility_2_N = mkN "visibilidade" ; --*
lin visibility_3_N = mkN "visibilidade" ; --*
lin visible_1_A = mkA "visível" ; --*
lin visible_2_A = mkA "visível" ; --*
lin visible_3_A = variants {mkA "disponível" ; mkA "visível" ; } ; --*
lin vision_1_N = mkN "visão" ; --*
lin vision_2_N = variants {mkN "modality" ; mkN "sense" ; mkN "visão" ; } ; --*
lin vision_4_N = mkN "imaginação" ; --*
lin vision_5_N = mkN "visão" ; --*
lin visionary_A = mkA "visionário" ; --*
lin visit_1_N = mkN "visita" ; --*
lin visit_1_V2 = variants {mkV2 (mkV "ir") ; mkV2 (mkV "visitar") ; } ; --*
lin visit_1_V = variants {mkV "ir" ; mkV "visitar" ; } ; --*
lin visit_2_V2 = variants {mkV2 (mkV "to") ; mkV2 (mkV "visitar") ; } ; --*
lin visit_3_N = variants {mkN "inspeção" ; mkN "visita" ; mkN "vistoria" ; } ; --*
lin visit_4_V2 = variants {mkV2 (mkV "fiscalizar") ; mkV2 (mkV "inspecionar") ; mkV2 (mkV "vistoriar") ; } ; --*
lin visit_5_N = mkN "estadia" ; --*
lin visit_5_V2 = variants {mkV2 (mkV "ditar") ; mkV2 (mkV "down") ; mkV2 (mkV "impor") ; mkV2 (mkV "infligir") ; } ; --*
lin visit_6_V2 = variants {mkV2 (mkV "boquejar") ; mkV2 (mkV "confabular") ; mkV2 (mkV "conversar") ; mkV2 (mkV "fofocar") ; mkV2 (mkV "papear") ; mkV2 (mkV "prosear") ; mkV2 (mkV "the") ; } ; --*
lin visit_6_V = variants {mkV "boquejar" ; mkV "confabular" ; mkV "conversar" ; mkV "fofocar" ; mkV "papear" ; mkV "prosear" ; mkV "the" ; } ; --*
lin visitant_N = variants {mkN "visita" ; mkN "visitante" ; } ; --*
lin visitation_1_N = mkN "tribulação" ; --*
lin visitation_3_N = mkN "visita" ; --*
lin visitor_N = variants {mkN "visita" ; mkN "visitante" ; } ; --*
lin vista_N = variants {mkN "panorama" ; mkN "vista" ; } ; --*
lin visual_1_A = variants {mkA "da" ; mkA "ocular" ; mkA "visual" ; } ; --*
lin visual_2_A = mkA "visual" ; --*
lin visualization_1_N = variants {mkN "image" ; mkN "visualização" ; mkN "visualizzazione" ; } ; --*
lin visualize_1_V2 = variants {mkV2 (mkV "afigurar") ; mkV2 (mkV "envisionar") ; mkV2 (mkV "figurar") ; mkV2 (mkV "ver") ; mkV2 (mkV "visualizar") ; } ; --*
lin visualize_2_V2 = mkV2 (mkV "visualizar") ; --*
lin visualize_3_V2 = mkV2 (mkV "visualizar") ; --*
lin visualize_4_V2 = mkV2 (mkV "visualizar") ; --*
lin vital_1_A = variants {mkA "crítico" ; mkA "essencial" ; mkA "indispensável" ; } ; --*
lin vital_3_A = variants {mkA "of" ; mkA "vital" ; } ; --*
lin vitalism_N = mkN "vitalismo" ; --*
lin vitality_1_N = variants {mkN "elã" ; mkN "estro" ; mkN "verve" ; mkN "vitalidade" ; mkN "vivacidade" ; } ; --*
lin vitality_2_N = variants {mkN "energia" ; mkN "vitalidade" ; } ; --*
lin vitality_4_N = mkN "animação" ; --*
lin vitamin_N = mkN "vitamina" ; --*
lin vitiate_1_V2 = variants {mkV2 (mkV "aviltar") ; mkV2 (mkV "corromper") ; mkV2 (mkV "depravar") ; mkV2 (mkV "desvirtuar") ; mkV2 (mkV "perverter") ; mkV2 (mkV "subverter") ; mkV2 (mkV "viciar") ; } ; --*
lin vitiate_2_V2 = variants {mkV2 (mkV "deteriorar") ; mkV2 (mkV "estragar") ; } ; --*
lin vitiate_3_V2 = mkV2 (mkV "invalidar") ; --*
lin viticulture_1_N = variants {mkN "viticultura" ; mkN "Viticultura" ; } ; --*
lin viticulturist_N = variants {mkN "vinicultor" ; mkN "viticultor" ; } ; --*
lin vitiliginous_A = mkA "vitiliginoso" ; --*
lin vitiligo_N = mkN "vitiligo" ; --*
lin vitrectomy_N = mkN "vitrectomia" ; --*
lin vitreous_1_A = mkA "vítreo" ; --*
lin vitrification_1_N = mkN "vitrificação" ; --*
lin vitrify_1_V2 = mkV2 (mkV "vitrificar") ; --*
lin vitrify_1_V = mkV "vitrificar" ; --*
lin vitrify_2_V2 = mkV2 (mkV "vitrificar") ; --*
lin vitrify_2_V = mkV "vitrificar" ; --*
lin vitriol_1_N = variants {mkN "acid" ; mkN "ácido" ; mkN "of" ; } ; --*
lin vitriol_2_N = variants {mkN "invectiva" ; mkN "vitupério" ; } ; --*
lin vitriolic_1_A = variants {mkA "acerbo" ; mkA "acre" ; mkA "amargo" ; mkA "amargoso" ; mkA "amaro" ; mkA "áspero" ; mkA "cáustico" ; mkA "virulento" ; } ; --*
lin vitriolic_2_A = variants {mkA "cáustico" ; mkA "corrosivo" ; } ; --*
lin vituperate_V2 = mkV2 (mkV "denegrir") ; --*
lin vituperation_N = variants {mkN "invectiva" ; mkN "vitupério" ; } ; --*
lin vivarium_N = mkN "viveiro" ; --*
lin vivid_1_A = variants {mkA "gráfico" ; mkA "vivaz" ; } ; --*
lin vivid_2_A = mkA "vivaz" ; --*
lin vivid_3_A = mkA "brilhante" ; --*
lin vivid_4_A = mkA "intenso" ; --*
lin vividness_1_N = mkN "cor" ; --*
lin vivification_1_N = mkN "animação" ; --*
lin vivisection_N = variants {mkN "vivisecção" ; mkN "vivissecção" ; } ; --*
lin vixen_1_N = mkN "prostituta" ; --*
lin vizier_N = mkN "vizir" ; --*
lin vocable_N = variants {mkN "palavra" ; mkN "word" ; } ; --*
lin vocabulary_1_N = variants {mkN "dicionário" ; mkN "léxico" ; mkN "vocabulário" ; } ; --*
lin vocabulary_2_N = variants {mkN "léxico" ; mkN "lexicon" ; mkN "vocabulário" ; } ; --*
lin vocal_1_A = mkA "vocal" ; --*
lin vocal_2_A = mkA "vocal" ; --*
lin vocal_2_N = variants {mkN "canção" ; mkN "cantiga" ; } ; --*
lin vocal_4_A = mkA "vocal" ; --*
lin vocalic_1_A = mkA "vogal" ; --*
lin vocalic_2_A = mkA "vogal" ; --*
lin vocalist_N = variants {mkN "cantador" ; mkN "cantor" ; mkN "cantora" ; mkN "vocalista" ; } ; --*
lin vocalize_2_V2 = mkV2 (mkV "vocalizar") ; --*
lin vocalize_4_V2 = variants {mkV2 (mkV "articular") ; mkV2 (mkV "dizer") ; mkV2 (mkV "enunciar") ; mkV2 (mkV "vocalizar") ; } ; --*
lin vocation_1_N = variants {mkN "ocupação" ; mkN "profissão" ; mkN "vocação" ; } ; --*
lin vocation_2_N = variants {mkN "group" ; mkN "grupo" ; } ; --*
lin vocational_A = mkA "profissional" ; --*
lin vocative_A = mkA "vocativo" ; --*
lin vocative_N = variants {mkN "case" ; mkN "vocativo" ; } ; --*
lin vociferation_N = variants {mkN "brado" ; mkN "chamada" ; mkN "grito" ; } ; --*
lin vociferous_A = mkA "clamoroso" ; --*
lin vodka_N = variants {mkN "vodca" ; mkN "Vódca" ; mkN "Vodcas" ; } ; --*
lin vogue_1_N = variants {mkN "estilo" ; mkN "moda" ; mkN "tendências" ; } ; --*
lin voice_10_N = mkN "Voz" ; --*
lin voice_1_N = mkN "voz" ; --*
lin voice_1_V2 = mkV2 (mkV "expressar") ; --*
lin voice_2_N = variants {mkN "voz" ; mkN "Voz" ; } ; --*
lin voice_4_N = mkN "articulação" ; --*
lin voice_7_N = mkN "voz" ; --*
lin voice_8_N = variants {mkN "porta-voz" ; mkN "representante" ; } ; --*
lin voice_9_N = mkN "voz" ; --*
lin voiceless_1_A = mkA "surdo" ; --*
lin voicelessness_2_N = variants {mkN "cochicho" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin voicing_N = mkN "vocalização" ; --*
lin void_1_A = variants {mkA "inválido" ; mkA "nulo" ; } ; --*
lin void_1_V2 = variants {mkV2 (mkV "anular") ; mkV2 (mkV "cancelar") ; mkV2 (mkV "invalidar") ; mkV2 (mkV "revogar") ; } ; --*
lin void_2_N = variants {mkN "vacância" ; mkN "vácuo" ; mkN "vaga" ; mkN "vazio" ; } ; --*
lin void_3_V2 = mkV2 (mkV "invalidar") ; --*
lin volatile_1_A = mkA "volátil" ; --*
lin volatile_3_A = variants {mkA "caprichoso" ; mkA "instável" ; mkA "volátil" ; mkA "volúvel" ; } ; --*
lin volatile_4_A = variants {mkA "volátil" ; mkA "volatile" ; } ; --*
lin volatility_1_N = variants {mkN "volatilidade" ; mkN "Volatilidade" ; } ; --*
lin volatility_2_N = mkN "volatilidade" ; --*
lin volcanic_1_A = mkA "vulcânico" ; --*
lin volcanic_2_A = mkA "vulcânico" ; --*
lin volcanic_3_A = mkA "vulcânico" ; --*
lin volcanism_N = variants {mkN "vulcanismo" ; mkN "Vulcanismo" ; } ; --*
lin volcano_2_N = mkN "vulcão" ; --*
lin volcanology_1_N = variants {mkN "vulcanologia" ; mkN "Vulcanologia" ; } ; --*
lin vole_N = variants {mkN "mouse" ; mkN "Rato-do-campo" ; } ; --*
lin volgograd_PN = mkPN "Volgogrado" ; --*
lin volition_1_N = mkN "vontade" ; --*
lin volition_2_N = variants {mkN "escolha" ; mkN "resolução" ; mkN "vontade" ; } ; --*
lin volley_1_N = variants {mkN "caudal" ; mkN "salva" ; mkN "saraivada" ; mkN "torrente" ; mkN "voleio" ; } ; --*
lin volley_2_V2 = mkV2 (mkV "salvar") ; --*
lin volley_3_V2 = mkV2 (mkV "saraivar") ; --*
lin volleyball_1_N = variants {mkN "game" ; mkN "voleibol" ; mkN "Vôleibol" ; } ; --*
lin volleyball_2_N = mkN "voleibol" ; --*
lin voltage_1_N = variants {mkN "force" ; mkN "voltagem" ; } ; --*
lin voltage_2_N = variants {mkN "difference" ; mkN "drop" ; mkN "potential" ; mkN "voltagem" ; } ; --*
lin voltaic_A = mkA "galvânico" ; --*
lin volte_face_N = variants {mkN "change" ; mkN "conversão" ; mkN "reviravolta" ; } ; --*
lin voltmeter_N = variants {mkN "Voltimetro" ; mkN "voltímetro" ; } ; --*
lin volt_N = variants {mkN "volt" ; mkN "vóltio" ; } ; --*
lin volubility_N = mkN "volubilidade" ; --*
lin voluble_A = mkA "tagarela" ; --*
lin volume_1_N = mkN "volume" ; --*
lin volume_2_N = variants {mkN "extensão" ; mkN "quantidade" ; mkN "volume" ; } ; --*
lin volume_3_N = variants {mkN "livro" ; mkN "livros" ; } ; --*
lin volume_4_N = mkN "livro" ; --*
lin volume_6_N = variants {mkN "gritaria" ; mkN "intensidade" ; mkN "volume" ; } ; --*
lin volumetric_1_A = mkA "volumétrico" ; --*
lin voluminous_3_A = mkA "abundante" ; --*
lin voluntary_1_A = mkA "voluntário" ; --*
lin voluntary_1_N = variants {mkN "voluntário" ; mkN "volunteer" ; } ; --*
lin voluntary_2_A = mkA "voluntário" ; --*
lin volunteer_2_V2 = variants {mkV2 (mkV "apresentar") ; mkV2 (mkV "oferecer") ; mkV2 (mkV "voluntariar") ; } ; --*
lin volunteerFem_1_N = variants {mkN "voluntário" ; mkN "volunteer" ; } ; --*
lin volunteerFem_2_N = variants {mkN "voluntário" ; mkN "worker" ; } ; --*
lin volunteerMasc_1_N = variants {mkN "voluntário" ; mkN "volunteer" ; } ; --*
lin volunteerMasc_2_N = variants {mkN "voluntário" ; mkN "worker" ; } ; --*
lin voluptuous_1_A = mkA "voluptário" ; --*
lin voluptuous_2_A = mkA "peituda" ; --*
lin voluptuous_3_A = mkA "voluptuoso" ; --*
lin volute_2_N = variants {mkN "bobine" ; mkN "espiral" ; mkN "hélice" ; mkN "rosca" ; } ; --*
lin voluted_1_A = mkA "helicoidal" ; --*
lin vomer_N = mkN "Osso" ; --*
lin vomit_1_N = mkN "vômito" ; --*
lin vomit_3_N = variants {mkN "êmese" ; mkN "vômito" ; } ; --*
lin vomit_V = variants {mkV "regurgitar" ; mkV "sick" ; mkV "up" ; mkV "vomitar" ; } ; --*
lin voodoo_1_N = mkN "fetiche" ; --*
lin voodoo_3_N = mkN "vodu" ; --*
lin voodooism_1_N = mkN "vodu" ; --*
lin voracious_1_A = mkA "voraz" ; --*
lin voracious_2_A = mkA "voraz" ; --*
lin vortex_1_N = variants {mkN "redemoinho" ; mkN "turbilhão" ; mkN "vórtice" ; } ; --*
lin vortex_2_N = variants {mkN "espiral" ; mkN "funil" ; mkN "furacão" ; mkN "redemoinho" ; mkN "sorvedouro" ; mkN "tufão" ; mkN "turbilhão" ; mkN "voragem" ; mkN "vórtice" ; } ; --*
lin vote_1_N = variants {mkN "eleição" ; mkN "votação" ; mkN "voto" ; } ; --*
lin vote_1_V = mkV "votar" ; --*
lin vote_2_N = mkN "votação" ; --*
lin vote_2_V2 = mkV2 (mkV "votar") ; --*
lin vote_3_N = variants {mkN "sufrágio" ; mkN "to" ; mkN "voto" ; } ; --*
lin vote_3_V = mkV "votar" ; --*
lin vote_4_V2 = mkV2 (mkV "votar") ; --*
lin vote_5_V2 = mkV2 (mkV "votar") ; --*
lin voter_N = variants {mkN "eleitor" ; mkN "votante" ; } ; --*
lin vote_VS = mkVS (mkV "votar") ; --*
lin vouch_2_V = mkV "afiançar" ; --*
lin voucher_3_N = variants {mkN "bilhete" ; mkN "cupom" ; } ; --*
lin vouchsafe_V2 = mkV2 (mkV "permitir") ; --*
lin voussoir_N = variants {mkN "aduela" ; mkN "Aduela" ; } ; --*
lin vow_1_VV = mkVV (mkV "fazer") ; --*
lin vow_2_V2 = mkV2 (mkV "consagrar") ; --*
lin vow_2_VS = mkVS (mkV "consagrar") ; --*
lin vow_2_VV = mkVV (mkV "consagrar") ; --*
lin vowel_1_N = variants {mkN "sound" ; mkN "vogal" ; } ; --*
lin vowel_2_N = variants {mkN "Vogais" ; mkN "vogal" ; mkN "Vogal" ; } ; --*
lin vow_N = mkN "voto" ; --*
lin vox_N = variants {mkN "voz" ; mkN "Voz" ; } ; --*
lin vox_populi_N = variants {mkN "opinião" ; mkN "opinion" ; mkN "populi" ; } ; --*
lin voyage_1_N = variants {mkN "trip" ; mkN "viagem" ; } ; --*
lin voyage_2_N = mkN "viagem" ; --*
lin voyager_N = mkN "viajante" ; --*
lin voyage_V = variants {mkV "navegar" ; mkV "velejar" ; } ; --*
lin voyeurism_N = mkN "voyeurismo" ; --*
lin vulcanization_1_N = mkN "vulcanização" ; --*
lin vulgar_1_A = variants {mkA "agreste" ; mkA "grosseira" ; mkA "grosseiro" ; mkA "ríspido" ; mkA "rude" ; mkA "tosco" ; } ; --*
lin vulgar_2_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "popular" ; mkA "vulgar" ; } ; --*
lin vulgar_3_A = variants {mkA "comum" ; mkA "ordinário" ; mkA "vernáculo" ; mkA "Vernáculo" ; } ; --*
lin vulgar_4_A = mkA "ordinário" ; --*
lin vulgarism_1_N = variants {mkN "indecência" ; mkN "obscenidade" ; mkN "palavrão" ; mkN "vulgaridade" ; mkN "word" ; } ; --*
lin vulgarism_2_N = variants {mkN "grosseria" ; mkN "obscenidades" ; } ; --*
lin vulgarity_N = variants {mkN "grosseria" ; mkN "obscenidades" ; } ; --*
lin vulgarize_1_V2 = mkV2 (mkV "popularizar") ; --*
lin vulgarize_3_V2 = mkV2 (mkV "vulgarizar") ; --*
lin vulgate_N = mkN "Vulgata" ; --*
lin vulnerability_1_N = variants {mkN "exposição" ; mkN "vulnerabilidade" ; } ; --*
lin vulnerability_2_N = variants {mkN "debilidade" ; mkN "vulnerabilidade" ; mkN "Vulnerabilidade" ; } ; --*
lin vulnerable_1_A = mkA "vulnerável" ; --*
lin vulnerable_2_A = mkA "vulnerável" ; --*
lin vulnerable_3_A = mkA "vulnerável" ; --*
lin vulpine_A = mkA "vulpino" ; --*
lin vulture_1_N = variants {mkN "abutre" ; mkN "urubu" ; } ; --*
lin vulva_N = variants {mkN "cona" ; mkN "vulva" ; mkN "Vulva" ; } ; --*
lin vulvectomy_N = mkN "Vulvectomia" ; --*
lin wad_2_V2 = variants {mkV2 (mkV "lotar") ; mkV2 (mkV "up") ; } ; --*
lin wadding_N = variants {mkN "algodão" ; mkN "material" ; } ; --*
lin wade_across_V2 = variants {mkV2 (mkV "atravessar") ; mkV2 (mkV "vadear") ; } ; --*
lin waders_N = mkN "wader" ; --*
lin wade_V2 = variants {mkV2 (mkV "atravessar") ; mkV2 (mkV "vadear") ; } ; --*
lin wadi_N = mkN "uádi" ; --*
lin wad_of_2_N2 = variants {mkN2 (mkN "a") noPrep ; mkN2 (mkN "bocado") noPrep ; mkN2 (mkN "deal") noPrep ; mkN2 (mkN "massa") noPrep ; mkN2 (mkN "montanha") noPrep ; mkN2 (mkN "montão") noPrep ; mkN2 (mkN "multidão") noPrep ; mkN2 (mkN "quantidade") noPrep ; mkN2 (mkN "sum") noPrep ; } ; --*
lin wad_VS = variants {mkVS (mkV "lotar") ; mkVS (mkV "up") ; } ; --*
lin wafer_3_N = mkN "hóstia" ; --*
lin waffle_N = variants {mkN "folhado" ; mkN "Wafel" ; mkN "Waffle" ; } ; --*
lin waffle_V2 = variants {mkV2 (mkV "duvidar") ; mkV2 (mkV "gaguejar") ; mkV2 (mkV "hesitar") ; mkV2 (mkV "stötön") ; mkV2 (mkV "vacilar") ; } ; --*
lin waffle_V = variants {mkV "duvidar" ; mkV "gaguejar" ; mkV "hesitar" ; mkV "stötön" ; mkV "vacilar" ; } ; --*
lin waft_2_V2 = mkV2 (mkV "soprar") ; --*
lin wag_2_N = variants {mkN "agitação" ; mkN "sacolejo" ; } ; --*
lin wage_claim_N = mkN "claim" ; --*
lin wage_N = variants {mkN "ordenado" ; mkN "remuneração" ; mkN "retribuição" ; mkN "salário" ; } ; --*
lin wager_1_N = mkN "aposta" ; --*
lin wager_1_V2 = variants {mkV2 (mkV "apostar") ; mkV2 (mkV "jogar") ; } ; --*
lin wager_2_N = mkN "aposta" ; --*
lin wager_2_V2 = mkV2 (mkV "apostar") ; --*
lin wager_2_V = mkV "apostar" ; --*
lin wage_V2 = mkV2 (mkV "conduzir") ; --*
lin waggle_1_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "sacudir") ; } ; --*
lin waggle_2_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "mexer") ; mkV2 (mkV "movimentar") ; } ; --*
lin waggle_2_V = variants {mkV "agitar" ; mkV "mexer" ; mkV "movimentar" ; } ; --*
lin waggon_1_N = variants {mkN "carroça" ; mkN "vagão" ; } ; --*
lin waggon_2_N = variants {mkN "car" ; mkN "carro" ; mkN "waggon" ; mkN "wagon" ; } ; --*
lin wagon_1_N = variants {mkN "carroça" ; mkN "vagão" ; } ; --*
lin wagon_5_N = variants {mkN "car" ; mkN "carro" ; mkN "waggon" ; mkN "wagon" ; } ; --*
lin wag_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "sacudir") ; } ; --*
lin wahoo_3_N = variants {mkN "Cavala-da-índia" ; mkN "solandri" ; } ; --*
lin wail_1_V = variants {mkV "bramir" ; mkV "ulular" ; } ; --*
lin wail_2_V = variants {mkV "choramingar" ; mkV "gemer" ; } ; --*
lin wailing_N = mkN "lamento" ; --*
lin wail_N = variants {mkN "lamentação" ; mkN "lamento" ; mkN "pranto" ; } ; --*
lin wainscot_2_N = mkN "painel" ; --*
lin wainscoting_2_N = mkN "painel" ; --*
lin waist_1_N = variants {mkN "barriga" ; mkN "cintura" ; mkN "talhe" ; mkN "tronco" ; } ; --*
lin waist_2_N = mkN "cintura" ; --*
lin waistcoat_N = mkN "colete" ; --*
lin waistline_N = variants {mkN "barriga" ; mkN "cintura" ; mkN "talhe" ; mkN "tronco" ; } ; --*
lin wait_1_N = variants {mkN "adiamento" ; mkN "demora" ; mkN "lag" ; mkN "pausa" ; } ; --*
lin wait_1_VV = variants {mkVV (mkV "aguardar") ; mkVV (mkV "esperar") ; } ; --*
lin wait_2_N = mkN "espera" ; --*
lin wait_2_V2 = variants {mkV2 (mkV "aguardar") ; mkV2 (mkV "back") ; mkV2 (mkV "off") ; } ; --*
lin wait_2_V = variants {mkV "aguardar" ; mkV "back" ; mkV "off" ; } ; --*
lin wait_3_VV = variants {mkVV (mkV "aguardar") ; mkVV (mkV "esperar") ; } ; --*
lin waiter_1_N = variants {mkN "empregado" ; mkN "garçom" ; mkN "Garçom" ; mkN "garçon" ; mkN "garçonete" ; } ; --*
lin waiting_N = mkN "espera" ; --*
lin waiting_room_N = variants {mkN "area" ; mkN "room" ; mkN "saladeespera" ; } ; --*
lin wait_on_V2 = variants {mkV2 (mkV "ajudar") ; mkV2 (mkV "assistir") ; mkV2 (mkV "on") ; mkV2 (mkV "servir") ; mkV2 (mkV "to") ; } ; --*
lin waitress_N = variants {mkN "garçom" ; mkN "garçonete" ; } ; --*
lin waive_1_V2 = variants {mkV2 (mkV "dispensar") ; mkV2 (mkV "with") ; } ; --*
lin waive_2_V2 = variants {mkV2 (mkV "jogar") ; mkV2 (mkV "overboard") ; mkV2 (mkV "perder") ; mkV2 (mkV "up") ; } ; --*
lin waiver_N = variants {mkN "desistência" ; mkN "renúncia" ; } ; --*
lin wake_1_N = mkN "resultado" ; --*
lin wake_1_V2 = mkV2 (mkV "acordar") ; --*
lin wake_1_V = mkV "acordar" ; --*
lin wake_2_N = variants {mkN "Ilha" ; mkN "Island" ; } ; --*
lin wake_2_V = variants {mkV "acordar" ; mkV "alive" ; mkV "levantar-se" ; mkV "up" ; } ; --*
lin wake_3_V2 = variants {mkV2 (mkV "acender") ; mkV2 (mkV "up") ; } ; --*
lin wake_4_N = mkN "velório" ; --*
lin wake_5_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "despertar") ; mkV2 (mkV "up") ; } ; --*
lin wakefulness_1_N = mkN "Acordar" ; --*
lin wakefulness_2_N = mkN "insônia" ; --*
lin waken_1_V2 = variants {mkV2 (mkV "acordar") ; mkV2 (mkV "despertar") ; mkV2 (mkV "up") ; } ; --*
lin waken_2_V = variants {mkV "acordar" ; mkV "alive" ; mkV "levantar-se" ; mkV "up" ; } ; --*
lin wake_up_2_V = variants {mkV "acordar" ; mkV "alive" ; mkV "levantar-se" ; mkV "up" ; } ; --*
lin wales_PN = mkPN "País" ; --*
lin walk_10_V2 = variants {mkV2 (mkV "andar") ; mkV2 (mkV "the") ; } ; --*
lin walk_1_N = mkN "caminhada" ; --*
lin walk_1_V = variants {mkV "andar" ; mkV "caminhar" ; mkV "ir" ; } ; --*
lin walk_2_N = variants {mkN "andada" ; mkN "on" ; } ; --*
lin walk_4_N = variants {mkN "andada" ; mkN "caminhada" ; mkN "passeio" ; } ; --*
lin walk_7_N = variants {mkN "of" ; mkN "vocação" ; } ; --*
lin walker_2_N = variants {mkN "Alice" ; mkN "Malsenior" ; mkN "Walker" ; } ; --*
lin walker_3_N = variants {mkN "peão" ; mkN "pedestre" ; } ; --*
lin walker_4_N = mkN "andarilho" ; --*
lin walker_6_N = mkN "andador" ; --*
lin walkie_talkie_N = mkN "walkie-talkie" ; --*
lin walking_N = mkN "caminhada" ; --*
lin walkout_1_N = mkN "greve" ; --*
lin walk_out_1_V = variants {mkV "fazer" ; mkV "out" ; mkV "parar" ; } ; --*
lin walkout_2_N = mkN "Walkout" ; --*
lin walk_out_2_V = mkV "out" ; --*
lin walk_out_3_V = mkV "out" ; --*
lin walkover_2_N = variants {mkN "moleza" ; mkN "of" ; mkN "play" ; mkN "soup" ; } ; --*
lin walk_to_V3 = mkV3 (mkV "passear") ; --*
lin wall_1_N = variants {mkN "baluarte" ; mkN "muralha" ; mkN "Muralhas" ; mkN "muro" ; mkN "Muro" ; mkN "parede" ; mkN "paredes" ; mkN "valo" ; } ; --*
lin wall_2_N = variants {mkN "parede" ; mkN "paredes" ; } ; --*
lin wall_8_N = variants {mkN "baluarte" ; mkN "muralha" ; mkN "trincheira" ; } ; --*
lin wallaby_N = variants {mkN "kangaroo" ; mkN "Wallaby" ; } ; --*
lin wallace_2_PN = variants {mkPN "Edgar" ; mkPN "Horatio" ; mkPN "Wallace" ; } ; --*
lin wallace_3_PN = variants {mkPN "Alfred" ; mkPN "Russel" ; } ; --*
lin wallboard_N = variants {mkN "Drywall" ; mkN "wall" ; } ; --*
lin wallet_N = mkN "carteira" ; --*
lin wallop_1_N = variants {mkN "efeito" ; mkN "impacto" ; } ; --*
lin wallop_1_V2 = mkV2 (mkV "bater") ; --*
lin wallow_2_V = variants {mkV "chafurdar" ; mkV "rolar" ; } ; --*
lin wallow_4_V = variants {mkV "regojizar" ; mkV "triunfar" ; } ; --*
lin wallow_5_V = mkV "deleitar" ; --*
lin wall_painting_N = variants {mkN "muralismo" ; mkN "painting" ; } ; --*
lin wallpaper_N = mkN "papel" ; --*
lin wall_street_1_PN = variants {mkPN "St." ; mkPN "Street" ; } ; --*
lin wall_V2 = variants {mkV2 (mkV "emparedar") ; mkV2 (mkV "in") ; } ; --*
lin walnut_1_N = variants {mkN "nogueira" ; mkN "nogueira-comum" ; mkN "noz" ; } ; --*
lin walnut_2_N = variants {mkN "nogueira" ; mkN "nogueira-comum" ; } ; --*
lin walnut_3_N = variants {mkN "Juglans" ; mkN "nogueira-comum" ; mkN "tree" ; } ; --*
lin walrus_N = variants {mkN "horse" ; mkN "morsa" ; } ; --*
lin walter_PN = variants {mkPN "Guálter" ; mkPN "Gualtério" ; mkPN "Walter" ; } ; --*
lin walton_1_PN = variants {mkPN "Walton" ; mkPN "William" ; } ; --*
lin walton_3_PN = variants {mkPN "Ernest" ; mkPN "T." ; mkPN "Thomas" ; mkPN "Walton" ; } ; --*
lin waltz_2_N = mkN "valsa" ; --*
lin waltz_3_N = mkN "valsa" ; --*
lin waltz_V2 = variants {mkV2 (mkV "around") ; mkV2 (mkV "valsar") ; } ; --*
lin waltz_V = variants {mkV "around" ; mkV "valsar" ; } ; --*
lin wampum_1_N = variants {mkN "dinheiro" ; mkN "grana" ; mkN "guito" ; mkN "massa" ; mkN "moedas" ; } ; --*
lin wan_1_A = variants {mkA "de" ; mkA "fraco" ; } ; --*
lin wan_2_A = variants {mkA "claro" ; mkA "pálido" ; } ; --*
lin wand_1_N = variants {mkN "vara" ; mkN "varinha" ; } ; --*
lin wand_3_N = variants {mkN "ceptro" ; mkN "cetro" ; } ; --*
lin wand_4_N = variants {mkN "bordão" ; mkN "pau" ; } ; --*
lin wander_1_V = variants {mkV "correr" ; mkV "errar" ; mkV "perambular" ; mkV "transmigrar" ; mkV "vadiar" ; mkV "vagabundear" ; mkV "vagar" ; mkV "vaguear" ; } ; --*
lin wander_2_V = variants {mkV "on" ; mkV "tapear" ; mkV "trair" ; } ; --*
lin wander_4_V = variants {mkV "ir" ; mkV "vagar" ; } ; --*
lin wander_5_V = mkV "divagar" ; --*
lin wandering_N = variants {mkN "vagabundagem" ; mkN "vagear" ; } ; --*
lin wanderlust_N = variants {mkN "feet" ; mkN "wanderlust" ; } ; --*
lin wane_1_V = variants {mkV "diminuir" ; mkV "down" ; mkV "minguar" ; } ; --*
lin wane_2_V = variants {mkV "definhar" ; mkV "diminuir" ; mkV "minguar" ; } ; --*
lin wane_3_V = variants {mkV "decrescer" ; mkV "diminuir" ; mkV "minguar" ; } ; --*
lin wane_N = variants {mkN "abatimento" ; mkN "diminuição" ; } ; --*
lin wangle_1_V2 = variants {mkV2 (mkV "atingir") ; mkV2 (mkV "obter") ; } ; --*
lin wangle_2_V2 = variants {mkV2 (mkV "deturpar") ; mkV2 (mkV "falsear") ; mkV2 (mkV "falsificar") ; } ; --*
lin wank_V = variants {mkV "bronha" ; mkV "masturbar" ; mkV "masturbar-se" ; mkV "off" ; } ; --*
lin wanness_N = mkN "palidez" ; --*
lin want_1_N = variants {mkN "pobreza" ; mkN "privação" ; } ; --*
lin want_1_V2 = variants {mkV2 (mkV "ansiar") ; mkV2 (mkV "desejar") ; mkV2 (mkV "querer") ; } ; --*
lin want_2_N = variants {mkN "ausência" ; mkN "carência" ; mkN "deficiência" ; mkN "escassez" ; mkN "falta" ; } ; --*
lin want_2_V2 = variants {mkV2 (mkV "necessitar") ; mkV2 (mkV "precisar") ; mkV2 (mkV "requerer") ; } ; --*
lin want_3_N = variants {mkN "desejo" ; mkN "necessidade" ; } ; --*
lin want_3_V2 = mkV2 (mkV "procurar") ; --*
lin want_4_N = variants {mkN "afã" ; mkN "desejo" ; } ; --*
lin want_4_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "querer") ; } ; --*
lin want_5_V2 = variants {mkV2 (mkV "carecer") ; mkV2 (mkV "precisar") ; } ; --*
lin wanton_1_V = variants {mkV "away" ; mkV "desperdiçar" ; } ; --*
lin wanton_2_A = variants {mkA "devasso" ; mkA "promíscuo" ; } ; --*
lin wantonness_2_N = mkN "licenciosidade" ; --*
lin want_VV = variants {mkVV (mkV "ansiar") ; mkVV (mkV "desejar") ; mkVV (mkV "querer") ; } ; --*
lin wapiti_1_N = variants {mkN "elaphus" ; mkN "elk" ; mkN "uapiti" ; } ; --*
lin wapiti_2_N = variants {mkN "cervo" ; mkN "deer" ; mkN "elaphus" ; mkN "elk" ; mkN "veado" ; } ; --*
lin war_1_N = mkN "guerra" ; --*
lin war_2_N = variants {mkN "guerra" ; mkN "of" ; } ; --*
lin war_3_N = variants {mkN "combate" ; mkN "guerra" ; } ; --*
lin warble_1_V2 = mkV2 (mkV "trinar") ; --*
lin warble_1_V = mkV "trinar" ; --*
lin warble_2_V2 = mkV2 (mkV "cantar") ; --*
lin warble_2_V = mkV "cantar" ; --*
lin war_cry_1_N = variants {mkN "cry" ; mkN "lema" ; } ; --*
lin war_cry_2_N = variants {mkN "cry" ; mkN "whoop" ; } ; --*
lin ward_1_N = variants {mkN "aluno" ; mkN "estudante" ; mkN "pupilo" ; } ; --*
lin ward_2_N = mkN "região" ; --*
lin ward_3_N = variants {mkN "sala" ; mkN "ward" ; } ; --*
lin ward_off_1_V = variants {mkV "evitar" ; mkV "obviar" ; mkV "off" ; } ; --*
lin wardrobe_1_N = variants {mkN "armário" ; mkN "estante" ; mkN "guarda-roupas" ; mkN "Guardarroupas" ; } ; --*
lin wardrobe_2_N = mkN "guarda-roupa" ; --*
lin ward_V2 = variants {mkV2 (mkV "defender") ; mkV2 (mkV "guardar") ; mkV2 (mkV "salvaguardar") ; mkV2 (mkV "salvar") ; } ; --*
lin ware_1_N = mkN "artigo" ; --*
lin ware_1_PN = mkPN "artigo" ; --*
lin ware_2_N = variants {mkN "artigo" ; mkN "fazenda" ; mkN "mercadoria" ; mkN "mercadorias" ; mkN "produto" ; } ; --*
lin ware_2_PN = variants {mkPN "artigo" ; mkPN "fazenda" ; mkPN "mercadoria" ; mkPN "mercadorias" ; mkPN "produto" ; } ; --*
lin warehouse_N = variants {mkN "Armazem" ; mkN "armazém" ; mkN "feitoria" ; mkN "loja" ; mkN "warehouse" ; } ; --*
lin warehousing_N = variants {mkN "armazenamento" ; mkN "depósito" ; } ; --*
lin ware_V2 = variants {mkV2 (mkV "delapidar") ; mkV2 (mkV "desperdiçar") ; mkV2 (mkV "dilapidar") ; mkV2 (mkV "esbanjar") ; } ; --*
lin warfare_1_N = mkN "guerra" ; --*
lin warfare_2_N = variants {mkN "combate" ; mkN "guerra" ; } ; --*
lin warfarin_N = mkN "Varfarina" ; --*
lin warhead_N = variants {mkN "ogiva" ; mkN "Ogiva" ; } ; --*
lin warhorse_2_N = variants {mkN "hand" ; mkN "stager" ; mkN "veterano" ; } ; --*
lin warlike_1_A = mkA "belicoso" ; --*
lin warlike_2_A = mkA "belicoso" ; --*
lin warlock_N = variants {mkN "bruxa" ; mkN "bruxas" ; mkN "bruxos" ; mkN "feiticeiro" ; mkN "mago" ; } ; --*
lin warlord_N = variants {mkN "chefe" ; mkN "senhor" ; } ; --*
lin warm_1_A = mkA "caloroso" ; --*
lin warm_1_V = variants {mkV "aquecer" ; mkV "up" ; } ; --*
lin warm_2_A = mkA "cálido" ; --*
lin warm_2_V2 = variants {mkV2 (mkV "acalentar") ; mkV2 (mkV "aquecer") ; mkV2 (mkV "esquentar") ; } ; --*
lin warm_3_A = mkA "cálido" ; --*
lin warm_9_A = variants {mkA "acalorado" ; mkA "calmoso" ; mkA "quente" ; } ; --*
lin warmer_N = variants {mkN "aquecedor" ; mkN "aquecedores" ; } ; --*
lin warmheartedness_2_N = variants {mkN "afecção" ; mkN "afeição" ; mkN "afetividade" ; mkN "amor" ; mkN "apego" ; mkN "carinho" ; } ; --*
lin warmth_1_N = variants {mkN "calor" ; mkN "febre" ; } ; --*
lin warmth_3_N = mkN "calor" ; --*
lin warmth_4_N = mkN "paixão" ; --*
lin warmth_5_N = variants {mkN "afeição" ; mkN "amor" ; mkN "apego" ; } ; --*
lin warm_up_1_V = mkV "up" ; --*
lin warm_up_2_V = mkV "up" ; --*
lin warn_1_V2 = variants {mkV2 (mkV "advertir") ; mkV2 (mkV "alertar") ; mkV2 (mkV "avisar") ; } ; --*
lin warn_2_V2 = variants {mkV2 (mkV "admoestar") ; mkV2 (mkV "advertir") ; mkV2 (mkV "avisar") ; mkV2 (mkV "desaconselhar") ; mkV2 (mkV "prevenir") ; } ; --*
lin warn_2_V2V = variants {mkV2V (mkV "admoestar") ; mkV2V (mkV "advertir") ; mkV2V (mkV "avisar") ; mkV2V (mkV "desaconselhar") ; mkV2V (mkV "prevenir") ; } ; --*
lin warn_4_V2 = mkV2 (mkV "advertir") ; --*
lin warning_1_N = variants {mkN "alarme" ; mkN "aviso" ; } ; --*
lin warning_2_N = variants {mkN "of" ; mkN "repreensão" ; } ; --*
lin warp_1_V2 = mkV2 (mkV "distorcer") ; --*
lin warp_1_V = mkV "distorcer" ; --*
lin warp_2_V = mkV "bombear" ; --*
lin warp_4_N = mkN "urdume" ; --*
lin warrant_1_N = mkN "mandado" ; --*
lin warrant_1_V2 = mkV2 (mkV "justificar") ; --*
lin warrant_2_N = variants {mkN "warrant" ; mkN "Warrant" ; } ; --*
lin warrant_2_V2 = mkV2 (mkV "garantir") ; --*
lin warrant_3_N = variants {mkN "aprovação" ; mkN "autorização" ; mkN "consentimento" ; mkN "Imprimatur" ; mkN "sanção" ; } ; --*
lin warrant_4_N = variants {mkN "garantia" ; mkN "Garantia" ; } ; --*
lin warrantee_3_N = variants {mkN "garantia" ; mkN "Garantia" ; } ; --*
lin warranty_N = variants {mkN "garantia" ; mkN "Garantia" ; } ; --*
lin warren_2_N = variants {mkN "Earl" ; mkN "Warren" ; } ; --*
lin warren_3_N = variants {mkN "toca" ; mkN "warren" ; } ; --*
lin warrigal_2_N = mkN "dingo" ; --*
lin warrior_N = variants {mkN "guerreira" ; mkN "guerreiro" ; } ; --*
lin warsaw_PN = variants {mkPN "of" ; mkPN "Varsovia" ; mkPN "Varsóvia" ; } ; --*
lin warship_N = variants {mkN "Navios" ; mkN "ship" ; mkN "vessel" ; } ; --*
lin wart_1_N = mkN "verruga" ; --*
lin wart_3_N = mkN "verruga" ; --*
lin warthog_N = variants {mkN "Facoquero" ; mkN "facóquero" ; mkN "Facóquero" ; } ; --*
lin wartime_N = mkN "tempo" ; --*
lin war_V = variants {mkV "aguerrir" ; mkV "guerrear" ; } ; --*
lin wary_1_A = variants {mkA "cauteloso" ; mkA "cuidadoso" ; } ; --*
lin wary_2_A = mkA "suspeito" ; --*
lin wasabi_1_N = mkN "wasabi" ; --*
lin wasabi_2_N = mkN "Wasabi" ; --*
lin wash_11_V2 = mkV2 (mkV "umedecer") ; --*
lin wash_12_V2 = mkV2 (mkV "lavar") ; --*
lin wash_1_V2 = mkV2 (mkV "lavar") ; --*
lin wash_2_N = mkN "lavagem" ; --*
lin wash_2_V2 = variants {mkV2 (mkV "lavar") ; mkV2 (mkV "lavar-se") ; mkV2 (mkV "limpar") ; } ; --*
lin wash_2_V = variants {mkV "lavar" ; mkV "lavar-se" ; mkV "limpar" ; } ; --*
lin wash_3_V2 = mkV2 (mkV "lavar") ; --*
lin wash_5_V = variants {mkV "lavar" ; mkV "lavar-se" ; } ; --*
lin wash_7_N = variants {mkN "lavandaria" ; mkN "lavanderia" ; mkN "roupa" ; } ; --*
lin wash_7_V2 = mkV2 (mkV "lavar") ; --*
lin wash_7_V = mkV "lavar" ; --*
lin wash_9_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "lavar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin washable_A = mkA "lavável" ; --*
lin wash_away_9_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "lavar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin washbasin_1_N = variants {mkN "lavabo" ; mkN "pia" ; } ; --*
lin washbasin_2_N = variants {mkN "basin" ; mkN "lavabo" ; mkN "pia" ; } ; --*
lin washbowl_1_N = variants {mkN "lavabo" ; mkN "pia" ; } ; --*
lin washbowl_2_N = variants {mkN "basin" ; mkN "lavabo" ; mkN "pia" ; } ; --*
lin wash_down_1_V2 = mkV2 (mkV "down") ; --*
lin washer_1_N = mkN "lavador" ; --*
lin washer_2_N = mkN "arruela" ; --*
lin washer_3_N = variants {mkN "lavadora" ; mkN "machine" ; mkN "washer" ; } ; --*
lin washerwoman_1_N = mkN "lavadeira" ; --*
lin washing_1_N = mkN "lavagem" ; --*
lin washing_2_N = variants {mkN "lavandaria" ; mkN "lavanderia" ; mkN "roupa" ; } ; --*
lin washing_machine_N = variants {mkN "lavadora" ; mkN "machine" ; mkN "washer" ; } ; --*
lin washington_1_PN = variants {mkPN "capital" ; mkPN "D.C." ; mkPN "of" ; mkPN "Washington" ; } ; --*
lin washington_2_PN = variants {mkPN "State" ; mkPN "Washington" ; } ; --*
lin washington_3_PN = mkPN "Washington" ; --*
lin washington_4_PN = mkPN "Washington" ; --*
lin washington_5_PN = variants {mkPN "Booker" ; mkPN "T." ; mkPN "Taliaferro" ; } ; --*
lin wash_out_5_V2 = mkV2 (mkV "out") ; --*
lin wash_out_9_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "lavar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin washroom_N = variants {mkN "banheiro" ; mkN "casa" ; } ; --*
lin washstand_1_N = variants {mkN "pia" ; mkN "stand" ; } ; --*
lin washstand_2_N = variants {mkN "lavabo" ; mkN "pia" ; } ; --*
lin washup_1_N = variants {mkN "ablução" ; mkN "banho" ; } ; --*
lin wash_up_3_V2 = variants {mkV2 (mkV "the") ; mkV2 (mkV "up") ; } ; --*
lin wash_up_3_V = variants {mkV "the" ; mkV "up" ; } ; --*
lin wash_up_5_V = variants {mkV "exaurir" ; mkV "out" ; mkV "up" ; } ; --*
lin washy_1_A = mkA "aquoso" ; --*
lin wasp_2_N = mkN "vespa" ; --*
lin wastage_1_N = variants {mkN "abatimento" ; mkN "diminuição" ; } ; --*
lin wastage_2_N = variants {mkN "desgaste" ; mkN "perda" ; mkN "perdas" ; mkN "prejuízo" ; } ; --*
lin waste_1_N = variants {mkN "material" ; mkN "matter" ; mkN "product" ; mkN "Resíduo" ; } ; --*
lin waste_1_V2 = mkV2 (mkV "desperdiçar") ; --*
lin waste_2_N = mkN "desperdício" ; --*
lin waste_2_V2 = variants {mkV2 (mkV "desperdiçar") ; mkV2 (mkV "perder") ; } ; --*
lin waste_3_N = mkN "desperdício" ; --*
lin waste_3_V2 = mkV2 (mkV "jogar") ; --*
lin waste_4_N = variants {mkN "baldio" ; mkN "deserto" ; } ; --*
lin waste_5_V2 = variants {mkV2 (mkV "in") ; mkV2 (mkV "liquidar") ; mkV2 (mkV "neutralizar") ; mkV2 (mkV "off") ; } ; --*
lin waste_6_V = variants {mkV "delapidar" ; mkV "desperdiçar" ; mkV "dilapidar" ; mkV "esbanjar" ; } ; --*
lin waste_7_V = variants {mkV "away" ; mkV "enlanguescer" ; } ; --*
lin waste_8_V2 = mkV2 (mkV "emaciar") ; --*
lin waste_9_V2 = variants {mkV2 (mkV "assolar") ; mkV2 (mkV "destruir") ; mkV2 (mkV "devastar") ; mkV2 (mkV "waste") ; } ; --*
lin waste_9_V = variants {mkV "assolar" ; mkV "destruir" ; mkV "devastar" ; mkV "waste" ; } ; --*
lin waste_away_V = mkV "apodrecer" ; --*
lin wastebin_N = variants {mkN "barrel" ; mkN "bin" ; mkN "can" ; mkN "cesto" ; mkN "lixeira" ; } ; --*
lin wasteful_1_A = mkA "anti-econômico" ; --*
lin wasteful_3_A = mkA "esbanjador" ; --*
lin wasteland_N = variants {mkN "baldio" ; mkN "deserto" ; } ; --*
lin waste_pipe_N = variants {mkN "escoadouro" ; mkN "pipe" ; } ; --*
lin waster_1_N = mkN "desperdiçador" ; --*
lin waster_2_N = mkN "destruidor" ; --*
lin wastrel_N = mkN "desperdiçador" ; --*
lin watch_1_N = mkN "relógio" ; --*
lin watch_1_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "ver") ; } ; --*
lin watch_2_V2 = variants {mkV2 (mkV "an") ; mkV2 (mkV "assistir") ; mkV2 (mkV "guardar") ; mkV2 (mkV "observar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "over") ; mkV2 (mkV "ver") ; } ; --*
lin watch_3_N = mkN "guarda" ; --*
lin watch_3_V2 = variants {mkV2 (mkV "assistir") ; mkV2 (mkV "in") ; mkV2 (mkV "ver") ; } ; --*
lin watch_4_V = variants {mkV "assistir" ; mkV "on" ; } ; --*
lin watch_5_N = variants {mkN "guarda" ; mkN "man" ; mkN "sentinela" ; mkN "vigília" ; } ; --*
lin watch_5_V = variants {mkV "out" ; mkV "ter" ; } ; --*
lin watch_6_N = mkN "vigília" ; --*
lin watch_6_V2 = mkV2 (mkV "assistir") ; --*
lin watch_7_V2 = variants {mkV2 (mkV "aprender") ; mkV2 (mkV "descobrir") ; mkV2 (mkV "encontrar") ; mkV2 (mkV "out") ; mkV2 (mkV "ver") ; } ; --*
lin watchband_N = variants {mkN "bracelet" ; mkN "bracelete" ; mkN "pulseira" ; } ; --*
lin watchdog_1_N = mkN "observando" ; --*
lin watchdog_2_N = variants {mkN "cão" ; mkN "dog" ; } ; --*
lin watcherFem_1_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin watcherFem_2_N = variants {mkN "guard" ; mkN "guarda" ; } ; --*
lin watcherMasc_1_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin watcherMasc_2_N = variants {mkN "guard" ; mkN "guarda" ; } ; --*
lin watchful_A = mkA "alerta" ; --*
lin watchfulness_2_N = variants {mkN "eye" ; mkN "vigilância" ; } ; --*
lin watchmaker_N = variants {mkN "oologista" ; mkN "orologisto" ; mkN "relojeiro" ; mkN "relojoeiro" ; } ; --*
lin watchman_N = variants {mkN "guard" ; mkN "guarda" ; } ; --*
lin watch_out_for_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "ter") ; } ; --*
lin watch_out_V = variants {mkV "out" ; mkV "ter" ; } ; --*
lin watch_over_V2 = variants {mkV2 (mkV "an") ; mkV2 (mkV "assistir") ; mkV2 (mkV "guardar") ; mkV2 (mkV "observar") ; mkV2 (mkV "olhar") ; mkV2 (mkV "over") ; mkV2 (mkV "ver") ; } ; --*
lin watchtower_N = variants {mkN "atalaia" ; mkN "Atalaia" ; } ; --*
lin watchword_1_N = variants {mkN "cry" ; mkN "lema" ; } ; --*
lin watchword_2_N = variants {mkN "contra-senha" ; mkN "palavra" ; mkN "password" ; mkN "senha" ; } ; --*
lin water_1_N = variants {mkN "Agua" ; mkN "água" ; } ; --*
lin water_1_V2 = variants {mkV2 (mkV "irrigar") ; mkV2 (mkV "molhar") ; mkV2 (mkV "regar") ; } ; --*
lin water_2_N = variants {mkN "água" ; mkN "massa" ; mkN "oceano" ; mkN "of" ; } ; --*
lin water_2_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "jogar") ; } ; --*
lin water_3_N = mkN "água" ; --*
lin water_4_N = variants {mkN "fornecimento" ; mkN "supply" ; mkN "system" ; } ; --*
lin water_5_N = variants {mkN "pipi" ; mkN "urina" ; mkN "xixi" ; } ; --*
lin water_6_N = mkN "água" ; --*
lin waterbird_1_N = variants {mkN "aves" ; mkN "bird" ; } ; --*
lin water_buffalo_N = variants {mkN "bubalis" ; mkN "buffalo" ; mkN "ox" ; } ; --*
lin water_closet_N = variants {mkN "banheiro" ; mkN "closet" ; mkN "retrete" ; mkN "sanita" ; mkN "vaso" ; } ; --*
lin watercolour_1_N = variants {mkN "Aguarela" ; mkN "aquarela" ; } ; --*
lin watercolour_2_N = mkN "aquarela" ; --*
lin watercolour_3_N = mkN "aquarela" ; --*
lin watercolour_4_N = mkN "aquarela" ; --*
lin watercourse_1_N = mkN "cursos" ; --*
lin watercourse_2_N = mkN "córrego" ; --*
lin watercraft_2_N = variants {mkN "barco" ; mkN "embarcação" ; mkN "Embarcações" ; mkN "navio" ; mkN "navios" ; } ; --*
lin watercress_1_N = variants {mkN "mastruço" ; mkN "Rorippa" ; } ; --*
lin water_down_1_V2 = mkV2 (mkV "down") ; --*
lin waterfall_N = variants {mkN "cachoeira" ; mkN "cascata" ; mkN "catarata" ; mkN "queda" ; } ; --*
lin waterford_PN = mkPN "Waterford" ; --*
lin waterfowl_N = variants {mkN "aves" ; mkN "bird" ; } ; --*
lin water_glass_1_N = variants {mkN "glass" ; mkN "silicate" ; } ; --*
lin water_glass_4_N = variants {mkN "Clepsidra" ; mkN "clock" ; mkN "glass" ; } ; --*
lin water_ice_1_N = variants {mkN "geada" ; mkN "gelo" ; mkN "ice" ; } ; --*
lin water_ice_2_N = variants {mkN "ice" ; mkN "sorvete" ; } ; --*
lin watering_1_N = mkN "lacrimejamento" ; --*
lin watering_2_N = mkN "irrigação" ; --*
lin watering_can_N = variants {mkN "can" ; mkN "pot" ; } ; --*
lin waterless_A = mkA "árido" ; --*
lin water_level_1_N = mkN "level" ; --*
lin water_level_2_N = variants {mkN "level" ; mkN "table" ; } ; --*
lin water_lily_N = mkN "lily" ; --*
lin waterloo_1_N = mkN "Waterloo" ; --*
lin waterloo_1_PN = mkPN "Waterloo" ; --*
lin waterloo_3_N = variants {mkN "Batalha" ; mkN "of" ; } ; --*
lin waterloo_3_PN = variants {mkPN "Batalha" ; mkPN "of" ; } ; --*
lin water_main_N = mkN "main" ; --*
lin watermelon_1_N = variants {mkN "melancia" ; mkN "vine" ; mkN "vulgaris" ; } ; --*
lin watermelon_2_N = variants {mkN "melancia" ; mkN "Melancia" ; mkN "melancieira" ; } ; --*
lin water_polo_N = mkN "polo" ; --*
lin waterproof_2_N = mkN "capa" ; --*
lin waterproof_A = mkA "impermeável" ; --*
lin waterproofing_1_N = variants {mkN "impermeabilizante" ; mkN "vedação" ; mkN "vedações" ; } ; --*
lin waterproof_V2 = mkV2 (mkV "impermeabilizar") ; --*
lin watershed_1_N = variants {mkN "cumeeira" ; mkN "divisória" ; mkN "horário" ; mkN "parting" ; } ; --*
lin watershed_2_N = variants {mkN "albufeira" ; mkN "area" ; mkN "bacia" ; mkN "basin" ; } ; --*
lin watershed_3_N = variants {mkN "point" ; mkN "ponto" ; } ; --*
lin waterspout_1_N = mkN "tromba" ; --*
lin waterspout_2_N = variants {mkN "aguaceiro" ; mkN "temporal" ; } ; --*
lin water_supply_N = variants {mkN "fornecimento" ; mkN "supply" ; mkN "system" ; } ; --*
lin water_tower_N = mkN "tower" ; --*
lin waterway_1_N = variants {mkN "canal" ; mkN "hidrovia" ; mkN "Hidrovia" ; mkN "Hidrovias" ; mkN "vias" ; } ; --*
lin water_wheel_1_N = variants {mkN "roda" ; mkN "wheel" ; } ; --*
lin water_wheel_2_N = variants {mkN "Roda" ; mkN "wheel" ; } ; --*
lin waterworks_2_N = variants {mkN "estação" ; mkN "ETA" ; } ; --*
lin watery_1_A = mkA "aquoso" ; --*
lin watery_3_A = mkA "aquoso" ; --*
lin watery_4_A = mkA "aquoso" ; --*
lin watt_1_N = mkN "watt" ; --*
lin watt_2_N = variants {mkN "James" ; mkN "Watt" ; } ; --*
lin wattage_N = variants {mkN "Potência" ; mkN "power" ; } ; --*
lin wattle_1_N = mkN "queixo" ; --*
lin wattmeter_N = mkN "wattímetro" ; --*
lin wave_1_N = variants {mkN "ridge" ; mkN "vaga" ; } ; --*
lin wave_2_N = mkN "onda" ; --*
lin wave_2_V2 = variants {mkV2 (mkV "agitar") ; mkV2 (mkV "brandir") ; mkV2 (mkV "mexer") ; } ; --*
lin wave_3_N = mkN "onda" ; --*
lin wave_4_V2 = mkV2 (mkV "enrolar") ; --*
lin wavelength_1_N = mkN "comprimento" ; --*
lin waver_1_V = variants {mkV "duvidar" ; mkV "gaguejar" ; mkV "hesitar" ; mkV "stötön" ; mkV "vacilar" ; } ; --*
lin waver_2_N = mkN "hesitação" ; --*
lin waver_2_V = variants {mkV "esmorecer" ; mkV "fraquejar" ; } ; --*
lin waver_3_N = mkN "excitação" ; --*
lin waver_5_V = mkV "bater" ; --*
lin wavy_1_A = mkA "em" ; --*
lin wax_2_V = variants {mkV "crescer" ; mkV "subir" ; } ; --*
lin wax_3_V = mkV "crescer" ; --*
lin wax_N = mkN "cera" ; --*
lin waxwork_1_N = variants {mkN "bittersweet" ; mkN "Celastrus" ; mkN "scandens" ; mkN "vine" ; } ; --*
lin waxy_2_A = mkA "impressionável" ; --*
lin waxy_3_A = mkA "dobrável" ; --*
lin way_1_N = variants {mkN "estilo" ; mkN "maneira" ; } ; --*
lin way_2_N = variants {mkN "caminho" ; mkN "ferramenta" ; mkN "jeito" ; mkN "maneira" ; mkN "meio" ; mkN "modo" ; } ; --*
lin way_3_N = variants {mkN "curso" ; mkN "direção" ; mkN "direcção" ; mkN "rumo" ; } ; --*
lin way_5_N = variants {mkN "caminho" ; mkN "of" ; } ; --*
lin way_6_N = variants {mkN "caminho" ; mkN "estrada" ; mkN "via" ; } ; --*
lin way_8_N = variants {mkN "espaço" ; mkN "room" ; } ; --*
lin wayfarer_1_N = mkN "viajante" ; --*
lin wayfarer_2_N = mkN "viajante" ; --*
lin wayfaring_A = mkA "peripatético" ; --*
lin waylay_V2 = variants {mkV2 (mkV "emboscar") ; mkV2 (mkV "estar") ; mkV2 (mkV "in") ; } ; --*
lin wayne_1_PN = variants {mkPN "John" ; mkPN "Wayne" ; } ; --*
lin way_out_A = variants {mkA "indiossincrático" ; mkA "próprio" ; mkA "único" ; } ; --*
lin weak_10_A = mkA "ténue" ; --*
lin weak_1_A = mkA "débil" ; --*
lin weak_2_A = mkA "aquoso" ; --*
lin weak_4_A = mkA "imperfeito" ; --*
lin weak_7_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin weak_9_A = mkA "fraco" ; --*
lin weaken_1_V2 = mkV2 (mkV "enfraquecer") ; --*
lin weaken_2_V = mkV "enfraquecer" ; --*
lin weaken_3_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "sabotar") ; mkV2 (mkV "solapar") ; } ; --*
lin weaken_4_V2 = variants {mkV2 (mkV "diminuir") ; mkV2 (mkV "down") ; mkV2 (mkV "enfraquecer") ; } ; --*
lin weaken_5_V2 = variants {mkV2 (mkV "enfraquecer") ; mkV2 (mkV "suavizar") ; } ; --*
lin weakening_2_N = mkN "abatimento" ; --*
lin weakly_A = variants {mkA "débil" ; mkA "decrépito" ; mkA "fraca" ; mkA "fraco" ; } ; --*
lin weakness_1_N = mkN "ponto" ; --*
lin weakness_2_N = mkN "fraqueza" ; --*
lin weakness_3_N = variants {mkN "Astenia" ; mkN "debilidade" ; } ; --*
lin wealth_1_N = variants {mkN "abundancia" ; mkN "poder" ; mkN "riqueza" ; } ; --*
lin wealth_2_N = mkN "riqueza" ; --*
lin wealth_3_N = variants {mkN "riqueza" ; mkN "Riqueza" ; } ; --*
lin wealth_4_N = variants {mkN "bem" ; mkN "possessão" ; mkN "riqueza" ; } ; --*
lin wealthy_A = variants {mkA "afluente" ; mkA "rico" ; } ; --*
lin wean_1_V2 = mkV2 (mkV "desmamar") ; --*
lin wean_2_V2 = mkV2 (mkV "desabituar") ; --*
lin weapon_1_N = variants {mkN "arma" ; mkN "armamento" ; mkN "system" ; } ; --*
lin weapon_2_N = variants {mkN "arma" ; mkN "recurso" ; } ; --*
lin weaponry_N = variants {mkN "arma" ; mkN "armamento" ; mkN "munição" ; mkN "of" ; mkN "system" ; } ; --*
lin wear_1_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "usar") ; } ; --*
lin wear_2_N = variants {mkN "of" ; mkN "roupa" ; mkN "traje" ; mkN "vestido" ; mkN "vestimenta" ; mkN "vestuário" ; } ; --*
lin wear_2_V2 = mkV2 (mkV "vestir") ; --*
lin wear_3_N = mkN "uso" ; --*
lin wear_6_V = variants {mkV "out" ; mkV "resistir" ; mkV "usar" ; } ; --*
lin wear_9_V = variants {mkV "caber" ; mkV "into" ; mkV "on" ; mkV "pôr" ; mkV "usar" ; mkV "vestir" ; } ; --*
lin wear_away_2_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "off") ; } ; --*
lin weariness_N = variants {mkN "cansaço" ; mkN "esgotamento" ; mkN "estafa" ; mkN "fadiga" ; mkN "Fadiga" ; mkN "fatiga" ; } ; --*
lin wearisome_A = variants {mkA "aborrecido" ; mkA "cansativo" ; mkA "chato" ; mkA "enfadonho" ; mkA "entediante" ; mkA "fastidioso" ; mkA "maçante" ; mkA "tedioso" ; } ; --*
lin wear_out_2_V2 = variants {mkV2 (mkV "apart") ; mkV2 (mkV "destruir") ; mkV2 (mkV "out") ; mkV2 (mkV "quebrar") ; } ; --*
lin wear_out_3_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "esmerilar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "thin") ; } ; --*
lin wear_out_8_V2 = variants {mkV2 (mkV "cansar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "exaurir-se") ; mkV2 (mkV "out") ; mkV2 (mkV "upon") ; } ; --*
lin weary_1_V2 = variants {mkV2 (mkV "cansar-se") ; mkV2 (mkV "down") ; mkV2 (mkV "exaurir") ; mkV2 (mkV "exaurir-se") ; mkV2 (mkV "out") ; mkV2 (mkV "upon") ; } ; --*
lin weary_2_V2 = mkV2 (mkV "fatigar") ; --*
lin weary_A = mkA "cansado" ; --*
lin weasel_2_N = variants {mkN "doninha" ; mkN "Mustela" ; } ; --*
lin weather_1_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resistir") ; } ; --*
lin weather_chart_N = variants {mkN "chart" ; mkN "map" ; } ; --*
lin weather_map_N = variants {mkN "chart" ; mkN "map" ; } ; --*
lin weather_N = variants {mkN "clima" ; mkN "condições" ; mkN "condition" ; mkN "vento" ; } ; --*
lin weather_station_N = variants {mkN "observation" ; mkN "station" ; } ; --*
lin weather_vane_1_N = variants {mkN "cata-vento" ; mkN "Catavento" ; mkN "vane" ; } ; --*
lin weave_1_V2 = variants {mkV2 (mkV "entrançar") ; mkV2 (mkV "entrelaçar") ; } ; --*
lin weave_1_V = variants {mkV "entrançar" ; mkV "entrelaçar" ; } ; --*
lin weave_2_V2 = variants {mkV2 (mkV "tecer") ; mkV2 (mkV "urdir") ; } ; --*
lin weave_2_V = variants {mkV "tecer" ; mkV "urdir" ; } ; --*
lin weave_4_V = variants {mkV "ir" ; mkV "vagar" ; } ; --*
lin weaverFem_1_N = variants {mkN "tecelã" ; mkN "tecelão" ; } ; --*
lin weaverMasc_1_N = variants {mkN "tecelã" ; mkN "tecelão" ; } ; --*
lin weaving_N = variants {mkN "tecelagem" ; mkN "Tecelagem" ; } ; --*
lin web_1_N = mkN "teia" ; --*
lin web_2_N = mkN "entrelaçamento" ; --*
lin web_4_N = mkN "rede" ; --*
lin web_5_N = variants {mkN "Wide" ; mkN "World" ; mkN "WWW" ; } ; --*
lin web_6_N = mkN "rede" ; --*
lin web_7_N = mkN "membrana" ; --*
lin webcam_N = variants {mkN "câmara" ; mkN "webcam" ; } ; --*
lin weber_1_N = variants {mkN "weber" ; mkN "Weber" ; } ; --*
lin weber_2_N = variants {mkN "Eduard" ; mkN "Wilhelm" ; } ; --*
lin weber_4_N = variants {mkN "Max" ; mkN "Weber" ; } ; --*
lin weber_5_N = variants {mkN "Carl" ; mkN "Karl" ; mkN "Maria" ; } ; --*
lin weber_6_N = variants {mkN "Ernst" ; mkN "H." ; mkN "Heinrich" ; } ; --*
lin webmaster_N = mkN "Webmaster" ; --*
lin webpage_N = variants {mkN "page" ; mkN "Página" ; } ; --*
lin website_N = variants {mkN "site" ; mkN "website" ; } ; --*
lin wed_A = mkA "casado" ; --*
lin wedding_1_N = variants {mkN "boda" ; mkN "Boda" ; mkN "casamento" ; mkN "ceremony" ; } ; --*
lin wedding_2_N = variants {mkN "casamento" ; mkN "ceremony" ; } ; --*
lin wedding_3_N = variants {mkN "boda" ; mkN "party" ; } ; --*
lin wedding_cake_N = variants {mkN "bolo" ; mkN "cake" ; } ; --*
lin wedding_ring_N = variants {mkN "band" ; mkN "ring" ; } ; --*
lin wedge_1_N = variants {mkN "cunha" ; mkN "shape" ; } ; --*
lin wedge_1_V2 = mkV2 (mkV "colocar") ; --*
lin wedge_7_N = mkN "cunha" ; --*
lin wedlock_N = variants {mkN "casal" ; mkN "casamento" ; mkN "conúbio" ; mkN "matrimónio" ; mkN "relationship" ; } ; --*
lin wed_PN = mkPN "quarta-feira" ; --*
lin wed_V2 = mkV2 (mkV "casar") ; --*
lin wed_V = variants {mkV "casar" ; mkV "esposar" ; mkV "hitched" ; mkV "juntar" ; mkV "married" ; mkV "up" ; } ; --*
lin wee_2_A = mkA "mirim" ; --*
lin weed_1_N = variants {mkN "erva" ; mkN "ervas" ; mkN "maconha" ; } ; --*
lin weed_3_N = variants {mkN "goddess" ; mkN "Jane" ; mkN "maconha" ; } ; --*
lin weedkiller_1_N = variants {mkN "herbicida" ; mkN "Herbicidas" ; mkN "killer" ; } ; --*
lin weed_out_V2 = mkV2 (mkV "out") ; --*
lin weeds_N = variants {mkN "luto" ; mkN "weeds" ; } ; --*
lin weedy_2_A = variants {mkA "cadavérico" ; mkA "extenuado" ; mkA "fino" ; } ; --*
lin week_1_N = mkN "semana" ; --*
lin week_2_N = mkN "semana" ; --*
lin week_3_N = variants {mkN "semana" ; mkN "week" ; } ; --*
lin weekend_N = variants {mkN "fim" ; mkN "Fim" ; mkN "Fim-de-semana" ; mkN "final" ; } ; --*
lin weekly_Adv = variants {mkAdv "semanalmente" ; mkAdv "week" ; } ; --*
lin weekly_A = mkA "semanal" ; --*
lin weekly_N = variants {mkN "hebdomadário" ; mkN "semanário" ; } ; --*
lin wee_N = mkN "pouquinho" ; --*
lin weep_V = variants {mkV "choramingar" ; mkV "chorar" ; mkV "derramar" ; } ; --*
lin wee_V = variants {mkV "a" ; mkV "mijar" ; mkV "oneself" ; mkV "urinar" ; mkV "water" ; } ; --*
lin weevil_N = mkN "Caruncho" ; --*
lin weigh_1_V2 = mkV2 (mkV "pesar") ; --*
lin weigh_1_V = mkV "pesar" ; --*
lin weigh_2_V2 = variants {mkV2 (mkV "considerar") ; mkV2 (mkV "contar") ; mkV2 (mkV "pesar") ; } ; --*
lin weigh_2_V = variants {mkV "considerar" ; mkV "contar" ; mkV "pesar" ; } ; --*
lin weigh_3_V2 = variants {mkV2 (mkV "pesar") ; mkV2 (mkV "tomar") ; } ; --*
lin weigh_4_V = variants {mkV "contar" ; mkV "importar" ; mkV "pesar" ; } ; --*
lin weighing_machine_N = variants {mkN "balança" ; mkN "báscula" ; mkN "machine" ; } ; --*
lin weigh_on_V2 = variants {mkV2 (mkV "down") ; mkV2 (mkV "on") ; } ; --*
lin weight_1_N = mkN "peso" ; --*
lin weight_1_V2 = variants {mkV2 (mkV "carregar") ; mkV2 (mkV "down") ; } ; --*
lin weight_2_N = variants {mkN "peso" ; mkN "weight" ; } ; --*
lin weight_3_N = mkN "magnitude" ; --*
lin weight_7_N = variants {mkN "peso" ; mkN "unit" ; } ; --*
lin weightiness_1_N = mkN "magnitude" ; --*
lin weightless_A = mkA "leve" ; --*
lin weightlessness_N = variants {mkN "leveza" ; mkN "microgravidade" ; } ; --*
lin weighty_2_A = mkA "coerente" ; --*
lin weighty_5_A = variants {mkA "corpulento" ; mkA "encorpado" ; mkA "espesso" ; mkA "gordo" ; mkA "grosso" ; mkA "obeso" ; } ; --*
lin weir_1_N = mkN "barragem" ; --*
lin weir_2_N = mkN "eclusa" ; --*
lin weird_1_A = variants {mkA "barroco" ; mkA "bizarro" ; mkA "esquisito" ; mkA "estranho" ; mkA "extravagante" ; mkA "misterioso" ; } ; --*
lin weirdness_N = variants {mkN "esquisitisse" ; mkN "excentricidade" ; } ; --*
lin welcome_1_N = mkN "boas-vindas" ; --*
lin welcome_2_N = mkN "recepção" ; --*
lin welcome_2_V2 = variants {mkV2 (mkV "acolher") ; mkV2 (mkV "receber") ; mkV2 (mkV "recepcionar") ; } ; --*
lin welcome_A = mkA "bem-vindo" ; --*
lin weld_1_V2 = mkV2 (mkV "unir") ; --*
lin weld_2_V2 = mkV2 (mkV "unir") ; --*
lin welding_N = variants {mkN "soldadura" ; mkN "soldagem" ; } ; --*
lin welfare_1_N = variants {mkN "assistance" ; mkN "segurança" ; mkN "welfare" ; } ; --*
lin welfare_2_N = variants {mkN "bem" ; mkN "benefício" ; } ; --*
lin welfare_3_N = variants {mkN "bem-estar" ; mkN "eudemonismo" ; mkN "saúde" ; } ; --*
lin welkin_N = variants {mkN "céu" ; mkN "esfera" ; mkN "firmamento" ; mkN "of" ; mkN "sphere" ; } ; --*
lin well_1_A = mkA "bem" ; --*
lin well_1_N = mkN "poço" ; --*
lin well_2_AdA = mkAdA "bem" ; --*
lin well_3_A = variants {mkA "boa" ; mkA "bom" ; } ; --*
lin well_being_N = variants {mkN "bem-estar" ; mkN "eudemonismo" ; mkN "saúde" ; } ; --*
lin wellbeing_N = variants {mkN "bem-estar" ; mkN "eudemonismo" ; mkN "saúde" ; } ; --*
lin well_disposed_A = mkA "favorável" ; --*
lin well_favoured_1_A = variants {mkA "bem" ; mkA "bonito" ; mkA "de" ; } ; --*
lin well_grounded_A = mkA "fundamentado" ; --*
lin wellhead_1_N = mkN "nascente" ; --*
lin wellhead_2_N = mkN "Boca" ; --*
lin well_informed_A = mkA "inteligente" ; --*
lin wellington_2_PN = variants {mkPN "of" ; mkPN "Wellington" ; } ; --*
lin wellington_N = variants {mkN "boot" ; mkN "galocha" ; mkN "Galocha" ; } ; --*
lin well_known_1_A = mkA "bem" ; --*
lin well_meaning_1_A = mkA "bem-intencionado" ; --*
lin well_nigh_Adv = variants {mkAdv "perto" ; mkAdv "por" ; mkAdv "quase" ; mkAdv "virtualmente" ; } ; --*
lin well_read_1_A = mkA "lido" ; --*
lin well_read_2_A = variants {mkA "douto" ; mkA "erudito" ; mkA "instruído" ; mkA "sábio" ; } ; --*
lin well_shaven_A = mkA "bem" ; --*
lin wells_PN = variants {mkPN "G." ; mkPN "George" ; mkPN "H." ; } ; --*
lin well_timed_A = variants {mkA "oportuno" ; mkA "timed" ; } ; --*
lin well_up_V = variants {mkV "emergir" ; mkV "up" ; } ; --*
lin well_water_N = mkN "water" ; --*
lin well_worn_2_A = variants {mkA "banal" ; mkA "batido" ; mkA "comun" ; mkA "gasto" ; mkA "trivial" ; mkA "vulgar" ; } ; --*
lin welsh_1_N = mkN "galês" ; --*
lin welsh_2_N = variants {mkN "galês" ; mkN "língua" ; } ; --*
lin welsh_A = variants {mkA "galês" ; mkA "galesa" ; } ; --*
lin welshman_N = mkN "galês" ; --*
lin welter_1_V = mkV "chafurdar" ; --*
lin welter_2_V = variants {mkV "chafurdar" ; mkV "rolar" ; } ; --*
lin welter_3_V = mkV "estar" ; --*
lin welter_N = variants {mkN "bagunça" ; mkN "nest" ; mkN "ninho" ; mkN "zona" ; } ; --*
lin wench_N = variants {mkN "brasa" ; mkN "franguinha" ; mkN "garota" ; mkN "gata" ; mkN "menina" ; mkN "moça" ; mkN "mulher" ; mkN "rapariga" ; } ; --*
lin wen_N = variants {mkN "cisto" ; mkN "cyst" ; } ; --*
lin werewolf_N = variants {mkN "licantropo" ; mkN "lobisomem" ; } ; --*
lin wesleyan_A = mkA "metodista" ; --*
lin west_2_N = variants {mkN "ocidente" ; mkN "oeste" ; mkN "west" ; } ; --*
lin west_3_N = variants {mkN "Região" ; mkN "United" ; } ; --*
lin west_5_N = variants {mkN "Isabel" ; mkN "Rebecca" ; mkN "West" ; } ; --*
lin west_6_N = variants {mkN "Mae" ; mkN "West" ; } ; --*
lin west_8_N = mkN "ocidente" ; --*
lin west_A = mkA "ocidental" ; --*
lin westerly_1_A = mkA "ocidental" ; --*
lin western_1_N = variants {mkN "Cinema" ; mkN "Faroeste" ; mkN "opera" ; } ; --*
lin western_3_A = mkA "ocidental" ; --*
lin western_4_A = mkA "ocidental" ; --*
lin westernization_1_N = mkN "ocidentalização" ; --*
lin westminster_PN = variants {mkPN "of" ; mkPN "Westminster" ; } ; --*
lin wet_1_A = variants {mkA "húmido" ; mkA "molhado" ; mkA "úmido" ; } ; --*
lin wet_1_V2 = mkV2 (mkV "molhar") ; --*
lin wether_N = mkN "carneiro" ; --*
lin wetland_N = mkN "zona" ; --*
lin wetness_N = variants {mkN "humidade" ; mkN "umidade" ; } ; --*
lin wet_N = variants {mkN "humidade" ; mkN "umidade" ; } ; --*
lin wet_nurse_1_N = variants {mkN "ama-de-leite" ; mkN "Ama-de-leite" ; mkN "nurse" ; } ; --*
lin wetter_1_N = variants {mkN "agent" ; mkN "tensoativo" ; } ; --*
lin whack_1_V2 = mkV2 (mkV "bater") ; --*
lin whack_2_N = variants {mkN "batida" ; mkN "golpe" ; } ; --*
lin whacking_N = mkN "surra" ; --*
lin whale_1_N = variants {mkN "baleias" ; mkN "cetáceo" ; mkN "gigante" ; } ; --*
lin whale_2_N = variants {mkN "baleia" ; mkN "beleia" ; } ; --*
lin whalebone_N = variants {mkN "barbas" ; mkN "Barbas" ; } ; --*
lin whaler_1_N = mkN "baleeiro" ; --*
lin whaler_2_N = variants {mkN "baleeiro" ; mkN "ship" ; } ; --*
lin whammy_2_N = variants {mkN "azaração" ; mkN "maldição" ; } ; --*
lin whang_1_V2 = mkV2 (mkV "espancar") ; --*
lin whang_N = variants {mkN "batida" ; mkN "golpe" ; } ; --*
lin wharfage_2_N = variants {mkN "ancoradouro" ; mkN "molhe" ; mkN "píer" ; mkN "plataforma" ; } ; --*
lin wharf_N = variants {mkN "ancoradouro" ; mkN "molhe" ; mkN "píer" ; mkN "plataforma" ; } ; --*
lin whatever_A = mkA "de" ; --*
lin whatnot_N = mkN "quinquilharias" ; --*
lin whatsoever_A = mkA "de" ; --*
lin wheat_1_N = mkN "trigo" ; --*
lin wheat_2_N = variants {mkN "berry" ; mkN "trigo" ; } ; --*
lin wheatfield_N = variants {mkN "campo" ; mkN "field" ; } ; --*
lin wheedle_V2 = mkV2 (mkV "adular") ; --*
lin wheel_1_N = mkN "roda" ; --*
lin wheel_2_N = variants {mkN "volante" ; mkN "wheel" ; } ; --*
lin wheel_3_V = variants {mkV "passar" ; mkV "rodar" ; } ; --*
lin wheel_5_N = variants {mkN "roleta" ; mkN "wheel" ; } ; --*
lin wheel_7_N = variants {mkN "bici" ; mkN "bicicleta" ; mkN "bicicletas" ; mkN "biciclo" ; mkN "roda" ; } ; --*
lin wheelbarrow_N = variants {mkN "carrinho" ; mkN "cart" ; } ; --*
lin wheelchair_N = mkN "cadeira" ; --*
lin wheeler_4_N = mkN "ciclista" ; --*
lin wheeze_1_N = mkN "respiração" ; --*
lin wheeze_V2 = mkV2 (mkV "respirar") ; --*
lin wheeze_V = mkV "respirar" ; --*
lin wheezy_2_A = mkA "asmático" ; --*
lin whelp_N = mkN "filhote" ; --*
lin whelp_V = mkV "parir" ; --*
lin whence_Adv = variants {mkAdv "de" ; mkAdv "donde" ; } ; --*
lin whereabouts_N = variants {mkN "lugar" ; mkN "paradeiro" ; } ; --*
lin wheresoever_Adv = variants {mkAdv "não" ; mkAdv "onde" ; } ; --*
lin wherever_Adv = variants {mkAdv "não" ; mkAdv "onde" ; } ; --*
lin wherewithal_N = variants {mkN "meios" ; mkN "recursos" ; } ; --*
lin whetstone_N = mkN "mó" ; --*
lin whey_1_N = variants {mkN "soro" ; mkN "whey" ; } ; --*
lin whey_2_N = mkN "soro" ; --*
lin whig_3_N = mkN "Partido" ; --*
lin while_away_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "through") ; } ; --*
lin while_N = variants {mkN "instante" ; mkN "momento" ; mkN "quando" ; mkN "segundo" ; mkN "tempo" ; } ; --*
lin whim_1_N = variants {mkN "capricho" ; mkN "caprichoso" ; mkN "desejo" ; mkN "fantasia" ; mkN "impertinência" ; } ; --*
lin whim_2_N = variants {mkN "caprichoso" ; mkN "ideia" ; mkN "idéia" ; mkN "noção" ; } ; --*
lin whimper_N = mkN "lamúria" ; --*
lin whimper_V = variants {mkV "choramingar" ; mkV "gemer" ; } ; --*
lin whimsey_1_N = variants {mkN "caprichoso" ; mkN "ideia" ; mkN "idéia" ; mkN "noção" ; } ; --*
lin whimsy_1_N = variants {mkN "caprichoso" ; mkN "ideia" ; mkN "idéia" ; mkN "noção" ; } ; --*
lin whin_1_N = variants {mkN "europaeus" ; mkN "gorse" ; mkN "tojo" ; } ; --*
lin whine_1_V = mkV "ganir" ; --*
lin whine_2_V2 = variants {mkV2 (mkV "choramingar") ; mkV2 (mkV "lamuriar") ; } ; --*
lin whine_2_V = variants {mkV "choramingar" ; mkV "lamuriar" ; } ; --*
lin whine_4_V2 = mkV2 (mkV "birra") ; --*
lin whine_4_V = mkV "birra" ; --*
lin whine_N = mkN "lamúria" ; --*
lin whinny_N = mkN "relincho" ; --*
lin whinny_V = mkV "relinchar" ; --*
lin whip_1_N = variants {mkN "açoite" ; mkN "chibata" ; mkN "chicote" ; } ; --*
lin whip_1_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; mkV2 (mkV "flagelar") ; mkV2 (mkV "vergastar") ; } ; --*
lin whip_3_V = mkV "chicotear" ; --*
lin whip_4_V2 = variants {mkV2 (mkV "açoitar") ; mkV2 (mkV "chibatar") ; mkV2 (mkV "chicotear") ; } ; --*
lin whippersnapper_N = mkN "metido" ; --*
lin whippet_N = mkN "Whippet" ; --*
lin whipping_1_N = mkN "flagelação" ; --*
lin whipping_2_N = mkN "surra" ; --*
lin whipping_4_N = mkN "superação" ; --*
lin whipping_boy_N = variants {mkN "bode" ; mkN "boy" ; } ; --*
lin whippy_A = mkA "flexível" ; --*
lin whip_up_V2 = mkV2 (mkV "up") ; --*
lin whirl_1_V2 = variants {mkV2 (mkV "girar") ; mkV2 (mkV "piruetar") ; mkV2 (mkV "redemoinhar") ; } ; --*
lin whirl_1_V = variants {mkV "girar" ; mkV "piruetar" ; mkV "redemoinhar" ; } ; --*
lin whirl_2_N = variants {mkN "redemoinho" ; mkN "turbilhão" ; mkN "vórtice" ; } ; --*
lin whirl_2_V2 = mkV2 (mkV "rodopiar") ; --*
lin whirl_3_N = mkN "tentativa" ; --*
lin whirl_3_V2 = mkV2 (mkV "redemoinhar") ; --*
lin whirl_3_V = mkV "redemoinhar" ; --*
lin whirl_4_N = mkN "giro" ; --*
lin whirl_4_V = variants {mkV "around" ; mkV "girar" ; } ; --*
lin whirl_5_V = variants {mkV "around" ; mkV "bater" ; mkV "mexer" ; } ; --*
lin whirligig_1_N = variants {mkN "pião" ; mkN "top" ; } ; --*
lin whirligig_2_N = variants {mkN "carrossel" ; mkN "Carrossel" ; } ; --*
lin whirlpool_N = variants {mkN "espiral" ; mkN "funil" ; mkN "furacão" ; mkN "redemoinho" ; mkN "sorvedouro" ; mkN "tufão" ; mkN "turbilhão" ; mkN "voragem" ; mkN "vórtice" ; } ; --*
lin whirlwind_N = mkN "turbilhão" ; --*
lin whirr_1_V = mkV "ronronar" ; --*
lin whisk_1_N = mkN "batedor" ; --*
lin whisker_1_N = mkN "cabelo" ; --*
lin whisker_2_N = variants {mkN "bigode" ; mkN "hair" ; } ; --*
lin whiskered_1_A = variants {mkA "barbado" ; mkA "barbudo" ; } ; --*
lin whiskey_1_N = variants {mkN "Uisque" ; mkN "uísque" ; mkN "Uísques" ; mkN "whisky" ; } ; --*
lin whisper_1_N = variants {mkN "cochicho" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin whisper_2_N = variants {mkN "burburinho" ; mkN "cicio" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin whispering_1_N = variants {mkN "burburinho" ; mkN "cicio" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin whispering_2_N = variants {mkN "cochicho" ; mkN "murmúrio" ; mkN "sussurro" ; } ; --*
lin whisper_V2 = variants {mkV2 (mkV "cochichar") ; mkV2 (mkV "murmurar") ; mkV2 (mkV "sussurrar") ; } ; --*
lin whisper_V = variants {mkV "cochichar" ; mkV "murmurar" ; mkV "sussurrar" ; } ; --*
lin whistle_1_N = variants {mkN "apito" ; mkN "assobio" ; mkN "assovio" ; } ; --*
lin whistle_1_V = variants {mkV "apitar" ; mkV "assoviar" ; } ; --*
lin whistle_3_N = mkN "apito" ; --*
lin whistle_3_V2 = variants {mkV2 (mkV "assobiar") ; mkV2 (mkV "assoviar") ; mkV2 (mkV "silvar") ; } ; --*
lin whistle_5_N = variants {mkN "flauta" ; mkN "whistle" ; } ; --*
lin whistle_5_V = variants {mkV "apitar" ; mkV "assobiar" ; } ; --*
lin whistler_3_N = variants {mkN "caligata" ; mkN "marmot" ; mkN "marmota" ; } ; --*
lin whistling_1_N = variants {mkN "apito" ; mkN "assobio" ; mkN "assovio" ; } ; --*
lin whist_N = variants {mkN "Uíste" ; mkN "whist" ; } ; --*
lin white_10_N = variants {mkN "albumen" ; mkN "albúmen" ; mkN "clara" ; mkN "white" ; } ; --*
lin white_12_N = mkN "gabardine" ; --*
lin white_1_A = variants {mkA "alvo" ; mkA "branco" ; mkA "cândido" ; } ; --*
lin white_1_N = variants {mkN "branco" ; mkN "caucasiana" ; mkN "person" ; } ; --*
lin white_2_A = variants {mkA "branca" ; mkA "branco" ; mkA "caucasiana" ; mkA "caucasiano" ; mkA "caucasóide" ; } ; --*
lin white_2_N = variants {mkN "alvo" ; mkN "branco" ; mkN "brancura" ; mkN "cândido" ; } ; --*
lin white_4_N = variants {mkN "Patrick" ; mkN "Victor" ; mkN "White" ; } ; --*
lin white_7_N = variants {mkN "B." ; mkN "Brooks" ; mkN "Elwyn" ; } ; --*
lin white_8_A = variants {mkA "em" ; mkA "refletivo" ; } ; --*
lin white_8_N = variants {mkN "Andrew" ; mkN "D." ; mkN "Dickson" ; } ; --*
lin whiteface_1_N = mkN "Hereford" ; --*
lin whitefly_N = mkN "Aleyrodidae" ; --*
lin whitehall_1_PN = mkPN "Whitehall" ; --*
lin whitehead_PN = variants {mkPN "Alfred" ; mkPN "North" ; } ; --*
lin whiteness_1_N = variants {mkN "alvo" ; mkN "branco" ; mkN "brancura" ; mkN "cândido" ; } ; --*
lin whiteness_2_N = mkN "pureza" ; --*
lin whitening_N = mkN "branqueamento" ; --*
lin whiten_V2 = variants {mkV2 (mkV "alvejar") ; mkV2 (mkV "branquear") ; mkV2 (mkV "corar") ; mkV2 (mkV "embranquecer") ; } ; --*
lin whitethorn_N = variants {mkN "estrepeiro" ; mkN "hawthorn" ; mkN "laevigata" ; mkN "oxycantha" ; mkN "possa" ; } ; --*
lin whitewash_1_V2 = variants {mkV2 (mkV "caiar") ; mkV2 (mkV "over") ; mkV2 (mkV "up") ; } ; --*
lin whitewash_2_V2 = mkV2 (mkV "caiar") ; --*
lin whitish_1_A = variants {mkA "esbranquiçado" ; mkA "lácteo" ; } ; --*
lin whitish_2_A = mkA "esbranquiçado" ; --*
lin whit_N = variants {mkN "fragmento" ; mkN "pingo" ; mkN "pouco" ; } ; --*
lin whitsun_N = mkN "pentecostes" ; --*
lin whitsun_PN = mkPN "pentecostes" ; --*
lin whitsuntide_N = mkN "pentecostes" ; --*
lin whitsuntide_PN = mkPN "pentecostes" ; --*
lin whiz_1_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin whiz_V = mkV "ronronar" ; --*
lin whole_1_A = variants {mkA "integral" ; mkA "inteiro" ; } ; --*
lin whole_1_N = mkN "totalidade" ; --*
lin whole_2_N = variants {mkN "todo" ; mkN "unidade" ; } ; --*
lin whole_3_A = variants {mkA "ileso" ; mkA "incólume" ; } ; --*
lin whole_5_A = mkA "unânime" ; --*
lin wholehearted_A = mkA "incondicional" ; --*
lin wholeness_1_N = mkN "integridade" ; --*
lin wholesale_1_Adv = mkAdv "por" ; --*
lin wholesale_N = variants {mkN "atacado" ; mkN "venda" ; } ; --*
lin wholesome_1_A = mkA "saudável" ; --*
lin wholesome_2_A = mkA "saudável" ; --*
lin whooper_2_N = variants {mkN "cisne-bravo" ; mkN "cygnus" ; mkN "swan" ; } ; --*
lin whooping_cough_N = variants {mkN "cough" ; mkN "Pertussis" ; mkN "Pertússis" ; } ; --*
lin whop_1_V2 = mkV2 (mkV "bater") ; --*
lin whop_2_V2 = variants {mkV2 (mkV "socar") ; mkV2 (mkV "surrar") ; } ; --*
lin who_PN = variants {mkPN "Health" ; mkPN "OMS" ; } ; --*
lin whorehouse_N = variants {mkN "alcoice" ; mkN "bordel" ; mkN "house" ; mkN "lupanar" ; mkN "of" ; mkN "prostíbulo" ; } ; --*
lin whoremaster_2_N = variants {mkN "cafetão" ; mkN "proxeneta" ; } ; --*
lin whoremonger_2_N = variants {mkN "cafetão" ; mkN "proxeneta" ; } ; --*
lin whore_N = variants {mkN "cortesã" ; mkN "girl" ; mkN "lady" ; mkN "mulher" ; mkN "of" ; mkN "prostituta" ; mkN "puta" ; mkN "quenga" ; mkN "rameira" ; mkN "rapariga" ; mkN "vadia" ; mkN "woman" ; } ; --*
lin whorl_2_N = variants {mkN "anel" ; mkN "cacho" ; } ; --*
lin whorl_3_N = variants {mkN "bobine" ; mkN "espiral" ; mkN "hélice" ; mkN "rosca" ; } ; --*
lin whorled_1_A = mkA "helicoidal" ; --*
lin why_N = variants {mkN "porque" ; mkN "porquê" ; } ; --*
lin wick_1_N = mkN "feltro" ; --*
lin wick_2_N = mkN "mecha" ; --*
lin wicked_1_A = variants {mkA "iniquo" ; mkA "malvada" ; } ; --*
lin wicked_2_A = mkA "malvado" ; --*
lin wicked_3_A = variants {mkA "horrível" ; mkA "severo" ; mkA "terrível" ; } ; --*
lin wicked_4_A = variants {mkA "bagunceiro" ; mkA "sapeca" ; } ; --*
lin wicked_5_A = variants {mkA "desgostosamente" ; mkA "desgostoso" ; mkA "nauseante" ; mkA "nojento" ; mkA "repugnante" ; } ; --*
lin wickedness_1_N = variants {mkN "imoralidade" ; mkN "maldade" ; } ; --*
lin wickedness_2_N = variants {mkN "iniqüidade" ; mkN "maldade" ; } ; --*
lin wickedness_4_N = mkN "pecado" ; --*
lin wicker_1_N = mkN "vime" ; --*
lin wide_1_A = variants {mkA "ampla" ; mkA "amplo" ; mkA "largo" ; } ; --*
lin wide_2_A = mkA "amplo" ; --*
lin wide_4_Adv = mkAdv "amplamente" ; --*
lin widen_3_V2 = variants {mkV2 (mkV "alargar") ; mkV2 (mkV "estender") ; } ; --*
lin widen_4_V2 = variants {mkV2 (mkV "ampliar") ; mkV2 (mkV "estender") ; } ; --*
lin wideness_1_N = mkN "largura" ; --*
lin wideness_2_N = variants {mkN "enormidade" ; mkN "grandeza" ; mkN "imensidade" ; mkN "imensidão" ; } ; --*
lin widespread_1_A = mkA "disseminado" ; --*
lin widespread_2_A = mkA "remoto" ; --*
lin widower_N = mkN "viúvo" ; --*
lin widowhood_1_N = mkN "viuvez" ; --*
lin widow_N = variants {mkN "viúva" ; mkN "woman" ; } ; --*
lin width_N = variants {mkN "anchura" ; mkN "largura" ; } ; --*
lin wield_1_V2 = variants {mkV2 (mkV "exercer") ; mkV2 (mkV "manter") ; } ; --*
lin wield_2_V2 = variants {mkV2 (mkV "empunhar") ; mkV2 (mkV "manejar") ; } ; --*
lin wiesbaden_PN = mkPN "Wiesbaden" ; --*
lin wife_N = variants {mkN "esposa" ; mkN "mulher" ; mkN "woman" ; } ; --*
lin wig_1_N = mkN "peruca" ; --*
lin wiggler_3_N = variants {mkN "minhoca" ; mkN "minhocas" ; mkN "worm" ; } ; --*
lin wiggle_V2 = mkV2 (mkV "menear") ; --*
lin wiggly_1_A = mkA "sinuoso" ; --*
lin wight_1_N = variants {mkN "criança" ; mkN "criatura" ; mkN "ser" ; } ; --*
lin wight_1_PN = variants {mkPN "criança" ; mkPN "criatura" ; mkPN "ser" ; } ; --*
lin wight_2_N = variants {mkN "Ilha" ; mkN "of" ; } ; --*
lin wight_2_PN = variants {mkPN "Ilha" ; mkPN "of" ; } ; --*
lin wild_12_A = variants {mkA "bárbaro" ; mkA "bravio" ; mkA "gentio" ; mkA "selvagem" ; } ; --*
lin wild_13_A = variants {mkA "feroz" ; mkA "furioso" ; mkA "raivoso" ; mkA "tempestuoso" ; } ; --*
lin wild_1_A = variants {mkA "descontrolado" ; mkA "selvagem" ; } ; --*
lin wild_1_N = variants {mkN "Estado" ; mkN "of" ; mkN "state" ; } ; --*
lin wild_2_A = variants {mkA "selvagem" ; mkA "silvestre" ; } ; --*
lin wild_2_N = variants {mkN "deserto" ; mkN "mato" ; } ; --*
lin wild_5_A = mkA "violento" ; --*
lin wild_6_A = variants {mkA "infundado" ; mkA "não" ; mkA "sem" ; mkA "sembase" ; mkA "semfundamento" ; } ; --*
lin wild_7_A = variants {mkA "louco" ; mkA "mad" ; } ; --*
lin wild_8_A = variants {mkA "perigosa" ; mkA "perigoso" ; } ; --*
lin wildcat_1_N = variants {mkN "gatobravo" ; mkN "well" ; } ; --*
lin wildcat_2_N = variants {mkN "besta" ; mkN "fera" ; } ; --*
lin wildcat_3_N = mkN "gato-bravo" ; --*
lin wildebeest_N = variants {mkN "gnu" ; mkN "mais" ; } ; --*
lin wilderness_3_N = variants {mkN "deserto" ; mkN "mato" ; } ; --*
lin wildfire_N = mkN "incêndio" ; --*
lin wildlife_N = variants {mkN "fauna" ; mkN "vida" ; } ; --*
lin wildness_2_N = mkN "violência" ; --*
lin wile_N = variants {mkN "artimanha" ; mkN "astúcia" ; } ; --*
lin will_1_N = mkN "vontade" ; --*
lin will_1_PN = mkPN "vontade" ; --*
lin will_2_N = mkN "vontade" ; --*
lin will_2_PN = mkPN "vontade" ; --*
lin will_3_N = variants {mkN "nota" ; mkN "testamento" ; } ; --*
lin will_3_PN = variants {mkPN "nota" ; mkPN "testamento" ; } ; --*
lin will_3_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "entregar") ; mkV2 (mkV "legar") ; } ; --*
lin willingness_N = variants {mkN "Boa" ; mkN "disposição" ; mkN "Disposição" ; } ; --*
lin will_o'_the_wisp_2_N = variants {mkN "fatuus" ; mkN "Fogo-fátuo" ; } ; --*
lin willow_1_N = variants {mkN "tree" ; mkN "vimeiro" ; } ; --*
lin willowherb_N = variants {mkN "epilóbio" ; mkN "epílobo" ; } ; --*
lin willow_tree_N = variants {mkN "tree" ; mkN "vimeiro" ; } ; --*
lin willpower_1_N = variants {mkN "auto-controle" ; mkN "determinação" ; mkN "power" ; } ; --*
lin will_V = variants {mkV "dar" ; mkV "entregar" ; mkV "legar" ; } ; --*
lin willy_nilly_1_Adv = variants {mkAdv "a" ; mkAdv "aleatoriamente" ; mkAdv "aleatóriamente" ; mkAdv "arbitrariamente" ; mkAdv "random" ; mkAdv "randomicamente" ; mkAdv "which" ; } ; --*
lin willy_nilly_2_Adv = mkAdv "aleatoriamente" ; --*
lin wily_A = variants {mkA "ardiloso" ; mkA "astuto" ; mkA "esperto" ; mkA "ladino" ; mkA "Tricky" ; } ; --*
lin win_1_N = mkN "vitória" ; --*
lin win_1_V2 = variants {mkV2 (mkV "ganhar") ; mkV2 (mkV "vencer") ; } ; --*
lin win_1_V = variants {mkV "ganhar" ; mkV "vencer" ; } ; --*
lin win_2_N = variants {mkN "benefício" ; mkN "ganho" ; mkN "vitória" ; } ; --*
lin win_2_V2 = variants {mkV2 (mkV "adquirir") ; mkV2 (mkV "atingir") ; mkV2 (mkV "ganhar") ; mkV2 (mkV "vencer") ; } ; --*
lin win_3_V2 = variants {mkV2 (mkV "ahead") ; mkV2 (mkV "avançar") ; mkV2 (mkV "ganhar") ; mkV2 (mkV "ground") ; mkV2 (mkV "headway") ; } ; --*
lin win_4_V = variants {mkV "atingir" ; mkV "home" ; mkV "suceder" ; mkV "the" ; mkV "through" ; } ; --*
lin win_5_V2 = mkV2 (mkV "ganhar") ; --*
lin wince_1_V = mkV "recuar" ; --*
lin winchester_1_PN = mkPN "Winchester" ; --*
lin winchester_2_PN = mkPN "Winchester" ; --*
lin winch_N = mkN "catraca" ; --*
lin wind_1_N = variants {mkN "current" ; mkN "of" ; mkN "vento" ; } ; --*
lin wind_1_V = variants {mkV "ir" ; mkV "vagar" ; } ; --*
lin wind_3_N = mkN "respiração" ; --*
lin wind_3_V = mkV "bolear" ; --*
lin wind_5_N = variants {mkN "indicação" ; mkN "information" ; } ; --*
lin wind_6_N = variants {mkN "instrument" ; mkN "Instrumentos" ; } ; --*
lin wind_6_V = mkV "trançar" ; --*
lin wind_7_N = variants {mkN "flato" ; mkN "flatulência" ; mkN "gás" ; mkN "peido" ; mkN "wind" ; } ; --*
lin wind_7_V = variants {mkV "alçar" ; mkV "erguer" ; mkV "içar" ; mkV "levantar" ; } ; --*
lin wind_8_N = mkN "torção" ; --*
lin windbag_N = mkN "bacharel" ; --*
lin windbreaker_N = variants {mkN "anoraque" ; mkN "parca" ; } ; --*
lin windbreak_N = mkN "abrigadouro" ; --*
lin windcheater_N = variants {mkN "anoraque" ; mkN "parca" ; } ; --*
lin windfall_1_N = mkN "derrube" ; --*
lin windfall_2_N = variants {mkN "dádiva" ; mkN "from" ; mkN "rush" ; } ; --*
lin windflower_N = variants {mkN "anemona" ; mkN "anémona" ; mkN "anêmona" ; } ; --*
lin wind_gauge_N = variants {mkN "Anemometro" ; mkN "Anemómetro" ; mkN "gage" ; mkN "gauge" ; } ; --*
lin windiness_2_N = mkN "prolixidade" ; --*
lin winding_sheet_N = variants {mkN "mortalha" ; mkN "sudário" ; mkN "Sudário" ; } ; --*
lin windlass_N = mkN "catraca" ; --*
lin windmill_1_N = variants {mkN "moinho" ; mkN "moinhos" ; } ; --*
lin window_1_N = variants {mkN "fenestra" ; mkN "janela" ; } ; --*
lin window_2_N = variants {mkN "fenestra" ; mkN "janela" ; } ; --*
lin window_3_N = mkN "intervalo" ; --*
lin window_6_N = variants {mkN "janela" ; mkN "vidraça" ; } ; --*
lin window_7_N = mkN "janela" ; --*
lin window_8_N = variants {mkN "janela" ; mkN "Janela" ; } ; --*
lin windowpane_1_N = variants {mkN "janela" ; mkN "vidraça" ; } ; --*
lin windowsill_N = mkN "parapeito" ; --*
lin windpipe_N = mkN "traqueia" ; --*
lin windscreen_N = variants {mkN "pára-brisa" ; mkN "parabrisas" ; mkN "pára-brisas" ; mkN "Pára-brisas" ; } ; --*
lin windscreen_wiper_N = variants {mkN "blade" ; mkN "Limpador" ; mkN "wiper" ; } ; --*
lin windshield_N = variants {mkN "pára-brisa" ; mkN "parabrisas" ; mkN "pára-brisas" ; mkN "Pára-brisas" ; } ; --*
lin windsock_1_N = variants {mkN "biruta" ; mkN "cone" ; mkN "sleeve" ; mkN "sock" ; } ; --*
lin windsor_2_PN = variants {mkPN "Casa" ; mkPN "of" ; } ; --*
lin windstorm_N = mkN "vendaval" ; --*
lin wind_tunnel_N = mkN "tunnel" ; --*
lin wind_up_1_V2 = variants {mkV2 (mkV "acabar") ; mkV2 (mkV "up") ; } ; --*
lin wind_up_3_V2 = variants {mkV2 (mkV "animar") ; mkV2 (mkV "excitar") ; mkV2 (mkV "on") ; mkV2 (mkV "up") ; } ; --*
lin wind_up_4_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "up") ; } ; --*
lin wind_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "up") ; } ; --*
lin windward_A = mkA "barlavento" ; --*
lin windy_1_A = mkA "ventoso" ; --*
lin windy_2_A = mkA "visionário" ; --*
lin wine_1_N = mkN "vinho" ; --*
lin wine_1_V2 = mkV2 (mkV "beber") ; --*
lin wine_2_N = mkN "vinho" ; --*
lin winemaking_1_N = variants {mkN "making" ; mkN "Vinificação" ; } ; --*
lin winery_N = variants {mkN "bodega" ; mkN "maker" ; } ; --*
lin wing_10_N = mkN "guarda-lama" ; --*
lin wing_11_N = mkN "asa" ; --*
lin wing_1_N = variants {mkN "ala" ; mkN "asa" ; } ; --*
lin wing_2_N = variants {mkN "ala" ; mkN "asa" ; } ; --*
lin wing_4_N = mkN "geschwader" ; --*
lin wing_9_N = mkN "asa" ; --*
lin winger_N = variants {mkN "ponta" ; mkN "ponteiro" ; } ; --*
lin wings_1_N = variants {mkN "asa" ; mkN "asas" ; } ; --*
lin wing_V = mkV "voar" ; --*
lin wink_1_N = variants {mkN "instante" ; mkN "momento" ; mkN "of" ; mkN "second" ; mkN "segundo" ; mkN "York" ; } ; --*
lin wink_1_V = mkV "piscar" ; --*
lin wink_2_V = variants {mkV "cintilar" ; mkV "piscar" ; } ; --*
lin wink_3_N = variants {mkN "blink" ; mkN "piscamento" ; } ; --*
lin wink_3_V = variants {mkV "pestanejar" ; mkV "piscar" ; } ; --*
lin wink_4_V = variants {mkV "away" ; mkV "piscar" ; } ; --*
lin winkle_1_V2 = mkV2 (mkV "brilhar") ; --*
lin winkle_2_V2 = variants {mkV2 (mkV "cintilar") ; mkV2 (mkV "piscar") ; } ; --*
lin winner_1_N = variants {mkN "ganhador" ; mkN "vencedor" ; } ; --*
lin winner_2_N = variants {mkN "ganhador" ; mkN "vencedor" ; } ; --*
lin winner_3_N = variants {mkN "ganhador" ; mkN "vencedor" ; } ; --*
lin winning_1_A = variants {mkA "ganhador" ; mkA "triunfante" ; mkA "vitorioso" ; } ; --*
lin winnings_N = variants {mkN "benefício" ; mkN "ganho" ; mkN "vitória" ; } ; --*
lin winnipeg_1_PN = mkPN "Winnipeg" ; --*
lin winnipeg_2_PN = variants {mkPN "lago" ; mkPN "Winnipeg" ; } ; --*
lin winnow_3_V2 = variants {mkV2 (mkV "escolher") ; mkV2 (mkV "out") ; } ; --*
lin win_over_V = variants {mkV "convencer" ; mkV "over" ; } ; --*
lin wi_N = variants {mkN "State" ; mkN "Wisconsin" ; } ; --*
lin winter_N = variants {mkN "inverno" ; mkN "Inverno" ; } ; --*
lin winter_V = mkV "invernar" ; --*
lin wintery_A = variants {mkA "hibernal" ; mkA "invernal" ; mkA "invernoso" ; } ; --*
lin wintry_1_A = variants {mkA "hibernal" ; mkA "invernal" ; mkA "invernoso" ; } ; --*
lin wintry_2_A = variants {mkA "frio" ; mkA "gelado" ; mkA "glacial" ; } ; --*
lin wipeout_1_N = variants {mkN "demolição" ; mkN "desolação" ; mkN "destruição" ; } ; --*
lin wipe_out_1_V2 = variants {mkV2 (mkV "consumir") ; mkV2 (mkV "gastar") ; mkV2 (mkV "out") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin wipe_out_2_V2 = variants {mkV2 (mkV "aniquilar") ; mkV2 (mkV "devastar") ; mkV2 (mkV "dizimar") ; mkV2 (mkV "off") ; mkV2 (mkV "out") ; } ; --*
lin wipe_out_3_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "out") ; } ; --*
lin wipe_out_4_V2 = variants {mkV2 (mkV "matar") ; mkV2 (mkV "out") ; } ; --*
lin wipe_out_5_V2 = variants {mkV2 (mkV "apagar") ; mkV2 (mkV "out") ; } ; --*
lin wiper_3_N = variants {mkN "blade" ; mkN "Limpador" ; mkN "wiper" ; } ; --*
lin wipe_V2 = variants {mkV2 (mkV "enxugar") ; mkV2 (mkV "limpar") ; mkV2 (mkV "over") ; } ; --*
lin wire_1_N = variants {mkN "arame" ; mkN "fio" ; } ; --*
lin wire_2_N = variants {mkN "fio" ; mkN "wire" ; } ; --*
lin wire_2_V2 = mkV2 (mkV "telegrafar") ; --*
lin wire_2_V = mkV "telegrafar" ; --*
lin wire_4_N = mkN "telegrama" ; --*
lin wire_5_V2 = mkV2 (mkV "eletrificar") ; --*
lin wireless_1_N = variants {mkN "rádio" ; mkN "Rádio" ; } ; --*
lin wireless_2_N = mkN "rede" ; --*
lin wireless_3_N = variants {mkN "rádio" ; mkN "receiver" ; mkN "set" ; } ; --*
lin wireless_4_N = mkN "rádio" ; --*
lin wireless_A = variants {mkA "inalámbrico" ; mkA "sem" ; } ; --*
lin wiretap_N = variants {mkN "escuta" ; mkN "grampo" ; } ; --*
lin wisconsin_2_PN = variants {mkPN "State" ; mkPN "Wisconsin" ; } ; --*
lin wisdom_1_N = mkN "sabedoria" ; --*
lin wisdom_2_N = variants {mkN "sabedoria" ; mkN "sagacidade" ; mkN "sapiência" ; mkN "sensatez" ; } ; --*
lin wisdom_3_N = variants {mkN "sabedoria" ; mkN "sapiência" ; } ; --*
lin wisdom_tooth_N = mkN "tooth" ; --*
lin wise_1_A = mkA "sábio" ; --*
lin wise_1_N = variants {mkN "forma" ; mkN "jeito" ; mkN "maneira" ; } ; --*
lin wise_3_A = variants {mkA "astuto" ; mkA "to" ; } ; --*
lin wise_4_A = variants {mkA "atrevido" ; mkA "espevitada" ; mkA "impertinente" ; mkA "insolente" ; } ; --*
lin wisecrack_N = variants {mkN "chacota" ; mkN "gracejo" ; mkN "piada" ; mkN "xiste" ; } ; --*
lin wisent_N = variants {mkN "auroque" ; mkN "bisão-europeu" ; mkN "bonasus" ; } ; --*
lin wise_up_1_V = mkV "up" ; --*
lin wise_up_2_V = mkV "up" ; --*
lin wish_1_N = variants {mkN "afã" ; mkN "desejo" ; } ; --*
lin wish_1_VS = variants {mkVS (mkV "desejar") ; mkVS (mkV "querer") ; } ; --*
lin wish_2_N = variants {mkN "petição" ; mkN "request" ; } ; --*
lin wish_2_VV = variants {mkVV (mkV "desejar") ; mkVV (mkV "esperar") ; mkVV (mkV "querer") ; } ; --*
lin wish_3_N = variants {mkN "cumprimento" ; mkN "desejo" ; mkN "estima" ; } ; --*
lin wish_3_VS = mkVS (mkV "desejar") ; --*
lin wish_4_N = variants {mkN "desejo" ; mkN "pedido" ; } ; --*
lin wish_4_V2 = variants {mkV2 (mkV "desejar") ; mkV2 (mkV "well") ; } ; --*
lin wish_4_V2V = variants {mkV2V (mkV "desejar") ; mkV2V (mkV "well") ; } ; --*
lin wish_4_V = variants {mkV "desejar" ; mkV "well" ; } ; --*
lin wish_4_VS = variants {mkVS (mkV "desejar") ; mkVS (mkV "well") ; } ; --*
lin wish_4_VV = variants {mkVV (mkV "desejar") ; mkVV (mkV "well") ; } ; --*
lin wish_5_V2 = mkV2 (mkV "desejar") ; --*
lin wish_5_V2V = mkV2V (mkV "desejar") ; --*
lin wish_5_V = mkV "desejar" ; --*
lin wish_5_VS = mkVS (mkV "desejar") ; --*
lin wish_5_VV = mkVV (mkV "desejar") ; --*
lin wishbone_N = variants {mkN "bone" ; mkN "espoleta" ; } ; --*
lin wishy_washy_A = variants {mkA "enrolado" ; mkA "indeciso" ; } ; --*
lin wisp_3_N = mkN "tufo" ; --*
lin wistful_A = mkA "pensativo" ; --*
lin wit_1_N = mkN "humor" ; --*
lin wit_2_N = variants {mkN "ability" ; mkN "agudez" ; mkN "agudeza" ; mkN "capacity" ; mkN "cérebro" ; mkN "inteligência" ; } ; --*
lin witch_1_N = variants {mkN "feiticeira" ; mkN "feiticeiro" ; mkN "mágico" ; mkN "mago" ; } ; --*
lin witch_2_N = variants {mkN "bruxa" ; mkN "bruxo" ; } ; --*
lin witch_4_N = variants {mkN "bruxa" ; mkN "coroa" ; } ; --*
lin witchcraft_N = variants {mkN "bruxaria" ; mkN "feitiço" ; } ; --*
lin witch_doctor_N = mkN "doctor" ; --*
lin witchery_N = variants {mkN "bruxaria" ; mkN "feitiço" ; } ; --*
lin witch_hunt_N = variants {mkN "Bruxos" ; mkN "caça" ; mkN "Caça" ; } ; --*
lin witching_A = variants {mkA "mágico" ; mkA "que" ; } ; --*
lin withal_1_Adv = variants {mkAdv "apesar" ; mkAdv "contudo" ; mkAdv "não" ; mkAdv "por" ; mkAdv "porém" ; mkAdv "se" ; mkAdv "so" ; mkAdv "the" ; } ; --*
lin withdraw_10_V = mkV "retirar" ; --*
lin withdraw_11_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "back") ; mkV2 (mkV "decorrer") ; mkV2 (mkV "in") ; mkV2 (mkV "out") ; } ; --*
lin withdraw_12_V2 = variants {mkV2 (mkV "away") ; mkV2 (mkV "remover") ; mkV2 (mkV "retirar") ; mkV2 (mkV "tirar") ; } ; --*
lin withdraw_1_V = variants {mkV "afastar" ; mkV "afastar-se" ; mkV "away" ; mkV "back" ; mkV "recuar" ; mkV "retroceder" ; } ; --*
lin withdraw_2_V = mkV "retirar-se" ; --*
lin withdraw_4_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "in") ; mkV2 (mkV "retirar") ; } ; --*
lin withdraw_5_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "devolver") ; } ; --*
lin withdraw_6_V2 = variants {mkV2 (mkV "insular") ; mkV2 (mkV "isolar") ; } ; --*
lin withdraw_7_V = mkV "adiar" ; --*
lin withdraw_9_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "out") ; mkV2 (mkV "tirar") ; } ; --*
lin withdrawal_1_N = mkN "retirada" ; --*
lin withdrawal_3_N = mkN "retirada" ; --*
lin withdrawal_4_N = variants {mkN "desapego" ; mkN "distância" ; } ; --*
lin withdrawal_7_N = variants {mkN "interruptus" ; mkN "method" ; mkN "onanismo" ; mkN "out" ; } ; --*
lin withdrawal_8_N = mkN "secessão" ; --*
lin wither_1_V2 = variants {mkV2 (mkV "enrugar") ; mkV2 (mkV "murchar") ; mkV2 (mkV "up") ; } ; --*
lin wither_1_V = variants {mkV "enrugar" ; mkV "murchar" ; mkV "up" ; } ; --*
lin wither_2_V = variants {mkV "caldear" ; mkV "desaparecer" ; } ; --*
lin withhold_1_V2 = variants {mkV2 (mkV "back") ; mkV2 (mkV "reter") ; } ; --*
lin withhold_2_V2 = variants {mkV2 (mkV "reter") ; mkV2 (mkV "segurar") ; } ; --*
lin within_Adv = variants {mkAdv "adentro" ; mkAdv "dentro" ; mkAdv "em" ; mkAdv "no" ; } ; --*
lin withstand_1_V2 = variants {mkV2 (mkV "afrontar") ; mkV2 (mkV "aguentar") ; mkV2 (mkV "arrostar") ; mkV2 (mkV "fazer") ; mkV2 (mkV "relutar") ; mkV2 (mkV "up") ; } ; --*
lin withstand_2_V2 = variants {mkV2 (mkV "firm") ; mkV2 (mkV "out") ; mkV2 (mkV "resistir") ; } ; --*
lin witness_1_N = mkN "testemunha" ; --*
lin witness_1_V2 = variants {mkV2 (mkV "estar") ; mkV2 (mkV "ser") ; mkV2 (mkV "testemunhar") ; } ; --*
lin witness_2_N = variants {mkN "espectador" ; mkN "espetador" ; mkN "observador" ; mkN "telespectador" ; } ; --*
lin witness_3_N = mkN "testemunha" ; --*
lin witness_4_N = mkN "testemunho" ; --*
lin witness_5_N = mkN "Testemunho" ; --*
lin witticism_N = mkN "humor" ; --*
lin witting_2_A = mkA "consciente" ; --*
lin witty_A = variants {mkA "espirituoso" ; mkA "sutil" ; } ; --*
lin wizard_1_N = variants {mkN "experiente" ; mkN "perito" ; } ; --*
lin wizard_2_N = variants {mkN "assistente" ; mkN "bruxo" ; mkN "feiticeiro" ; mkN "Feiticeiro" ; mkN "mágico" ; mkN "mago" ; mkN "sortílego" ; mkN "taumaturgo" ; } ; --*
lin wizard_A = variants {mkA "mágico" ; mkA "que" ; } ; --*
lin wobble_3_V = variants {mkV "cambalear" ; mkV "tremer" ; mkV "tremular" ; } ; --*
lin woe_1_N = variants {mkN "infelicidade" ; mkN "sofrimento" ; } ; --*
lin woe_2_N = variants {mkN "desgraça" ; mkN "infelicidade" ; mkN "mágoa" ; } ; --*
lin woebegone_2_A = mkA "agoniado" ; --*
lin woeful_1_A = mkA "agoniado" ; --*
lin woeful_2_A = variants {mkA "lamentável" ; mkA "miserável" ; } ; --*
lin wok_N = mkN "wok" ; --*
lin wolf_1_N = variants {mkN "loba" ; mkN "lobo" ; } ; --*
lin wolf_2_N = variants {mkN "Hugo" ; mkN "Wolf" ; } ; --*
lin wolf_3_N = variants {mkN "August" ; mkN "Friedrich" ; } ; --*
lin wolf_5_N = variants {mkN "besta" ; mkN "fera" ; } ; --*
lin wolf_cub_N = variants {mkN "cub" ; mkN "pup" ; } ; --*
lin wolfish_2_A = mkA "voraz" ; --*
lin wolfram_N = variants {mkN "number" ; mkN "Tungstenio" ; mkN "tungsténio" ; mkN "tungstênio" ; mkN "volfrâmio" ; } ; --*
lin wolf_V2 = variants {mkV2 (mkV "devorar") ; mkV2 (mkV "down") ; } ; --*
lin wollastonite_N = mkN "wollastonite" ; --*
lin wolverine_2_N = variants {mkN "carcaju" ; mkN "gulo" ; } ; --*
lin wolverine_3_N = variants {mkN "bear" ; mkN "carcaju" ; mkN "luscus" ; } ; --*
lin woman_1_N = variants {mkN "female" ; mkN "mulher" ; } ; --*
lin woman_2_N = mkN "mulher" ; --*
lin woman_4_N = variants {mkN "mulher" ; mkN "sex" ; } ; --*
lin womanhood_2_N = variants {mkN "mulher" ; mkN "sex" ; } ; --*
lin womanize_1_V = variants {mkV "afeminar" ; mkV "paquerar" ; mkV "tornar" ; } ; --*
lin womanize_2_V = variants {mkV "efeminar" ; mkV "femininizar" ; } ; --*
lin womanizer_N = variants {mkN "mulherengo" ; mkN "sedutor" ; } ; --*
lin womanly_A = variants {mkA "feminina" ; mkA "feminino" ; } ; --*
lin womb_N = variants {mkN "matriz" ; mkN "útero" ; mkN "ventre" ; } ; --*
lin wonder_1_N = variants {mkN "admiração" ; mkN "espanto" ; mkN "maravilha" ; mkN "surpresa" ; } ; --*
lin wonder_1_VQ = variants {mkVQ (mkV "interrogar") ; mkVQ (mkV "perguntar") ; mkVQ (mkV "perguntar-se") ; mkVQ (mkV "ponderar") ; mkVQ (mkV "questionar") ; } ; --*
lin wonder_2_N = variants {mkN "maravilha" ; mkN "milagre" ; } ; --*
lin wonder_2_V = variants {mkV "perguntar" ; mkV "ponderar" ; mkV "questionar" ; } ; --*
lin wonder_3_N = variants {mkN "curiosidade" ; mkN "Curiosidade" ; } ; --*
lin wonder_3_V = variants {mkV "admirar" ; mkV "admirar-se" ; mkV "maravilhar" ; mkV "maravilhar-se" ; } ; --*
lin wonderful_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin wonderland_2_N = mkN "país" ; --*
lin wonderment_N = variants {mkN "admiração" ; mkN "espanto" ; mkN "maravilha" ; mkN "surpresa" ; } ; --*
lin wondrous_A = variants {mkA "admirável" ; mkA "fabuloso" ; mkA "fantástico" ; mkA "magnífico" ; mkA "maravilhosa" ; mkA "maravilhoso" ; mkA "tremendo" ; } ; --*
lin wondrous_Adv = mkAdv "maravilhosamente" ; --*
lin wonted_A = variants {mkA "costumado" ; mkA "habituado" ; mkA "habitual" ; mkA "usual" ; } ; --*
lin wont_N = variants {mkN "costume" ; mkN "costumes" ; mkN "hábito" ; mkN "tradição" ; } ; --*
lin woo_1_V2 = variants {mkV2 (mkV "cortejar") ; mkV2 (mkV "galantear") ; } ; --*
lin woo_2_V2 = variants {mkV2 (mkV "azarar") ; mkV2 (mkV "galantear") ; mkV2 (mkV "namorar") ; } ; --*
lin wood_1_N = mkN "madeira" ; --*
lin wood_2_N = variants {mkN "bosque" ; mkN "floresta" ; mkN "mata" ; } ; --*
lin wood_3_PN = variants {mkPN "Natalie" ; mkPN "Wood" ; } ; --*
lin wood_7_N = variants {mkN "instrument" ; mkN "Madeiras" ; } ; --*
lin woodcock_N = mkN "galinhola" ; --*
lin woodcutter_N = mkN "lenhador" ; --*
lin woodland_N = variants {mkN "arvoredo" ; mkN "bosque" ; mkN "floresta" ; mkN "florestas" ; mkN "mata" ; mkN "selva" ; } ; --*
lin woodlouse_N = variants {mkN "Bicho-da-conta" ; mkN "bicho-de-conta" ; mkN "Bicho-de-conta" ; mkN "tatuzinhos" ; } ; --*
lin woodpecker_N = variants {mkN "fuinho" ; mkN "pica-pau" ; } ; --*
lin woodpile_N = mkN "monte" ; --*
lin woodwind_N = variants {mkN "instrument" ; mkN "Madeiras" ; } ; --*
lin woodwork_1_N = mkN "toca" ; --*
lin woodwork_2_N = variants {mkN "carpintaria" ; mkN "Carpintaria" ; mkN "marcenaria" ; } ; --*
lin woofer_N = mkN "woofer" ; --*
lin wool_1_N = variants {mkN "lã" ; mkN "lanígero" ; } ; --*
lin wool_2_N = mkN "lã" ; --*
lin wool_3_N = mkN "lã" ; --*
lin woolen_A = mkA "de" ; --*
lin woolgathering_A = mkA "sonhador" ; --*
lin woollen_A = mkA "de" ; --*
lin woolly_1_A = mkA "lanoso" ; --*
lin woolly_3_A = mkA "lanoso" ; --*
lin wooly_1_A = mkA "lanoso" ; --*
lin wooly_3_A = mkA "lanoso" ; --*
lin worcester_3_PN = mkPN "Worcester" ; --*
lin word_10_N = variants {mkN "Bible" ; mkN "Bíblia" ; mkN "Book" ; mkN "of" ; mkN "Scripture" ; mkN "Writ" ; } ; --*
lin word_1_N = variants {mkN "palavra" ; mkN "termo" ; mkN "verbo" ; mkN "vocábulo" ; } ; --*
lin word_2_N = variants {mkN "palavra" ; mkN "vocábulo" ; } ; --*
lin word_3_N = variants {mkN "informação" ; mkN "notícias" ; } ; --*
lin word_4_N = variants {mkN "ordem" ; mkN "palavra" ; } ; --*
lin word_5_N = variants {mkN "debate" ; mkN "discussão" ; } ; --*
lin word_6_N = variants {mkN "of" ; mkN "palavra" ; } ; --*
lin word_7_N = mkN "palavra" ; --*
lin word_8_N = variants {mkN "o" ; mkN "Palavra" ; } ; --*
lin word_9_N = variants {mkN "contra-senha" ; mkN "palavra" ; mkN "password" ; mkN "senha" ; } ; --*
lin wordbook_N = mkN "vocabulário" ; --*
lin word_division_N = variants {mkN "division" ; mkN "hifenização" ; } ; --*
lin wordiness_N = mkN "prolixidade" ; --*
lin wording_N = variants {mkN "dicção" ; mkN "Dicção" ; mkN "fraseologia" ; mkN "of" ; } ; --*
lin wordless_A = variants {mkA "mudo" ; mkA "sem" ; } ; --*
lin wordnet_1_N = mkN "wordnet" ; --*
lin wordnet_2_N = variants {mkN "Princeton" ; mkN "WordNet" ; } ; --*
lin word_picture_N = variants {mkN "caracterização" ; mkN "caraterização" ; mkN "descrição" ; mkN "picture" ; } ; --*
lin word_processing_N = mkN "processing" ; --*
lin words_1_N = mkN "palavras" ; --*
lin words_2_N = variants {mkN "letra" ; mkN "Letra" ; mkN "teor" ; mkN "texto" ; } ; --*
lin words_4_N = variants {mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin word_V2 = variants {mkV2 (mkV "dizer") ; mkV2 (mkV "expressar") ; mkV2 (mkV "formular") ; mkV2 (mkV "voice") ; } ; --*
lin work_11_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "for") ; mkV2 (mkV "trazer") ; } ; --*
lin work_13_V2 = mkV2 (mkV "cultivar") ; --*
lin work_19_V2 = mkV2 (mkV "manipular") ; --*
lin work_1_N = variants {mkN "tarefa" ; mkN "trabalho" ; } ; --*
lin work_20_V2 = variants {mkV2 (mkV "formar") ; mkV2 (mkV "modelar") ; mkV2 (mkV "moldar") ; } ; --*
lin work_22_V2 = variants {mkV2 (mkV "amassar") ; mkV2 (mkV "trabalhar") ; } ; --*
lin work_23_V2 = variants {mkV2 (mkV "aproveitar") ; mkV2 (mkV "explorar") ; } ; --*
lin work_24_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resolver") ; } ; --*
lin work_26_V = mkV "estragar" ; --*
lin work_2_N = variants {mkN "obra" ; mkN "of" ; } ; --*
lin work_2_V = variants {mkV "trabalhar" ; mkV "work" ; } ; --*
lin work_3_N = variants {mkN "biscate" ; mkN "emprego" ; mkN "ocupação" ; mkN "trabalho" ; } ; --*
lin work_3_V = mkV "funcionar" ; --*
lin work_4_N = mkN "estudo" ; --*
lin work_4_V = variants {mkV "funcionar" ; mkV "operar" ; } ; --*
lin work_5_V2 = variants {mkV2 (mkV "on") ; mkV2 (mkV "trabalhar") ; } ; --*
lin work_6_N = variants {mkN "emprego" ; mkN "laboratório" ; mkN "locais" ; mkN "oficina" ; mkN "trabalho" ; } ; --*
lin work_6_V2 = variants {mkV2 (mkV "exercitar-se") ; mkV2 (mkV "malhar") ; mkV2 (mkV "out") ; } ; --*
lin work_7_N = variants {mkN "of" ; mkN "produção" ; } ; --*
lin work_8_V2 = mkV2 (mkV "trabalhar") ; --*
lin workable_A = variants {mkA "executável" ; mkA "exequível" ; mkA "exeqüível" ; mkA "factível" ; mkA "fazível" ; mkA "maneável" ; mkA "manejável" ; mkA "possível" ; mkA "praticável" ; mkA "prestimoso" ; mkA "verossímil" ; mkA "viável" ; } ; --*
lin workaday_A = variants {mkA "cotidiano" ; mkA "quotidiano" ; } ; --*
lin workaholic_N = mkN "Workaholic" ; --*
lin workbench_1_N = variants {mkN "bancada" ; mkN "bench" ; } ; --*
lin workday_1_N = variants {mkN "day" ; mkN "dia" ; } ; --*
lin workday_2_N = variants {mkN "day" ; mkN "dia" ; } ; --*
lin worker_1_N = mkN "trabalhador" ; --*
lin worker_2_N = variants {mkN "colarinho" ; mkN "operário" ; mkN "proletário" ; mkN "trabalhador" ; } ; --*
lin worker_3_N = mkN "operário" ; --*
lin worker_4_N = variants {mkN "agente" ; mkN "fazedor" ; mkN "realizador" ; mkN "trabalhador" ; } ; --*
lin workforce_1_N = variants {mkN "força" ; mkN "force" ; mkN "homens" ; } ; --*
lin working_2_A = mkA "funcional" ; --*
lin working_out_N = variants {mkN "elaboração" ; mkN "out" ; } ; --*
lin workload_1_N = variants {mkN "load" ; mkN "Workload" ; } ; --*
lin workman_N = variants {mkN "man" ; mkN "obreiro" ; mkN "operário" ; mkN "person" ; } ; --*
lin workmanship_N = variants {mkN "arte" ; mkN "habilidade" ; } ; --*
lin work_on_15_V2 = variants {mkV2 (mkV "influenciar") ; mkV2 (mkV "influir") ; mkV2 (mkV "upon") ; } ; --*
lin work_on_1_V2 = variants {mkV2 (mkV "at") ; mkV2 (mkV "on") ; } ; --*
lin work_out_3_V2 = variants {mkV2 (mkV "elaborar") ; mkV2 (mkV "out") ; } ; --*
lin work_out_4_V = variants {mkV "exercitar" ; mkV "out" ; } ; --*
lin work_out_6_V2 = variants {mkV2 (mkV "calcular") ; mkV2 (mkV "computar") ; mkV2 (mkV "out") ; } ; --*
lin work_out_6_V = variants {mkV "calcular" ; mkV "computar" ; mkV "out" ; } ; --*
lin work_out_7_V2 = variants {mkV2 (mkV "out") ; mkV2 (mkV "resolver") ; } ; --*
lin work_out_N = variants {mkN "exercício" ; mkN "exercise" ; mkN "exertion" ; } ; --*
lin work_over_V2 = variants {mkV2 (mkV "over") ; mkV2 (mkV "surrar") ; mkV2 (mkV "up") ; } ; --*
lin workplace_N = variants {mkN "emprego" ; mkN "laboratório" ; mkN "locais" ; mkN "oficina" ; mkN "trabalho" ; } ; --*
lin works_1_N = variants {mkN "fábrica" ; mkN "plant" ; mkN "usina" ; } ; --*
lin works_4_N = variants {mkN "mecanismo" ; mkN "trabalhos" ; } ; --*
lin worksheet_1_N = mkN "folha" ; --*
lin workshop_1_N = mkN "oficina" ; --*
lin workshop_2_N = mkN "seminário" ; --*
lin workspace_N = mkN "área" ; --*
lin workstation_N = variants {mkN "estação" ; mkN "Estação" ; mkN "workstation" ; } ; --*
lin work_up_V = mkV "up" ; --*
lin work_VA = mkVA (mkV "trabalhar") ; --*
lin workweek_N = mkN "semana" ; --*
lin world_1_N = variants {mkN "cosmo" ; mkN "criação" ; mkN "mundo" ; mkN "natureza" ; mkN "universo" ; mkN "Universo" ; } ; --*
lin world_3_N = variants {mkN "mundo" ; mkN "realidade" ; } ; --*
lin world_4_N = variants {mkN "globo" ; mkN "mundo" ; mkN "Terra" ; } ; --*
lin world_5_N = variants {mkN "gente" ; mkN "mundo" ; mkN "povo" ; } ; --*
lin world_6_N = mkN "mundo" ; --*
lin world_8_N = variants {mkN "beings" ; mkN "espécie" ; mkN "homem" ; mkN "humanidade" ; mkN "mundo" ; mkN "povo" ; mkN "race" ; } ; --*
lin worldliness_1_N = mkN "sofisticação" ; --*
lin worldling_2_N = variants {mkN "terráqueo" ; mkN "terrestre" ; } ; --*
lin worldly_1_A = variants {mkA "leigo" ; mkA "secular" ; } ; --*
lin worldly_2_A = mkA "mundano" ; --*
lin worldwide_1_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin worldwide_2_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin worldwide_3_A = variants {mkA "global" ; mkA "mundial" ; mkA "universal" ; } ; --*
lin worm_1_N = mkN "verme" ; --*
lin worm_3_N = mkN "worm" ; --*
lin worm_eaten_A = variants {mkA "picada" ; mkA "sem-fim-comido" ; } ; --*
lin wormhole_N = mkN "buraco" ; --*
lin worm_V2 = variants {mkV2 (mkV "contorcer") ; mkV2 (mkV "enroscar") ; mkV2 (mkV "espernear") ; mkV2 (mkV "torcer-se") ; } ; --*
lin wormwood_N = mkN "artemísia" ; --*
lin wormy_1_A = variants {mkA "picada" ; mkA "sem-fim-comido" ; } ; --*
lin worried_1_A = mkA "preocupado" ; --*
lin worried_2_A = variants {mkA "apreensivo" ; mkA "preocupado" ; } ; --*
lin worrisome_1_A = variants {mkA "angustiante" ; mkA "preocupante" ; } ; --*
lin worrisome_2_A = variants {mkA "doloroso" ; mkA "lamentável" ; } ; --*
lin worry_1_N = variants {mkN "dor-de-cabeça" ; mkN "preocupação" ; } ; --*
lin worry_2_N = variants {mkN "ansiedade" ; mkN "preocupação" ; } ; --*
lin worry_2_V = mkV "cuidar" ; --*
lin worry_3_V2 = variants {mkV2 (mkV "inquietar") ; mkV2 (mkV "preocupar") ; } ; --*
lin worry_4_V = variants {mkV "dizer" ; mkV "preocupar" ; mkV "ter" ; } ; --*
lin worry_6_V2 = variants {mkV2 (mkV "esfregar") ; mkV2 (mkV "friccionar") ; } ; --*
lin worrying_A = variants {mkA "doloroso" ; mkA "lamentável" ; } ; --*
lin worse_1_A = mkA "pior" ; --*
lin worse_2_A = mkA "pior" ; --*
lin worsen_1_V = variants {mkV "decair" ; mkV "piorar" ; } ; --*
lin worsen_2_V2 = variants {mkV2 (mkV "agravar") ; mkV2 (mkV "exacerbar") ; mkV2 (mkV "piorar") ; } ; --*
lin worsening_1_N = variants {mkN "deterioração" ; mkN "in" ; } ; --*
lin worship_1_N = mkN "adoração" ; --*
lin worship_1_V2 = mkV2 (mkV "adorar") ; --*
lin worship_2_V2 = variants {mkV2 (mkV "adorar") ; mkV2 (mkV "idolatrar") ; } ; --*
lin worshiper_1_N = mkN "adorador" ; --*
lin worshiper_2_N = mkN "crente" ; --*
lin worshipper_1_N = mkN "crente" ; --*
lin worshipper_2_N = mkN "adorador" ; --*
lin worst_Adv = mkAdv "pior" ; --*
lin worst_A = mkA "pior" ; --*
lin worsted_1_N = variants {mkN "estambre" ; mkN "lã" ; } ; --*
lin worth_1_A = variants {mkA "digno" ; mkA "merecedor" ; } ; --*
lin worth_1_N = mkN "valor" ; --*
lin worth_2_A = mkA "equivalente" ; --*
lin worth_2_N = variants {mkN "importância" ; mkN "valor" ; } ; --*
lin worth_3_N = variants {mkN "Charles" ; mkN "Frederick" ; } ; --*
lin worthless_1_A = mkA "inútil" ; --*
lin worthless_2_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin worthwhile_A = variants {mkA "de" ; mkA "interessante" ; mkA "louvável" ; mkA "que" ; } ; --*
lin worthy_1_A = variants {mkA "decoroso" ; mkA "digno" ; } ; --*
lin worthy_2_A = variants {mkA "adequado" ; mkA "apropriado" ; mkA "capaz" ; mkA "conveniente" ; mkA "desejável" ; } ; --*
lin wound_1_N = variants {mkN "ferida" ; mkN "Ferida" ; mkN "ferimento" ; mkN "ferimentos" ; mkN "lesão" ; mkN "mágoa" ; } ; --*
lin wound_1_V2 = variants {mkV2 (mkV "ferir") ; mkV2 (mkV "lesar") ; mkV2 (mkV "lesionar") ; mkV2 (mkV "machucar") ; } ; --*
lin wound_2_N = variants {mkN "ferida" ; mkN "injury" ; } ; --*
lin wound_2_V2 = variants {mkV2 (mkV "magoar") ; mkV2 (mkV "ofender") ; mkV2 (mkV "provocar") ; } ; --*
lin wound_4_N = mkN "ferimento" ; --*
lin wounded_N = mkN "ferido" ; --*
lin wpm_N = variants {mkN "palavras" ; mkN "per" ; } ; --*
lin wrack_V2 = variants {mkV2 (mkV "destruir") ; mkV2 (mkV "up") ; } ; --*
lin wraith_N = variants {mkN "espectro" ; mkN "fantasma" ; mkN "sombra" ; } ; --*
lin wrangle_1_N = variants {mkN "controvérsia" ; mkN "discussão" ; mkN "disputa" ; } ; --*
lin wrangle_1_V = mkV "porfiar" ; --*
lin wrap_1_N = mkN "envoltório" ; --*
lin wrap_1_V2 = variants {mkV2 (mkV "cobrir") ; mkV2 (mkV "embrulhar") ; mkV2 (mkV "up") ; } ; --*
lin wrap_2_V2 = mkV2 (mkV "bolear") ; --*
lin wrap_3_N = variants {mkN "capa" ; mkN "cobertura" ; mkN "embalagens" ; mkN "invólucro" ; } ; --*
lin wrap_3_V2 = variants {mkV2 (mkV "embalar") ; mkV2 (mkV "embrulhar") ; mkV2 (mkV "empacotar") ; mkV2 (mkV "encobrir") ; } ; --*
lin wrapper_1_N = variants {mkN "cinta" ; mkN "embrulhador" ; } ; --*
lin wrapper_2_N = variants {mkN "capa" ; mkN "cobertura" ; mkN "embalagens" ; mkN "invólucro" ; } ; --*
lin wrapper_3_N = mkN "envoltório" ; --*
lin wrapping_1_N = variants {mkN "capa" ; mkN "cobertura" ; mkN "embalagens" ; mkN "invólucro" ; } ; --*
lin wrapping_2_N = mkN "bandagem" ; --*
lin wrap_up_2_V2 = variants {mkV2 (mkV "off") ; mkV2 (mkV "through") ; mkV2 (mkV "up") ; } ; --*
lin wrath_2_N = variants {mkN "cólera" ; mkN "ira" ; mkN "sete" ; } ; --*
lin wreak_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "for") ; mkV2 (mkV "trazer") ; } ; --*
lin wreathe_3_V2 = mkV2 (mkV "trançar") ; --*
lin wreathe_3_V = mkV "trançar" ; --*
lin wreath_N = variants {mkN "coroa" ; mkN "grinalda" ; mkN "guirlanda" ; mkN "terço" ; } ; --*
lin wreck_1_N = variants {mkN "destroço" ; mkN "ruína" ; } ; --*
lin wreck_2_N = mkN "naufrágio" ; --*
lin wreck_3_N = mkN "acidente" ; --*
lin wrecker_3_N = variants {mkN "car" ; mkN "guincho" ; mkN "truck" ; } ; --*
lin wreck_V2 = variants {mkV2 (mkV "destruir") ; mkV2 (mkV "up") ; } ; --*
lin wren_2_N = variants {mkN "carriça" ; mkN "wren" ; } ; --*
lin wrench_1_N = mkN "torcedura" ; --*
lin wrench_2_N = mkN "torção" ; --*
lin wrench_3_N = variants {mkN "chave" ; mkN "Chave" ; } ; --*
lin wrench_4_V2 = mkV2 (mkV "torcer") ; --*
lin wrestle_3_V2 = variants {mkV2 (mkV "contorcer") ; mkV2 (mkV "enroscar") ; mkV2 (mkV "espernear") ; mkV2 (mkV "torcer-se") ; } ; --*
lin wrestle_3_V = variants {mkV "contorcer" ; mkV "enroscar" ; mkV "espernear" ; mkV "torcer-se" ; } ; --*
lin wrestle_4_V = variants {mkV "lutar" ; mkV "pugnar" ; } ; --*
lin wrestle_N = variants {mkN "luta" ; mkN "struggle" ; } ; --*
lin wrestler_N = mkN "lutador" ; --*
lin wrestling_1_N = variants {mkN "luta" ; mkN "struggle" ; } ; --*
lin wrestling_2_N = variants {mkN "Grappling" ; mkN "luta" ; } ; --*
lin wrest_V2 = mkV2 (mkV "usurpar") ; --*
lin wretched_1_A = variants {mkA "lamentável" ; mkA "miserável" ; } ; --*
lin wretched_2_A = mkA "azarado" ; --*
lin wretched_3_A = variants {mkA "azarado" ; mkA "miserável" ; } ; --*
lin wretched_4_A = variants {mkA "desprezível" ; mkA "vil" ; } ; --*
lin wretched_5_A = variants {mkA "azarado" ; mkA "coitado" ; mkA "lastimoso" ; mkA "miserável" ; mkA "pobre" ; mkA "triste" ; } ; --*
lin wretchedness_1_N = variants {mkN "miséria" ; mkN "sofrimento" ; } ; --*
lin wrick_V2 = mkV2 (mkV "torcer") ; --*
lin wriggle_V2 = variants {mkV2 (mkV "contorcer") ; mkV2 (mkV "enroscar") ; mkV2 (mkV "espernear") ; mkV2 (mkV "torcer-se") ; } ; --*
lin wright_1_N = variants {mkN "Huntington" ; mkN "S." ; } ; --*
lin wright_5_N = variants {mkN "Frank" ; mkN "Lloyd" ; } ; --*
lin wright_7_N = mkN "artesão" ; --*
lin wring_1_V2 = variants {mkV2 (mkV "deformar") ; mkV2 (mkV "empenar") ; } ; --*
lin wring_3_V2 = mkV2 (mkV "extorquir") ; --*
lin wrinkle_1_N = variants {mkN "ruga" ; mkN "sulco" ; } ; --*
lin wrinkle_1_V2 = mkV2 (mkV "franzir") ; --*
lin wrinkle_2_V = variants {mkV "amassar" ; mkV "dobrar" ; mkV "enrugar" ; mkV "up" ; } ; --*
lin wrinkle_3_V2 = variants {mkV2 (mkV "corrugar") ; mkV2 (mkV "dobrar") ; mkV2 (mkV "enrugar") ; } ; --*
lin wrinkle_4_V = mkV "amassar" ; --*
lin wrinkly_A = mkA "rugoso" ; --*
lin wristband_2_N = variants {mkN "bracelet" ; mkN "bracelete" ; mkN "pulseira" ; } ; --*
lin wristlet_N = variants {mkN "band" ; mkN "bracelete" ; } ; --*
lin wrist_N = variants {mkN "carpo" ; mkN "joint" ; mkN "pulso" ; mkN "radiocarpea" ; } ; --*
lin wristwatch_1_N = variants {mkN "relógio" ; mkN "watch" ; } ; --*
lin write_1_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "escrever") ; } ; --*
lin write_2_V = variants {mkV "escrever" ; mkV "redigir" ; } ; --*
lin write_3_V2 = variants {mkV2 (mkV "a") ; mkV2 (mkV "escrever") ; } ; --*
lin write_4_V2 = variants {mkV2 (mkV "compor") ; mkV2 (mkV "escrever") ; } ; --*
lin write_5_V2 = mkV2 (mkV "escrever") ; --*
lin write_7_V2 = variants {mkV2 (mkV "escrever") ; mkV2 (mkV "soletrar") ; } ; --*
lin write_8_V2 = mkV2 (mkV "programar") ; --*
lin write_down_1_V2 = mkV2 (mkV "down") ; --*
lin write_off_1_V2 = mkV2 (mkV "off") ; --*
lin write_off_2_N = mkN "estorno" ; --*
lin write_off_3_V2 = mkV2 (mkV "off") ; --*
lin writer_1_N = variants {mkN "autor" ; mkN "escritor" ; } ; --*
lin writer_2_N = mkN "escritor" ; --*
lin write_up_N = variants {mkN "artigo" ; mkN "história" ; mkN "relato" ; mkN "report" ; mkN "up" ; } ; --*
lin writhe_V = variants {mkV "contorcer" ; mkV "enroscar" ; mkV "espernear" ; mkV "torcer-se" ; } ; --*
lin writing_1_N = mkN "autoria" ; --*
lin writing_2_N = variants {mkN "documentos" ; mkN "material" ; mkN "of" ; } ; --*
lin writing_4_N = variants {mkN "documentos" ; mkN "escrita" ; mkN "Escrita" ; } ; --*
lin writing_5_N = variants {mkN "escrita" ; mkN "to" ; } ; --*
lin writing_desk_1_N = mkN "desk" ; --*
lin writing_desk_2_N = mkN "desk" ; --*
lin writ_N = variants {mkN "mandato" ; mkN "writ" ; } ; --*
lin written_1_A = mkA "escrito" ; --*
lin written_2_A = mkA "escrito" ; --*
lin written_3_A = mkA "escrito" ; --*
lin wroclaw_PN = variants {mkPN "Breslávia" ; mkPN "Wrocław" ; } ; --*
lin wrong_1_A = variants {mkA "errado" ; mkA "incorreto" ; } ; --*
lin wrong_2_A = variants {mkA "incorrecto" ; mkA "que" ; } ; --*
lin wrong_2_N = variants {mkN "injúria" ; mkN "injury" ; } ; --*
lin wrong_5_A = mkA "errado" ; --*
lin wrong_6_A = variants {mkA "incorreto" ; mkA "inexato" ; } ; --*
lin wrong_7_A = variants {mkA "avesso" ; mkA "errado" ; } ; --*
lin wrong_9_A = variants {mkA "equivocado" ; mkA "errado" ; } ; --*
lin wrong_Adv = variants {mkAdv "erradamente" ; mkAdv "erroneamente" ; mkAdv "incorretamente" ; } ; --*
lin wrongdoer_N = mkN "culpado" ; --*
lin wrongdoing_1_N = mkN "erro" ; --*
lin wrongdoing_2_N = variants {mkN "conduct" ; mkN "delito" ; mkN "reus" ; } ; --*
lin wrongful_1_A = mkA "ilegal" ; --*
lin wrong_V2 = variants {mkV2 (mkV "injustiçar") ; mkV2 (mkV "maltratar") ; } ; --*
lin wry_1_A = mkA "irônico" ; --*
lin wry_2_A = mkA "torto" ; --*
lin wryneck_1_N = mkN "Torcicolo" ; --*
lin wuhan_PN = mkPN "Wuhan" ; --*
lin wulfenite_N = mkN "wulfenite" ; --*
lin wurzburg_PN = mkPN "Wurtzburgo" ; --*
lin wyoming_PN = variants {mkPN "State" ; mkPN "Wyoming" ; } ; --*
lin wyvern_1_N = variants {mkN "serpe" ; mkN "wyvern" ; mkN "Wyvern" ; } ; --*
lin xanthelasma_N = mkN "xantelasma" ; --*
lin xanthine_N = mkN "xantina" ; --*
lin xanthoma_N = mkN "Xantoma" ; --*
lin xanthophyll_1_N = mkN "Xantofila" ; --*
lin xenolith_N = mkN "xenólito" ; --*
lin xenon_N = variants {mkN "number" ; mkN "xenão" ; mkN "xenón" ; mkN "xenónio" ; mkN "xenônio" ; } ; --*
lin xenophobia_N = variants {mkN "xenofobia" ; mkN "Xenofobia" ; mkN "xenofobismo" ; } ; --*
lin xenophobic_A = mkA "xenófobo" ; --*
lin xenotime_N = mkN "Xenótimo" ; --*
lin xenotransplant_N = mkN "Xenoenxerto" ; --*
lin xerographic_A = mkA "xerográfico" ; --*
lin xerography_N = mkN "xerografia" ; --*
lin xerophytic_A = variants {mkA "xerófilo" ; mkA "xeromorfa" ; } ; --*
lin xerostomia_N = variants {mkN "mouth" ; mkN "xerostomia" ; } ; --*
lin xerox_1_N = variants {mkN "cópia" ; mkN "copy" ; mkN "xerox" ; } ; --*
lin xerox_2_N = variants {mkN "copier" ; mkN "machine" ; mkN "Xerox" ; } ; --*
lin xerox_V2 = variants {mkV2 (mkV "fotocopiar") ; mkV2 (mkV "off") ; mkV2 (mkV "xerocar") ; } ; --*
lin xi_1_N = mkN "Onze" ; --*
lin xi_2_N = variants {mkN "csi" ; mkN "xi" ; } ; --*
lin xmas_N = variants {mkN "25" ; mkN "Day" ; mkN "Natal" ; } ; --*
lin xmas_PN = variants {mkPN "25" ; mkPN "Day" ; mkPN "Natal" ; } ; --*
lin x_ray_1_N = variants {mkN "raio" ; mkN "ray" ; } ; --*
lin x_ray_2_N = variants {mkN "photograph" ; mkN "picture" ; mkN "radiografia" ; mkN "ray" ; } ; --*
lin x_ray_2_V2 = mkV2 (mkV "tirar") ; --*
lin xylem_N = mkN "xilema" ; --*
lin xylene_N = mkN "xileno" ; --*
lin xylophone_N = variants {mkN "marimba" ; mkN "xilofone" ; } ; --*
lin yacca_N = variants {mkN "coriaceus" ; mkN "podocarp" ; mkN "Podocarpus" ; } ; --*
lin yacht_N = variants {mkN "iate" ; mkN "yacht" ; } ; --*
lin yachtsman_N = mkN "iatista" ; --*
lin yahoo_1_N = variants {mkN "caipira" ; mkN "rústico" ; } ; --*
lin yak_2_N = variants {mkN "grunniens" ; mkN "iaque" ; } ; --*
lin yakuza_2_N = mkN "Yakuza" ; --*
lin yam_1_N = variants {mkN "batata-doce" ; mkN "inhame" ; } ; --*
lin yam_2_N = variants {mkN "inhame" ; mkN "plant" ; } ; --*
lin yam_3_N = mkN "batata-doce" ; --*
lin yam_4_N = variants {mkN "batata-doce" ; mkN "inhame" ; } ; --*
lin yammer_1_V = variants {mkV "gritar" ; mkV "mugir" ; mkV "vociferar" ; } ; --*
lin yammer_2_V = mkV "birra" ; --*
lin yank_1_N = variants {mkN "gringa" ; mkN "gringo" ; mkN "ianque" ; } ; --*
lin yank_2_N = mkN "ianque" ; --*
lin yankee_1_N = variants {mkN "gringa" ; mkN "gringo" ; mkN "ianque" ; } ; --*
lin yankee_3_N = mkN "ianque" ; --*
lin yap_N = variants {mkN "boca" ; mkN "goela" ; } ; --*
lin yard_1_N = mkN "jarda" ; --*
lin yard_2_N = variants {mkN "cercado" ; mkN "jardim" ; mkN "pátio" ; mkN "quintal" ; } ; --*
lin yard_4_N = variants {mkN "mil" ; mkN "milhar" ; mkN "thousand" ; } ; --*
lin yard_5_N = variants {mkN "jarda" ; mkN "yard" ; } ; --*
lin yarn_1_N = variants {mkN "conto" ; mkN "história" ; mkN "narração" ; } ; --*
lin yarn_2_N = variants {mkN "fio" ; mkN "Fio" ; mkN "lã" ; } ; --*
lin yarrow_N = variants {mkN "aquiléia" ; mkN "Milefólio" ; mkN "mil-em-rama" ; mkN "mil-folhas" ; mkN "milfólio" ; mkN "millefolium" ; } ; --*
lin yashmak_1_N = mkN "niqab" ; --*
lin yautia_N = variants {mkN "atrovirens" ; mkN "sagittifolium" ; mkN "Xanthosoma" ; } ; --*
lin yaw_1_V = mkV "escancarar" ; --*
lin yawl_2_N = mkN "yawl" ; --*
lin yawn_1_V = variants {mkV "abrir" ; mkV "bocejar" ; } ; --*
lin yawn_2_V = mkV "escancarar" ; --*
lin yawn_N = mkN "bocejo" ; --*
lin yaws_N = mkN "bouba" ; --*
lin yea_1_Adv = variants {mkAdv "é!" ; mkAdv "isso" ; mkAdv "sim" ; } ; --*
lin year_1_N = mkN "ano" ; --*
lin year_2_N = mkN "ano" ; --*
lin year_3_N = mkN "ano" ; --*
lin year_4_N = variants {mkN "ano" ; mkN "classe" ; mkN "curso" ; } ; --*
lin yearbook_1_N = mkN "anuário" ; --*
lin yearbook_2_N = mkN "anuário" ; --*
lin yearly_A = mkA "anual" ; --*
lin yearly_Adv = variants {mkAdv "anualmente" ; mkAdv "year" ; } ; --*
lin yearn_1_V = variants {mkV "ansiar" ; mkV "desejar" ; mkV "suspirar" ; } ; --*
lin yearn_2_V = variants {mkV "ansiar" ; mkV "desejar" ; } ; --*
lin yearn_3_V = mkV "gostar" ; --*
lin yearning_N = variants {mkN "anelo" ; mkN "anseio" ; mkN "desejo" ; mkN "saudade" ; mkN "suspiro" ; } ; --*
lin yeast_1_N = variants {mkN "fermento" ; mkN "levedura" ; } ; --*
lin yeast_2_N = variants {mkN "fermento" ; mkN "levedura" ; } ; --*
lin yell_1_N = variants {mkN "brado" ; mkN "chamada" ; mkN "grito" ; } ; --*
lin yell_1_V = variants {mkV "berrar" ; mkV "gritar" ; mkV "mugir" ; mkV "out" ; mkV "urrar" ; mkV "vociferar" ; } ; --*
lin yell_2_N = variants {mkN "berro" ; mkN "grito" ; } ; --*
lin yell_2_V = variants {mkV "balar" ; mkV "berrar" ; mkV "bradar" ; mkV "gritar" ; mkV "grunhir" ; } ; --*
lin yellow_1_A = variants {mkA "amarelado" ; mkA "amarelento" ; mkA "amarelo" ; mkA "tirante" ; } ; --*
lin yellow_3_A = mkA "amarelo" ; --*
lin yellow_6_A = mkA "ictérico" ; --*
lin yellowcake_N = variants {mkN "Yellow" ; mkN "Yellowcake" ; } ; --*
lin yellowfin_N = variants {mkN "albacares" ; mkN "Thunnus" ; mkN "tuna" ; } ; --*
lin yellowish_A = variants {mkA "amarelado" ; mkA "amarelento" ; mkA "amarelo" ; mkA "tirante" ; } ; --*
lin yellow_N = variants {mkN "amarelo" ; mkN "Amarelo" ; } ; --*
lin yellowness_N = variants {mkN "amarelo" ; mkN "Amarelo" ; } ; --*
lin yellow_V = mkV "amarelar" ; --*
lin yemeni_A = mkA "iemenita" ; --*
lin yemeni_N = mkN "iemenita" ; --*
lin yemen_PN = variants {mkPN "Iemen" ; mkPN "Iémen" ; mkPN "of" ; } ; --*
lin yen_2_N = variants {mkN "iene" ; mkN "Iéne" ; } ; --*
lin yen_V = variants {mkV "ansiar" ; mkV "desejar" ; } ; --*
lin yep_Interj = ss "yes" ; --*
lin yerevan_PN = variants {mkPN "erevan" ; mkPN "Erevan" ; mkPN "of" ; } ; --*
lin yeshiva_1_N = variants {mkN "Yeshiva" ; mkN "yeshivá" ; } ; --*
lin yes_Interj = ss "yes" ; --*
lin yesterday_1_Adv = variants {mkAdv "de" ; mkAdv "ontem" ; } ; --*
lin yesterday_1_N = mkN "ontem" ; --*
lin yesterday_2_Adv = mkAdv "ontem" ; --*
lin yesterday_2_N = mkN "ontem" ; --*
lin yet_1_Adv = mkAdv "ainda" ; --*
lin yet_1_AdV = mkAdV "ainda" ; --*
lin yet_2_Adv = variants {mkAdv "ainda" ; mkAdv "até" ; mkAdv "far" ; mkAdv "now" ; mkAdv "to" ; mkAdv "yet" ; } ; --*
lin yet_2_AdV = variants {mkAdV "ainda" ; mkAdV "até" ; mkAdV "far" ; mkAdV "now" ; mkAdV "to" ; mkAdV "yet" ; } ; --*
lin yet_3_AdA = mkAdA "ainda" ; --*
lin yet_4_Adv = variants {mkAdv "a" ; mkAdv "time" ; } ; --*
lin yet_4_AdV = variants {mkAdV "a" ; mkAdV "time" ; } ; --*
lin yet_6_Adv = variants {mkAdv "apesar" ; mkAdv "contudo" ; mkAdv "não" ; mkAdv "por" ; mkAdv "porém" ; mkAdv "se" ; mkAdv "so" ; mkAdv "the" ; } ; --*
lin yet_6_AdV = variants {mkAdV "apesar" ; mkAdV "contudo" ; mkAdV "não" ; mkAdV "por" ; mkAdV "porém" ; mkAdV "se" ; mkAdV "so" ; mkAdV "the" ; } ; --*
lin yeti_N = variants {mkN "abominável" ; mkN "snowman" ; } ; --*
lin yew_1_N = mkN "teixo" ; --*
lin yew_2_N = mkN "teixo" ; --*
lin yiddish_N = variants {mkN "iídiche" ; mkN "Língua" ; } ; --*
lin yield_11_V2 = mkV2 (mkV "ceder") ; --*
lin yield_12_V2 = variants {mkV2 (mkV "aceitar") ; mkV2 (mkV "desistir") ; } ; --*
lin yield_13_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "in") ; mkV2 (mkV "sucumbir") ; mkV2 (mkV "under") ; } ; --*
lin yield_1_N = mkN "rendimento" ; --*
lin yield_1_V2 = variants {mkV2 (mkV "dar") ; mkV2 (mkV "prover") ; } ; --*
lin yield_2_N = variants {mkN "receita" ; mkN "renda" ; mkN "rendimento" ; } ; --*
lin yield_3_N = variants {mkN "fruto" ; mkN "produção" ; mkN "produto" ; } ; --*
lin yield_3_V2 = variants {mkV2 (mkV "fazer") ; mkV2 (mkV "gerar") ; } ; --*
lin yield_4_N = mkN "produção" ; --*
lin yield_4_V2 = variants {mkV2 (mkV "ceder") ; mkV2 (mkV "conceder") ; mkV2 (mkV "entregar") ; mkV2 (mkV "submeter-se") ; mkV2 (mkV "sucumbir") ; } ; --*
lin yield_5_V2 = mkV2 (mkV "amolecer") ; --*
lin yield_8_V2 = mkV2 (mkV "conceder") ; --*
lin yield_9_V2 = variants {mkV2 (mkV "bater") ; mkV2 (mkV "morrer") ; mkV2 (mkV "sucumbir") ; } ; --*
lin yob_1_N = variants {mkN "bigorrilha" ; mkN "rufião" ; } ; --*
lin yodel_V2 = mkV2 (mkV "cantar") ; --*
lin yodel_V = mkV "cantar" ; --*
lin yoga_1_N = mkN "ioga" ; --*
lin yoga_2_N = mkN "ioga" ; --*
lin yoghourt_1_N = mkN "iogurte" ; --*
lin yogi_1_N = variants {mkN "Berra" ; mkN "Iogues" ; mkN "Peter" ; } ; --*
lin yoke_2_V2 = variants {mkV2 (mkV "cangar") ; mkV2 (mkV "estar") ; mkV2 (mkV "jungir") ; } ; --*
lin yoke_3_N = variants {mkN "díade" ; mkN "dupla" ; } ; --*
lin yoke_3_V2 = mkV2 (mkV "unir") ; --*
lin yoke_6_N = variants {mkN "canga" ; mkN "jugo" ; } ; --*
lin yoke_7_N = mkN "jugo" ; --*
lin yokel_N = variants {mkN "caipira" ; mkN "rústico" ; } ; --*
lin yokohama_PN = mkPN "Yokohama" ; --*
lin yolk_1_N = variants {mkN "gema" ; mkN "yolk" ; } ; --*
lin yolk_2_N = mkN "gema" ; --*
lin yon_Adv = variants {mkAdv "acolá" ; mkAdv "aí" ; mkAdv "além" ; mkAdv "ali" ; mkAdv "lá" ; } ; --*
lin yonder_Adv = variants {mkAdv "acolá" ; mkAdv "aí" ; mkAdv "além" ; mkAdv "ali" ; mkAdv "lá" ; } ; --*
lin yore_N = mkN "antanho" ; --*
lin york_PN = variants {mkPN "Casa" ; mkPN "of" ; } ; --*
lin yorkshire_PN = mkPN "Yorkshire" ; --*
lin yottabyte_1_N = mkN "Yottabyte" ; --*
lin yottabyte_2_N = mkN "yobibyte" ; --*
lin young_1_A = mkA "jovem" ; --*
lin young_1_N = variants {mkN "cria" ; mkN "filhote" ; mkN "prole" ; } ; --*
lin young_2_A = variants {mkA "contemporâneo" ; mkA "novo" ; } ; --*
lin young_2_N = variants {mkN "Loretta" ; mkN "Young" ; } ; --*
lin young_3_A = mkA "juvenil" ; --*
lin young_3_N = variants {mkN "Moore" ; mkN "Whitney" ; mkN "Young" ; } ; --*
lin young_5_N = variants {mkN "Lester" ; mkN "Willis" ; mkN "Young" ; } ; --*
lin young_6_N = variants {mkN "Edward" ; mkN "Young" ; } ; --*
lin young_8_N = variants {mkN "Brigham" ; mkN "Young" ; } ; --*
lin young_9_N = variants {mkN "jovem" ; mkN "juventude" ; } ; --*
lin younger_A = mkA "mais" ; --*
lin youngness_N = mkN "juventude" ; --*
lin youngster_N = variants {mkN "criança" ; mkN "frite" ; mkN "fry" ; mkN "jovem" ; mkN "menino" ; } ; --*
lin youth_2_N = variants {mkN "jovem" ; mkN "juventude" ; } ; --*
lin youth_3_N = variants {mkN "infância" ; mkN "juventude" ; } ; --*
lin youth_4_N = variants {mkN "adolescência" ; mkN "juventude" ; } ; --*
lin youth_5_N = variants {mkN "days" ; mkN "juventude" ; } ; --*
lin youth_6_N = mkN "juventude" ; --*
lin youthful_A = mkA "juvenil" ; --*
lin youthfulness_N = mkN "juventude" ; --*
lin yowl_1_V = variants {mkV "gritar" ; mkV "mugir" ; mkV "vociferar" ; } ; --*
lin yowl_2_V = mkV "gritar" ; --*
lin yo_yo_N = mkN "ioiô" ; --*
lin yr_N = mkN "ano" ; --*
lin ytterbium_N = variants {mkN "Iterbio" ; mkN "itérbio" ; mkN "number" ; } ; --*
lin yttrium_N = variants {mkN "Itrio" ; mkN "ítrio" ; mkN "number" ; } ; --*
lin yuan_2_N = variants {mkN "Dinastia" ; mkN "dynasty" ; } ; --*
lin yugoslav_1_N = variants {mkN "iugoslavo" ; mkN "Jugoslavo" ; } ; --*
lin yugoslav_A = mkA "jugoslavo" ; --*
lin yugoslavia_1_PN = variants {mkPN "and" ; mkPN "Iugoslávia" ; mkPN "Jugoslávia" ; mkPN "of" ; mkPN "Republic" ; } ; --*
lin yugoslavia_2_PN = variants {mkPN "Iugoslávia" ; mkPN "Jugoslávia" ; } ; --*
lin yugoslavian_1_N = variants {mkN "iugoslavo" ; mkN "Jugoslavo" ; } ; --*
lin yugoslavian_A = mkA "jugoslavo" ; --*
lin yukon_1_PN = variants {mkPN "Rio" ; mkPN "River" ; } ; --*
lin yukon_2_PN = variants {mkPN "Territory" ; mkPN "Yukon" ; } ; --*
lin yule_N = variants {mkN "Ciclo" ; mkN "Natal" ; } ; --*
lin yuletide_N = variants {mkN "Ciclo" ; mkN "Natal" ; } ; --*
lin yuppie_N = mkN "yuppie" ; --*
lin yurt_N = mkN "Ger" ; --*
lin zabaglione_N = variants {mkN "zabaglione" ; mkN "Zabaglione" ; } ; --*
lin zagreb_PN = mkPN "Zagreb" ; --*
lin zaire_2_N = variants {mkN "Congo" ; mkN "Congo-Kinshasa" ; mkN "Republic" ; } ; --*
lin zaire_2_PN = variants {mkPN "Congo" ; mkPN "Congo-Kinshasa" ; mkPN "Republic" ; } ; --*
lin zairean_1_A = mkA "zairense" ; --*
lin zambian_A = variants {mkA "zambiano" ; mkA "zambiense" ; mkA "zâmbio" ; } ; --*
lin zambia_PN = variants {mkPN "of" ; mkPN "Rhodesia" ; mkPN "Zambia" ; } ; --*
lin zany_2_N = variants {mkN "asno" ; mkN "estúpido" ; mkN "idiota" ; } ; --*
lin zap_1_V2 = mkV2 (mkV "atacar") ; --*
lin zap_4_V2 = mkV2 (mkV "botar") ; --*
lin zaragoza_PN = mkPN "Saragoça" ; --*
lin zeal_1_N = variants {mkN "ardor" ; mkN "zelo" ; } ; --*
lin zeal_2_N = mkN "zelo" ; --*
lin zealand_PN = mkPN "Zelândia" ; --*
lin zealotFem_2_N = variants {mkN "fanático" ; mkN "xiita" ; } ; --*
lin zealotMasc_2_N = variants {mkN "fanático" ; mkN "xiita" ; } ; --*
lin zealotry_N = variants {mkN "fanatismo" ; mkN "Fanatismo" ; } ; --*
lin zealous_A = variants {mkA "ardente" ; mkA "ávido" ; mkA "fervente" ; mkA "fervoroso" ; mkA "zeloso" ; } ; --*
lin zeaxanthin_N = mkN "zeaxantina" ; --*
lin zebra_N = variants {mkN "zebra" ; mkN "Zebra" ; } ; --*
lin zebu_N = variants {mkN "zebu" ; mkN "Zebu" ; } ; --*
lin zee_1_N = variants {mkN "z" ; mkN "zê" ; } ; --*
lin zen_1_N = variants {mkN "Buddhism" ; mkN "Zen" ; } ; --*
lin zen_2_N = variants {mkN "Buddhism" ; mkN "Zen" ; } ; --*
lin zen_3_N = variants {mkN "breaker" ; mkN "in" ; mkN "Lucy" ; mkN "pane" ; mkN "toons" ; } ; --*
lin zenith_N = variants {mkN "zénite" ; mkN "Zénite" ; mkN "zênite" ; } ; --*
lin zeolite_N = mkN "zeólito" ; --*
lin zephyr_1_N = variants {mkN "aragem" ; mkN "brisa" ; mkN "maresia" ; mkN "vento" ; mkN "wind" ; mkN "zefir" ; mkN "zéfiro" ; } ; --*
lin zephyr_2_N = mkN "Zéfiro" ; --*
lin zeppelin_1_N = variants {mkN "Ferdinand" ; mkN "Zeppelin" ; } ; --*
lin zeppelin_2_N = variants {mkN "zepelim" ; mkN "Zeppelin" ; } ; --*
lin zero_1_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin zero_1_V = mkV "zerar" ; --*
lin zero_2_N = variants {mkN "número" ; mkN "zero" ; } ; --*
lin zero_3_N = variants {mkN "point" ; mkN "zero" ; } ; --*
lin zeroth_A = mkA "zerésimo" ; --*
lin zeta_N = variants {mkN "dzeta" ; mkN "zeta" ; mkN "Ζ" ; } ; --*
lin zettabyte_1_N = mkN "Zettabyte" ; --*
lin zettabyte_2_N = mkN "zebibyte" ; --*
lin zeugma_N = mkN "zeugma" ; --*
lin zidovudine_N = mkN "zidovudina" ; --*
lin ziggurat_1_N = mkN "zigurate" ; --*
lin zigzag_1_A = mkA "ziguezagueante" ; --*
lin zigzag_N = variants {mkN "ziguezague" ; mkN "Ziguezague" ; } ; --*
lin zigzag_V = mkV "ziguezaguear" ; --*
lin zimbabwean_A = variants {mkA "zimbabuano" ; mkA "zimbabuense" ; } ; --*
lin zimbabwe_PN = variants {mkPN "of" ; mkPN "Rhodesia" ; mkPN "Rodésia" ; mkPN "Zimbabué" ; mkPN "Zimbabwe" ; mkPN "Zimbabwé" ; mkPN "Zimbábwe" ; } ; --*
lin zinc_N = variants {mkN "number" ; mkN "zinco" ; } ; --*
lin zinfandel_1_N = mkN "Zinfandel" ; --*
lin zing_2_N = mkN "dinamismo" ; --*
lin zinnwaldite_N = mkN "zinnwaldita" ; --*
lin zion_1_N = mkN "Sião" ; --*
lin zion_2_N = variants {mkN "Israel" ; mkN "of" ; } ; --*
lin zion_3_N = mkN "utopia" ; --*
lin zionism_2_N = variants {mkN "movement" ; mkN "sionismo" ; } ; --*
lin zionist_1_A = mkA "sionista" ; --*
lin zionist_2_A = mkA "sionista" ; --*
lin zionist_N = mkN "sionista" ; --*
lin zip_1_N = variants {mkN "egg" ; mkN "nada" ; mkN "nenhuma" ; mkN "qualquer" ; mkN "zero" ; } ; --*
lin zip_2_N = variants {mkN "CEP" ; mkN "code" ; mkN "código" ; } ; --*
lin zip_3_N = variants {mkN "energia" ; mkN "vigor" ; } ; --*
lin zip_4_N = variants {mkN "fastener" ; mkN "fecho-relâmpago" ; mkN "Ziper" ; mkN "zíper" ; } ; --*
lin zip_code_N = variants {mkN "CEP" ; mkN "code" ; mkN "código" ; } ; --*
lin zip_fastener_N = variants {mkN "fastener" ; mkN "fecho-relâmpago" ; mkN "Ziper" ; mkN "zíper" ; } ; --*
lin zipper_N = variants {mkN "fastener" ; mkN "fecho-relâmpago" ; mkN "Ziper" ; mkN "zíper" ; } ; --*
lin zip_V = variants {mkV "acelerar" ; mkV "apressar" ; mkV "despachar-se" ; mkV "passar" ; mkV "rapidly" ; } ; --*
lin zirconium_N = variants {mkN "number" ; mkN "Zirconio" ; mkN "Zircónio" ; mkN "zircônio" ; } ; --*
lin zircon_N = variants {mkN "silicate" ; mkN "zircão" ; } ; --*
lin zither_1_N = mkN "cítara" ; --*
lin zodiac_1_N = mkN "zodíaco" ; --*
lin zodiac_2_N = variants {mkN "Zodiaco" ; mkN "zodíaco" ; } ; --*
lin zodiacal_A = mkA "zodiacal" ; --*
lin zombie_3_N = variants {mkN "dead" ; mkN "zumbi" ; } ; --*
lin zombie_5_N = mkN "zumbi" ; --*
lin zone_1_N = mkN "zona" ; --*
lin zone_2_N = variants {mkN "Zona" ; mkN "zone" ; } ; --*
lin zone_3_N = variants {mkN "área" ; mkN "zona" ; } ; --*
lin zoning_N = mkN "delimitação" ; --*
lin zoolatry_N = mkN "zoolatria" ; --*
lin zoological_1_A = mkA "zoológico" ; --*
lin zoological_2_A = mkA "zoológico" ; --*
lin zoologist_N = variants {mkN "scientist" ; mkN "zoologista" ; } ; --*
lin zoology_1_N = variants {mkN "fauna" ; mkN "Fauna" ; } ; --*
lin zoology_2_N = variants {mkN "science" ; mkN "Zoologia" ; } ; --*
lin zoo_N = variants {mkN "garden" ; mkN "zôo" ; mkN "zoológico" ; } ; --*
lin zoonosis_N = variants {mkN "disease" ; mkN "Zoonoses" ; } ; --*
lin zoophilia_1_N = variants {mkN "zoofilia" ; mkN "zoossexualidade" ; } ; --*
lin zoophobia_N = variants {mkN "zoofobia" ; mkN "Zoofobia" ; } ; --*
lin zooplankton_N = mkN "zooplâncton" ; --*
lin zucchini_1_N = variants {mkN "abobrinha" ; mkN "Abobrinha" ; } ; --*
lin zucchini_2_N = mkN "abobrinha" ; --*
lin zurich_PN = mkPN "Zurique" ; --*
lin zydeco_N = mkN "Zydeco" ; --*
lin zygospore_N = mkN "zigósporo" ; --*
lin zygote_N = variants {mkN "ovum" ; mkN "zigoto" ; } ; --*
lin zymosis_1_N = variants {mkN "Fermentacao" ; mkN "fermentação" ; } ; --*
lin zymotic_2_A = mkA "zimótico" ; --*


} ;
